public final class android.graphics.drawable.Icon extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    static final android.graphics.BlendMode DEFAULT_BLEND_MODE;
    public static final int MIN_ASHMEM_ICON_SIZE;
    private static final java.lang.String TAG;
    public static final int TYPE_ADAPTIVE_BITMAP;
    public static final int TYPE_BITMAP;
    public static final int TYPE_DATA;
    public static final int TYPE_RESOURCE;
    public static final int TYPE_URI;
    public static final int TYPE_URI_ADAPTIVE_BITMAP;
    private static final int VERSION_STREAM_SERIALIZER;
    private android.graphics.BlendMode mBlendMode;
    private int mInt1;
    private int mInt2;
    private java.lang.Object mObj1;
    private java.lang.String mString1;
    private android.content.res.ColorStateList mTintList;
    private final int mType;

    static void <clinit>()
    {
        android.graphics.BlendMode $r0;
        android.graphics.drawable.Icon$1 $r1;

        <android.graphics.drawable.Icon: int VERSION_STREAM_SERIALIZER> = 1;

        <android.graphics.drawable.Icon: int TYPE_URI_ADAPTIVE_BITMAP> = 6;

        <android.graphics.drawable.Icon: int TYPE_URI> = 4;

        <android.graphics.drawable.Icon: int TYPE_RESOURCE> = 2;

        <android.graphics.drawable.Icon: int TYPE_DATA> = 3;

        <android.graphics.drawable.Icon: int TYPE_BITMAP> = 1;

        <android.graphics.drawable.Icon: int TYPE_ADAPTIVE_BITMAP> = 5;

        <android.graphics.drawable.Icon: java.lang.String TAG> = "Icon";

        <android.graphics.drawable.Icon: int MIN_ASHMEM_ICON_SIZE> = 131072;

        $r0 = <android.graphics.drawable.Drawable: android.graphics.BlendMode DEFAULT_BLEND_MODE>;

        <android.graphics.drawable.Icon: android.graphics.BlendMode DEFAULT_BLEND_MODE> = $r0;

        $r1 = new android.graphics.drawable.Icon$1;

        specialinvoke $r1.<android.graphics.drawable.Icon$1: void <init>()>();

        <android.graphics.drawable.Icon: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    private void <init>(int)
    {
        android.graphics.drawable.Icon r0;
        int i0;
        android.graphics.BlendMode $r1;

        r0 := @this: android.graphics.drawable.Icon;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <android.graphics.drawable.Drawable: android.graphics.BlendMode DEFAULT_BLEND_MODE>;

        r0.<android.graphics.drawable.Icon: android.graphics.BlendMode mBlendMode> = $r1;

        r0.<android.graphics.drawable.Icon: int mType> = i0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.graphics.drawable.Icon r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        java.lang.String $r1, $r13, $r20, $r25, r30;
        android.graphics.BlendMode $r2;
        android.os.Parcelable$Creator $r3, $r14;
        java.lang.Object $r4, $r15;
        android.content.res.ColorStateList $r5;
        java.lang.StringBuilder $r6, $r17;
        java.lang.RuntimeException $r12, $r24;
        android.graphics.Bitmap $r16;
        java.lang.Class $r19;
        android.os.Parcel r26;
        byte[] r28;

        r0 := @this: android.graphics.drawable.Icon;

        r26 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke r26.<android.os.Parcel: int readInt()>();

        specialinvoke r0.<android.graphics.drawable.Icon: void <init>(int)>($i0);

        $i1 = r0.<android.graphics.drawable.Icon: int mType>;

        tableswitch($i1)
        {
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label6;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid ");

        $r19 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type in parcel: ");

        $i5 = r0.<android.graphics.drawable.Icon: int mType>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r24 = new java.lang.RuntimeException;

        $r25 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label2:
        $r1 = virtualinvoke r26.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.graphics.drawable.Icon: java.lang.String mString1> = $r1;

        goto label7;

     label3:
        i6 = virtualinvoke r26.<android.os.Parcel: int readInt()>();

        r28 = virtualinvoke r26.<android.os.Parcel: byte[] readBlob()>();

        $i3 = lengthof r28;

        if i6 != $i3 goto label4;

        r0.<android.graphics.drawable.Icon: int mInt1> = i6;

        r0.<android.graphics.drawable.Icon: java.lang.Object mObj1> = r28;

        goto label7;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("internal unparceling error: blob length (");

        $i4 = lengthof r28;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") != expected length (");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = new java.lang.RuntimeException;

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label5:
        r30 = virtualinvoke r26.<android.os.Parcel: java.lang.String readString()>();

        i7 = virtualinvoke r26.<android.os.Parcel: int readInt()>();

        r0.<android.graphics.drawable.Icon: java.lang.String mString1> = r30;

        r0.<android.graphics.drawable.Icon: int mInt1> = i7;

        goto label7;

     label6:
        $r14 = <android.graphics.Bitmap: android.os.Parcelable$Creator CREATOR>;

        $r15 = interfaceinvoke $r14.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r26);

        $r16 = (android.graphics.Bitmap) $r15;

        r0.<android.graphics.drawable.Icon: java.lang.Object mObj1> = $r16;

     label7:
        $i8 = virtualinvoke r26.<android.os.Parcel: int readInt()>();

        if $i8 != 1 goto label8;

        $r3 = <android.content.res.ColorStateList: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r26);

        $r5 = (android.content.res.ColorStateList) $r4;

        r0.<android.graphics.drawable.Icon: android.content.res.ColorStateList mTintList> = $r5;

     label8:
        $i2 = virtualinvoke r26.<android.os.Parcel: int readInt()>();

        $r2 = staticinvoke <android.graphics.BlendMode: android.graphics.BlendMode fromValue(int)>($i2);

        r0.<android.graphics.drawable.Icon: android.graphics.BlendMode mBlendMode> = $r2;

        return;
    }

    void <init>(android.os.Parcel, android.graphics.drawable.Icon$1)
    {
        android.graphics.drawable.Icon r0;
        android.os.Parcel r1;
        android.graphics.drawable.Icon$1 r2;

        r0 := @this: android.graphics.drawable.Icon;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.graphics.drawable.Icon$1;

        specialinvoke r0.<android.graphics.drawable.Icon: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public static android.graphics.drawable.Icon createFromStream(java.io.InputStream) throws java.io.IOException
    {
        int i0, $i1, $i4;
        java.io.DataInputStream $r1;
        byte $b2;
        java.lang.String $r2, $r6, $r9;
        android.graphics.drawable.Icon $r3, $r5, $r7, $r8, $r10, $r12;
        android.graphics.Bitmap $r4, $r11;
        java.io.InputStream r13;
        byte[] r14;

        r13 := @parameter0: java.io.InputStream;

        $r1 = new java.io.DataInputStream;

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r13);

        $i1 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

        if $i1 < 1 goto label8;

        $b2 = virtualinvoke $r1.<java.io.DataInputStream: byte readByte()>();

        tableswitch($b2)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        goto label8;

     label2:
        $r2 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(java.lang.String)>($r2);

        return $r3;

     label3:
        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r1);

        $r5 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>($r4);

        return $r5;

     label4:
        $r6 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r7 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>($r6);

        return $r7;

     label5:
        i0 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

        r14 = newarray (byte)[i0];

        virtualinvoke $r1.<java.io.DataInputStream: int read(byte[],int,int)>(r14, 0, i0);

        $r8 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>(r14, 0, i0);

        return $r8;

     label6:
        $r9 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        $i4 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

        $r10 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>($r9, $i4);

        return $r10;

     label7:
        $r11 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r1);

        $r12 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>($r11);

        return $r12;

     label8:
        return null;
    }

    public static android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        java.lang.IllegalArgumentException $r2;
        android.graphics.drawable.Icon $r3;

        r0 := @parameter0: android.graphics.Bitmap;

        if r0 == null goto label1;

        $r3 = new android.graphics.drawable.Icon;

        specialinvoke $r3.<android.graphics.drawable.Icon: void <init>(int)>(5);

        specialinvoke $r3.<android.graphics.drawable.Icon: void setBitmap(android.graphics.Bitmap)>(r0);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bitmap must not be null.");

        throw $r2;
    }

    public static android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2;
        android.graphics.drawable.Icon $r3;

        r0 := @parameter0: android.net.Uri;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<android.net.Uri: java.lang.String toString()>();

        $r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(java.lang.String)>($r2);

        return $r3;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri must not be null.");

        throw $r1;
    }

    public static android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;
        android.graphics.drawable.Icon $r3;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r3 = new android.graphics.drawable.Icon;

        specialinvoke $r3.<android.graphics.drawable.Icon: void <init>(int)>(6);

        $r3.<android.graphics.drawable.Icon: java.lang.String mString1> = r0;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri must not be null.");

        throw $r2;
    }

    public static android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        java.lang.IllegalArgumentException $r2;
        android.graphics.drawable.Icon $r3;

        r0 := @parameter0: android.graphics.Bitmap;

        if r0 == null goto label1;

        $r3 = new android.graphics.drawable.Icon;

        specialinvoke $r3.<android.graphics.drawable.Icon: void <init>(int)>(1);

        specialinvoke $r3.<android.graphics.drawable.Icon: void setBitmap(android.graphics.Bitmap)>(r0);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bitmap must not be null.");

        throw $r2;
    }

    public static android.graphics.drawable.Icon createWithContentUri(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2;
        android.graphics.drawable.Icon $r3;

        r0 := @parameter0: android.net.Uri;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<android.net.Uri: java.lang.String toString()>();

        $r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>($r2);

        return $r3;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri must not be null.");

        throw $r1;
    }

    public static android.graphics.drawable.Icon createWithContentUri(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;
        android.graphics.drawable.Icon $r3;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r3 = new android.graphics.drawable.Icon;

        specialinvoke $r3.<android.graphics.drawable.Icon: void <init>(int)>(4);

        $r3.<android.graphics.drawable.Icon: java.lang.String mString1> = r0;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri must not be null.");

        throw $r2;
    }

    public static android.graphics.drawable.Icon createWithData(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        java.lang.IllegalArgumentException $r2;
        android.graphics.drawable.Icon $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 == null goto label1;

        $r3 = new android.graphics.drawable.Icon;

        specialinvoke $r3.<android.graphics.drawable.Icon: void <init>(int)>(3);

        $r3.<android.graphics.drawable.Icon: java.lang.Object mObj1> = r0;

        $r3.<android.graphics.drawable.Icon: int mInt1> = i1;

        $r3.<android.graphics.drawable.Icon: int mInt2> = i0;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Data must not be null.");

        throw $r2;
    }

    public static android.graphics.drawable.Icon createWithFilePath(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;
        android.graphics.drawable.Icon $r3;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r3 = new android.graphics.drawable.Icon;

        specialinvoke $r3.<android.graphics.drawable.Icon: void <init>(int)>(4);

        $r3.<android.graphics.drawable.Icon: java.lang.String mString1> = r0;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path must not be null.");

        throw $r2;
    }

    public static android.graphics.drawable.Icon createWithResource(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        java.lang.IllegalArgumentException $r2;
        android.graphics.drawable.Icon $r3;
        java.lang.String $r4;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        $r3 = new android.graphics.drawable.Icon;

        specialinvoke $r3.<android.graphics.drawable.Icon: void <init>(int)>(2);

        $r3.<android.graphics.drawable.Icon: int mInt1> = i0;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3.<android.graphics.drawable.Icon: java.lang.String mString1> = $r4;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Context must not be null.");

        throw $r2;
    }

    public static android.graphics.drawable.Icon createWithResource(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.IllegalArgumentException $r2;
        android.graphics.drawable.Icon $r3;
        java.lang.String $r4;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        $r3 = new android.graphics.drawable.Icon;

        specialinvoke $r3.<android.graphics.drawable.Icon: void <init>(int)>(2);

        $r3.<android.graphics.drawable.Icon: int mInt1> = i0;

        $r4 = virtualinvoke r0.<android.content.res.Resources: java.lang.String getResourcePackageName(int)>(i0);

        $r3.<android.graphics.drawable.Icon: java.lang.String mString1> = $r4;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Resource must not be null.");

        throw $r2;
    }

    public static android.graphics.drawable.Icon createWithResource(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        java.lang.IllegalArgumentException $r2;
        android.graphics.drawable.Icon $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        $r3 = new android.graphics.drawable.Icon;

        specialinvoke $r3.<android.graphics.drawable.Icon: void <init>(int)>(2);

        $r3.<android.graphics.drawable.Icon: int mInt1> = i0;

        $r3.<android.graphics.drawable.Icon: java.lang.String mString1> = r0;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Resource package name must not be null.");

        throw $r2;
    }

    private java.io.InputStream getUriInputStream(android.content.Context)
    {
        android.graphics.drawable.Icon r0;
        android.net.Uri r1;
        java.lang.String $r2, $r4, $r5, $r11, $r16, r18;
        boolean $z0, $z1;
        android.content.ContentResolver $r3;
        java.io.FileInputStream $r6;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8, $r13;
        java.lang.Throwable $r12;
        android.content.Context r17;
        java.io.File r19;
        java.io.InputStream r23;

        r0 := @this: android.graphics.drawable.Icon;

        r17 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.graphics.drawable.Icon: android.net.Uri getUri()>();

        r18 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $r2 = "content";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z0 != 0 goto label4;

        $r4 = "file";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z1 == 0 goto label1;

        goto label4;

     label1:
        r19 = new java.io.File;

        $r5 = r0.<android.graphics.drawable.Icon: java.lang.String mString1>;

        specialinvoke r19.<java.io.File: void <init>(java.lang.String)>($r5);

        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>(r19);

     label2:
        return $r6;

     label3:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load image from path: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Icon", $r16, $r12);

        goto label7;

     label4:
        $r3 = virtualinvoke r17.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r23 = virtualinvoke $r3.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r1);

     label5:
        return r23;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load image from URI: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Icon", $r11, $r7);

     label7:
        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    {
        android.graphics.drawable.Icon r0;
        android.content.pm.PackageManager r1;
        int $i0, $i1, $i2, $i3, $i6;
        android.graphics.drawable.AdaptiveIconDrawable $r2, $r6;
        android.graphics.drawable.BitmapDrawable $r3, $r7, $r10, $r13, $r21;
        android.content.res.Resources $r4, $r8, $r11, $r14, $r17, $r19, $r20, $r22, $r39;
        android.graphics.Bitmap $r5, $r9, $r12, $r16, $r23;
        byte[] $r15;
        boolean $z0, $z1;
        java.lang.String $r18, $r27, $r28, $r31, r35, r36;
        java.lang.RuntimeException $r24;
        java.lang.Object[] $r25, $r30;
        java.lang.Integer $r26;
        android.content.pm.PackageManager$NameNotFoundException $r29;
        android.content.Context r32;
        java.io.InputStream r33, r34;
        android.content.pm.ApplicationInfo r37;
        android.content.res.Resources$Theme $r40;
        android.graphics.drawable.Drawable r41;

        r0 := @this: android.graphics.drawable.Icon;

        r32 := @parameter0: android.content.Context;

        $i0 = r0.<android.graphics.drawable.Icon: int mType>;

        tableswitch($i0)
        {
            case 1: goto label18;
            case 2: goto label06;
            case 3: goto label05;
            case 4: goto label04;
            case 5: goto label03;
            case 6: goto label02;
            default: goto label01;
        };

     label01:
        goto label19;

     label02:
        r33 = specialinvoke r0.<android.graphics.drawable.Icon: java.io.InputStream getUriInputStream(android.content.Context)>(r32);

        if r33 == null goto label19;

        $r2 = new android.graphics.drawable.AdaptiveIconDrawable;

        $r3 = new android.graphics.drawable.BitmapDrawable;

        $r4 = virtualinvoke r32.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r33);

        specialinvoke $r3.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r4, $r5);

        specialinvoke $r2.<android.graphics.drawable.AdaptiveIconDrawable: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(null, $r3);

        return $r2;

     label03:
        $r6 = new android.graphics.drawable.AdaptiveIconDrawable;

        $r7 = new android.graphics.drawable.BitmapDrawable;

        $r8 = virtualinvoke r32.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        specialinvoke $r7.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r8, $r9);

        specialinvoke $r6.<android.graphics.drawable.AdaptiveIconDrawable: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(null, $r7);

        return $r6;

     label04:
        r34 = specialinvoke r0.<android.graphics.drawable.Icon: java.io.InputStream getUriInputStream(android.content.Context)>(r32);

        if r34 == null goto label19;

        $r10 = new android.graphics.drawable.BitmapDrawable;

        $r11 = virtualinvoke r32.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r34);

        specialinvoke $r10.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r11, $r12);

        return $r10;

     label05:
        $r13 = new android.graphics.drawable.BitmapDrawable;

        $r14 = virtualinvoke r32.<android.content.Context: android.content.res.Resources getResources()>();

        $r15 = virtualinvoke r0.<android.graphics.drawable.Icon: byte[] getDataBytes()>();

        $i1 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataOffset()>();

        $i2 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataLength()>();

        $r16 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r15, $i1, $i2);

        specialinvoke $r13.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r14, $r16);

        return $r13;

     label06:
        $r17 = virtualinvoke r0.<android.graphics.drawable.Icon: android.content.res.Resources getResources()>();

        if $r17 != null goto label15;

        r35 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        r36 = r35;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r35);

        if $z0 == 0 goto label07;

        r36 = virtualinvoke r32.<android.content.Context: java.lang.String getPackageName()>();

     label07:
        $r18 = "android";

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z1 == 0 goto label08;

        $r20 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r0.<android.graphics.drawable.Icon: java.lang.Object mObj1> = $r20;

        goto label15;

     label08:
        r1 = virtualinvoke r32.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label09:
        r37 = virtualinvoke r1.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r36, 8192);

     label10:
        if r37 == null goto label13;

     label11:
        $r19 = virtualinvoke r1.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>(r37);

        r0.<android.graphics.drawable.Icon: java.lang.Object mObj1> = $r19;

     label12:
        goto label15;

     label13:
        goto label19;

     label14:
        $r29 := @caughtexception;

        $r30 = newarray (java.lang.Object)[2];

        $r30[0] = r36;

        $r30[1] = r0;

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to find pkg=%s for icon %s", $r30);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Icon", $r31, $r29);

        goto label19;

     label15:
        $r39 = virtualinvoke r0.<android.graphics.drawable.Icon: android.content.res.Resources getResources()>();

        $i6 = virtualinvoke r0.<android.graphics.drawable.Icon: int getResId()>();

        $r40 = virtualinvoke r32.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r41 = virtualinvoke $r39.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i6, $r40);

     label16:
        return r41;

     label17:
        $r24 := @caughtexception;

        $r25 = newarray (java.lang.Object)[2];

        $i3 = virtualinvoke r0.<android.graphics.drawable.Icon: int getResId()>();

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r25[0] = $r26;

        $r27 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        $r25[1] = $r27;

        $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to load resource 0x%08x from pkg=%s", $r25);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Icon", $r28, $r24);

        goto label19;

     label18:
        $r21 = new android.graphics.drawable.BitmapDrawable;

        $r22 = virtualinvoke r32.<android.content.Context: android.content.res.Resources getResources()>();

        $r23 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        specialinvoke $r21.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r22, $r23);

        return $r21;

     label19:
        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label14;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label14;
        catch java.lang.RuntimeException from label15 to label16 with label17;
    }

    public static android.graphics.Bitmap scaleDownIfNecessary(android.graphics.Bitmap, int, int)
    {
        android.graphics.Bitmap r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        i3 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        if i2 > i0 goto label1;

        r1 = r0;

        if i3 <= i1 goto label2;

     label1:
        $f2 = (float) i0;

        $f1 = (float) i2;

        $f6 = $f2 / $f1;

        $f4 = (float) i1;

        $f3 = (float) i3;

        $f5 = $f4 / $f3;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f6, $f5);

        $f7 = (float) i2;

        $f8 = $f7 * f0;

        $i4 = (int) $f8;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i4);

        $f9 = (float) i3;

        $f10 = $f9 * f0;

        $i6 = (int) $f10;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i6);

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r0, $i5, $i7, 1);

     label2:
        return r1;
    }

    private void setBitmap(android.graphics.Bitmap)
    {
        android.graphics.drawable.Icon r0;
        android.graphics.Bitmap r1;

        r0 := @this: android.graphics.drawable.Icon;

        r1 := @parameter0: android.graphics.Bitmap;

        r0.<android.graphics.drawable.Icon: java.lang.Object mObj1> = r1;

        return;
    }

    private static final java.lang.String typeToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        return "UNKNOWN";

     label2:
        return "URI_MASKABLE";

     label3:
        return "BITMAP_MASKABLE";

     label4:
        return "URI";

     label5:
        return "DATA";

     label6:
        return "RESOURCE";

     label7:
        return "BITMAP";
    }

    public void convertToAshmem()
    {
        android.graphics.drawable.Icon r0;
        int i0, $i1;
        android.graphics.Bitmap $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.graphics.drawable.Icon;

        i0 = r0.<android.graphics.drawable.Icon: int mType>;

        if i0 == 1 goto label1;

        if i0 != 5 goto label2;

     label1:
        $r1 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        $z0 = virtualinvoke $r1.<android.graphics.Bitmap: boolean isMutable()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        $i1 = virtualinvoke $r2.<android.graphics.Bitmap: int getAllocationByteCount()>();

        if $i1 < 131072 goto label2;

        $r3 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        $r4 = virtualinvoke $r3.<android.graphics.Bitmap: android.graphics.Bitmap createAshmemBitmap()>();

        specialinvoke r0.<android.graphics.drawable.Icon: void setBitmap(android.graphics.Bitmap)>($r4);

     label2:
        return;
    }

    public int describeContents()
    {
        android.graphics.drawable.Icon r0;
        int i0;
        byte b1;

        r0 := @this: android.graphics.drawable.Icon;

        i0 = r0.<android.graphics.drawable.Icon: int mType>;

        b1 = 1;

        if i0 == 1 goto label2;

        if i0 == 5 goto label2;

        if i0 != 3 goto label1;

        goto label2;

     label1:
        b1 = 0;

        goto label2;

     label2:
        return b1;
    }

    public android.graphics.Bitmap getBitmap()
    {
        android.graphics.drawable.Icon r0;
        int i0;
        java.lang.Object $r2;
        android.graphics.Bitmap $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8;

        r0 := @this: android.graphics.drawable.Icon;

        i0 = r0.<android.graphics.drawable.Icon: int mType>;

        if i0 == 1 goto label2;

        if i0 != 5 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getBitmap() on ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label2:
        $r2 = r0.<android.graphics.drawable.Icon: java.lang.Object mObj1>;

        $r3 = (android.graphics.Bitmap) $r2;

        return $r3;
    }

    public byte[] getDataBytes()
    {
        android.graphics.drawable.Icon r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        byte[] r8;

        r0 := @this: android.graphics.drawable.Icon;

        $i0 = r0.<android.graphics.drawable.Icon: int mType>;

        if $i0 != 3 goto label6;

        entermonitor r0;

     label1:
        $r6 = r0.<android.graphics.drawable.Icon: java.lang.Object mObj1>;

        r8 = (byte[]) $r6;

        exitmonitor r0;

     label2:
        return r8;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r7;

     label6:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getDataBytes() on ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getDataLength()
    {
        android.graphics.drawable.Icon r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.graphics.drawable.Icon;

        $i1 = r0.<android.graphics.drawable.Icon: int mType>;

        if $i1 != 3 goto label6;

        entermonitor r0;

     label1:
        i0 = r0.<android.graphics.drawable.Icon: int mInt1>;

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r6;

     label6:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getDataLength() on ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getDataOffset()
    {
        android.graphics.drawable.Icon r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.graphics.drawable.Icon;

        $i1 = r0.<android.graphics.drawable.Icon: int mType>;

        if $i1 != 3 goto label6;

        entermonitor r0;

     label1:
        i0 = r0.<android.graphics.drawable.Icon: int mInt2>;

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r6;

     label6:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getDataOffset() on ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getResId()
    {
        android.graphics.drawable.Icon r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6;

        r0 := @this: android.graphics.drawable.Icon;

        $i0 = r0.<android.graphics.drawable.Icon: int mType>;

        if $i0 != 2 goto label1;

        $i1 = r0.<android.graphics.drawable.Icon: int mInt1>;

        return $i1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getResId() on ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public java.lang.String getResPackage()
    {
        android.graphics.drawable.Icon r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, $r7;

        r0 := @this: android.graphics.drawable.Icon;

        $i0 = r0.<android.graphics.drawable.Icon: int mType>;

        if $i0 != 2 goto label1;

        $r7 = r0.<android.graphics.drawable.Icon: java.lang.String mString1>;

        return $r7;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getResPackage() on ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.content.res.Resources getResources()
    {
        android.graphics.drawable.Icon r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6;
        java.lang.Object $r7;
        android.content.res.Resources $r8;

        r0 := @this: android.graphics.drawable.Icon;

        $i0 = r0.<android.graphics.drawable.Icon: int mType>;

        if $i0 != 2 goto label1;

        $r7 = r0.<android.graphics.drawable.Icon: java.lang.Object mObj1>;

        $r8 = (android.content.res.Resources) $r7;

        return $r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getResources() on ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public int getType()
    {
        android.graphics.drawable.Icon r0;
        int $i0;

        r0 := @this: android.graphics.drawable.Icon;

        $i0 = r0.<android.graphics.drawable.Icon: int mType>;

        return $i0;
    }

    public android.net.Uri getUri()
    {
        android.graphics.drawable.Icon r0;
        java.lang.String $r1;
        android.net.Uri $r2;

        r0 := @this: android.graphics.drawable.Icon;

        $r1 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getUriString()>();

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getUriString()
    {
        android.graphics.drawable.Icon r0;
        int i0;
        java.lang.String $r2, $r7;
        java.lang.StringBuilder $r3;
        java.lang.IllegalStateException $r6;

        r0 := @this: android.graphics.drawable.Icon;

        i0 = r0.<android.graphics.drawable.Icon: int mType>;

        if i0 == 4 goto label2;

        if i0 != 6 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getUriString() on ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        $r2 = r0.<android.graphics.drawable.Icon: java.lang.String mString1>;

        return $r2;
    }

    public boolean hasTint()
    {
        android.graphics.drawable.Icon r0;
        android.content.res.ColorStateList $r1;
        android.graphics.BlendMode $r2, $r3;
        boolean z0;

        r0 := @this: android.graphics.drawable.Icon;

        $r1 = r0.<android.graphics.drawable.Icon: android.content.res.ColorStateList mTintList>;

        if $r1 != null goto label2;

        $r3 = r0.<android.graphics.drawable.Icon: android.graphics.BlendMode mBlendMode>;

        $r2 = <android.graphics.drawable.Icon: android.graphics.BlendMode DEFAULT_BLEND_MODE>;

        if $r3 == $r2 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    {
        android.graphics.drawable.Icon r0;
        android.content.res.ColorStateList $r1, $r3;
        android.graphics.BlendMode $r4, $r5, $r6;
        android.content.Context r7;
        android.graphics.drawable.Drawable r8;

        r0 := @this: android.graphics.drawable.Icon;

        r7 := @parameter0: android.content.Context;

        r8 = specialinvoke r0.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>(r7);

        if r8 == null goto label2;

        $r1 = r0.<android.graphics.drawable.Icon: android.content.res.ColorStateList mTintList>;

        if $r1 != null goto label1;

        $r6 = r0.<android.graphics.drawable.Icon: android.graphics.BlendMode mBlendMode>;

        $r5 = <android.graphics.drawable.Icon: android.graphics.BlendMode DEFAULT_BLEND_MODE>;

        if $r6 == $r5 goto label2;

     label1:
        virtualinvoke r8.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r3 = r0.<android.graphics.drawable.Icon: android.content.res.ColorStateList mTintList>;

        virtualinvoke r8.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r3);

        $r4 = r0.<android.graphics.drawable.Icon: android.graphics.BlendMode mBlendMode>;

        virtualinvoke r8.<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)>($r4);

     label2:
        return r8;
    }

    public android.graphics.drawable.Drawable loadDrawableAsUser(android.content.Context, int)
    {
        android.graphics.drawable.Icon r0;
        android.content.Context r1;
        int i0, $i1;
        boolean $z0, $z1;
        android.content.res.Resources $r2, $r4;
        java.lang.String $r3, $r7, $r9, r10, r11;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.Object[] $r6;
        java.lang.Integer $r8;
        android.content.pm.PackageManager r12;
        android.graphics.drawable.Drawable $r14;

        r0 := @this: android.graphics.drawable.Icon;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $i1 = r0.<android.graphics.drawable.Icon: int mType>;

        if $i1 != 2 goto label5;

        r10 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        r11 = r10;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r10);

        if $z0 == 0 goto label1;

        r11 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.Icon: android.content.res.Resources getResources()>();

        if $r2 != null goto label5;

        $r3 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z1 != 0 goto label5;

        r12 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label2:
        $r4 = virtualinvoke r12.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)>(r11, i0);

        r0.<android.graphics.drawable.Icon: java.lang.Object mObj1> = $r4;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[1] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to find pkg=%s user=%d", $r6);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Icon", $r9, $r5);

     label5:
        $r14 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>(r1);

        return $r14;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    public void loadDrawableAsync(android.content.Context, android.graphics.drawable.Icon$OnDrawableLoadedListener, android.os.Handler)
    {
        android.graphics.drawable.Icon r0;
        android.content.Context r1;
        android.graphics.drawable.Icon$OnDrawableLoadedListener r2;
        android.os.Handler r3;
        android.graphics.drawable.Icon$LoadDrawableTask $r4;

        r0 := @this: android.graphics.drawable.Icon;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.graphics.drawable.Icon$OnDrawableLoadedListener;

        r3 := @parameter2: android.os.Handler;

        $r4 = new android.graphics.drawable.Icon$LoadDrawableTask;

        specialinvoke $r4.<android.graphics.drawable.Icon$LoadDrawableTask: void <init>(android.graphics.drawable.Icon,android.content.Context,android.os.Handler,android.graphics.drawable.Icon$OnDrawableLoadedListener)>(r0, r1, r3, r2);

        virtualinvoke $r4.<android.graphics.drawable.Icon$LoadDrawableTask: void runAsync()>();

        return;
    }

    public void loadDrawableAsync(android.content.Context, android.os.Message)
    {
        android.graphics.drawable.Icon r0;
        android.content.Context r1;
        android.os.Message r2;
        android.os.Handler $r3;
        java.lang.IllegalArgumentException $r4;
        android.graphics.drawable.Icon$LoadDrawableTask $r5;

        r0 := @this: android.graphics.drawable.Icon;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Message;

        $r3 = virtualinvoke r2.<android.os.Message: android.os.Handler getTarget()>();

        if $r3 == null goto label1;

        $r5 = new android.graphics.drawable.Icon$LoadDrawableTask;

        specialinvoke $r5.<android.graphics.drawable.Icon$LoadDrawableTask: void <init>(android.graphics.drawable.Icon,android.content.Context,android.os.Message)>(r0, r1, r2);

        virtualinvoke $r5.<android.graphics.drawable.Icon$LoadDrawableTask: void runAsync()>();

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback message must have a target handler");

        throw $r4;
    }

    public boolean sameAs(android.graphics.drawable.Icon)
    {
        android.graphics.drawable.Icon r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r2, $r3, $r6, $r7;
        boolean $z2, $z3, $z4, z5, z6, z7;
        byte[] $r4, $r5;
        android.graphics.Bitmap $r8, $r9;

        r0 := @this: android.graphics.drawable.Icon;

        r1 := @parameter0: android.graphics.drawable.Icon;

        z5 = 1;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $i0 = r0.<android.graphics.drawable.Icon: int mType>;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Icon: int getType()>();

        if $i0 == $i1 goto label02;

        return 0;

     label02:
        $i2 = r0.<android.graphics.drawable.Icon: int mType>;

        tableswitch($i2)
        {
            case 1: goto label11;
            case 2: goto label08;
            case 3: goto label05;
            case 4: goto label04;
            case 5: goto label11;
            case 6: goto label04;
            default: goto label03;
        };

     label03:
        return 0;

     label04:
        $r2 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getUriString()>();

        $r3 = virtualinvoke r1.<android.graphics.drawable.Icon: java.lang.String getUriString()>();

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $z2;

     label05:
        $i3 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataLength()>();

        $i4 = virtualinvoke r1.<android.graphics.drawable.Icon: int getDataLength()>();

        if $i3 != $i4 goto label06;

        $i5 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataOffset()>();

        $i6 = virtualinvoke r1.<android.graphics.drawable.Icon: int getDataOffset()>();

        if $i5 != $i6 goto label06;

        $r4 = virtualinvoke r0.<android.graphics.drawable.Icon: byte[] getDataBytes()>();

        $r5 = virtualinvoke r1.<android.graphics.drawable.Icon: byte[] getDataBytes()>();

        $z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r5);

        if $z3 == 0 goto label06;

        goto label07;

     label06:
        z5 = 0;

     label07:
        return z5;

     label08:
        $i7 = virtualinvoke r0.<android.graphics.drawable.Icon: int getResId()>();

        $i8 = virtualinvoke r1.<android.graphics.drawable.Icon: int getResId()>();

        if $i7 != $i8 goto label09;

        $r6 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        $r7 = virtualinvoke r1.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z4 == 0 goto label09;

        z6 = 1;

        goto label10;

     label09:
        z6 = 0;

     label10:
        return z6;

     label11:
        $r8 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        $r9 = virtualinvoke r1.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        if $r8 != $r9 goto label12;

        z7 = 1;

        goto label13;

     label12:
        z7 = 0;

     label13:
        return z7;
    }

    public void scaleDownIfNecessary(int, int)
    {
        android.graphics.drawable.Icon r0;
        int i0, i1, i2;
        android.graphics.Bitmap $r1, $r2;

        r0 := @this: android.graphics.drawable.Icon;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = r0.<android.graphics.drawable.Icon: int mType>;

        if i2 == 1 goto label1;

        if i2 == 5 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        $r2 = staticinvoke <android.graphics.drawable.Icon: android.graphics.Bitmap scaleDownIfNecessary(android.graphics.Bitmap,int,int)>($r1, i0, i1);

        specialinvoke r0.<android.graphics.drawable.Icon: void setBitmap(android.graphics.Bitmap)>($r2);

        return;
    }

    public android.graphics.drawable.Icon setTint(int)
    {
        android.graphics.drawable.Icon r0, $r2;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.graphics.drawable.Icon;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        $r2 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>($r1);

        return $r2;
    }

    public android.graphics.drawable.Icon setTintBlendMode(android.graphics.BlendMode)
    {
        android.graphics.drawable.Icon r0;
        android.graphics.BlendMode r1;

        r0 := @this: android.graphics.drawable.Icon;

        r1 := @parameter0: android.graphics.BlendMode;

        r0.<android.graphics.drawable.Icon: android.graphics.BlendMode mBlendMode> = r1;

        return r0;
    }

    public android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.Icon r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.graphics.drawable.Icon;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.graphics.drawable.Icon: android.content.res.ColorStateList mTintList> = r1;

        return r0;
    }

    public android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.drawable.Icon r0;
        android.graphics.PorterDuff$Mode r1;
        int $i0;
        android.graphics.BlendMode $r2;

        r0 := @this: android.graphics.drawable.Icon;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $i0 = r1.<android.graphics.PorterDuff$Mode: int nativeInt>;

        $r2 = staticinvoke <android.graphics.BlendMode: android.graphics.BlendMode fromValue(int)>($i0);

        r0.<android.graphics.drawable.Icon: android.graphics.BlendMode mBlendMode> = $r2;

        return r0;
    }

    public java.lang.String toString()
    {
        android.graphics.drawable.Icon r0;
        java.lang.StringBuilder r1, $r3;
        int[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.lang.String $r4, $r6, $r11, $r19, $r26, $r31, r40;
        android.graphics.BlendMode $r8, $r9, $r13;
        android.content.res.ColorStateList $r16, $r39;
        java.lang.Object[] $r17, $r29;
        java.lang.Integer $r18, $r30;
        android.graphics.Bitmap $r34, $r37;

        r0 := @this: android.graphics.drawable.Icon;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Icon(typ=");

        $i1 = r0.<android.graphics.drawable.Icon: int mType>;

        $r4 = staticinvoke <android.graphics.drawable.Icon: java.lang.String typeToString(int)>($i1);

        r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i2 = r0.<android.graphics.drawable.Icon: int mType>;

        tableswitch($i2)
        {
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label5;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        goto label6;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uri=");

        $r6 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getUriString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        goto label6;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len=");

        $i4 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataLength()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $i5 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataOffset()>();

        if $i5 == 0 goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" off=");

        $i6 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataOffset()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        goto label6;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        $r26 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $r29 = newarray (java.lang.Object)[1];

        $i7 = virtualinvoke r0.<android.graphics.drawable.Icon: int getResId()>();

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r29[0] = $r30;

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%08x", $r29);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        goto label6;

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=");

        $r34 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        $i8 = virtualinvoke $r34.<android.graphics.Bitmap: int getWidth()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r37 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        $i9 = virtualinvoke $r37.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

     label6:
        $r39 = r0.<android.graphics.drawable.Icon: android.content.res.ColorStateList mTintList>;

        if $r39 == null goto label8;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tint=");

        r40 = "";

        $r16 = r0.<android.graphics.drawable.Icon: android.content.res.ColorStateList mTintList>;

        r2 = virtualinvoke $r16.<android.content.res.ColorStateList: int[] getColors()>();

        i0 = lengthof r2;

        i10 = 0;

     label7:
        if i10 >= i0 goto label8;

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = r40;

        $i3 = r2[i10];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r17[1] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s0x%08x", $r17);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        r40 = "|";

        i10 = i10 + 1;

        goto label7;

     label8:
        $r9 = r0.<android.graphics.drawable.Icon: android.graphics.BlendMode mBlendMode>;

        $r8 = <android.graphics.drawable.Icon: android.graphics.BlendMode DEFAULT_BLEND_MODE>;

        if $r9 == $r8 goto label9;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode=");

        $r13 = r0.<android.graphics.drawable.Icon: android.graphics.BlendMode mBlendMode>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

     label9:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.graphics.drawable.Icon r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r2, $r6;
        android.content.res.ColorStateList $r3, $r9;
        android.graphics.BlendMode $r4;
        byte[] $r5;
        android.graphics.Bitmap $r8;

        r0 := @this: android.graphics.drawable.Icon;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.graphics.drawable.Icon: int mType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.graphics.drawable.Icon: int mType>;

        tableswitch($i2)
        {
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label5;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        goto label6;

     label2:
        $r2 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getUriString()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        goto label6;

     label3:
        $i4 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataLength()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r5 = virtualinvoke r0.<android.graphics.drawable.Icon: byte[] getDataBytes()>();

        $i5 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataOffset()>();

        $i6 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataLength()>();

        virtualinvoke r1.<android.os.Parcel: void writeBlob(byte[],int,int)>($r5, $i5, $i6);

        goto label6;

     label4:
        $r6 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $i7 = virtualinvoke r0.<android.graphics.drawable.Icon: int getResId()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        goto label6;

     label5:
        virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        $r8 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        virtualinvoke $r8.<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>(r1, i0);

     label6:
        $r9 = r0.<android.graphics.drawable.Icon: android.content.res.ColorStateList mTintList>;

        if $r9 != null goto label7;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label8;

     label7:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r3 = r0.<android.graphics.drawable.Icon: android.content.res.ColorStateList mTintList>;

        virtualinvoke $r3.<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)>(r1, i0);

     label8:
        $r4 = r0.<android.graphics.drawable.Icon: android.graphics.BlendMode mBlendMode>;

        $i3 = staticinvoke <android.graphics.BlendMode: int toValue(android.graphics.BlendMode)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        return;
    }

    public void writeToStream(java.io.OutputStream) throws java.io.IOException
    {
        android.graphics.drawable.Icon r0;
        java.io.DataOutputStream $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2, $r4;
        byte[] $r3;
        android.graphics.Bitmap $r5;
        android.graphics.Bitmap$CompressFormat $r6;
        java.io.OutputStream r7;

        r0 := @this: android.graphics.drawable.Icon;

        r7 := @parameter0: java.io.OutputStream;

        $r1 = new java.io.DataOutputStream;

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r7);

        virtualinvoke $r1.<java.io.DataOutputStream: void writeInt(int)>(1);

        $i0 = r0.<android.graphics.drawable.Icon: int mType>;

        virtualinvoke $r1.<java.io.DataOutputStream: void writeByte(int)>($i0);

        $i1 = r0.<android.graphics.drawable.Icon: int mType>;

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label5;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        goto label6;

     label2:
        $r2 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getUriString()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r2);

        goto label6;

     label3:
        $i2 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataLength()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void writeInt(int)>($i2);

        $r3 = virtualinvoke r0.<android.graphics.drawable.Icon: byte[] getDataBytes()>();

        $i3 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataOffset()>();

        $i4 = virtualinvoke r0.<android.graphics.drawable.Icon: int getDataLength()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void write(byte[],int,int)>($r3, $i3, $i4);

        goto label6;

     label4:
        $r4 = virtualinvoke r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r4);

        $i5 = virtualinvoke r0.<android.graphics.drawable.Icon: int getResId()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void writeInt(int)>($i5);

        goto label6;

     label5:
        $r5 = virtualinvoke r0.<android.graphics.drawable.Icon: android.graphics.Bitmap getBitmap()>();

        $r6 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke $r5.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r6, 100, $r1);

     label6:
        return;
    }
}
