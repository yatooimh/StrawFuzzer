final class android.graphics.drawable.InsetDrawable$InsetValue extends java.lang.Object implements java.lang.Cloneable
{
    int mDimension;
    final float mFraction;

    public void <init>()
    {
        android.graphics.drawable.InsetDrawable$InsetValue r0;

        r0 := @this: android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(0.0F, 0);

        return;
    }

    public void <init>(float, int)
    {
        android.graphics.drawable.InsetDrawable$InsetValue r0;
        float f0;
        int i0;

        r0 := @this: android.graphics.drawable.InsetDrawable$InsetValue;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.drawable.InsetDrawable$InsetValue: float mFraction> = f0;

        r0.<android.graphics.drawable.InsetDrawable$InsetValue: int mDimension> = i0;

        return;
    }

    public android.graphics.drawable.InsetDrawable$InsetValue clone()
    {
        android.graphics.drawable.InsetDrawable$InsetValue r0, $r1;
        int $i0;
        float $f0;

        r0 := @this: android.graphics.drawable.InsetDrawable$InsetValue;

        $r1 = new android.graphics.drawable.InsetDrawable$InsetValue;

        $f0 = r0.<android.graphics.drawable.InsetDrawable$InsetValue: float mFraction>;

        $i0 = r0.<android.graphics.drawable.InsetDrawable$InsetValue: int mDimension>;

        specialinvoke $r1.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>($f0, $i0);

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.graphics.drawable.InsetDrawable$InsetValue r0, $r1;

        r0 := @this: android.graphics.drawable.InsetDrawable$InsetValue;

        $r1 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable$InsetValue: android.graphics.drawable.InsetDrawable$InsetValue clone()>();

        return $r1;
    }

    int getDimension(int)
    {
        android.graphics.drawable.InsetDrawable$InsetValue r0;
        int i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;

        r0 := @this: android.graphics.drawable.InsetDrawable$InsetValue;

        i0 := @parameter0: int;

        $f1 = (float) i0;

        $f0 = r0.<android.graphics.drawable.InsetDrawable$InsetValue: float mFraction>;

        $f2 = $f1 * $f0;

        $i2 = (int) $f2;

        $i1 = r0.<android.graphics.drawable.InsetDrawable$InsetValue: int mDimension>;

        $i3 = $i2 + $i1;

        return $i3;
    }

    void scaleFromDensity(int, int)
    {
        android.graphics.drawable.InsetDrawable$InsetValue r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.graphics.drawable.InsetDrawable$InsetValue;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = r0.<android.graphics.drawable.InsetDrawable$InsetValue: int mDimension>;

        if i2 == 0 goto label1;

        $i3 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>(i2, i0, i1);

        r0.<android.graphics.drawable.InsetDrawable$InsetValue: int mDimension> = $i3;

     label1:
        return;
    }
}
