public class android.graphics.drawable.InsetDrawable extends android.graphics.drawable.DrawableWrapper
{
    private android.graphics.drawable.InsetDrawable$InsetState mState;
    private final android.graphics.Rect mTmpInsetRect;
    private final android.graphics.Rect mTmpRect;

    void <init>()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState $r1;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = new android.graphics.drawable.InsetDrawable$InsetState;

        specialinvoke $r1.<android.graphics.drawable.InsetDrawable$InsetState: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>(null, null);

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>($r1, null);

        return;
    }

    public void <init>(android.graphics.drawable.Drawable, float)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.Drawable r1;
        float f0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        f0 := @parameter1: float;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,float,float,float,float)>(r1, f0, f0, f0, f0);

        return;
    }

    public void <init>(android.graphics.drawable.Drawable, float, float, float, float)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.Drawable r1;
        float f0, f1, f2, f3;
        android.graphics.drawable.InsetDrawable$InsetState $r2, $r4, $r6, $r8, $r10;
        android.graphics.drawable.InsetDrawable$InsetValue $r3, $r5, $r7, $r9;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        $r2 = new android.graphics.drawable.InsetDrawable$InsetState;

        specialinvoke $r2.<android.graphics.drawable.InsetDrawable$InsetState: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>(null, null);

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>($r2, null);

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r3 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r3.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(f0, 0);

        $r4.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetLeft> = $r3;

        $r6 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r5 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r5.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(f1, 0);

        $r6.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetTop> = $r5;

        $r8 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r7 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r7.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(f2, 0);

        $r8.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetRight> = $r7;

        $r10 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r9 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r9.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(f3, 0);

        $r10.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetBottom> = $r9;

        virtualinvoke r0.<android.graphics.drawable.InsetDrawable: void setDrawable(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void <init>(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.Drawable r1;
        int i0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>(r1, i0, i0, i0, i0);

        return;
    }

    public void <init>(android.graphics.drawable.Drawable, int, int, int, int)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.Drawable r1;
        int i0, i1, i2, i3;
        android.graphics.drawable.InsetDrawable$InsetState $r2, $r4, $r6, $r8, $r10;
        android.graphics.drawable.InsetDrawable$InsetValue $r3, $r5, $r7, $r9;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = new android.graphics.drawable.InsetDrawable$InsetState;

        specialinvoke $r2.<android.graphics.drawable.InsetDrawable$InsetState: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>(null, null);

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>($r2, null);

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r3 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r3.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(0.0F, i0);

        $r4.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetLeft> = $r3;

        $r6 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r5 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r5.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(0.0F, i1);

        $r6.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetTop> = $r5;

        $r8 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r7 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r7.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(0.0F, i2);

        $r8.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetRight> = $r7;

        $r10 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r9 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r9.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(0.0F, i3);

        $r10.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetBottom> = $r9;

        virtualinvoke r0.<android.graphics.drawable.InsetDrawable: void setDrawable(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    private void <init>(android.graphics.drawable.InsetDrawable$InsetState, android.content.res.Resources)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState r1;
        android.content.res.Resources r2;
        android.graphics.Rect $r3, $r4;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.InsetDrawable$InsetState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.DrawableWrapper: void <init>(android.graphics.drawable.DrawableWrapper$DrawableWrapperState,android.content.res.Resources)>(r1, r2);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpRect> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect> = $r4;

        r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState> = r1;

        return;
    }

    void <init>(android.graphics.drawable.InsetDrawable$InsetState, android.content.res.Resources, android.graphics.drawable.InsetDrawable$1)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.InsetDrawable$1 r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.InsetDrawable$InsetState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.InsetDrawable$1;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private android.graphics.drawable.InsetDrawable$InsetValue getInset(android.content.res.TypedArray, int, android.graphics.drawable.InsetDrawable$InsetValue)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.InsetDrawable$InsetValue r2, $r4, $r6;
        android.util.TypedValue r3;
        float f0;
        boolean $z0;
        int $i0, i2, i3;
        byte $b1;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        i2 := @parameter1: int;

        r2 := @parameter2: android.graphics.drawable.InsetDrawable$InsetValue;

        $z0 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(i2);

        if $z0 == 0 goto label3;

        r3 = virtualinvoke r1.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i2);

        $i0 = r3.<android.util.TypedValue: int type>;

        if $i0 != 6 goto label2;

        f0 = virtualinvoke r3.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

        $b1 = f0 cmpl 1.0F;

        if $b1 >= 0 goto label1;

        $r6 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r6.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(f0, 0);

        return $r6;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Fraction cannot be larger than 1");

        throw $r5;

     label2:
        i3 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i2, 0);

        if i3 == 0 goto label3;

        $r4 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r4.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>(float,int)>(0.0F, i3);

        return $r4;

     label3:
        return r2;
    }

    private void getInsets(android.graphics.Rect)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Rect r1, r2;
        android.graphics.drawable.InsetDrawable$InsetState $r3, $r5, $r7, $r9;
        android.graphics.drawable.InsetDrawable$InsetValue $r4, $r6, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r2 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect getBounds()>();

        $r3 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r4 = $r3.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetLeft>;

        $i0 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke $r4.<android.graphics.drawable.InsetDrawable$InsetValue: int getDimension(int)>($i0);

        r1.<android.graphics.Rect: int left> = $i1;

        $r5 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r6 = $r5.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetRight>;

        $i2 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i3 = virtualinvoke $r6.<android.graphics.drawable.InsetDrawable$InsetValue: int getDimension(int)>($i2);

        r1.<android.graphics.Rect: int right> = $i3;

        $r7 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r8 = $r7.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetTop>;

        $i4 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $i5 = virtualinvoke $r8.<android.graphics.drawable.InsetDrawable$InsetValue: int getDimension(int)>($i4);

        r1.<android.graphics.Rect: int top> = $i5;

        $r9 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r10 = $r9.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetBottom>;

        $i6 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $i7 = virtualinvoke $r10.<android.graphics.drawable.InsetDrawable$InsetValue: int getDimension(int)>($i6);

        r1.<android.graphics.Rect: int bottom> = $i7;

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.InsetDrawable$InsetState r2;
        android.graphics.drawable.InsetDrawable$InsetValue r3, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        int $i0, $i1, $i2;
        int[] $r4;
        boolean $z0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        if r2 != null goto label1;

        return;

     label1:
        $i0 = r2.<android.graphics.drawable.InsetDrawable$InsetState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int mChangingConfigurations> = $i2;

        $r4 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        staticinvoke <android.graphics.drawable.InsetDrawable$InsetState: int[] access$002(android.graphics.drawable.InsetDrawable$InsetState,int[])>(r2, $r4);

        $z0 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(6);

        if $z0 == 0 goto label2;

        $r14 = new android.graphics.drawable.InsetDrawable$InsetValue;

        specialinvoke $r14.<android.graphics.drawable.InsetDrawable$InsetValue: void <init>()>();

        r3 = specialinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetValue getInset(android.content.res.TypedArray,int,android.graphics.drawable.InsetDrawable$InsetValue)>(r1, 6, $r14);

        r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetLeft> = r3;

        r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetTop> = r3;

        r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetRight> = r3;

        r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetBottom> = r3;

     label2:
        $r6 = r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetLeft>;

        $r7 = specialinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetValue getInset(android.content.res.TypedArray,int,android.graphics.drawable.InsetDrawable$InsetValue)>(r1, 2, $r6);

        r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetLeft> = $r7;

        $r8 = r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetTop>;

        $r9 = specialinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetValue getInset(android.content.res.TypedArray,int,android.graphics.drawable.InsetDrawable$InsetValue)>(r1, 4, $r8);

        r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetTop> = $r9;

        $r10 = r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetRight>;

        $r11 = specialinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetValue getInset(android.content.res.TypedArray,int,android.graphics.drawable.InsetDrawable$InsetValue)>(r1, 3, $r10);

        r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetRight> = $r11;

        $r12 = r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetBottom>;

        $r13 = specialinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetValue getInset(android.content.res.TypedArray,int,android.graphics.drawable.InsetDrawable$InsetValue)>(r1, 5, $r12);

        r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetBottom> = $r13;

        return;
    }

    private void verifyRequiredAttributes(android.content.res.TypedArray) throws org.xmlpull.v1.XmlPullParserException
    {
        android.graphics.drawable.InsetDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.Drawable $r3;
        android.graphics.drawable.InsetDrawable$InsetState $r4, $r12;
        int[] $r5, $r13;
        java.lang.String $r7, $r11;
        int $i0;
        java.lang.StringBuilder r14;
        org.xmlpull.v1.XmlPullParserException r15;
        java.lang.Throwable r16;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        $r3 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable getDrawable()>();

        if $r3 != null goto label2;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r5 = staticinvoke <android.graphics.drawable.InsetDrawable$InsetState: int[] access$000(android.graphics.drawable.InsetDrawable$InsetState)>($r4);

        if $r5 == null goto label1;

        $r12 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r13 = staticinvoke <android.graphics.drawable.InsetDrawable$InsetState: int[] access$000(android.graphics.drawable.InsetDrawable$InsetState)>($r12);

        $i0 = $r13[1];

        if $i0 == 0 goto label1;

        goto label2;

     label1:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <inset> tag requires a \'drawable\' attribute or child tag defining a drawable");

        r15 = new org.xmlpull.v1.XmlPullParserException;

        $r11 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11);

        r16 = (java.lang.Throwable) r15;

        throw r16;

     label2:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.InsetDrawable r0;
        int[] $r1, $r2, $r3;
        java.lang.Throwable $r4, $r5;
        android.content.res.Resources$Theme r6;
        android.graphics.drawable.InsetDrawable$InsetState r7;
        android.content.res.TypedArray r8;
        java.lang.Exception r11;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r6 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.DrawableWrapper: void applyTheme(android.content.res.Resources$Theme)>(r6);

        r7 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        if r7 != null goto label1;

        return;

     label1:
        $r1 = staticinvoke <android.graphics.drawable.InsetDrawable$InsetState: int[] access$000(android.graphics.drawable.InsetDrawable$InsetState)>(r7);

        if $r1 == null goto label9;

        $r2 = staticinvoke <android.graphics.drawable.InsetDrawable$InsetState: int[] access$000(android.graphics.drawable.InsetDrawable$InsetState)>(r7);

        $r3 = <com.android.internal.R$styleable: int[] InsetDrawable>;

        r8 = virtualinvoke r6.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r2, $r3);

     label2:
        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r8);

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void verifyRequiredAttributes(android.content.res.TypedArray)>(r8);

     label3:
        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        goto label9;

     label4:
        $r5 := @caughtexception;

        goto label8;

     label5:
        $r4 := @caughtexception;

     label6:
        r11 = (java.lang.Exception) $r4;

        staticinvoke <android.graphics.drawable.InsetDrawable: void rethrowAsRuntimeException(java.lang.Exception)>(r11);

     label7:
        goto label3;

     label8:
        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        throw $r5;

     label9:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.InsetDrawable r0;
        int i0, $i2, $i3, $i4, $i5, $i6;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.InsetDrawable$InsetState $r2, $r4, $r6, $r8;
        android.graphics.drawable.InsetDrawable$InsetValue $r3, $r5, $r7, $r9;
        byte $b1;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable getDrawable()>();

        i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetTop>;

        $f2 = $r3.<android.graphics.drawable.InsetDrawable$InsetValue: float mFraction>;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r5 = $r4.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetBottom>;

        $f1 = $r5.<android.graphics.drawable.InsetDrawable$InsetValue: float mFraction>;

        f0 = $f2 + $f1;

        if i0 < 0 goto label2;

        $b1 = f0 cmpl 1.0F;

        if $b1 < 0 goto label1;

        goto label2;

     label1:
        $f4 = (float) i0;

        $f3 = 1.0F - f0;

        $f5 = $f4 / $f3;

        $i3 = (int) $f5;

        $r6 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r7 = $r6.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetTop>;

        $i2 = $r7.<android.graphics.drawable.InsetDrawable$InsetValue: int mDimension>;

        $i5 = $i3 + $i2;

        $r8 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r9 = $r8.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetBottom>;

        $i4 = $r9.<android.graphics.drawable.InsetDrawable$InsetValue: int mDimension>;

        $i6 = $i5 + $i4;

        return $i6;

     label2:
        return -1;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.InsetDrawable r0;
        int i0, $i2, $i3, $i4, $i5, $i6;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.InsetDrawable$InsetState $r2, $r4, $r6, $r8;
        android.graphics.drawable.InsetDrawable$InsetValue $r3, $r5, $r7, $r9;
        byte $b1;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable getDrawable()>();

        i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetLeft>;

        $f2 = $r3.<android.graphics.drawable.InsetDrawable$InsetValue: float mFraction>;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r5 = $r4.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetRight>;

        $f1 = $r5.<android.graphics.drawable.InsetDrawable$InsetValue: float mFraction>;

        f0 = $f2 + $f1;

        if i0 < 0 goto label2;

        $b1 = f0 cmpl 1.0F;

        if $b1 < 0 goto label1;

        goto label2;

     label1:
        $f4 = (float) i0;

        $f3 = 1.0F - f0;

        $f5 = $f4 / $f3;

        $i3 = (int) $f5;

        $r6 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r7 = $r6.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetLeft>;

        $i2 = $r7.<android.graphics.drawable.InsetDrawable$InsetValue: int mDimension>;

        $i5 = $i3 + $i2;

        $r8 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r9 = $r8.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetRight>;

        $i4 = $r9.<android.graphics.drawable.InsetDrawable$InsetValue: int mDimension>;

        $i6 = $i5 + $i4;

        return $i6;

     label2:
        return -1;
    }

    public int getOpacity()
    {
        android.graphics.drawable.InsetDrawable r0;
        int i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.Drawable $r2;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r2 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable getDrawable()>();

        i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        $r3 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void getInsets(android.graphics.Rect)>($r3);

        if i0 != -1 goto label2;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i1 = $r4.<android.graphics.Rect: int left>;

        if $i1 > 0 goto label1;

        $r5 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i2 = $r5.<android.graphics.Rect: int top>;

        if $i2 > 0 goto label1;

        $r6 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i3 = $r6.<android.graphics.Rect: int right>;

        if $i3 > 0 goto label1;

        $r7 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i4 = $r7.<android.graphics.Rect: int bottom>;

        if $i4 <= 0 goto label2;

     label1:
        return -3;

     label2:
        return i0;
    }

    public android.graphics.Insets getOpticalInsets()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Insets r1, $r7;
        android.graphics.Rect $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 = specialinvoke r0.<android.graphics.drawable.DrawableWrapper: android.graphics.Insets getOpticalInsets()>();

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void getInsets(android.graphics.Rect)>($r2);

        $i1 = r1.<android.graphics.Insets: int left>;

        $r3 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $i11 = $i1 + $i0;

        $i3 = r1.<android.graphics.Insets: int top>;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i2 = $r4.<android.graphics.Rect: int top>;

        $i10 = $i3 + $i2;

        $i5 = r1.<android.graphics.Insets: int right>;

        $r5 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i4 = $r5.<android.graphics.Rect: int right>;

        $i9 = $i5 + $i4;

        $i7 = r1.<android.graphics.Insets: int bottom>;

        $r6 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i6 = $r6.<android.graphics.Rect: int bottom>;

        $i8 = $i7 + $i6;

        $r7 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i11, $i10, $i9, $i8);

        return $r7;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Outline r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.Outline;

        $r2 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable getDrawable()>();

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>(r1);

        return;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Rect r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean z0, z1;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.Rect;

        z0 = specialinvoke r0.<android.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)>(r1);

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void getInsets(android.graphics.Rect)>($r2);

        $i1 = r1.<android.graphics.Rect: int left>;

        $r3 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $i2 = $i1 + $i0;

        r1.<android.graphics.Rect: int left> = $i2;

        $i4 = r1.<android.graphics.Rect: int right>;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i3 = $r4.<android.graphics.Rect: int right>;

        $i5 = $i4 + $i3;

        r1.<android.graphics.Rect: int right> = $i5;

        $i7 = r1.<android.graphics.Rect: int top>;

        $r5 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i6 = $r5.<android.graphics.Rect: int top>;

        $i8 = $i7 + $i6;

        r1.<android.graphics.Rect: int top> = $i8;

        $i10 = r1.<android.graphics.Rect: int bottom>;

        $r6 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i9 = $r6.<android.graphics.Rect: int bottom>;

        $i11 = $i10 + $i9;

        r1.<android.graphics.Rect: int bottom> = $i11;

        if z0 != 0 goto label2;

        $r7 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i13 = $r7.<android.graphics.Rect: int left>;

        $r8 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i12 = $r8.<android.graphics.Rect: int right>;

        $i15 = $i13 | $i12;

        $r9 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i14 = $r9.<android.graphics.Rect: int top>;

        $i17 = $i15 | $i14;

        $r10 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpInsetRect>;

        $i16 = $r10.<android.graphics.Rect: int bottom>;

        $i18 = $i17 | $i16;

        if $i18 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.InsetDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int[] $r6;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $r6 = <com.android.internal.R$styleable: int[] InsetDrawable>;

        r5 = staticinvoke <android.graphics.drawable.InsetDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r6);

        specialinvoke r0.<android.graphics.drawable.DrawableWrapper: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r5);

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void verifyRequiredAttributes(android.content.res.TypedArray)>(r5);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState $r2, $r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r2 = new android.graphics.drawable.InsetDrawable$InsetState;

        $r3 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        specialinvoke $r2.<android.graphics.drawable.InsetDrawable$InsetState: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>($r3, null);

        r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState> = $r2;

        return $r2;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Rect r1, r2;
        android.graphics.drawable.InsetDrawable$InsetState $r3, $r5, $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.graphics.drawable.InsetDrawable$InsetValue $r4, $r6, $r8, $r10;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpRect>;

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        $i0 = r2.<android.graphics.Rect: int left>;

        $r3 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r4 = $r3.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetLeft>;

        $i1 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i2 = virtualinvoke $r4.<android.graphics.drawable.InsetDrawable$InsetValue: int getDimension(int)>($i1);

        $i3 = $i0 + $i2;

        r2.<android.graphics.Rect: int left> = $i3;

        $i4 = r2.<android.graphics.Rect: int top>;

        $r5 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r6 = $r5.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetTop>;

        $i5 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i6 = virtualinvoke $r6.<android.graphics.drawable.InsetDrawable$InsetValue: int getDimension(int)>($i5);

        $i7 = $i4 + $i6;

        r2.<android.graphics.Rect: int top> = $i7;

        $i8 = r2.<android.graphics.Rect: int right>;

        $r7 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r8 = $r7.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetRight>;

        $i9 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i10 = virtualinvoke $r8.<android.graphics.drawable.InsetDrawable$InsetValue: int getDimension(int)>($i9);

        $i11 = $i8 - $i10;

        r2.<android.graphics.Rect: int right> = $i11;

        $i12 = r2.<android.graphics.Rect: int bottom>;

        $r9 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mState>;

        $r10 = $r9.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.InsetDrawable$InsetValue mInsetBottom>;

        $i13 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i14 = virtualinvoke $r10.<android.graphics.drawable.InsetDrawable$InsetValue: int getDimension(int)>($i13);

        $i15 = $i12 - $i14;

        r2.<android.graphics.Rect: int bottom> = $i15;

        specialinvoke r0.<android.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)>(r2);

        return;
    }
}
