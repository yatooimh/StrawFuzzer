class android.graphics.drawable.LayerDrawable$LayerState extends android.graphics.drawable.Drawable$ConstantState
{
    private boolean mAutoMirrored;
    int mChangingConfigurations;
    private boolean mCheckedOpacity;
    private boolean mCheckedStateful;
    android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren;
    int mChildrenChangingConfigurations;
    int mDensity;
    private boolean mIsStateful;
    int mNumChildren;
    private int mOpacity;
    int mOpacityOverride;
    int mPaddingBottom;
    int mPaddingEnd;
    int mPaddingLeft;
    private int mPaddingMode;
    int mPaddingRight;
    int mPaddingStart;
    int mPaddingTop;
    private int[] mThemeAttrs;

    void <init>(android.graphics.drawable.LayerDrawable$LayerState, android.graphics.drawable.LayerDrawable, android.content.res.Resources)
    {
        android.graphics.drawable.LayerDrawable$LayerState r0, r1;
        android.graphics.drawable.LayerDrawable r2;
        android.content.res.Resources r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r4, $r6, $r9;
        android.graphics.drawable.LayerDrawable$ChildDrawable r5, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16;
        boolean $z0, $z1, $z2, $z3;
        int[] $r7;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        r1 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        r2 := @parameter1: android.graphics.drawable.LayerDrawable;

        r3 := @parameter2: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop> = -1;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom> = -1;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft> = -1;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight> = -1;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart> = -1;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd> = -1;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacityOverride> = 0;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mAutoMirrored> = 0;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingMode> = 0;

        if r1 == null goto label1;

        i12 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity>;

        goto label2;

     label1:
        i12 = 0;

     label2:
        $i0 = staticinvoke <android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>(r3, i12);

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity> = $i0;

        if r1 == null goto label6;

        r4 = r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i13 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren> = i13;

        $r6 = newarray (android.graphics.drawable.LayerDrawable$ChildDrawable)[i13];

        r0.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren> = $r6;

        $i1 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations> = $i1;

        $i2 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i2;

        i14 = 0;

     label3:
        if i14 >= i13 goto label4;

        r5 = r4[i14];

        $r9 = r0.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r8 = new android.graphics.drawable.LayerDrawable$ChildDrawable;

        specialinvoke $r8.<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>(android.graphics.drawable.LayerDrawable$ChildDrawable,android.graphics.drawable.LayerDrawable,android.content.res.Resources)>(r5, r2, r3);

        $r9[i14] = $r8;

        i14 = i14 + 1;

        goto label3;

     label4:
        $z0 = r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean mCheckedOpacity>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mCheckedOpacity> = $z0;

        $i3 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacity>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacity> = $i3;

        $z1 = r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean mCheckedStateful>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mCheckedStateful> = $z1;

        $z2 = r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean mIsStateful>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mIsStateful> = $z2;

        $z3 = r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean mAutoMirrored>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mAutoMirrored> = $z3;

        $i4 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingMode>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingMode> = $i4;

        $r7 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int[] mThemeAttrs>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int[] mThemeAttrs> = $r7;

        $i5 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop> = $i5;

        $i6 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom> = $i6;

        $i7 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft> = $i7;

        $i8 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight> = $i8;

        $i9 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart> = $i9;

        $i10 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd> = $i10;

        $i11 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacityOverride>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacityOverride> = $i11;

        i15 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity>;

        i16 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity>;

        if i15 == i16 goto label5;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable$LayerState: void applyDensityScaling(int,int)>(i15, i16);

     label5:
        goto label7;

     label6:
        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren> = 0;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren> = null;

     label7:
        return;
    }

    static int[] access$000(android.graphics.drawable.LayerDrawable$LayerState)
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int[] $r1;

        r0 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        $r1 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int[] mThemeAttrs>;

        return $r1;
    }

    static int[] access$002(android.graphics.drawable.LayerDrawable$LayerState, int[])
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int[] r1;

        r0 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        r1 := @parameter1: int[];

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int[] mThemeAttrs> = r1;

        return r1;
    }

    static boolean access$100(android.graphics.drawable.LayerDrawable$LayerState)
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        boolean $z0;

        r0 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        $z0 = r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mAutoMirrored>;

        return $z0;
    }

    static boolean access$102(android.graphics.drawable.LayerDrawable$LayerState, boolean)
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        boolean z0;

        r0 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        z0 := @parameter1: boolean;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mAutoMirrored> = z0;

        return z0;
    }

    static int access$200(android.graphics.drawable.LayerDrawable$LayerState)
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int $i0;

        r0 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        $i0 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingMode>;

        return $i0;
    }

    static int access$202(android.graphics.drawable.LayerDrawable$LayerState, int)
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int i0;

        r0 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        i0 := @parameter1: int;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingMode> = i0;

        return i0;
    }

    private void applyDensityScaling(int, int)
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i8 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft>;

        if i8 <= 0 goto label1;

        $i7 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i8, i0, i1, 0);

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft> = $i7;

     label1:
        i9 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop>;

        if i9 <= 0 goto label2;

        $i6 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i9, i0, i1, 0);

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop> = $i6;

     label2:
        i10 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight>;

        if i10 <= 0 goto label3;

        $i5 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i10, i0, i1, 0);

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight> = $i5;

     label3:
        i11 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom>;

        if i11 <= 0 goto label4;

        $i4 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i11, i0, i1, 0);

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom> = $i4;

     label4:
        i12 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart>;

        if i12 <= 0 goto label5;

        $i3 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i12, i0, i1, 0);

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart> = $i3;

     label5:
        i13 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd>;

        if i13 <= 0 goto label6;

        $i2 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i13, i0, i1, 0);

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd> = $i2;

     label6:
        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        int[] $r2;
        boolean $z0, $z1;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        $r2 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int[] mThemeAttrs>;

        if $r2 != null goto label5;

        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: boolean canApplyTheme()>();

        if $z0 == 0 goto label1;

        goto label5;

     label1:
        r1 = r0.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i0 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r3 = r1[i1];

        $z1 = virtualinvoke $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: boolean canApplyTheme()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;

     label5:
        return 1;
    }

    public final boolean canConstantState()
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        android.graphics.drawable.Drawable$ConstantState $r4;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        r1 = r0.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i0 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r1[i1];

        r2 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if $r4 != null goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int $i0, $i1, $i2;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        $i1 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations>;

        $i0 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $i2 = $i1 | $i0;

        return $i2;
    }

    public final int getOpacity()
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int i0, $i1, $i2, i4, i5, i6, i7, i8, i9;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.Drawable r2, $r5, $r7;
        boolean $z0;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3, $r4, $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        $z0 = r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mCheckedOpacity>;

        if $z0 == 0 goto label1;

        $i2 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacity>;

        return $i2;

     label1:
        i0 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i4 = 0;

     label2:
        i5 = -1;

        if i4 >= i0 goto label4;

        $r6 = r1[i4];

        $r7 = $r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r7 == null goto label3;

        i5 = i4;

        goto label4;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        if i5 < 0 goto label5;

        $r4 = r1[i5];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        i6 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getOpacity()>();

        goto label6;

     label5:
        i6 = -2;

     label6:
        i7 = i5 + 1;

        i8 = i6;

     label7:
        if i7 >= i0 goto label9;

        $r3 = r1[i7];

        r2 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        i9 = i8;

        if r2 == null goto label8;

        $i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        i9 = staticinvoke <android.graphics.drawable.Drawable: int resolveOpacity(int,int)>(i8, $i1);

     label8:
        i7 = i7 + 1;

        i8 = i9;

        goto label7;

     label9:
        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacity> = i8;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mCheckedOpacity> = 1;

        return i8;
    }

    public final boolean hasFocusStateSpecified()
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        i0 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r1[i1];

        r2 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean hasFocusStateSpecified()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    void invalidateCache()
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mCheckedOpacity> = 0;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mCheckedStateful> = 0;

        return;
    }

    public final boolean isStateful()
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.Drawable r2;
        boolean $z1, $z2, $z3, z4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        $z1 = r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mCheckedStateful>;

        if $z1 == 0 goto label1;

        $z3 = r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mIsStateful>;

        return $z3;

     label1:
        i0 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i1 = 0;

     label2:
        z4 = 0;

        if i1 >= i0 goto label4;

        $r3 = r1[i1];

        r2 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label3;

        $z2 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z2 == 0 goto label3;

        z4 = 1;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mIsStateful> = z4;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean mCheckedStateful> = 1;

        return z4;
    }

    public android.graphics.drawable.Drawable newDrawable()
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        android.graphics.drawable.LayerDrawable $r1;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        $r1 = new android.graphics.drawable.LayerDrawable;

        specialinvoke $r1.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>(r0, null);

        return $r1;
    }

    public android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        android.content.res.Resources r1;
        android.graphics.drawable.LayerDrawable $r2;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        r1 := @parameter0: android.content.res.Resources;

        $r2 = new android.graphics.drawable.LayerDrawable;

        specialinvoke $r2.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>(r0, r1);

        return $r2;
    }

    protected void onDensityChanged(int, int)
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int i0, i1;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable$LayerState: void applyDensityScaling(int,int)>(i0, i1);

        return;
    }

    public final void setDensity(int)
    {
        android.graphics.drawable.LayerDrawable$LayerState r0;
        int i0, i1, $i2;

        r0 := @this: android.graphics.drawable.LayerDrawable$LayerState;

        i0 := @parameter0: int;

        $i2 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity>;

        if $i2 == i0 goto label1;

        i1 = r0.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity>;

        r0.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity> = i0;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable$LayerState: void onDensityChanged(int,int)>(i1, i0);

     label1:
        return;
    }
}
