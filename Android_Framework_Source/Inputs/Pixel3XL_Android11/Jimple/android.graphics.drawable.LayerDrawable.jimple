public class android.graphics.drawable.LayerDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    public static final int INSET_UNDEFINED;
    private static final java.lang.String LOG_TAG;
    public static final int PADDING_MODE_NEST;
    public static final int PADDING_MODE_STACK;
    private boolean mChildRequestedInvalidation;
    private android.graphics.Rect mHotspotBounds;
    android.graphics.drawable.LayerDrawable$LayerState mLayerState;
    private boolean mMutated;
    private int[] mPaddingB;
    private int[] mPaddingL;
    private int[] mPaddingR;
    private int[] mPaddingT;
    private boolean mSuspendChildInvalidation;
    private final android.graphics.Rect mTmpContainer;
    private final android.graphics.Rect mTmpOutRect;
    private final android.graphics.Rect mTmpRect;

    void <init>()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = (android.graphics.drawable.LayerDrawable$LayerState) null;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>($r1, null);

        return;
    }

    void <init>(android.graphics.drawable.LayerDrawable$LayerState, android.content.res.Resources)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Rect $r2, $r3, $r4;
        int $i0;
        android.graphics.drawable.LayerDrawable$LayerState r5, r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r5 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        r1 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mTmpRect> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mTmpOutRect> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mTmpContainer> = $r4;

        r6 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>(r5, r1);

        r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState> = r6;

        $i0 = r6.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void refreshPadding()>();

     label1:
        return;
    }

    public void <init>(android.graphics.drawable.Drawable[])
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable[] r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable[];

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState)>(r1, null);

        return;
    }

    void <init>(android.graphics.drawable.Drawable[], android.graphics.drawable.LayerDrawable$LayerState)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable[] r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        android.graphics.drawable.LayerDrawable$LayerState r3, $r5, $r6, $r8, r10;
        java.lang.IllegalArgumentException $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r7, $r9;
        android.graphics.drawable.Drawable r11;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable[];

        r10 := @parameter1: android.graphics.drawable.LayerDrawable$LayerState;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>(r10, null);

        if r1 == null goto label4;

        i0 = lengthof r1;

        r2 = newarray (android.graphics.drawable.LayerDrawable$ChildDrawable)[i0];

        i5 = 0;

     label1:
        if i5 >= i0 goto label3;

        $r7 = new android.graphics.drawable.LayerDrawable$ChildDrawable;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r8.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity>;

        specialinvoke $r7.<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>(int)>($i1);

        r2[i5] = $r7;

        r11 = r1[i5];

        $r9 = r2[i5];

        $r9.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = r11;

        if r11 == null goto label2;

        virtualinvoke r11.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i2 = r3.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $i3 = virtualinvoke r11.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i4 = $i2 | $i3;

        r3.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i4;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren> = i0;

        $r6 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r6.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren> = r2;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void refreshPadding()>();

        return;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("layers must be non-null");

        throw $r4;
    }

    private void computeNestedPadding(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        int[] $r6, $r7, $r8, $r9;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r1.<android.graphics.Rect: int left> = 0;

        r1.<android.graphics.Rect: int top> = 0;

        r1.<android.graphics.Rect: int right> = 0;

        r1.<android.graphics.Rect: int bottom> = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i13 = 0;

     label1:
        if i13 >= i0 goto label2;

        $r5 = r2[i13];

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i13, $r5);

        $i2 = r1.<android.graphics.Rect: int left>;

        $r6 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i1 = $r6[i13];

        $i3 = $i2 + $i1;

        r1.<android.graphics.Rect: int left> = $i3;

        $i5 = r1.<android.graphics.Rect: int top>;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i4 = $r7[i13];

        $i6 = $i5 + $i4;

        r1.<android.graphics.Rect: int top> = $i6;

        $i8 = r1.<android.graphics.Rect: int right>;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i7 = $r8[i13];

        $i9 = $i8 + $i7;

        r1.<android.graphics.Rect: int right> = $i9;

        $i11 = r1.<android.graphics.Rect: int bottom>;

        $r9 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i10 = $r9[i13];

        $i12 = $i11 + $i10;

        r1.<android.graphics.Rect: int bottom> = $i12;

        i13 = i13 + 1;

        goto label1;

     label2:
        return;
    }

    private void computeStackedPadding(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        int[] $r6, $r7, $r8, $r9;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r1.<android.graphics.Rect: int left> = 0;

        r1.<android.graphics.Rect: int top> = 0;

        r1.<android.graphics.Rect: int right> = 0;

        r1.<android.graphics.Rect: int bottom> = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i13 = 0;

     label1:
        if i13 >= i0 goto label2;

        $r5 = r2[i13];

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i13, $r5);

        $i2 = r1.<android.graphics.Rect: int left>;

        $r6 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i1 = $r6[i13];

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1);

        r1.<android.graphics.Rect: int left> = $i3;

        $i5 = r1.<android.graphics.Rect: int top>;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i4 = $r7[i13];

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4);

        r1.<android.graphics.Rect: int top> = $i6;

        $i8 = r1.<android.graphics.Rect: int right>;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i7 = $r8[i13];

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i7);

        r1.<android.graphics.Rect: int right> = $i9;

        $i11 = r1.<android.graphics.Rect: int bottom>;

        $r9 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i10 = $r9[i13];

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i10);

        r1.<android.graphics.Rect: int bottom> = $i12;

        i13 = i13 + 1;

        goto label1;

     label2:
        return;
    }

    private android.graphics.drawable.LayerDrawable$ChildDrawable createLayer(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r3 = new android.graphics.drawable.LayerDrawable$ChildDrawable;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity>;

        specialinvoke $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>(int)>($i0);

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = r1;

        return $r3;
    }

    private android.graphics.drawable.Drawable getFirstNonNullDrawable()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r1[i1];

        r2 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private void inflateLayers(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.LayerDrawable r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        android.graphics.drawable.LayerDrawable$LayerState r4;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, i9, i10;
        android.content.res.TypedArray r6;
        java.lang.String $r7, $r13, $r17;
        boolean $z0;
        int[] $r9, $r11, $r21;
        android.graphics.drawable.Drawable $r10, $r18, $r19, $r20;
        android.content.res.Resources r22;
        android.graphics.drawable.LayerDrawable$ChildDrawable r24;
        java.lang.StringBuilder r25;
        org.xmlpull.v1.XmlPullParserException r26;
        java.lang.Throwable r27;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r22 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i2 + 1;

     label1:
        i9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i9 == 1 goto label9;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i1 >= i0 goto label2;

        if i9 == 3 goto label9;

     label2:
        if i9 == 2 goto label3;

        goto label1;

     label3:
        if i1 > i0 goto label1;

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label4;

        goto label1;

     label4:
        r24 = new android.graphics.drawable.LayerDrawable$ChildDrawable;

        $i3 = r4.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity>;

        specialinvoke r24.<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>(int)>($i3);

        $r9 = <com.android.internal.R$styleable: int[] LayerDrawableItem>;

        r6 = staticinvoke <android.graphics.drawable.LayerDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r22, r3, r2, $r9);

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable,android.content.res.TypedArray)>(r24, r6);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        $r10 = r24.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r10 != null goto label8;

        $r11 = r24.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs>;

        if $r11 == null goto label5;

        $r21 = r24.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs>;

        $i8 = $r21[4];

        if $i8 != 0 goto label8;

     label5:
        i10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i10 != 4 goto label6;

        goto label5;

     label6:
        if i10 != 2 goto label7;

        $r18 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r22, r1, r2, r3);

        r24.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = $r18;

        $r19 = r24.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r19.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i5 = r4.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $r20 = r24.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i6 = virtualinvoke $r20.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i7 = $i5 | $i6;

        r4.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i7;

        goto label8;

     label7:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        r26 = new org.xmlpull.v1.XmlPullParserException;

        $r17 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r17);

        r27 = (java.lang.Throwable) r26;

        throw r27;

     label8:
        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable)>(r24);

        goto label1;

     label9:
        return;
    }

    private boolean refreshChildPadding(int, android.graphics.drawable.LayerDrawable$ChildDrawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.drawable.LayerDrawable$ChildDrawable r1;
        android.graphics.Rect r2;
        android.graphics.drawable.Drawable $r3, $r4;
        int[] $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.LayerDrawable$ChildDrawable;

        $r3 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r3 == null goto label2;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mTmpRect>;

        $r4 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        $i2 = r2.<android.graphics.Rect: int left>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i1 = $r5[i0];

        if $i2 != $i1 goto label1;

        $i4 = r2.<android.graphics.Rect: int top>;

        $r6 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i3 = $r6[i0];

        if $i4 != $i3 goto label1;

        $i6 = r2.<android.graphics.Rect: int right>;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i5 = $r7[i0];

        if $i6 != $i5 goto label1;

        $i8 = r2.<android.graphics.Rect: int bottom>;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i7 = $r8[i0];

        if $i8 == $i7 goto label2;

     label1:
        $r9 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i9 = r2.<android.graphics.Rect: int left>;

        $r9[i0] = $i9;

        $r10 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i10 = r2.<android.graphics.Rect: int top>;

        $r10[i0] = $i10;

        $r11 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i11 = r2.<android.graphics.Rect: int right>;

        $r11[i0] = $i11;

        $r12 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i12 = r2.<android.graphics.Rect: int bottom>;

        $r12[i0] = $i12;

        return 1;

     label2:
        return 0;
    }

    private static int resolveGravity(int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, i8;
        boolean $z0, $z1;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i5 = i4;

        $z0 = staticinvoke <android.view.Gravity: boolean isHorizontal(int)>(i4);

        if $z0 != 0 goto label2;

        if i0 >= 0 goto label1;

        i5 = i4 | 7;

        goto label2;

     label1:
        i5 = i4 | 8388611;

     label2:
        i6 = i5;

        $z1 = staticinvoke <android.view.Gravity: boolean isVertical(int)>(i5);

        if $z1 != 0 goto label4;

        if i1 >= 0 goto label3;

        i6 = i5 | 112;

        goto label4;

     label3:
        i6 = i5 | 48;

     label4:
        i7 = i6;

        if i0 >= 0 goto label5;

        i7 = i6;

        if i2 >= 0 goto label5;

        i7 = i6 | 7;

     label5:
        i8 = i7;

        if i1 >= 0 goto label6;

        i8 = i7;

        if i3 >= 0 goto label6;

        i8 = i7 | 112;

     label6:
        return i8;
    }

    private void resumeChildInvalidation()
    {
        android.graphics.drawable.LayerDrawable r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r0.<android.graphics.drawable.LayerDrawable: boolean mSuspendChildInvalidation> = 0;

        $z0 = r0.<android.graphics.drawable.LayerDrawable: boolean mChildRequestedInvalidation>;

        if $z0 == 0 goto label1;

        r0.<android.graphics.drawable.LayerDrawable: boolean mChildRequestedInvalidation> = 0;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    private void setLayerInsetInternal(int, int, int, int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, i3, i4, i5, i6;
        android.graphics.drawable.LayerDrawable$ChildDrawable r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r3 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        r1 = $r3[i0];

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL> = i1;

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT> = i2;

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR> = i3;

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB> = i4;

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetS> = i5;

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetE> = i6;

        return;
    }

    private void suspendChildInvalidation()
    {
        android.graphics.drawable.LayerDrawable r0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r0.<android.graphics.drawable.LayerDrawable: boolean mSuspendChildInvalidation> = 1;

        return;
    }

    private void updateLayerBounds(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        java.lang.Throwable $r1;
        android.graphics.Rect r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r2 := @parameter0: android.graphics.Rect;

     label1:
        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void suspendChildInvalidation()>();

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateLayerBoundsInternal(android.graphics.Rect)>(r2);

     label2:
        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void resumeChildInvalidation()>();

        return;

     label3:
        $r1 := @caughtexception;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void resumeChildInvalidation()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void updateLayerBoundsInternal(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1, r2, r7;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39;
        boolean z0, z1, z3, z4;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable r5;
        android.graphics.drawable.Drawable r6;
        android.graphics.drawable.LayerDrawable$LayerState $r8, $r9, $r10;
        int[] $r11, $r12, $r13, $r14;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        i22 = 0;

        i23 = 0;

        i24 = 0;

        i25 = 0;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mTmpOutRect>;

        i0 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int getLayoutDirection()>();

        if i0 != 1 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        z0 = z3;

        z4 = 0;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i4 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$200(android.graphics.drawable.LayerDrawable$LayerState)>($r8);

        if $i4 != 0 goto label03;

        z4 = 1;

     label03:
        $r9 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r3 = $r9.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r10 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i1 = $r10.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        z1 = z4;

        i27 = 0;

     label04:
        if i27 >= i1 goto label16;

        r5 = r3[i27];

        r6 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r6 != null goto label05;

        i28 = i22;

        i29 = i23;

        i30 = i24;

        i31 = i25;

        goto label15;

     label05:
        i32 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT>;

        i33 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB>;

        if z0 == 0 goto label06;

        i34 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetE>;

        goto label07;

     label06:
        i34 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetS>;

     label07:
        i2 = i27;

        if z0 == 0 goto label08;

        i35 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetS>;

        goto label09;

     label08:
        i35 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetE>;

     label09:
        if i34 != -2147483648 goto label10;

        i34 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL>;

        goto label10;

     label10:
        if i35 != -2147483648 goto label11;

        i35 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR>;

        goto label11;

     label11:
        r7 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mTmpContainer>;

        $i5 = r1.<android.graphics.Rect: int left>;

        $i6 = $i5 + i34;

        $i16 = $i6 + i22;

        $i7 = r1.<android.graphics.Rect: int top>;

        $i8 = $i7 + i32;

        $i15 = $i8 + i23;

        $i9 = r1.<android.graphics.Rect: int right>;

        $i10 = $i9 - i35;

        $i14 = $i10 - i24;

        $i11 = r1.<android.graphics.Rect: int bottom>;

        $i12 = $i11 - i33;

        $i13 = $i12 - i25;

        virtualinvoke r7.<android.graphics.Rect: void set(int,int,int,int)>($i16, $i15, $i14, $i13);

        i36 = virtualinvoke r6.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i37 = virtualinvoke r6.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i38 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mWidth>;

        i39 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mHeight>;

        $i17 = r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mGravity>;

        i3 = staticinvoke <android.graphics.drawable.LayerDrawable: int resolveGravity(int,int,int,int,int)>($i17, i38, i39, i36, i37);

        if i38 >= 0 goto label12;

        goto label13;

     label12:
        i36 = i38;

     label13:
        if i39 >= 0 goto label14;

        i39 = i37;

        goto label14;

     label14:
        staticinvoke <android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>(i3, i36, i39, r7, r2, i0);

        virtualinvoke r6.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r2);

        i28 = i22;

        i29 = i23;

        i30 = i24;

        i31 = i25;

        if z1 == 0 goto label15;

        $r11 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i18 = $r11[i2];

        i28 = i22 + $i18;

        $r12 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i19 = $r12[i2];

        i30 = i24 + $i19;

        $r13 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i20 = $r13[i2];

        i29 = i23 + $i20;

        $r14 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i21 = $r14[i2];

        i31 = i25 + $i21;

     label15:
        i27 = i27 + 1;

        i22 = i28;

        i23 = i29;

        i24 = i30;

        i25 = i31;

        goto label04;

     label16:
        return;
    }

    private void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable, android.content.res.TypedArray)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable r1;
        android.graphics.drawable.LayerDrawable$LayerState r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28;
        int[] $r3;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r7, r9;
        android.content.res.TypedArray r8;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.LayerDrawable$ChildDrawable;

        r8 := @parameter1: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i2 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $i3 = virtualinvoke r8.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i4 = $i2 | $i3;

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i4;

        $r3 = virtualinvoke r8.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs> = $r3;

        i0 = virtualinvoke r8.<android.content.res.TypedArray: int getIndexCount()>();

        i28 = 0;

     label01:
        if i28 >= i0 goto label14;

        i1 = virtualinvoke r8.<android.content.res.TypedArray: int getIndex(int)>(i28);

        tableswitch(i1)
        {
            case 0: goto label12;
            case 1: goto label11;
            case 2: goto label10;
            case 3: goto label09;
            case 4: goto label02;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label06;
            case 8: goto label05;
            case 9: goto label04;
            case 10: goto label03;
            default: goto label02;
        };

     label02:
        goto label13;

     label03:
        $i8 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetE>;

        $i9 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i8);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetE> = $i9;

        goto label13;

     label04:
        $i10 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetS>;

        $i11 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i10);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetS> = $i11;

        goto label13;

     label05:
        $i12 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB>;

        $i13 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i12);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB> = $i13;

        goto label13;

     label06:
        $i14 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR>;

        $i15 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i14);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR> = $i15;

        goto label13;

     label07:
        $i16 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT>;

        $i17 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i16);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT> = $i17;

        goto label13;

     label08:
        $i18 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL>;

        $i19 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i18);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL> = $i19;

        goto label13;

     label09:
        $i20 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mWidth>;

        $i21 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i1, $i20);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mWidth> = $i21;

        goto label13;

     label10:
        $i22 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mHeight>;

        $i23 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i1, $i22);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mHeight> = $i23;

        goto label13;

     label11:
        $i24 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        $i25 = virtualinvoke r8.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i24);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId> = $i25;

        goto label13;

     label12:
        $i26 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mGravity>;

        $i27 = virtualinvoke r8.<android.content.res.TypedArray: int getInteger(int,int)>(i1, $i26);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mGravity> = $i27;

     label13:
        i28 = i28 + 1;

        goto label01;

     label14:
        r9 = virtualinvoke r8.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(4);

        if r9 == null goto label16;

        $r4 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r4 == null goto label15;

        $r7 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label15:
        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = r9;

        $r5 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i5 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $r6 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i6 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i7 = $i5 | $i6;

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i7;

     label16:
        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.LayerDrawable$LayerState r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22;
        int[] $r3;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i2 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations>;

        $i3 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i4 = $i2 | $i3;

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations> = $i4;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int[] access$002(android.graphics.drawable.LayerDrawable$LayerState,int[])>(r2, $r3);

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getIndexCount()>();

        i22 = 0;

     label01:
        if i22 >= i0 goto label13;

        i1 = virtualinvoke r1.<android.content.res.TypedArray: int getIndex(int)>(i22);

        tableswitch(i1)
        {
            case 0: goto label11;
            case 1: goto label10;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label07;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label04;
            case 8: goto label03;
            default: goto label02;
        };

     label02:
        goto label12;

     label03:
        $i5 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$200(android.graphics.drawable.LayerDrawable$LayerState)>(r2);

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getInteger(int,int)>(i1, $i5);

        staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$202(android.graphics.drawable.LayerDrawable$LayerState,int)>(r2, $i6);

        goto label12;

     label04:
        $z0 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: boolean access$100(android.graphics.drawable.LayerDrawable$LayerState)>(r2);

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z0);

        staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: boolean access$102(android.graphics.drawable.LayerDrawable$LayerState,boolean)>(r2, $z1);

        goto label12;

     label05:
        $i8 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd>;

        $i9 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i8);

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd> = $i9;

        goto label12;

     label06:
        $i10 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart>;

        $i11 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i10);

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart> = $i11;

        goto label12;

     label07:
        $i12 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacityOverride>;

        $i13 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i12);

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacityOverride> = $i13;

        goto label12;

     label08:
        $i14 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom>;

        $i15 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i14);

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom> = $i15;

        goto label12;

     label09:
        $i16 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight>;

        $i17 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i16);

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight> = $i17;

        goto label12;

     label10:
        $i18 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop>;

        $i19 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i18);

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop> = $i19;

        goto label12;

     label11:
        $i20 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft>;

        $i21 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i1, $i20);

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft> = $i21;

     label12:
        i22 = i22 + 1;

        goto label01;

     label13:
        return;
    }

    public int addLayer(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = specialinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$ChildDrawable createLayer(android.graphics.drawable.Drawable)>(r1);

        i0 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable)>(r2);

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i0, r2);

        return i0;
    }

    int addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable r1;
        android.graphics.drawable.LayerDrawable$LayerState r2;
        int i0, $i1, i2, $i3, $i4;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.LayerDrawable$ChildDrawable;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r4 = r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        if $r4 == null goto label1;

        $r6 = r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i2 = lengthof $r6;

        goto label2;

     label1:
        i2 = 0;

     label2:
        i0 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        if i0 < i2 goto label4;

        $i1 = i2 + 10;

        r3 = newarray (android.graphics.drawable.LayerDrawable$ChildDrawable)[$i1];

        if i0 <= 0 goto label3;

        $r5 = r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, 0, i0);

     label3:
        r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren> = r3;

     label4:
        $r7 = r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r7[i0] = r1;

        $i3 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        $i4 = $i3 + 1;

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren> = $i4;

        virtualinvoke r2.<android.graphics.drawable.LayerDrawable$LayerState: void invalidateCache()>();

        return i0;
    }

    android.graphics.drawable.LayerDrawable$ChildDrawable addLayer(android.graphics.drawable.Drawable, int[], int, int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1, $r3;
        int i0, i1, i2, i3, i4, $i6, $i7, $i8;
        android.graphics.drawable.LayerDrawable$ChildDrawable r2;
        boolean $z0;
        int[] r4;
        android.graphics.drawable.LayerDrawable$LayerState r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r4 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        r2 = specialinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$ChildDrawable createLayer(android.graphics.drawable.Drawable)>(r1);

        r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId> = i0;

        r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs> = r4;

        $r3 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: boolean isAutoMirrored()>();

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z0);

        r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL> = i1;

        r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT> = i2;

        r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR> = i3;

        r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB> = i4;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable)>(r2);

        r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i6 = r5.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $i7 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i8 = $i6 | $i7;

        r5.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i8;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        return r2;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.LayerDrawable$LayerState r2;
        int i0, i1, $i2, $i3, $i4, i5;
        android.content.res.TypedArray r3, r11;
        android.content.res.Resources $r4;
        int[] $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r12;
        android.graphics.drawable.LayerDrawable$ChildDrawable r13;
        android.graphics.drawable.Drawable r14;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r4 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        i0 = staticinvoke <android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>($r4, 0);

        virtualinvoke r2.<android.graphics.drawable.LayerDrawable$LayerState: void setDensity(int)>(i0);

        $r5 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int[] access$000(android.graphics.drawable.LayerDrawable$LayerState)>(r2);

        if $r5 == null goto label1;

        $r9 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int[] access$000(android.graphics.drawable.LayerDrawable$LayerState)>(r2);

        $r10 = <com.android.internal.R$styleable: int[] LayerDrawable>;

        r11 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r9, $r10);

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r11);

        virtualinvoke r11.<android.content.res.TypedArray: void recycle()>();

     label1:
        r12 = r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i1 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i5 = 0;

     label2:
        if i5 >= i1 goto label5;

        r13 = r12[i5];

        virtualinvoke r13.<android.graphics.drawable.LayerDrawable$ChildDrawable: void setDensity(int)>(i0);

        $r6 = r13.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs>;

        if $r6 == null goto label3;

        $r8 = r13.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs>;

        $r7 = <com.android.internal.R$styleable: int[] LayerDrawableItem>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r8, $r7);

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable,android.content.res.TypedArray)>(r13, r3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

     label3:
        r14 = r13.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r14 == null goto label4;

        $z0 = virtualinvoke r14.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z0 == 0 goto label4;

        virtualinvoke r14.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        $i2 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $i3 = virtualinvoke r14.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i4 = $i2 | $i3;

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i4;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        boolean $z0, $z1, z2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean canApplyTheme()>();

        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public void clearMutated()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void clearMutated()>();

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r1[i1];

        r2 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void clearMutated()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        r0.<android.graphics.drawable.LayerDrawable: boolean mMutated> = 0;

        return;
    }

    android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState, android.content.res.Resources)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState r1, $r3;
        android.content.res.Resources r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        r2 := @parameter1: android.content.res.Resources;

        $r3 = new android.graphics.drawable.LayerDrawable$LayerState;

        specialinvoke $r3.<android.graphics.drawable.LayerDrawable$LayerState: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources)>(r1, r0, r2);

        return $r3;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.Drawable r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4, $r5;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = r2[i1];

        r3 = $r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    void ensurePadding()
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        int[] r1, $r3, $r4, $r5, $r6;
        android.graphics.drawable.LayerDrawable$LayerState $r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 < i0 goto label1;

        return;

     label1:
        $r3 = newarray (int)[i0];

        r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL> = $r3;

        $r4 = newarray (int)[i0];

        r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT> = $r4;

        $r5 = newarray (int)[i0];

        r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR> = $r5;

        $r6 = newarray (int)[i0];

        r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB> = $r6;

        return;
    }

    public android.graphics.drawable.Drawable findDrawableByLayerId(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1, $i2, i3;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4, $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label3;

        $r4 = r1[i3];

        $i2 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        if $i2 != i0 goto label2;

        $r5 = r1[i3];

        $r6 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        return $r6;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return null;
    }

    public int findIndexByLayerId(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, $i2, i3;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $r4 = r1[i3];

        $i2 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        if $i2 != i0 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int getAlpha()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1;
        int $i0, $i1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 = specialinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getFirstNonNullDrawable()>();

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getAlpha()>();

        return $i1;

     label1:
        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getAlpha()>();

        return $i0;
    }

    public int getBottomPadding()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom>;

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.LayerDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.LayerDrawable$LayerState $r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        return $i2;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1, $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>();

        $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations> = $i0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        return $r3;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getDrawable(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1, $r3;
        java.lang.IndexOutOfBoundsException $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        if i0 >= $i1 goto label1;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r4 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = $r4[i0];

        $r6 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        return $r6;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public int getEndPadding()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd>;

        return $i0;
    }

    public void getHotspotBounds(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1, r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mHotspotBounds>;

        if r2 == null goto label1;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        goto label2;

     label1:
        specialinvoke r0.<android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    public int getId(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1, $i2;
        android.graphics.drawable.LayerDrawable$LayerState $r1, $r3;
        java.lang.IndexOutOfBoundsException $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        if i0 >= $i1 goto label1;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r4 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = $r4[i0];

        $i2 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        return $i2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, i17, i18;
        android.graphics.drawable.LayerDrawable$ChildDrawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4, $r5;
        android.graphics.drawable.Drawable $r6, $r9;
        int[] $r7, $r8;
        boolean z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i10 = -1;

        i11 = 0;

        i12 = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$200(android.graphics.drawable.LayerDrawable$LayerState)>($r3);

        if $i1 != 0 goto label01;

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i13 = 0;

     label03:
        if i13 >= i0 goto label11;

        r2 = r1[i13];

        $r6 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r6 != null goto label04;

        i14 = i11;

        i15 = i12;

        goto label10;

     label04:
        $i2 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mHeight>;

        if $i2 >= 0 goto label05;

        $r9 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        i16 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label06;

     label05:
        i16 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mHeight>;

     label06:
        if i16 >= 0 goto label07;

        i17 = -1;

        goto label08;

     label07:
        $i3 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT>;

        $i5 = $i3 + i16;

        $i4 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB>;

        $i6 = $i5 + $i4;

        $i7 = $i6 + i11;

        i17 = $i7 + i12;

     label08:
        i18 = i10;

        if i17 <= i10 goto label09;

        i18 = i17;

     label09:
        i10 = i18;

        i14 = i11;

        i15 = i12;

        if z0 == 0 goto label10;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i8 = $r7[i13];

        i14 = i11 + $i8;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i9 = $r8[i13];

        i15 = i12 + $i9;

        i10 = i18;

     label10:
        i13 = i13 + 1;

        i11 = i14;

        i12 = i15;

        goto label03;

     label11:
        return i10;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        android.graphics.drawable.LayerDrawable$ChildDrawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4, $r5;
        android.graphics.drawable.Drawable $r6, $r9;
        int[] $r7, $r8;
        boolean z0, z1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i8 = -1;

        i9 = 0;

        i10 = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i11 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$200(android.graphics.drawable.LayerDrawable$LayerState)>($r3);

        z0 = 0;

        if i11 != 0 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        $i1 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int getLayoutDirection()>();

        if $i1 != 1 goto label03;

        z0 = 1;

     label03:
        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i12 = 0;

     label04:
        if i12 >= i0 goto label18;

        r2 = r1[i12];

        $r6 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r6 != null goto label05;

        i13 = i8;

        goto label17;

     label05:
        if z0 == 0 goto label06;

        i14 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetE>;

        goto label07;

     label06:
        i14 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetS>;

     label07:
        if z0 == 0 goto label08;

        i15 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetS>;

        goto label09;

     label08:
        i15 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetE>;

     label09:
        if i14 != -2147483648 goto label10;

        i14 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL>;

        goto label10;

     label10:
        if i15 != -2147483648 goto label11;

        i15 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR>;

        goto label11;

     label11:
        $i2 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mWidth>;

        if $i2 >= 0 goto label12;

        $r9 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        i16 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        goto label13;

     label12:
        i16 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mWidth>;

     label13:
        if i16 >= 0 goto label14;

        i17 = -1;

        goto label15;

     label14:
        $i3 = i16 + i14;

        $i4 = $i3 + i15;

        $i5 = $i4 + i9;

        i17 = $i5 + i10;

     label15:
        i13 = i8;

        if i17 <= i8 goto label16;

        i13 = i17;

     label16:
        if z1 == 0 goto label17;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i6 = $r7[i12];

        i9 = i9 + $i6;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i7 = $r8[i12];

        i10 = i10 + $i7;

        goto label17;

     label17:
        i12 = i12 + 1;

        i8 = i13;

        goto label04;

     label18:
        return i8;
    }

    public int getLayerGravity(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mGravity>;

        return $i1;
    }

    public int getLayerHeight(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mHeight>;

        return $i1;
    }

    public int getLayerInsetBottom(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB>;

        return $i1;
    }

    public int getLayerInsetEnd(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetE>;

        return $i1;
    }

    public int getLayerInsetLeft(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL>;

        return $i1;
    }

    public int getLayerInsetRight(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR>;

        return $i1;
    }

    public int getLayerInsetStart(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetS>;

        return $i1;
    }

    public int getLayerInsetTop(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT>;

        return $i1;
    }

    public int getLayerWidth(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mWidth>;

        return $i1;
    }

    public int getLeftPadding()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft>;

        return $i0;
    }

    public int getNumberOfLayers()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1, $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacityOverride>;

        if $i0 == 0 goto label1;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacityOverride>;

        return $i2;

     label1:
        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = virtualinvoke $r2.<android.graphics.drawable.LayerDrawable$LayerState: int getOpacity()>();

        return $i1;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Outline r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.Drawable r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4, $r5;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r6;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Outline;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = r2[i1];

        r3 = $r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>(r1);

        $z0 = virtualinvoke r1.<android.graphics.Outline: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.LayerDrawable$LayerState r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        boolean z0, z1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i2 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$200(android.graphics.drawable.LayerDrawable$LayerState)>(r2);

        if $i2 != 0 goto label01;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void computeNestedPadding(android.graphics.Rect)>(r1);

        goto label02;

     label01:
        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void computeStackedPadding(android.graphics.Rect)>(r1);

     label02:
        i0 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop>;

        i1 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom>;

        i7 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int getLayoutDirection()>();

        z0 = 0;

        if i7 != 1 goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        if z1 == 0 goto label05;

        i8 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd>;

        goto label06;

     label05:
        i8 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart>;

     label06:
        if z1 == 0 goto label07;

        i9 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart>;

        goto label08;

     label07:
        i9 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd>;

     label08:
        if i8 < 0 goto label09;

        goto label10;

     label09:
        i8 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft>;

     label10:
        if i9 < 0 goto label11;

        goto label12;

     label11:
        i9 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight>;

     label12:
        if i8 < 0 goto label13;

        r1.<android.graphics.Rect: int left> = i8;

     label13:
        if i0 < 0 goto label14;

        r1.<android.graphics.Rect: int top> = i0;

     label14:
        if i9 < 0 goto label15;

        r1.<android.graphics.Rect: int right> = i9;

     label15:
        if i1 < 0 goto label16;

        r1.<android.graphics.Rect: int bottom> = i1;

     label16:
        $i3 = r1.<android.graphics.Rect: int left>;

        if $i3 != 0 goto label17;

        $i4 = r1.<android.graphics.Rect: int top>;

        if $i4 != 0 goto label17;

        $i5 = r1.<android.graphics.Rect: int right>;

        if $i5 != 0 goto label17;

        $i6 = r1.<android.graphics.Rect: int bottom>;

        if $i6 == 0 goto label18;

     label17:
        z0 = 1;

     label18:
        return z0;
    }

    public int getPaddingMode()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$200(android.graphics.drawable.LayerDrawable$LayerState)>($r1);

        return $i0;
    }

    public int getRightPadding()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight>;

        return $i0;
    }

    public int getStartPadding()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart>;

        return $i0;
    }

    public int getTopPadding()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop>;

        return $i0;
    }

    public boolean hasFocusStateSpecified()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean hasFocusStateSpecified()>();

        return $z0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.graphics.drawable.LayerDrawable$LayerState r5;
        int i0, i1, i2;
        int[] $r6;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r7;
        android.content.res.TypedArray r8;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r9;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = staticinvoke <android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>(r1, 0);

        virtualinvoke r5.<android.graphics.drawable.LayerDrawable$LayerState: void setDensity(int)>(i0);

        $r6 = <com.android.internal.R$styleable: int[] LayerDrawable>;

        r8 = staticinvoke <android.graphics.drawable.LayerDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r6);

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r8);

        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        r9 = r5.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i1 = r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r7 = r9[i2];

        virtualinvoke $r7.<android.graphics.drawable.LayerDrawable$ChildDrawable: void setDensity(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void inflateLayers(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void refreshPadding()>();

        return;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;
        android.graphics.drawable.LayerDrawable$LayerState $r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = r0.<android.graphics.drawable.LayerDrawable: boolean mSuspendChildInvalidation>;

        if $z0 == 0 goto label1;

        r0.<android.graphics.drawable.LayerDrawable: boolean mChildRequestedInvalidation> = 1;

        goto label2;

     label1:
        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        virtualinvoke $r2.<android.graphics.drawable.LayerDrawable$LayerState: void invalidateCache()>();

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void invalidateSelf()>();

     label2:
        return;
    }

    public boolean isAutoMirrored()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $z0 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: boolean access$100(android.graphics.drawable.LayerDrawable$LayerState)>($r1);

        return $z0;
    }

    public boolean isProjected()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2;
        boolean $z0, $z1;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean isProjected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r5 = r1[i1];

        r2 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label3;

        $z1 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean isProjected()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean isStateful()>();

        return $z0;
    }

    public void jumpToCurrentState()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r1[i1];

        r2 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, r8;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4, r7;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $z0 = r0.<android.graphics.drawable.LayerDrawable: boolean mMutated>;

        if $z0 != 0 goto label4;

        $r2 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 != r0 goto label4;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r7 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>($r3, null);

        r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState> = r7;

        r1 = r7.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r1[i1];

        r8 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r8 == null goto label2;

        virtualinvoke r8.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        r0.<android.graphics.drawable.LayerDrawable: boolean mMutated> = 1;

     label4:
        return r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateLayerBounds(android.graphics.Rect)>(r1);

        return;
    }

    public boolean onLayoutDirectionChanged(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.Rect $r5;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r6;
        boolean $z0, z1, z2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        z1 = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i1 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r6 = r1[i2];

        r2 = $r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        z2 = z1;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>(i0);

        z2 = z1 | $z0;

     label2:
        i2 = i2 + 1;

        z1 = z2;

        goto label1;

     label3:
        $r5 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect getBounds()>();

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateLayerBounds(android.graphics.Rect)>($r5);

        return z1;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.Rect $r5;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r6, $r7;
        boolean $z0, z2, z3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        z2 = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i1 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r6 = r1[i2];

        r2 = $r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        z3 = z2;

        if r2 == null goto label2;

        z3 = z2;

        $z0 = virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        if $z0 == 0 goto label2;

        $r7 = r1[i2];

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i2, $r7);

        z3 = 1;

     label2:
        i2 = i2 + 1;

        z2 = z3;

        goto label1;

     label3:
        if z2 == 0 goto label4;

        $r5 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect getBounds()>();

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateLayerBounds(android.graphics.Rect)>($r5);

     label4:
        return z2;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.LayerDrawable r0;
        int[] r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.Drawable r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4, $r5;
        android.graphics.Rect $r6;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r7, $r8;
        boolean $z0, $z1, z3, z4;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: int[];

        z3 = 0;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r7 = r2[i1];

        r3 = $r7.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        z4 = z3;

        if r3 == null goto label2;

        z4 = z3;

        $z0 = virtualinvoke r3.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label2;

        z4 = z3;

        $z1 = virtualinvoke r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        if $z1 == 0 goto label2;

        $r8 = r2[i1];

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i1, $r8);

        z4 = 1;

     label2:
        i1 = i1 + 1;

        z3 = z4;

        goto label1;

     label3:
        if z3 == 0 goto label4;

        $r6 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect getBounds()>();

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateLayerBounds(android.graphics.Rect)>($r6);

     label4:
        return z3;
    }

    void refreshPadding()
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r1[i1];

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i1, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        long l0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void scheduleSelf(java.lang.Runnable,long)>(r2, l0);

        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i1 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r5 = r1[i2];

        r2 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public void setAutoMirrored(boolean)
    {
        android.graphics.drawable.LayerDrawable r0;
        boolean z0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4, $r5;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        z0 := @parameter0: boolean;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: boolean access$102(android.graphics.drawable.LayerDrawable$LayerState,boolean)>($r3, z0);

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = r1[i1];

        r2 = $r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>(z0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.Drawable r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4, $r5;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = r2[i1];

        r3 = $r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.LayerDrawable r0;
        boolean z0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        z0 := @parameter0: boolean;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r1[i1];

        r2 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setDither(boolean)>(z0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setDrawable(int, android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.Drawable r1, $r7, $r9, $r10;
        android.graphics.drawable.LayerDrawable$ChildDrawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r5, $r8;
        java.lang.IndexOutOfBoundsException $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r6;
        android.graphics.Rect $r11;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        if i0 >= $i1 goto label4;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r6 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        r2 = $r6[i0];

        $r7 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r7 == null goto label2;

        if r1 == null goto label1;

        $r10 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $r11 = virtualinvoke $r10.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r11);

     label1:
        $r9 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label2:
        if r1 == null goto label3;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label3:
        r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = r1;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        virtualinvoke $r8.<android.graphics.drawable.LayerDrawable$LayerState: void invalidateCache()>();

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i0, r2);

        return;

     label4:
        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;
    }

    public boolean setDrawableByLayerId(int, android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1;
        int i0, i1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        i1 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int findIndexByLayerId(int)>(i0);

        if i1 >= 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void setDrawable(int,android.graphics.drawable.Drawable)>(i1, r1);

        return 1;
    }

    public void setHotspot(float, float)
    {
        android.graphics.drawable.LayerDrawable r0;
        float f0, f1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r1[i1];

        r2 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, i3, i4, i5;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.Rect $r4, r7;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r6 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i4 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i5 = 0;

     label1:
        if i5 >= i4 goto label3;

        $r5 = r6[i5];

        r1 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label2;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        r7 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mHotspotBounds>;

        if r7 != null goto label4;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mHotspotBounds> = $r4;

        goto label5;

     label4:
        virtualinvoke r7.<android.graphics.Rect: void set(int,int,int,int)>(i0, i1, i2, i3);

     label5:
        return;
    }

    public void setId(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId> = i1;

        return;
    }

    public void setLayerGravity(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mGravity> = i1;

        return;
    }

    public void setLayerHeight(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mHeight> = i1;

        return;
    }

    public void setLayerInset(int, int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, i3, i4;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void setLayerInsetInternal(int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, -2147483648, -2147483648);

        return;
    }

    public void setLayerInsetBottom(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB> = i1;

        return;
    }

    public void setLayerInsetEnd(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetE> = i1;

        return;
    }

    public void setLayerInsetLeft(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL> = i1;

        return;
    }

    public void setLayerInsetRelative(int, int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, i3, i4;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void setLayerInsetInternal(int,int,int,int,int,int,int)>(i0, 0, i2, 0, i4, i1, i3);

        return;
    }

    public void setLayerInsetRight(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR> = i1;

        return;
    }

    public void setLayerInsetStart(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetS> = i1;

        return;
    }

    public void setLayerInsetTop(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT> = i1;

        return;
    }

    public void setLayerSize(int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r3 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        r1 = $r3[i0];

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mWidth> = i1;

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mHeight> = i2;

        return;
    }

    public void setLayerWidth(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mWidth> = i1;

        return;
    }

    public void setOpacity(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mOpacityOverride> = i0;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, i3;
        android.graphics.drawable.LayerDrawable$LayerState r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft> = i0;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop> = i1;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight> = i2;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom> = i3;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart> = -1;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd> = -1;

        return;
    }

    public void setPaddingMode(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1, $r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$200(android.graphics.drawable.LayerDrawable$LayerState)>($r1);

        if $i1 == i0 goto label1;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$202(android.graphics.drawable.LayerDrawable$LayerState,int)>($r2, i0);

     label1:
        return;
    }

    public void setPaddingRelative(int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, i3;
        android.graphics.drawable.LayerDrawable$LayerState r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingStart> = i0;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingTop> = i1;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingEnd> = i2;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingBottom> = i3;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingLeft> = -1;

        r1.<android.graphics.drawable.LayerDrawable$LayerState: int mPaddingRight> = -1;

        return;
    }

    public void setTintBlendMode(android.graphics.BlendMode)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.BlendMode r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.Drawable r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4, $r5;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.BlendMode;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = r2[i1];

        r3 = $r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setTintBlendMode(android.graphics.BlendMode)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.Drawable r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4, $r5;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = r2[i1];

        r3 = $r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.LayerDrawable r0;
        boolean z0, z1, z2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNumChildren>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r1[i1];

        r2 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z2;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void unscheduleSelf(java.lang.Runnable)>(r2);

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.LayerDrawable: int PADDING_MODE_STACK> = 1;

        <android.graphics.drawable.LayerDrawable: int PADDING_MODE_NEST> = 0;

        <android.graphics.drawable.LayerDrawable: java.lang.String LOG_TAG> = "LayerDrawable";

        <android.graphics.drawable.LayerDrawable: int INSET_UNDEFINED> = -2147483648;

        return;
    }
}
