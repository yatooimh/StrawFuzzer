public class android.graphics.drawable.LevelListDrawable extends android.graphics.drawable.DrawableContainer
{
    private android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState;
    private boolean mMutated;

    public void <init>()
    {
        android.graphics.drawable.LevelListDrawable r0;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        specialinvoke r0.<android.graphics.drawable.LevelListDrawable: void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources)>(null, null);

        return;
    }

    private void <init>(android.graphics.drawable.LevelListDrawable$LevelListState, android.content.res.Resources)
    {
        android.graphics.drawable.LevelListDrawable r0;
        android.graphics.drawable.LevelListDrawable$LevelListState r1, $r3;
        android.content.res.Resources r2;
        int $i0;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        r1 := @parameter0: android.graphics.drawable.LevelListDrawable$LevelListState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void <init>()>();

        $r3 = new android.graphics.drawable.LevelListDrawable$LevelListState;

        specialinvoke $r3.<android.graphics.drawable.LevelListDrawable$LevelListState: void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.graphics.drawable.LevelListDrawable,android.content.res.Resources)>(r1, r0, r2);

        virtualinvoke r0.<android.graphics.drawable.LevelListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>($r3);

        $i0 = virtualinvoke r0.<android.graphics.drawable.LevelListDrawable: int getLevel()>();

        virtualinvoke r0.<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>($i0);

        return;
    }

    void <init>(android.graphics.drawable.LevelListDrawable$LevelListState, android.content.res.Resources, android.graphics.drawable.LevelListDrawable$1)
    {
        android.graphics.drawable.LevelListDrawable r0;
        android.graphics.drawable.LevelListDrawable$LevelListState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.LevelListDrawable$1 r3;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        r1 := @parameter0: android.graphics.drawable.LevelListDrawable$LevelListState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.LevelListDrawable$1;

        specialinvoke r0.<android.graphics.drawable.LevelListDrawable: void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.LevelListDrawable r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, i8;
        java.lang.String $r4, $r7, $r11, $r13, $r17;
        boolean $z1;
        int[] $r5;
        android.graphics.drawable.LevelListDrawable$LevelListState $r18;
        android.content.res.Resources r19;
        android.content.res.TypedArray r20;
        android.graphics.drawable.Drawable r21;
        java.lang.StringBuilder r24, r26;
        org.xmlpull.v1.XmlPullParserException r25, r27;
        java.lang.Throwable r28, r29;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        r19 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i1 + 1;

     label01:
        i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i3 == 1 goto label10;

        i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i4 >= i0 goto label02;

        if i3 == 3 goto label10;

     label02:
        if i3 == 2 goto label03;

        goto label01;

     label03:
        if i4 > i0 goto label01;

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 != 0 goto label04;

        goto label01;

     label04:
        $r5 = <com.android.internal.R$styleable: int[] LevelListDrawableItem>;

        r20 = staticinvoke <android.graphics.drawable.LevelListDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r19, r3, r2, $r5);

        i5 = virtualinvoke r20.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        i6 = virtualinvoke r20.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        i7 = virtualinvoke r20.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        virtualinvoke r20.<android.content.res.TypedArray: void recycle()>();

        if i6 < 0 goto label09;

        if i7 == 0 goto label05;

        r21 = virtualinvoke r19.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(i7, r3);

        goto label07;

     label05:
        i8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i8 != 4 goto label06;

        goto label05;

     label06:
        if i8 != 2 goto label08;

        r21 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r19, r1, r2, r3);

     label07:
        $r18 = r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        virtualinvoke $r18.<android.graphics.drawable.LevelListDrawable$LevelListState: void addLevel(int,int,android.graphics.drawable.Drawable)>(i5, i6, r21);

        goto label01;

     label08:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        r25 = new org.xmlpull.v1.XmlPullParserException;

        $r17 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r17);

        r28 = (java.lang.Throwable) r25;

        throw r28;

     label09:
        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'maxLevel\' attribute");

        r27 = new org.xmlpull.v1.XmlPullParserException;

        $r11 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r27.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11);

        r29 = (java.lang.Throwable) r27;

        throw r29;

     label10:
        $i2 = virtualinvoke r0.<android.graphics.drawable.LevelListDrawable: int getLevel()>();

        virtualinvoke r0.<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>($i2);

        return;
    }

    public void addLevel(int, int, android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LevelListDrawable r0;
        int i0, i1, $i2;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.LevelListDrawable$LevelListState $r2;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        $r2 = r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        virtualinvoke $r2.<android.graphics.drawable.LevelListDrawable$LevelListState: void addLevel(int,int,android.graphics.drawable.Drawable)>(i0, i1, r1);

        $i2 = virtualinvoke r0.<android.graphics.drawable.LevelListDrawable: int getLevel()>();

        virtualinvoke r0.<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>($i2);

     label1:
        return;
    }

    public void clearMutated()
    {
        android.graphics.drawable.LevelListDrawable r0;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void clearMutated()>();

        r0.<android.graphics.drawable.LevelListDrawable: boolean mMutated> = 0;

        return;
    }

    volatile android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
    {
        android.graphics.drawable.LevelListDrawable r0;
        android.graphics.drawable.LevelListDrawable$LevelListState $r1;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        $r1 = virtualinvoke r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState cloneConstantState()>();

        return $r1;
    }

    android.graphics.drawable.LevelListDrawable$LevelListState cloneConstantState()
    {
        android.graphics.drawable.LevelListDrawable r0;
        android.graphics.drawable.LevelListDrawable$LevelListState $r1, $r2;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        $r1 = new android.graphics.drawable.LevelListDrawable$LevelListState;

        $r2 = r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        specialinvoke $r1.<android.graphics.drawable.LevelListDrawable$LevelListState: void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.graphics.drawable.LevelListDrawable,android.content.res.Resources)>($r2, r0, null);

        return $r1;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.LevelListDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        virtualinvoke r0.<android.graphics.drawable.LevelListDrawable: void updateDensity(android.content.res.Resources)>(r1);

        specialinvoke r0.<android.graphics.drawable.LevelListDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.LevelListDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.LevelListDrawable$LevelListState $r2;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        $z0 = r0.<android.graphics.drawable.LevelListDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        staticinvoke <android.graphics.drawable.LevelListDrawable$LevelListState: void access$000(android.graphics.drawable.LevelListDrawable$LevelListState)>($r2);

        r0.<android.graphics.drawable.LevelListDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.LevelListDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LevelListDrawable$LevelListState $r1;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.LevelListDrawable$LevelListState: int indexOfLevel(int)>(i0);

        $z0 = virtualinvoke r0.<android.graphics.drawable.LevelListDrawable: boolean selectDrawable(int)>($i1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)>(i0);

        return $z1;
    }

    protected void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        android.graphics.drawable.LevelListDrawable r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r1;
        boolean $z0;
        android.graphics.drawable.LevelListDrawable$LevelListState $r2;

        r0 := @this: android.graphics.drawable.LevelListDrawable;

        r1 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r1);

        $z0 = r1 instanceof android.graphics.drawable.LevelListDrawable$LevelListState;

        if $z0 == 0 goto label1;

        $r2 = (android.graphics.drawable.LevelListDrawable$LevelListState) r1;

        r0.<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.LevelListDrawable$LevelListState mLevelListState> = $r2;

     label1:
        return;
    }
}
