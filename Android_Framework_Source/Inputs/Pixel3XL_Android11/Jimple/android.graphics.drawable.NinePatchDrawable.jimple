public class android.graphics.drawable.NinePatchDrawable extends android.graphics.drawable.Drawable
{
    private static final boolean DEFAULT_DITHER;
    private int mBitmapHeight;
    private int mBitmapWidth;
    private android.graphics.BlendModeColorFilter mBlendModeFilter;
    private boolean mMutated;
    private android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState;
    private android.graphics.Insets mOpticalInsets;
    private android.graphics.Rect mOutlineInsets;
    private float mOutlineRadius;
    private android.graphics.Rect mPadding;
    private android.graphics.Paint mPaint;
    private int mTargetDensity;
    private android.graphics.Rect mTempRect;

    void <init>()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Insets $r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r1 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r1;

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = 160;

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth> = -1;

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight> = -1;

        $r2 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        specialinvoke $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>()>();

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState> = $r2;

        return;
    }

    public void <init>(android.content.res.Resources, android.graphics.Bitmap, byte[], android.graphics.Rect, android.graphics.Rect, java.lang.String)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap r2;
        byte[] r3;
        android.graphics.Rect r4, r5;
        java.lang.String r6;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r7;
        android.graphics.NinePatch $r8;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.Bitmap;

        r3 := @parameter2: byte[];

        r4 := @parameter3: android.graphics.Rect;

        r5 := @parameter4: android.graphics.Rect;

        r6 := @parameter5: java.lang.String;

        $r7 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r8 = new android.graphics.NinePatch;

        specialinvoke $r8.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>(r2, r3, r6);

        specialinvoke $r7.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect)>($r8, r4, r5);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>($r7, r1);

        return;
    }

    public void <init>(android.content.res.Resources, android.graphics.Bitmap, byte[], android.graphics.Rect, java.lang.String)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap r2;
        byte[] r3;
        android.graphics.Rect r4;
        java.lang.String r5;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r6;
        android.graphics.NinePatch $r7;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.Bitmap;

        r3 := @parameter2: byte[];

        r4 := @parameter3: android.graphics.Rect;

        r5 := @parameter4: java.lang.String;

        $r6 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r7 = new android.graphics.NinePatch;

        specialinvoke $r7.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>(r2, r3, r5);

        specialinvoke $r6.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>($r7, r4);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>($r6, r1);

        return;
    }

    public void <init>(android.content.res.Resources, android.graphics.NinePatch)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.graphics.NinePatch r2;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r3;
        android.graphics.Rect $r4;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.NinePatch;

        $r3 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        specialinvoke $r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>(r2, $r4);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>($r3, r1);

        return;
    }

    public void <init>(android.graphics.Bitmap, byte[], android.graphics.Rect, java.lang.String)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Bitmap r1;
        byte[] r2;
        android.graphics.Rect r3;
        java.lang.String r4;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r5;
        android.graphics.NinePatch $r6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: byte[];

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: java.lang.String;

        $r5 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r6 = new android.graphics.NinePatch;

        specialinvoke $r6.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>(r1, r2, r4);

        specialinvoke $r5.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>($r6, r3);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>($r5, null);

        return;
    }

    public void <init>(android.graphics.NinePatch)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.NinePatch r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2;
        android.graphics.Rect $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.NinePatch;

        $r2 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        specialinvoke $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>(r1, $r3);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>($r2, null);

        return;
    }

    private void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState, android.content.res.Resources)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        android.content.res.Resources r2;
        android.graphics.Insets $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.drawable.NinePatchDrawable$NinePatchState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r3 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r3;

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = 160;

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth> = -1;

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight> = -1;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState> = r1;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void updateLocalState(android.content.res.Resources)>(r2);

        return;
    }

    void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState, android.content.res.Resources, android.graphics.drawable.NinePatchDrawable$1)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.NinePatchDrawable$1 r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.drawable.NinePatchDrawable$NinePatchState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.NinePatchDrawable$1;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void computeBitmapSize()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1, $r2, $r5;
        android.graphics.Insets $r3, $r4, $r14, r16;
        android.graphics.Bitmap $r6;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.Rect $r7, $r8, $r9, $r10, $r11, $r12, $r13, r17, r19;
        android.graphics.NinePatch r15;
        android.graphics.NinePatch$InsetStruct r18;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        r15 = $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        if r15 != null goto label01;

        return;

     label01:
        i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        $i1 = virtualinvoke r15.<android.graphics.NinePatch: int getDensity()>();

        if $i1 != 0 goto label02;

        i26 = i0;

        goto label03;

     label02:
        i26 = virtualinvoke r15.<android.graphics.NinePatch: int getDensity()>();

     label03:
        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        r16 = $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Insets mOpticalInsets>;

        $r3 = <android.graphics.Insets: android.graphics.Insets NONE>;

        if r16 == $r3 goto label04;

        $i18 = r16.<android.graphics.Insets: int left>;

        $i19 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i18, i26, i0, 1);

        $i20 = r16.<android.graphics.Insets: int top>;

        $i21 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i20, i26, i0, 1);

        $i22 = r16.<android.graphics.Insets: int right>;

        $i23 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i22, i26, i0, 1);

        $i24 = r16.<android.graphics.Insets: int bottom>;

        $i25 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i24, i26, i0, 1);

        $r14 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i19, $i21, $i23, $i25);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r14;

        goto label05;

     label04:
        $r4 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r4;

     label05:
        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        r17 = $r5.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Rect mPadding>;

        if r17 == null goto label07;

        $r8 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        if $r8 != null goto label06;

        $r13 = new android.graphics.Rect;

        specialinvoke $r13.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding> = $r13;

     label06:
        $r9 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        $i10 = r17.<android.graphics.Rect: int left>;

        $i11 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i10, i26, i0, 1);

        $r9.<android.graphics.Rect: int left> = $i11;

        $r10 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        $i12 = r17.<android.graphics.Rect: int top>;

        $i13 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i12, i26, i0, 1);

        $r10.<android.graphics.Rect: int top> = $i13;

        $r11 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        $i14 = r17.<android.graphics.Rect: int right>;

        $i15 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i14, i26, i0, 1);

        $r11.<android.graphics.Rect: int right> = $i15;

        $r12 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        $i16 = r17.<android.graphics.Rect: int bottom>;

        $i17 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i16, i26, i0, 1);

        $r12.<android.graphics.Rect: int bottom> = $i17;

        goto label08;

     label07:
        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding> = null;

     label08:
        $i2 = virtualinvoke r15.<android.graphics.NinePatch: int getHeight()>();

        $i3 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i2, i26, i0, 1);

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight> = $i3;

        $i4 = virtualinvoke r15.<android.graphics.NinePatch: int getWidth()>();

        $i5 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>($i4, i26, i0, 1);

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth> = $i5;

        $r6 = virtualinvoke r15.<android.graphics.NinePatch: android.graphics.Bitmap getBitmap()>();

        r18 = virtualinvoke $r6.<android.graphics.Bitmap: android.graphics.NinePatch$InsetStruct getNinePatchInsets()>();

        if r18 == null goto label09;

        r19 = r18.<android.graphics.NinePatch$InsetStruct: android.graphics.Rect outlineRect>;

        $i9 = r19.<android.graphics.Rect: int left>;

        $i8 = r19.<android.graphics.Rect: int top>;

        $i7 = r19.<android.graphics.Rect: int right>;

        $i6 = r19.<android.graphics.Rect: int bottom>;

        $f1 = (float) i0;

        $f0 = (float) i26;

        $f2 = $f1 / $f0;

        $r7 = staticinvoke <android.graphics.NinePatch$InsetStruct: android.graphics.Rect scaleInsets(int,int,int,int,float)>($i9, $i8, $i7, $i6, $f2);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mOutlineInsets> = $r7;

        $f3 = r18.<android.graphics.NinePatch$InsetStruct: float outlineRadius>;

        $f4 = staticinvoke <android.graphics.drawable.Drawable: float scaleFromDensity(float,int,int)>($f3, i26, i0);

        r0.<android.graphics.drawable.NinePatchDrawable: float mOutlineRadius> = $f4;

        goto label10;

     label09:
        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mOutlineInsets> = null;

     label10:
        return;
    }

    static void lambda$updateStateFromTypedArray$0(android.graphics.Rect, android.graphics.ImageDecoder, android.graphics.ImageDecoder$ImageInfo, android.graphics.ImageDecoder$Source)
    {
        android.graphics.Rect r0;
        android.graphics.ImageDecoder r1;
        android.graphics.ImageDecoder$ImageInfo r2;
        android.graphics.ImageDecoder$Source r3;

        r0 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.graphics.ImageDecoder;

        r2 := @parameter2: android.graphics.ImageDecoder$ImageInfo;

        r3 := @parameter3: android.graphics.ImageDecoder$Source;

        virtualinvoke r1.<android.graphics.ImageDecoder: void setOutPaddingRect(android.graphics.Rect)>(r0);

        virtualinvoke r1.<android.graphics.ImageDecoder: void setAllocator(int)>(1);

        return;
    }

    private boolean needsMirroring()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean z0, z1;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        z0 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean isAutoMirrored()>();

        z1 = 1;

        if z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private void updateLocalState(android.content.res.Resources)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        android.graphics.NinePatch $r3, $r4;
        android.graphics.BlendModeColorFilter $r5, $r8;
        android.content.res.ColorStateList $r6;
        android.graphics.BlendMode $r7;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $z0 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither>;

        if $z0 == 0 goto label1;

        $z1 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither>;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>($z1);

     label1:
        if r1 != null goto label2;

        $r3 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        if $r3 == null goto label2;

        $r4 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        $i2 = virtualinvoke $r4.<android.graphics.NinePatch: int getDensity()>();

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = $i2;

        goto label3;

     label2:
        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        $i1 = staticinvoke <android.graphics.drawable.Drawable: int resolveDensity(android.content.res.Resources,int)>(r1, $i0);

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = $i1;

     label3:
        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter mBlendModeFilter>;

        $r6 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $r7 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.BlendMode mBlendMode>;

        $r8 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, $r6, $r7);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter mBlendModeFilter> = $r8;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void computeBitmapSize()>();

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray) throws org.xmlpull.v1.XmlPullParserException
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        java.io.InputStream r4;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        int[] $r5;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1;
        android.graphics.BlendMode $r6, $r7;
        java.lang.String $r11, $r13, $r16, $r18;
        byte[] $r14, $r20;
        android.graphics.Insets $r21;
        java.lang.Throwable $r22, r42, r43;
        android.content.res.TypedArray r23;
        android.content.res.Resources r24;
        android.graphics.Bitmap r25, r29;
        android.graphics.ImageDecoder$Source r27;
        android.content.res.ColorStateList r32;
        android.graphics.Rect r33, r34;
        android.util.TypedValue r35;
        android.graphics.drawable._$$Lambda$NinePatchDrawable$yQvfm7FAkslD5wdGFysjgwt8cLE r36;
        android.graphics.NinePatch r37;
        java.lang.StringBuilder r38, r40;
        org.xmlpull.v1.XmlPullParserException r39, r41;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r23 := @parameter0: android.content.res.TypedArray;

        r24 = virtualinvoke r23.<android.content.res.TypedArray: android.content.res.Resources getResources()>();

        r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i0 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mChangingConfigurations>;

        $i1 = virtualinvoke r23.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mChangingConfigurations> = $i2;

        $r5 = virtualinvoke r23.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int[] mThemeAttrs> = $r5;

        $z0 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither>;

        $z1 = virtualinvoke r23.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, $z0);

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither> = $z1;

        i5 = virtualinvoke r23.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i5 == 0 goto label28;

        r33 = new android.graphics.Rect;

        specialinvoke r33.<android.graphics.Rect: void <init>()>();

        r34 = new android.graphics.Rect;

        specialinvoke r34.<android.graphics.Rect: void <init>()>();

        r25 = null;

     label01:
        r35 = new android.util.TypedValue;

     label02:
        r25 = null;

     label03:
        specialinvoke r35.<android.util.TypedValue: void <init>()>();

     label04:
        r25 = null;

     label05:
        r4 = virtualinvoke r24.<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>(i5, r35);

     label06:
        i6 = 0;

        r25 = null;

     label07:
        $i3 = r35.<android.util.TypedValue: int density>;

        if $i3 != 0 goto label09;

     label08:
        i6 = 160;

        goto label13;

     label09:
        r25 = null;

     label10:
        $i4 = r35.<android.util.TypedValue: int density>;

        if $i4 == 65535 goto label13;

     label11:
        r25 = null;

     label12:
        i6 = r35.<android.util.TypedValue: int density>;

     label13:
        r25 = null;

     label14:
        r27 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder$Source createSource(android.content.res.Resources,java.io.InputStream,int)>(r24, r4, i6);

     label15:
        r25 = null;

     label16:
        r36 = new android.graphics.drawable._$$Lambda$NinePatchDrawable$yQvfm7FAkslD5wdGFysjgwt8cLE;

     label17:
        r25 = null;

     label18:
        specialinvoke r36.<android.graphics.drawable._$$Lambda$NinePatchDrawable$yQvfm7FAkslD5wdGFysjgwt8cLE: void <init>(android.graphics.Rect)>(r33);

     label19:
        r25 = null;

     label20:
        r29 = staticinvoke <android.graphics.ImageDecoder: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener)>(r27, r36);

     label21:
        r25 = r29;

     label22:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label23:
        r25 = r29;

        goto label25;

     label24:
        $r22 := @caughtexception;

     label25:
        if r25 == null goto label27;

        $r14 = virtualinvoke r25.<android.graphics.Bitmap: byte[] getNinePatchChunk()>();

        if $r14 == null goto label26;

        virtualinvoke r25.<android.graphics.Bitmap: void getOpticalInsets(android.graphics.Rect)>(r34);

        r37 = new android.graphics.NinePatch;

        $r20 = virtualinvoke r25.<android.graphics.Bitmap: byte[] getNinePatchChunk()>();

        specialinvoke r37.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[])>(r25, $r20);

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch> = r37;

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Rect mPadding> = r33;

        $r21 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(android.graphics.Rect)>(r34);

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Insets mOpticalInsets> = $r21;

        goto label28;

     label26:
        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r23.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <nine-patch> requires a valid 9-patch source image");

        r39 = new org.xmlpull.v1.XmlPullParserException;

        $r18 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r39.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r18);

        r42 = (java.lang.Throwable) r39;

        throw r42;

     label27:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r23.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <nine-patch> requires a valid src attribute");

        r41 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r41.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r13);

        r43 = (java.lang.Throwable) r41;

        throw r43;

     label28:
        $z2 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored>;

        $z3 = virtualinvoke r23.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, $z2);

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored> = $z3;

        $f0 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: float mBaseAlpha>;

        $f1 = virtualinvoke r23.<android.content.res.TypedArray: float getFloat(int,float)>(3, $f0);

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: float mBaseAlpha> = $f1;

        i7 = virtualinvoke r23.<android.content.res.TypedArray: int getInt(int,int)>(5, -1);

        if i7 == -1 goto label29;

        $r6 = <android.graphics.BlendMode: android.graphics.BlendMode SRC_IN>;

        $r7 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.BlendMode parseBlendMode(int,android.graphics.BlendMode)>(i7, $r6);

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.BlendMode mBlendMode> = $r7;

     label29:
        r32 = virtualinvoke r23.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(2);

        if r32 == null goto label30;

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint> = r32;

     label30:
        return;

        catch java.io.IOException from label01 to label02 with label24;
        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label05 to label06 with label24;
        catch java.io.IOException from label07 to label08 with label24;
        catch java.io.IOException from label10 to label11 with label24;
        catch java.io.IOException from label12 to label13 with label24;
        catch java.io.IOException from label14 to label15 with label24;
        catch java.io.IOException from label16 to label17 with label24;
        catch java.io.IOException from label18 to label19 with label24;
        catch java.io.IOException from label20 to label21 with label24;
        catch java.io.IOException from label22 to label23 with label24;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        android.content.res.TypedArray r2;
        int[] $r4, $r9, $r10;
        android.content.res.ColorStateList $r5, $r6, $r7, $r8;
        boolean $z0;
        java.lang.Throwable $r11, $r12;
        android.content.res.Resources$Theme r13;
        android.content.res.Resources $r15;
        java.lang.Exception r16;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r13 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r13);

        r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        if r1 != null goto label01;

        return;

     label01:
        $r4 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int[] mThemeAttrs>;

        if $r4 == null goto label09;

        $r10 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int[] mThemeAttrs>;

        $r9 = <com.android.internal.R$styleable: int[] NinePatchDrawable>;

        r2 = virtualinvoke r13.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r10, $r9);

     label02:
        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r2);

     label03:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        goto label09;

     label04:
        $r11 := @caughtexception;

        goto label08;

     label05:
        $r12 := @caughtexception;

     label06:
        r16 = (java.lang.Exception) $r12;

        staticinvoke <android.graphics.drawable.NinePatchDrawable: void rethrowAsRuntimeException(java.lang.Exception)>(r16);

     label07:
        goto label03;

     label08:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        throw $r11;

     label09:
        $r5 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        if $r5 == null goto label10;

        $r6 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $z0 = virtualinvoke $r6.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z0 == 0 goto label10;

        $r7 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $r8 = virtualinvoke $r7.<android.content.res.ColorStateList: android.content.res.ColorStateList obtainForTheme(android.content.res.Resources$Theme)>(r13);

        r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint> = $r8;

     label10:
        $r15 = virtualinvoke r13.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void updateLocalState(android.content.res.Resources)>($r15);

        return;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        boolean $z0, z1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean canApplyTheme()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void clearMutated()
    {
        android.graphics.drawable.NinePatchDrawable r0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void clearMutated()>();

        r0.<android.graphics.drawable.NinePatchDrawable: boolean mMutated> = 0;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r2;
        android.graphics.Rect r3, $r9, $r10, r19;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        android.graphics.BlendModeColorFilter $r4, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i25, i26;
        android.graphics.Paint $r5, $r6, $r12, $r13, $r14, $r17, $r21;
        android.graphics.NinePatch $r8, $r11, $r20;
        android.graphics.ColorFilter $r15;
        boolean z0, z1, $z2;
        byte $b24;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        r3 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect getBounds()>();

        i23 = -1;

        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter mBlendModeFilter>;

        if $r4 == null goto label01;

        $r14 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        $r15 = virtualinvoke $r14.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        if $r15 != null goto label01;

        $r17 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        $r16 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter mBlendModeFilter>;

        virtualinvoke $r17.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r16);

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        $f17 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: float mBaseAlpha>;

        $b24 = $f17 cmpl 1.0F;

        if $b24 == 0 goto label03;

        $r12 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        i25 = virtualinvoke $r12.<android.graphics.Paint: int getAlpha()>();

        $r13 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        $f14 = (float) i25;

        $f13 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: float mBaseAlpha>;

        $f15 = $f14 * $f13;

        $f16 = $f15 + 0.5F;

        $i22 = (int) $f16;

        virtualinvoke $r13.<android.graphics.Paint: void setAlpha(int)>($i22);

        goto label04;

     label03:
        i25 = -1;

     label04:
        $i0 = virtualinvoke r1.<android.graphics.Canvas: int getDensity()>();

        if $i0 != 0 goto label05;

        $r11 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        $i21 = virtualinvoke $r11.<android.graphics.NinePatch: int getDensity()>();

        if $i21 == 0 goto label05;

        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        r19 = r3;

        if z1 == 0 goto label09;

        goto label07;

     label07:
        i23 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i7 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        $f5 = (float) $i7;

        $r8 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        $i8 = virtualinvoke $r8.<android.graphics.NinePatch: int getDensity()>();

        $f6 = (float) $i8;

        f0 = $f5 / $f6;

        $i9 = r3.<android.graphics.Rect: int left>;

        $f8 = (float) $i9;

        $i10 = r3.<android.graphics.Rect: int top>;

        $f7 = (float) $i10;

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float,float,float)>(f0, f0, $f8, $f7);

        $r9 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mTempRect>;

        if $r9 != null goto label08;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mTempRect> = $r10;

     label08:
        r19 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mTempRect>;

        $i11 = r3.<android.graphics.Rect: int left>;

        r19.<android.graphics.Rect: int left> = $i11;

        $i12 = r3.<android.graphics.Rect: int top>;

        r19.<android.graphics.Rect: int top> = $i12;

        $i13 = r3.<android.graphics.Rect: int left>;

        $i14 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        $f9 = (float) $i14;

        $f10 = $f9 / f0;

        $i15 = staticinvoke <java.lang.Math: int round(float)>($f10);

        $i16 = $i13 + $i15;

        r19.<android.graphics.Rect: int right> = $i16;

        $i17 = r3.<android.graphics.Rect: int top>;

        $i18 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        $f11 = (float) $i18;

        $f12 = $f11 / f0;

        $i19 = staticinvoke <java.lang.Math: int round(float)>($f12);

        $i20 = $i17 + $i19;

        r19.<android.graphics.Rect: int bottom> = $i20;

     label09:
        i26 = i23;

        $z2 = specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean needsMirroring()>();

        if $z2 == 0 goto label12;

        if i23 < 0 goto label10;

        goto label11;

     label10:
        i23 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

     label11:
        $i2 = r19.<android.graphics.Rect: int left>;

        $i1 = r19.<android.graphics.Rect: int right>;

        $i3 = $i2 + $i1;

        $f1 = (float) $i3;

        $f4 = $f1 / 2.0F;

        $i5 = r19.<android.graphics.Rect: int top>;

        $i4 = r19.<android.graphics.Rect: int bottom>;

        $i6 = $i5 + $i4;

        $f2 = (float) $i6;

        $f3 = $f2 / 2.0F;

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float,float,float)>(-1.0F, 1.0F, $f4, $f3);

        i26 = i23;

     label12:
        $r20 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        $r21 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r20.<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>(r1, r19, $r21);

        if i26 < 0 goto label13;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i26);

     label13:
        if z0 == 0 goto label14;

        $r6 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

     label14:
        if i25 < 0 goto label15;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>(i25);

     label15:
        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Paint $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        return 255;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        return $i2;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mChangingConfigurations> = $i0;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        return $r2;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight>;

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth>;

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Paint r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2;
        android.graphics.NinePatch $r3;
        boolean $z0;
        int $i0;
        byte b1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r3 = $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        $z0 = virtualinvoke $r3.<android.graphics.NinePatch: boolean hasAlpha()>();

        if $z0 != 0 goto label2;

        r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.graphics.Paint: int getAlpha()>();

        if $i0 >= 255 goto label1;

        goto label2;

     label1:
        b1 = -1;

        goto label3;

     label2:
        b1 = -3;

     label3:
        return b1;
    }

    public android.graphics.Insets getOpticalInsets()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Insets r1, $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        $z0 = specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean needsMirroring()>();

        if $z0 == 0 goto label1;

        $i3 = r1.<android.graphics.Insets: int right>;

        $i2 = r1.<android.graphics.Insets: int top>;

        $i1 = r1.<android.graphics.Insets: int left>;

        $i0 = r1.<android.graphics.Insets: int bottom>;

        $r2 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i3, $i2, $i1, $i0);

        return $r2;

     label1:
        return r1;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Outline r1;
        android.graphics.Rect r2, $r3, $r6, $r7, $r8, $r9;
        boolean $z0;
        android.graphics.NinePatch $r4;
        android.graphics.Bitmap $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r10;
        android.graphics.NinePatch$InsetStruct r11;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Outline;

        r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect getBounds()>();

        $z0 = virtualinvoke r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r10 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        if r10 == null goto label2;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mOutlineInsets>;

        if $r3 == null goto label2;

        $r4 = r10.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        $r5 = virtualinvoke $r4.<android.graphics.NinePatch: android.graphics.Bitmap getBitmap()>();

        r11 = virtualinvoke $r5.<android.graphics.Bitmap: android.graphics.NinePatch$InsetStruct getNinePatchInsets()>();

        if r11 == null goto label2;

        $i1 = r2.<android.graphics.Rect: int left>;

        $r6 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mOutlineInsets>;

        $i0 = $r6.<android.graphics.Rect: int left>;

        $i11 = $i1 + $i0;

        $i3 = r2.<android.graphics.Rect: int top>;

        $r7 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mOutlineInsets>;

        $i2 = $r7.<android.graphics.Rect: int top>;

        $i10 = $i3 + $i2;

        $i5 = r2.<android.graphics.Rect: int right>;

        $r8 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mOutlineInsets>;

        $i4 = $r8.<android.graphics.Rect: int right>;

        $i9 = $i5 - $i4;

        $i7 = r2.<android.graphics.Rect: int bottom>;

        $r9 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mOutlineInsets>;

        $i6 = $r9.<android.graphics.Rect: int bottom>;

        $i8 = $i7 - $i6;

        $f0 = r0.<android.graphics.drawable.NinePatchDrawable: float mOutlineRadius>;

        virtualinvoke r1.<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>($i11, $i10, $i9, $i8, $f0);

        $f1 = r11.<android.graphics.NinePatch$InsetStruct: float outlineAlpha>;

        $i12 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: int getAlpha()>();

        $f2 = (float) $i12;

        $f3 = $f2 / 255.0F;

        $f4 = $f1 * $f3;

        virtualinvoke r1.<android.graphics.Outline: void setAlpha(float)>($f4);

        return;

     label2:
        specialinvoke r0.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>(r1);

        return;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Rect r1, r2;
        boolean $z0, z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        if r2 == null goto label3;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $i1 = r1.<android.graphics.Rect: int left>;

        $i0 = r1.<android.graphics.Rect: int top>;

        $i3 = $i1 | $i0;

        $i2 = r1.<android.graphics.Rect: int right>;

        $i5 = $i3 | $i2;

        $i4 = r1.<android.graphics.Rect: int bottom>;

        $i6 = $i5 | $i4;

        if $i6 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z0;
    }

    public android.graphics.Paint getPaint()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Paint $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r2 != null goto label1;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint> = $r4;

        virtualinvoke $r4.<android.graphics.Paint: void setDither(boolean)>(0);

     label1:
        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        return $r3;
    }

    public android.graphics.Region getTransparentRegion()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1;
        android.graphics.NinePatch $r2;
        android.graphics.Rect $r3;
        android.graphics.Region $r4;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r2 = $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        $r3 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect getBounds()>();

        $r4 = virtualinvoke $r2.<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>($r3);

        return $r4;
    }

    public boolean hasFocusStateSpecified()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1, $r3;
        android.content.res.ColorStateList $r2, $r4;
        boolean $z0, z1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r2 = $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r4 = $r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $z0 = virtualinvoke $r4.<android.content.res.ColorStateList: boolean hasFocusStateSpecified()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        int[] $r4;
        org.xmlpull.v1.XmlPullParser r5;
        android.content.res.TypedArray r6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r5 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r5, r2, r3);

        $r4 = <com.android.internal.R$styleable: int[] NinePatchDrawable>;

        r6 = staticinvoke <android.graphics.drawable.NinePatchDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r3, r2, $r4);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r6);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void updateLocalState(android.content.res.Resources)>(r1);

        return;
    }

    public boolean isAutoMirrored()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $z0 = $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored>;

        return $z0;
    }

    public boolean isFilterBitmap()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Paint $r1, $r2;
        boolean $z0, z1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        $z0 = virtualinvoke $r2.<android.graphics.Paint: boolean isFilterBitmap()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        boolean $z0, $z1, z2;
        android.content.res.ColorStateList $r2, $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 != 0 goto label2;

        $r2 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        if $r2 == null goto label1;

        $r3 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $z1 = virtualinvoke $r3.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2, $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $z0 = r0.<android.graphics.drawable.NinePatchDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        specialinvoke $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState)>($r3);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState> = $r2;

        r0.<android.graphics.drawable.NinePatchDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.ColorStateList $r1, $r4;
        android.graphics.BlendMode $r2, $r3;
        android.graphics.BlendModeColorFilter $r5, $r6;
        int[] r7;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r8;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r7 := @parameter0: int[];

        r8 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r1 = r8.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        if $r1 == null goto label1;

        $r2 = r8.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.BlendMode mBlendMode>;

        if $r2 == null goto label1;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter mBlendModeFilter>;

        $r4 = r8.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $r3 = r8.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.BlendMode mBlendMode>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, $r4, $r3);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter mBlendModeFilter> = $r6;

        return 1;

     label1:
        return 0;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int i0;
        android.graphics.Paint $r1, $r2;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        if i0 != 255 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setAutoMirrored(boolean)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean z0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored> = z0;

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2, $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r2 != null goto label1;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean z0;
        android.graphics.Paint $r1, $r2;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        if z0 != 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setFilterBitmap(boolean)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean z0;
        android.graphics.Paint $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r1.<android.graphics.Paint: void setFilterBitmap(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setTargetDensity(int)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int i0, $i1, i2;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        i0 := @parameter0: int;

        i2 = i0;

        if i0 != 0 goto label1;

        i2 = 160;

     label1:
        $i1 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        if $i1 == i2 goto label2;

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = i2;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void computeBitmapSize()>();

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

     label2:
        return;
    }

    public void setTargetDensity(android.graphics.Canvas)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Canvas r1;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke r1.<android.graphics.Canvas: int getDensity()>();

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>($i0);

        return;
    }

    public void setTargetDensity(android.util.DisplayMetrics)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.util.DisplayMetrics r1;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.util.DisplayMetrics;

        $i0 = r1.<android.util.DisplayMetrics: int densityDpi>;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>($i0);

        return;
    }

    public void setTintBlendMode(android.graphics.BlendMode)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.BlendMode r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2, $r3;
        android.content.res.ColorStateList $r4;
        android.graphics.BlendModeColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.BlendMode;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.BlendMode mBlendMode> = r1;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter mBlendModeFilter>;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r4 = $r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, $r4, r1);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter mBlendModeFilter> = $r6;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2, $r3;
        android.graphics.BlendMode $r4;
        android.graphics.BlendModeColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint> = r1;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter mBlendModeFilter>;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r4 = $r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.BlendMode mBlendMode>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, r1, $r4);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.BlendModeColorFilter mBlendModeFilter> = $r6;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.NinePatchDrawable: boolean DEFAULT_DITHER> = 0;

        return;
    }
}
