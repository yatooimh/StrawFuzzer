class android.graphics.drawable.RippleBackground extends android.graphics.drawable.RippleComponent
{
    private static final android.animation.TimeInterpolator LINEAR_INTERPOLATOR;
    private static final android.graphics.drawable.RippleBackground$BackgroundProperty OPACITY;
    private static final int OPACITY_DURATION;
    private android.animation.ObjectAnimator mAnimator;
    private boolean mFocused;
    private boolean mHovered;
    private boolean mIsBounded;
    private float mOpacity;

    static void <clinit>()
    {
        android.view.animation.LinearInterpolator $r0;
        android.graphics.drawable.RippleBackground$1 $r1;

        <android.graphics.drawable.RippleBackground: int OPACITY_DURATION> = 80;

        $r0 = new android.view.animation.LinearInterpolator;

        specialinvoke $r0.<android.view.animation.LinearInterpolator: void <init>()>();

        <android.graphics.drawable.RippleBackground: android.animation.TimeInterpolator LINEAR_INTERPOLATOR> = $r0;

        $r1 = new android.graphics.drawable.RippleBackground$1;

        specialinvoke $r1.<android.graphics.drawable.RippleBackground$1: void <init>(java.lang.String)>("opacity");

        <android.graphics.drawable.RippleBackground: android.graphics.drawable.RippleBackground$BackgroundProperty OPACITY> = $r1;

        return;
    }

    public void <init>(android.graphics.drawable.RippleDrawable, android.graphics.Rect, boolean)
    {
        android.graphics.drawable.RippleBackground r0;
        android.graphics.drawable.RippleDrawable r1;
        android.graphics.Rect r2;
        boolean z0;

        r0 := @this: android.graphics.drawable.RippleBackground;

        r1 := @parameter0: android.graphics.drawable.RippleDrawable;

        r2 := @parameter1: android.graphics.Rect;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.graphics.drawable.RippleComponent: void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect)>(r1, r2);

        r0.<android.graphics.drawable.RippleBackground: float mOpacity> = 0.0F;

        r0.<android.graphics.drawable.RippleBackground: boolean mFocused> = 0;

        r0.<android.graphics.drawable.RippleBackground: boolean mHovered> = 0;

        r0.<android.graphics.drawable.RippleBackground: boolean mIsBounded> = z0;

        return;
    }

    static float access$000(android.graphics.drawable.RippleBackground)
    {
        android.graphics.drawable.RippleBackground r0;
        float $f0;

        r0 := @parameter0: android.graphics.drawable.RippleBackground;

        $f0 = r0.<android.graphics.drawable.RippleBackground: float mOpacity>;

        return $f0;
    }

    static float access$002(android.graphics.drawable.RippleBackground, float)
    {
        android.graphics.drawable.RippleBackground r0;
        float f0;

        r0 := @parameter0: android.graphics.drawable.RippleBackground;

        f0 := @parameter1: float;

        r0.<android.graphics.drawable.RippleBackground: float mOpacity> = f0;

        return f0;
    }

    private void onStateChanged()
    {
        android.graphics.drawable.RippleBackground r0;
        boolean $z0, $z1;
        float[] $r1;
        android.graphics.drawable.RippleBackground$BackgroundProperty $r2;
        android.animation.TimeInterpolator $r4;
        android.animation.ObjectAnimator $r5, $r6, r7, r8;
        float f0;

        r0 := @this: android.graphics.drawable.RippleBackground;

        $z0 = r0.<android.graphics.drawable.RippleBackground: boolean mFocused>;

        if $z0 == 0 goto label1;

        f0 = 0.6F;

        goto label3;

     label1:
        $z1 = r0.<android.graphics.drawable.RippleBackground: boolean mHovered>;

        if $z1 == 0 goto label2;

        f0 = 0.2F;

        goto label3;

     label2:
        f0 = 0.0F;

     label3:
        r7 = r0.<android.graphics.drawable.RippleBackground: android.animation.ObjectAnimator mAnimator>;

        if r7 == null goto label4;

        virtualinvoke r7.<android.animation.ObjectAnimator: void cancel()>();

        r0.<android.graphics.drawable.RippleBackground: android.animation.ObjectAnimator mAnimator> = null;

     label4:
        $r2 = <android.graphics.drawable.RippleBackground: android.graphics.drawable.RippleBackground$BackgroundProperty OPACITY>;

        $r1 = newarray (float)[1];

        $r1[0] = f0;

        r8 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r2, $r1);

        r0.<android.graphics.drawable.RippleBackground: android.animation.ObjectAnimator mAnimator> = r8;

        virtualinvoke r8.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(80L);

        $r5 = r0.<android.graphics.drawable.RippleBackground: android.animation.ObjectAnimator mAnimator>;

        $r4 = <android.graphics.drawable.RippleBackground: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r5.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r4);

        $r6 = r0.<android.graphics.drawable.RippleBackground: android.animation.ObjectAnimator mAnimator>;

        virtualinvoke $r6.<android.animation.ObjectAnimator: void start()>();

        return;
    }

    public void draw(android.graphics.Canvas, android.graphics.Paint)
    {
        android.graphics.drawable.RippleBackground r0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        int i0, i1, $i2;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: android.graphics.drawable.RippleBackground;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Paint;

        i0 = virtualinvoke r2.<android.graphics.Paint: int getAlpha()>();

        $f1 = (float) i0;

        $f0 = r0.<android.graphics.drawable.RippleBackground: float mOpacity>;

        $f2 = $f1 * $f0;

        $f3 = $f2 + 0.5F;

        $i2 = (int) $f3;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 255);

        if i1 <= 0 goto label1;

        virtualinvoke r2.<android.graphics.Paint: void setAlpha(int)>(i1);

        $f4 = r0.<android.graphics.drawable.RippleBackground: float mTargetRadius>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(0.0F, 0.0F, $f4, r2);

        virtualinvoke r2.<android.graphics.Paint: void setAlpha(int)>(i0);

     label1:
        return;
    }

    public boolean isVisible()
    {
        android.graphics.drawable.RippleBackground r0;
        float $f0;
        byte $b0;
        boolean z0;

        r0 := @this: android.graphics.drawable.RippleBackground;

        $f0 = r0.<android.graphics.drawable.RippleBackground: float mOpacity>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void jumpToFinal()
    {
        android.graphics.drawable.RippleBackground r0;
        android.animation.ObjectAnimator r1;

        r0 := @this: android.graphics.drawable.RippleBackground;

        r1 = r0.<android.graphics.drawable.RippleBackground: android.animation.ObjectAnimator mAnimator>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.animation.ObjectAnimator: void end()>();

        r0.<android.graphics.drawable.RippleBackground: android.animation.ObjectAnimator mAnimator> = null;

     label1:
        return;
    }

    public void setState(boolean, boolean, boolean)
    {
        android.graphics.drawable.RippleBackground r0;
        boolean z0, z1, z2, $z4, z5, z6, z7, z8, $z9, $z10;

        r0 := @this: android.graphics.drawable.RippleBackground;

        z5 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 = r0.<android.graphics.drawable.RippleBackground: boolean mFocused>;

        z6 = z5;

        if z2 != 0 goto label3;

        if z5 == 0 goto label1;

        if z1 != 0 goto label1;

        z7 = 1;

        goto label2;

     label1:
        z7 = 0;

     label2:
        z6 = z7;

     label3:
        z8 = z0;

        $z9 = r0.<android.graphics.drawable.RippleBackground: boolean mHovered>;

        if $z9 != 0 goto label5;

        if z0 == 0 goto label4;

        if z1 != 0 goto label4;

        z8 = 1;

        goto label5;

     label4:
        z8 = 0;

     label5:
        $z10 = r0.<android.graphics.drawable.RippleBackground: boolean mHovered>;

        if $z10 != z8 goto label6;

        $z4 = r0.<android.graphics.drawable.RippleBackground: boolean mFocused>;

        if $z4 == z6 goto label7;

     label6:
        r0.<android.graphics.drawable.RippleBackground: boolean mHovered> = z8;

        r0.<android.graphics.drawable.RippleBackground: boolean mFocused> = z6;

        specialinvoke r0.<android.graphics.drawable.RippleBackground: void onStateChanged()>();

     label7:
        return;
    }
}
