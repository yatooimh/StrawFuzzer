class android.graphics.drawable.RippleDrawable$RippleState extends android.graphics.drawable.LayerDrawable$LayerState
{
    android.content.res.ColorStateList mColor;
    int mMaxRadius;
    int[] mTouchThemeAttrs;

    public void <init>(android.graphics.drawable.LayerDrawable$LayerState, android.graphics.drawable.RippleDrawable, android.content.res.Resources)
    {
        android.graphics.drawable.RippleDrawable$RippleState r0, r7;
        android.graphics.drawable.LayerDrawable$LayerState r1;
        android.content.res.Resources r2;
        android.content.res.ColorStateList $r3, $r5;
        boolean $z0;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.RippleDrawable r6;

        r0 := @this: android.graphics.drawable.RippleDrawable$RippleState;

        r1 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        r6 := @parameter1: android.graphics.drawable.RippleDrawable;

        r2 := @parameter2: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable$LayerState: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources)>(r1, r6, r2);

        $r3 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(-65281);

        r0.<android.graphics.drawable.RippleDrawable$RippleState: android.content.res.ColorStateList mColor> = $r3;

        r0.<android.graphics.drawable.RippleDrawable$RippleState: int mMaxRadius> = -1;

        if r1 == null goto label1;

        $z0 = r1 instanceof android.graphics.drawable.RippleDrawable$RippleState;

        if $z0 == 0 goto label1;

        r7 = (android.graphics.drawable.RippleDrawable$RippleState) r1;

        $r4 = r7.<android.graphics.drawable.RippleDrawable$RippleState: int[] mTouchThemeAttrs>;

        r0.<android.graphics.drawable.RippleDrawable$RippleState: int[] mTouchThemeAttrs> = $r4;

        $r5 = r7.<android.graphics.drawable.RippleDrawable$RippleState: android.content.res.ColorStateList mColor>;

        r0.<android.graphics.drawable.RippleDrawable$RippleState: android.content.res.ColorStateList mColor> = $r5;

        $i0 = r7.<android.graphics.drawable.RippleDrawable$RippleState: int mMaxRadius>;

        r0.<android.graphics.drawable.RippleDrawable$RippleState: int mMaxRadius> = $i0;

        $i2 = r7.<android.graphics.drawable.RippleDrawable$RippleState: int mDensity>;

        $i1 = r0.<android.graphics.drawable.RippleDrawable$RippleState: int mDensity>;

        if $i2 == $i1 goto label1;

        $i4 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mDensity>;

        $i3 = r0.<android.graphics.drawable.RippleDrawable$RippleState: int mDensity>;

        specialinvoke r0.<android.graphics.drawable.RippleDrawable$RippleState: void applyDensityScaling(int,int)>($i4, $i3);

     label1:
        return;
    }

    private void applyDensityScaling(int, int)
    {
        android.graphics.drawable.RippleDrawable$RippleState r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.graphics.drawable.RippleDrawable$RippleState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = r0.<android.graphics.drawable.RippleDrawable$RippleState: int mMaxRadius>;

        if i2 == -1 goto label1;

        $i3 = staticinvoke <android.graphics.drawable.Drawable: int scaleFromDensity(int,int,int,boolean)>(i2, i0, i1, 1);

        r0.<android.graphics.drawable.RippleDrawable$RippleState: int mMaxRadius> = $i3;

     label1:
        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.RippleDrawable$RippleState r0;
        android.content.res.ColorStateList r1;
        int[] $r2;
        boolean $z0, $z1, z2;

        r0 := @this: android.graphics.drawable.RippleDrawable$RippleState;

        $r2 = r0.<android.graphics.drawable.RippleDrawable$RippleState: int[] mTouchThemeAttrs>;

        if $r2 != null goto label3;

        r1 = r0.<android.graphics.drawable.RippleDrawable$RippleState: android.content.res.ColorStateList mColor>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z1 != 0 goto label3;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.LayerDrawable$LayerState: boolean canApplyTheme()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        z2 = 0;

        goto label4;

     label3:
        z2 = 1;

     label4:
        return z2;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.RippleDrawable$RippleState r0;
        int i0, $i1, i2;
        android.content.res.ColorStateList r1;

        r0 := @this: android.graphics.drawable.RippleDrawable$RippleState;

        i0 = specialinvoke r0.<android.graphics.drawable.LayerDrawable$LayerState: int getChangingConfigurations()>();

        r1 = r0.<android.graphics.drawable.RippleDrawable$RippleState: android.content.res.ColorStateList mColor>;

        if r1 == null goto label1;

        i2 = virtualinvoke r1.<android.content.res.ColorStateList: int getChangingConfigurations()>();

        goto label2;

     label1:
        i2 = 0;

     label2:
        $i1 = i0 | i2;

        return $i1;
    }

    public android.graphics.drawable.Drawable newDrawable()
    {
        android.graphics.drawable.RippleDrawable$RippleState r0;
        android.graphics.drawable.RippleDrawable $r1;

        r0 := @this: android.graphics.drawable.RippleDrawable$RippleState;

        $r1 = new android.graphics.drawable.RippleDrawable;

        specialinvoke $r1.<android.graphics.drawable.RippleDrawable: void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources,android.graphics.drawable.RippleDrawable$1)>(r0, null, null);

        return $r1;
    }

    public android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
    {
        android.graphics.drawable.RippleDrawable$RippleState r0;
        android.content.res.Resources r1;
        android.graphics.drawable.RippleDrawable $r2;

        r0 := @this: android.graphics.drawable.RippleDrawable$RippleState;

        r1 := @parameter0: android.content.res.Resources;

        $r2 = new android.graphics.drawable.RippleDrawable;

        specialinvoke $r2.<android.graphics.drawable.RippleDrawable: void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources,android.graphics.drawable.RippleDrawable$1)>(r0, r1, null);

        return $r2;
    }

    protected void onDensityChanged(int, int)
    {
        android.graphics.drawable.RippleDrawable$RippleState r0;
        int i0, i1;

        r0 := @this: android.graphics.drawable.RippleDrawable$RippleState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable$LayerState: void onDensityChanged(int,int)>(i0, i1);

        specialinvoke r0.<android.graphics.drawable.RippleDrawable$RippleState: void applyDensityScaling(int,int)>(i0, i1);

        return;
    }
}
