class android.graphics.drawable.RippleForeground extends android.graphics.drawable.RippleComponent
{
    private static final android.animation.TimeInterpolator DECELERATE_INTERPOLATOR;
    private static final android.animation.TimeInterpolator LINEAR_INTERPOLATOR;
    private static final android.util.FloatProperty OPACITY;
    private static final int OPACITY_ENTER_DURATION;
    private static final int OPACITY_EXIT_DURATION;
    private static final int OPACITY_HOLD_DURATION;
    private static final int RIPPLE_ENTER_DURATION;
    private static final int RIPPLE_ORIGIN_DURATION;
    private static final android.util.FloatProperty TWEEN_ORIGIN;
    private static final android.util.FloatProperty TWEEN_RADIUS;
    private final android.animation.AnimatorListenerAdapter mAnimationListener;
    private float mClampedStartingX;
    private float mClampedStartingY;
    private long mEnterStartedAtMillis;
    private final boolean mForceSoftware;
    private boolean mHasFinishedExit;
    private float mOpacity;
    private java.util.ArrayList mPendingHwAnimators;
    private android.graphics.CanvasProperty mPropPaint;
    private android.graphics.CanvasProperty mPropRadius;
    private android.graphics.CanvasProperty mPropX;
    private android.graphics.CanvasProperty mPropY;
    private java.util.ArrayList mRunningHwAnimators;
    private java.util.ArrayList mRunningSwAnimators;
    private float mStartRadius;
    private float mStartingX;
    private float mStartingY;
    private float mTargetX;
    private float mTargetY;
    private float mTweenRadius;
    private float mTweenX;
    private float mTweenY;
    private boolean mUsingProperties;

    static void <clinit>()
    {
        android.view.animation.LinearInterpolator $r0;
        android.view.animation.PathInterpolator $r1;
        android.graphics.drawable.RippleForeground$2 $r2;
        android.graphics.drawable.RippleForeground$3 $r3;
        android.graphics.drawable.RippleForeground$4 $r4;

        <android.graphics.drawable.RippleForeground: int RIPPLE_ORIGIN_DURATION> = 225;

        <android.graphics.drawable.RippleForeground: int RIPPLE_ENTER_DURATION> = 225;

        <android.graphics.drawable.RippleForeground: int OPACITY_HOLD_DURATION> = 225;

        <android.graphics.drawable.RippleForeground: int OPACITY_EXIT_DURATION> = 150;

        <android.graphics.drawable.RippleForeground: int OPACITY_ENTER_DURATION> = 75;

        $r0 = new android.view.animation.LinearInterpolator;

        specialinvoke $r0.<android.view.animation.LinearInterpolator: void <init>()>();

        <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator LINEAR_INTERPOLATOR> = $r0;

        $r1 = new android.view.animation.PathInterpolator;

        specialinvoke $r1.<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>(0.4F, 0.0F, 0.2F, 1.0F);

        <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator DECELERATE_INTERPOLATOR> = $r1;

        $r2 = new android.graphics.drawable.RippleForeground$2;

        specialinvoke $r2.<android.graphics.drawable.RippleForeground$2: void <init>(java.lang.String)>("tweenRadius");

        <android.graphics.drawable.RippleForeground: android.util.FloatProperty TWEEN_RADIUS> = $r2;

        $r3 = new android.graphics.drawable.RippleForeground$3;

        specialinvoke $r3.<android.graphics.drawable.RippleForeground$3: void <init>(java.lang.String)>("tweenOrigin");

        <android.graphics.drawable.RippleForeground: android.util.FloatProperty TWEEN_ORIGIN> = $r3;

        $r4 = new android.graphics.drawable.RippleForeground$4;

        specialinvoke $r4.<android.graphics.drawable.RippleForeground$4: void <init>(java.lang.String)>("opacity");

        <android.graphics.drawable.RippleForeground: android.util.FloatProperty OPACITY> = $r4;

        return;
    }

    public void <init>(android.graphics.drawable.RippleDrawable, android.graphics.Rect, float, float, boolean)
    {
        android.graphics.drawable.RippleForeground r0;
        android.graphics.drawable.RippleDrawable r1;
        android.graphics.Rect r2;
        float f0, f1, $f2, $f3;
        boolean z0;
        java.util.ArrayList $r3, $r4, $r5;
        android.graphics.drawable.RippleForeground$1 $r6;
        int $i0, $i1, $i2;

        r0 := @this: android.graphics.drawable.RippleForeground;

        r1 := @parameter0: android.graphics.drawable.RippleDrawable;

        r2 := @parameter1: android.graphics.Rect;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        z0 := @parameter4: boolean;

        specialinvoke r0.<android.graphics.drawable.RippleComponent: void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect)>(r1, r2);

        r0.<android.graphics.drawable.RippleForeground: float mTargetX> = 0.0F;

        r0.<android.graphics.drawable.RippleForeground: float mTargetY> = 0.0F;

        r0.<android.graphics.drawable.RippleForeground: float mOpacity> = 0.0F;

        r0.<android.graphics.drawable.RippleForeground: float mTweenRadius> = 0.0F;

        r0.<android.graphics.drawable.RippleForeground: float mTweenX> = 0.0F;

        r0.<android.graphics.drawable.RippleForeground: float mTweenY> = 0.0F;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mPendingHwAnimators> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators> = $r5;

        r0.<android.graphics.drawable.RippleForeground: float mStartRadius> = 0.0F;

        $r6 = new android.graphics.drawable.RippleForeground$1;

        specialinvoke $r6.<android.graphics.drawable.RippleForeground$1: void <init>(android.graphics.drawable.RippleForeground)>(r0);

        r0.<android.graphics.drawable.RippleForeground: android.animation.AnimatorListenerAdapter mAnimationListener> = $r6;

        r0.<android.graphics.drawable.RippleForeground: boolean mForceSoftware> = z0;

        r0.<android.graphics.drawable.RippleForeground: float mStartingX> = f0;

        r0.<android.graphics.drawable.RippleForeground: float mStartingY> = f1;

        $i0 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $f2 = (float) $i2;

        $f3 = $f2 * 0.3F;

        r0.<android.graphics.drawable.RippleForeground: float mStartRadius> = $f3;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void clampStartingPosition()>();

        return;
    }

    static boolean access$002(android.graphics.drawable.RippleForeground, boolean)
    {
        android.graphics.drawable.RippleForeground r0;
        boolean z0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        z0 := @parameter1: boolean;

        r0.<android.graphics.drawable.RippleForeground: boolean mHasFinishedExit> = z0;

        return z0;
    }

    static void access$100(android.graphics.drawable.RippleForeground)
    {
        android.graphics.drawable.RippleForeground r0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void pruneHwFinished()>();

        return;
    }

    static void access$200(android.graphics.drawable.RippleForeground)
    {
        android.graphics.drawable.RippleForeground r0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void pruneSwFinished()>();

        return;
    }

    static java.util.ArrayList access$300(android.graphics.drawable.RippleForeground)
    {
        android.graphics.drawable.RippleForeground r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        $r1 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        return $r1;
    }

    static void access$400(android.graphics.drawable.RippleForeground)
    {
        android.graphics.drawable.RippleForeground r0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void clearHwProps()>();

        return;
    }

    static float access$500(android.graphics.drawable.RippleForeground)
    {
        android.graphics.drawable.RippleForeground r0;
        float $f0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        $f0 = r0.<android.graphics.drawable.RippleForeground: float mTweenRadius>;

        return $f0;
    }

    static float access$502(android.graphics.drawable.RippleForeground, float)
    {
        android.graphics.drawable.RippleForeground r0;
        float f0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        f0 := @parameter1: float;

        r0.<android.graphics.drawable.RippleForeground: float mTweenRadius> = f0;

        return f0;
    }

    static void access$600(android.graphics.drawable.RippleForeground)
    {
        android.graphics.drawable.RippleForeground r0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void onAnimationPropertyChanged()>();

        return;
    }

    static float access$700(android.graphics.drawable.RippleForeground)
    {
        android.graphics.drawable.RippleForeground r0;
        float $f0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        $f0 = r0.<android.graphics.drawable.RippleForeground: float mTweenX>;

        return $f0;
    }

    static float access$702(android.graphics.drawable.RippleForeground, float)
    {
        android.graphics.drawable.RippleForeground r0;
        float f0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        f0 := @parameter1: float;

        r0.<android.graphics.drawable.RippleForeground: float mTweenX> = f0;

        return f0;
    }

    static float access$802(android.graphics.drawable.RippleForeground, float)
    {
        android.graphics.drawable.RippleForeground r0;
        float f0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        f0 := @parameter1: float;

        r0.<android.graphics.drawable.RippleForeground: float mTweenY> = f0;

        return f0;
    }

    static float access$900(android.graphics.drawable.RippleForeground)
    {
        android.graphics.drawable.RippleForeground r0;
        float $f0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        $f0 = r0.<android.graphics.drawable.RippleForeground: float mOpacity>;

        return $f0;
    }

    static float access$902(android.graphics.drawable.RippleForeground, float)
    {
        android.graphics.drawable.RippleForeground r0;
        float f0;

        r0 := @parameter0: android.graphics.drawable.RippleForeground;

        f0 := @parameter1: float;

        r0.<android.graphics.drawable.RippleForeground: float mOpacity> = f0;

        return f0;
    }

    private void clampStartingPosition()
    {
        android.graphics.drawable.RippleForeground r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        android.graphics.Rect $r1, $r2;
        byte $b0;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $r1 = r0.<android.graphics.drawable.RippleForeground: android.graphics.Rect mBounds>;

        f0 = virtualinvoke $r1.<android.graphics.Rect: float exactCenterX()>();

        $r2 = r0.<android.graphics.drawable.RippleForeground: android.graphics.Rect mBounds>;

        f1 = virtualinvoke $r2.<android.graphics.Rect: float exactCenterY()>();

        $f5 = r0.<android.graphics.drawable.RippleForeground: float mStartingX>;

        f2 = $f5 - f0;

        $f6 = r0.<android.graphics.drawable.RippleForeground: float mStartingY>;

        f3 = $f6 - f1;

        $f8 = r0.<android.graphics.drawable.RippleForeground: float mTargetRadius>;

        $f7 = r0.<android.graphics.drawable.RippleForeground: float mStartRadius>;

        f4 = $f8 - $f7;

        $f10 = f2 * f2;

        $f9 = f3 * f3;

        $f12 = $f10 + $f9;

        $f11 = f4 * f4;

        $b0 = $f12 cmpl $f11;

        if $b0 <= 0 goto label1;

        $d2 = (double) f3;

        $d1 = (double) f2;

        d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d2, $d1);

        $d3 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $d4 = (double) f4;

        $d5 = $d3 * $d4;

        $f15 = (float) $d5;

        $f16 = $f15 + f0;

        r0.<android.graphics.drawable.RippleForeground: float mClampedStartingX> = $f16;

        $d6 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        $d7 = (double) f4;

        $d8 = $d6 * $d7;

        $f17 = (float) $d8;

        $f18 = $f17 + f1;

        r0.<android.graphics.drawable.RippleForeground: float mClampedStartingY> = $f18;

        goto label2;

     label1:
        $f13 = r0.<android.graphics.drawable.RippleForeground: float mStartingX>;

        r0.<android.graphics.drawable.RippleForeground: float mClampedStartingX> = $f13;

        $f14 = r0.<android.graphics.drawable.RippleForeground: float mStartingY>;

        r0.<android.graphics.drawable.RippleForeground: float mClampedStartingY> = $f14;

     label2:
        return;
    }

    private void clearHwProps()
    {
        android.graphics.drawable.RippleForeground r0;

        r0 := @this: android.graphics.drawable.RippleForeground;

        r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropPaint> = null;

        r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropRadius> = null;

        r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropX> = null;

        r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropY> = null;

        r0.<android.graphics.drawable.RippleForeground: boolean mUsingProperties> = 0;

        return;
    }

    private long computeFadeOutDelay()
    {
        android.graphics.drawable.RippleForeground r0;
        long l0, $l1, $l2, $l5;
        byte $b3, $b4;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $l1 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l2 = r0.<android.graphics.drawable.RippleForeground: long mEnterStartedAtMillis>;

        l0 = $l1 - $l2;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label1;

        $b4 = l0 cmp 225L;

        if $b4 >= 0 goto label1;

        $l5 = 225L - l0;

        return $l5;

     label1:
        return 0L;
    }

    private void drawHardware(android.graphics.RecordingCanvas, android.graphics.Paint)
    {
        android.graphics.drawable.RippleForeground r0;
        android.graphics.RecordingCanvas r1;
        android.graphics.Paint r2;
        android.graphics.CanvasProperty r3, $r4, $r5, $r6;

        r0 := @this: android.graphics.drawable.RippleForeground;

        r1 := @parameter0: android.graphics.RecordingCanvas;

        r2 := @parameter1: android.graphics.Paint;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void startPending(android.graphics.RecordingCanvas)>(r1);

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void pruneHwFinished()>();

        r3 = r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropPaint>;

        if r3 == null goto label1;

        r0.<android.graphics.drawable.RippleForeground: boolean mUsingProperties> = 1;

        $r6 = r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropX>;

        $r5 = r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropY>;

        $r4 = r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropRadius>;

        virtualinvoke r1.<android.graphics.RecordingCanvas: void drawCircle(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty)>($r6, $r5, $r4, r3);

        goto label2;

     label1:
        r0.<android.graphics.drawable.RippleForeground: boolean mUsingProperties> = 0;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void drawSoftware(android.graphics.Canvas,android.graphics.Paint)>(r1, r2);

     label2:
        return;
    }

    private void drawSoftware(android.graphics.Canvas, android.graphics.Paint)
    {
        android.graphics.drawable.RippleForeground r0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        int i0, i1;
        float f0, f1, f2, $f3, $f4, $f5, $f6;
        byte $b2;

        r0 := @this: android.graphics.drawable.RippleForeground;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Paint;

        i0 = virtualinvoke r2.<android.graphics.Paint: int getAlpha()>();

        $f4 = (float) i0;

        $f3 = r0.<android.graphics.drawable.RippleForeground: float mOpacity>;

        $f5 = $f4 * $f3;

        $f6 = $f5 + 0.5F;

        i1 = (int) $f6;

        f0 = specialinvoke r0.<android.graphics.drawable.RippleForeground: float getCurrentRadius()>();

        if i1 <= 0 goto label1;

        $b2 = f0 cmpl 0.0F;

        if $b2 <= 0 goto label1;

        f1 = specialinvoke r0.<android.graphics.drawable.RippleForeground: float getCurrentX()>();

        f2 = specialinvoke r0.<android.graphics.drawable.RippleForeground: float getCurrentY()>();

        virtualinvoke r2.<android.graphics.Paint: void setAlpha(int)>(i1);

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f1, f2, f0, r2);

        virtualinvoke r2.<android.graphics.Paint: void setAlpha(int)>(i0);

     label1:
        return;
    }

    private float getCurrentRadius()
    {
        android.graphics.drawable.RippleForeground r0;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $f2 = r0.<android.graphics.drawable.RippleForeground: float mStartRadius>;

        $f1 = r0.<android.graphics.drawable.RippleForeground: float mTargetRadius>;

        $f0 = r0.<android.graphics.drawable.RippleForeground: float mTweenRadius>;

        $f3 = staticinvoke <android.util.MathUtils: float lerp(float,float,float)>($f2, $f1, $f0);

        return $f3;
    }

    private float getCurrentX()
    {
        android.graphics.drawable.RippleForeground r0;
        android.graphics.Rect $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $f0 = r0.<android.graphics.drawable.RippleForeground: float mClampedStartingX>;

        $r1 = r0.<android.graphics.drawable.RippleForeground: android.graphics.Rect mBounds>;

        $f1 = virtualinvoke $r1.<android.graphics.Rect: float exactCenterX()>();

        $f4 = $f0 - $f1;

        $f3 = r0.<android.graphics.drawable.RippleForeground: float mTargetX>;

        $f2 = r0.<android.graphics.drawable.RippleForeground: float mTweenX>;

        $f5 = staticinvoke <android.util.MathUtils: float lerp(float,float,float)>($f4, $f3, $f2);

        return $f5;
    }

    private float getCurrentY()
    {
        android.graphics.drawable.RippleForeground r0;
        android.graphics.Rect $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $f0 = r0.<android.graphics.drawable.RippleForeground: float mClampedStartingY>;

        $r1 = r0.<android.graphics.drawable.RippleForeground: android.graphics.Rect mBounds>;

        $f1 = virtualinvoke $r1.<android.graphics.Rect: float exactCenterY()>();

        $f4 = $f0 - $f1;

        $f3 = r0.<android.graphics.drawable.RippleForeground: float mTargetY>;

        $f2 = r0.<android.graphics.drawable.RippleForeground: float mTweenY>;

        $f5 = staticinvoke <android.util.MathUtils: float lerp(float,float,float)>($f4, $f3, $f2);

        return $f5;
    }

    private void onAnimationPropertyChanged()
    {
        android.graphics.drawable.RippleForeground r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $z0 = r0.<android.graphics.drawable.RippleForeground: boolean mUsingProperties>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.RippleForeground: void invalidateSelf()>();

     label1:
        return;
    }

    private void pruneHwFinished()
    {
        android.graphics.drawable.RippleForeground r0;
        java.util.ArrayList $r1, $r2, $r3, $r6;
        boolean $z0, $z1;
        int $i0, i1;
        java.lang.Object $r4;
        android.graphics.animation.RenderNodeAnimator $r5;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $r1 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.graphics.animation.RenderNodeAnimator) $r4;

        $z1 = virtualinvoke $r5.<android.graphics.animation.RenderNodeAnimator: boolean isRunning()>();

        if $z1 != 0 goto label2;

        $r6 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    private void pruneSwFinished()
    {
        android.graphics.drawable.RippleForeground r0;
        java.util.ArrayList $r1, $r2, $r3, $r6;
        boolean $z0, $z1;
        int $i0, i1;
        java.lang.Object $r4;
        android.animation.Animator $r5;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $r1 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.animation.Animator) $r4;

        $z1 = virtualinvoke $r5.<android.animation.Animator: boolean isRunning()>();

        if $z1 != 0 goto label2;

        $r6 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    private void startHardwareEnter()
    {
        android.graphics.drawable.RippleForeground r0;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.CanvasProperty $r1, $r2, $r3, $r5, $r7, $r12, $r17, $r22;
        android.graphics.drawable.RippleDrawable $r4;
        android.graphics.animation.RenderNodeAnimator $r6, $r11, $r16, $r21;
        android.animation.TimeInterpolator $r9, $r14, $r19, $r24;
        java.util.ArrayList $r10, $r15, $r20, $r25;
        int $i0;
        android.graphics.Paint r26;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $z0 = r0.<android.graphics.drawable.RippleForeground: boolean mForceSoftware>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $f0 = specialinvoke r0.<android.graphics.drawable.RippleForeground: float getCurrentX()>();

        $r1 = staticinvoke <android.graphics.CanvasProperty: android.graphics.CanvasProperty createFloat(float)>($f0);

        r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropX> = $r1;

        $f1 = specialinvoke r0.<android.graphics.drawable.RippleForeground: float getCurrentY()>();

        $r2 = staticinvoke <android.graphics.CanvasProperty: android.graphics.CanvasProperty createFloat(float)>($f1);

        r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropY> = $r2;

        $f2 = specialinvoke r0.<android.graphics.drawable.RippleForeground: float getCurrentRadius()>();

        $r3 = staticinvoke <android.graphics.CanvasProperty: android.graphics.CanvasProperty createFloat(float)>($f2);

        r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropRadius> = $r3;

        $r4 = r0.<android.graphics.drawable.RippleForeground: android.graphics.drawable.RippleDrawable mOwner>;

        r26 = virtualinvoke $r4.<android.graphics.drawable.RippleDrawable: android.graphics.Paint getRipplePaint()>();

        $r5 = staticinvoke <android.graphics.CanvasProperty: android.graphics.CanvasProperty createPaint(android.graphics.Paint)>(r26);

        r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropPaint> = $r5;

        $r6 = new android.graphics.animation.RenderNodeAnimator;

        $r7 = r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropRadius>;

        $f3 = r0.<android.graphics.drawable.RippleForeground: float mTargetRadius>;

        specialinvoke $r6.<android.graphics.animation.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,float)>($r7, $f3);

        virtualinvoke $r6.<android.graphics.animation.RenderNodeAnimator: android.graphics.animation.RenderNodeAnimator setDuration(long)>(225L);

        $r9 = <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator DECELERATE_INTERPOLATOR>;

        virtualinvoke $r6.<android.graphics.animation.RenderNodeAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r9);

        $r10 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mPendingHwAnimators>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r11 = new android.graphics.animation.RenderNodeAnimator;

        $r12 = r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropX>;

        $f4 = r0.<android.graphics.drawable.RippleForeground: float mTargetX>;

        specialinvoke $r11.<android.graphics.animation.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,float)>($r12, $f4);

        virtualinvoke $r11.<android.graphics.animation.RenderNodeAnimator: android.graphics.animation.RenderNodeAnimator setDuration(long)>(225L);

        $r14 = <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator DECELERATE_INTERPOLATOR>;

        virtualinvoke $r11.<android.graphics.animation.RenderNodeAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r14);

        $r15 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mPendingHwAnimators>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r16 = new android.graphics.animation.RenderNodeAnimator;

        $r17 = r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropY>;

        $f5 = r0.<android.graphics.drawable.RippleForeground: float mTargetY>;

        specialinvoke $r16.<android.graphics.animation.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,float)>($r17, $f5);

        virtualinvoke $r16.<android.graphics.animation.RenderNodeAnimator: android.graphics.animation.RenderNodeAnimator setDuration(long)>(225L);

        $r19 = <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator DECELERATE_INTERPOLATOR>;

        virtualinvoke $r16.<android.graphics.animation.RenderNodeAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r19);

        $r20 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mPendingHwAnimators>;

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        $r21 = new android.graphics.animation.RenderNodeAnimator;

        $r22 = r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropPaint>;

        $i0 = virtualinvoke r26.<android.graphics.Paint: int getAlpha()>();

        $f6 = (float) $i0;

        specialinvoke $r21.<android.graphics.animation.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,int,float)>($r22, 1, $f6);

        virtualinvoke $r21.<android.graphics.animation.RenderNodeAnimator: android.graphics.animation.RenderNodeAnimator setDuration(long)>(75L);

        $r24 = <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r21.<android.graphics.animation.RenderNodeAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r24);

        virtualinvoke $r21.<android.graphics.animation.RenderNodeAnimator: void setStartValue(float)>(0.0F);

        $r25 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mPendingHwAnimators>;

        virtualinvoke $r25.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        virtualinvoke r0.<android.graphics.drawable.RippleForeground: void invalidateSelf()>();

        return;
    }

    private void startHardwareExit()
    {
        android.graphics.drawable.RippleForeground r0;
        boolean $z0;
        android.graphics.CanvasProperty $r2, $r4;
        android.graphics.animation.RenderNodeAnimator $r3;
        android.animation.TimeInterpolator $r6;
        android.animation.AnimatorListenerAdapter $r7;
        long $l0;
        android.graphics.drawable.RippleDrawable $r8;
        android.graphics.Paint $r9;
        int $i1;
        float $f0;
        java.util.ArrayList $r10;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $z0 = r0.<android.graphics.drawable.RippleForeground: boolean mForceSoftware>;

        if $z0 != 0 goto label2;

        $r2 = r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropPaint>;

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r3 = new android.graphics.animation.RenderNodeAnimator;

        $r4 = r0.<android.graphics.drawable.RippleForeground: android.graphics.CanvasProperty mPropPaint>;

        specialinvoke $r3.<android.graphics.animation.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,int,float)>($r4, 1, 0.0F);

        virtualinvoke $r3.<android.graphics.animation.RenderNodeAnimator: android.graphics.animation.RenderNodeAnimator setDuration(long)>(150L);

        $r6 = <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r3.<android.graphics.animation.RenderNodeAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r6);

        $r7 = r0.<android.graphics.drawable.RippleForeground: android.animation.AnimatorListenerAdapter mAnimationListener>;

        virtualinvoke $r3.<android.graphics.animation.RenderNodeAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r7);

        $l0 = specialinvoke r0.<android.graphics.drawable.RippleForeground: long computeFadeOutDelay()>();

        virtualinvoke $r3.<android.graphics.animation.RenderNodeAnimator: void setStartDelay(long)>($l0);

        $r8 = r0.<android.graphics.drawable.RippleForeground: android.graphics.drawable.RippleDrawable mOwner>;

        $r9 = virtualinvoke $r8.<android.graphics.drawable.RippleDrawable: android.graphics.Paint getRipplePaint()>();

        $i1 = virtualinvoke $r9.<android.graphics.Paint: int getAlpha()>();

        $f0 = (float) $i1;

        virtualinvoke $r3.<android.graphics.animation.RenderNodeAnimator: void setStartValue(float)>($f0);

        $r10 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mPendingHwAnimators>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        virtualinvoke r0.<android.graphics.drawable.RippleForeground: void invalidateSelf()>();

        return;

     label2:
        return;
    }

    private void startPending(android.graphics.RecordingCanvas)
    {
        android.graphics.drawable.RippleForeground r0;
        android.graphics.RecordingCanvas r1;
        android.graphics.animation.RenderNodeAnimator r2;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r8;
        boolean $z0;
        int $i0, i1;
        java.lang.Object $r7;

        r0 := @this: android.graphics.drawable.RippleForeground;

        r1 := @parameter0: android.graphics.RecordingCanvas;

        $r3 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mPendingHwAnimators>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        i1 = 0;

     label1:
        $r4 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mPendingHwAnimators>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r6 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mPendingHwAnimators>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.graphics.animation.RenderNodeAnimator) $r7;

        virtualinvoke r2.<android.graphics.animation.RenderNodeAnimator: void setTarget(android.graphics.RecordingCanvas)>(r1);

        virtualinvoke r2.<android.graphics.animation.RenderNodeAnimator: void start()>();

        $r8 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mPendingHwAnimators>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

     label3:
        return;
    }

    private void startSoftwareEnter()
    {
        android.graphics.drawable.RippleForeground r0;
        java.util.ArrayList $r1, $r2, $r7, $r12, $r17, $r18;
        int $i0, i1;
        float[] $r3, $r8, $r13;
        android.util.FloatProperty $r4, $r9, $r14;
        android.animation.TimeInterpolator $r6, $r11, $r16;
        java.lang.Object $r19;
        android.animation.Animator $r20;
        android.animation.ObjectAnimator r21, r22, r23;

        r0 := @this: android.graphics.drawable.RippleForeground;

        i1 = 0;

     label1:
        $r1 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r18 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r20 = (android.animation.Animator) $r19;

        virtualinvoke $r20.<android.animation.Animator: void cancel()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r4 = <android.graphics.drawable.RippleForeground: android.util.FloatProperty TWEEN_RADIUS>;

        $r3 = newarray (float)[1];

        $r3[0] = 1.0F;

        r21 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r4, $r3);

        virtualinvoke r21.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(225L);

        $r6 = <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator DECELERATE_INTERPOLATOR>;

        virtualinvoke r21.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r6);

        virtualinvoke r21.<android.animation.ObjectAnimator: void start()>();

        $r7 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

        $r9 = <android.graphics.drawable.RippleForeground: android.util.FloatProperty TWEEN_ORIGIN>;

        $r8 = newarray (float)[1];

        $r8[0] = 1.0F;

        r22 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r9, $r8);

        virtualinvoke r22.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(225L);

        $r11 = <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator DECELERATE_INTERPOLATOR>;

        virtualinvoke r22.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r11);

        virtualinvoke r22.<android.animation.ObjectAnimator: void start()>();

        $r12 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r22);

        $r14 = <android.graphics.drawable.RippleForeground: android.util.FloatProperty OPACITY>;

        $r13 = newarray (float)[1];

        $r13[0] = 1.0F;

        r23 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r14, $r13);

        virtualinvoke r23.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(75L);

        $r16 = <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke r23.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r16);

        virtualinvoke r23.<android.animation.ObjectAnimator: void start()>();

        $r17 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r23);

        return;
    }

    private void startSoftwareExit()
    {
        android.graphics.drawable.RippleForeground r0;
        android.animation.ObjectAnimator r1;
        float[] $r2;
        android.util.FloatProperty $r3;
        android.animation.TimeInterpolator $r5;
        android.animation.AnimatorListenerAdapter $r6;
        long $l0;
        java.util.ArrayList $r7;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $r3 = <android.graphics.drawable.RippleForeground: android.util.FloatProperty OPACITY>;

        $r2 = newarray (float)[1];

        $r2[0] = 0.0F;

        r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r3, $r2);

        virtualinvoke r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(150L);

        $r5 = <android.graphics.drawable.RippleForeground: android.animation.TimeInterpolator LINEAR_INTERPOLATOR>;

        virtualinvoke r1.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r5);

        $r6 = r0.<android.graphics.drawable.RippleForeground: android.animation.AnimatorListenerAdapter mAnimationListener>;

        virtualinvoke r1.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r6);

        $l0 = specialinvoke r0.<android.graphics.drawable.RippleForeground: long computeFadeOutDelay()>();

        virtualinvoke r1.<android.animation.ObjectAnimator: void setStartDelay(long)>($l0);

        virtualinvoke r1.<android.animation.ObjectAnimator: void start()>();

        $r7 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    private void switchToUiThreadAnimation()
    {
        android.graphics.drawable.RippleForeground r0;
        android.animation.Animator r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        android.animation.AnimatorListenerAdapter $r6;

        r0 := @this: android.graphics.drawable.RippleForeground;

        i1 = 0;

     label1:
        $r2 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.animation.Animator) $r5;

        $r6 = r0.<android.graphics.drawable.RippleForeground: android.animation.AnimatorListenerAdapter mAnimationListener>;

        virtualinvoke r1.<android.animation.Animator: void removeListener(android.animation.Animator$AnimatorListener)>($r6);

        virtualinvoke r1.<android.animation.Animator: void end()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void clearHwProps()>();

        virtualinvoke r0.<android.graphics.drawable.RippleForeground: void invalidateSelf()>();

        return;
    }

    public void draw(android.graphics.Canvas, android.graphics.Paint)
    {
        android.graphics.drawable.RippleForeground r0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        boolean $z0, $z1, z2;
        android.graphics.RecordingCanvas $r3;

        r0 := @this: android.graphics.drawable.RippleForeground;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Paint;

        $z0 = r0.<android.graphics.drawable.RippleForeground: boolean mForceSoftware>;

        if $z0 != 0 goto label1;

        $z1 = r1 instanceof android.graphics.RecordingCanvas;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        specialinvoke r0.<android.graphics.drawable.RippleForeground: void pruneSwFinished()>();

        if z2 == 0 goto label3;

        $r3 = (android.graphics.RecordingCanvas) r1;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void drawHardware(android.graphics.RecordingCanvas,android.graphics.Paint)>($r3, r2);

        goto label4;

     label3:
        specialinvoke r0.<android.graphics.drawable.RippleForeground: void drawSoftware(android.graphics.Canvas,android.graphics.Paint)>(r1, r2);

     label4:
        return;
    }

    public void end()
    {
        android.graphics.drawable.RippleForeground r0;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r5, $r8;
        int $i0, $i1, i2, i3;
        java.lang.Object $r6, $r9;
        android.graphics.animation.RenderNodeAnimator $r7;
        android.animation.Animator $r10;

        r0 := @this: android.graphics.drawable.RippleForeground;

        i2 = 0;

     label1:
        $r1 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label2;

        $r8 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r10 = (android.animation.Animator) $r9;

        virtualinvoke $r10.<android.animation.Animator: void end()>();

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningSwAnimators>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        i3 = 0;

     label3:
        $r3 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label4;

        $r5 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (android.graphics.animation.RenderNodeAnimator) $r6;

        virtualinvoke $r7.<android.graphics.animation.RenderNodeAnimator: void end()>();

        i3 = i3 + 1;

        goto label3;

     label4:
        $r4 = r0.<android.graphics.drawable.RippleForeground: java.util.ArrayList mRunningHwAnimators>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        return;
    }

    public final void enter()
    {
        android.graphics.drawable.RippleForeground r0;
        long $l0;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<android.graphics.drawable.RippleForeground: long mEnterStartedAtMillis> = $l0;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void startSoftwareEnter()>();

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void startHardwareEnter()>();

        return;
    }

    public final void exit()
    {
        android.graphics.drawable.RippleForeground r0;

        r0 := @this: android.graphics.drawable.RippleForeground;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void startSoftwareExit()>();

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void startHardwareExit()>();

        return;
    }

    public void getBounds(android.graphics.Rect)
    {
        android.graphics.drawable.RippleForeground r0;
        android.graphics.Rect r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1, $f2;

        r0 := @this: android.graphics.drawable.RippleForeground;

        r1 := @parameter0: android.graphics.Rect;

        $f0 = r0.<android.graphics.drawable.RippleForeground: float mTargetX>;

        i0 = (int) $f0;

        $f1 = r0.<android.graphics.drawable.RippleForeground: float mTargetY>;

        i1 = (int) $f1;

        $f2 = r0.<android.graphics.drawable.RippleForeground: float mTargetRadius>;

        $i3 = (int) $f2;

        i2 = $i3 + 1;

        $i7 = i0 - i2;

        $i6 = i1 - i2;

        $i5 = i0 + i2;

        $i4 = i1 + i2;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i7, $i6, $i5, $i4);

        return;
    }

    public boolean hasFinishedExit()
    {
        android.graphics.drawable.RippleForeground r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.RippleForeground;

        $z0 = r0.<android.graphics.drawable.RippleForeground: boolean mHasFinishedExit>;

        return $z0;
    }

    public void move(float, float)
    {
        android.graphics.drawable.RippleForeground r0;
        float f0, f1;

        r0 := @this: android.graphics.drawable.RippleForeground;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.graphics.drawable.RippleForeground: float mStartingX> = f0;

        r0.<android.graphics.drawable.RippleForeground: float mStartingY> = f1;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void clampStartingPosition()>();

        return;
    }

    protected void onTargetRadiusChanged(float)
    {
        android.graphics.drawable.RippleForeground r0;
        float f0;

        r0 := @this: android.graphics.drawable.RippleForeground;

        f0 := @parameter0: float;

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void clampStartingPosition()>();

        specialinvoke r0.<android.graphics.drawable.RippleForeground: void switchToUiThreadAnimation()>();

        return;
    }
}
