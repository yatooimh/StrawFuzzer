public class android.graphics.drawable.ShapeDrawable extends android.graphics.drawable.Drawable
{
    private android.graphics.BlendModeColorFilter mBlendModeColorFilter;
    private boolean mMutated;
    private android.graphics.drawable.ShapeDrawable$ShapeState mShapeState;

    public void <init>()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = new android.graphics.drawable.ShapeDrawable$ShapeState;

        specialinvoke $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: void <init>()>();

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.ShapeDrawable$ShapeState,android.content.res.Resources)>($r1, null);

        return;
    }

    private void <init>(android.graphics.drawable.ShapeDrawable$ShapeState, android.content.res.Resources)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState r1;
        android.content.res.Resources r2;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.drawable.ShapeDrawable$ShapeState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState> = r1;

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void updateLocalState()>();

        return;
    }

    void <init>(android.graphics.drawable.ShapeDrawable$ShapeState, android.content.res.Resources, android.graphics.drawable.ShapeDrawable$1)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.ShapeDrawable$1 r3;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.drawable.ShapeDrawable$ShapeState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.ShapeDrawable$1;

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.ShapeDrawable$ShapeState,android.content.res.Resources)>(r1, r2);

        return;
    }

    public void <init>(android.graphics.drawable.shapes.Shape)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.shapes.Shape r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2, $r3;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.drawable.shapes.Shape;

        $r2 = new android.graphics.drawable.ShapeDrawable$ShapeState;

        specialinvoke $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: void <init>()>();

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.ShapeDrawable$ShapeState,android.content.res.Resources)>($r2, null);

        $r3 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape> = r1;

        return;
    }

    private static int modulateAlpha(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 >>> 7;

        $i3 = $i2 + i1;

        $i4 = i0 * $i3;

        $i5 = $i4 >>> 8;

        return $i5;
    }

    private void updateLocalState()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1, $r2;
        android.graphics.BlendMode $r3;
        android.content.res.ColorStateList $r4;
        android.graphics.BlendModeColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r5 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r4 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.BlendMode mBlendMode>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, $r4, $r3);

        r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r6;

        return;
    }

    private void updateShape()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.Rect r1;
        int i0, i1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2, $r4, $r6, $r8, $r9;
        android.graphics.drawable.shapes.Shape $r3, $r5;
        float $f0, $f1;
        android.graphics.drawable.ShapeDrawable$ShaderFactory $r7, $r10;
        android.graphics.Paint $r11;
        android.graphics.Shader $r12;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        if $r3 == null goto label1;

        r1 = virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: android.graphics.Rect getBounds()>();

        i0 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        i1 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $r4 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r5 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        $f1 = (float) i0;

        $f0 = (float) i1;

        virtualinvoke $r5.<android.graphics.drawable.shapes.Shape: void resize(float,float)>($f1, $f0);

        $r6 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r7 = $r6.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.ShapeDrawable$ShaderFactory mShaderFactory>;

        if $r7 == null goto label1;

        $r8 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r11 = $r8.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        $r9 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r10 = $r9.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.ShapeDrawable$ShaderFactory mShaderFactory>;

        $r12 = virtualinvoke $r10.<android.graphics.drawable.ShapeDrawable$ShaderFactory: android.graphics.Shader resize(int,int)>(i0, i1);

        virtualinvoke $r11.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r12);

     label1:
        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState r1;
        android.graphics.Paint r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r3;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3;
        android.graphics.BlendMode $r4, $r5;
        android.content.res.TypedArray r6;
        android.content.res.ColorStateList r7;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r6 := @parameter0: android.content.res.TypedArray;

        r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        r2 = r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        $i1 = r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mChangingConfigurations>;

        $i2 = virtualinvoke r6.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i3 = $i1 | $i2;

        r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mChangingConfigurations> = $i3;

        $r3 = virtualinvoke r6.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int[] mThemeAttrs> = $r3;

        $i4 = virtualinvoke r2.<android.graphics.Paint: int getColor()>();

        $i5 = virtualinvoke r6.<android.content.res.TypedArray: int getColor(int,int)>(4, $i4);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>($i5);

        $z0 = virtualinvoke r2.<android.graphics.Paint: boolean isDither()>();

        $z1 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, $z0);

        virtualinvoke r2.<android.graphics.Paint: void setDither(boolean)>($z1);

        $i6 = r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicWidth>;

        $f0 = (float) $i6;

        $f1 = virtualinvoke r6.<android.content.res.TypedArray: float getDimension(int,float)>(3, $f0);

        $i7 = (int) $f1;

        r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicWidth> = $i7;

        $i8 = r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicHeight>;

        $f2 = (float) $i8;

        $f3 = virtualinvoke r6.<android.content.res.TypedArray: float getDimension(int,float)>(2, $f2);

        $i9 = (int) $f3;

        r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicHeight> = $i9;

        i0 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(5, -1);

        if i0 == -1 goto label1;

        $r4 = <android.graphics.BlendMode: android.graphics.BlendMode SRC_IN>;

        $r5 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.BlendMode parseBlendMode(int,android.graphics.BlendMode)>(i0, $r4);

        r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.BlendMode mBlendMode> = $r5;

     label1:
        r7 = virtualinvoke r6.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(1);

        if r7 == null goto label2;

        r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint> = r7;

     label2:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.ShapeDrawable$ShapeState r2;
        android.content.res.TypedArray r3;
        int[] $r4, $r9, $r10;
        android.content.res.ColorStateList $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        if r2 != null goto label1;

        return;

     label1:
        $r4 = r2.<android.graphics.drawable.ShapeDrawable$ShapeState: int[] mThemeAttrs>;

        if $r4 == null goto label2;

        $r10 = r2.<android.graphics.drawable.ShapeDrawable$ShapeState: int[] mThemeAttrs>;

        $r9 = <com.android.internal.R$styleable: int[] ShapeDrawable>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r10, $r9);

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

     label2:
        $r5 = r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        if $r5 == null goto label3;

        $r6 = r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        $z0 = virtualinvoke $r6.<android.content.res.ColorStateList: boolean canApplyTheme()>();

        if $z0 == 0 goto label3;

        $r7 = r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        $r8 = virtualinvoke $r7.<android.content.res.ColorStateList: android.content.res.ColorStateList obtainForTheme(android.content.res.Resources$Theme)>(r1);

        r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint> = $r8;

     label3:
        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void updateLocalState()>();

        return;
    }

    public void clearMutated()
    {
        android.graphics.drawable.ShapeDrawable r0;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void clearMutated()>();

        r0.<android.graphics.drawable.ShapeDrawable: boolean mMutated> = 0;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        android.graphics.drawable.ShapeDrawable$ShapeState r3;
        android.graphics.Paint r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1;
        android.graphics.drawable.shapes.Shape $r6, $r12;
        android.graphics.ColorFilter $r7;
        android.graphics.BlendModeColorFilter $r8, $r11;
        android.graphics.Xfermode $r10;
        boolean $z0, z1;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: android.graphics.Rect getBounds()>();

        r3 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        r4 = r3.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        i0 = virtualinvoke r4.<android.graphics.Paint: int getAlpha()>();

        $i2 = r3.<android.graphics.drawable.ShapeDrawable$ShapeState: int mAlpha>;

        $i3 = staticinvoke <android.graphics.drawable.ShapeDrawable: int modulateAlpha(int,int)>(i0, $i2);

        virtualinvoke r4.<android.graphics.Paint: void setAlpha(int)>($i3);

        $i4 = virtualinvoke r4.<android.graphics.Paint: int getAlpha()>();

        if $i4 != 0 goto label1;

        $r10 = virtualinvoke r4.<android.graphics.Paint: android.graphics.Xfermode getXfermode()>();

        if $r10 != null goto label1;

        $z0 = virtualinvoke r4.<android.graphics.Paint: boolean hasShadowLayer()>();

        if $z0 == 0 goto label6;

     label1:
        $r11 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        if $r11 == null goto label2;

        $r7 = virtualinvoke r4.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        if $r7 != null goto label2;

        $r8 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        virtualinvoke r4.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r8);

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        $r12 = r3.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        if $r12 == null goto label4;

        i1 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i5 = r2.<android.graphics.Rect: int left>;

        $f1 = (float) $i5;

        $i6 = r2.<android.graphics.Rect: int top>;

        $f0 = (float) $i6;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        $r6 = r3.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)>($r6, r1, r4);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i1);

        goto label5;

     label4:
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>(r2, r4);

     label5:
        if z1 == 0 goto label6;

        virtualinvoke r4.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

     label6:
        virtualinvoke r4.<android.graphics.Paint: void setAlpha(int)>(i0);

        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $i0 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mAlpha>;

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.ShapeDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        return $i2;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mChangingConfigurations> = $i0;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        return $r2;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $i0 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicHeight>;

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $i0 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicWidth>;

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.Paint r1;
        int i0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2, $r4;
        android.graphics.drawable.shapes.Shape $r3;
        android.graphics.Xfermode $r5;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        if $r3 != null goto label2;

        $r4 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        r1 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        $r5 = virtualinvoke r1.<android.graphics.Paint: android.graphics.Xfermode getXfermode()>();

        if $r5 != null goto label2;

        i0 = virtualinvoke r1.<android.graphics.Paint: int getAlpha()>();

        if i0 != 0 goto label1;

        return -2;

     label1:
        if i0 != 255 goto label2;

        return -1;

     label2:
        return -3;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.Outline r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2, $r4;
        android.graphics.drawable.shapes.Shape $r3, $r5;
        int $i0;
        float $f0, $f1;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.Outline;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        if $r3 == null goto label1;

        $r4 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r5 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        virtualinvoke $r5.<android.graphics.drawable.shapes.Shape: void getOutline(android.graphics.Outline)>(r1);

        $i0 = virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: int getAlpha()>();

        $f0 = (float) $i0;

        $f1 = $f0 / 255.0F;

        virtualinvoke r1.<android.graphics.Outline: void setAlpha(float)>($f1);

     label1:
        return;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.Rect r1, $r3, $r5;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2, $r4;
        boolean $z0;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        if $r3 == null goto label1;

        $r4 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r5 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r5);

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z0;
    }

    public android.graphics.Paint getPaint()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.Paint $r2;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        return $r2;
    }

    public android.graphics.drawable.ShapeDrawable$ShaderFactory getShaderFactory()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.drawable.ShapeDrawable$ShaderFactory $r2;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.ShapeDrawable$ShaderFactory mShaderFactory>;

        return $r2;
    }

    public android.graphics.drawable.shapes.Shape getShape()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.drawable.shapes.Shape $r2;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape>;

        return $r2;
    }

    public boolean hasFocusStateSpecified()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1, $r3;
        android.content.res.ColorStateList $r2, $r4;
        boolean $z0, z1;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r4 = $r3.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        $z0 = virtualinvoke $r4.<android.content.res.ColorStateList: boolean hasFocusStateSpecified()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        int i0, i1, $i3;
        java.lang.String r4, $r11;
        int[] $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        android.content.res.Resources$Theme r12;
        android.content.res.TypedArray r13;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r12 := @parameter3: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r12);

        $r5 = <com.android.internal.R$styleable: int[] ShapeDrawable>;

        r13 = staticinvoke <android.graphics.drawable.ShapeDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r12, r3, $r5);

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r13);

        virtualinvoke r13.<android.content.res.TypedArray: void recycle()>();

        i0 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label5;

        if i1 != 3 goto label2;

        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i0 goto label5;

     label2:
        if i1 == 2 goto label3;

        goto label1;

     label3:
        r4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r4, r1, r2, r3);

        if $z0 != 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ShapeDrawable ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", $r11);

     label4:
        goto label1;

     label5:
        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void updateLocalState()>();

        return;
    }

    protected boolean inflateTag(java.lang.String, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        java.lang.String $r4, r6;
        boolean $z0;
        int[] $r5;
        int $i0, $i1, $i2, $i3;
        android.content.res.TypedArray r7;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter3: android.util.AttributeSet;

        $r4 = "padding";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label1;

        $r5 = <com.android.internal.R$styleable: int[] ShapeDrawablePadding>;

        r7 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r5);

        $i0 = virtualinvoke r7.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(0, 0);

        $i1 = virtualinvoke r7.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(1, 0);

        $i2 = virtualinvoke r7.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(2, 0);

        $i3 = virtualinvoke r7.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(3, 0);

        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

        return 1;

     label1:
        return 0;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShapeState r1;
        boolean $z0, $z1, z2;
        android.content.res.ColorStateList $r2, $r3;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 != 0 goto label2;

        $r2 = r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        if $r2 == null goto label1;

        $r3 = r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        $z1 = virtualinvoke $r3.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.ShapeDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2, $r3;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        $z0 = r0.<android.graphics.drawable.ShapeDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = new android.graphics.drawable.ShapeDrawable$ShapeState;

        $r3 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        specialinvoke $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: void <init>(android.graphics.drawable.ShapeDrawable$ShapeState)>($r3);

        r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState> = $r2;

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void updateLocalState()>();

        r0.<android.graphics.drawable.ShapeDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.Rect r1;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>(r1);

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void updateShape()>();

        return;
    }

    protected void onDraw(android.graphics.drawable.shapes.Shape, android.graphics.Canvas, android.graphics.Paint)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.shapes.Shape r1;
        android.graphics.Canvas r2;
        android.graphics.Paint r3;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.drawable.shapes.Shape;

        r2 := @parameter1: android.graphics.Canvas;

        r3 := @parameter2: android.graphics.Paint;

        virtualinvoke r1.<android.graphics.drawable.shapes.Shape: void draw(android.graphics.Canvas,android.graphics.Paint)>(r2, r3);

        return;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.content.res.ColorStateList $r1, $r4;
        android.graphics.BlendMode $r2, $r3;
        android.graphics.BlendModeColorFilter $r5, $r6;
        int[] r7;
        android.graphics.drawable.ShapeDrawable$ShapeState r8;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r7 := @parameter0: int[];

        r8 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r1 = r8.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        if $r1 == null goto label1;

        $r2 = r8.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.BlendMode mBlendMode>;

        if $r2 == null goto label1;

        $r5 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r4 = r8.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        $r3 = r8.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.BlendMode mBlendMode>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, $r4, $r3);

        r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r6;

        return 1;

     label1:
        return 0;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.ShapeDrawable r0;
        int i0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mAlpha> = i0;

        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;
        android.graphics.Paint $r3;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.ShapeDrawable r0;
        boolean z0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;
        android.graphics.Paint $r2;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setIntrinsicHeight(int)
    {
        android.graphics.drawable.ShapeDrawable r0;
        int i0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicHeight> = i0;

        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setIntrinsicWidth(int)
    {
        android.graphics.drawable.ShapeDrawable r0;
        int i0;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: int mIntrinsicWidth> = i0;

        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setPadding(int, int, int, int)
    {
        android.graphics.drawable.ShapeDrawable r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.graphics.drawable.ShapeDrawable$ShapeState $r1, $r3, $r6, $r7;
        android.graphics.Rect $r2, $r4, $r5;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = i0 | i1;

        $i5 = $i4 | i2;

        $i6 = $i5 | i3;

        if $i6 != 0 goto label1;

        $r7 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r7.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding> = null;

        goto label3;

     label1:
        $r1 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2 = $r1.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        if $r2 != null goto label2;

        $r6 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        $r6.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding> = $r5;

     label2:
        $r3 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r4 = $r3.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>(i0, i1, i2, i3);

     label3:
        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setPadding(android.graphics.Rect)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.Rect r1, $r3, $r5, $r6;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2, $r4, $r7, $r8;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.Rect;

        if r1 != null goto label1;

        $r8 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r8.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding> = null;

        goto label3;

     label1:
        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        if $r3 != null goto label2;

        $r7 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        $r7.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding> = $r6;

     label2:
        $r4 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r5 = $r4.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Rect mPadding>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

     label3:
        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setShaderFactory(android.graphics.drawable.ShapeDrawable$ShaderFactory)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.ShapeDrawable$ShaderFactory r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.drawable.ShapeDrawable$ShaderFactory;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.ShapeDrawable$ShaderFactory mShaderFactory> = r1;

        return;
    }

    public void setShape(android.graphics.drawable.shapes.Shape)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.drawable.shapes.Shape r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.drawable.shapes.Shape;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.shapes.Shape mShape> = r1;

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void updateShape()>();

        return;
    }

    public void setTintBlendMode(android.graphics.BlendMode)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.BlendMode r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2, $r3;
        android.content.res.ColorStateList $r4;
        android.graphics.BlendModeColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.BlendMode;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.BlendMode mBlendMode> = r1;

        $r5 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r3 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r4 = $r3.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, $r4, r1);

        r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r6;

        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2, $r3;
        android.graphics.BlendMode $r4;
        android.graphics.BlendModeColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.content.res.ColorStateList mTint> = r1;

        $r5 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter>;

        $r3 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r4 = $r3.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.BlendMode mBlendMode>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter updateBlendModeFilter(android.graphics.BlendModeColorFilter,android.content.res.ColorStateList,android.graphics.BlendMode)>($r5, r1, $r4);

        r0.<android.graphics.drawable.ShapeDrawable: android.graphics.BlendModeColorFilter mBlendModeColorFilter> = $r6;

        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }

    public void setXfermode(android.graphics.Xfermode)
    {
        android.graphics.drawable.ShapeDrawable r0;
        android.graphics.Xfermode r1;
        android.graphics.drawable.ShapeDrawable$ShapeState $r2;
        android.graphics.Paint $r3;

        r0 := @this: android.graphics.drawable.ShapeDrawable;

        r1 := @parameter0: android.graphics.Xfermode;

        $r2 = r0.<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShapeState mShapeState>;

        $r3 = $r2.<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>(r1);

        virtualinvoke r0.<android.graphics.drawable.ShapeDrawable: void invalidateSelf()>();

        return;
    }
}
