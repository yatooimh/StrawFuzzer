public class android.graphics.drawable.StateListDrawable extends android.graphics.drawable.DrawableContainer
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private boolean mMutated;
    private android.graphics.drawable.StateListDrawable$StateListState mStateListState;

    public void <init>()
    {
        android.graphics.drawable.StateListDrawable r0;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        specialinvoke r0.<android.graphics.drawable.StateListDrawable: void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources)>(null, null);

        return;
    }

    void <init>(android.graphics.drawable.StateListDrawable$StateListState)
    {
        android.graphics.drawable.StateListDrawable r0;
        android.graphics.drawable.StateListDrawable$StateListState r1;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: android.graphics.drawable.StateListDrawable$StateListState;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void <init>()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.graphics.drawable.StateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r1);

     label1:
        return;
    }

    private void <init>(android.graphics.drawable.StateListDrawable$StateListState, android.content.res.Resources)
    {
        android.graphics.drawable.StateListDrawable r0;
        android.graphics.drawable.StateListDrawable$StateListState r1, $r3;
        android.content.res.Resources r2;
        int[] $r4;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: android.graphics.drawable.StateListDrawable$StateListState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void <init>()>();

        $r3 = new android.graphics.drawable.StateListDrawable$StateListState;

        specialinvoke $r3.<android.graphics.drawable.StateListDrawable$StateListState: void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.graphics.drawable.StateListDrawable,android.content.res.Resources)>(r1, r0, r2);

        virtualinvoke r0.<android.graphics.drawable.StateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>($r3);

        $r4 = virtualinvoke r0.<android.graphics.drawable.StateListDrawable: int[] getState()>();

        virtualinvoke r0.<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>($r4);

        return;
    }

    void <init>(android.graphics.drawable.StateListDrawable$StateListState, android.content.res.Resources, android.graphics.drawable.StateListDrawable$1)
    {
        android.graphics.drawable.StateListDrawable r0;
        android.graphics.drawable.StateListDrawable$StateListState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.StateListDrawable$1 r3;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: android.graphics.drawable.StateListDrawable$StateListState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.StateListDrawable$1;

        specialinvoke r0.<android.graphics.drawable.StateListDrawable: void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.StateListDrawable r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        android.graphics.drawable.StateListDrawable$StateListState r4;
        int i0, i1, $i2, i4, i5;
        android.graphics.drawable.Drawable r5, r17;
        int[] r6, $r8;
        java.lang.String $r7, $r10, $r14;
        boolean $z0;
        android.content.res.Resources r15;
        android.content.res.TypedArray r16;
        java.lang.StringBuilder r19;
        org.xmlpull.v1.XmlPullParserException r20;
        java.lang.Throwable r21;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r15 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        r4 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i2 + 1;

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label9;

        i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i4 >= i0 goto label2;

        if i1 == 3 goto label9;

     label2:
        if i1 == 2 goto label3;

        goto label1;

     label3:
        if i4 > i0 goto label1;

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label4;

        goto label1;

     label4:
        $r8 = <com.android.internal.R$styleable: int[] StateListDrawableItem>;

        r16 = staticinvoke <android.graphics.drawable.StateListDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r15, r3, r2, $r8);

        r5 = virtualinvoke r16.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke r16.<android.content.res.TypedArray: void recycle()>();

        r6 = virtualinvoke r0.<android.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)>(r2);

        r17 = r5;

        if r5 != null goto label8;

     label5:
        i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i5 != 4 goto label6;

        goto label5;

     label6:
        if i5 != 2 goto label7;

        r17 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r15, r1, r2, r3);

        goto label8;

     label7:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        r20 = new org.xmlpull.v1.XmlPullParserException;

        $r14 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r14);

        r21 = (java.lang.Throwable) r20;

        throw r21;

     label8:
        virtualinvoke r4.<android.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)>(r6, r17);

        goto label1;

     label9:
        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.StateListDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.StateListDrawable$StateListState r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $i0 = r2.<android.graphics.drawable.StateListDrawable$StateListState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r2.<android.graphics.drawable.StateListDrawable$StateListState: int mChangingConfigurations> = $i2;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.StateListDrawable$StateListState: int[] mThemeAttrs> = $r3;

        $z0 = r2.<android.graphics.drawable.StateListDrawable$StateListState: boolean mVariablePadding>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, $z0);

        r2.<android.graphics.drawable.StateListDrawable$StateListState: boolean mVariablePadding> = $z1;

        $z2 = r2.<android.graphics.drawable.StateListDrawable$StateListState: boolean mConstantSize>;

        $z3 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, $z2);

        r2.<android.graphics.drawable.StateListDrawable$StateListState: boolean mConstantSize> = $z3;

        $i3 = r2.<android.graphics.drawable.StateListDrawable$StateListState: int mEnterFadeDuration>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(4, $i3);

        r2.<android.graphics.drawable.StateListDrawable$StateListState: int mEnterFadeDuration> = $i4;

        $i5 = r2.<android.graphics.drawable.StateListDrawable$StateListState: int mExitFadeDuration>;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(5, $i5);

        r2.<android.graphics.drawable.StateListDrawable$StateListState: int mExitFadeDuration> = $i6;

        $z4 = r2.<android.graphics.drawable.StateListDrawable$StateListState: boolean mDither>;

        $z5 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, $z4);

        r2.<android.graphics.drawable.StateListDrawable$StateListState: boolean mDither> = $z5;

        $z6 = r2.<android.graphics.drawable.StateListDrawable$StateListState: boolean mAutoMirrored>;

        $z7 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, $z6);

        r2.<android.graphics.drawable.StateListDrawable$StateListState: boolean mAutoMirrored> = $z7;

        return;
    }

    public void addState(int[], android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.StateListDrawable r0;
        int[] r1, $r4;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.StateListDrawable$StateListState $r3;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.graphics.drawable.Drawable;

        if r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        virtualinvoke $r3.<android.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)>(r1, r2);

        $r4 = virtualinvoke r0.<android.graphics.drawable.StateListDrawable: int[] getState()>();

        virtualinvoke r0.<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>($r4);

     label1:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.StateListDrawable r0;
        android.content.res.Resources$Theme r1;
        int[] $r2;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources$Theme)>(r1);

        $r2 = virtualinvoke r0.<android.graphics.drawable.StateListDrawable: int[] getState()>();

        virtualinvoke r0.<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>($r2);

        return;
    }

    public void clearMutated()
    {
        android.graphics.drawable.StateListDrawable r0;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void clearMutated()>();

        r0.<android.graphics.drawable.StateListDrawable: boolean mMutated> = 0;

        return;
    }

    volatile android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
    {
        android.graphics.drawable.StateListDrawable r0;
        android.graphics.drawable.StateListDrawable$StateListState $r1;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        $r1 = virtualinvoke r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState cloneConstantState()>();

        return $r1;
    }

    android.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
    {
        android.graphics.drawable.StateListDrawable r0;
        android.graphics.drawable.StateListDrawable$StateListState $r1, $r2;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        $r1 = new android.graphics.drawable.StateListDrawable$StateListState;

        $r2 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        specialinvoke $r1.<android.graphics.drawable.StateListDrawable$StateListState: void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.graphics.drawable.StateListDrawable,android.content.res.Resources)>($r2, r0, null);

        return $r1;
    }

    int[] extractStateSet(android.util.AttributeSet)
    {
        android.graphics.drawable.StateListDrawable r0;
        android.util.AttributeSet r1;
        int i0, i1, i2, i3;
        int[] r2, $r3;
        boolean $z0;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: android.util.AttributeSet;

        i1 = 0;

        i0 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeCount()>();

        r2 = newarray (int)[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

        i3 = interfaceinvoke r1.<android.util.AttributeSet: int getAttributeNameResource(int)>(i2);

        if i3 == 0 goto label5;

        if i3 == 16842960 goto label4;

        if i3 == 16843161 goto label4;

        $z0 = interfaceinvoke r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i2, 0);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        i3 = neg i3;

     label3:
        r2[i1] = i3;

        i1 = i1 + 1;

        goto label5;

     label4:
        goto label5;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r3 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>(r2, i1);

        return $r3;
    }

    public int findStateDrawableIndex(int[])
    {
        android.graphics.drawable.StateListDrawable r0;
        int[] r1;
        android.graphics.drawable.StateListDrawable$StateListState $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: int[];

        $r2 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>(r1);

        return $i0;
    }

    public int getStateCount()
    {
        android.graphics.drawable.StateListDrawable r0;
        android.graphics.drawable.StateListDrawable$StateListState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        $r1 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.StateListDrawable$StateListState: int getChildCount()>();

        return $i0;
    }

    public android.graphics.drawable.Drawable getStateDrawable(int)
    {
        android.graphics.drawable.StateListDrawable r0;
        int i0;
        android.graphics.drawable.StateListDrawable$StateListState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable getChild(int)>(i0);

        return $r2;
    }

    android.graphics.drawable.StateListDrawable$StateListState getStateListState()
    {
        android.graphics.drawable.StateListDrawable r0;
        android.graphics.drawable.StateListDrawable$StateListState $r1;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        $r1 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        return $r1;
    }

    public int[] getStateSet(int)
    {
        android.graphics.drawable.StateListDrawable r0;
        int i0;
        android.graphics.drawable.StateListDrawable$StateListState $r1;
        int[][] $r2;
        int[] $r3;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $r2 = $r1.<android.graphics.drawable.StateListDrawable$StateListState: int[][] mStateSets>;

        $r3 = $r2[i0];

        return $r3;
    }

    public boolean hasFocusStateSpecified()
    {
        android.graphics.drawable.StateListDrawable r0;
        android.graphics.drawable.StateListDrawable$StateListState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        $r1 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.StateListDrawable$StateListState: boolean hasFocusStateSpecified()>();

        return $z0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.StateListDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int[] $r6, $r7;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $r6 = <com.android.internal.R$styleable: int[] StateListDrawable>;

        r5 = staticinvoke <android.graphics.drawable.StateListDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r6);

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>(r1, r2, r5, 1);

        specialinvoke r0.<android.graphics.drawable.StateListDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r5);

        virtualinvoke r0.<android.graphics.drawable.StateListDrawable: void updateDensity(android.content.res.Resources)>(r1);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.graphics.drawable.StateListDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        $r7 = virtualinvoke r0.<android.graphics.drawable.StateListDrawable: int[] getState()>();

        virtualinvoke r0.<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>($r7);

        return;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.StateListDrawable r0;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        return 1;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.StateListDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.StateListDrawable$StateListState $r2;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        $z0 = r0.<android.graphics.drawable.StateListDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        virtualinvoke $r2.<android.graphics.drawable.StateListDrawable$StateListState: void mutate()>();

        r0.<android.graphics.drawable.StateListDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.StateListDrawable r0;
        int[] r1, $r3;
        int i0, i1;
        android.graphics.drawable.StateListDrawable$StateListState $r2, $r4;
        boolean $z0, z1, z2;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: int[];

        z1 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])>(r1);

        $r2 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        i0 = virtualinvoke $r2.<android.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>(r1);

        i1 = i0;

        if i0 >= 0 goto label1;

        $r4 = r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $r3 = <android.util.StateSet: int[] WILD_CARD>;

        i1 = virtualinvoke $r4.<android.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>($r3);

     label1:
        $z0 = virtualinvoke r0.<android.graphics.drawable.StateListDrawable: boolean selectDrawable(int)>(i1);

        if $z0 != 0 goto label3;

        if z1 == 0 goto label2;

        goto label3;

     label2:
        z2 = 0;

        goto label4;

     label3:
        z2 = 1;

     label4:
        return z2;
    }

    protected void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        android.graphics.drawable.StateListDrawable r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r1;
        boolean $z0;
        android.graphics.drawable.StateListDrawable$StateListState $r2;

        r0 := @this: android.graphics.drawable.StateListDrawable;

        r1 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r1);

        $z0 = r1 instanceof android.graphics.drawable.StateListDrawable$StateListState;

        if $z0 == 0 goto label1;

        $r2 = (android.graphics.drawable.StateListDrawable$StateListState) r1;

        r0.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState mStateListState> = $r2;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.StateListDrawable: java.lang.String TAG> = "StateListDrawable";

        <android.graphics.drawable.StateListDrawable: boolean DEBUG> = 0;

        return;
    }
}
