public class android.graphics.drawable.shapes.PathShape extends android.graphics.drawable.shapes.Shape
{
    private android.graphics.Path mPath;
    private float mScaleX;
    private float mScaleY;
    private final float mStdHeight;
    private final float mStdWidth;

    public void <init>(android.graphics.Path, float, float)
    {
        android.graphics.drawable.shapes.PathShape r0;
        android.graphics.Path r1;
        float f0, f1;

        r0 := @this: android.graphics.drawable.shapes.PathShape;

        r1 := @parameter0: android.graphics.Path;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        specialinvoke r0.<android.graphics.drawable.shapes.Shape: void <init>()>();

        r0.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath> = r1;

        r0.<android.graphics.drawable.shapes.PathShape: float mStdWidth> = f0;

        r0.<android.graphics.drawable.shapes.PathShape: float mStdHeight> = f1;

        return;
    }

    public android.graphics.drawable.shapes.PathShape clone() throws java.lang.CloneNotSupportedException
    {
        android.graphics.drawable.shapes.PathShape r0, r1;
        android.graphics.drawable.shapes.Shape $r2;
        android.graphics.Path $r3, $r4;

        r0 := @this: android.graphics.drawable.shapes.PathShape;

        $r2 = specialinvoke r0.<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>();

        r1 = (android.graphics.drawable.shapes.PathShape) $r2;

        $r3 = new android.graphics.Path;

        $r4 = r0.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath>;

        specialinvoke $r3.<android.graphics.Path: void <init>(android.graphics.Path)>($r4);

        r1.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath> = $r3;

        return r1;
    }

    public volatile android.graphics.drawable.shapes.Shape clone() throws java.lang.CloneNotSupportedException
    {
        android.graphics.drawable.shapes.PathShape r0, $r1;

        r0 := @this: android.graphics.drawable.shapes.PathShape;

        $r1 = virtualinvoke r0.<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.PathShape clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.graphics.drawable.shapes.PathShape r0, $r1;

        r0 := @this: android.graphics.drawable.shapes.PathShape;

        $r1 = virtualinvoke r0.<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.PathShape clone()>();

        return $r1;
    }

    public void draw(android.graphics.Canvas, android.graphics.Paint)
    {
        android.graphics.drawable.shapes.PathShape r0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        float $f0, $f1;
        android.graphics.Path $r3;

        r0 := @this: android.graphics.drawable.shapes.PathShape;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Paint;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $f1 = r0.<android.graphics.drawable.shapes.PathShape: float mScaleX>;

        $f0 = r0.<android.graphics.drawable.shapes.PathShape: float mScaleY>;

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>($f1, $f0);

        $r3 = r0.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, r2);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.graphics.drawable.shapes.PathShape r0, r6;
        java.lang.Class $r1, $r2;
        boolean $z0, $z1, z2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int $i0, $i1, $i2, $i3;
        android.graphics.Path $r3, $r4;
        java.lang.Object r5;

        r0 := @this: android.graphics.drawable.shapes.PathShape;

        r5 := @parameter0: java.lang.Object;

        z2 = 1;

        if r0 != r5 goto label1;

        return 1;

     label1:
        if r5 == null goto label6;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label6;

     label2:
        $z0 = specialinvoke r0.<android.graphics.drawable.shapes.Shape: boolean equals(java.lang.Object)>(r5);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r6 = (android.graphics.drawable.shapes.PathShape) r5;

        $f1 = r6.<android.graphics.drawable.shapes.PathShape: float mStdWidth>;

        $f0 = r0.<android.graphics.drawable.shapes.PathShape: float mStdWidth>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, $f0);

        if $i0 != 0 goto label4;

        $f3 = r6.<android.graphics.drawable.shapes.PathShape: float mStdHeight>;

        $f2 = r0.<android.graphics.drawable.shapes.PathShape: float mStdHeight>;

        $i1 = staticinvoke <java.lang.Float: int compare(float,float)>($f3, $f2);

        if $i1 != 0 goto label4;

        $f5 = r6.<android.graphics.drawable.shapes.PathShape: float mScaleX>;

        $f4 = r0.<android.graphics.drawable.shapes.PathShape: float mScaleX>;

        $i2 = staticinvoke <java.lang.Float: int compare(float,float)>($f5, $f4);

        if $i2 != 0 goto label4;

        $f7 = r6.<android.graphics.drawable.shapes.PathShape: float mScaleY>;

        $f6 = r0.<android.graphics.drawable.shapes.PathShape: float mScaleY>;

        $i3 = staticinvoke <java.lang.Float: int compare(float,float)>($f7, $f6);

        if $i3 != 0 goto label4;

        $r4 = r0.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath>;

        $r3 = r6.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        z2 = 0;

     label5:
        return z2;

     label6:
        return 0;
    }

    public int hashCode()
    {
        android.graphics.drawable.shapes.PathShape r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Integer $r2;
        float $f0, $f1, $f2, $f3;
        java.lang.Float $r3, $r4, $r6, $r7;
        android.graphics.Path $r5;

        r0 := @this: android.graphics.drawable.shapes.PathShape;

        $r1 = newarray (java.lang.Object)[6];

        $i0 = specialinvoke r0.<android.graphics.drawable.shapes.Shape: int hashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $f0 = r0.<android.graphics.drawable.shapes.PathShape: float mStdWidth>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1[1] = $r3;

        $f1 = r0.<android.graphics.drawable.shapes.PathShape: float mStdHeight>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r1[2] = $r4;

        $r5 = r0.<android.graphics.drawable.shapes.PathShape: android.graphics.Path mPath>;

        $r1[3] = $r5;

        $f2 = r0.<android.graphics.drawable.shapes.PathShape: float mScaleX>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r1[4] = $r6;

        $f3 = r0.<android.graphics.drawable.shapes.PathShape: float mScaleY>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r1[5] = $r7;

        $i1 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i1;
    }

    protected void onResize(float, float)
    {
        android.graphics.drawable.shapes.PathShape r0;
        float f0, f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.graphics.drawable.shapes.PathShape;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = r0.<android.graphics.drawable.shapes.PathShape: float mStdWidth>;

        $f3 = f0 / $f2;

        r0.<android.graphics.drawable.shapes.PathShape: float mScaleX> = $f3;

        $f4 = r0.<android.graphics.drawable.shapes.PathShape: float mStdHeight>;

        $f5 = f1 / $f4;

        r0.<android.graphics.drawable.shapes.PathShape: float mScaleY> = $f5;

        return;
    }
}
