public abstract class android.graphics.drawable.shapes.Shape extends java.lang.Object implements java.lang.Cloneable
{
    private float mHeight;
    private float mWidth;

    public void <init>()
    {
        android.graphics.drawable.shapes.Shape r0;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.drawable.shapes.Shape clone() throws java.lang.CloneNotSupportedException
    {
        android.graphics.drawable.shapes.Shape r0, $r2;
        java.lang.Object $r1;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.graphics.drawable.shapes.Shape) $r1;

        return $r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.graphics.drawable.shapes.Shape r0, $r1;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        $r1 = virtualinvoke r0.<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>();

        return $r1;
    }

    public abstract void draw(android.graphics.Canvas, android.graphics.Paint);

    public boolean equals(java.lang.Object)
    {
        android.graphics.drawable.shapes.Shape r0, r4;
        java.lang.Class $r1, $r2;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1;
        java.lang.Object r3;
        boolean z0;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        r3 := @parameter0: java.lang.Object;

        z0 = 1;

        if r0 != r3 goto label1;

        return 1;

     label1:
        if r3 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r4 = (android.graphics.drawable.shapes.Shape) r3;

        $f1 = r4.<android.graphics.drawable.shapes.Shape: float mWidth>;

        $f0 = r0.<android.graphics.drawable.shapes.Shape: float mWidth>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, $f0);

        if $i0 != 0 goto label3;

        $f3 = r4.<android.graphics.drawable.shapes.Shape: float mHeight>;

        $f2 = r0.<android.graphics.drawable.shapes.Shape: float mHeight>;

        $i1 = staticinvoke <java.lang.Float: int compare(float,float)>($f3, $f2);

        if $i1 != 0 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;

     label5:
        return 0;
    }

    public final float getHeight()
    {
        android.graphics.drawable.shapes.Shape r0;
        float $f0;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        $f0 = r0.<android.graphics.drawable.shapes.Shape: float mHeight>;

        return $f0;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.shapes.Shape r0;
        android.graphics.Outline r1;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        r1 := @parameter0: android.graphics.Outline;

        return;
    }

    public final float getWidth()
    {
        android.graphics.drawable.shapes.Shape r0;
        float $f0;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        $f0 = r0.<android.graphics.drawable.shapes.Shape: float mWidth>;

        return $f0;
    }

    public boolean hasAlpha()
    {
        android.graphics.drawable.shapes.Shape r0;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        return 1;
    }

    public int hashCode()
    {
        android.graphics.drawable.shapes.Shape r0;
        java.lang.Object[] $r1;
        float $f0, $f1;
        java.lang.Float $r2, $r3;
        int $i0;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        $r1 = newarray (java.lang.Object)[2];

        $f0 = r0.<android.graphics.drawable.shapes.Shape: float mWidth>;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1[0] = $r2;

        $f1 = r0.<android.graphics.drawable.shapes.Shape: float mHeight>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r1[1] = $r3;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    protected void onResize(float, float)
    {
        android.graphics.drawable.shapes.Shape r0;
        float f0, f1;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        return;
    }

    public final void resize(float, float)
    {
        android.graphics.drawable.shapes.Shape r0;
        float f0, $f1, $f2, f3, f4, f5;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.graphics.drawable.shapes.Shape;

        f3 := @parameter0: float;

        f0 := @parameter1: float;

        f4 = f3;

        $b0 = f3 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        f4 = 0.0F;

     label1:
        f5 = f0;

        $b1 = f0 cmpg 0.0F;

        if $b1 >= 0 goto label2;

        f5 = 0.0F;

     label2:
        $f1 = r0.<android.graphics.drawable.shapes.Shape: float mWidth>;

        $b2 = $f1 cmpl f4;

        if $b2 != 0 goto label3;

        $f2 = r0.<android.graphics.drawable.shapes.Shape: float mHeight>;

        $b3 = $f2 cmpl f5;

        if $b3 == 0 goto label4;

     label3:
        r0.<android.graphics.drawable.shapes.Shape: float mWidth> = f4;

        r0.<android.graphics.drawable.shapes.Shape: float mHeight> = f5;

        virtualinvoke r0.<android.graphics.drawable.shapes.Shape: void onResize(float,float)>(f4, f5);

     label4:
        return;
    }
}
