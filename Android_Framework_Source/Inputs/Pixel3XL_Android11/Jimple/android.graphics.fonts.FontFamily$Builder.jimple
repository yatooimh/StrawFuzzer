public final class android.graphics.fonts.FontFamily$Builder extends java.lang.Object
{
    private static final libcore.util.NativeAllocationRegistry sFamilyRegistory;
    private final java.util.ArrayList mFonts;
    private final java.util.HashSet mStyleHashSet;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.ClassLoader $r1;
        long $l0;
        libcore.util.NativeAllocationRegistry $r2;

        $r0 = class "Landroid/graphics/fonts/FontFamily;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $l0 = staticinvoke <android.graphics.fonts.FontFamily$Builder: long nGetReleaseNativeFamily()>();

        $r2 = staticinvoke <libcore.util.NativeAllocationRegistry: libcore.util.NativeAllocationRegistry createMalloced(java.lang.ClassLoader,long)>($r1, $l0);

        <android.graphics.fonts.FontFamily$Builder: libcore.util.NativeAllocationRegistry sFamilyRegistory> = $r2;

        return;
    }

    public void <init>(android.graphics.fonts.Font)
    {
        android.graphics.fonts.FontFamily$Builder r0;
        android.graphics.fonts.Font r1;
        java.util.ArrayList $r2, $r7;
        java.util.HashSet $r3, $r5;
        int $i0;
        java.lang.Integer $r6;

        r0 := @this: android.graphics.fonts.FontFamily$Builder;

        r1 := @parameter0: android.graphics.fonts.Font;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.graphics.fonts.FontFamily$Builder: java.util.ArrayList mFonts> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<android.graphics.fonts.FontFamily$Builder: java.util.HashSet mStyleHashSet> = $r3;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "font can not be null");

        $r5 = r0.<android.graphics.fonts.FontFamily$Builder: java.util.HashSet mStyleHashSet>;

        $i0 = staticinvoke <android.graphics.fonts.FontFamily$Builder: int makeStyleIdentifier(android.graphics.fonts.Font)>(r1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>($r6);

        $r7 = r0.<android.graphics.fonts.FontFamily$Builder: java.util.ArrayList mFonts>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    private static int makeStyleIdentifier(android.graphics.fonts.Font)
    {
        android.graphics.fonts.Font r0;
        android.graphics.fonts.FontStyle $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: android.graphics.fonts.Font;

        $r1 = virtualinvoke r0.<android.graphics.fonts.Font: android.graphics.fonts.FontStyle getStyle()>();

        $i0 = virtualinvoke $r1.<android.graphics.fonts.FontStyle: int getWeight()>();

        $r2 = virtualinvoke r0.<android.graphics.fonts.Font: android.graphics.fonts.FontStyle getStyle()>();

        $i1 = virtualinvoke $r2.<android.graphics.fonts.FontStyle: int getSlant()>();

        $i2 = $i1 << 16;

        $i3 = $i0 | $i2;

        return $i3;
    }

    private static native void nAddFont(long, long);

    private static native long nBuild(long, java.lang.String, int, boolean);

    private static native long nGetReleaseNativeFamily();

    private static native long nInitBuilder();

    public android.graphics.fonts.FontFamily$Builder addFont(android.graphics.fonts.Font)
    {
        android.graphics.fonts.FontFamily$Builder r0;
        android.graphics.fonts.Font r1;
        java.util.HashSet $r4;
        int $i0;
        java.lang.Integer $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        java.util.ArrayList $r11;

        r0 := @this: android.graphics.fonts.FontFamily$Builder;

        r1 := @parameter0: android.graphics.fonts.Font;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "font can not be null");

        $r4 = r0.<android.graphics.fonts.FontFamily$Builder: java.util.HashSet mStyleHashSet>;

        $i0 = staticinvoke <android.graphics.fonts.FontFamily$Builder: int makeStyleIdentifier(android.graphics.fonts.Font)>(r1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r11 = r0.<android.graphics.fonts.FontFamily$Builder: java.util.ArrayList mFonts>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r0;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been added");

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public android.graphics.fonts.FontFamily build()
    {
        android.graphics.fonts.FontFamily$Builder r0;
        android.graphics.fonts.FontFamily $r1;

        r0 := @this: android.graphics.fonts.FontFamily$Builder;

        $r1 = virtualinvoke r0.<android.graphics.fonts.FontFamily$Builder: android.graphics.fonts.FontFamily build(java.lang.String,int,boolean)>("", 0, 1);

        return $r1;
    }

    public android.graphics.fonts.FontFamily build(java.lang.String, int, boolean)
    {
        android.graphics.fonts.FontFamily$Builder r0;
        int i0, $i1, i4;
        boolean z0;
        java.util.ArrayList $r1, $r3, $r6;
        android.graphics.fonts.FontFamily $r2;
        libcore.util.NativeAllocationRegistry $r4;
        java.lang.Object $r7;
        android.graphics.fonts.Font $r8;
        long $l2, l3, l5;
        java.lang.String r9;

        r0 := @this: android.graphics.fonts.FontFamily$Builder;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        l3 = staticinvoke <android.graphics.fonts.FontFamily$Builder: long nInitBuilder()>();

        i4 = 0;

     label1:
        $r1 = r0.<android.graphics.fonts.FontFamily$Builder: java.util.ArrayList mFonts>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i4 >= $i1 goto label2;

        $r6 = r0.<android.graphics.fonts.FontFamily$Builder: java.util.ArrayList mFonts>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r8 = (android.graphics.fonts.Font) $r7;

        $l2 = virtualinvoke $r8.<android.graphics.fonts.Font: long getNativePtr()>();

        staticinvoke <android.graphics.fonts.FontFamily$Builder: void nAddFont(long,long)>(l3, $l2);

        i4 = i4 + 1;

        goto label1;

     label2:
        l5 = staticinvoke <android.graphics.fonts.FontFamily$Builder: long nBuild(long,java.lang.String,int,boolean)>(l3, r9, i0, z0);

        $r2 = new android.graphics.fonts.FontFamily;

        $r3 = r0.<android.graphics.fonts.FontFamily$Builder: java.util.ArrayList mFonts>;

        specialinvoke $r2.<android.graphics.fonts.FontFamily: void <init>(java.util.ArrayList,long,android.graphics.fonts.FontFamily$1)>($r3, l5, null);

        $r4 = <android.graphics.fonts.FontFamily$Builder: libcore.util.NativeAllocationRegistry sFamilyRegistory>;

        virtualinvoke $r4.<libcore.util.NativeAllocationRegistry: java.lang.Runnable registerNativeAllocation(java.lang.Object,long)>($r2, l5);

        return $r2;
    }
}
