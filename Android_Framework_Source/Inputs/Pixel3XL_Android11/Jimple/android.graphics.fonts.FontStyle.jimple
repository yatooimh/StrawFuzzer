public final class android.graphics.fonts.FontStyle extends java.lang.Object
{
    public static final int FONT_SLANT_ITALIC;
    public static final int FONT_SLANT_UPRIGHT;
    public static final int FONT_WEIGHT_BLACK;
    public static final int FONT_WEIGHT_BOLD;
    public static final int FONT_WEIGHT_EXTRA_BOLD;
    public static final int FONT_WEIGHT_EXTRA_LIGHT;
    public static final int FONT_WEIGHT_LIGHT;
    public static final int FONT_WEIGHT_MAX;
    public static final int FONT_WEIGHT_MEDIUM;
    public static final int FONT_WEIGHT_MIN;
    public static final int FONT_WEIGHT_NORMAL;
    public static final int FONT_WEIGHT_SEMI_BOLD;
    public static final int FONT_WEIGHT_THIN;
    private static final java.lang.String TAG;
    private final int mSlant;
    private final int mWeight;

    public void <init>()
    {
        android.graphics.fonts.FontStyle r0;

        r0 := @this: android.graphics.fonts.FontStyle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.fonts.FontStyle: int mWeight> = 400;

        r0.<android.graphics.fonts.FontStyle: int mSlant> = 0;

        return;
    }

    public void <init>(int, int)
    {
        android.graphics.fonts.FontStyle r0;
        int i0, i1;
        boolean z1, z2;

        r0 := @this: android.graphics.fonts.FontStyle;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if 1 > i0 goto label1;

        if i0 > 1000 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, "weight value must be [1, 1000]");

        if i1 == 0 goto label3;

        z2 = 0;

        if i1 != 1 goto label4;

     label3:
        z2 = 1;

     label4:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z2, "slant value must be FONT_SLANT_UPRIGHT or FONT_SLANT_UPRIGHT");

        r0.<android.graphics.fonts.FontStyle: int mWeight> = i0;

        r0.<android.graphics.fonts.FontStyle: int mSlant> = i1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.graphics.fonts.FontStyle r0, r2;
        boolean $z0, z1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r1;

        r0 := @this: android.graphics.fonts.FontStyle;

        r1 := @parameter0: java.lang.Object;

        z1 = 1;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 == null goto label5;

        $z0 = r1 instanceof android.graphics.fonts.FontStyle;

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        r2 = (android.graphics.fonts.FontStyle) r1;

        $i1 = r2.<android.graphics.fonts.FontStyle: int mWeight>;

        $i0 = r0.<android.graphics.fonts.FontStyle: int mWeight>;

        if $i1 != $i0 goto label3;

        $i3 = r2.<android.graphics.fonts.FontStyle: int mSlant>;

        $i2 = r0.<android.graphics.fonts.FontStyle: int mSlant>;

        if $i3 != $i2 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 0;
    }

    public int getMatchScore(android.graphics.fonts.FontStyle)
    {
        android.graphics.fonts.FontStyle r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        byte b8;

        r0 := @this: android.graphics.fonts.FontStyle;

        r1 := @parameter0: android.graphics.fonts.FontStyle;

        $i1 = virtualinvoke r0.<android.graphics.fonts.FontStyle: int getWeight()>();

        $i2 = virtualinvoke r1.<android.graphics.fonts.FontStyle: int getWeight()>();

        $i3 = $i1 - $i2;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        i0 = $i4 / 100;

        $i5 = virtualinvoke r0.<android.graphics.fonts.FontStyle: int getSlant()>();

        $i6 = virtualinvoke r1.<android.graphics.fonts.FontStyle: int getSlant()>();

        if $i5 != $i6 goto label1;

        b8 = 0;

        goto label2;

     label1:
        b8 = 2;

     label2:
        $i7 = i0 + b8;

        return $i7;
    }

    public int getSlant()
    {
        android.graphics.fonts.FontStyle r0;
        int $i0;

        r0 := @this: android.graphics.fonts.FontStyle;

        $i0 = r0.<android.graphics.fonts.FontStyle: int mSlant>;

        return $i0;
    }

    public int getWeight()
    {
        android.graphics.fonts.FontStyle r0;
        int $i0;

        r0 := @this: android.graphics.fonts.FontStyle;

        $i0 = r0.<android.graphics.fonts.FontStyle: int mWeight>;

        return $i0;
    }

    public int hashCode()
    {
        android.graphics.fonts.FontStyle r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2, $r3;

        r0 := @this: android.graphics.fonts.FontStyle;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = r0.<android.graphics.fonts.FontStyle: int mWeight>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $i1 = r0.<android.graphics.fonts.FontStyle: int mSlant>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    public java.lang.String toString()
    {
        android.graphics.fonts.FontStyle r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r8;

        r0 := @this: android.graphics.fonts.FontStyle;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FontStyle { weight=");

        $i0 = r0.<android.graphics.fonts.FontStyle: int mWeight>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", slant=");

        $i1 = r0.<android.graphics.fonts.FontStyle: int mSlant>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <android.graphics.fonts.FontStyle: java.lang.String TAG> = "FontStyle";

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_THIN> = 100;

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_SEMI_BOLD> = 600;

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_NORMAL> = 400;

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_MIN> = 1;

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_MEDIUM> = 500;

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_MAX> = 1000;

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_LIGHT> = 300;

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_EXTRA_LIGHT> = 200;

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_EXTRA_BOLD> = 800;

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_BOLD> = 700;

        <android.graphics.fonts.FontStyle: int FONT_WEIGHT_BLACK> = 900;

        <android.graphics.fonts.FontStyle: int FONT_SLANT_UPRIGHT> = 0;

        <android.graphics.fonts.FontStyle: int FONT_SLANT_ITALIC> = 1;

        return;
    }
}
