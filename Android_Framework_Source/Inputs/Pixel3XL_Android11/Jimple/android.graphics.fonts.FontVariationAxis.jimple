public final class android.graphics.fonts.FontVariationAxis extends java.lang.Object
{
    private static final java.util.regex.Pattern STYLE_VALUE_PATTERN;
    private static final java.util.regex.Pattern TAG_PATTERN;
    private final float mStyleValue;
    private final int mTag;
    private final java.lang.String mTagString;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[ -~]{4}");

        <android.graphics.fonts.FontVariationAxis: java.util.regex.Pattern TAG_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("-?(([0-9]+(\\.[0-9]+)?)|(\\.[0-9]+))");

        <android.graphics.fonts.FontVariationAxis: java.util.regex.Pattern STYLE_VALUE_PATTERN> = $r1;

        return;
    }

    public void <init>(java.lang.String, float)
    {
        android.graphics.fonts.FontVariationAxis r0;
        java.lang.String r1, $r7;
        float f0;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        int $i0;

        r0 := @this: android.graphics.fonts.FontVariationAxis;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <android.graphics.fonts.FontVariationAxis: boolean isValidTag(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $i0 = staticinvoke <android.graphics.fonts.FontVariationAxis: int makeTag(java.lang.String)>(r1);

        r0.<android.graphics.fonts.FontVariationAxis: int mTag> = $i0;

        r0.<android.graphics.fonts.FontVariationAxis: java.lang.String mTagString> = r1;

        r0.<android.graphics.fonts.FontVariationAxis: float mStyleValue> = f0;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal tag pattern: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)
    {
        int i0, i2, i3, $i4, $i5, $i7, $i8, i9;
        char c1, $c6;
        java.lang.String r0, $r7, $r12, $r15, r16, $r23;
        float f0;
        boolean $z0, $z1, $z2;
        android.graphics.fonts.FontVariationAxis[] $r2, $r4;
        java.lang.Object[] $r3;
        java.lang.Throwable $r9;
        java.util.ArrayList r24;
        android.graphics.fonts.FontVariationAxis r25;
        java.lang.StringBuilder r26, r28;
        java.lang.IllegalArgumentException r27, r29;
        java.lang.NumberFormatException r30;

        r16 := @parameter0: java.lang.String;

        if r16 == null goto label12;

        $z0 = virtualinvoke r16.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        goto label12;

     label01:
        r24 = new java.util.ArrayList;

        specialinvoke r24.<java.util.ArrayList: void <init>()>();

        i0 = virtualinvoke r16.<java.lang.String: int length()>();

        i9 = 0;

     label02:
        if i9 >= i0 goto label10;

        c1 = virtualinvoke r16.<java.lang.String: char charAt(int)>(i9);

        $z2 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1);

        if $z2 == 0 goto label03;

        goto label07;

     label03:
        if c1 == 39 goto label04;

        if c1 != 34 goto label09;

     label04:
        $i4 = i9 + 6;

        if i0 < $i4 goto label09;

        $i5 = i9 + 5;

        $c6 = virtualinvoke r16.<java.lang.String: char charAt(int)>($i5);

        if $c6 != c1 goto label09;

        $i8 = i9 + 1;

        $i7 = i9 + 5;

        r0 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7);

        i2 = i9 + 6;

        i3 = virtualinvoke r16.<java.lang.String: int indexOf(int,int)>(44, i2);

        i9 = i3;

        if i3 != -1 goto label05;

        i9 = i0;

     label05:
        $r7 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int,int)>(i2, i9);

        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r7);

     label06:
        r25 = new android.graphics.fonts.FontVariationAxis;

        specialinvoke r25.<android.graphics.fonts.FontVariationAxis: void <init>(java.lang.String,float)>(r0, f0);

        virtualinvoke r24.<java.util.ArrayList: boolean add(java.lang.Object)>(r25);

     label07:
        i9 = i9 + 1;

        goto label02;

     label08:
        $r9 := @caughtexception;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse float string: ");

        r30 = (java.lang.NumberFormatException) $r9;

        $r12 = virtualinvoke r30.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r27 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw r27;

     label09:
        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag should be wrapped with double or single quote: ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        r29 = new java.lang.IllegalArgumentException;

        $r23 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw r29;

     label10:
        $z1 = virtualinvoke r24.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label11;

        return null;

     label11:
        $r2 = newarray (android.graphics.fonts.FontVariationAxis)[0];

        $r3 = virtualinvoke r24.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (android.graphics.fonts.FontVariationAxis[]) $r3;

        return $r4;

     label12:
        return null;

        catch java.lang.NumberFormatException from label05 to label06 with label08;
    }

    private static boolean isValidTag(java.lang.String)
    {
        java.lang.String r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = <android.graphics.fonts.FontVariationAxis: java.util.regex.Pattern TAG_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private static boolean isValidValueFormat(java.lang.String)
    {
        java.lang.String r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = <android.graphics.fonts.FontVariationAxis: java.util.regex.Pattern STYLE_VALUE_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public static int makeTag(java.lang.String)
    {
        java.lang.String r0;
        char $c0, $c2, $c5, $c8;
        int $i1, $i3, $i4, $i6, $i7, $i9;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i1 = $c0 << 24;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i3 = $c2 << 16;

        $i4 = $i1 | $i3;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i6 = $c5 << 8;

        $i7 = $i4 | $i6;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i9 = $i7 | $c8;

        return $i9;
    }

    public static java.lang.String toFontVariationSettings(android.graphics.fonts.FontVariationAxis[])
    {
        android.graphics.fonts.FontVariationAxis[] r0;
        java.lang.String $r1;

        r0 := @parameter0: android.graphics.fonts.FontVariationAxis[];

        if r0 != null goto label1;

        return "";

     label1:
        $r1 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(",", r0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        android.graphics.fonts.FontVariationAxis r0, r2;
        boolean $z0, z1;
        int $i0, $i1;
        float $f0, $f1;
        byte $b2;
        java.lang.Object r1;

        r0 := @this: android.graphics.fonts.FontVariationAxis;

        r1 := @parameter0: java.lang.Object;

        z1 = 1;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 == null goto label5;

        $z0 = r1 instanceof android.graphics.fonts.FontVariationAxis;

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        r2 = (android.graphics.fonts.FontVariationAxis) r1;

        $i1 = r2.<android.graphics.fonts.FontVariationAxis: int mTag>;

        $i0 = r0.<android.graphics.fonts.FontVariationAxis: int mTag>;

        if $i1 != $i0 goto label3;

        $f1 = r2.<android.graphics.fonts.FontVariationAxis: float mStyleValue>;

        $f0 = r0.<android.graphics.fonts.FontVariationAxis: float mStyleValue>;

        $b2 = $f1 cmpl $f0;

        if $b2 != 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 0;
    }

    public int getOpenTypeTagValue()
    {
        android.graphics.fonts.FontVariationAxis r0;
        int $i0;

        r0 := @this: android.graphics.fonts.FontVariationAxis;

        $i0 = r0.<android.graphics.fonts.FontVariationAxis: int mTag>;

        return $i0;
    }

    public float getStyleValue()
    {
        android.graphics.fonts.FontVariationAxis r0;
        float $f0;

        r0 := @this: android.graphics.fonts.FontVariationAxis;

        $f0 = r0.<android.graphics.fonts.FontVariationAxis: float mStyleValue>;

        return $f0;
    }

    public java.lang.String getTag()
    {
        android.graphics.fonts.FontVariationAxis r0;
        java.lang.String $r1;

        r0 := @this: android.graphics.fonts.FontVariationAxis;

        $r1 = r0.<android.graphics.fonts.FontVariationAxis: java.lang.String mTagString>;

        return $r1;
    }

    public int hashCode()
    {
        android.graphics.fonts.FontVariationAxis r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Integer $r2;
        float $f0;
        java.lang.Float $r3;

        r0 := @this: android.graphics.fonts.FontVariationAxis;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = r0.<android.graphics.fonts.FontVariationAxis: int mTag>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $f0 = r0.<android.graphics.fonts.FontVariationAxis: float mStyleValue>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1[1] = $r3;

        $i1 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i1;
    }

    public java.lang.String toString()
    {
        android.graphics.fonts.FontVariationAxis r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, $r9;
        float $f0;

        r0 := @this: android.graphics.fonts.FontVariationAxis;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r4 = r0.<android.graphics.fonts.FontVariationAxis: java.lang.String mTagString>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $f0 = r0.<android.graphics.fonts.FontVariationAxis: float mStyleValue>;

        $r7 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
