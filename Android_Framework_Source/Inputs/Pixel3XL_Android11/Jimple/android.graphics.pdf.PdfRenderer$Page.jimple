public final class android.graphics.pdf.PdfRenderer$Page extends java.lang.Object implements java.lang.AutoCloseable
{
    public static final int RENDER_MODE_FOR_DISPLAY;
    public static final int RENDER_MODE_FOR_PRINT;
    private final dalvik.system.CloseGuard mCloseGuard;
    private final int mHeight;
    private final int mIndex;
    private long mNativePage;
    private final int mWidth;
    final android.graphics.pdf.PdfRenderer this$0;

    private void <init>(android.graphics.pdf.PdfRenderer, int)
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        int i0, $i3, $i4;
        android.graphics.Point r1;
        java.lang.Object r2;
        dalvik.system.CloseGuard $r3, $r4;
        long $l1, $l2;
        java.lang.Throwable $r5;
        android.graphics.pdf.PdfRenderer r6;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        r6 := @parameter0: android.graphics.pdf.PdfRenderer;

        i0 := @parameter1: int;

        r0.<android.graphics.pdf.PdfRenderer$Page: android.graphics.pdf.PdfRenderer this$0> = r6;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.graphics.pdf.PdfRenderer$Page: dalvik.system.CloseGuard mCloseGuard> = $r3;

        r1 = staticinvoke <android.graphics.pdf.PdfRenderer: android.graphics.Point access$100(android.graphics.pdf.PdfRenderer)>(r6);

        r2 = <android.graphics.pdf.PdfRenderer: java.lang.Object sPdfiumLock>;

        entermonitor r2;

     label1:
        $l1 = staticinvoke <android.graphics.pdf.PdfRenderer: long access$200(android.graphics.pdf.PdfRenderer)>(r6);

        $l2 = staticinvoke <android.graphics.pdf.PdfRenderer: long access$300(long,int,android.graphics.Point)>($l1, i0, r1);

        r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage> = $l2;

        exitmonitor r2;

     label2:
        r0.<android.graphics.pdf.PdfRenderer$Page: int mIndex> = i0;

        $i3 = r1.<android.graphics.Point: int x>;

        r0.<android.graphics.pdf.PdfRenderer$Page: int mWidth> = $i3;

        $i4 = r1.<android.graphics.Point: int y>;

        r0.<android.graphics.pdf.PdfRenderer$Page: int mHeight> = $i4;

        $r4 = r0.<android.graphics.pdf.PdfRenderer$Page: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void <init>(android.graphics.pdf.PdfRenderer, int, android.graphics.pdf.PdfRenderer$1)
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        android.graphics.pdf.PdfRenderer r1;
        int i0;
        android.graphics.pdf.PdfRenderer$1 r2;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        r1 := @parameter0: android.graphics.pdf.PdfRenderer;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.pdf.PdfRenderer$1;

        specialinvoke r0.<android.graphics.pdf.PdfRenderer$Page: void <init>(android.graphics.pdf.PdfRenderer,int)>(r1, i0);

        return;
    }

    private void doClose()
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        java.lang.Object r1;
        long $l0, $l2;
        byte $b1;
        dalvik.system.CloseGuard $r3;
        android.graphics.pdf.PdfRenderer $r4;
        java.lang.Throwable $r6;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        $l0 = r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label6;

        r1 = <android.graphics.pdf.PdfRenderer: java.lang.Object sPdfiumLock>;

        entermonitor r1;

     label1:
        $l2 = r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage>;

        staticinvoke <android.graphics.pdf.PdfRenderer: void access$500(long)>($l2);

        exitmonitor r1;

     label2:
        r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage> = 0L;

        goto label6;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

     label6:
        $r3 = r0.<android.graphics.pdf.PdfRenderer$Page: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void close()>();

        $r4 = r0.<android.graphics.pdf.PdfRenderer$Page: android.graphics.pdf.PdfRenderer this$0>;

        staticinvoke <android.graphics.pdf.PdfRenderer: android.graphics.pdf.PdfRenderer$Page access$602(android.graphics.pdf.PdfRenderer,android.graphics.pdf.PdfRenderer$Page)>($r4, null);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void throwIfClosed()
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        long $l0;
        byte $b1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        $l0 = r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already closed");

        throw $r1;
    }

    public void close()
    {
        android.graphics.pdf.PdfRenderer$Page r0;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        specialinvoke r0.<android.graphics.pdf.PdfRenderer$Page: void throwIfClosed()>();

        specialinvoke r0.<android.graphics.pdf.PdfRenderer$Page: void doClose()>();

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        dalvik.system.CloseGuard $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

     label1:
        $r2 = r0.<android.graphics.pdf.PdfRenderer$Page: dalvik.system.CloseGuard mCloseGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.graphics.pdf.PdfRenderer$Page: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        specialinvoke r0.<android.graphics.pdf.PdfRenderer$Page: void doClose()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public int getHeight()
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        int $i0;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        $i0 = r0.<android.graphics.pdf.PdfRenderer$Page: int mHeight>;

        return $i0;
    }

    public int getIndex()
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        int $i0;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        $i0 = r0.<android.graphics.pdf.PdfRenderer$Page: int mIndex>;

        return $i0;
    }

    public int getWidth()
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        int $i0;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        $i0 = r0.<android.graphics.pdf.PdfRenderer$Page: int mWidth>;

        return $i0;
    }

    public void render(android.graphics.Bitmap, android.graphics.Rect, android.graphics.Matrix, int)
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        android.graphics.Matrix r1, $r8, r17;
        int i0, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20;
        android.graphics.Bitmap r2, r14;
        long l1, l2, l3, l4, $l5;
        byte $b6;
        java.lang.Object $r3, r18;
        android.graphics.Bitmap$Config $r4, $r5;
        java.lang.IllegalArgumentException $r6, $r9, $r10, $r11, $r16;
        android.graphics.pdf.PdfRenderer $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z2;
        java.lang.Throwable $r12, $r13, r19;
        android.graphics.Rect r15;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        r14 := @parameter0: android.graphics.Bitmap;

        r15 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Matrix;

        i0 := @parameter3: int;

        $l5 = r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label26;

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r14, "bitmap null");

        r2 = (android.graphics.Bitmap) $r3;

        $r4 = virtualinvoke r2.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        if $r4 != $r5 goto label25;

        if r15 == null goto label02;

        $i11 = r15.<android.graphics.Rect: int left>;

        if $i11 < 0 goto label01;

        $i12 = r15.<android.graphics.Rect: int top>;

        if $i12 < 0 goto label01;

        $i13 = r15.<android.graphics.Rect: int right>;

        $i14 = virtualinvoke r2.<android.graphics.Bitmap: int getWidth()>();

        if $i13 > $i14 goto label01;

        $i15 = r15.<android.graphics.Rect: int bottom>;

        $i16 = virtualinvoke r2.<android.graphics.Bitmap: int getHeight()>();

        if $i15 > $i16 goto label01;

        goto label02;

     label01:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("destBounds not in destination");

        throw $r16;

     label02:
        if r1 == null goto label04;

        $z2 = virtualinvoke r1.<android.graphics.Matrix: boolean isAffine()>();

        if $z2 == 0 goto label03;

        goto label04;

     label03:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("transform not affine");

        throw $r11;

     label04:
        if i0 == 2 goto label06;

        if i0 != 1 goto label05;

        goto label06;

     label05:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported render mode");

        throw $r10;

     label06:
        if i0 != 2 goto label08;

        if i0 == 1 goto label07;

        goto label08;

     label07:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only single render mode supported");

        throw $r9;

     label08:
        i17 = 0;

        if r15 == null goto label09;

        i18 = r15.<android.graphics.Rect: int left>;

        goto label10;

     label09:
        i18 = 0;

     label10:
        if r15 == null goto label11;

        i17 = r15.<android.graphics.Rect: int top>;

     label11:
        if r15 == null goto label12;

        i19 = r15.<android.graphics.Rect: int right>;

        goto label13;

     label12:
        i19 = virtualinvoke r2.<android.graphics.Bitmap: int getWidth()>();

     label13:
        if r15 == null goto label14;

        i20 = r15.<android.graphics.Rect: int bottom>;

        goto label15;

     label14:
        i20 = virtualinvoke r2.<android.graphics.Bitmap: int getHeight()>();

     label15:
        if r1 != null goto label16;

        $r8 = new android.graphics.Matrix;

        specialinvoke $r8.<android.graphics.Matrix: void <init>()>();

        r17 = $r8;

        $i7 = i19 - i18;

        $f0 = (float) $i7;

        $i8 = virtualinvoke r0.<android.graphics.pdf.PdfRenderer$Page: int getWidth()>();

        $f1 = (float) $i8;

        $f2 = $f0 / $f1;

        $i9 = i20 - i17;

        $f3 = (float) $i9;

        $i10 = virtualinvoke r0.<android.graphics.pdf.PdfRenderer$Page: int getHeight()>();

        $f4 = (float) $i10;

        $f5 = $f3 / $f4;

        virtualinvoke $r8.<android.graphics.Matrix: boolean postScale(float,float)>($f2, $f5);

        $f7 = (float) i18;

        $f6 = (float) i17;

        virtualinvoke $r8.<android.graphics.Matrix: boolean postTranslate(float,float)>($f7, $f6);

        goto label17;

     label16:
        r17 = r1;

     label17:
        l1 = r17.<android.graphics.Matrix: long native_instance>;

        r18 = <android.graphics.pdf.PdfRenderer: java.lang.Object sPdfiumLock>;

        entermonitor r18;

     label18:
        $r7 = r0.<android.graphics.pdf.PdfRenderer$Page: android.graphics.pdf.PdfRenderer this$0>;

        l2 = staticinvoke <android.graphics.pdf.PdfRenderer: long access$200(android.graphics.pdf.PdfRenderer)>($r7);

        l3 = r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage>;

        l4 = virtualinvoke r2.<android.graphics.Bitmap: long getNativeInstance()>();

     label19:
        staticinvoke <android.graphics.pdf.PdfRenderer: void access$400(long,long,long,int,int,int,int,long,int)>(l2, l3, l4, i18, i17, i19, i20, l1, i0);

        exitmonitor r18;

     label20:
        return;

     label21:
        $r13 := @caughtexception;

        r19 = $r13;

     label22:
        exitmonitor r18;

     label23:
        throw r19;

     label24:
        $r12 := @caughtexception;

        r19 = $r12;

        goto label22;

     label25:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported pixel format");

        throw $r6;

     label26:
        throw null;

        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
    }

    public static void <clinit>()
    {
        <android.graphics.pdf.PdfRenderer$Page: int RENDER_MODE_FOR_PRINT> = 2;

        <android.graphics.pdf.PdfRenderer$Page: int RENDER_MODE_FOR_DISPLAY> = 1;

        return;
    }
}
