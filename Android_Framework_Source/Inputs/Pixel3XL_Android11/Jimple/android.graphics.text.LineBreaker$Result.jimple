public class android.graphics.text.LineBreaker$Result extends java.lang.Object
{
    private static final int END_HYPHEN_MASK;
    private static final int HYPHEN_MASK;
    private static final int START_HYPHEN_BITS_SHIFT;
    private static final int START_HYPHEN_MASK;
    private static final int TAB_MASK;
    private static final libcore.util.NativeAllocationRegistry sRegistry;
    private final long mPtr;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.ClassLoader $r1;
        long $l0;
        libcore.util.NativeAllocationRegistry $r2;

        <android.graphics.text.LineBreaker$Result: int TAB_MASK> = 536870912;

        <android.graphics.text.LineBreaker$Result: int START_HYPHEN_MASK> = 24;

        <android.graphics.text.LineBreaker$Result: int START_HYPHEN_BITS_SHIFT> = 3;

        <android.graphics.text.LineBreaker$Result: int HYPHEN_MASK> = 255;

        <android.graphics.text.LineBreaker$Result: int END_HYPHEN_MASK> = 7;

        $r0 = class "Landroid/graphics/text/LineBreaker$Result;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $l0 = staticinvoke <android.graphics.text.LineBreaker: long access$100()>();

        $r2 = staticinvoke <libcore.util.NativeAllocationRegistry: libcore.util.NativeAllocationRegistry createMalloced(java.lang.ClassLoader,long)>($r1, $l0);

        <android.graphics.text.LineBreaker$Result: libcore.util.NativeAllocationRegistry sRegistry> = $r2;

        return;
    }

    private void <init>(long)
    {
        android.graphics.text.LineBreaker$Result r0;
        long l0;
        libcore.util.NativeAllocationRegistry $r1;

        r0 := @this: android.graphics.text.LineBreaker$Result;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.text.LineBreaker$Result: long mPtr> = l0;

        $r1 = <android.graphics.text.LineBreaker$Result: libcore.util.NativeAllocationRegistry sRegistry>;

        virtualinvoke $r1.<libcore.util.NativeAllocationRegistry: java.lang.Runnable registerNativeAllocation(java.lang.Object,long)>(r0, l0);

        return;
    }

    void <init>(long, android.graphics.text.LineBreaker$1)
    {
        android.graphics.text.LineBreaker$Result r0;
        long l0;
        android.graphics.text.LineBreaker$1 r1;

        r0 := @this: android.graphics.text.LineBreaker$Result;

        l0 := @parameter0: long;

        r1 := @parameter1: android.graphics.text.LineBreaker$1;

        specialinvoke r0.<android.graphics.text.LineBreaker$Result: void <init>(long)>(l0);

        return;
    }

    public int getEndLineHyphenEdit(int)
    {
        android.graphics.text.LineBreaker$Result r0;
        int i0, $i2, $i3;
        long $l1;

        r0 := @this: android.graphics.text.LineBreaker$Result;

        i0 := @parameter0: int;

        $l1 = r0.<android.graphics.text.LineBreaker$Result: long mPtr>;

        $i2 = staticinvoke <android.graphics.text.LineBreaker: int access$700(long,int)>($l1, i0);

        $i3 = $i2 & 7;

        return $i3;
    }

    public float getLineAscent(int)
    {
        android.graphics.text.LineBreaker$Result r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.graphics.text.LineBreaker$Result;

        i0 := @parameter0: int;

        $l1 = r0.<android.graphics.text.LineBreaker$Result: long mPtr>;

        $f0 = staticinvoke <android.graphics.text.LineBreaker: float access$500(long,int)>($l1, i0);

        return $f0;
    }

    public int getLineBreakOffset(int)
    {
        android.graphics.text.LineBreaker$Result r0;
        int i0, $i2;
        long $l1;

        r0 := @this: android.graphics.text.LineBreaker$Result;

        i0 := @parameter0: int;

        $l1 = r0.<android.graphics.text.LineBreaker$Result: long mPtr>;

        $i2 = staticinvoke <android.graphics.text.LineBreaker: int access$300(long,int)>($l1, i0);

        return $i2;
    }

    public int getLineCount()
    {
        android.graphics.text.LineBreaker$Result r0;
        long $l0;
        int $i1;

        r0 := @this: android.graphics.text.LineBreaker$Result;

        $l0 = r0.<android.graphics.text.LineBreaker$Result: long mPtr>;

        $i1 = staticinvoke <android.graphics.text.LineBreaker: int access$200(long)>($l0);

        return $i1;
    }

    public float getLineDescent(int)
    {
        android.graphics.text.LineBreaker$Result r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.graphics.text.LineBreaker$Result;

        i0 := @parameter0: int;

        $l1 = r0.<android.graphics.text.LineBreaker$Result: long mPtr>;

        $f0 = staticinvoke <android.graphics.text.LineBreaker: float access$600(long,int)>($l1, i0);

        return $f0;
    }

    public float getLineWidth(int)
    {
        android.graphics.text.LineBreaker$Result r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.graphics.text.LineBreaker$Result;

        i0 := @parameter0: int;

        $l1 = r0.<android.graphics.text.LineBreaker$Result: long mPtr>;

        $f0 = staticinvoke <android.graphics.text.LineBreaker: float access$400(long,int)>($l1, i0);

        return $f0;
    }

    public int getStartLineHyphenEdit(int)
    {
        android.graphics.text.LineBreaker$Result r0;
        int i0, $i2, $i3, $i4;
        long $l1;

        r0 := @this: android.graphics.text.LineBreaker$Result;

        i0 := @parameter0: int;

        $l1 = r0.<android.graphics.text.LineBreaker$Result: long mPtr>;

        $i2 = staticinvoke <android.graphics.text.LineBreaker: int access$700(long,int)>($l1, i0);

        $i3 = $i2 & 24;

        $i4 = $i3 >> 3;

        return $i4;
    }

    public boolean hasLineTab(int)
    {
        android.graphics.text.LineBreaker$Result r0;
        int i0, $i2, $i3;
        long $l1;
        boolean z0;

        r0 := @this: android.graphics.text.LineBreaker$Result;

        i0 := @parameter0: int;

        $l1 = r0.<android.graphics.text.LineBreaker$Result: long mPtr>;

        $i2 = staticinvoke <android.graphics.text.LineBreaker: int access$700(long,int)>($l1, i0);

        $i3 = $i2 & 536870912;

        if $i3 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
