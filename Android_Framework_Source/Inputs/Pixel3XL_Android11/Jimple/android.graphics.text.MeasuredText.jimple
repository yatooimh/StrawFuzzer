public class android.graphics.text.MeasuredText extends java.lang.Object
{
    private char[] mChars;
    private boolean mComputeHyphenation;
    private boolean mComputeLayout;
    private long mNativePtr;

    private void <init>(long, char[], boolean, boolean)
    {
        android.graphics.text.MeasuredText r0;
        long l0;
        char[] r1;
        boolean z0, z1;

        r0 := @this: android.graphics.text.MeasuredText;

        l0 := @parameter0: long;

        r1 := @parameter1: char[];

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.text.MeasuredText: long mNativePtr> = l0;

        r0.<android.graphics.text.MeasuredText: char[] mChars> = r1;

        r0.<android.graphics.text.MeasuredText: boolean mComputeHyphenation> = z0;

        r0.<android.graphics.text.MeasuredText: boolean mComputeLayout> = z1;

        return;
    }

    void <init>(long, char[], boolean, boolean, android.graphics.text.MeasuredText$1)
    {
        android.graphics.text.MeasuredText r0;
        long l0;
        char[] r1;
        boolean z0, z1;
        android.graphics.text.MeasuredText$1 r2;

        r0 := @this: android.graphics.text.MeasuredText;

        l0 := @parameter0: long;

        r1 := @parameter1: char[];

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r2 := @parameter4: android.graphics.text.MeasuredText$1;

        specialinvoke r0.<android.graphics.text.MeasuredText: void <init>(long,char[],boolean,boolean)>(l0, r1, z0, z1);

        return;
    }

    static long access$000()
    {
        long $l0;

        $l0 = staticinvoke <android.graphics.text.MeasuredText: long nGetReleaseFunc()>();

        return $l0;
    }

    static char[] access$100(android.graphics.text.MeasuredText)
    {
        android.graphics.text.MeasuredText r0;
        char[] $r1;

        r0 := @parameter0: android.graphics.text.MeasuredText;

        $r1 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        return $r1;
    }

    static boolean access$200(android.graphics.text.MeasuredText)
    {
        android.graphics.text.MeasuredText r0;
        boolean $z0;

        r0 := @parameter0: android.graphics.text.MeasuredText;

        $z0 = r0.<android.graphics.text.MeasuredText: boolean mComputeLayout>;

        return $z0;
    }

    static boolean access$300(android.graphics.text.MeasuredText)
    {
        android.graphics.text.MeasuredText r0;
        boolean $z0;

        r0 := @parameter0: android.graphics.text.MeasuredText;

        $z0 = r0.<android.graphics.text.MeasuredText: boolean mComputeHyphenation>;

        return $z0;
    }

    private static native void nGetBounds(long, char[], int, int, android.graphics.Rect);

    private static native float nGetCharWidthAt(long, int);

    private static native int nGetMemoryUsage(long);

    private static native long nGetReleaseFunc();

    private static native float nGetWidth(long, int, int);

    public void getBounds(int, int, android.graphics.Rect)
    {
        android.graphics.text.MeasuredText r0;
        int i0, i1, $i3, $i4, $i5, $i6;
        android.graphics.Rect r1;
        java.lang.StringBuilder $r10, $r21, $r25;
        java.lang.String $r16, $r24, $r28;
        char[] $r18, $r19, $r20, $r23, $r27;
        long $l2;
        boolean z1, z2, z3;

        r0 := @this: android.graphics.text.MeasuredText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        if i0 < 0 goto label1;

        $r20 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        $i4 = lengthof $r20;

        if i0 > $i4 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start(");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must be 0 <= start <= ");

        $r23 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        $i5 = lengthof $r23;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, $r24);

        if i1 < 0 goto label3;

        $r19 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        $i3 = lengthof $r19;

        if i1 > $i3 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("end(");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must be 0 <= end <= ");

        $r27 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        $i6 = lengthof $r27;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z2, $r28);

        if i0 > i1 goto label5;

        z3 = 1;

        goto label6;

     label5:
        z3 = 0;

     label6:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start(");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is larger than end(");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z3, $r16);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $l2 = r0.<android.graphics.text.MeasuredText: long mNativePtr>;

        $r18 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        staticinvoke <android.graphics.text.MeasuredText: void nGetBounds(long,char[],int,int,android.graphics.Rect)>($l2, $r18, i0, i1, r1);

        return;
    }

    public float getCharWidthAt(int)
    {
        android.graphics.text.MeasuredText r0;
        int i0, $i1, $i2;
        char[] $r6, $r8;
        boolean z0;
        java.lang.StringBuilder $r7;
        java.lang.String $r9;
        long $l3;
        float $f0;

        r0 := @this: android.graphics.text.MeasuredText;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r6 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        $i1 = lengthof $r6;

        if i0 >= $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset(");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is larger than text length: ");

        $r8 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        $i2 = lengthof $r8;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, $r9);

        $l3 = r0.<android.graphics.text.MeasuredText: long mNativePtr>;

        $f0 = staticinvoke <android.graphics.text.MeasuredText: float nGetCharWidthAt(long,int)>($l3, i0);

        return $f0;
    }

    public char[] getChars()
    {
        android.graphics.text.MeasuredText r0;
        char[] $r1;

        r0 := @this: android.graphics.text.MeasuredText;

        $r1 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        return $r1;
    }

    public int getMemoryUsage()
    {
        android.graphics.text.MeasuredText r0;
        long $l0;
        int $i1;

        r0 := @this: android.graphics.text.MeasuredText;

        $l0 = r0.<android.graphics.text.MeasuredText: long mNativePtr>;

        $i1 = staticinvoke <android.graphics.text.MeasuredText: int nGetMemoryUsage(long)>($l0);

        return $i1;
    }

    public long getNativePtr()
    {
        android.graphics.text.MeasuredText r0;
        long $l0;

        r0 := @this: android.graphics.text.MeasuredText;

        $l0 = r0.<android.graphics.text.MeasuredText: long mNativePtr>;

        return $l0;
    }

    public float getWidth(int, int)
    {
        android.graphics.text.MeasuredText r0;
        int i0, i1, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r9, $r18, $r22;
        java.lang.String $r15, $r21, $r25;
        long $l2;
        float $f0;
        char[] $r16, $r17, $r20, $r24;
        boolean z1, z2, z3;

        r0 := @this: android.graphics.text.MeasuredText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        $r17 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        $i4 = lengthof $r17;

        if i0 > $i4 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start(");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must be 0 <= start <= ");

        $r20 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        $i5 = lengthof $r20;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, $r21);

        if i1 < 0 goto label3;

        $r16 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        $i3 = lengthof $r16;

        if i1 > $i3 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("end(");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must be 0 <= end <= ");

        $r24 = r0.<android.graphics.text.MeasuredText: char[] mChars>;

        $i6 = lengthof $r24;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z2, $r25);

        if i0 > i1 goto label5;

        z3 = 1;

        goto label6;

     label5:
        z3 = 0;

     label6:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start(");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is larger than end(");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z3, $r15);

        $l2 = r0.<android.graphics.text.MeasuredText: long mNativePtr>;

        $f0 = staticinvoke <android.graphics.text.MeasuredText: float nGetWidth(long,int,int)>($l2, i0, i1);

        return $f0;
    }
}
