public class android.gsi.IImageService$Default extends java.lang.Object implements android.gsi.IImageService
{

    public void <init>()
    {
        android.gsi.IImageService$Default r0;

        r0 := @this: android.gsi.IImageService$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.gsi.IImageService$Default r0;

        r0 := @this: android.gsi.IImageService$Default;

        return null;
    }

    public boolean backingImageExists(java.lang.String) throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;
        java.lang.String r1;

        r0 := @this: android.gsi.IImageService$Default;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void createBackingImage(java.lang.String, long, int, android.gsi.IProgressCallback) throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;
        java.lang.String r1;
        long l0;
        int i1;
        android.gsi.IProgressCallback r2;

        r0 := @this: android.gsi.IImageService$Default;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r2 := @parameter3: android.gsi.IProgressCallback;

        return;
    }

    public void deleteBackingImage(java.lang.String) throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;
        java.lang.String r1;

        r0 := @this: android.gsi.IImageService$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public java.util.List getAllBackingImages() throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;

        r0 := @this: android.gsi.IImageService$Default;

        return null;
    }

    public int getAvbPublicKey(java.lang.String, android.gsi.AvbPublicKey) throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;
        java.lang.String r1;
        android.gsi.AvbPublicKey r2;

        r0 := @this: android.gsi.IImageService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.gsi.AvbPublicKey;

        return 0;
    }

    public java.lang.String getMappedImageDevice(java.lang.String) throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;
        java.lang.String r1;

        r0 := @this: android.gsi.IImageService$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public boolean isImageMapped(java.lang.String) throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;
        java.lang.String r1;

        r0 := @this: android.gsi.IImageService$Default;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void mapImageDevice(java.lang.String, int, android.gsi.MappedImage) throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;
        java.lang.String r1;
        int i0;
        android.gsi.MappedImage r2;

        r0 := @this: android.gsi.IImageService$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.gsi.MappedImage;

        return;
    }

    public void removeAllImages() throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;

        r0 := @this: android.gsi.IImageService$Default;

        return;
    }

    public void removeDisabledImages() throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;

        r0 := @this: android.gsi.IImageService$Default;

        return;
    }

    public void unmapImageDevice(java.lang.String) throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;
        java.lang.String r1;

        r0 := @this: android.gsi.IImageService$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void zeroFillNewImage(java.lang.String, long) throws android.os.RemoteException
    {
        android.gsi.IImageService$Default r0;
        java.lang.String r1;
        long l0;

        r0 := @this: android.gsi.IImageService$Default;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        return;
    }
}
