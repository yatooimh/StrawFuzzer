public interface  android.gsi.IImageService extends java.lang.Object implements android.os.IInterface
{
    public static final int CREATE_IMAGE_DEFAULT;
    public static final int CREATE_IMAGE_READONLY;
    public static final int CREATE_IMAGE_ZERO_FILL;
    public static final int IMAGE_ERROR;
    public static final int IMAGE_OK;

    public abstract boolean backingImageExists(java.lang.String) throws android.os.RemoteException;

    public abstract void createBackingImage(java.lang.String, long, int, android.gsi.IProgressCallback) throws android.os.RemoteException;

    public abstract void deleteBackingImage(java.lang.String) throws android.os.RemoteException;

    public abstract java.util.List getAllBackingImages() throws android.os.RemoteException;

    public abstract int getAvbPublicKey(java.lang.String, android.gsi.AvbPublicKey) throws android.os.RemoteException;

    public abstract java.lang.String getMappedImageDevice(java.lang.String) throws android.os.RemoteException;

    public abstract boolean isImageMapped(java.lang.String) throws android.os.RemoteException;

    public abstract void mapImageDevice(java.lang.String, int, android.gsi.MappedImage) throws android.os.RemoteException;

    public abstract void removeAllImages() throws android.os.RemoteException;

    public abstract void removeDisabledImages() throws android.os.RemoteException;

    public abstract void unmapImageDevice(java.lang.String) throws android.os.RemoteException;

    public abstract void zeroFillNewImage(java.lang.String, long) throws android.os.RemoteException;

    public static void <clinit>()
    {
        <android.gsi.IImageService: int IMAGE_OK> = 0;

        <android.gsi.IImageService: int IMAGE_ERROR> = 1;

        <android.gsi.IImageService: int CREATE_IMAGE_ZERO_FILL> = 2;

        <android.gsi.IImageService: int CREATE_IMAGE_READONLY> = 1;

        <android.gsi.IImageService: int CREATE_IMAGE_DEFAULT> = 0;

        return;
    }
}
