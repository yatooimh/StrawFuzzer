class android.hardware.ICameraService$Stub$Proxy extends java.lang.Object implements android.hardware.ICameraService
{
    public static android.hardware.ICameraService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.hardware.CameraStatus[] addListener(android.hardware.ICameraServiceListener) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r10;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.hardware.ICameraService $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.ICameraServiceListener r9;
        android.hardware.CameraStatus[] r11, r12;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r9 := @parameter0: android.hardware.ICameraServiceListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.hardware.ICameraServiceListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        r11 = interfaceinvoke $r7.<android.hardware.ICameraService: android.hardware.CameraStatus[] addListener(android.hardware.ICameraServiceListener)>(r9);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.hardware.CameraStatus: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r12 = (android.hardware.CameraStatus[]) $r5;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r12;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        $r1 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.hardware.ICamera connect(android.hardware.ICameraClient, int, java.lang.String, int, int) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, $r5, r10;
        boolean $z0;
        android.hardware.ICameraService $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.ICameraClient r9;
        android.hardware.ICamera r11, r12;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r9 := @parameter0: android.hardware.ICameraClient;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.hardware.ICameraClient: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        $r4 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        r11 = interfaceinvoke $r7.<android.hardware.ICameraService: android.hardware.ICamera connect(android.hardware.ICameraClient,int,java.lang.String,int,int)>(r9, i0, r1, i1, i2);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = virtualinvoke r3.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r12 = staticinvoke <android.hardware.ICamera$Stub: android.hardware.ICamera asInterface(android.os.IBinder)>($r5);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.hardware.camera2.ICameraDeviceUser connectDevice(android.hardware.camera2.ICameraDeviceCallbacks, java.lang.String, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        java.lang.String r1, r2, r3;
        int i0;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, $r7, r12;
        boolean $z0;
        android.hardware.ICameraService $r8, $r9;
        java.lang.Throwable $r10;
        android.hardware.camera2.ICameraDeviceCallbacks r11;
        android.hardware.camera2.ICameraDeviceUser r13, r14;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r11 := @parameter0: android.hardware.camera2.ICameraDeviceCallbacks;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

     label02:
        if r11 == null goto label05;

     label03:
        r12 = interfaceinvoke r11.<android.hardware.camera2.ICameraDeviceCallbacks: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r12 = null;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r12);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r4, r5, 0);

        if $z0 != 0 goto label08;

        $r8 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r8 == null goto label08;

        $r9 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        r13 = interfaceinvoke $r9.<android.hardware.ICameraService: android.hardware.camera2.ICameraDeviceUser connectDevice(android.hardware.camera2.ICameraDeviceCallbacks,java.lang.String,java.lang.String,java.lang.String,int)>(r11, r1, r2, r3, i0);

     label07:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r13;

     label08:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        $r7 = virtualinvoke r5.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r14 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser asInterface(android.os.IBinder)>($r7);

     label09:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r14;

     label10:
        $r10 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.hardware.ICamera connectLegacy(android.hardware.ICameraClient, int, int, java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, $r5, r10;
        boolean $z0;
        android.hardware.ICameraService $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.ICameraClient r9;
        android.hardware.ICamera r11, r12;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r9 := @parameter0: android.hardware.ICameraClient;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.hardware.ICameraClient: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        $r4 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        r11 = interfaceinvoke $r7.<android.hardware.ICameraService: android.hardware.ICamera connectLegacy(android.hardware.ICameraClient,int,int,java.lang.String,int)>(r9, i0, i1, r1, i2);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = virtualinvoke r3.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r12 = staticinvoke <android.hardware.ICamera$Stub: android.hardware.ICamera asInterface(android.os.IBinder)>($r5);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.hardware.camera2.impl.CameraMetadataNative getCameraCharacteristics(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.ICameraService $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.hardware.camera2.impl.CameraMetadataNative r10, r11;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.ICameraService: android.hardware.camera2.impl.CameraMetadataNative getCameraCharacteristics(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.camera2.impl.CameraMetadataNative: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.hardware.camera2.impl.CameraMetadataNative) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.hardware.CameraInfo getCameraInfo(int) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.ICameraService $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.CameraInfo r9, r10;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.ICameraService: android.hardware.CameraInfo getCameraInfo(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.hardware.CameraInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.CameraInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.hardware.camera2.params.VendorTagDescriptorCache getCameraVendorTagCache() throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.ICameraService $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.camera2.params.VendorTagDescriptorCache r9, r10;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        $r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.ICameraService: android.hardware.camera2.params.VendorTagDescriptorCache getCameraVendorTagCache()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.camera2.params.VendorTagDescriptorCache: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.camera2.params.VendorTagDescriptorCache) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.hardware.camera2.params.VendorTagDescriptor getCameraVendorTagDescriptor() throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.ICameraService $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.camera2.params.VendorTagDescriptor r9, r10;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        $r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.ICameraService: android.hardware.camera2.params.VendorTagDescriptor getCameraVendorTagDescriptor()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.camera2.params.VendorTagDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.camera2.params.VendorTagDescriptor) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.hardware.camera2.utils.ConcurrentCameraIdCombination[] getConcurrentCameraIds() throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.hardware.ICameraService $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.camera2.utils.ConcurrentCameraIdCombination[] r9, r10;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        $r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.ICameraService: android.hardware.camera2.utils.ConcurrentCameraIdCombination[] getConcurrentCameraIds()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.hardware.camera2.utils.ConcurrentCameraIdCombination: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.hardware.camera2.utils.ConcurrentCameraIdCombination[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.ICameraService$Stub$Proxy r0;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        return "android.hardware.ICameraService";
    }

    public java.lang.String getLegacyParameters(int) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.ICameraService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.hardware.ICameraService: java.lang.String getLegacyParameters(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getNumberOfCameras(int) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.ICameraService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.hardware.ICameraService: int getNumberOfCameras(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isConcurrentSessionConfigurationSupported(android.hardware.camera2.utils.CameraIdAndSessionConfiguration[]) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.hardware.ICameraService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.camera2.utils.CameraIdAndSessionConfiguration[] r7;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r7 := @parameter0: android.hardware.camera2.utils.CameraIdAndSessionConfiguration[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

     label2:
        z1 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r7, 0);

        $r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.hardware.ICameraService: boolean isConcurrentSessionConfigurationSupported(android.hardware.camera2.utils.CameraIdAndSessionConfiguration[])>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isHiddenPhysicalCamera(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.hardware.ICameraService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.hardware.ICameraService: boolean isHiddenPhysicalCamera(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void notifyDeviceStateChange(long) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.ICameraService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.ICameraService: void notifyDeviceStateChange(long)>(l0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void notifySystemEvent(int, int[]) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.hardware.ICameraService $r3, $r4;
        java.lang.Throwable $r5;
        int[] r6;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r6);

        $r2 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        interfaceinvoke $r4.<android.hardware.ICameraService: void notifySystemEvent(int,int[])>(i0, r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void removeListener(android.hardware.ICameraServiceListener) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.ICameraService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.ICameraServiceListener r7;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r7 := @parameter0: android.hardware.ICameraServiceListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.ICameraServiceListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.ICameraService: void removeListener(android.hardware.ICameraServiceListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setTorchMode(java.lang.String, boolean, android.os.IBinder) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.IBinder r1, $r4;
        android.os.Parcel r2, r3;
        android.hardware.ICameraService $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        byte b0;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r4 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r2, r3, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.ICameraService: void setTorchMode(java.lang.String,boolean,android.os.IBinder)>(r8, z0, r1);

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean supportsCameraApi(java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.hardware.ICameraService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r3 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.hardware.ICameraService$Stub: android.hardware.ICameraService getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.hardware.ICameraService: boolean supportsCameraApi(java.lang.String,int)>(r7, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
}
