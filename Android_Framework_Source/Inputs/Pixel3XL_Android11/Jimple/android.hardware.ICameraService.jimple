public interface  android.hardware.ICameraService extends java.lang.Object implements android.os.IInterface
{
    public static final int API_VERSION_1;
    public static final int API_VERSION_2;
    public static final int CAMERA_HAL_API_VERSION_UNSPECIFIED;
    public static final int CAMERA_TYPE_ALL;
    public static final int CAMERA_TYPE_BACKWARD_COMPATIBLE;
    public static final int DEVICE_STATE_BACK_COVERED;
    public static final int DEVICE_STATE_FOLDED;
    public static final int DEVICE_STATE_FRONT_COVERED;
    public static final int DEVICE_STATE_LAST_FRAMEWORK_BIT;
    public static final int DEVICE_STATE_NORMAL;
    public static final int ERROR_ALREADY_EXISTS;
    public static final int ERROR_CAMERA_IN_USE;
    public static final int ERROR_DEPRECATED_HAL;
    public static final int ERROR_DISABLED;
    public static final int ERROR_DISCONNECTED;
    public static final int ERROR_ILLEGAL_ARGUMENT;
    public static final int ERROR_INVALID_OPERATION;
    public static final int ERROR_MAX_CAMERAS_IN_USE;
    public static final int ERROR_PERMISSION_DENIED;
    public static final int ERROR_TIMED_OUT;
    public static final int EVENT_NONE;
    public static final int EVENT_USER_SWITCHED;
    public static final int USE_CALLING_PID;
    public static final int USE_CALLING_UID;

    public abstract android.hardware.CameraStatus[] addListener(android.hardware.ICameraServiceListener) throws android.os.RemoteException;

    public abstract android.hardware.ICamera connect(android.hardware.ICameraClient, int, java.lang.String, int, int) throws android.os.RemoteException;

    public abstract android.hardware.camera2.ICameraDeviceUser connectDevice(android.hardware.camera2.ICameraDeviceCallbacks, java.lang.String, java.lang.String, java.lang.String, int) throws android.os.RemoteException;

    public abstract android.hardware.ICamera connectLegacy(android.hardware.ICameraClient, int, int, java.lang.String, int) throws android.os.RemoteException;

    public abstract android.hardware.camera2.impl.CameraMetadataNative getCameraCharacteristics(java.lang.String) throws android.os.RemoteException;

    public abstract android.hardware.CameraInfo getCameraInfo(int) throws android.os.RemoteException;

    public abstract android.hardware.camera2.params.VendorTagDescriptorCache getCameraVendorTagCache() throws android.os.RemoteException;

    public abstract android.hardware.camera2.params.VendorTagDescriptor getCameraVendorTagDescriptor() throws android.os.RemoteException;

    public abstract android.hardware.camera2.utils.ConcurrentCameraIdCombination[] getConcurrentCameraIds() throws android.os.RemoteException;

    public abstract java.lang.String getLegacyParameters(int) throws android.os.RemoteException;

    public abstract int getNumberOfCameras(int) throws android.os.RemoteException;

    public abstract boolean isConcurrentSessionConfigurationSupported(android.hardware.camera2.utils.CameraIdAndSessionConfiguration[]) throws android.os.RemoteException;

    public abstract boolean isHiddenPhysicalCamera(java.lang.String) throws android.os.RemoteException;

    public abstract void notifyDeviceStateChange(long) throws android.os.RemoteException;

    public abstract void notifySystemEvent(int, int[]) throws android.os.RemoteException;

    public abstract void removeListener(android.hardware.ICameraServiceListener) throws android.os.RemoteException;

    public abstract void setTorchMode(java.lang.String, boolean, android.os.IBinder) throws android.os.RemoteException;

    public abstract boolean supportsCameraApi(java.lang.String, int) throws android.os.RemoteException;

    public static void <clinit>()
    {
        <android.hardware.ICameraService: int USE_CALLING_UID> = -1;

        <android.hardware.ICameraService: int USE_CALLING_PID> = -1;

        <android.hardware.ICameraService: int EVENT_USER_SWITCHED> = 1;

        <android.hardware.ICameraService: int EVENT_NONE> = 0;

        <android.hardware.ICameraService: int ERROR_TIMED_OUT> = 5;

        <android.hardware.ICameraService: int ERROR_PERMISSION_DENIED> = 1;

        <android.hardware.ICameraService: int ERROR_MAX_CAMERAS_IN_USE> = 8;

        <android.hardware.ICameraService: int ERROR_INVALID_OPERATION> = 10;

        <android.hardware.ICameraService: int ERROR_ILLEGAL_ARGUMENT> = 3;

        <android.hardware.ICameraService: int ERROR_DISCONNECTED> = 4;

        <android.hardware.ICameraService: int ERROR_DISABLED> = 6;

        <android.hardware.ICameraService: int ERROR_DEPRECATED_HAL> = 9;

        <android.hardware.ICameraService: int ERROR_CAMERA_IN_USE> = 7;

        <android.hardware.ICameraService: int ERROR_ALREADY_EXISTS> = 2;

        <android.hardware.ICameraService: int DEVICE_STATE_NORMAL> = 0;

        <android.hardware.ICameraService: int DEVICE_STATE_LAST_FRAMEWORK_BIT> = -2147483648;

        <android.hardware.ICameraService: int DEVICE_STATE_FRONT_COVERED> = 2;

        <android.hardware.ICameraService: int DEVICE_STATE_FOLDED> = 4;

        <android.hardware.ICameraService: int DEVICE_STATE_BACK_COVERED> = 1;

        <android.hardware.ICameraService: int CAMERA_TYPE_BACKWARD_COMPATIBLE> = 0;

        <android.hardware.ICameraService: int CAMERA_TYPE_ALL> = 1;

        <android.hardware.ICameraService: int CAMERA_HAL_API_VERSION_UNSPECIFIED> = -1;

        <android.hardware.ICameraService: int API_VERSION_2> = 2;

        <android.hardware.ICameraService: int API_VERSION_1> = 1;

        return;
    }
}
