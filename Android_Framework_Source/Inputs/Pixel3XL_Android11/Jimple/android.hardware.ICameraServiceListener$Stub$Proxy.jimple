class android.hardware.ICameraServiceListener$Stub$Proxy extends java.lang.Object implements android.hardware.ICameraServiceListener
{
    public static android.hardware.ICameraServiceListener sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.ICameraServiceListener$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.ICameraServiceListener$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.ICameraServiceListener$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.ICameraServiceListener$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.ICameraServiceListener$Stub$Proxy;

        $r1 = r0.<android.hardware.ICameraServiceListener$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.ICameraServiceListener$Stub$Proxy r0;

        r0 := @this: android.hardware.ICameraServiceListener$Stub$Proxy;

        return "android.hardware.ICameraServiceListener";
    }

    public void onCameraAccessPrioritiesChanged() throws android.os.RemoteException
    {
        android.hardware.ICameraServiceListener$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.ICameraServiceListener $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.ICameraServiceListener$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraServiceListener");

        $r3 = r0.<android.hardware.ICameraServiceListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.ICameraServiceListener: void onCameraAccessPrioritiesChanged()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onCameraClosed(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.ICameraServiceListener$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.hardware.ICameraServiceListener $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.hardware.ICameraServiceListener$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraServiceListener");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<android.hardware.ICameraServiceListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        interfaceinvoke $r4.<android.hardware.ICameraServiceListener: void onCameraClosed(java.lang.String)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onCameraOpened(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.ICameraServiceListener$Stub$Proxy r0;
        java.lang.String r1, r7;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.ICameraServiceListener $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.ICameraServiceListener$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraServiceListener");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r3 = r0.<android.hardware.ICameraServiceListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.ICameraServiceListener: void onCameraOpened(java.lang.String,java.lang.String)>(r7, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onPhysicalCameraStatusChanged(int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.ICameraServiceListener$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r7;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.ICameraServiceListener $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.ICameraServiceListener$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraServiceListener");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r3 = r0.<android.hardware.ICameraServiceListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.ICameraServiceListener: void onPhysicalCameraStatusChanged(int,java.lang.String,java.lang.String)>(i0, r7, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onStatusChanged(int, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.ICameraServiceListener$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.hardware.ICameraServiceListener $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.hardware.ICameraServiceListener$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraServiceListener");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<android.hardware.ICameraServiceListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        interfaceinvoke $r4.<android.hardware.ICameraServiceListener: void onStatusChanged(int,java.lang.String)>(i0, r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onTorchStatusChanged(int, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.ICameraServiceListener$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.hardware.ICameraServiceListener $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.hardware.ICameraServiceListener$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraServiceListener");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<android.hardware.ICameraServiceListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener getDefaultImpl()>();

        interfaceinvoke $r4.<android.hardware.ICameraServiceListener: void onTorchStatusChanged(int,java.lang.String)>(i0, r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
