public abstract class android.hardware.ICameraServiceListener$Stub extends android.os.Binder implements android.hardware.ICameraServiceListener
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_onCameraAccessPrioritiesChanged;
    static final int TRANSACTION_onCameraClosed;
    static final int TRANSACTION_onCameraOpened;
    static final int TRANSACTION_onPhysicalCameraStatusChanged;
    static final int TRANSACTION_onStatusChanged;
    static final int TRANSACTION_onTorchStatusChanged;

    public void <init>()
    {
        android.hardware.ICameraServiceListener$Stub r0;

        r0 := @this: android.hardware.ICameraServiceListener$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.hardware.ICameraServiceListener$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.hardware.ICameraServiceListener");

        return;
    }

    public static android.hardware.ICameraServiceListener asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.hardware.ICameraServiceListener$Stub$Proxy $r2;
        boolean $z0;
        android.hardware.ICameraServiceListener $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.hardware.ICameraServiceListener");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.hardware.ICameraServiceListener;

        if $z0 == 0 goto label2;

        $r3 = (android.hardware.ICameraServiceListener) r1;

        return $r3;

     label2:
        $r2 = new android.hardware.ICameraServiceListener$Stub$Proxy;

        specialinvoke $r2.<android.hardware.ICameraServiceListener$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.hardware.ICameraServiceListener getDefaultImpl()
    {
        android.hardware.ICameraServiceListener $r0;

        $r0 = <android.hardware.ICameraServiceListener$Stub$Proxy: android.hardware.ICameraServiceListener sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "onCameraClosed";

     label3:
        return "onCameraOpened";

     label4:
        return "onCameraAccessPrioritiesChanged";

     label5:
        return "onTorchStatusChanged";

     label6:
        return "onPhysicalCameraStatusChanged";

     label7:
        return "onStatusChanged";
    }

    public static boolean setDefaultImpl(android.hardware.ICameraServiceListener)
    {
        android.hardware.ICameraServiceListener r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.hardware.ICameraServiceListener;

        $r1 = <android.hardware.ICameraServiceListener$Stub$Proxy: android.hardware.ICameraServiceListener sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.hardware.ICameraServiceListener$Stub$Proxy: android.hardware.ICameraServiceListener sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.ICameraServiceListener$Stub r0;

        r0 := @this: android.hardware.ICameraServiceListener$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.hardware.ICameraServiceListener$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.hardware.ICameraServiceListener$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.hardware.ICameraServiceListener$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.hardware.ICameraServiceListener$Stub r0;
        int i0, i1, $i2, $i3, $i4;
        android.os.Parcel r1, r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: android.hardware.ICameraServiceListener$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        if i0 == 1598968902 goto label8;

        tableswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraServiceListener");

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.ICameraServiceListener$Stub: void onCameraClosed(java.lang.String)>($r3);

        return 1;

     label3:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraServiceListener");

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.ICameraServiceListener$Stub: void onCameraOpened(java.lang.String,java.lang.String)>($r4, $r5);

        return 1;

     label4:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraServiceListener");

        virtualinvoke r0.<android.hardware.ICameraServiceListener$Stub: void onCameraAccessPrioritiesChanged()>();

        return 1;

     label5:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraServiceListener");

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.ICameraServiceListener$Stub: void onTorchStatusChanged(int,java.lang.String)>($i2, $r6);

        return 1;

     label6:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraServiceListener");

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.ICameraServiceListener$Stub: void onPhysicalCameraStatusChanged(int,java.lang.String,java.lang.String)>($i3, $r7, $r8);

        return 1;

     label7:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraServiceListener");

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.ICameraServiceListener$Stub: void onStatusChanged(int,java.lang.String)>($i4, $r9);

        return 1;

     label8:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.hardware.ICameraServiceListener");

        return 1;
    }

    public static void <clinit>()
    {
        <android.hardware.ICameraServiceListener$Stub: int TRANSACTION_onTorchStatusChanged> = 3;

        <android.hardware.ICameraServiceListener$Stub: int TRANSACTION_onStatusChanged> = 1;

        <android.hardware.ICameraServiceListener$Stub: int TRANSACTION_onPhysicalCameraStatusChanged> = 2;

        <android.hardware.ICameraServiceListener$Stub: int TRANSACTION_onCameraOpened> = 5;

        <android.hardware.ICameraServiceListener$Stub: int TRANSACTION_onCameraClosed> = 6;

        <android.hardware.ICameraServiceListener$Stub: int TRANSACTION_onCameraAccessPrioritiesChanged> = 4;

        <android.hardware.ICameraServiceListener$Stub: java.lang.String DESCRIPTOR> = "android.hardware.ICameraServiceListener";

        return;
    }
}
