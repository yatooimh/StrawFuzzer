public interface  android.hardware.ICameraServiceListener extends java.lang.Object implements android.os.IInterface
{
    public static final int STATUS_ENUMERATING;
    public static final int STATUS_NOT_AVAILABLE;
    public static final int STATUS_NOT_PRESENT;
    public static final int STATUS_PRESENT;
    public static final int STATUS_UNKNOWN;
    public static final int TORCH_STATUS_AVAILABLE_OFF;
    public static final int TORCH_STATUS_AVAILABLE_ON;
    public static final int TORCH_STATUS_NOT_AVAILABLE;
    public static final int TORCH_STATUS_UNKNOWN;

    public abstract void onCameraAccessPrioritiesChanged() throws android.os.RemoteException;

    public abstract void onCameraClosed(java.lang.String) throws android.os.RemoteException;

    public abstract void onCameraOpened(java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void onPhysicalCameraStatusChanged(int, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void onStatusChanged(int, java.lang.String) throws android.os.RemoteException;

    public abstract void onTorchStatusChanged(int, java.lang.String) throws android.os.RemoteException;

    public static void <clinit>()
    {
        <android.hardware.ICameraServiceListener: int TORCH_STATUS_UNKNOWN> = -1;

        <android.hardware.ICameraServiceListener: int TORCH_STATUS_NOT_AVAILABLE> = 0;

        <android.hardware.ICameraServiceListener: int TORCH_STATUS_AVAILABLE_ON> = 2;

        <android.hardware.ICameraServiceListener: int TORCH_STATUS_AVAILABLE_OFF> = 1;

        <android.hardware.ICameraServiceListener: int STATUS_UNKNOWN> = -1;

        <android.hardware.ICameraServiceListener: int STATUS_PRESENT> = 1;

        <android.hardware.ICameraServiceListener: int STATUS_NOT_PRESENT> = 0;

        <android.hardware.ICameraServiceListener: int STATUS_NOT_AVAILABLE> = -2;

        <android.hardware.ICameraServiceListener: int STATUS_ENUMERATING> = 2;

        return;
    }
}
