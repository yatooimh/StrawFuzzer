public final class android.hardware.Sensor extends java.lang.Object
{
    private static final int ADDITIONAL_INFO_MASK;
    private static final int ADDITIONAL_INFO_SHIFT;
    private static final int DATA_INJECTION_MASK;
    private static final int DATA_INJECTION_SHIFT;
    private static final int DIRECT_CHANNEL_MASK;
    private static final int DIRECT_CHANNEL_SHIFT;
    private static final int DIRECT_REPORT_MASK;
    private static final int DIRECT_REPORT_SHIFT;
    private static final int DYNAMIC_SENSOR_MASK;
    private static final int DYNAMIC_SENSOR_SHIFT;
    public static final int REPORTING_MODE_CONTINUOUS;
    private static final int REPORTING_MODE_MASK;
    public static final int REPORTING_MODE_ONE_SHOT;
    public static final int REPORTING_MODE_ON_CHANGE;
    private static final int REPORTING_MODE_SHIFT;
    public static final int REPORTING_MODE_SPECIAL_TRIGGER;
    private static final int SENSOR_FLAG_WAKE_UP_SENSOR;
    public static final java.lang.String SENSOR_STRING_TYPE_TILT_DETECTOR;
    public static final java.lang.String STRING_TYPE_ACCELEROMETER;
    public static final java.lang.String STRING_TYPE_ACCELEROMETER_UNCALIBRATED;
    public static final java.lang.String STRING_TYPE_AMBIENT_TEMPERATURE;
    public static final java.lang.String STRING_TYPE_DEVICE_ORIENTATION;
    public static final java.lang.String STRING_TYPE_DYNAMIC_SENSOR_META;
    public static final java.lang.String STRING_TYPE_GAME_ROTATION_VECTOR;
    public static final java.lang.String STRING_TYPE_GEOMAGNETIC_ROTATION_VECTOR;
    public static final java.lang.String STRING_TYPE_GLANCE_GESTURE;
    public static final java.lang.String STRING_TYPE_GRAVITY;
    public static final java.lang.String STRING_TYPE_GYROSCOPE;
    public static final java.lang.String STRING_TYPE_GYROSCOPE_UNCALIBRATED;
    public static final java.lang.String STRING_TYPE_HEART_BEAT;
    public static final java.lang.String STRING_TYPE_HEART_RATE;
    public static final java.lang.String STRING_TYPE_HINGE_ANGLE;
    public static final java.lang.String STRING_TYPE_LIGHT;
    public static final java.lang.String STRING_TYPE_LINEAR_ACCELERATION;
    public static final java.lang.String STRING_TYPE_LOW_LATENCY_OFFBODY_DETECT;
    public static final java.lang.String STRING_TYPE_MAGNETIC_FIELD;
    public static final java.lang.String STRING_TYPE_MAGNETIC_FIELD_UNCALIBRATED;
    public static final java.lang.String STRING_TYPE_MOTION_DETECT;
    public static final java.lang.String STRING_TYPE_ORIENTATION;
    public static final java.lang.String STRING_TYPE_PICK_UP_GESTURE;
    public static final java.lang.String STRING_TYPE_POSE_6DOF;
    public static final java.lang.String STRING_TYPE_PRESSURE;
    public static final java.lang.String STRING_TYPE_PROXIMITY;
    public static final java.lang.String STRING_TYPE_RELATIVE_HUMIDITY;
    public static final java.lang.String STRING_TYPE_ROTATION_VECTOR;
    public static final java.lang.String STRING_TYPE_SIGNIFICANT_MOTION;
    public static final java.lang.String STRING_TYPE_STATIONARY_DETECT;
    public static final java.lang.String STRING_TYPE_STEP_COUNTER;
    public static final java.lang.String STRING_TYPE_STEP_DETECTOR;
    public static final java.lang.String STRING_TYPE_TEMPERATURE;
    public static final java.lang.String STRING_TYPE_WAKE_GESTURE;
    public static final java.lang.String STRING_TYPE_WRIST_TILT_GESTURE;
    public static final int TYPE_ACCELEROMETER;
    public static final int TYPE_ACCELEROMETER_UNCALIBRATED;
    public static final int TYPE_ALL;
    public static final int TYPE_AMBIENT_TEMPERATURE;
    public static final int TYPE_DEVICE_ORIENTATION;
    public static final int TYPE_DEVICE_PRIVATE_BASE;
    public static final int TYPE_DYNAMIC_SENSOR_META;
    public static final int TYPE_GAME_ROTATION_VECTOR;
    public static final int TYPE_GEOMAGNETIC_ROTATION_VECTOR;
    public static final int TYPE_GLANCE_GESTURE;
    public static final int TYPE_GRAVITY;
    public static final int TYPE_GYROSCOPE;
    public static final int TYPE_GYROSCOPE_UNCALIBRATED;
    public static final int TYPE_HEART_BEAT;
    public static final int TYPE_HEART_RATE;
    public static final int TYPE_HINGE_ANGLE;
    public static final int TYPE_LIGHT;
    public static final int TYPE_LINEAR_ACCELERATION;
    public static final int TYPE_LOW_LATENCY_OFFBODY_DETECT;
    public static final int TYPE_MAGNETIC_FIELD;
    public static final int TYPE_MAGNETIC_FIELD_UNCALIBRATED;
    public static final int TYPE_MOTION_DETECT;
    public static final int TYPE_ORIENTATION;
    public static final int TYPE_PICK_UP_GESTURE;
    public static final int TYPE_POSE_6DOF;
    public static final int TYPE_PRESSURE;
    public static final int TYPE_PROXIMITY;
    public static final int TYPE_RELATIVE_HUMIDITY;
    public static final int TYPE_ROTATION_VECTOR;
    public static final int TYPE_SIGNIFICANT_MOTION;
    public static final int TYPE_STATIONARY_DETECT;
    public static final int TYPE_STEP_COUNTER;
    public static final int TYPE_STEP_DETECTOR;
    public static final int TYPE_TEMPERATURE;
    public static final int TYPE_TILT_DETECTOR;
    public static final int TYPE_WAKE_GESTURE;
    public static final int TYPE_WRIST_TILT_GESTURE;
    private static final int[] sSensorReportingModes;
    private int mFifoMaxEventCount;
    private int mFifoReservedEventCount;
    private int mFlags;
    private int mHandle;
    private int mId;
    private int mMaxDelay;
    private float mMaxRange;
    private int mMinDelay;
    private java.lang.String mName;
    private float mPower;
    private java.lang.String mRequiredPermission;
    private float mResolution;
    private java.lang.String mStringType;
    private int mType;
    private java.lang.String mVendor;
    private int mVersion;

    static void <clinit>()
    {
        int[] $r0;

        <android.hardware.Sensor: int TYPE_WRIST_TILT_GESTURE> = 26;

        <android.hardware.Sensor: int TYPE_WAKE_GESTURE> = 23;

        <android.hardware.Sensor: int TYPE_TILT_DETECTOR> = 22;

        <android.hardware.Sensor: int TYPE_TEMPERATURE> = 7;

        <android.hardware.Sensor: int TYPE_STEP_DETECTOR> = 18;

        <android.hardware.Sensor: int TYPE_STEP_COUNTER> = 19;

        <android.hardware.Sensor: int TYPE_STATIONARY_DETECT> = 29;

        <android.hardware.Sensor: int TYPE_SIGNIFICANT_MOTION> = 17;

        <android.hardware.Sensor: int TYPE_ROTATION_VECTOR> = 11;

        <android.hardware.Sensor: int TYPE_RELATIVE_HUMIDITY> = 12;

        <android.hardware.Sensor: int TYPE_PROXIMITY> = 8;

        <android.hardware.Sensor: int TYPE_PRESSURE> = 6;

        <android.hardware.Sensor: int TYPE_POSE_6DOF> = 28;

        <android.hardware.Sensor: int TYPE_PICK_UP_GESTURE> = 25;

        <android.hardware.Sensor: int TYPE_ORIENTATION> = 3;

        <android.hardware.Sensor: int TYPE_MOTION_DETECT> = 30;

        <android.hardware.Sensor: int TYPE_MAGNETIC_FIELD_UNCALIBRATED> = 14;

        <android.hardware.Sensor: int TYPE_MAGNETIC_FIELD> = 2;

        <android.hardware.Sensor: int TYPE_LOW_LATENCY_OFFBODY_DETECT> = 34;

        <android.hardware.Sensor: int TYPE_LINEAR_ACCELERATION> = 10;

        <android.hardware.Sensor: int TYPE_LIGHT> = 5;

        <android.hardware.Sensor: int TYPE_HINGE_ANGLE> = 36;

        <android.hardware.Sensor: int TYPE_HEART_RATE> = 21;

        <android.hardware.Sensor: int TYPE_HEART_BEAT> = 31;

        <android.hardware.Sensor: int TYPE_GYROSCOPE_UNCALIBRATED> = 16;

        <android.hardware.Sensor: int TYPE_GYROSCOPE> = 4;

        <android.hardware.Sensor: int TYPE_GRAVITY> = 9;

        <android.hardware.Sensor: int TYPE_GLANCE_GESTURE> = 24;

        <android.hardware.Sensor: int TYPE_GEOMAGNETIC_ROTATION_VECTOR> = 20;

        <android.hardware.Sensor: int TYPE_GAME_ROTATION_VECTOR> = 15;

        <android.hardware.Sensor: int TYPE_DYNAMIC_SENSOR_META> = 32;

        <android.hardware.Sensor: int TYPE_DEVICE_PRIVATE_BASE> = 65536;

        <android.hardware.Sensor: int TYPE_DEVICE_ORIENTATION> = 27;

        <android.hardware.Sensor: int TYPE_AMBIENT_TEMPERATURE> = 13;

        <android.hardware.Sensor: int TYPE_ALL> = -1;

        <android.hardware.Sensor: int TYPE_ACCELEROMETER_UNCALIBRATED> = 35;

        <android.hardware.Sensor: int TYPE_ACCELEROMETER> = 1;

        <android.hardware.Sensor: java.lang.String STRING_TYPE_WRIST_TILT_GESTURE> = "android.sensor.wrist_tilt_gesture";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_WAKE_GESTURE> = "android.sensor.wake_gesture";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_TEMPERATURE> = "android.sensor.temperature";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_STEP_DETECTOR> = "android.sensor.step_detector";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_STEP_COUNTER> = "android.sensor.step_counter";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_STATIONARY_DETECT> = "android.sensor.stationary_detect";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_SIGNIFICANT_MOTION> = "android.sensor.significant_motion";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_ROTATION_VECTOR> = "android.sensor.rotation_vector";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_RELATIVE_HUMIDITY> = "android.sensor.relative_humidity";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_PROXIMITY> = "android.sensor.proximity";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_PRESSURE> = "android.sensor.pressure";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_POSE_6DOF> = "android.sensor.pose_6dof";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_PICK_UP_GESTURE> = "android.sensor.pick_up_gesture";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_ORIENTATION> = "android.sensor.orientation";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_MOTION_DETECT> = "android.sensor.motion_detect";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_MAGNETIC_FIELD_UNCALIBRATED> = "android.sensor.magnetic_field_uncalibrated";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_MAGNETIC_FIELD> = "android.sensor.magnetic_field";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_LOW_LATENCY_OFFBODY_DETECT> = "android.sensor.low_latency_offbody_detect";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_LINEAR_ACCELERATION> = "android.sensor.linear_acceleration";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_LIGHT> = "android.sensor.light";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_HINGE_ANGLE> = "android.sensor.hinge_angle";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_HEART_RATE> = "android.sensor.heart_rate";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_HEART_BEAT> = "android.sensor.heart_beat";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_GYROSCOPE_UNCALIBRATED> = "android.sensor.gyroscope_uncalibrated";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_GYROSCOPE> = "android.sensor.gyroscope";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_GRAVITY> = "android.sensor.gravity";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_GLANCE_GESTURE> = "android.sensor.glance_gesture";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_GEOMAGNETIC_ROTATION_VECTOR> = "android.sensor.geomagnetic_rotation_vector";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_GAME_ROTATION_VECTOR> = "android.sensor.game_rotation_vector";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_DYNAMIC_SENSOR_META> = "android.sensor.dynamic_sensor_meta";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_DEVICE_ORIENTATION> = "android.sensor.device_orientation";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_AMBIENT_TEMPERATURE> = "android.sensor.ambient_temperature";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_ACCELEROMETER_UNCALIBRATED> = "android.sensor.accelerometer_uncalibrated";

        <android.hardware.Sensor: java.lang.String STRING_TYPE_ACCELEROMETER> = "android.sensor.accelerometer";

        <android.hardware.Sensor: java.lang.String SENSOR_STRING_TYPE_TILT_DETECTOR> = "android.sensor.tilt_detector";

        <android.hardware.Sensor: int SENSOR_FLAG_WAKE_UP_SENSOR> = 1;

        <android.hardware.Sensor: int REPORTING_MODE_SPECIAL_TRIGGER> = 3;

        <android.hardware.Sensor: int REPORTING_MODE_SHIFT> = 1;

        <android.hardware.Sensor: int REPORTING_MODE_ON_CHANGE> = 1;

        <android.hardware.Sensor: int REPORTING_MODE_ONE_SHOT> = 2;

        <android.hardware.Sensor: int REPORTING_MODE_MASK> = 14;

        <android.hardware.Sensor: int REPORTING_MODE_CONTINUOUS> = 0;

        <android.hardware.Sensor: int DYNAMIC_SENSOR_SHIFT> = 5;

        <android.hardware.Sensor: int DYNAMIC_SENSOR_MASK> = 32;

        <android.hardware.Sensor: int DIRECT_REPORT_SHIFT> = 7;

        <android.hardware.Sensor: int DIRECT_REPORT_MASK> = 896;

        <android.hardware.Sensor: int DIRECT_CHANNEL_SHIFT> = 10;

        <android.hardware.Sensor: int DIRECT_CHANNEL_MASK> = 3072;

        <android.hardware.Sensor: int DATA_INJECTION_SHIFT> = 4;

        <android.hardware.Sensor: int DATA_INJECTION_MASK> = 16;

        <android.hardware.Sensor: int ADDITIONAL_INFO_SHIFT> = 6;

        <android.hardware.Sensor: int ADDITIONAL_INFO_MASK> = 64;

        $r0 = newarray (int)[37];

        $r0[0] = 0;

        $r0[1] = 3;

        $r0[2] = 3;

        $r0[3] = 3;

        $r0[4] = 3;

        $r0[5] = 1;

        $r0[6] = 1;

        $r0[7] = 1;

        $r0[8] = 1;

        $r0[9] = 3;

        $r0[10] = 3;

        $r0[11] = 5;

        $r0[12] = 1;

        $r0[13] = 1;

        $r0[14] = 6;

        $r0[15] = 4;

        $r0[16] = 6;

        $r0[17] = 1;

        $r0[18] = 1;

        $r0[19] = 1;

        $r0[20] = 5;

        $r0[21] = 1;

        $r0[22] = 1;

        $r0[23] = 1;

        $r0[24] = 1;

        $r0[25] = 1;

        $r0[26] = 1;

        $r0[27] = 1;

        $r0[28] = 16;

        $r0[29] = 1;

        $r0[30] = 1;

        $r0[31] = 1;

        $r0[32] = 2;

        $r0[33] = 16;

        $r0[34] = 1;

        $r0[35] = 6;

        $r0[36] = 1;

        <android.hardware.Sensor: int[] sSensorReportingModes> = $r0;

        return;
    }

    void <init>()
    {
        android.hardware.Sensor r0;

        r0 := @this: android.hardware.Sensor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int getMaxLengthValuesArray(android.hardware.Sensor, int)
    {
        int $i0, $i1, $i2, i3, i4;
        android.hardware.Sensor r0;
        int[] r1;

        r0 := @parameter0: android.hardware.Sensor;

        i3 := @parameter1: int;

        $i0 = r0.<android.hardware.Sensor: int mType>;

        if $i0 != 11 goto label1;

        if i3 > 17 goto label1;

        return 3;

     label1:
        i4 = r0.<android.hardware.Sensor: int mType>;

        r1 = <android.hardware.Sensor: int[] sSensorReportingModes>;

        $i1 = lengthof r1;

        if i4 < $i1 goto label2;

        return 16;

     label2:
        $i2 = r1[i4];

        return $i2;
    }

    private boolean setType(int)
    {
        android.hardware.Sensor r0;
        int i0;

        r0 := @this: android.hardware.Sensor;

        i0 := @parameter0: int;

        r0.<android.hardware.Sensor: int mType> = i0;

        tableswitch(i0)
        {
            case 1: goto label31;
            case 2: goto label30;
            case 3: goto label29;
            case 4: goto label28;
            case 5: goto label27;
            case 6: goto label26;
            case 7: goto label25;
            case 8: goto label24;
            case 9: goto label23;
            case 10: goto label22;
            case 11: goto label21;
            case 12: goto label20;
            case 13: goto label19;
            case 14: goto label18;
            case 15: goto label17;
            case 16: goto label16;
            case 17: goto label15;
            case 18: goto label14;
            case 19: goto label13;
            case 20: goto label12;
            case 21: goto label11;
            case 22: goto label10;
            case 23: goto label09;
            case 24: goto label08;
            case 25: goto label07;
            case 26: goto label01;
            case 27: goto label06;
            case 28: goto label01;
            case 29: goto label01;
            case 30: goto label01;
            case 31: goto label01;
            case 32: goto label05;
            case 33: goto label01;
            case 34: goto label04;
            case 35: goto label03;
            case 36: goto label02;
            default: goto label01;
        };

     label01:
        goto label32;

     label02:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.hinge_angle";

        goto label32;

     label03:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.accelerometer_uncalibrated";

        return 1;

     label04:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.low_latency_offbody_detect";

        return 1;

     label05:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.dynamic_sensor_meta";

        return 1;

     label06:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.device_orientation";

        return 1;

     label07:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.pick_up_gesture";

        return 1;

     label08:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.glance_gesture";

        return 1;

     label09:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.wake_gesture";

        return 1;

     label10:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.tilt_detector";

        return 1;

     label11:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.heart_rate";

        return 1;

     label12:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.geomagnetic_rotation_vector";

        return 1;

     label13:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.step_counter";

        return 1;

     label14:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.step_detector";

        return 1;

     label15:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.significant_motion";

        return 1;

     label16:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.gyroscope_uncalibrated";

        return 1;

     label17:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.game_rotation_vector";

        return 1;

     label18:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.magnetic_field_uncalibrated";

        return 1;

     label19:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.ambient_temperature";

        return 1;

     label20:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.relative_humidity";

        return 1;

     label21:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.rotation_vector";

        return 1;

     label22:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.linear_acceleration";

        return 1;

     label23:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.gravity";

        return 1;

     label24:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.proximity";

        return 1;

     label25:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.temperature";

        return 1;

     label26:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.pressure";

        return 1;

     label27:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.light";

        return 1;

     label28:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.gyroscope";

        return 1;

     label29:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.orientation";

        return 1;

     label30:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.magnetic_field";

        return 1;

     label31:
        r0.<android.hardware.Sensor: java.lang.String mStringType> = "android.sensor.accelerometer";

        return 1;

     label32:
        return 0;
    }

    private void setUuid(long, long)
    {
        android.hardware.Sensor r0;
        long l0, l1;
        int $i2;

        r0 := @this: android.hardware.Sensor;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $i2 = (int) l0;

        r0.<android.hardware.Sensor: int mId> = $i2;

        return;
    }

    public int getFifoMaxEventCount()
    {
        android.hardware.Sensor r0;
        int $i0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mFifoMaxEventCount>;

        return $i0;
    }

    public int getFifoReservedEventCount()
    {
        android.hardware.Sensor r0;
        int $i0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mFifoReservedEventCount>;

        return $i0;
    }

    public int getHandle()
    {
        android.hardware.Sensor r0;
        int $i0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mHandle>;

        return $i0;
    }

    public int getHighestDirectReportRateLevel()
    {
        android.hardware.Sensor r0;
        int i0, $i1, $i2, i3;

        r0 := @this: android.hardware.Sensor;

        $i1 = r0.<android.hardware.Sensor: int mFlags>;

        $i2 = $i1 & 896;

        i0 = $i2 >> 7;

        i3 = 3;

        if i0 > 3 goto label1;

        i3 = i0;

        goto label1;

     label1:
        return i3;
    }

    public int getId()
    {
        android.hardware.Sensor r0;
        int $i0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mId>;

        return $i0;
    }

    public int getMaxDelay()
    {
        android.hardware.Sensor r0;
        int $i0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mMaxDelay>;

        return $i0;
    }

    public float getMaximumRange()
    {
        android.hardware.Sensor r0;
        float $f0;

        r0 := @this: android.hardware.Sensor;

        $f0 = r0.<android.hardware.Sensor: float mMaxRange>;

        return $f0;
    }

    public int getMinDelay()
    {
        android.hardware.Sensor r0;
        int $i0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mMinDelay>;

        return $i0;
    }

    public java.lang.String getName()
    {
        android.hardware.Sensor r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.Sensor;

        $r1 = r0.<android.hardware.Sensor: java.lang.String mName>;

        return $r1;
    }

    public float getPower()
    {
        android.hardware.Sensor r0;
        float $f0;

        r0 := @this: android.hardware.Sensor;

        $f0 = r0.<android.hardware.Sensor: float mPower>;

        return $f0;
    }

    public int getReportingMode()
    {
        android.hardware.Sensor r0;
        int $i0, $i1, $i2;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mFlags>;

        $i1 = $i0 & 14;

        $i2 = $i1 >> 1;

        return $i2;
    }

    public java.lang.String getRequiredPermission()
    {
        android.hardware.Sensor r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.Sensor;

        $r1 = r0.<android.hardware.Sensor: java.lang.String mRequiredPermission>;

        return $r1;
    }

    public float getResolution()
    {
        android.hardware.Sensor r0;
        float $f0;

        r0 := @this: android.hardware.Sensor;

        $f0 = r0.<android.hardware.Sensor: float mResolution>;

        return $f0;
    }

    public java.lang.String getStringType()
    {
        android.hardware.Sensor r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.Sensor;

        $r1 = r0.<android.hardware.Sensor: java.lang.String mStringType>;

        return $r1;
    }

    public int getType()
    {
        android.hardware.Sensor r0;
        int $i0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mType>;

        return $i0;
    }

    public java.util.UUID getUuid()
    {
        android.hardware.Sensor r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.hardware.Sensor;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public java.lang.String getVendor()
    {
        android.hardware.Sensor r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.Sensor;

        $r1 = r0.<android.hardware.Sensor: java.lang.String mVendor>;

        return $r1;
    }

    public int getVersion()
    {
        android.hardware.Sensor r0;
        int $i0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mVersion>;

        return $i0;
    }

    public boolean isAdditionalInfoSupported()
    {
        android.hardware.Sensor r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mFlags>;

        $i1 = $i0 & 64;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isDataInjectionSupported()
    {
        android.hardware.Sensor r0;
        int $i0, $i1, $i2;
        boolean z0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mFlags>;

        $i1 = $i0 & 16;

        $i2 = $i1 >> 4;

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isDirectChannelTypeSupported(int)
    {
        android.hardware.Sensor r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z1, z2;

        r0 := @this: android.hardware.Sensor;

        i0 := @parameter0: int;

        z1 = 0;

        if i0 == 1 goto label3;

        if i0 == 2 goto label1;

        return 0;

     label1:
        $i3 = r0.<android.hardware.Sensor: int mFlags>;

        $i4 = $i3 & 2048;

        if $i4 <= 0 goto label2;

        z1 = 1;

     label2:
        return z1;

     label3:
        z2 = 0;

        $i1 = r0.<android.hardware.Sensor: int mFlags>;

        $i2 = $i1 & 1024;

        if $i2 <= 0 goto label4;

        z2 = 1;

     label4:
        return z2;
    }

    public boolean isDynamicSensor()
    {
        android.hardware.Sensor r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.hardware.Sensor;

        $i0 = r0.<android.hardware.Sensor: int mFlags>;

        $i1 = $i0 & 32;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isWakeUpSensor()
    {
        android.hardware.Sensor r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.hardware.Sensor;

        i0 = r0.<android.hardware.Sensor: int mFlags>;

        z0 = 1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void setRange(float, float)
    {
        android.hardware.Sensor r0;
        float f0, f1;

        r0 := @this: android.hardware.Sensor;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.hardware.Sensor: float mMaxRange> = f0;

        r0.<android.hardware.Sensor: float mResolution> = f1;

        return;
    }

    public java.lang.String toString()
    {
        android.hardware.Sensor r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, $r22;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2;

        r0 := @this: android.hardware.Sensor;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{Sensor name=\"");

        $r4 = r0.<android.hardware.Sensor: java.lang.String mName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", vendor=\"");

        $r7 = r0.<android.hardware.Sensor: java.lang.String mVendor>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", version=");

        $i0 = r0.<android.hardware.Sensor: int mVersion>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");

        $i1 = r0.<android.hardware.Sensor: int mType>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxRange=");

        $f0 = r0.<android.hardware.Sensor: float mMaxRange>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", resolution=");

        $f1 = r0.<android.hardware.Sensor: float mResolution>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", power=");

        $f2 = r0.<android.hardware.Sensor: float mPower>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", minDelay=");

        $i2 = r0.<android.hardware.Sensor: int mMinDelay>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r22 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }
}
