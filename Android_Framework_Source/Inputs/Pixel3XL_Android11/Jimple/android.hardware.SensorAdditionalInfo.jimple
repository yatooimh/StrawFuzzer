public class android.hardware.SensorAdditionalInfo extends java.lang.Object
{
    public static final int TYPE_CUSTOM_INFO;
    public static final int TYPE_DEBUG_INFO;
    public static final int TYPE_DOCK_STATE;
    public static final int TYPE_FRAME_BEGIN;
    public static final int TYPE_FRAME_END;
    public static final int TYPE_HIGH_PERFORMANCE_MODE;
    public static final int TYPE_INTERNAL_TEMPERATURE;
    public static final int TYPE_LOCAL_GEOMAGNETIC_FIELD;
    public static final int TYPE_LOCAL_GRAVITY;
    public static final int TYPE_MAGNETIC_FIELD_CALIBRATION;
    public static final int TYPE_SAMPLING;
    public static final int TYPE_SENSOR_PLACEMENT;
    public static final int TYPE_UNTRACKED_DELAY;
    public static final int TYPE_VEC3_CALIBRATION;
    public final float[] floatValues;
    public final int[] intValues;
    public final android.hardware.Sensor sensor;
    public final int serial;
    public final int type;

    void <init>(android.hardware.Sensor, int, int, int[], float[])
    {
        android.hardware.SensorAdditionalInfo r0;
        android.hardware.Sensor r1;
        int i0, i1;
        int[] r2;
        float[] r3;

        r0 := @this: android.hardware.SensorAdditionalInfo;

        r1 := @parameter0: android.hardware.Sensor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: int[];

        r3 := @parameter4: float[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.SensorAdditionalInfo: android.hardware.Sensor sensor> = r1;

        r0.<android.hardware.SensorAdditionalInfo: int type> = i0;

        r0.<android.hardware.SensorAdditionalInfo: int serial> = i1;

        r0.<android.hardware.SensorAdditionalInfo: int[] intValues> = r2;

        r0.<android.hardware.SensorAdditionalInfo: float[] floatValues> = r3;

        return;
    }

    public static android.hardware.SensorAdditionalInfo createCustomInfo(android.hardware.Sensor, int, float[])
    {
        android.hardware.Sensor r0;
        int i0;
        android.hardware.SensorAdditionalInfo $r5;
        float[] r6;
        java.lang.StringBuilder $r7;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;

        r0 := @parameter0: android.hardware.Sensor;

        i0 := @parameter1: int;

        r6 := @parameter2: float[];

        if i0 < 268435456 goto label1;

        if i0 >= 1073741824 goto label1;

        if r0 == null goto label1;

        $r5 = new android.hardware.SensorAdditionalInfo;

        specialinvoke $r5.<android.hardware.SensorAdditionalInfo: void <init>(android.hardware.Sensor,int,int,int[],float[])>(r0, i0, 0, null, r6);

        return $r5;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid parameter(s): type: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; sensor: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public static android.hardware.SensorAdditionalInfo createLocalGeomagneticField(float, float, float)
    {
        float f0, f1, f2;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        double $d0, $d1, $d2;
        android.hardware.SensorAdditionalInfo $r0;
        float[] $r1;
        java.lang.IllegalArgumentException $r2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpg 10.0F;

        if $b0 < 0 goto label1;

        $b1 = f0 cmpl 100.0F;

        if $b1 > 0 goto label1;

        $b2 = f1 cmpg 0.0F;

        if $b2 < 0 goto label1;

        $d0 = (double) f1;

        $b3 = $d0 cmpl 3.141592653589793;

        if $b3 > 0 goto label1;

        $d1 = (double) f2;

        $b4 = $d1 cmpg -1.5707963267948966;

        if $b4 < 0 goto label1;

        $d2 = (double) f2;

        $b5 = $d2 cmpl 1.5707963267948966;

        if $b5 > 0 goto label1;

        $r0 = new android.hardware.SensorAdditionalInfo;

        $r1 = newarray (float)[3];

        $r1[0] = f0;

        $r1[1] = f1;

        $r1[2] = f2;

        specialinvoke $r0.<android.hardware.SensorAdditionalInfo: void <init>(android.hardware.Sensor,int,int,int[],float[])>(null, 196608, 0, null, $r1);

        return $r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Geomagnetic field info out of range");

        throw $r2;
    }

    public static void <clinit>()
    {
        <android.hardware.SensorAdditionalInfo: int TYPE_VEC3_CALIBRATION> = 65538;

        <android.hardware.SensorAdditionalInfo: int TYPE_UNTRACKED_DELAY> = 65536;

        <android.hardware.SensorAdditionalInfo: int TYPE_SENSOR_PLACEMENT> = 65539;

        <android.hardware.SensorAdditionalInfo: int TYPE_SAMPLING> = 65540;

        <android.hardware.SensorAdditionalInfo: int TYPE_MAGNETIC_FIELD_CALIBRATION> = 196612;

        <android.hardware.SensorAdditionalInfo: int TYPE_LOCAL_GRAVITY> = 196609;

        <android.hardware.SensorAdditionalInfo: int TYPE_LOCAL_GEOMAGNETIC_FIELD> = 196608;

        <android.hardware.SensorAdditionalInfo: int TYPE_INTERNAL_TEMPERATURE> = 65537;

        <android.hardware.SensorAdditionalInfo: int TYPE_HIGH_PERFORMANCE_MODE> = 196611;

        <android.hardware.SensorAdditionalInfo: int TYPE_FRAME_END> = 1;

        <android.hardware.SensorAdditionalInfo: int TYPE_FRAME_BEGIN> = 0;

        <android.hardware.SensorAdditionalInfo: int TYPE_DOCK_STATE> = 196610;

        <android.hardware.SensorAdditionalInfo: int TYPE_DEBUG_INFO> = 1073741824;

        <android.hardware.SensorAdditionalInfo: int TYPE_CUSTOM_INFO> = 268435456;

        return;
    }
}
