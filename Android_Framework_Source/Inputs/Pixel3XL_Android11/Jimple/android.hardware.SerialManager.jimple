public class android.hardware.SerialManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.hardware.ISerialManager mService;

    public void <init>(android.content.Context, android.hardware.ISerialManager)
    {
        android.hardware.SerialManager r0;
        android.content.Context r1;
        android.hardware.ISerialManager r2;

        r0 := @this: android.hardware.SerialManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.hardware.ISerialManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.SerialManager: android.content.Context mContext> = r1;

        r0.<android.hardware.SerialManager: android.hardware.ISerialManager mService> = r2;

        return;
    }

    public java.lang.String[] getSerialPorts()
    {
        android.hardware.SerialManager r0;
        android.hardware.ISerialManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String[] r4;

        r0 := @this: android.hardware.SerialManager;

     label1:
        $r1 = r0.<android.hardware.SerialManager: android.hardware.ISerialManager mService>;

        r4 = interfaceinvoke $r1.<android.hardware.ISerialManager: java.lang.String[] getSerialPorts()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.SerialPort openSerialPort(java.lang.String, int) throws java.io.IOException
    {
        android.hardware.SerialManager r0;
        int i0;
        android.hardware.ISerialManager $r1;
        java.lang.String $r4, r7;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.os.ParcelFileDescriptor r8;
        android.hardware.SerialPort r9;
        java.io.IOException r10;
        java.lang.StringBuilder r11;

        r0 := @this: android.hardware.SerialManager;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<android.hardware.SerialManager: android.hardware.ISerialManager mService>;

        r8 = interfaceinvoke $r1.<android.hardware.ISerialManager: android.os.ParcelFileDescriptor openSerialPort(java.lang.String)>(r7);

     label2:
        if r8 == null goto label5;

     label3:
        r9 = new android.hardware.SerialPort;

        specialinvoke r9.<android.hardware.SerialPort: void <init>(java.lang.String)>(r7);

        virtualinvoke r9.<android.hardware.SerialPort: void open(android.os.ParcelFileDescriptor,int)>(r8, i0);

     label4:
        return r9;

     label5:
        r10 = new java.io.IOException;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not open serial port ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r4 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r10.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw r10;

     label6:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label5 to label6 with label6;
    }

    public static void <clinit>()
    {
        <android.hardware.SerialManager: java.lang.String TAG> = "SerialManager";

        return;
    }
}
