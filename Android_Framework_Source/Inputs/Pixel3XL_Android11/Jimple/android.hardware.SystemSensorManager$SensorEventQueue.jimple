final class android.hardware.SystemSensorManager$SensorEventQueue extends android.hardware.SystemSensorManager$BaseEventQueue
{
    private final android.hardware.SensorEventListener mListener;
    private final android.util.SparseArray mSensorsEvents;

    public void <init>(android.hardware.SensorEventListener, android.os.Looper, android.hardware.SystemSensorManager, java.lang.String)
    {
        android.hardware.SystemSensorManager$SensorEventQueue r0;
        android.hardware.SensorEventListener r1;
        android.os.Looper r2;
        android.hardware.SystemSensorManager r3;
        java.lang.String r4;
        android.util.SparseArray $r5;

        r0 := @this: android.hardware.SystemSensorManager$SensorEventQueue;

        r1 := @parameter0: android.hardware.SensorEventListener;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: android.hardware.SystemSensorManager;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<android.hardware.SystemSensorManager$BaseEventQueue: void <init>(android.os.Looper,android.hardware.SystemSensorManager,int,java.lang.String)>(r2, r3, 0, r4);

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.util.SparseArray mSensorsEvents> = $r5;

        r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SensorEventListener mListener> = r1;

        return;
    }

    public void addSensorEvent(android.hardware.Sensor)
    {
        android.hardware.SystemSensorManager$SensorEventQueue r0;
        android.util.SparseArray r2, $r5;
        android.hardware.SensorEvent $r3;
        android.hardware.SystemSensorManager $r4;
        int $i0, $i1, $i2;
        java.lang.Throwable $r6;
        android.hardware.Sensor r7;

        r0 := @this: android.hardware.SystemSensorManager$SensorEventQueue;

        r7 := @parameter0: android.hardware.Sensor;

        $r3 = new android.hardware.SensorEvent;

        $r4 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SystemSensorManager mManager>;

        $i0 = staticinvoke <android.hardware.SystemSensorManager: int access$500(android.hardware.SystemSensorManager)>($r4);

        $i1 = staticinvoke <android.hardware.Sensor: int getMaxLengthValuesArray(android.hardware.Sensor,int)>(r7, $i0);

        specialinvoke $r3.<android.hardware.SensorEvent: void <init>(int)>($i1);

        r2 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.util.SparseArray mSensorsEvents>;

        entermonitor r2;

     label1:
        $r5 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.util.SparseArray mSensorsEvents>;

        $i2 = virtualinvoke r7.<android.hardware.Sensor: int getHandle()>();

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r3);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void dispatchAdditionalInfoEvent(int, int, int, float[], int[])
    {
        android.hardware.SystemSensorManager$SensorEventQueue r0;
        int i0, i1, i2;
        int[] r1;
        android.hardware.Sensor r2;
        android.hardware.SensorEventListener $r3, $r9;
        boolean $z0;
        android.hardware.SystemSensorManager $r4;
        java.util.HashMap $r5;
        java.lang.Integer $r6;
        java.lang.Object $r7;
        android.hardware.SensorAdditionalInfo $r8;
        android.hardware.SensorEventCallback $r10;
        float[] r11;

        r0 := @this: android.hardware.SystemSensorManager$SensorEventQueue;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r11 := @parameter3: float[];

        r1 := @parameter4: int[];

        $r3 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SensorEventListener mListener>;

        $z0 = $r3 instanceof android.hardware.SensorEventCallback;

        if $z0 == 0 goto label2;

        $r4 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SystemSensorManager mManager>;

        $r5 = staticinvoke <android.hardware.SystemSensorManager: java.util.HashMap access$400(android.hardware.SystemSensorManager)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r2 = (android.hardware.Sensor) $r7;

        if r2 != null goto label1;

        return;

     label1:
        $r8 = new android.hardware.SensorAdditionalInfo;

        specialinvoke $r8.<android.hardware.SensorAdditionalInfo: void <init>(android.hardware.Sensor,int,int,int[],float[])>(r2, i1, i2, r1, r11);

        $r9 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SensorEventListener mListener>;

        $r10 = (android.hardware.SensorEventCallback) $r9;

        virtualinvoke $r10.<android.hardware.SensorEventCallback: void onSensorAdditionalInfo(android.hardware.SensorAdditionalInfo)>($r8);

     label2:
        return;
    }

    protected void dispatchFlushCompleteEvent(int)
    {
        android.hardware.SystemSensorManager$SensorEventQueue r0;
        int i0;
        android.hardware.Sensor r1;
        android.hardware.SensorEventListener $r2, $r7;
        boolean $z0;
        android.hardware.SystemSensorManager $r3;
        java.util.HashMap $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;
        android.hardware.SensorEventListener2 $r8;

        r0 := @this: android.hardware.SystemSensorManager$SensorEventQueue;

        i0 := @parameter0: int;

        $r2 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SensorEventListener mListener>;

        $z0 = $r2 instanceof android.hardware.SensorEventListener2;

        if $z0 == 0 goto label2;

        $r3 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SystemSensorManager mManager>;

        $r4 = staticinvoke <android.hardware.SystemSensorManager: java.util.HashMap access$400(android.hardware.SystemSensorManager)>($r3);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r1 = (android.hardware.Sensor) $r6;

        if r1 != null goto label1;

        return;

     label1:
        $r7 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SensorEventListener mListener>;

        $r8 = (android.hardware.SensorEventListener2) $r7;

        interfaceinvoke $r8.<android.hardware.SensorEventListener2: void onFlushCompleted(android.hardware.Sensor)>(r1);

     label2:
        return;
    }

    protected void dispatchSensorEvent(int, float[], int, long)
    {
        android.hardware.SystemSensorManager$SensorEventQueue r0;
        int i0, $i2, $i3, $i4, $i5, $i6, i7, i8;
        long l1;
        android.hardware.Sensor r1, $r14;
        android.util.SparseArray r2, $r8;
        android.hardware.SensorEvent r3;
        android.hardware.SystemSensorManager $r4;
        java.util.HashMap $r5;
        java.lang.Integer $r6;
        java.lang.Object $r7, $r9;
        float[] $r10, $r11, r17;
        android.util.SparseIntArray $r12, $r13;
        android.hardware.SensorEventListener $r15, $r18;
        java.lang.Throwable $r16;

        r0 := @this: android.hardware.SystemSensorManager$SensorEventQueue;

        i0 := @parameter0: int;

        r17 := @parameter1: float[];

        i7 := @parameter2: int;

        l1 := @parameter3: long;

        $r4 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SystemSensorManager mManager>;

        $r5 = staticinvoke <android.hardware.SystemSensorManager: java.util.HashMap access$400(android.hardware.SystemSensorManager)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r1 = (android.hardware.Sensor) $r7;

        if r1 != null goto label1;

        return;

     label1:
        r2 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.util.SparseArray mSensorsEvents>;

        entermonitor r2;

     label2:
        $r8 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.util.SparseArray mSensorsEvents>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.hardware.SensorEvent) $r9;

        exitmonitor r2;

     label3:
        if r3 != null goto label4;

        return;

     label4:
        $r11 = r3.<android.hardware.SensorEvent: float[] values>;

        $r10 = r3.<android.hardware.SensorEvent: float[] values>;

        $i2 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r17, 0, $r11, 0, $i2);

        r3.<android.hardware.SensorEvent: long timestamp> = l1;

        r3.<android.hardware.SensorEvent: int accuracy> = i7;

        r3.<android.hardware.SensorEvent: android.hardware.Sensor sensor> = r1;

        $r12 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.util.SparseIntArray mSensorAccuracies>;

        i8 = virtualinvoke $r12.<android.util.SparseIntArray: int get(int)>(i0);

        $i3 = r3.<android.hardware.SensorEvent: int accuracy>;

        if $i3 < 0 goto label5;

        $i4 = r3.<android.hardware.SensorEvent: int accuracy>;

        if i8 == $i4 goto label5;

        $r13 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.util.SparseIntArray mSensorAccuracies>;

        $i5 = r3.<android.hardware.SensorEvent: int accuracy>;

        virtualinvoke $r13.<android.util.SparseIntArray: void put(int,int)>(i0, $i5);

        $r15 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SensorEventListener mListener>;

        $r14 = r3.<android.hardware.SensorEvent: android.hardware.Sensor sensor>;

        $i6 = r3.<android.hardware.SensorEvent: int accuracy>;

        interfaceinvoke $r15.<android.hardware.SensorEventListener: void onAccuracyChanged(android.hardware.Sensor,int)>($r14, $i6);

     label5:
        $r18 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.hardware.SensorEventListener mListener>;

        interfaceinvoke $r18.<android.hardware.SensorEventListener: void onSensorChanged(android.hardware.SensorEvent)>(r3);

        return;

     label6:
        $r16 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r16;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void removeSensorEvent(android.hardware.Sensor)
    {
        android.hardware.SystemSensorManager$SensorEventQueue r0;
        android.util.SparseArray r1, $r2;
        int $i0;
        java.lang.Throwable $r3;
        android.hardware.Sensor r4;

        r0 := @this: android.hardware.SystemSensorManager$SensorEventQueue;

        r4 := @parameter0: android.hardware.Sensor;

        r1 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.util.SparseArray mSensorsEvents>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.hardware.SystemSensorManager$SensorEventQueue: android.util.SparseArray mSensorsEvents>;

        $i0 = virtualinvoke r4.<android.hardware.Sensor: int getHandle()>();

        virtualinvoke $r2.<android.util.SparseArray: void delete(int)>($i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
