public class android.hardware.biometrics.BiometricPrompt extends java.lang.Object implements android.hardware.biometrics.BiometricAuthenticator, android.hardware.biometrics.BiometricConstants
{
    public static final int AUTHENTICATION_RESULT_TYPE_BIOMETRIC;
    public static final int AUTHENTICATION_RESULT_TYPE_DEVICE_CREDENTIAL;
    public static final int DISMISSED_REASON_BIOMETRIC_CONFIRMED;
    public static final int DISMISSED_REASON_BIOMETRIC_CONFIRM_NOT_REQUIRED;
    public static final int DISMISSED_REASON_CREDENTIAL_CONFIRMED;
    public static final int DISMISSED_REASON_ERROR;
    public static final int DISMISSED_REASON_NEGATIVE;
    public static final int DISMISSED_REASON_SERVER_REQUESTED;
    public static final int DISMISSED_REASON_USER_CANCEL;
    public static final java.lang.String EXTRA_DISALLOW_BIOMETRICS_IF_POLICY_EXISTS;
    public static final int HIDE_DIALOG_DELAY;
    public static final java.lang.String KEY_ALLOW_DEVICE_CREDENTIAL;
    public static final java.lang.String KEY_AUTHENTICATORS_ALLOWED;
    public static final java.lang.String KEY_DESCRIPTION;
    public static final java.lang.String KEY_DEVICE_CREDENTIAL_DESCRIPTION;
    public static final java.lang.String KEY_DEVICE_CREDENTIAL_SUBTITLE;
    public static final java.lang.String KEY_DEVICE_CREDENTIAL_TITLE;
    public static final java.lang.String KEY_NEGATIVE_TEXT;
    public static final java.lang.String KEY_RECEIVE_SYSTEM_EVENTS;
    public static final java.lang.String KEY_REQUIRE_CONFIRMATION;
    public static final java.lang.String KEY_SUBTITLE;
    public static final java.lang.String KEY_TITLE;
    public static final java.lang.String KEY_USE_DEFAULT_TITLE;
    private static final java.lang.String TAG;
    private android.hardware.biometrics.BiometricPrompt$AuthenticationCallback mAuthenticationCallback;
    private final android.hardware.biometrics.IBiometricServiceReceiver mBiometricServiceReceiver;
    private final android.os.Bundle mBundle;
    private final android.content.Context mContext;
    private android.hardware.biometrics.BiometricPrompt$CryptoObject mCryptoObject;
    private java.util.concurrent.Executor mExecutor;
    private final android.hardware.biometrics.BiometricPrompt$ButtonInfo mNegativeButtonInfo;
    private final android.hardware.biometrics.BiometricPrompt$ButtonInfo mPositiveButtonInfo;
    private final android.hardware.biometrics.IAuthService mService;
    private final android.os.IBinder mToken;

    private void <init>(android.content.Context, android.os.Bundle, android.hardware.biometrics.BiometricPrompt$ButtonInfo, android.hardware.biometrics.BiometricPrompt$ButtonInfo)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.content.Context r1;
        android.os.Bundle r2;
        android.hardware.biometrics.BiometricPrompt$ButtonInfo r3, r4;
        android.os.Binder $r5;
        android.hardware.biometrics.BiometricPrompt$1 $r6;
        android.os.IBinder $r7;
        android.hardware.biometrics.IAuthService $r8;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.hardware.biometrics.BiometricPrompt$ButtonInfo;

        r4 := @parameter3: android.hardware.biometrics.BiometricPrompt$ButtonInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.os.Binder;

        specialinvoke $r5.<android.os.Binder: void <init>()>();

        r0.<android.hardware.biometrics.BiometricPrompt: android.os.IBinder mToken> = $r5;

        $r6 = new android.hardware.biometrics.BiometricPrompt$1;

        specialinvoke $r6.<android.hardware.biometrics.BiometricPrompt$1: void <init>(android.hardware.biometrics.BiometricPrompt)>(r0);

        r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.IBiometricServiceReceiver mBiometricServiceReceiver> = $r6;

        r0.<android.hardware.biometrics.BiometricPrompt: android.content.Context mContext> = r1;

        r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle> = r2;

        r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.BiometricPrompt$ButtonInfo mPositiveButtonInfo> = r3;

        r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.BiometricPrompt$ButtonInfo mNegativeButtonInfo> = r4;

        $r7 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("auth");

        $r8 = staticinvoke <android.hardware.biometrics.IAuthService$Stub: android.hardware.biometrics.IAuthService asInterface(android.os.IBinder)>($r7);

        r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.IAuthService mService> = $r8;

        return;
    }

    void <init>(android.content.Context, android.os.Bundle, android.hardware.biometrics.BiometricPrompt$ButtonInfo, android.hardware.biometrics.BiometricPrompt$ButtonInfo, android.hardware.biometrics.BiometricPrompt$1)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.content.Context r1;
        android.os.Bundle r2;
        android.hardware.biometrics.BiometricPrompt$ButtonInfo r3, r4;
        android.hardware.biometrics.BiometricPrompt$1 r5;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.hardware.biometrics.BiometricPrompt$ButtonInfo;

        r4 := @parameter3: android.hardware.biometrics.BiometricPrompt$ButtonInfo;

        r5 := @parameter4: android.hardware.biometrics.BiometricPrompt$1;

        specialinvoke r0.<android.hardware.biometrics.BiometricPrompt: void <init>(android.content.Context,android.os.Bundle,android.hardware.biometrics.BiometricPrompt$ButtonInfo,android.hardware.biometrics.BiometricPrompt$ButtonInfo)>(r1, r2, r3, r4);

        return;
    }

    static void access$100(android.hardware.biometrics.BiometricPrompt)
    {
        android.hardware.biometrics.BiometricPrompt r0;

        r0 := @parameter0: android.hardware.biometrics.BiometricPrompt;

        specialinvoke r0.<android.hardware.biometrics.BiometricPrompt: void cancelAuthentication()>();

        return;
    }

    static java.util.concurrent.Executor access$200(android.hardware.biometrics.BiometricPrompt)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        java.util.concurrent.Executor $r1;

        r0 := @parameter0: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: java.util.concurrent.Executor mExecutor>;

        return $r1;
    }

    static android.hardware.biometrics.BiometricPrompt$ButtonInfo access$300(android.hardware.biometrics.BiometricPrompt)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.hardware.biometrics.BiometricPrompt$ButtonInfo $r1;

        r0 := @parameter0: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.BiometricPrompt$ButtonInfo mPositiveButtonInfo>;

        return $r1;
    }

    static android.hardware.biometrics.BiometricPrompt$ButtonInfo access$400(android.hardware.biometrics.BiometricPrompt)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.hardware.biometrics.BiometricPrompt$ButtonInfo $r1;

        r0 := @parameter0: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.BiometricPrompt$ButtonInfo mNegativeButtonInfo>;

        return $r1;
    }

    static android.hardware.biometrics.BiometricPrompt$AuthenticationCallback access$500(android.hardware.biometrics.BiometricPrompt)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.hardware.biometrics.BiometricPrompt$AuthenticationCallback $r1;

        r0 := @parameter0: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.BiometricPrompt$AuthenticationCallback mAuthenticationCallback>;

        return $r1;
    }

    static android.content.Context access$600(android.hardware.biometrics.BiometricPrompt)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.content.Context $r1;

        r0 := @parameter0: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.content.Context mContext>;

        return $r1;
    }

    static android.hardware.biometrics.BiometricPrompt$CryptoObject access$700(android.hardware.biometrics.BiometricPrompt)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.hardware.biometrics.BiometricPrompt$CryptoObject $r1;

        r0 := @parameter0: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.BiometricPrompt$CryptoObject mCryptoObject>;

        return $r1;
    }

    private void authenticateInternal(android.hardware.biometrics.BiometricPrompt$CryptoObject, android.os.CancellationSignal, java.util.concurrent.Executor, android.hardware.biometrics.BiometricPrompt$AuthenticationCallback, int)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.os.CancellationSignal r1;
        java.util.concurrent.Executor r2, $r19;
        android.hardware.biometrics.BiometricPrompt$AuthenticationCallback r3;
        int i0, $i1;
        boolean $z0;
        android.hardware.biometrics.BiometricPrompt$OnAuthenticationCancelListener $r5;
        android.content.Context $r6;
        android.hardware.biometrics.IAuthService $r7;
        android.os.IBinder $r8;
        android.hardware.biometrics.IBiometricServiceReceiver $r9;
        java.lang.String $r10;
        android.os.Bundle $r11, $r12, r17;
        android.os.RemoteException $r13, $r14, $r15, r18;
        android.hardware.biometrics.BiometricPrompt$CryptoObject r16;
        long l4;
        android.hardware.biometrics._$$Lambda$BiometricPrompt$Dk3E1C_ccte_BJOnzgPmi2l5r0I $r20;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        r16 := @parameter0: android.hardware.biometrics.BiometricPrompt$CryptoObject;

        r1 := @parameter1: android.os.CancellationSignal;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: android.hardware.biometrics.BiometricPrompt$AuthenticationCallback;

        i0 := @parameter4: int;

     label01:
        $z0 = virtualinvoke r1.<android.os.CancellationSignal: boolean isCanceled()>();

        if $z0 == 0 goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BiometricPrompt", "Authentication already canceled");

     label02:
        return;

     label03:
        $r5 = new android.hardware.biometrics.BiometricPrompt$OnAuthenticationCancelListener;

        specialinvoke $r5.<android.hardware.biometrics.BiometricPrompt$OnAuthenticationCancelListener: void <init>(android.hardware.biometrics.BiometricPrompt,android.hardware.biometrics.BiometricPrompt$1)>(r0, null);

     label04:
        virtualinvoke r1.<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)>($r5);

        r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.BiometricPrompt$CryptoObject mCryptoObject> = r16;

     label05:
        r0.<android.hardware.biometrics.BiometricPrompt: java.util.concurrent.Executor mExecutor> = r2;

        r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.BiometricPrompt$AuthenticationCallback mAuthenticationCallback> = r3;

     label06:
        if r16 == null goto label09;

     label07:
        l4 = virtualinvoke r16.<android.hardware.biometrics.BiometricPrompt$CryptoObject: long getOpId()>();

     label08:
        goto label10;

     label09:
        l4 = 0L;

     label10:
        if r16 == null goto label13;

     label11:
        r17 = new android.os.Bundle;

        $r11 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

        specialinvoke r17.<android.os.Bundle: void <init>(android.os.Bundle)>($r11);

        $r12 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

        $i1 = virtualinvoke $r12.<android.os.Bundle: int getInt(java.lang.String,int)>("authenticators_allowed", 15);

        virtualinvoke r17.<android.os.Bundle: void putInt(java.lang.String,int)>("authenticators_allowed", $i1);

     label12:
        goto label14;

     label13:
        r17 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

     label14:
        $r7 = r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.IAuthService mService>;

        $r8 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.IBinder mToken>;

        $r9 = r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.IBiometricServiceReceiver mBiometricServiceReceiver>;

        $r6 = r0.<android.hardware.biometrics.BiometricPrompt: android.content.Context mContext>;

        $r10 = virtualinvoke $r6.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r7.<android.hardware.biometrics.IAuthService: void authenticate(android.os.IBinder,long,int,android.hardware.biometrics.IBiometricServiceReceiver,java.lang.String,android.os.Bundle)>($r8, l4, i0, $r9, $r10, r17);

     label15:
        goto label20;

     label16:
        $r13 := @caughtexception;

        r18 = $r13;

        goto label19;

     label17:
        $r14 := @caughtexception;

        r18 = $r14;

        goto label19;

     label18:
        $r15 := @caughtexception;

        r18 = $r15;

     label19:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BiometricPrompt", "Remote exception while authenticating", r18);

        $r19 = r0.<android.hardware.biometrics.BiometricPrompt: java.util.concurrent.Executor mExecutor>;

        $r20 = new android.hardware.biometrics._$$Lambda$BiometricPrompt$Dk3E1C_ccte_BJOnzgPmi2l5r0I;

        specialinvoke $r20.<android.hardware.biometrics._$$Lambda$BiometricPrompt$Dk3E1C_ccte_BJOnzgPmi2l5r0I: void <init>(android.hardware.biometrics.BiometricPrompt,android.hardware.biometrics.BiometricPrompt$AuthenticationCallback)>(r0, r3);

        interfaceinvoke $r19.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r20);

     label20:
        return;

        catch android.os.RemoteException from label01 to label02 with label18;
        catch android.os.RemoteException from label03 to label04 with label18;
        catch android.os.RemoteException from label04 to label05 with label17;
        catch android.os.RemoteException from label05 to label06 with label16;
        catch android.os.RemoteException from label07 to label08 with label16;
        catch android.os.RemoteException from label11 to label12 with label16;
        catch android.os.RemoteException from label13 to label14 with label16;
        catch android.os.RemoteException from label14 to label15 with label16;
    }

    private void cancelAuthentication()
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.content.Context $r1;
        android.os.IBinder $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        android.hardware.biometrics.IAuthService r5;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        r5 = r0.<android.hardware.biometrics.BiometricPrompt: android.hardware.biometrics.IAuthService mService>;

        if r5 == null goto label4;

     label1:
        $r2 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.IBinder mToken>;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke r5.<android.hardware.biometrics.IAuthService: void cancelAuthentication(android.os.IBinder,java.lang.String)>($r2, $r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BiometricPrompt", "Unable to cancel authentication", $r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void authenticate(android.hardware.biometrics.BiometricPrompt$CryptoObject, android.os.CancellationSignal, java.util.concurrent.Executor, android.hardware.biometrics.BiometricPrompt$AuthenticationCallback)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.hardware.biometrics.BiometricPrompt$CryptoObject r1;
        android.os.CancellationSignal r2;
        java.util.concurrent.Executor r3;
        android.hardware.biometrics.BiometricPrompt$AuthenticationCallback r4;
        java.lang.IllegalArgumentException $r5, $r6, $r7, $r8, $r10;
        android.os.Bundle $r9;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r11;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        r1 := @parameter0: android.hardware.biometrics.BiometricPrompt$CryptoObject;

        r2 := @parameter1: android.os.CancellationSignal;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.hardware.biometrics.BiometricPrompt$AuthenticationCallback;

        if r1 == null goto label5;

        if r2 == null goto label4;

        if r3 == null goto label3;

        if r4 == null goto label2;

        $r9 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r9.<android.os.Bundle: int getInt(java.lang.String,int)>("authenticators_allowed", 15);

        $i1 = $i0 & 255;

        $i2 = $i1 & -16;

        if $i2 != 0 goto label1;

        $r11 = r0.<android.hardware.biometrics.BiometricPrompt: android.content.Context mContext>;

        $i3 = virtualinvoke $r11.<android.content.Context: int getUserId()>();

        specialinvoke r0.<android.hardware.biometrics.BiometricPrompt: void authenticateInternal(android.hardware.biometrics.BiometricPrompt$CryptoObject,android.os.CancellationSignal,java.util.concurrent.Executor,android.hardware.biometrics.BiometricPrompt$AuthenticationCallback,int)>(r1, r2, r3, r4, $i3);

        return;

     label1:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only Strong biometrics supported with crypto");

        throw $r10;

     label2:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply a callback");

        throw $r8;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply an executor");

        throw $r7;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply a cancellation signal");

        throw $r6;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply a crypto object");

        throw $r5;
    }

    public void authenticate(android.os.CancellationSignal, java.util.concurrent.Executor, android.hardware.biometrics.BiometricPrompt$AuthenticationCallback)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.os.CancellationSignal r1;
        java.util.concurrent.Executor r2;
        android.hardware.biometrics.BiometricPrompt$AuthenticationCallback r3;
        java.lang.IllegalArgumentException $r4, $r5, $r6;
        android.content.Context $r7;
        int $i0;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        r1 := @parameter0: android.os.CancellationSignal;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.biometrics.BiometricPrompt$AuthenticationCallback;

        if r1 == null goto label3;

        if r2 == null goto label2;

        if r3 == null goto label1;

        $r7 = r0.<android.hardware.biometrics.BiometricPrompt: android.content.Context mContext>;

        $i0 = virtualinvoke $r7.<android.content.Context: int getUserId()>();

        specialinvoke r0.<android.hardware.biometrics.BiometricPrompt: void authenticateInternal(android.hardware.biometrics.BiometricPrompt$CryptoObject,android.os.CancellationSignal,java.util.concurrent.Executor,android.hardware.biometrics.BiometricPrompt$AuthenticationCallback,int)>(null, r1, r2, r3, $i0);

        return;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply a callback");

        throw $r6;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply an executor");

        throw $r5;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply a cancellation signal");

        throw $r4;
    }

    public void authenticateUser(android.os.CancellationSignal, java.util.concurrent.Executor, android.hardware.biometrics.BiometricPrompt$AuthenticationCallback, int)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.os.CancellationSignal r1;
        java.util.concurrent.Executor r2;
        android.hardware.biometrics.BiometricPrompt$AuthenticationCallback r3;
        int i0;
        java.lang.IllegalArgumentException $r4, $r5, $r6;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        r1 := @parameter0: android.os.CancellationSignal;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.biometrics.BiometricPrompt$AuthenticationCallback;

        i0 := @parameter3: int;

        if r1 == null goto label3;

        if r2 == null goto label2;

        if r3 == null goto label1;

        specialinvoke r0.<android.hardware.biometrics.BiometricPrompt: void authenticateInternal(android.hardware.biometrics.BiometricPrompt$CryptoObject,android.os.CancellationSignal,java.util.concurrent.Executor,android.hardware.biometrics.BiometricPrompt$AuthenticationCallback,int)>(null, r1, r2, r3, i0);

        return;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply a callback");

        throw $r6;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply an executor");

        throw $r5;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply a cancellation signal");

        throw $r4;
    }

    public int getAllowedAuthenticators()
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("authenticators_allowed", 0);

        return $i0;
    }

    public java.lang.CharSequence getDescription()
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.os.Bundle $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("description");

        return $r2;
    }

    public java.lang.CharSequence getNegativeButtonText()
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.os.Bundle $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("negative_text");

        return $r2;
    }

    public java.lang.CharSequence getSubtitle()
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.os.Bundle $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("subtitle");

        return $r2;
    }

    public java.lang.CharSequence getTitle()
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.os.Bundle $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>("title", "");

        return $r2;
    }

    public boolean isConfirmationRequired()
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("require_confirmation", 1);

        return $z0;
    }

    public void lambda$authenticateInternal$0$BiometricPrompt(android.hardware.biometrics.BiometricPrompt$AuthenticationCallback)
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.hardware.biometrics.BiometricPrompt$AuthenticationCallback r1;
        android.content.Context $r2;
        java.lang.String $r3;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        r1 := @parameter0: android.hardware.biometrics.BiometricPrompt$AuthenticationCallback;

        $r2 = r0.<android.hardware.biometrics.BiometricPrompt: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getString(int)>(17039760);

        virtualinvoke r1.<android.hardware.biometrics.BiometricPrompt$AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)>(1, $r3);

        return;
    }

    public boolean shouldUseDefaultTitle()
    {
        android.hardware.biometrics.BiometricPrompt r0;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: android.hardware.biometrics.BiometricPrompt;

        $r1 = r0.<android.hardware.biometrics.BiometricPrompt: android.os.Bundle mBundle>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("use_default_title", 0);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.hardware.biometrics.BiometricPrompt: java.lang.String TAG> = "BiometricPrompt";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_USE_DEFAULT_TITLE> = "use_default_title";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_TITLE> = "title";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_SUBTITLE> = "subtitle";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_REQUIRE_CONFIRMATION> = "require_confirmation";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_RECEIVE_SYSTEM_EVENTS> = "receive_system_events";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_NEGATIVE_TEXT> = "negative_text";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_DEVICE_CREDENTIAL_TITLE> = "device_credential_title";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_DEVICE_CREDENTIAL_SUBTITLE> = "device_credential_subtitle";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_DEVICE_CREDENTIAL_DESCRIPTION> = "device_credential_description";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_DESCRIPTION> = "description";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_AUTHENTICATORS_ALLOWED> = "authenticators_allowed";

        <android.hardware.biometrics.BiometricPrompt: java.lang.String KEY_ALLOW_DEVICE_CREDENTIAL> = "allow_device_credential";

        <android.hardware.biometrics.BiometricPrompt: int HIDE_DIALOG_DELAY> = 2000;

        <android.hardware.biometrics.BiometricPrompt: java.lang.String EXTRA_DISALLOW_BIOMETRICS_IF_POLICY_EXISTS> = "check_dpm";

        <android.hardware.biometrics.BiometricPrompt: int DISMISSED_REASON_USER_CANCEL> = 3;

        <android.hardware.biometrics.BiometricPrompt: int DISMISSED_REASON_SERVER_REQUESTED> = 6;

        <android.hardware.biometrics.BiometricPrompt: int DISMISSED_REASON_NEGATIVE> = 2;

        <android.hardware.biometrics.BiometricPrompt: int DISMISSED_REASON_ERROR> = 5;

        <android.hardware.biometrics.BiometricPrompt: int DISMISSED_REASON_CREDENTIAL_CONFIRMED> = 7;

        <android.hardware.biometrics.BiometricPrompt: int DISMISSED_REASON_BIOMETRIC_CONFIRM_NOT_REQUIRED> = 4;

        <android.hardware.biometrics.BiometricPrompt: int DISMISSED_REASON_BIOMETRIC_CONFIRMED> = 1;

        <android.hardware.biometrics.BiometricPrompt: int AUTHENTICATION_RESULT_TYPE_DEVICE_CREDENTIAL> = 1;

        <android.hardware.biometrics.BiometricPrompt: int AUTHENTICATION_RESULT_TYPE_BIOMETRIC> = 2;

        return;
    }
}
