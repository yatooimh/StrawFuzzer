public final class android.hardware.biometrics.face.V1_0.FaceAcquiredInfo extends java.lang.Object
{
    public static final int FACE_OBSCURED;
    public static final int FACE_TOO_HIGH;
    public static final int FACE_TOO_LEFT;
    public static final int FACE_TOO_LOW;
    public static final int FACE_TOO_RIGHT;
    public static final int GOOD;
    public static final int INSUFFICIENT;
    public static final int NOT_DETECTED;
    public static final int PAN_TOO_EXTREME;
    public static final int POOR_GAZE;
    public static final int RECALIBRATE;
    public static final int ROLL_TOO_EXTREME;
    public static final int SENSOR_DIRTY;
    public static final int START;
    public static final int TILT_TOO_EXTREME;
    public static final int TOO_BRIGHT;
    public static final int TOO_CLOSE;
    public static final int TOO_DARK;
    public static final int TOO_DIFFERENT;
    public static final int TOO_FAR;
    public static final int TOO_MUCH_MOTION;
    public static final int TOO_SIMILAR;
    public static final int VENDOR;

    public void <init>()
    {
        android.hardware.biometrics.face.V1_0.FaceAcquiredInfo r0;

        r0 := @this: android.hardware.biometrics.face.V1_0.FaceAcquiredInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.String dumpBitfield(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.util.ArrayList $r2;
        java.lang.String $r3, $r6, $r8;
        java.lang.StringBuilder $r4;
        byte b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45;

        i0 := @parameter0: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        b24 = 0;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("GOOD");

        $i1 = i0 & 1;

        if $i1 != 1 goto label01;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("INSUFFICIENT");

        b24 = 0 | 1;

     label01:
        b25 = b24;

        $i2 = i0 & 2;

        if $i2 != 2 goto label02;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("TOO_BRIGHT");

        b25 = b24 | 2;

     label02:
        b26 = b25;

        $i3 = i0 & 3;

        if $i3 != 3 goto label03;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("TOO_DARK");

        b26 = b25 | 3;

     label03:
        b27 = b26;

        $i4 = i0 & 4;

        if $i4 != 4 goto label04;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("TOO_CLOSE");

        b27 = b26 | 4;

     label04:
        b28 = b27;

        $i5 = i0 & 5;

        if $i5 != 5 goto label05;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("TOO_FAR");

        b28 = b27 | 5;

     label05:
        b29 = b28;

        $i6 = i0 & 6;

        if $i6 != 6 goto label06;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("FACE_TOO_HIGH");

        b29 = b28 | 6;

     label06:
        b30 = b29;

        $i7 = i0 & 7;

        if $i7 != 7 goto label07;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("FACE_TOO_LOW");

        b30 = b29 | 7;

     label07:
        b31 = b30;

        $i8 = i0 & 8;

        if $i8 != 8 goto label08;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("FACE_TOO_RIGHT");

        b31 = b30 | 8;

     label08:
        b32 = b31;

        $i9 = i0 & 9;

        if $i9 != 9 goto label09;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("FACE_TOO_LEFT");

        b32 = b31 | 9;

     label09:
        b33 = b32;

        $i10 = i0 & 10;

        if $i10 != 10 goto label10;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("POOR_GAZE");

        b33 = b32 | 10;

     label10:
        b34 = b33;

        $i11 = i0 & 11;

        if $i11 != 11 goto label11;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("NOT_DETECTED");

        b34 = b33 | 11;

     label11:
        b35 = b34;

        $i12 = i0 & 12;

        if $i12 != 12 goto label12;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("TOO_MUCH_MOTION");

        b35 = b34 | 12;

     label12:
        b36 = b35;

        $i13 = i0 & 13;

        if $i13 != 13 goto label13;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("RECALIBRATE");

        b36 = b35 | 13;

     label13:
        b37 = b36;

        $i14 = i0 & 14;

        if $i14 != 14 goto label14;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("TOO_DIFFERENT");

        b37 = b36 | 14;

     label14:
        b38 = b37;

        $i15 = i0 & 15;

        if $i15 != 15 goto label15;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("TOO_SIMILAR");

        b38 = b37 | 15;

     label15:
        b39 = b38;

        $i16 = i0 & 16;

        if $i16 != 16 goto label16;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("PAN_TOO_EXTREME");

        b39 = b38 | 16;

     label16:
        b40 = b39;

        $i17 = i0 & 17;

        if $i17 != 17 goto label17;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("TILT_TOO_EXTREME");

        b40 = b39 | 17;

     label17:
        b41 = b40;

        $i18 = i0 & 18;

        if $i18 != 18 goto label18;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("ROLL_TOO_EXTREME");

        b41 = b40 | 18;

     label18:
        b42 = b41;

        $i19 = i0 & 19;

        if $i19 != 19 goto label19;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("FACE_OBSCURED");

        b42 = b41 | 19;

     label19:
        b43 = b42;

        $i20 = i0 & 20;

        if $i20 != 20 goto label20;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("START");

        b43 = b42 | 20;

     label20:
        b44 = b43;

        $i21 = i0 & 21;

        if $i21 != 21 goto label21;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("SENSOR_DIRTY");

        b44 = b43 | 21;

     label21:
        b45 = b44;

        $i22 = i0 & 22;

        if $i22 != 22 goto label22;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("VENDOR");

        b45 = b44 | 22;

     label22:
        if i0 == b45 goto label23;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i23 = b45 & i0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i23);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label23:
        $r3 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" | ", $r2);

        return $r3;
    }

    public static final java.lang.String toString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r5;

        i0 := @parameter0: int;

        if i0 != 0 goto label01;

        return "GOOD";

     label01:
        if i0 != 1 goto label02;

        return "INSUFFICIENT";

     label02:
        if i0 != 2 goto label03;

        return "TOO_BRIGHT";

     label03:
        if i0 != 3 goto label04;

        return "TOO_DARK";

     label04:
        if i0 != 4 goto label05;

        return "TOO_CLOSE";

     label05:
        if i0 != 5 goto label06;

        return "TOO_FAR";

     label06:
        if i0 != 6 goto label07;

        return "FACE_TOO_HIGH";

     label07:
        if i0 != 7 goto label08;

        return "FACE_TOO_LOW";

     label08:
        if i0 != 8 goto label09;

        return "FACE_TOO_RIGHT";

     label09:
        if i0 != 9 goto label10;

        return "FACE_TOO_LEFT";

     label10:
        if i0 != 10 goto label11;

        return "POOR_GAZE";

     label11:
        if i0 != 11 goto label12;

        return "NOT_DETECTED";

     label12:
        if i0 != 12 goto label13;

        return "TOO_MUCH_MOTION";

     label13:
        if i0 != 13 goto label14;

        return "RECALIBRATE";

     label14:
        if i0 != 14 goto label15;

        return "TOO_DIFFERENT";

     label15:
        if i0 != 15 goto label16;

        return "TOO_SIMILAR";

     label16:
        if i0 != 16 goto label17;

        return "PAN_TOO_EXTREME";

     label17:
        if i0 != 17 goto label18;

        return "TILT_TOO_EXTREME";

     label18:
        if i0 != 18 goto label19;

        return "ROLL_TOO_EXTREME";

     label19:
        if i0 != 19 goto label20;

        return "FACE_OBSCURED";

     label20:
        if i0 != 20 goto label21;

        return "START";

     label21:
        if i0 != 21 goto label22;

        return "SENSOR_DIRTY";

     label22:
        if i0 != 22 goto label23;

        return "VENDOR";

     label23:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int VENDOR> = 22;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int TOO_SIMILAR> = 15;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int TOO_MUCH_MOTION> = 12;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int TOO_FAR> = 5;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int TOO_DIFFERENT> = 14;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int TOO_DARK> = 3;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int TOO_CLOSE> = 4;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int TOO_BRIGHT> = 2;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int TILT_TOO_EXTREME> = 17;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int START> = 20;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int SENSOR_DIRTY> = 21;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int ROLL_TOO_EXTREME> = 18;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int RECALIBRATE> = 13;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int POOR_GAZE> = 10;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int PAN_TOO_EXTREME> = 16;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int NOT_DETECTED> = 11;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int INSUFFICIENT> = 1;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int GOOD> = 0;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int FACE_TOO_RIGHT> = 8;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int FACE_TOO_LOW> = 7;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int FACE_TOO_LEFT> = 9;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int FACE_TOO_HIGH> = 6;

        <android.hardware.biometrics.face.V1_0.FaceAcquiredInfo: int FACE_OBSCURED> = 19;

        return;
    }
}
