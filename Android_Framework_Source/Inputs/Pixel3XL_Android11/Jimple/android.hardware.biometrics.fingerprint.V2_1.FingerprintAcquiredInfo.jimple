public final class android.hardware.biometrics.fingerprint.V2_1.FingerprintAcquiredInfo extends java.lang.Object
{
    public static final int ACQUIRED_GOOD;
    public static final int ACQUIRED_IMAGER_DIRTY;
    public static final int ACQUIRED_INSUFFICIENT;
    public static final int ACQUIRED_PARTIAL;
    public static final int ACQUIRED_TOO_FAST;
    public static final int ACQUIRED_TOO_SLOW;
    public static final int ACQUIRED_VENDOR;

    public void <init>()
    {
        android.hardware.biometrics.fingerprint.V2_1.FingerprintAcquiredInfo r0;

        r0 := @this: android.hardware.biometrics.fingerprint.V2_1.FingerprintAcquiredInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.String dumpBitfield(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.ArrayList $r2;
        java.lang.String $r3, $r6, $r8;
        java.lang.StringBuilder $r4;
        byte b8, b9, b10, b11, b12, b13;

        i0 := @parameter0: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        b8 = 0;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("ACQUIRED_GOOD");

        $i1 = i0 & 1;

        if $i1 != 1 goto label1;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("ACQUIRED_PARTIAL");

        b8 = 0 | 1;

     label1:
        b9 = b8;

        $i2 = i0 & 2;

        if $i2 != 2 goto label2;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("ACQUIRED_INSUFFICIENT");

        b9 = b8 | 2;

     label2:
        b10 = b9;

        $i3 = i0 & 3;

        if $i3 != 3 goto label3;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("ACQUIRED_IMAGER_DIRTY");

        b10 = b9 | 3;

     label3:
        b11 = b10;

        $i4 = i0 & 4;

        if $i4 != 4 goto label4;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("ACQUIRED_TOO_SLOW");

        b11 = b10 | 4;

     label4:
        b12 = b11;

        $i5 = i0 & 5;

        if $i5 != 5 goto label5;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("ACQUIRED_TOO_FAST");

        b12 = b11 | 5;

     label5:
        b13 = b12;

        $i6 = i0 & 6;

        if $i6 != 6 goto label6;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("ACQUIRED_VENDOR");

        b13 = b12 | 6;

     label6:
        if i0 == b13 goto label7;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i7 = b13 & i0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label7:
        $r3 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" | ", $r2);

        return $r3;
    }

    public static final java.lang.String toString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r5;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return "ACQUIRED_GOOD";

     label1:
        if i0 != 1 goto label2;

        return "ACQUIRED_PARTIAL";

     label2:
        if i0 != 2 goto label3;

        return "ACQUIRED_INSUFFICIENT";

     label3:
        if i0 != 3 goto label4;

        return "ACQUIRED_IMAGER_DIRTY";

     label4:
        if i0 != 4 goto label5;

        return "ACQUIRED_TOO_SLOW";

     label5:
        if i0 != 5 goto label6;

        return "ACQUIRED_TOO_FAST";

     label6:
        if i0 != 6 goto label7;

        return "ACQUIRED_VENDOR";

     label7:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <android.hardware.biometrics.fingerprint.V2_1.FingerprintAcquiredInfo: int ACQUIRED_VENDOR> = 6;

        <android.hardware.biometrics.fingerprint.V2_1.FingerprintAcquiredInfo: int ACQUIRED_TOO_SLOW> = 4;

        <android.hardware.biometrics.fingerprint.V2_1.FingerprintAcquiredInfo: int ACQUIRED_TOO_FAST> = 5;

        <android.hardware.biometrics.fingerprint.V2_1.FingerprintAcquiredInfo: int ACQUIRED_PARTIAL> = 1;

        <android.hardware.biometrics.fingerprint.V2_1.FingerprintAcquiredInfo: int ACQUIRED_INSUFFICIENT> = 2;

        <android.hardware.biometrics.fingerprint.V2_1.FingerprintAcquiredInfo: int ACQUIRED_IMAGER_DIRTY> = 3;

        <android.hardware.biometrics.fingerprint.V2_1.FingerprintAcquiredInfo: int ACQUIRED_GOOD> = 0;

        return;
    }
}
