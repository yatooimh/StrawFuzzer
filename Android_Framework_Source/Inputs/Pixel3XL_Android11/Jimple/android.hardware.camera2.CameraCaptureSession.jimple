public abstract class android.hardware.camera2.CameraCaptureSession extends java.lang.Object implements java.lang.AutoCloseable
{
    public static final int SESSION_ID_NONE;

    public void <init>()
    {
        android.hardware.camera2.CameraCaptureSession r0;

        r0 := @this: android.hardware.camera2.CameraCaptureSession;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void abortCaptures() throws android.hardware.camera2.CameraAccessException;

    public abstract int capture(android.hardware.camera2.CaptureRequest, android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.os.Handler) throws android.hardware.camera2.CameraAccessException;

    public abstract int captureBurst(java.util.List, android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.os.Handler) throws android.hardware.camera2.CameraAccessException;

    public int captureBurstRequests(java.util.List, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        android.hardware.camera2.CameraCaptureSession r0;
        java.util.List r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.hardware.camera2.CameraCaptureSession;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Subclasses must override this method");

        throw $r4;
    }

    public int captureSingleRequest(android.hardware.camera2.CaptureRequest, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        android.hardware.camera2.CameraCaptureSession r0;
        android.hardware.camera2.CaptureRequest r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.hardware.camera2.CameraCaptureSession;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Subclasses must override this method");

        throw $r4;
    }

    public abstract void close();

    public abstract void finalizeOutputConfigurations(java.util.List) throws android.hardware.camera2.CameraAccessException;

    public abstract android.hardware.camera2.CameraDevice getDevice();

    public abstract android.view.Surface getInputSurface();

    public abstract boolean isReprocessable();

    public abstract void prepare(int, android.view.Surface) throws android.hardware.camera2.CameraAccessException;

    public abstract void prepare(android.view.Surface) throws android.hardware.camera2.CameraAccessException;

    public abstract int setRepeatingBurst(java.util.List, android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.os.Handler) throws android.hardware.camera2.CameraAccessException;

    public int setRepeatingBurstRequests(java.util.List, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        android.hardware.camera2.CameraCaptureSession r0;
        java.util.List r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.hardware.camera2.CameraCaptureSession;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Subclasses must override this method");

        throw $r4;
    }

    public abstract int setRepeatingRequest(android.hardware.camera2.CaptureRequest, android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.os.Handler) throws android.hardware.camera2.CameraAccessException;

    public int setSingleRepeatingRequest(android.hardware.camera2.CaptureRequest, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback) throws android.hardware.camera2.CameraAccessException
    {
        android.hardware.camera2.CameraCaptureSession r0;
        android.hardware.camera2.CaptureRequest r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.hardware.camera2.CameraCaptureSession;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Subclasses must override this method");

        throw $r4;
    }

    public abstract void stopRepeating() throws android.hardware.camera2.CameraAccessException;

    public boolean supportsOfflineProcessing(android.view.Surface)
    {
        android.hardware.camera2.CameraCaptureSession r0;
        android.view.Surface r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.hardware.camera2.CameraCaptureSession;

        r1 := @parameter0: android.view.Surface;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Subclasses must override this method");

        throw $r2;
    }

    public android.hardware.camera2.CameraOfflineSession switchToOffline(java.util.Collection, java.util.concurrent.Executor, android.hardware.camera2.CameraOfflineSession$CameraOfflineSessionCallback) throws android.hardware.camera2.CameraAccessException
    {
        android.hardware.camera2.CameraCaptureSession r0;
        java.util.Collection r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraOfflineSession$CameraOfflineSessionCallback r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.hardware.camera2.CameraCaptureSession;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraOfflineSession$CameraOfflineSessionCallback;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Subclasses must override this method");

        throw $r4;
    }

    public abstract void tearDown(android.view.Surface) throws android.hardware.camera2.CameraAccessException;

    public void updateOutputConfiguration(android.hardware.camera2.params.OutputConfiguration) throws android.hardware.camera2.CameraAccessException
    {
        android.hardware.camera2.CameraCaptureSession r0;
        android.hardware.camera2.params.OutputConfiguration r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.hardware.camera2.CameraCaptureSession;

        r1 := @parameter0: android.hardware.camera2.params.OutputConfiguration;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Subclasses must override this method");

        throw $r2;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.CameraCaptureSession: int SESSION_ID_NONE> = -1;

        return;
    }
}
