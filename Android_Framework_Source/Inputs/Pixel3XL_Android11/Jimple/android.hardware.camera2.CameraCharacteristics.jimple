public final class android.hardware.camera2.CameraCharacteristics extends android.hardware.camera2.CameraMetadata
{
    public static final android.hardware.camera2.CameraCharacteristics$Key COLOR_CORRECTION_AVAILABLE_ABERRATION_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_ANTIBANDING_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_COMPENSATION_RANGE;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_COMPENSATION_STEP;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_LOCK_AVAILABLE;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AF_AVAILABLE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_EFFECTS;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_EXTENDED_SCENE_MODE_CAPABILITIES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_EXTENDED_SCENE_MODE_MAX_SIZES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_EXTENDED_SCENE_MODE_ZOOM_RATIO_RANGES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_HIGH_SPEED_VIDEO_CONFIGURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_SCENE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AWB_AVAILABLE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AWB_LOCK_AVAILABLE;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AE;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AF;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AWB;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_POST_RAW_SENSITIVITY_BOOST_RANGE;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_ZOOM_RATIO_RANGE;
    public static final android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DEPTH_MIN_FRAME_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DEPTH_STALL_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DEPTH_STREAM_CONFIGURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DYNAMIC_DEPTH_MIN_FRAME_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DYNAMIC_DEPTH_STALL_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DYNAMIC_DEPTH_STREAM_CONFIGURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_RECOMMENDED_DEPTH_STREAM_CONFIGURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key DEPTH_DEPTH_IS_EXCLUSIVE;
    public static final android.hardware.camera2.CameraCharacteristics$Key DISTORTION_CORRECTION_AVAILABLE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key EDGE_AVAILABLE_EDGE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key FLASH_INFO_AVAILABLE;
    public static final android.hardware.camera2.CameraCharacteristics$Key HEIC_AVAILABLE_HEIC_MIN_FRAME_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key HEIC_AVAILABLE_HEIC_STALL_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key HEIC_AVAILABLE_HEIC_STREAM_CONFIGURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key HOT_PIXEL_AVAILABLE_HOT_PIXEL_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key INFO_SUPPORTED_HARDWARE_LEVEL;
    public static final android.hardware.camera2.CameraCharacteristics$Key INFO_VERSION;
    public static final android.hardware.camera2.CameraCharacteristics$Key JPEG_AVAILABLE_THUMBNAIL_SIZES;
    public static final android.hardware.camera2.CameraCharacteristics$Key LED_AVAILABLE_LEDS;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_DISTORTION;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_FACING;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_APERTURES;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_FILTER_DENSITIES;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_FOCAL_LENGTHS;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_OPTICAL_STABILIZATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_FOCUS_DISTANCE_CALIBRATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_HYPERFOCAL_DISTANCE;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_MINIMUM_FOCUS_DISTANCE;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_SHADING_MAP_SIZE;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INTRINSIC_CALIBRATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_POSE_REFERENCE;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_POSE_ROTATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_POSE_TRANSLATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_RADIAL_DISTORTION;
    public static final android.hardware.camera2.CameraCharacteristics$Key LOGICAL_MULTI_CAMERA_PHYSICAL_IDS;
    public static final android.hardware.camera2.CameraCharacteristics$Key LOGICAL_MULTI_CAMERA_SENSOR_SYNC_TYPE;
    public static final android.hardware.camera2.CameraCharacteristics$Key NOISE_REDUCTION_AVAILABLE_NOISE_REDUCTION_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key QUIRKS_USE_PARTIAL_RESULT;
    public static final android.hardware.camera2.CameraCharacteristics$Key REPROCESS_MAX_CAPTURE_STALL;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CAPABILITIES;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CHARACTERISTICS_KEYS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_PHYSICAL_CAMERA_REQUEST_KEYS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_REQUEST_KEYS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_RESULT_KEYS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_SESSION_KEYS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_CHARACTERISTIC_KEYS_NEEDING_PERMISSION;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_INPUT_STREAMS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC_STALLING;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_RAW;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_STREAMS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_PARTIAL_RESULT_COUNT;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_PIPELINE_MAX_DEPTH;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_FORMATS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_INPUT_OUTPUT_FORMATS_MAP;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_JPEG_MIN_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_JPEG_SIZES;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_MAX_DIGITAL_ZOOM;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_MIN_FRAME_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_PROCESSED_MIN_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_PROCESSED_SIZES;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_RECOMMENDED_INPUT_OUTPUT_FORMATS_MAP;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_RECOMMENDED_STREAM_CONFIGURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_ROTATE_AND_CROP_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_STALL_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_STREAM_CONFIGURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_CROPPING_TYPE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_MANDATORY_CONCURRENT_STREAM_COMBINATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_MANDATORY_STREAM_COMBINATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_STREAM_CONFIGURATION_MAP;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_AVAILABLE_TEST_PATTERN_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_BLACK_LEVEL_PATTERN;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_CALIBRATION_TRANSFORM1;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_CALIBRATION_TRANSFORM2;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_COLOR_TRANSFORM1;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_COLOR_TRANSFORM2;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_FORWARD_MATRIX1;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_FORWARD_MATRIX2;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_ACTIVE_ARRAY_SIZE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_COLOR_FILTER_ARRANGEMENT;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_EXPOSURE_TIME_RANGE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_LENS_SHADING_APPLIED;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_MAX_FRAME_DURATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_PHYSICAL_SIZE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_PIXEL_ARRAY_SIZE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_SENSITIVITY_RANGE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_TIMESTAMP_SOURCE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_WHITE_LEVEL;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_MAX_ANALOG_SENSITIVITY;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_OPTICAL_BLACK_REGIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_ORIENTATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_REFERENCE_ILLUMINANT1;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_REFERENCE_ILLUMINANT2;
    public static final android.hardware.camera2.CameraCharacteristics$Key SHADING_AVAILABLE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_FACE_DETECT_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_HOT_PIXEL_MAP_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_LENS_SHADING_MAP_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_OIS_DATA_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_MAX_FACE_COUNT;
    public static final android.hardware.camera2.CameraCharacteristics$Key SYNC_MAX_LATENCY;
    public static final android.hardware.camera2.CameraCharacteristics$Key TONEMAP_AVAILABLE_TONE_MAP_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key TONEMAP_MAX_CURVE_POINTS;
    private java.util.List mAvailablePhysicalRequestKeys;
    private java.util.List mAvailableRequestKeys;
    private java.util.List mAvailableResultKeys;
    private java.util.List mAvailableSessionKeys;
    private java.util.List mKeys;
    private java.util.List mKeysNeedingPermission;
    private final android.hardware.camera2.impl.CameraMetadataNative mProperties;
    private java.util.ArrayList mRecommendedConfigurations;

    static void <clinit>()
    {
        android.hardware.camera2.CameraCharacteristics$Key $r0, $r1, $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r18, $r20, $r21, $r23, $r25, $r26, $r28, $r29, $r30, $r31, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r44, $r46, $r47, $r49, $r51, $r52, $r53, $r54, $r55, $r57, $r58, $r59, $r61, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r103, $r105, $r107, $r109, $r110, $r111, $r113, $r115, $r117, $r118, $r120, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r131, $r133, $r134, $r135, $r136, $r137, $r139, $r140, $r141, $r142, $r144, $r145, $r146, $r148, $r149, $r151, $r153, $r154, $r155, $r156, $r158, $r159, $r160, $r161, $r162, $r163, $r165, $r166, $r167, $r168;
        android.hardware.camera2.CameraCharacteristics$1 $r4;
        android.hardware.camera2.CameraCharacteristics$2 $r6;
        java.lang.Class $r15, $r17, $r19, $r22, $r24, $r35, $r43, $r45, $r48, $r50, $r56, $r60, $r63, $r65, $r67, $r69, $r71, $r73, $r85, $r94, $r104, $r108, $r112, $r114, $r116, $r119, $r121, $r130, $r132, $r138, $r143, $r147, $r150, $r152, $r157, $r164;
        android.hardware.camera2.CameraCharacteristics$3 $r27;
        android.hardware.camera2.CameraCharacteristics$4 $r32;
        android.hardware.camera2.CameraCharacteristics$5 $r102;
        android.hardware.camera2.CameraCharacteristics$6 $r106;

        $r0 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r0.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.colorCorrection.availableAberrationModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key COLOR_CORRECTION_AVAILABLE_ABERRATION_MODES> = $r0;

        $r1 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r1.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeAvailableAntibandingModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_ANTIBANDING_MODES> = $r1;

        $r2 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r2.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeAvailableModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_MODES> = $r2;

        $r3 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r4 = new android.hardware.camera2.CameraCharacteristics$1;

        specialinvoke $r4.<android.hardware.camera2.CameraCharacteristics$1: void <init>()>();

        specialinvoke $r3.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.control.aeAvailableTargetFpsRanges", $r4);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES> = $r3;

        $r5 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r6 = new android.hardware.camera2.CameraCharacteristics$2;

        specialinvoke $r6.<android.hardware.camera2.CameraCharacteristics$2: void <init>()>();

        specialinvoke $r5.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.control.aeCompensationRange", $r6);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_COMPENSATION_RANGE> = $r5;

        $r7 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r7.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeCompensationStep", class "Landroid/util/Rational;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_COMPENSATION_STEP> = $r7;

        $r8 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r8.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.afAvailableModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AF_AVAILABLE_MODES> = $r8;

        $r9 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r9.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableEffects", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_EFFECTS> = $r9;

        $r10 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r10.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableSceneModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_SCENE_MODES> = $r10;

        $r11 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r11.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableVideoStabilizationModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES> = $r11;

        $r12 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r12.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.awbAvailableModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AWB_AVAILABLE_MODES> = $r12;

        $r13 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r13.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.maxRegions", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS> = $r13;

        $r14 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r15 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r14.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.maxRegionsAe", $r15);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AE> = $r14;

        $r16 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r17 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r16.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.maxRegionsAwb", $r17);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AWB> = $r16;

        $r18 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r19 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r18.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.maxRegionsAf", $r19);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AF> = $r18;

        $r20 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r20.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableHighSpeedVideoConfigurations", class "[Landroid/hardware/camera2/params/HighSpeedVideoConfiguration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_HIGH_SPEED_VIDEO_CONFIGURATIONS> = $r20;

        $r21 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r22 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r21.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeLockAvailable", $r22);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_LOCK_AVAILABLE> = $r21;

        $r23 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r24 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r23.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.awbLockAvailable", $r24);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AWB_LOCK_AVAILABLE> = $r23;

        $r25 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r25.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_MODES> = $r25;

        $r26 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r27 = new android.hardware.camera2.CameraCharacteristics$3;

        specialinvoke $r27.<android.hardware.camera2.CameraCharacteristics$3: void <init>()>();

        specialinvoke $r26.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.control.postRawSensitivityBoostRange", $r27);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_POST_RAW_SENSITIVITY_BOOST_RANGE> = $r26;

        $r28 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r28.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableExtendedSceneModeMaxSizes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_EXTENDED_SCENE_MODE_MAX_SIZES> = $r28;

        $r29 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r29.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableExtendedSceneModeZoomRatioRanges", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_EXTENDED_SCENE_MODE_ZOOM_RATIO_RANGES> = $r29;

        $r30 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r30.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableExtendedSceneModeCapabilities", class "[Landroid/hardware/camera2/params/Capability;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_EXTENDED_SCENE_MODE_CAPABILITIES> = $r30;

        $r31 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r32 = new android.hardware.camera2.CameraCharacteristics$4;

        specialinvoke $r32.<android.hardware.camera2.CameraCharacteristics$4: void <init>()>();

        specialinvoke $r31.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.control.zoomRatioRange", $r32);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_ZOOM_RATIO_RANGE> = $r31;

        $r33 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r33.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.edge.availableEdgeModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key EDGE_AVAILABLE_EDGE_MODES> = $r33;

        $r34 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r35 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r34.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.flash.info.available", $r35);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key FLASH_INFO_AVAILABLE> = $r34;

        $r36 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r36.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.hotPixel.availableHotPixelModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key HOT_PIXEL_AVAILABLE_HOT_PIXEL_MODES> = $r36;

        $r37 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r37.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.jpeg.availableThumbnailSizes", class "[Landroid/util/Size;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key JPEG_AVAILABLE_THUMBNAIL_SIZES> = $r37;

        $r38 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r38.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.availableApertures", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_APERTURES> = $r38;

        $r39 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r39.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.availableFilterDensities", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_FILTER_DENSITIES> = $r39;

        $r40 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r40.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.availableFocalLengths", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_FOCAL_LENGTHS> = $r40;

        $r41 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r41.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.availableOpticalStabilization", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_OPTICAL_STABILIZATION> = $r41;

        $r42 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r43 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r42.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.hyperfocalDistance", $r43);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_HYPERFOCAL_DISTANCE> = $r42;

        $r44 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r45 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r44.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.minimumFocusDistance", $r45);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_MINIMUM_FOCUS_DISTANCE> = $r44;

        $r46 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r46.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.shadingMapSize", class "Landroid/util/Size;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_SHADING_MAP_SIZE> = $r46;

        $r47 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r48 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r47.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.focusDistanceCalibration", $r48);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_FOCUS_DISTANCE_CALIBRATION> = $r47;

        $r49 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r50 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r49.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.facing", $r50);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_FACING> = $r49;

        $r51 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r51.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.poseRotation", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_POSE_ROTATION> = $r51;

        $r52 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r52.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.poseTranslation", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_POSE_TRANSLATION> = $r52;

        $r53 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r53.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.intrinsicCalibration", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INTRINSIC_CALIBRATION> = $r53;

        $r54 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r54.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.radialDistortion", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_RADIAL_DISTORTION> = $r54;

        $r55 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r56 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r55.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.poseReference", $r56);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_POSE_REFERENCE> = $r55;

        $r57 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r57.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.distortion", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_DISTORTION> = $r57;

        $r58 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r58.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.noiseReduction.availableNoiseReductionModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key NOISE_REDUCTION_AVAILABLE_NOISE_REDUCTION_MODES> = $r58;

        $r59 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r60 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r59.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.quirks.usePartialResult", $r60);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key QUIRKS_USE_PARTIAL_RESULT> = $r59;

        $r61 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r61.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.maxNumOutputStreams", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_STREAMS> = $r61;

        $r62 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r63 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r62.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.maxNumOutputRaw", $r63);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_RAW> = $r62;

        $r64 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r65 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r64.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.maxNumOutputProc", $r65);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC> = $r64;

        $r66 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r67 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r66.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.maxNumOutputProcStalling", $r67);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC_STALLING> = $r66;

        $r68 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r69 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r68.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.maxNumInputStreams", $r69);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_INPUT_STREAMS> = $r68;

        $r70 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r71 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r70.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.pipelineMaxDepth", $r71);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_PIPELINE_MAX_DEPTH> = $r70;

        $r72 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r73 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r72.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.partialResultCount", $r73);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_PARTIAL_RESULT_COUNT> = $r72;

        $r74 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r74.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.availableCapabilities", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CAPABILITIES> = $r74;

        $r75 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r75.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.availableRequestKeys", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_REQUEST_KEYS> = $r75;

        $r76 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r76.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.availableResultKeys", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_RESULT_KEYS> = $r76;

        $r77 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r77.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.availableCharacteristicsKeys", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CHARACTERISTICS_KEYS> = $r77;

        $r78 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r78.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.availableSessionKeys", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_SESSION_KEYS> = $r78;

        $r79 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r79.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.availablePhysicalCameraRequestKeys", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_PHYSICAL_CAMERA_REQUEST_KEYS> = $r79;

        $r80 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r80.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.characteristicKeysNeedingPermission", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_CHARACTERISTIC_KEYS_NEEDING_PERMISSION> = $r80;

        $r81 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r81.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableFormats", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_FORMATS> = $r81;

        $r82 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r82.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableJpegMinDurations", class "[J");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_JPEG_MIN_DURATIONS> = $r82;

        $r83 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r83.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableJpegSizes", class "[Landroid/util/Size;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_JPEG_SIZES> = $r83;

        $r84 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r85 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r84.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableMaxDigitalZoom", $r85);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_MAX_DIGITAL_ZOOM> = $r84;

        $r86 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r86.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableProcessedMinDurations", class "[J");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_PROCESSED_MIN_DURATIONS> = $r86;

        $r87 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r87.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableProcessedSizes", class "[Landroid/util/Size;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_PROCESSED_SIZES> = $r87;

        $r88 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r88.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableInputOutputFormatsMap", class "Landroid/hardware/camera2/params/ReprocessFormatsMap;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_INPUT_OUTPUT_FORMATS_MAP> = $r88;

        $r89 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r89.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableStreamConfigurations", class "[Landroid/hardware/camera2/params/StreamConfiguration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_STREAM_CONFIGURATIONS> = $r89;

        $r90 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r90.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableMinFrameDurations", class "[Landroid/hardware/camera2/params/StreamConfigurationDuration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_MIN_FRAME_DURATIONS> = $r90;

        $r91 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r91.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableStallDurations", class "[Landroid/hardware/camera2/params/StreamConfigurationDuration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_STALL_DURATIONS> = $r91;

        $r92 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r92.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.streamConfigurationMap", class "Landroid/hardware/camera2/params/StreamConfigurationMap;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_STREAM_CONFIGURATION_MAP> = $r92;

        $r93 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r94 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r93.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.croppingType", $r94);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_CROPPING_TYPE> = $r93;

        $r95 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r95.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableRecommendedStreamConfigurations", class "[Landroid/hardware/camera2/params/RecommendedStreamConfiguration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_RECOMMENDED_STREAM_CONFIGURATIONS> = $r95;

        $r96 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r96.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableRecommendedInputOutputFormatsMap", class "Landroid/hardware/camera2/params/ReprocessFormatsMap;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_RECOMMENDED_INPUT_OUTPUT_FORMATS_MAP> = $r96;

        $r97 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r97.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.mandatoryStreamCombinations", class "[Landroid/hardware/camera2/params/MandatoryStreamCombination;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_MANDATORY_STREAM_COMBINATIONS> = $r97;

        $r98 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r98.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.mandatoryConcurrentStreamCombinations", class "[Landroid/hardware/camera2/params/MandatoryStreamCombination;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_MANDATORY_CONCURRENT_STREAM_COMBINATIONS> = $r98;

        $r99 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r99.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableRotateAndCropModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_ROTATE_AND_CROP_MODES> = $r99;

        $r100 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r100.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.activeArraySize", class "Landroid/graphics/Rect;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_ACTIVE_ARRAY_SIZE> = $r100;

        $r101 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r102 = new android.hardware.camera2.CameraCharacteristics$5;

        specialinvoke $r102.<android.hardware.camera2.CameraCharacteristics$5: void <init>()>();

        specialinvoke $r101.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.sensor.info.sensitivityRange", $r102);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_SENSITIVITY_RANGE> = $r101;

        $r103 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r104 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r103.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.colorFilterArrangement", $r104);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_COLOR_FILTER_ARRANGEMENT> = $r103;

        $r105 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r106 = new android.hardware.camera2.CameraCharacteristics$6;

        specialinvoke $r106.<android.hardware.camera2.CameraCharacteristics$6: void <init>()>();

        specialinvoke $r105.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.sensor.info.exposureTimeRange", $r106);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_EXPOSURE_TIME_RANGE> = $r105;

        $r107 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r108 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r107.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.maxFrameDuration", $r108);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_MAX_FRAME_DURATION> = $r107;

        $r109 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r109.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.physicalSize", class "Landroid/util/SizeF;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_PHYSICAL_SIZE> = $r109;

        $r110 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r110.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.pixelArraySize", class "Landroid/util/Size;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_PIXEL_ARRAY_SIZE> = $r110;

        $r111 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r112 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r111.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.whiteLevel", $r112);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_WHITE_LEVEL> = $r111;

        $r113 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r114 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r113.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.timestampSource", $r114);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_TIMESTAMP_SOURCE> = $r113;

        $r115 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r116 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r115.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.lensShadingApplied", $r116);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_LENS_SHADING_APPLIED> = $r115;

        $r117 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r117.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.preCorrectionActiveArraySize", class "Landroid/graphics/Rect;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE> = $r117;

        $r118 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r119 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r118.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.referenceIlluminant1", $r119);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_REFERENCE_ILLUMINANT1> = $r118;

        $r120 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r121 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r120.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.referenceIlluminant2", $r121);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_REFERENCE_ILLUMINANT2> = $r120;

        $r122 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r122.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.calibrationTransform1", class "Landroid/hardware/camera2/params/ColorSpaceTransform;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_CALIBRATION_TRANSFORM1> = $r122;

        $r123 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r123.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.calibrationTransform2", class "Landroid/hardware/camera2/params/ColorSpaceTransform;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_CALIBRATION_TRANSFORM2> = $r123;

        $r124 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r124.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.colorTransform1", class "Landroid/hardware/camera2/params/ColorSpaceTransform;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_COLOR_TRANSFORM1> = $r124;

        $r125 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r125.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.colorTransform2", class "Landroid/hardware/camera2/params/ColorSpaceTransform;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_COLOR_TRANSFORM2> = $r125;

        $r126 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r126.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.forwardMatrix1", class "Landroid/hardware/camera2/params/ColorSpaceTransform;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_FORWARD_MATRIX1> = $r126;

        $r127 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r127.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.forwardMatrix2", class "Landroid/hardware/camera2/params/ColorSpaceTransform;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_FORWARD_MATRIX2> = $r127;

        $r128 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r128.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.blackLevelPattern", class "Landroid/hardware/camera2/params/BlackLevelPattern;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_BLACK_LEVEL_PATTERN> = $r128;

        $r129 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r130 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r129.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.maxAnalogSensitivity", $r130);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_MAX_ANALOG_SENSITIVITY> = $r129;

        $r131 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r132 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r131.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.orientation", $r132);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_ORIENTATION> = $r131;

        $r133 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r133.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.availableTestPatternModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_AVAILABLE_TEST_PATTERN_MODES> = $r133;

        $r134 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r134.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.opticalBlackRegions", class "[Landroid/graphics/Rect;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_OPTICAL_BLACK_REGIONS> = $r134;

        $r135 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r135.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.shading.availableModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SHADING_AVAILABLE_MODES> = $r135;

        $r136 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r136.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.info.availableFaceDetectModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_FACE_DETECT_MODES> = $r136;

        $r137 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r138 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r137.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.info.maxFaceCount", $r138);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_MAX_FACE_COUNT> = $r137;

        $r139 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r139.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.info.availableHotPixelMapModes", class "[Z");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_HOT_PIXEL_MAP_MODES> = $r139;

        $r140 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r140.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.info.availableLensShadingMapModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_LENS_SHADING_MAP_MODES> = $r140;

        $r141 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r141.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.info.availableOisDataModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_OIS_DATA_MODES> = $r141;

        $r142 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r143 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r142.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.maxCurvePoints", $r143);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key TONEMAP_MAX_CURVE_POINTS> = $r142;

        $r144 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r144.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.availableToneMapModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key TONEMAP_AVAILABLE_TONE_MAP_MODES> = $r144;

        $r145 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r145.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.led.availableLeds", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LED_AVAILABLE_LEDS> = $r145;

        $r146 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r147 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r146.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.info.supportedHardwareLevel", $r147);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key INFO_SUPPORTED_HARDWARE_LEVEL> = $r146;

        $r148 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r148.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.info.version", class "Ljava/lang/String;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key INFO_VERSION> = $r148;

        $r149 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r150 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r149.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sync.maxLatency", $r150);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SYNC_MAX_LATENCY> = $r149;

        $r151 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r152 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r151.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.reprocess.maxCaptureStall", $r152);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REPROCESS_MAX_CAPTURE_STALL> = $r151;

        $r153 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r153.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.depth.availableDepthStreamConfigurations", class "[Landroid/hardware/camera2/params/StreamConfiguration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DEPTH_STREAM_CONFIGURATIONS> = $r153;

        $r154 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r154.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.depth.availableDepthMinFrameDurations", class "[Landroid/hardware/camera2/params/StreamConfigurationDuration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DEPTH_MIN_FRAME_DURATIONS> = $r154;

        $r155 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r155.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.depth.availableDepthStallDurations", class "[Landroid/hardware/camera2/params/StreamConfigurationDuration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DEPTH_STALL_DURATIONS> = $r155;

        $r156 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r157 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r156.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.depth.depthIsExclusive", $r157);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key DEPTH_DEPTH_IS_EXCLUSIVE> = $r156;

        $r158 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r158.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.depth.availableRecommendedDepthStreamConfigurations", class "[Landroid/hardware/camera2/params/RecommendedStreamConfiguration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_RECOMMENDED_DEPTH_STREAM_CONFIGURATIONS> = $r158;

        $r159 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r159.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.depth.availableDynamicDepthStreamConfigurations", class "[Landroid/hardware/camera2/params/StreamConfiguration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DYNAMIC_DEPTH_STREAM_CONFIGURATIONS> = $r159;

        $r160 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r160.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.depth.availableDynamicDepthMinFrameDurations", class "[Landroid/hardware/camera2/params/StreamConfigurationDuration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DYNAMIC_DEPTH_MIN_FRAME_DURATIONS> = $r160;

        $r161 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r161.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.depth.availableDynamicDepthStallDurations", class "[Landroid/hardware/camera2/params/StreamConfigurationDuration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key DEPTH_AVAILABLE_DYNAMIC_DEPTH_STALL_DURATIONS> = $r161;

        $r162 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r162.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.logicalMultiCamera.physicalIds", class "[B");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LOGICAL_MULTI_CAMERA_PHYSICAL_IDS> = $r162;

        $r163 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r164 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r163.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.logicalMultiCamera.sensorSyncType", $r164);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LOGICAL_MULTI_CAMERA_SENSOR_SYNC_TYPE> = $r163;

        $r165 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r165.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.distortionCorrection.availableModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key DISTORTION_CORRECTION_AVAILABLE_MODES> = $r165;

        $r166 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r166.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.heic.availableHeicStreamConfigurations", class "[Landroid/hardware/camera2/params/StreamConfiguration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key HEIC_AVAILABLE_HEIC_STREAM_CONFIGURATIONS> = $r166;

        $r167 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r167.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.heic.availableHeicMinFrameDurations", class "[Landroid/hardware/camera2/params/StreamConfigurationDuration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key HEIC_AVAILABLE_HEIC_MIN_FRAME_DURATIONS> = $r167;

        $r168 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r168.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.heic.availableHeicStallDurations", class "[Landroid/hardware/camera2/params/StreamConfigurationDuration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key HEIC_AVAILABLE_HEIC_STALL_DURATIONS> = $r168;

        return;
    }

    public void <init>(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.impl.CameraMetadataNative r1, r2;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r0.<android.hardware.camera2.CameraMetadata: void <init>()>();

        r2 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.impl.CameraMetadataNative move(android.hardware.camera2.impl.CameraMetadataNative)>(r1);

        r0.<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative mProperties> = r2;

        virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: void setNativeInstance(android.hardware.camera2.impl.CameraMetadataNative)>(r2);

        return;
    }

    private java.util.List getAvailableKeyList(java.lang.Class, java.lang.Class, int[], boolean)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Class r1, r2, $r5;
        int[] r3;
        boolean z0, $z1, $z2;
        java.lang.AssertionError $r4, $r6;
        java.util.ArrayList $r7;
        java.util.List $r8;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: int[];

        z0 := @parameter3: boolean;

        $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Landroid/hardware/camera2/CameraMetadata;");

        if $z1 != 0 goto label2;

        $r5 = class "Landroid/hardware/camera2/CameraMetadata;";

        $z2 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z2 == 0 goto label1;

        $r7 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.util.ArrayList getKeys(java.lang.Class,java.lang.Class,android.hardware.camera2.CameraMetadata,int[],boolean)>(r1, r2, null, r3, z0);

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        return $r8;

     label1:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("metadataClass must be a subclass of CameraMetadata");

        throw $r6;

     label2:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("metadataClass must be a strict subclass of CameraMetadata");

        throw $r4;
    }

    public java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.CameraCharacteristics$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics$Key;

        $r2 = r0.<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative mProperties>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>(r1);

        return $r3;
    }

    public java.util.List getAvailableCaptureRequestKeys()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Class r1;
        int[] r2;
        java.util.List $r3, $r4, $r8;
        android.hardware.camera2.CameraCharacteristics$Key $r5;
        java.lang.Object $r6;
        java.lang.AssertionError $r7;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r3 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableRequestKeys>;

        if $r3 != null goto label2;

        r1 = (java.lang.Class) class "Landroid/hardware/camera2/CaptureRequest$Key;";

        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_REQUEST_KEYS>;

        $r6 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r5);

        r2 = (int[]) $r6;

        if r2 == null goto label1;

        $r8 = specialinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableKeyList(java.lang.Class,java.lang.Class,int[],boolean)>(class "Landroid/hardware/camera2/CaptureRequest;", r1, r2, 1);

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableRequestKeys> = $r8;

        goto label2;

     label1:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("android.request.availableRequestKeys must be non-null in the characteristics");

        throw $r7;

     label2:
        $r4 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableRequestKeys>;

        return $r4;
    }

    public java.util.List getAvailableCaptureResultKeys()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Class r1;
        int[] r2;
        java.util.List $r3, $r4, $r8;
        android.hardware.camera2.CameraCharacteristics$Key $r5;
        java.lang.Object $r6;
        java.lang.AssertionError $r7;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r3 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableResultKeys>;

        if $r3 != null goto label2;

        r1 = (java.lang.Class) class "Landroid/hardware/camera2/CaptureResult$Key;";

        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_RESULT_KEYS>;

        $r6 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r5);

        r2 = (int[]) $r6;

        if r2 == null goto label1;

        $r8 = specialinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableKeyList(java.lang.Class,java.lang.Class,int[],boolean)>(class "Landroid/hardware/camera2/CaptureResult;", r1, r2, 1);

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableResultKeys> = $r8;

        goto label2;

     label1:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("android.request.availableResultKeys must be non-null in the characteristics");

        throw $r7;

     label2:
        $r4 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableResultKeys>;

        return $r4;
    }

    public java.util.List getAvailablePhysicalCameraRequestKeys()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Class r1;
        int[] r2;
        java.util.List $r3, $r4, $r7;
        android.hardware.camera2.CameraCharacteristics$Key $r5;
        java.lang.Object $r6;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r3 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailablePhysicalRequestKeys>;

        if $r3 != null goto label2;

        r1 = (java.lang.Class) class "Landroid/hardware/camera2/CaptureRequest$Key;";

        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_PHYSICAL_CAMERA_REQUEST_KEYS>;

        $r6 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r5);

        r2 = (int[]) $r6;

        if r2 != null goto label1;

        return null;

     label1:
        $r7 = specialinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableKeyList(java.lang.Class,java.lang.Class,int[],boolean)>(class "Landroid/hardware/camera2/CaptureRequest;", r1, r2, 0);

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailablePhysicalRequestKeys> = $r7;

     label2:
        $r4 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailablePhysicalRequestKeys>;

        return $r4;
    }

    public java.util.List getAvailableSessionKeys()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Class r1;
        int[] r2;
        java.util.List $r3, $r4, $r7;
        android.hardware.camera2.CameraCharacteristics$Key $r5;
        java.lang.Object $r6;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r3 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableSessionKeys>;

        if $r3 != null goto label2;

        r1 = (java.lang.Class) class "Landroid/hardware/camera2/CaptureRequest$Key;";

        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_SESSION_KEYS>;

        $r6 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r5);

        r2 = (int[]) $r6;

        if r2 != null goto label1;

        return null;

     label1:
        $r7 = specialinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableKeyList(java.lang.Class,java.lang.Class,int[],boolean)>(class "Landroid/hardware/camera2/CaptureRequest;", r1, r2, 0);

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableSessionKeys> = $r7;

     label2:
        $r4 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableSessionKeys>;

        return $r4;
    }

    protected java.lang.Class getKeyClass()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Class $r1;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r1 = (java.lang.Class) class "Landroid/hardware/camera2/CameraCharacteristics$Key;";

        return $r1;
    }

    public java.util.List getKeys()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.CameraCharacteristics$Key $r1;
        java.lang.Object $r2;
        java.lang.AssertionError $r3;
        java.lang.Class $r4, $r5;
        java.util.ArrayList $r6;
        java.util.List r7, r9;
        int[] r8;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r7 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mKeys>;

        if r7 == null goto label1;

        return r7;

     label1:
        $r1 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CHARACTERISTICS_KEYS>;

        $r2 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r1);

        r8 = (int[]) $r2;

        if r8 == null goto label2;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Class getKeyClass()>();

        $r6 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.util.ArrayList getKeys(java.lang.Class,java.lang.Class,android.hardware.camera2.CameraMetadata,int[],boolean)>($r4, $r5, r0, r8, 1);

        r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r6);

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mKeys> = r9;

        return r9;

     label2:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("android.request.availableCharacteristicsKeys must be non-null in the characteristics");

        throw $r3;
    }

    public java.util.List getKeysNeedingPermission()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        int[] r1;
        java.util.List $r2, $r3, $r6, r9;
        android.hardware.camera2.CameraCharacteristics$Key $r4;
        java.lang.Object $r5;
        java.util.ArrayList $r7;
        java.lang.Class r8;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r2 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mKeysNeedingPermission>;

        if $r2 != null goto label2;

        r8 = (java.lang.Class) class "Landroid/hardware/camera2/CameraCharacteristics$Key;";

        $r4 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_CHARACTERISTIC_KEYS_NEEDING_PERMISSION>;

        $r5 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r4);

        r1 = (int[]) $r5;

        if r1 != null goto label1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mKeysNeedingPermission> = r9;

        return r9;

     label1:
        $r6 = specialinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableKeyList(java.lang.Class,java.lang.Class,int[],boolean)>(class "Landroid/hardware/camera2/CameraCharacteristics;", r8, r1, 0);

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mKeysNeedingPermission> = $r6;

     label2:
        $r3 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mKeysNeedingPermission>;

        return $r3;
    }

    public android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.impl.CameraMetadataNative $r1, $r2;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r1 = new android.hardware.camera2.impl.CameraMetadataNative;

        $r2 = r0.<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative mProperties>;

        specialinvoke $r1.<android.hardware.camera2.impl.CameraMetadataNative: void <init>(android.hardware.camera2.impl.CameraMetadataNative)>($r2);

        return $r1;
    }

    public java.util.Set getPhysicalCameraIds()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.CameraCharacteristics$Key $r1, $r4;
        java.lang.Object $r2, $r5;
        java.lang.AssertionError $r3, $r13;
        boolean $z0;
        java.lang.String $r6;
        java.util.HashSet $r7;
        java.lang.String[] $r8;
        java.util.List $r9;
        java.util.Set $r10, $r11;
        java.lang.Throwable $r12;
        int[] r14;
        byte[] r15;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r1 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CAPABILITIES>;

        $r2 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r1);

        r14 = (int[]) $r2;

        if r14 == null goto label5;

        $z0 = staticinvoke <android.hardware.camera2.utils.ArrayUtils: boolean contains(int[],int)>(r14, 11);

        if $z0 != 0 goto label1;

        $r11 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r11;

     label1:
        $r4 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LOGICAL_MULTI_CAMERA_PHYSICAL_IDS>;

        $r5 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r4);

        r15 = (byte[]) $r5;

     label2:
        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>(r15, "UTF-8");

     label3:
        $r7 = new java.util.HashSet;

        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("\u0000");

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        specialinvoke $r7.<java.util.HashSet: void <init>(java.util.Collection)>($r9);

        $r10 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r7);

        return $r10;

     label4:
        $r12 := @caughtexception;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>("android.logicalCam.physicalIds must be UTF-8 string");

        throw $r13;

     label5:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("android.request.availableCapabilities must be non-null in the characteristics");

        throw $r3;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    protected java.lang.Object getProtected(android.hardware.camera2.CameraCharacteristics$Key)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.CameraCharacteristics$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics$Key;

        $r2 = r0.<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative mProperties>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>(r1);

        return $r3;
    }

    protected volatile java.lang.Object getProtected(java.lang.Object)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Object r1, $r3;
        android.hardware.camera2.CameraCharacteristics$Key $r2;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.hardware.camera2.CameraCharacteristics$Key) r1;

        $r3 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object getProtected(android.hardware.camera2.CameraCharacteristics$Key)>($r2);

        return $r3;
    }

    public android.hardware.camera2.params.RecommendedStreamConfigurationMap getRecommendedStreamConfigurationMap(int)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        int i0;
        java.util.ArrayList r1, $r6, $r7;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.String $r5;
        java.lang.Object $r8;
        android.hardware.camera2.params.RecommendedStreamConfigurationMap $r9;
        android.hardware.camera2.impl.CameraMetadataNative $r10;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 6 goto label2;

     label1:
        if i0 < 24 goto label4;

        if i0 >= 32 goto label4;

     label2:
        $r6 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.ArrayList mRecommendedConfigurations>;

        if $r6 != null goto label3;

        $r10 = r0.<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative mProperties>;

        r1 = virtualinvoke $r10.<android.hardware.camera2.impl.CameraMetadataNative: java.util.ArrayList getRecommendedStreamConfigurations()>();

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.ArrayList mRecommendedConfigurations> = r1;

        if r1 != null goto label3;

        return null;

     label3:
        $r7 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.ArrayList mRecommendedConfigurations>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r9 = (android.hardware.camera2.params.RecommendedStreamConfigurationMap) $r8;

        return $r9;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid use case: %d", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;
    }
}
