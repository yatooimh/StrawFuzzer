public class android.hardware.camera2.CaptureResult extends android.hardware.camera2.CameraMetadata
{
    public static final android.hardware.camera2.CaptureResult$Key BLACK_LEVEL_LOCK;
    public static final android.hardware.camera2.CaptureResult$Key COLOR_CORRECTION_ABERRATION_MODE;
    public static final android.hardware.camera2.CaptureResult$Key COLOR_CORRECTION_GAINS;
    public static final android.hardware.camera2.CaptureResult$Key COLOR_CORRECTION_MODE;
    public static final android.hardware.camera2.CaptureResult$Key COLOR_CORRECTION_TRANSFORM;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AE_ANTIBANDING_MODE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AE_EXPOSURE_COMPENSATION;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AE_LOCK;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AE_MODE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AE_PRECAPTURE_TRIGGER;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AE_REGIONS;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AE_STATE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AE_TARGET_FPS_RANGE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AF_MODE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AF_REGIONS;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AF_SCENE_CHANGE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AF_STATE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AF_TRIGGER;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AWB_LOCK;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AWB_MODE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AWB_REGIONS;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_AWB_STATE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_CAPTURE_INTENT;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_EFFECT_MODE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_ENABLE_ZSL;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_EXTENDED_SCENE_MODE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_MODE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_POST_RAW_SENSITIVITY_BOOST;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_SCENE_MODE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_VIDEO_STABILIZATION_MODE;
    public static final android.hardware.camera2.CaptureResult$Key CONTROL_ZOOM_RATIO;
    public static final android.hardware.camera2.CaptureResult$Key DISTORTION_CORRECTION_MODE;
    public static final android.hardware.camera2.CaptureResult$Key EDGE_MODE;
    public static final android.hardware.camera2.CaptureResult$Key FLASH_MODE;
    public static final android.hardware.camera2.CaptureResult$Key FLASH_STATE;
    public static final android.hardware.camera2.CaptureResult$Key HOT_PIXEL_MODE;
    public static final android.hardware.camera2.CaptureResult$Key JPEG_GPS_COORDINATES;
    public static final android.hardware.camera2.CaptureResult$Key JPEG_GPS_LOCATION;
    public static final android.hardware.camera2.CaptureResult$Key JPEG_GPS_PROCESSING_METHOD;
    public static final android.hardware.camera2.CaptureResult$Key JPEG_GPS_TIMESTAMP;
    public static final android.hardware.camera2.CaptureResult$Key JPEG_ORIENTATION;
    public static final android.hardware.camera2.CaptureResult$Key JPEG_QUALITY;
    public static final android.hardware.camera2.CaptureResult$Key JPEG_THUMBNAIL_QUALITY;
    public static final android.hardware.camera2.CaptureResult$Key JPEG_THUMBNAIL_SIZE;
    public static final android.hardware.camera2.CaptureResult$Key LED_TRANSMIT;
    public static final android.hardware.camera2.CaptureResult$Key LENS_APERTURE;
    public static final android.hardware.camera2.CaptureResult$Key LENS_DISTORTION;
    public static final android.hardware.camera2.CaptureResult$Key LENS_FILTER_DENSITY;
    public static final android.hardware.camera2.CaptureResult$Key LENS_FOCAL_LENGTH;
    public static final android.hardware.camera2.CaptureResult$Key LENS_FOCUS_DISTANCE;
    public static final android.hardware.camera2.CaptureResult$Key LENS_FOCUS_RANGE;
    public static final android.hardware.camera2.CaptureResult$Key LENS_INTRINSIC_CALIBRATION;
    public static final android.hardware.camera2.CaptureResult$Key LENS_OPTICAL_STABILIZATION_MODE;
    public static final android.hardware.camera2.CaptureResult$Key LENS_POSE_ROTATION;
    public static final android.hardware.camera2.CaptureResult$Key LENS_POSE_TRANSLATION;
    public static final android.hardware.camera2.CaptureResult$Key LENS_RADIAL_DISTORTION;
    public static final android.hardware.camera2.CaptureResult$Key LENS_STATE;
    public static final android.hardware.camera2.CaptureResult$Key LOGICAL_MULTI_CAMERA_ACTIVE_PHYSICAL_ID;
    public static final android.hardware.camera2.CaptureResult$Key NOISE_REDUCTION_MODE;
    public static final android.hardware.camera2.CaptureResult$Key QUIRKS_PARTIAL_RESULT;
    public static final android.hardware.camera2.CaptureResult$Key REPROCESS_EFFECTIVE_EXPOSURE_FACTOR;
    public static final android.hardware.camera2.CaptureResult$Key REQUEST_FRAME_COUNT;
    public static final android.hardware.camera2.CaptureResult$Key REQUEST_ID;
    public static final android.hardware.camera2.CaptureResult$Key REQUEST_PIPELINE_DEPTH;
    public static final android.hardware.camera2.CaptureResult$Key SCALER_CROP_REGION;
    public static final android.hardware.camera2.CaptureResult$Key SCALER_ROTATE_AND_CROP;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_DYNAMIC_BLACK_LEVEL;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_DYNAMIC_WHITE_LEVEL;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_EXPOSURE_TIME;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_FRAME_DURATION;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_GREEN_SPLIT;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_NEUTRAL_COLOR_POINT;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_NOISE_PROFILE;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_ROLLING_SHUTTER_SKEW;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_SENSITIVITY;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_TEST_PATTERN_DATA;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_TEST_PATTERN_MODE;
    public static final android.hardware.camera2.CaptureResult$Key SENSOR_TIMESTAMP;
    public static final android.hardware.camera2.CaptureResult$Key SHADING_MODE;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_FACES;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_DETECT_MODE;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_IDS;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_LANDMARKS;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_RECTANGLES;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_SCORES;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_HOT_PIXEL_MAP;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_HOT_PIXEL_MAP_MODE;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_LENS_SHADING_CORRECTION_MAP;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_LENS_SHADING_MAP;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_LENS_SHADING_MAP_MODE;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_OIS_DATA_MODE;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_OIS_SAMPLES;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_OIS_TIMESTAMPS;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_OIS_X_SHIFTS;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_OIS_Y_SHIFTS;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_PREDICTED_COLOR_GAINS;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_PREDICTED_COLOR_TRANSFORM;
    public static final android.hardware.camera2.CaptureResult$Key STATISTICS_SCENE_FLICKER;
    public static final android.hardware.camera2.CaptureResult$Key SYNC_FRAME_NUMBER;
    private static final java.lang.String TAG;
    public static final android.hardware.camera2.CaptureResult$Key TONEMAP_CURVE;
    public static final android.hardware.camera2.CaptureResult$Key TONEMAP_CURVE_BLUE;
    public static final android.hardware.camera2.CaptureResult$Key TONEMAP_CURVE_GREEN;
    public static final android.hardware.camera2.CaptureResult$Key TONEMAP_CURVE_RED;
    public static final android.hardware.camera2.CaptureResult$Key TONEMAP_GAMMA;
    public static final android.hardware.camera2.CaptureResult$Key TONEMAP_MODE;
    public static final android.hardware.camera2.CaptureResult$Key TONEMAP_PRESET_CURVE;
    private static final boolean VERBOSE;
    private final long mFrameNumber;
    private final android.hardware.camera2.CaptureRequest mRequest;
    private final android.hardware.camera2.impl.CameraMetadataNative mResults;
    private final int mSequenceId;

    static void <clinit>()
    {
        android.hardware.camera2.CaptureResult$Key $r0, $r2, $r3, $r4, $r6, $r8, $r10, $r12, $r14, $r15, $r17, $r19, $r21, $r23, $r24, $r26, $r28, $r30, $r32, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r64, $r65, $r66, $r68, $r70, $r72, $r74, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89, $r90, $r91, $r92, $r93, $r94, $r96, $r98, $r100, $r102, $r104, $r105, $r107, $r109, $r111, $r113, $r115, $r116, $r118, $r120, $r121, $r123, $r125, $r126, $r128, $r130, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r143, $r145, $r146, $r148, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r160, $r162, $r164, $r166, $r168, $r170, $r172, $r173;
        java.lang.Class $r1, $r5, $r7, $r9, $r11, $r13, $r18, $r20, $r22, $r25, $r27, $r29, $r31, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r67, $r69, $r71, $r73, $r76, $r78, $r80, $r82, $r86, $r88, $r95, $r97, $r99, $r101, $r103, $r106, $r108, $r110, $r112, $r114, $r119, $r122, $r124, $r127, $r129, $r131, $r142, $r144, $r147, $r149, $r159, $r161, $r163, $r165, $r167, $r169, $r171, $r174;
        android.hardware.camera2.CaptureResult$1 $r16;
        android.hardware.camera2.CaptureResult$2 $r84;
        android.hardware.camera2.CaptureResult$3 $r117;

        <android.hardware.camera2.CaptureResult: boolean VERBOSE> = 0;

        <android.hardware.camera2.CaptureResult: java.lang.String TAG> = "CaptureResult";

        $r0 = new android.hardware.camera2.CaptureResult$Key;

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r0.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.colorCorrection.mode", $r1);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key COLOR_CORRECTION_MODE> = $r0;

        $r2 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r2.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.colorCorrection.transform", class "Landroid/hardware/camera2/params/ColorSpaceTransform;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key COLOR_CORRECTION_TRANSFORM> = $r2;

        $r3 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r3.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.colorCorrection.gains", class "Landroid/hardware/camera2/params/RggbChannelVector;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key COLOR_CORRECTION_GAINS> = $r3;

        $r4 = new android.hardware.camera2.CaptureResult$Key;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r4.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.colorCorrection.aberrationMode", $r5);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key COLOR_CORRECTION_ABERRATION_MODE> = $r4;

        $r6 = new android.hardware.camera2.CaptureResult$Key;

        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r6.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeAntibandingMode", $r7);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AE_ANTIBANDING_MODE> = $r6;

        $r8 = new android.hardware.camera2.CaptureResult$Key;

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r8.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeExposureCompensation", $r9);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AE_EXPOSURE_COMPENSATION> = $r8;

        $r10 = new android.hardware.camera2.CaptureResult$Key;

        $r11 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r10.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeLock", $r11);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AE_LOCK> = $r10;

        $r12 = new android.hardware.camera2.CaptureResult$Key;

        $r13 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r12.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeMode", $r13);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AE_MODE> = $r12;

        $r14 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r14.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeRegions", class "[Landroid/hardware/camera2/params/MeteringRectangle;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AE_REGIONS> = $r14;

        $r15 = new android.hardware.camera2.CaptureResult$Key;

        $r16 = new android.hardware.camera2.CaptureResult$1;

        specialinvoke $r16.<android.hardware.camera2.CaptureResult$1: void <init>()>();

        specialinvoke $r15.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.control.aeTargetFpsRange", $r16);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AE_TARGET_FPS_RANGE> = $r15;

        $r17 = new android.hardware.camera2.CaptureResult$Key;

        $r18 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r17.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aePrecaptureTrigger", $r18);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AE_PRECAPTURE_TRIGGER> = $r17;

        $r19 = new android.hardware.camera2.CaptureResult$Key;

        $r20 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r19.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeState", $r20);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AE_STATE> = $r19;

        $r21 = new android.hardware.camera2.CaptureResult$Key;

        $r22 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r21.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.afMode", $r22);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AF_MODE> = $r21;

        $r23 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r23.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.afRegions", class "[Landroid/hardware/camera2/params/MeteringRectangle;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AF_REGIONS> = $r23;

        $r24 = new android.hardware.camera2.CaptureResult$Key;

        $r25 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r24.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.afTrigger", $r25);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AF_TRIGGER> = $r24;

        $r26 = new android.hardware.camera2.CaptureResult$Key;

        $r27 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r26.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.afState", $r27);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AF_STATE> = $r26;

        $r28 = new android.hardware.camera2.CaptureResult$Key;

        $r29 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r28.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.awbLock", $r29);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AWB_LOCK> = $r28;

        $r30 = new android.hardware.camera2.CaptureResult$Key;

        $r31 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r30.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.awbMode", $r31);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AWB_MODE> = $r30;

        $r32 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r32.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.awbRegions", class "[Landroid/hardware/camera2/params/MeteringRectangle;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AWB_REGIONS> = $r32;

        $r33 = new android.hardware.camera2.CaptureResult$Key;

        $r34 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r33.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.captureIntent", $r34);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_CAPTURE_INTENT> = $r33;

        $r35 = new android.hardware.camera2.CaptureResult$Key;

        $r36 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r35.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.awbState", $r36);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AWB_STATE> = $r35;

        $r37 = new android.hardware.camera2.CaptureResult$Key;

        $r38 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r37.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.effectMode", $r38);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_EFFECT_MODE> = $r37;

        $r39 = new android.hardware.camera2.CaptureResult$Key;

        $r40 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r39.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.mode", $r40);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_MODE> = $r39;

        $r41 = new android.hardware.camera2.CaptureResult$Key;

        $r42 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r41.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.sceneMode", $r42);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_SCENE_MODE> = $r41;

        $r43 = new android.hardware.camera2.CaptureResult$Key;

        $r44 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r43.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.videoStabilizationMode", $r44);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_VIDEO_STABILIZATION_MODE> = $r43;

        $r45 = new android.hardware.camera2.CaptureResult$Key;

        $r46 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r45.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.postRawSensitivityBoost", $r46);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_POST_RAW_SENSITIVITY_BOOST> = $r45;

        $r47 = new android.hardware.camera2.CaptureResult$Key;

        $r48 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r47.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.enableZsl", $r48);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_ENABLE_ZSL> = $r47;

        $r49 = new android.hardware.camera2.CaptureResult$Key;

        $r50 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r49.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.afSceneChange", $r50);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AF_SCENE_CHANGE> = $r49;

        $r51 = new android.hardware.camera2.CaptureResult$Key;

        $r52 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r51.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.extendedSceneMode", $r52);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_EXTENDED_SCENE_MODE> = $r51;

        $r53 = new android.hardware.camera2.CaptureResult$Key;

        $r54 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r53.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.zoomRatio", $r54);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_ZOOM_RATIO> = $r53;

        $r55 = new android.hardware.camera2.CaptureResult$Key;

        $r56 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r55.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.edge.mode", $r56);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key EDGE_MODE> = $r55;

        $r57 = new android.hardware.camera2.CaptureResult$Key;

        $r58 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r57.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.flash.mode", $r58);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key FLASH_MODE> = $r57;

        $r59 = new android.hardware.camera2.CaptureResult$Key;

        $r60 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r59.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.flash.state", $r60);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key FLASH_STATE> = $r59;

        $r61 = new android.hardware.camera2.CaptureResult$Key;

        $r62 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r61.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.hotPixel.mode", $r62);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key HOT_PIXEL_MODE> = $r61;

        $r63 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r63.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.jpeg.gpsLocation", class "Landroid/location/Location;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_GPS_LOCATION> = $r63;

        $r64 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r64.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.jpeg.gpsCoordinates", class "[D");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_GPS_COORDINATES> = $r64;

        $r65 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r65.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.jpeg.gpsProcessingMethod", class "Ljava/lang/String;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_GPS_PROCESSING_METHOD> = $r65;

        $r66 = new android.hardware.camera2.CaptureResult$Key;

        $r67 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r66.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.jpeg.gpsTimestamp", $r67);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_GPS_TIMESTAMP> = $r66;

        $r68 = new android.hardware.camera2.CaptureResult$Key;

        $r69 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r68.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.jpeg.orientation", $r69);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_ORIENTATION> = $r68;

        $r70 = new android.hardware.camera2.CaptureResult$Key;

        $r71 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r70.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.jpeg.quality", $r71);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_QUALITY> = $r70;

        $r72 = new android.hardware.camera2.CaptureResult$Key;

        $r73 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r72.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.jpeg.thumbnailQuality", $r73);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_THUMBNAIL_QUALITY> = $r72;

        $r74 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r74.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.jpeg.thumbnailSize", class "Landroid/util/Size;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_THUMBNAIL_SIZE> = $r74;

        $r75 = new android.hardware.camera2.CaptureResult$Key;

        $r76 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r75.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.aperture", $r76);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_APERTURE> = $r75;

        $r77 = new android.hardware.camera2.CaptureResult$Key;

        $r78 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r77.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.filterDensity", $r78);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_FILTER_DENSITY> = $r77;

        $r79 = new android.hardware.camera2.CaptureResult$Key;

        $r80 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r79.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.focalLength", $r80);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_FOCAL_LENGTH> = $r79;

        $r81 = new android.hardware.camera2.CaptureResult$Key;

        $r82 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r81.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.focusDistance", $r82);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_FOCUS_DISTANCE> = $r81;

        $r83 = new android.hardware.camera2.CaptureResult$Key;

        $r84 = new android.hardware.camera2.CaptureResult$2;

        specialinvoke $r84.<android.hardware.camera2.CaptureResult$2: void <init>()>();

        specialinvoke $r83.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.lens.focusRange", $r84);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_FOCUS_RANGE> = $r83;

        $r85 = new android.hardware.camera2.CaptureResult$Key;

        $r86 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r85.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.opticalStabilizationMode", $r86);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_OPTICAL_STABILIZATION_MODE> = $r85;

        $r87 = new android.hardware.camera2.CaptureResult$Key;

        $r88 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r87.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.state", $r88);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_STATE> = $r87;

        $r89 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r89.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.poseRotation", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_POSE_ROTATION> = $r89;

        $r90 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r90.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.poseTranslation", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_POSE_TRANSLATION> = $r90;

        $r91 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r91.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.intrinsicCalibration", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_INTRINSIC_CALIBRATION> = $r91;

        $r92 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r92.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.radialDistortion", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_RADIAL_DISTORTION> = $r92;

        $r93 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r93.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.distortion", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_DISTORTION> = $r93;

        $r94 = new android.hardware.camera2.CaptureResult$Key;

        $r95 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r94.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.noiseReduction.mode", $r95);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key NOISE_REDUCTION_MODE> = $r94;

        $r96 = new android.hardware.camera2.CaptureResult$Key;

        $r97 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r96.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.quirks.partialResult", $r97);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key QUIRKS_PARTIAL_RESULT> = $r96;

        $r98 = new android.hardware.camera2.CaptureResult$Key;

        $r99 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r98.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.frameCount", $r99);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key REQUEST_FRAME_COUNT> = $r98;

        $r100 = new android.hardware.camera2.CaptureResult$Key;

        $r101 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r100.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.id", $r101);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key REQUEST_ID> = $r100;

        $r102 = new android.hardware.camera2.CaptureResult$Key;

        $r103 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r102.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.pipelineDepth", $r103);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key REQUEST_PIPELINE_DEPTH> = $r102;

        $r104 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r104.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.cropRegion", class "Landroid/graphics/Rect;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SCALER_CROP_REGION> = $r104;

        $r105 = new android.hardware.camera2.CaptureResult$Key;

        $r106 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r105.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.rotateAndCrop", $r106);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SCALER_ROTATE_AND_CROP> = $r105;

        $r107 = new android.hardware.camera2.CaptureResult$Key;

        $r108 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r107.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.exposureTime", $r108);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_EXPOSURE_TIME> = $r107;

        $r109 = new android.hardware.camera2.CaptureResult$Key;

        $r110 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r109.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.frameDuration", $r110);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_FRAME_DURATION> = $r109;

        $r111 = new android.hardware.camera2.CaptureResult$Key;

        $r112 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r111.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.sensitivity", $r112);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_SENSITIVITY> = $r111;

        $r113 = new android.hardware.camera2.CaptureResult$Key;

        $r114 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r113.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.timestamp", $r114);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_TIMESTAMP> = $r113;

        $r115 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r115.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.neutralColorPoint", class "[Landroid/util/Rational;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_NEUTRAL_COLOR_POINT> = $r115;

        $r116 = new android.hardware.camera2.CaptureResult$Key;

        $r117 = new android.hardware.camera2.CaptureResult$3;

        specialinvoke $r117.<android.hardware.camera2.CaptureResult$3: void <init>()>();

        specialinvoke $r116.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.sensor.noiseProfile", $r117);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_NOISE_PROFILE> = $r116;

        $r118 = new android.hardware.camera2.CaptureResult$Key;

        $r119 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r118.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.greenSplit", $r119);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_GREEN_SPLIT> = $r118;

        $r120 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r120.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.testPatternData", class "[I");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_TEST_PATTERN_DATA> = $r120;

        $r121 = new android.hardware.camera2.CaptureResult$Key;

        $r122 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r121.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.testPatternMode", $r122);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_TEST_PATTERN_MODE> = $r121;

        $r123 = new android.hardware.camera2.CaptureResult$Key;

        $r124 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r123.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.rollingShutterSkew", $r124);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_ROLLING_SHUTTER_SKEW> = $r123;

        $r125 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r125.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.dynamicBlackLevel", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_DYNAMIC_BLACK_LEVEL> = $r125;

        $r126 = new android.hardware.camera2.CaptureResult$Key;

        $r127 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r126.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.dynamicWhiteLevel", $r127);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_DYNAMIC_WHITE_LEVEL> = $r126;

        $r128 = new android.hardware.camera2.CaptureResult$Key;

        $r129 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r128.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.shading.mode", $r129);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SHADING_MODE> = $r128;

        $r130 = new android.hardware.camera2.CaptureResult$Key;

        $r131 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r130.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.faceDetectMode", $r131);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_DETECT_MODE> = $r130;

        $r132 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r132.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.faceIds", class "[I");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_IDS> = $r132;

        $r133 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r133.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.faceLandmarks", class "[I");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_LANDMARKS> = $r133;

        $r134 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r134.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.faceRectangles", class "[Landroid/graphics/Rect;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_RECTANGLES> = $r134;

        $r135 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r135.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.faceScores", class "[B");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_SCORES> = $r135;

        $r136 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r136.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.faces", class "[Landroid/hardware/camera2/params/Face;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACES> = $r136;

        $r137 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r137.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.lensShadingCorrectionMap", class "Landroid/hardware/camera2/params/LensShadingMap;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_LENS_SHADING_CORRECTION_MAP> = $r137;

        $r138 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r138.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.lensShadingMap", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_LENS_SHADING_MAP> = $r138;

        $r139 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r139.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.predictedColorGains", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_PREDICTED_COLOR_GAINS> = $r139;

        $r140 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r140.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.predictedColorTransform", class "[Landroid/util/Rational;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_PREDICTED_COLOR_TRANSFORM> = $r140;

        $r141 = new android.hardware.camera2.CaptureResult$Key;

        $r142 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r141.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.sceneFlicker", $r142);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_SCENE_FLICKER> = $r141;

        $r143 = new android.hardware.camera2.CaptureResult$Key;

        $r144 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r143.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.hotPixelMapMode", $r144);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_HOT_PIXEL_MAP_MODE> = $r143;

        $r145 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r145.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.hotPixelMap", class "[Landroid/graphics/Point;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_HOT_PIXEL_MAP> = $r145;

        $r146 = new android.hardware.camera2.CaptureResult$Key;

        $r147 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r146.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.lensShadingMapMode", $r147);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_LENS_SHADING_MAP_MODE> = $r146;

        $r148 = new android.hardware.camera2.CaptureResult$Key;

        $r149 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r148.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.oisDataMode", $r149);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_OIS_DATA_MODE> = $r148;

        $r150 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r150.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.oisTimestamps", class "[J");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_OIS_TIMESTAMPS> = $r150;

        $r151 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r151.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.oisXShifts", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_OIS_X_SHIFTS> = $r151;

        $r152 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r152.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.oisYShifts", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_OIS_Y_SHIFTS> = $r152;

        $r153 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r153.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.oisSamples", class "[Landroid/hardware/camera2/params/OisSample;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_OIS_SAMPLES> = $r153;

        $r154 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r154.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.curveBlue", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key TONEMAP_CURVE_BLUE> = $r154;

        $r155 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r155.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.curveGreen", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key TONEMAP_CURVE_GREEN> = $r155;

        $r156 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r156.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.curveRed", class "[F");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key TONEMAP_CURVE_RED> = $r156;

        $r157 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r157.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.curve", class "Landroid/hardware/camera2/params/TonemapCurve;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key TONEMAP_CURVE> = $r157;

        $r158 = new android.hardware.camera2.CaptureResult$Key;

        $r159 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r158.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.mode", $r159);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key TONEMAP_MODE> = $r158;

        $r160 = new android.hardware.camera2.CaptureResult$Key;

        $r161 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r160.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.gamma", $r161);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key TONEMAP_GAMMA> = $r160;

        $r162 = new android.hardware.camera2.CaptureResult$Key;

        $r163 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r162.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.presetCurve", $r163);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key TONEMAP_PRESET_CURVE> = $r162;

        $r164 = new android.hardware.camera2.CaptureResult$Key;

        $r165 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r164.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.led.transmit", $r165);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LED_TRANSMIT> = $r164;

        $r166 = new android.hardware.camera2.CaptureResult$Key;

        $r167 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r166.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.blackLevel.lock", $r167);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key BLACK_LEVEL_LOCK> = $r166;

        $r168 = new android.hardware.camera2.CaptureResult$Key;

        $r169 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r168.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.sync.frameNumber", $r169);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SYNC_FRAME_NUMBER> = $r168;

        $r170 = new android.hardware.camera2.CaptureResult$Key;

        $r171 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r170.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.reprocess.effectiveExposureFactor", $r171);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key REPROCESS_EFFECTIVE_EXPOSURE_FACTOR> = $r170;

        $r172 = new android.hardware.camera2.CaptureResult$Key;

        specialinvoke $r172.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.logicalMultiCamera.activePhysicalId", class "Ljava/lang/String;");

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LOGICAL_MULTI_CAMERA_ACTIVE_PHYSICAL_ID> = $r172;

        $r173 = new android.hardware.camera2.CaptureResult$Key;

        $r174 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r173.<android.hardware.camera2.CaptureResult$Key: void <init>(java.lang.String,java.lang.Class)>("android.distortionCorrection.mode", $r174);

        <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key DISTORTION_CORRECTION_MODE> = $r173;

        return;
    }

    public void <init>(android.hardware.camera2.impl.CameraMetadataNative, int)
    {
        android.hardware.camera2.CaptureResult r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;
        java.lang.AssertionError $r2;
        android.hardware.camera2.impl.CameraMetadataNative $r3, r4, r5;

        r0 := @this: android.hardware.camera2.CaptureResult;

        r4 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        i0 := @parameter1: int;

        specialinvoke r0.<android.hardware.camera2.CameraMetadata: void <init>()>();

        if r4 == null goto label2;

        r5 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.impl.CameraMetadataNative move(android.hardware.camera2.impl.CameraMetadataNative)>(r4);

        r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative mResults> = r5;

        $z0 = virtualinvoke r5.<android.hardware.camera2.impl.CameraMetadataNative: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative mResults>;

        virtualinvoke r0.<android.hardware.camera2.CaptureResult: void setNativeInstance(android.hardware.camera2.impl.CameraMetadataNative)>($r3);

        r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureRequest mRequest> = null;

        r0.<android.hardware.camera2.CaptureResult: int mSequenceId> = i0;

        r0.<android.hardware.camera2.CaptureResult: long mFrameNumber> = -1L;

        return;

     label1:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("Results must not be empty");

        throw $r2;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("results was null");

        throw $r1;
    }

    public void <init>(android.hardware.camera2.impl.CameraMetadataNative, android.hardware.camera2.CaptureRequest, android.hardware.camera2.impl.CaptureResultExtras)
    {
        android.hardware.camera2.CaptureResult r0;
        android.hardware.camera2.CaptureRequest r1;
        android.hardware.camera2.impl.CaptureResultExtras r2;
        java.lang.IllegalArgumentException $r3, $r4, $r5;
        boolean $z0;
        java.lang.AssertionError $r6;
        android.hardware.camera2.impl.CameraMetadataNative $r7, r8, r9;
        int $i0;
        long $l1;

        r0 := @this: android.hardware.camera2.CaptureResult;

        r8 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter1: android.hardware.camera2.CaptureRequest;

        r2 := @parameter2: android.hardware.camera2.impl.CaptureResultExtras;

        specialinvoke r0.<android.hardware.camera2.CameraMetadata: void <init>()>();

        if r8 == null goto label4;

        if r1 == null goto label3;

        if r2 == null goto label2;

        r9 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.impl.CameraMetadataNative move(android.hardware.camera2.impl.CameraMetadataNative)>(r8);

        r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative mResults> = r9;

        $z0 = virtualinvoke r9.<android.hardware.camera2.impl.CameraMetadataNative: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative mResults>;

        virtualinvoke r0.<android.hardware.camera2.CaptureResult: void setNativeInstance(android.hardware.camera2.impl.CameraMetadataNative)>($r7);

        r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureRequest mRequest> = r1;

        $i0 = virtualinvoke r2.<android.hardware.camera2.impl.CaptureResultExtras: int getRequestId()>();

        r0.<android.hardware.camera2.CaptureResult: int mSequenceId> = $i0;

        $l1 = virtualinvoke r2.<android.hardware.camera2.impl.CaptureResultExtras: long getFrameNumber()>();

        r0.<android.hardware.camera2.CaptureResult: long mFrameNumber> = $l1;

        return;

     label1:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("Results must not be empty");

        throw $r6;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("extras was null");

        throw $r5;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parent was null");

        throw $r4;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("results was null");

        throw $r3;
    }

    public void dumpToLog()
    {
        android.hardware.camera2.CaptureResult r0;
        android.hardware.camera2.impl.CameraMetadataNative $r1;

        r0 := @this: android.hardware.camera2.CaptureResult;

        $r1 = r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative mResults>;

        virtualinvoke $r1.<android.hardware.camera2.impl.CameraMetadataNative: void dumpToLog()>();

        return;
    }

    public java.lang.Object get(android.hardware.camera2.CaptureResult$Key)
    {
        android.hardware.camera2.CaptureResult r0;
        android.hardware.camera2.CaptureResult$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.CaptureResult;

        r1 := @parameter0: android.hardware.camera2.CaptureResult$Key;

        $r2 = r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative mResults>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>(r1);

        return $r3;
    }

    public long getFrameNumber()
    {
        android.hardware.camera2.CaptureResult r0;
        long $l0;

        r0 := @this: android.hardware.camera2.CaptureResult;

        $l0 = r0.<android.hardware.camera2.CaptureResult: long mFrameNumber>;

        return $l0;
    }

    protected java.lang.Class getKeyClass()
    {
        android.hardware.camera2.CaptureResult r0;
        java.lang.Class $r1;

        r0 := @this: android.hardware.camera2.CaptureResult;

        $r1 = (java.lang.Class) class "Landroid/hardware/camera2/CaptureResult$Key;";

        return $r1;
    }

    public java.util.List getKeys()
    {
        android.hardware.camera2.CaptureResult r0;
        java.util.List $r1;

        r0 := @this: android.hardware.camera2.CaptureResult;

        $r1 = specialinvoke r0.<android.hardware.camera2.CameraMetadata: java.util.List getKeys()>();

        return $r1;
    }

    public android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()
    {
        android.hardware.camera2.CaptureResult r0;
        android.hardware.camera2.impl.CameraMetadataNative $r1, $r2;

        r0 := @this: android.hardware.camera2.CaptureResult;

        $r1 = new android.hardware.camera2.impl.CameraMetadataNative;

        $r2 = r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative mResults>;

        specialinvoke $r1.<android.hardware.camera2.impl.CameraMetadataNative: void <init>(android.hardware.camera2.impl.CameraMetadataNative)>($r2);

        return $r1;
    }

    protected java.lang.Object getProtected(android.hardware.camera2.CaptureResult$Key)
    {
        android.hardware.camera2.CaptureResult r0;
        android.hardware.camera2.CaptureResult$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.CaptureResult;

        r1 := @parameter0: android.hardware.camera2.CaptureResult$Key;

        $r2 = r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative mResults>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>(r1);

        return $r3;
    }

    protected volatile java.lang.Object getProtected(java.lang.Object)
    {
        android.hardware.camera2.CaptureResult r0;
        java.lang.Object r1, $r3;
        android.hardware.camera2.CaptureResult$Key $r2;

        r0 := @this: android.hardware.camera2.CaptureResult;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.hardware.camera2.CaptureResult$Key) r1;

        $r3 = virtualinvoke r0.<android.hardware.camera2.CaptureResult: java.lang.Object getProtected(android.hardware.camera2.CaptureResult$Key)>($r2);

        return $r3;
    }

    public android.hardware.camera2.CaptureRequest getRequest()
    {
        android.hardware.camera2.CaptureResult r0;
        android.hardware.camera2.CaptureRequest $r1;

        r0 := @this: android.hardware.camera2.CaptureResult;

        $r1 = r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureRequest mRequest>;

        return $r1;
    }

    public int getSequenceId()
    {
        android.hardware.camera2.CaptureResult r0;
        int $i0;

        r0 := @this: android.hardware.camera2.CaptureResult;

        $i0 = r0.<android.hardware.camera2.CaptureResult: int mSequenceId>;

        return $i0;
    }
}
