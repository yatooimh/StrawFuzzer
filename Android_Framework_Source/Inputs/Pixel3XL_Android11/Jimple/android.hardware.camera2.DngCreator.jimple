public final class android.hardware.camera2.DngCreator extends java.lang.Object implements java.lang.AutoCloseable
{
    private static final int BYTES_PER_RGB_PIX;
    private static final int DEFAULT_PIXEL_STRIDE;
    private static final java.lang.String GPS_DATE_FORMAT_STR;
    private static final java.lang.String GPS_LAT_REF_NORTH;
    private static final java.lang.String GPS_LAT_REF_SOUTH;
    private static final java.lang.String GPS_LONG_REF_EAST;
    private static final java.lang.String GPS_LONG_REF_WEST;
    public static final int MAX_THUMBNAIL_DIMENSION;
    private static final java.lang.String TAG;
    private static final int TAG_ORIENTATION_UNKNOWN;
    private static final java.lang.String TIFF_DATETIME_FORMAT;
    private static final java.text.DateFormat sExifGPSDateStamp;
    private final java.util.Calendar mGPSTimeStampCalendar;
    private long mNativeContext;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r1;
        java.util.Locale $r2;
        java.util.TimeZone $r3;

        <android.hardware.camera2.DngCreator: java.lang.String TIFF_DATETIME_FORMAT> = "yyyy:MM:dd HH:mm:ss";

        <android.hardware.camera2.DngCreator: int TAG_ORIENTATION_UNKNOWN> = 9;

        <android.hardware.camera2.DngCreator: java.lang.String TAG> = "DngCreator";

        <android.hardware.camera2.DngCreator: int MAX_THUMBNAIL_DIMENSION> = 256;

        <android.hardware.camera2.DngCreator: java.lang.String GPS_LONG_REF_WEST> = "W";

        <android.hardware.camera2.DngCreator: java.lang.String GPS_LONG_REF_EAST> = "E";

        <android.hardware.camera2.DngCreator: java.lang.String GPS_LAT_REF_SOUTH> = "S";

        <android.hardware.camera2.DngCreator: java.lang.String GPS_LAT_REF_NORTH> = "N";

        <android.hardware.camera2.DngCreator: java.lang.String GPS_DATE_FORMAT_STR> = "yyyy:MM:dd";

        <android.hardware.camera2.DngCreator: int DEFAULT_PIXEL_STRIDE> = 2;

        <android.hardware.camera2.DngCreator: int BYTES_PER_RGB_PIX> = 3;

        $r1 = new java.text.SimpleDateFormat;

        $r2 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy:MM:dd", $r2);

        <android.hardware.camera2.DngCreator: java.text.DateFormat sExifGPSDateStamp> = $r1;

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r1.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r3);

        staticinvoke <android.hardware.camera2.DngCreator: void nativeClassInit()>();

        return;
    }

    public void <init>(android.hardware.camera2.CameraCharacteristics, android.hardware.camera2.CaptureResult)
    {
        android.hardware.camera2.DngCreator r0;
        android.hardware.camera2.CameraCharacteristics r1;
        android.hardware.camera2.CaptureResult r2;
        int i0;
        java.util.TimeZone $r3, $r15;
        java.util.Calendar $r4;
        java.lang.IllegalArgumentException $r5;
        android.hardware.camera2.CameraCharacteristics$Key $r6;
        java.lang.Object $r7, $r21;
        java.lang.Integer $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r12, r24;
        long $l2, $l3, $l4, $l5, $l6, l7, l8;
        java.text.SimpleDateFormat $r13;
        java.util.Locale $r14;
        java.lang.Long $r16, r22;
        android.hardware.camera2.impl.CameraMetadataNative $r17, $r18;
        android.hardware.camera2.CaptureResult$Key $r20;

        r0 := @this: android.hardware.camera2.DngCreator;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics;

        r2 := @parameter1: android.hardware.camera2.CaptureResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r3);

        r0.<android.hardware.camera2.DngCreator: java.util.Calendar mGPSTimeStampCalendar> = $r4;

        if r1 == null goto label5;

        if r2 == null goto label5;

        l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_TIMESTAMP_SOURCE>;

        $r7 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r6);

        $r8 = (java.lang.Integer) $r7;

        i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if i0 != 1 goto label1;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l8 = l7 - $l6;

        goto label3;

     label1:
        if i0 != 0 goto label2;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l8 = l7 - $l5;

        goto label3;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sensor timestamp source is unexpected: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DngCreator", $r12);

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l8 = l7 - $l2;

     label3:
        $r20 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_TIMESTAMP>;

        $r21 = virtualinvoke r2.<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r20);

        r22 = (java.lang.Long) $r21;

        if r22 == null goto label4;

        $l3 = virtualinvoke r22.<java.lang.Long: long longValue()>();

        $l4 = $l3 / 1000000L;

        l7 = $l4 + l8;

     label4:
        $r13 = new java.text.SimpleDateFormat;

        $r14 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r13.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy:MM:dd HH:mm:ss", $r14);

        $r15 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        virtualinvoke $r13.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r15);

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l7);

        r24 = virtualinvoke $r13.<java.text.DateFormat: java.lang.String format(java.lang.Object)>($r16);

        $r17 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()>();

        $r18 = virtualinvoke r2.<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()>();

        specialinvoke r0.<android.hardware.camera2.DngCreator: void nativeInit(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative,java.lang.String)>($r17, $r18, r24);

        return;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null argument to DngCreator constructor");

        throw $r5;
    }

    private static void colorToRgb(int, int, byte[])
    {
        int i0, i1, $i2, $i5, $i6, $i9, $i10;
        byte[] r0;
        byte $b3, $b4, $b7, $b8, $b11, $b12;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $i2 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $b3 = (byte) $i2;

        $b4 = (byte) $b3;

        r0[i1] = $b4;

        $i5 = i1 + 1;

        $i6 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $b7 = (byte) $i6;

        $b8 = (byte) $b7;

        r0[$i5] = $b8;

        $i9 = i1 + 2;

        $i10 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        $b11 = (byte) $i10;

        $b12 = (byte) $b11;

        r0[$i9] = $b12;

        return;
    }

    private static java.nio.ByteBuffer convertToRGB(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.nio.ByteBuffer r1;
        int[] r2;
        byte[] r3;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        i1 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $i2 = i0 * 3;

        $i3 = $i2 * i1;

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i3);

        r2 = newarray (int)[i0];

        $i4 = i0 * 3;

        r3 = newarray (byte)[$i4];

        i7 = 0;

     label1:
        if i7 >= i1 goto label4;

        virtualinvoke r0.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>(r2, 0, i0, 0, i7, i0, 1);

        i8 = 0;

     label2:
        if i8 >= i0 goto label3;

        $i6 = r2[i8];

        $i5 = i8 * 3;

        staticinvoke <android.hardware.camera2.DngCreator: void colorToRgb(int,int,byte[])>($i6, $i5, r3);

        i8 = i8 + 1;

        goto label2;

     label3:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r3);

        i7 = i7 + 1;

        goto label1;

     label4:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        return r1;
    }

    private static java.nio.ByteBuffer convertToRGB(android.media.Image)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i29, $i32, $i35, i36, i37, i38;
        java.nio.ByteBuffer r0, r1, r2, r26;
        byte[] r3, r4, r27, r28, r29;
        android.media.Image$Plane[] $r5, $r6, $r7;
        byte $b27, $b28, $b30, $b31, $b33, $b34;
        android.media.Image r22;
        android.media.Image$Plane r23, r24, r25;

        r22 := @parameter0: android.media.Image;

        i0 = virtualinvoke r22.<android.media.Image: int getWidth()>();

        i1 = virtualinvoke r22.<android.media.Image: int getHeight()>();

        $i9 = i0 * 3;

        $i10 = $i9 * i1;

        r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i10);

        $r5 = virtualinvoke r22.<android.media.Image: android.media.Image$Plane[] getPlanes()>();

        r23 = $r5[0];

        $r6 = virtualinvoke r22.<android.media.Image: android.media.Image$Plane[] getPlanes()>();

        r24 = $r6[1];

        $r7 = virtualinvoke r22.<android.media.Image: android.media.Image$Plane[] getPlanes()>();

        r25 = $r7[2];

        r1 = virtualinvoke r23.<android.media.Image$Plane: java.nio.ByteBuffer getBuffer()>();

        r26 = virtualinvoke r24.<android.media.Image$Plane: java.nio.ByteBuffer getBuffer()>();

        r2 = virtualinvoke r25.<android.media.Image$Plane: java.nio.ByteBuffer getBuffer()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke r26.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        i2 = virtualinvoke r23.<android.media.Image$Plane: int getRowStride()>();

        i3 = virtualinvoke r25.<android.media.Image$Plane: int getRowStride()>();

        i4 = virtualinvoke r24.<android.media.Image$Plane: int getRowStride()>();

        i5 = virtualinvoke r23.<android.media.Image$Plane: int getPixelStride()>();

        i6 = virtualinvoke r25.<android.media.Image$Plane: int getPixelStride()>();

        i7 = virtualinvoke r24.<android.media.Image$Plane: int getPixelStride()>();

        r27 = newarray (byte)[3];

        r27[0] = 0;

        r27[1] = 0;

        r27[2] = 0;

        $i11 = i0 - 1;

        $i12 = $i11 * i5;

        $i13 = $i12 + 1;

        r28 = newarray (byte)[$i13];

        $i14 = i0 / 2;

        $i15 = $i14 - 1;

        $i16 = $i15 * i7;

        $i17 = $i16 + 1;

        r29 = newarray (byte)[$i17];

        $i18 = i0 / 2;

        $i19 = $i18 - 1;

        $i20 = $i19 * i6;

        $i21 = $i20 + 1;

        r3 = newarray (byte)[$i21];

        $i22 = i0 * 3;

        r4 = newarray (byte)[$i22];

        i36 = 0;

     label1:
        if i36 >= i1 goto label4;

        i37 = i36 / 2;

        $i23 = i2 * i36;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i23);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r28);

        $i24 = i4 * i37;

        virtualinvoke r26.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i24);

        virtualinvoke r26.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r29);

        $i25 = i3 * i37;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i25);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r3);

        i38 = 0;

     label2:
        if i38 >= i0 goto label3;

        i8 = i38 / 2;

        $i26 = i5 * i38;

        $b27 = r28[$i26];

        $b28 = (byte) $b27;

        r27[0] = $b28;

        $i29 = i7 * i8;

        $b30 = r29[$i29];

        $b31 = (byte) $b30;

        r27[1] = $b31;

        $i32 = i6 * i8;

        $b33 = r3[$i32];

        $b34 = (byte) $b33;

        r27[2] = $b34;

        $i35 = i38 * 3;

        staticinvoke <android.hardware.camera2.DngCreator: void yuvToRgb(byte[],int,byte[])>(r27, $i35, r4);

        i38 = i38 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r4);

        i36 = i36 + 1;

        goto label1;

     label4:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke r26.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        return r0;
    }

    private static native void nativeClassInit();

    private synchronized native void nativeDestroy();

    private synchronized native void nativeInit(android.hardware.camera2.impl.CameraMetadataNative, android.hardware.camera2.impl.CameraMetadataNative, java.lang.String);

    private synchronized native void nativeSetDescription(java.lang.String);

    private synchronized native void nativeSetGpsTags(int[], java.lang.String, int[], java.lang.String, java.lang.String, int[]);

    private synchronized native void nativeSetOrientation(int);

    private synchronized native void nativeSetThumbnail(java.nio.ByteBuffer, int, int);

    private synchronized native void nativeWriteImage(java.io.OutputStream, int, int, java.nio.ByteBuffer, int, int, long, boolean) throws java.io.IOException;

    private synchronized native void nativeWriteInputStream(java.io.OutputStream, java.io.InputStream, int, int, long) throws java.io.IOException;

    private static int[] toExifLatLong(double)
    {
        int i0, i1, $i2;
        double $d0, $d1, $d2, $d3, $d4, d5, d6, d7;
        int[] $r0;

        d5 := @parameter0: double;

        d6 = staticinvoke <java.lang.Math: double abs(double)>(d5);

        i0 = (int) d6;

        $d0 = (double) i0;

        $d1 = d6 - $d0;

        d7 = $d1 * 60.0;

        i1 = (int) d7;

        $r0 = newarray (int)[6];

        $r0[0] = i0;

        $r0[1] = 1;

        $r0[2] = i1;

        $r0[3] = 1;

        $d2 = (double) i1;

        $d3 = d7 - $d2;

        $d4 = $d3 * 6000.0;

        $i2 = (int) $d4;

        $r0[4] = $i2;

        $r0[5] = 100;

        return $r0;
    }

    private void writeByteBuffer(int, int, java.nio.ByteBuffer, java.io.OutputStream, int, int, long) throws java.io.IOException
    {
        android.hardware.camera2.DngCreator r0;
        int i0, i1, i2, i3, i7, $i8;
        java.io.OutputStream r1;
        long l4, l5, l6, $l9, $l10, $l11;
        java.lang.StringBuilder $r2, $r10, $r18;
        java.lang.IllegalArgumentException $r8, $r16, $r23;
        java.lang.String $r9, $r17, $r24;
        byte $b12;
        boolean $z0;
        java.nio.ByteBuffer r27;

        r0 := @this: android.hardware.camera2.DngCreator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r27 := @parameter2: java.nio.ByteBuffer;

        r1 := @parameter3: java.io.OutputStream;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        if i0 <= 0 goto label3;

        if i1 <= 0 goto label3;

        $i8 = virtualinvoke r27.<java.nio.ByteBuffer: int capacity()>();

        l5 = (long) $i8;

        $l10 = (long) i3;

        $l9 = (long) i1;

        $l11 = $l10 * $l9;

        l6 = $l11 + l4;

        $b12 = l5 cmp l6;

        if $b12 < 0 goto label2;

        i7 = i2 * i0;

        if i7 > i3 goto label1;

        virtualinvoke r27.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $z0 = virtualinvoke r27.<java.nio.ByteBuffer: boolean isDirect()>();

        specialinvoke r0.<android.hardware.camera2.DngCreator: void nativeWriteImage(java.io.OutputStream,int,int,java.nio.ByteBuffer,int,int,long,boolean)>(r1, i0, i1, r27, i3, i2, l4, $z0);

        virtualinvoke r27.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        return;

     label1:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid image pixel stride, row byte width ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is too large, expecting ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image size ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is too small (must be larger than ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image with invalid width, height: (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") passed to write");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private static void yuvToRgb(byte[], int, byte[])
    {
        byte[] r0, r1;
        int i0, $i7, $i10, $i11, $i14, $i15;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        byte $b1, $b3, $b5, $b8, $b9, $b12, $b13, $b16, $b17;
        short $s2, $s4, $s6;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r1 := @parameter2: byte[];

        $b1 = r0[0];

        $s2 = $b1 & 255;

        f0 = (float) $s2;

        $b3 = r0[1];

        $s4 = $b3 & 255;

        f1 = (float) $s4;

        $b5 = r0[2];

        $s6 = $b5 & 255;

        f2 = (float) $s6;

        $f3 = f2 - 128.0F;

        $f4 = $f3 * 1.402F;

        $f5 = $f4 + f0;

        $f6 = staticinvoke <java.lang.Math: float min(float,float)>(255.0F, $f5);

        $f7 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f6);

        $i7 = (int) $f7;

        $b8 = (byte) $i7;

        $b9 = (byte) $b8;

        r1[i0] = $b9;

        $i10 = i0 + 1;

        $f8 = f1 - 128.0F;

        $f9 = $f8 * 0.34414F;

        $f12 = f0 - $f9;

        $f10 = f2 - 128.0F;

        $f11 = $f10 * 0.71414F;

        $f13 = $f12 - $f11;

        $f14 = staticinvoke <java.lang.Math: float min(float,float)>(255.0F, $f13);

        $f15 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f14);

        $i11 = (int) $f15;

        $b12 = (byte) $i11;

        $b13 = (byte) $b12;

        r1[$i10] = $b13;

        $i14 = i0 + 2;

        $f16 = f1 - 128.0F;

        $f17 = $f16 * 1.772F;

        $f18 = $f17 + f0;

        $f19 = staticinvoke <java.lang.Math: float min(float,float)>(255.0F, $f18);

        $f20 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f19);

        $i15 = (int) $f20;

        $b16 = (byte) $i15;

        $b17 = (byte) $b16;

        r1[$i14] = $b17;

        return;
    }

    public void close()
    {
        android.hardware.camera2.DngCreator r0;

        r0 := @this: android.hardware.camera2.DngCreator;

        specialinvoke r0.<android.hardware.camera2.DngCreator: void nativeDestroy()>();

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.hardware.camera2.DngCreator r0;
        java.lang.Throwable $r2;

        r0 := @this: android.hardware.camera2.DngCreator;

     label1:
        virtualinvoke r0.<android.hardware.camera2.DngCreator: void close()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.hardware.camera2.DngCreator setDescription(java.lang.String)
    {
        android.hardware.camera2.DngCreator r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.hardware.camera2.DngCreator;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        specialinvoke r0.<android.hardware.camera2.DngCreator: void nativeSetDescription(java.lang.String)>(r1);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null description passed to setDescription.");

        throw $r2;
    }

    public android.hardware.camera2.DngCreator setLocation(android.location.Location)
    {
        android.hardware.camera2.DngCreator r0;
        double d0, d1;
        long l0;
        int[] r1, r2, $r8;
        java.lang.String r3, r13, r14;
        java.lang.IllegalArgumentException $r4;
        byte $b1, $b2;
        java.text.DateFormat $r5;
        java.lang.Long $r6;
        java.util.Calendar $r7, $r9, $r10, $r11;
        int $i3, $i4, $i5;
        android.location.Location r12;

        r0 := @this: android.hardware.camera2.DngCreator;

        r12 := @parameter0: android.location.Location;

        if r12 == null goto label5;

        d0 = virtualinvoke r12.<android.location.Location: double getLatitude()>();

        d1 = virtualinvoke r12.<android.location.Location: double getLongitude()>();

        l0 = virtualinvoke r12.<android.location.Location: long getTime()>();

        r1 = staticinvoke <android.hardware.camera2.DngCreator: int[] toExifLatLong(double)>(d0);

        r2 = staticinvoke <android.hardware.camera2.DngCreator: int[] toExifLatLong(double)>(d1);

        $b1 = d0 cmpl 0.0;

        if $b1 < 0 goto label1;

        r13 = "N";

        goto label2;

     label1:
        r13 = "S";

     label2:
        $b2 = d1 cmpl 0.0;

        if $b2 < 0 goto label3;

        r14 = "E";

        goto label4;

     label3:
        r14 = "W";

     label4:
        $r5 = <android.hardware.camera2.DngCreator: java.text.DateFormat sExifGPSDateStamp>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r3 = virtualinvoke $r5.<java.text.DateFormat: java.lang.String format(java.lang.Object)>($r6);

        $r7 = r0.<android.hardware.camera2.DngCreator: java.util.Calendar mGPSTimeStampCalendar>;

        virtualinvoke $r7.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r8 = newarray (int)[6];

        $r9 = r0.<android.hardware.camera2.DngCreator: java.util.Calendar mGPSTimeStampCalendar>;

        $i3 = virtualinvoke $r9.<java.util.Calendar: int get(int)>(11);

        $r8[0] = $i3;

        $r8[1] = 1;

        $r10 = r0.<android.hardware.camera2.DngCreator: java.util.Calendar mGPSTimeStampCalendar>;

        $i4 = virtualinvoke $r10.<java.util.Calendar: int get(int)>(12);

        $r8[2] = $i4;

        $r8[3] = 1;

        $r11 = r0.<android.hardware.camera2.DngCreator: java.util.Calendar mGPSTimeStampCalendar>;

        $i5 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(13);

        $r8[4] = $i5;

        $r8[5] = 1;

        specialinvoke r0.<android.hardware.camera2.DngCreator: void nativeSetGpsTags(int[],java.lang.String,int[],java.lang.String,java.lang.String,int[])>(r1, r13, r2, r14, r3, $r8);

        return r0;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null location passed to setLocation");

        throw $r4;
    }

    public android.hardware.camera2.DngCreator setOrientation(int)
    {
        android.hardware.camera2.DngCreator r0;
        int i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;

        r0 := @this: android.hardware.camera2.DngCreator;

        i0 := @parameter0: int;

        if i0 < 0 goto label2;

        if i0 > 8 goto label2;

        i1 = i0;

        if i0 != 0 goto label1;

        i1 = 9;

     label1:
        specialinvoke r0.<android.hardware.camera2.DngCreator: void nativeSetOrientation(int)>(i1);

        return r0;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Orientation ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid EXIF orientation value");

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public android.hardware.camera2.DngCreator setThumbnail(android.graphics.Bitmap)
    {
        android.hardware.camera2.DngCreator r0;
        int i0, i1;
        java.lang.IllegalArgumentException $r1, $r9;
        java.lang.StringBuilder $r2;
        java.lang.String $r10;
        java.nio.ByteBuffer $r11;
        android.graphics.Bitmap r12;

        r0 := @this: android.hardware.camera2.DngCreator;

        r12 := @parameter0: android.graphics.Bitmap;

        if r12 == null goto label2;

        i0 = virtualinvoke r12.<android.graphics.Bitmap: int getWidth()>();

        i1 = virtualinvoke r12.<android.graphics.Bitmap: int getHeight()>();

        if i0 > 256 goto label1;

        if i1 > 256 goto label1;

        $r11 = staticinvoke <android.hardware.camera2.DngCreator: java.nio.ByteBuffer convertToRGB(android.graphics.Bitmap)>(r12);

        specialinvoke r0.<android.hardware.camera2.DngCreator: void nativeSetThumbnail(java.nio.ByteBuffer,int,int)>($r11, i0, i1);

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thumbnail dimensions width,height (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") too large, dimensions must be smaller than ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(256);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null argument to setThumbnail");

        throw $r1;
    }

    public android.hardware.camera2.DngCreator setThumbnail(android.media.Image)
    {
        android.hardware.camera2.DngCreator r0;
        int i0, i1, i2;
        java.lang.IllegalArgumentException $r1, $r5, $r14;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r6, $r15;
        java.nio.ByteBuffer $r16;
        android.media.Image r17;

        r0 := @this: android.hardware.camera2.DngCreator;

        r17 := @parameter0: android.media.Image;

        if r17 == null goto label3;

        i1 = virtualinvoke r17.<android.media.Image: int getFormat()>();

        if i1 != 35 goto label2;

        i2 = virtualinvoke r17.<android.media.Image: int getWidth()>();

        i0 = virtualinvoke r17.<android.media.Image: int getHeight()>();

        if i2 > 256 goto label1;

        if i0 > 256 goto label1;

        $r16 = staticinvoke <android.hardware.camera2.DngCreator: java.nio.ByteBuffer convertToRGB(android.media.Image)>(r17);

        specialinvoke r0.<android.hardware.camera2.DngCreator: void nativeSetThumbnail(java.nio.ByteBuffer,int,int)>($r16, i2, i0);

        return r0;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thumbnail dimensions width,height (");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") too large, dimensions must be smaller than ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(256);

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported Image format ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null argument to setThumbnail");

        throw $r1;
    }

    public void writeByteBuffer(java.io.OutputStream, android.util.Size, java.nio.ByteBuffer, long) throws java.io.IOException
    {
        android.hardware.camera2.DngCreator r0;
        java.io.OutputStream r1;
        android.util.Size r2;
        java.nio.ByteBuffer r3;
        long l0;
        int i1, $i3, $i4;
        java.lang.IllegalArgumentException $r4, $r5, $r6, $r7;
        byte $b2;

        r0 := @this: android.hardware.camera2.DngCreator;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: android.util.Size;

        r3 := @parameter2: java.nio.ByteBuffer;

        l0 := @parameter3: long;

        if r1 == null goto label4;

        if r2 == null goto label3;

        if r3 == null goto label2;

        $b2 = l0 cmp 0L;

        if $b2 < 0 goto label1;

        i1 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        $i3 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        $i4 = i1 * 2;

        specialinvoke r0.<android.hardware.camera2.DngCreator: void writeByteBuffer(int,int,java.nio.ByteBuffer,java.io.OutputStream,int,int,long)>(i1, $i3, r3, r1, 2, $i4, l0);

        return;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Negative offset passed to writeByteBuffer");

        throw $r7;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null pixels passed to writeByteBuffer");

        throw $r6;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null size passed to writeByteBuffer");

        throw $r5;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null dngOutput passed to writeByteBuffer");

        throw $r4;
    }

    public void writeImage(java.io.OutputStream, android.media.Image) throws java.io.IOException
    {
        android.hardware.camera2.DngCreator r0;
        android.media.Image r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.media.Image$Plane[] r2;
        java.nio.ByteBuffer r3;
        java.lang.IllegalArgumentException $r4, $r5, $r9, $r11;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;
        android.media.Image$Plane $r12, $r13, $r14;
        java.io.OutputStream r15;

        r0 := @this: android.hardware.camera2.DngCreator;

        r15 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: android.media.Image;

        if r15 == null goto label4;

        if r1 == null goto label3;

        i0 = virtualinvoke r1.<android.media.Image: int getFormat()>();

        if i0 != 32 goto label2;

        r2 = virtualinvoke r1.<android.media.Image: android.media.Image$Plane[] getPlanes()>();

        if r2 == null goto label1;

        $i1 = lengthof r2;

        if $i1 <= 0 goto label1;

        $r12 = r2[0];

        r3 = virtualinvoke $r12.<android.media.Image$Plane: java.nio.ByteBuffer getBuffer()>();

        $i2 = virtualinvoke r1.<android.media.Image: int getWidth()>();

        $i3 = virtualinvoke r1.<android.media.Image: int getHeight()>();

        $r13 = r2[0];

        $i4 = virtualinvoke $r13.<android.media.Image$Plane: int getPixelStride()>();

        $r14 = r2[0];

        $i5 = virtualinvoke $r14.<android.media.Image$Plane: int getRowStride()>();

        specialinvoke r0.<android.hardware.camera2.DngCreator: void writeByteBuffer(int,int,java.nio.ByteBuffer,java.io.OutputStream,int,int,long)>($i2, $i3, r3, r15, $i4, $i5, 0L);

        return;

     label1:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Image with no planes passed to writeImage");

        throw $r11;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported image format ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null pixels to writeImage");

        throw $r5;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null dngOutput to writeImage");

        throw $r4;
    }

    public void writeInputStream(java.io.OutputStream, android.util.Size, java.io.InputStream, long) throws java.io.IOException
    {
        android.hardware.camera2.DngCreator r0;
        android.util.Size r1;
        java.io.InputStream r2;
        long l0;
        int i1, i2;
        java.lang.IllegalArgumentException $r3, $r4, $r5, $r6, $r13;
        byte $b3;
        java.lang.StringBuilder $r7;
        java.lang.String $r14;
        java.io.OutputStream r15;

        r0 := @this: android.hardware.camera2.DngCreator;

        r15 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: android.util.Size;

        r2 := @parameter2: java.io.InputStream;

        l0 := @parameter3: long;

        if r15 == null goto label5;

        if r1 == null goto label4;

        if r2 == null goto label3;

        $b3 = l0 cmp 0L;

        if $b3 < 0 goto label2;

        i1 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        i2 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        if i1 <= 0 goto label1;

        if i2 <= 0 goto label1;

        specialinvoke r0.<android.hardware.camera2.DngCreator: void nativeWriteInputStream(java.io.OutputStream,java.io.InputStream,int,int,long)>(r15, r2, i1, i2, l0);

        return;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size with invalid width, height: (");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") passed to writeInputStream");

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Negative offset passed to writeInputStream");

        throw $r6;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null pixels passed to writeInputStream");

        throw $r5;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null size passed to writeInputStream");

        throw $r4;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null dngOutput passed to writeInputStream");

        throw $r3;
    }
}
