class android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy extends java.lang.Object implements android.hardware.camera2.ICameraDeviceCallbacks
{
    public static android.hardware.camera2.ICameraDeviceCallbacks sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy;

        $r1 = r0.<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy;

        return "android.hardware.camera2.ICameraDeviceCallbacks";
    }

    public void onCaptureStarted(android.hardware.camera2.impl.CaptureResultExtras, long) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceCallbacks $r3, $r4;
        java.lang.Throwable $r5;
        android.hardware.camera2.impl.CaptureResultExtras r6;

        r0 := @this: android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy;

        r6 := @parameter0: android.hardware.camera2.impl.CaptureResultExtras;

        l0 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceCallbacks");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.hardware.camera2.impl.CaptureResultExtras: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r2 = r0.<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        interfaceinvoke $r4.<android.hardware.camera2.ICameraDeviceCallbacks: void onCaptureStarted(android.hardware.camera2.impl.CaptureResultExtras,long)>(r6, l0);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onDeviceError(int, android.hardware.camera2.impl.CaptureResultExtras) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceCallbacks $r3, $r4;
        java.lang.Throwable $r5;
        android.hardware.camera2.impl.CaptureResultExtras r6;

        r0 := @this: android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: android.hardware.camera2.impl.CaptureResultExtras;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceCallbacks");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.hardware.camera2.impl.CaptureResultExtras: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        interfaceinvoke $r4.<android.hardware.camera2.ICameraDeviceCallbacks: void onDeviceError(int,android.hardware.camera2.impl.CaptureResultExtras)>(i0, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onDeviceIdle() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceCallbacks $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceCallbacks");

        $r3 = r0.<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.camera2.ICameraDeviceCallbacks: void onDeviceIdle()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onPrepared(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceCallbacks $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceCallbacks");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.camera2.ICameraDeviceCallbacks: void onPrepared(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onRepeatingRequestError(long, int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy r0;
        long l0;
        int i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceCallbacks $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceCallbacks");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.camera2.ICameraDeviceCallbacks: void onRepeatingRequestError(long,int)>(l0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onRequestQueueEmpty() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceCallbacks $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceCallbacks");

        $r3 = r0.<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.camera2.ICameraDeviceCallbacks: void onRequestQueueEmpty()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative, android.hardware.camera2.impl.CaptureResultExtras, android.hardware.camera2.impl.PhysicalCaptureResultInfo[]) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy r0;
        android.hardware.camera2.impl.CaptureResultExtras r1;
        android.hardware.camera2.impl.PhysicalCaptureResultInfo[] r2;
        android.os.Parcel r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceCallbacks $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.camera2.impl.CameraMetadataNative r8;

        r0 := @this: android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy;

        r8 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter1: android.hardware.camera2.impl.CaptureResultExtras;

        r2 := @parameter2: android.hardware.camera2.impl.PhysicalCaptureResultInfo[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceCallbacks");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.camera2.impl.CameraMetadataNative: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.camera2.impl.CaptureResultExtras: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r2, 0);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, null, 1);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceCallbacks: void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CaptureResultExtras,android.hardware.camera2.impl.PhysicalCaptureResultInfo[])>(r8, r1, r2);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
