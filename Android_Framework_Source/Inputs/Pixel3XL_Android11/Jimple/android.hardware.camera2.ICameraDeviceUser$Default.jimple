public class android.hardware.camera2.ICameraDeviceUser$Default extends java.lang.Object implements android.hardware.camera2.ICameraDeviceUser
{

    public void <init>()
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        return null;
    }

    public void beginConfigure() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        return;
    }

    public long cancelRequest(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        return 0L;
    }

    public android.hardware.camera2.impl.CameraMetadataNative createDefaultRequest(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        return null;
    }

    public int createInputStream(int, int, int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0, i1, i2;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return 0;
    }

    public int createStream(android.hardware.camera2.params.OutputConfiguration) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        android.hardware.camera2.params.OutputConfiguration r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        r1 := @parameter0: android.hardware.camera2.params.OutputConfiguration;

        return 0;
    }

    public void deleteStream(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        return;
    }

    public void disconnect() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        return;
    }

    public int[] endConfigure(int, android.hardware.camera2.impl.CameraMetadataNative) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0;
        android.hardware.camera2.impl.CameraMetadataNative r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.camera2.impl.CameraMetadataNative;

        return null;
    }

    public void finalizeOutputConfigurations(int, android.hardware.camera2.params.OutputConfiguration) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0;
        android.hardware.camera2.params.OutputConfiguration r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.camera2.params.OutputConfiguration;

        return;
    }

    public long flush() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        return 0L;
    }

    public android.hardware.camera2.impl.CameraMetadataNative getCameraInfo() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        return null;
    }

    public int getGlobalAudioRestriction() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        return 0;
    }

    public android.view.Surface getInputSurface() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        return null;
    }

    public boolean isSessionConfigurationSupported(android.hardware.camera2.params.SessionConfiguration) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        android.hardware.camera2.params.SessionConfiguration r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        r1 := @parameter0: android.hardware.camera2.params.SessionConfiguration;

        return 0;
    }

    public void prepare(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        return;
    }

    public void prepare2(int, int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0, i1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void setCameraAudioRestriction(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        return;
    }

    public android.hardware.camera2.utils.SubmitInfo submitRequest(android.hardware.camera2.CaptureRequest, boolean) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        android.hardware.camera2.CaptureRequest r1;
        boolean z0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        z0 := @parameter1: boolean;

        return null;
    }

    public android.hardware.camera2.utils.SubmitInfo submitRequestList(android.hardware.camera2.CaptureRequest[], boolean) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        android.hardware.camera2.CaptureRequest[] r1;
        boolean z0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest[];

        z0 := @parameter1: boolean;

        return null;
    }

    public android.hardware.camera2.ICameraOfflineSession switchToOffline(android.hardware.camera2.ICameraDeviceCallbacks, int[]) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        android.hardware.camera2.ICameraDeviceCallbacks r1;
        int[] r2;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        r1 := @parameter0: android.hardware.camera2.ICameraDeviceCallbacks;

        r2 := @parameter1: int[];

        return null;
    }

    public void tearDown(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        return;
    }

    public void updateOutputConfiguration(int, android.hardware.camera2.params.OutputConfiguration) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;
        int i0;
        android.hardware.camera2.params.OutputConfiguration r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.camera2.params.OutputConfiguration;

        return;
    }

    public void waitUntilIdle() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Default r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Default;

        return;
    }
}
