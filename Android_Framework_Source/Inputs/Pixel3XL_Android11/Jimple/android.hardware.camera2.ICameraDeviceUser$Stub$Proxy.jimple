class android.hardware.camera2.ICameraDeviceUser$Stub$Proxy extends java.lang.Object implements android.hardware.camera2.ICameraDeviceUser
{
    public static android.hardware.camera2.ICameraDeviceUser sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        $r1 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void beginConfigure() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: void beginConfigure()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long cancelRequest(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;
        long l1, l2;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        l1 = interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: long cancelRequest(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.hardware.camera2.impl.CameraMetadataNative createDefaultRequest(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.camera2.ICameraDeviceUser $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.camera2.impl.CameraMetadataNative r9, r10;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.camera2.ICameraDeviceUser: android.hardware.camera2.impl.CameraMetadataNative createDefaultRequest(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.hardware.camera2.impl.CameraMetadataNative: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.camera2.impl.CameraMetadataNative) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int createInputStream(int, int, int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0, i1, i2, i3, i4;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        i3 = interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: int createInputStream(int,int,int)>(i2, i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i4 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i4;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int createStream(android.hardware.camera2.params.OutputConfiguration) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.camera2.params.OutputConfiguration r7;
        int i0, i1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r7 := @parameter0: android.hardware.camera2.params.OutputConfiguration;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.camera2.params.OutputConfiguration: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.hardware.camera2.ICameraDeviceUser: int createStream(android.hardware.camera2.params.OutputConfiguration)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void deleteStream(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: void deleteStream(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void disconnect() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: void disconnect()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int[] endConfigure(int, android.hardware.camera2.impl.CameraMetadataNative) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.camera2.impl.CameraMetadataNative r7;
        int[] r8, r9;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.camera2.impl.CameraMetadataNative;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.camera2.impl.CameraMetadataNative: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.hardware.camera2.ICameraDeviceUser: int[] endConfigure(int,android.hardware.camera2.impl.CameraMetadataNative)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void finalizeOutputConfigurations(int, android.hardware.camera2.params.OutputConfiguration) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.camera2.params.OutputConfiguration r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.camera2.params.OutputConfiguration;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.camera2.params.OutputConfiguration: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.camera2.ICameraDeviceUser: void finalizeOutputConfigurations(int,android.hardware.camera2.params.OutputConfiguration)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public long flush() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: long flush()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.hardware.camera2.impl.CameraMetadataNative getCameraInfo() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.camera2.ICameraDeviceUser $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.camera2.impl.CameraMetadataNative r9, r10;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r3 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.camera2.ICameraDeviceUser: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.camera2.impl.CameraMetadataNative: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.camera2.impl.CameraMetadataNative) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getGlobalAudioRestriction() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: int getGlobalAudioRestriction()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.view.Surface getInputSurface() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.camera2.ICameraDeviceUser $r6, $r7;
        java.lang.Throwable $r8;
        android.view.Surface r9, r10;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r3 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.camera2.ICameraDeviceUser: android.view.Surface getInputSurface()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.view.Surface: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.view.Surface) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        return "android.hardware.camera2.ICameraDeviceUser";
    }

    public boolean isSessionConfigurationSupported(android.hardware.camera2.params.SessionConfiguration) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.hardware.camera2.ICameraDeviceUser $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.camera2.params.SessionConfiguration r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r7 := @parameter0: android.hardware.camera2.params.SessionConfiguration;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.camera2.params.SessionConfiguration: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.hardware.camera2.ICameraDeviceUser: boolean isSessionConfigurationSupported(android.hardware.camera2.params.SessionConfiguration)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public void prepare(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: void prepare(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void prepare2(int, int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: void prepare2(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setCameraAudioRestriction(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: void setCameraAudioRestriction(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.hardware.camera2.utils.SubmitInfo submitRequest(android.hardware.camera2.CaptureRequest, boolean) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.camera2.ICameraDeviceUser $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.camera2.CaptureRequest r9;
        byte b1;
        android.hardware.camera2.utils.SubmitInfo r10, r11;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r9 := @parameter0: android.hardware.camera2.CaptureRequest;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

     label02:
        b1 = 1;

        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.hardware.camera2.CaptureRequest: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        goto label08;

     label07:
        b1 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r3 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z1 != 0 goto label10;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r6 == null goto label10;

        $r7 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.camera2.ICameraDeviceUser: android.hardware.camera2.utils.SubmitInfo submitRequest(android.hardware.camera2.CaptureRequest,boolean)>(r9, z0);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label12;

        $r4 = <android.hardware.camera2.utils.SubmitInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.hardware.camera2.utils.SubmitInfo) $r5;

     label11:
        goto label13;

     label12:
        r11 = null;

     label13:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label14:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
    }

    public android.hardware.camera2.utils.SubmitInfo submitRequestList(android.hardware.camera2.CaptureRequest[], boolean) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.camera2.ICameraDeviceUser $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.camera2.CaptureRequest[] r9;
        byte b1;
        android.hardware.camera2.utils.SubmitInfo r10, r11;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r9 := @parameter0: android.hardware.camera2.CaptureRequest[];

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r9, 0);

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r3 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r6 == null goto label06;

        $r7 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.camera2.ICameraDeviceUser: android.hardware.camera2.utils.SubmitInfo submitRequestList(android.hardware.camera2.CaptureRequest[],boolean)>(r9, z0);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label08;

        $r4 = <android.hardware.camera2.utils.SubmitInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.hardware.camera2.utils.SubmitInfo) $r5;

     label07:
        goto label09;

     label08:
        r11 = null;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public android.hardware.camera2.ICameraOfflineSession switchToOffline(android.hardware.camera2.ICameraDeviceCallbacks, int[]) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, $r5, r10;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.camera2.ICameraDeviceCallbacks r9;
        android.hardware.camera2.ICameraOfflineSession r11, r12;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r9 := @parameter0: android.hardware.camera2.ICameraDeviceCallbacks;

        r1 := @parameter1: int[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.hardware.camera2.ICameraDeviceCallbacks: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r1);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        r11 = interfaceinvoke $r7.<android.hardware.camera2.ICameraDeviceUser: android.hardware.camera2.ICameraOfflineSession switchToOffline(android.hardware.camera2.ICameraDeviceCallbacks,int[])>(r9, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = virtualinvoke r3.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r12 = staticinvoke <android.hardware.camera2.ICameraOfflineSession$Stub: android.hardware.camera2.ICameraOfflineSession asInterface(android.os.IBinder)>($r5);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void tearDown(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: void tearDown(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void updateOutputConfiguration(int, android.hardware.camera2.params.OutputConfiguration) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.camera2.params.OutputConfiguration r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.camera2.params.OutputConfiguration;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.camera2.params.OutputConfiguration: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.camera2.ICameraDeviceUser: void updateOutputConfiguration(int,android.hardware.camera2.params.OutputConfiguration)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void waitUntilIdle() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.camera2.ICameraDeviceUser $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.camera2.ICameraDeviceUser$Stub: android.hardware.camera2.ICameraDeviceUser getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.camera2.ICameraDeviceUser: void waitUntilIdle()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
