public interface  android.hardware.camera2.ICameraDeviceUser extends java.lang.Object implements android.os.IInterface
{
    public static final int AUDIO_RESTRICTION_NONE;
    public static final int AUDIO_RESTRICTION_VIBRATION;
    public static final int AUDIO_RESTRICTION_VIBRATION_SOUND;
    public static final int CONSTRAINED_HIGH_SPEED_MODE;
    public static final int NORMAL_MODE;
    public static final int NO_IN_FLIGHT_REPEATING_FRAMES;
    public static final int TEMPLATE_MANUAL;
    public static final int TEMPLATE_PREVIEW;
    public static final int TEMPLATE_RECORD;
    public static final int TEMPLATE_STILL_CAPTURE;
    public static final int TEMPLATE_VIDEO_SNAPSHOT;
    public static final int TEMPLATE_ZERO_SHUTTER_LAG;
    public static final int VENDOR_MODE_START;

    public abstract void beginConfigure() throws android.os.RemoteException;

    public abstract long cancelRequest(int) throws android.os.RemoteException;

    public abstract android.hardware.camera2.impl.CameraMetadataNative createDefaultRequest(int) throws android.os.RemoteException;

    public abstract int createInputStream(int, int, int) throws android.os.RemoteException;

    public abstract int createStream(android.hardware.camera2.params.OutputConfiguration) throws android.os.RemoteException;

    public abstract void deleteStream(int) throws android.os.RemoteException;

    public abstract void disconnect() throws android.os.RemoteException;

    public abstract int[] endConfigure(int, android.hardware.camera2.impl.CameraMetadataNative) throws android.os.RemoteException;

    public abstract void finalizeOutputConfigurations(int, android.hardware.camera2.params.OutputConfiguration) throws android.os.RemoteException;

    public abstract long flush() throws android.os.RemoteException;

    public abstract android.hardware.camera2.impl.CameraMetadataNative getCameraInfo() throws android.os.RemoteException;

    public abstract int getGlobalAudioRestriction() throws android.os.RemoteException;

    public abstract android.view.Surface getInputSurface() throws android.os.RemoteException;

    public abstract boolean isSessionConfigurationSupported(android.hardware.camera2.params.SessionConfiguration) throws android.os.RemoteException;

    public abstract void prepare(int) throws android.os.RemoteException;

    public abstract void prepare2(int, int) throws android.os.RemoteException;

    public abstract void setCameraAudioRestriction(int) throws android.os.RemoteException;

    public abstract android.hardware.camera2.utils.SubmitInfo submitRequest(android.hardware.camera2.CaptureRequest, boolean) throws android.os.RemoteException;

    public abstract android.hardware.camera2.utils.SubmitInfo submitRequestList(android.hardware.camera2.CaptureRequest[], boolean) throws android.os.RemoteException;

    public abstract android.hardware.camera2.ICameraOfflineSession switchToOffline(android.hardware.camera2.ICameraDeviceCallbacks, int[]) throws android.os.RemoteException;

    public abstract void tearDown(int) throws android.os.RemoteException;

    public abstract void updateOutputConfiguration(int, android.hardware.camera2.params.OutputConfiguration) throws android.os.RemoteException;

    public abstract void waitUntilIdle() throws android.os.RemoteException;

    public static void <clinit>()
    {
        <android.hardware.camera2.ICameraDeviceUser: int VENDOR_MODE_START> = 32768;

        <android.hardware.camera2.ICameraDeviceUser: int TEMPLATE_ZERO_SHUTTER_LAG> = 5;

        <android.hardware.camera2.ICameraDeviceUser: int TEMPLATE_VIDEO_SNAPSHOT> = 4;

        <android.hardware.camera2.ICameraDeviceUser: int TEMPLATE_STILL_CAPTURE> = 2;

        <android.hardware.camera2.ICameraDeviceUser: int TEMPLATE_RECORD> = 3;

        <android.hardware.camera2.ICameraDeviceUser: int TEMPLATE_PREVIEW> = 1;

        <android.hardware.camera2.ICameraDeviceUser: int TEMPLATE_MANUAL> = 6;

        <android.hardware.camera2.ICameraDeviceUser: int NO_IN_FLIGHT_REPEATING_FRAMES> = -1;

        <android.hardware.camera2.ICameraDeviceUser: int NORMAL_MODE> = 0;

        <android.hardware.camera2.ICameraDeviceUser: int CONSTRAINED_HIGH_SPEED_MODE> = 1;

        <android.hardware.camera2.ICameraDeviceUser: int AUDIO_RESTRICTION_VIBRATION_SOUND> = 3;

        <android.hardware.camera2.ICameraDeviceUser: int AUDIO_RESTRICTION_VIBRATION> = 1;

        <android.hardware.camera2.ICameraDeviceUser: int AUDIO_RESTRICTION_NONE> = 0;

        return;
    }
}
