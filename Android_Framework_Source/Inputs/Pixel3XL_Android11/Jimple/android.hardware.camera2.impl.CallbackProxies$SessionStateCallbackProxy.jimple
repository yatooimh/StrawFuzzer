public class android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy extends android.hardware.camera2.CameraCaptureSession$StateCallback
{
    private final android.hardware.camera2.CameraCaptureSession$StateCallback mCallback;
    private final java.util.concurrent.Executor mExecutor;

    public void <init>(java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$StateCallback)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        java.util.concurrent.Executor r1, $r4;
        android.hardware.camera2.CameraCaptureSession$StateCallback r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.hardware.camera2.CameraCaptureSession$StateCallback;

        specialinvoke r0.<android.hardware.camera2.CameraCaptureSession$StateCallback: void <init>()>();

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "executor must not be null");

        $r4 = (java.util.concurrent.Executor) $r3;

        r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: java.util.concurrent.Executor mExecutor> = $r4;

        $r5 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "callback must not be null");

        $r6 = (android.hardware.camera2.CameraCaptureSession$StateCallback) $r5;

        r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: android.hardware.camera2.CameraCaptureSession$StateCallback mCallback> = $r6;

        return;
    }

    public void lambda$onActive$3$CallbackProxies$SessionStateCallbackProxy(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        $r2 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: android.hardware.camera2.CameraCaptureSession$StateCallback mCallback>;

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onActive(android.hardware.camera2.CameraCaptureSession)>(r1);

        return;
    }

    public void lambda$onCaptureQueueEmpty$4$CallbackProxies$SessionStateCallbackProxy(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        $r2 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: android.hardware.camera2.CameraCaptureSession$StateCallback mCallback>;

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession)>(r1);

        return;
    }

    public void lambda$onClosed$5$CallbackProxies$SessionStateCallbackProxy(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        $r2 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: android.hardware.camera2.CameraCaptureSession$StateCallback mCallback>;

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onClosed(android.hardware.camera2.CameraCaptureSession)>(r1);

        return;
    }

    public void lambda$onConfigureFailed$1$CallbackProxies$SessionStateCallbackProxy(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        $r2 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: android.hardware.camera2.CameraCaptureSession$StateCallback mCallback>;

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onConfigureFailed(android.hardware.camera2.CameraCaptureSession)>(r1);

        return;
    }

    public void lambda$onConfigured$0$CallbackProxies$SessionStateCallbackProxy(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        $r2 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: android.hardware.camera2.CameraCaptureSession$StateCallback mCallback>;

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onConfigured(android.hardware.camera2.CameraCaptureSession)>(r1);

        return;
    }

    public void lambda$onReady$2$CallbackProxies$SessionStateCallbackProxy(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        $r2 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: android.hardware.camera2.CameraCaptureSession$StateCallback mCallback>;

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onReady(android.hardware.camera2.CameraCaptureSession)>(r1);

        return;
    }

    public void lambda$onSurfacePrepared$6$CallbackProxies$SessionStateCallbackProxy(android.hardware.camera2.CameraCaptureSession, android.view.Surface)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.view.Surface r2;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r3;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: android.view.Surface;

        $r3 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: android.hardware.camera2.CameraCaptureSession$StateCallback mCallback>;

        virtualinvoke $r3.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface)>(r1, r2);

        return;
    }

    public void onActive(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        long l0;
        java.util.concurrent.Executor r1;
        android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$ISQyEhLUI1khcOCin3OIsRyTUoU r2;
        java.lang.Throwable $r3;
        android.hardware.camera2.CameraCaptureSession r4;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r4 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: java.util.concurrent.Executor mExecutor>;

        r2 = new android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$ISQyEhLUI1khcOCin3OIsRyTUoU;

        specialinvoke r2.<android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$ISQyEhLUI1khcOCin3OIsRyTUoU: void <init>(android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy,android.hardware.camera2.CameraCaptureSession)>(r0, r4);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        long l0;
        java.util.concurrent.Executor r1;
        android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$hoQOYc189Bss2NBtrutabMRw4VU r2;
        java.lang.Throwable $r3;
        android.hardware.camera2.CameraCaptureSession r4;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r4 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: java.util.concurrent.Executor mExecutor>;

        r2 = new android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$hoQOYc189Bss2NBtrutabMRw4VU;

        specialinvoke r2.<android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$hoQOYc189Bss2NBtrutabMRw4VU: void <init>(android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy,android.hardware.camera2.CameraCaptureSession)>(r0, r4);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onClosed(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        long l0;
        java.util.concurrent.Executor r1;
        android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$9H0ZdANdMrdpoq2bfIL2l3DVsKk r2;
        java.lang.Throwable $r3;
        android.hardware.camera2.CameraCaptureSession r4;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r4 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: java.util.concurrent.Executor mExecutor>;

        r2 = new android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$9H0ZdANdMrdpoq2bfIL2l3DVsKk;

        specialinvoke r2.<android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$9H0ZdANdMrdpoq2bfIL2l3DVsKk: void <init>(android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy,android.hardware.camera2.CameraCaptureSession)>(r0, r4);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onConfigureFailed(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        long l0;
        java.util.concurrent.Executor r1;
        android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$gvbTsp9UPpKJAbdycdci_ZW5BeI r2;
        java.lang.Throwable $r3;
        android.hardware.camera2.CameraCaptureSession r4;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r4 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: java.util.concurrent.Executor mExecutor>;

        r2 = new android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$gvbTsp9UPpKJAbdycdci_ZW5BeI;

        specialinvoke r2.<android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$gvbTsp9UPpKJAbdycdci_ZW5BeI: void <init>(android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy,android.hardware.camera2.CameraCaptureSession)>(r0, r4);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onConfigured(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        long l0;
        java.util.concurrent.Executor r1;
        android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$soW0qC12Osypoky6AfL3P2_TeDw r2;
        java.lang.Throwable $r3;
        android.hardware.camera2.CameraCaptureSession r4;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r4 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: java.util.concurrent.Executor mExecutor>;

        r2 = new android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$soW0qC12Osypoky6AfL3P2_TeDw;

        specialinvoke r2.<android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$soW0qC12Osypoky6AfL3P2_TeDw: void <init>(android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy,android.hardware.camera2.CameraCaptureSession)>(r0, r4);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onReady(android.hardware.camera2.CameraCaptureSession)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        long l0;
        java.util.concurrent.Executor r1;
        android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$Hoz_iT1tD_pl7sCGu4flyo_xB90 r2;
        java.lang.Throwable $r3;
        android.hardware.camera2.CameraCaptureSession r4;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r4 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: java.util.concurrent.Executor mExecutor>;

        r2 = new android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$Hoz_iT1tD_pl7sCGu4flyo_xB90;

        specialinvoke r2.<android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$Hoz_iT1tD_pl7sCGu4flyo_xB90: void <init>(android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy,android.hardware.camera2.CameraCaptureSession)>(r0, r4);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession, android.view.Surface)
    {
        android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy r0;
        android.view.Surface r1;
        long l0;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$tuajQwbKz3BV5CZZJdjl97HF6Tw r3;
        java.lang.Throwable $r4;
        android.hardware.camera2.CameraCaptureSession r5;

        r0 := @this: android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy;

        r5 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r1 := @parameter1: android.view.Surface;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0.<android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy: java.util.concurrent.Executor mExecutor>;

        r3 = new android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$tuajQwbKz3BV5CZZJdjl97HF6Tw;

        specialinvoke r3.<android.hardware.camera2.impl._$$Lambda$CallbackProxies$SessionStateCallbackProxy$tuajQwbKz3BV5CZZJdjl97HF6Tw: void <init>(android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy,android.hardware.camera2.CameraCaptureSession,android.view.Surface)>(r0, r5, r1);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r3);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
