class android.hardware.camera2.impl.CameraCaptureSessionImpl$1 extends android.hardware.camera2.impl.CaptureCallback
{
    final android.hardware.camera2.impl.CameraCaptureSessionImpl this$0;
    final android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback;
    final java.util.concurrent.Executor val$executor;

    void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.hardware.camera2.CameraCaptureSession$CaptureCallback, java.util.concurrent.Executor)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r1;
        java.util.concurrent.Executor r2, r5;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3, r4;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r1 := @parameter0: android.hardware.camera2.impl.CameraCaptureSessionImpl;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        r4 := @parameter3: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        r5 := @parameter4: java.util.concurrent.Executor;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0> = r1;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback> = r4;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor> = r5;

        specialinvoke r0.<android.hardware.camera2.impl.CaptureCallback: void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)>(r2, r3);

        return;
    }

    public void lambda$onCaptureBufferLost$7$CameraCaptureSessionImpl$1(android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.hardware.camera2.CaptureRequest, android.view.Surface, long)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1;
        android.hardware.camera2.CaptureRequest r2;
        android.view.Surface r3;
        long l0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r4;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.view.Surface;

        l0 := @parameter3: long;

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long)>($r4, r2, r3, l0);

        return;
    }

    public void lambda$onCaptureCompleted$3$CameraCaptureSessionImpl$1(android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.hardware.camera2.CaptureRequest, android.hardware.camera2.TotalCaptureResult)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.TotalCaptureResult r3;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r4;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.TotalCaptureResult;

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>($r4, r2, r3);

        return;
    }

    public void lambda$onCaptureFailed$4$CameraCaptureSessionImpl$1(android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureFailure)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.CaptureFailure r3;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r4;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.CaptureFailure;

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>($r4, r2, r3);

        return;
    }

    public void lambda$onCapturePartial$1$CameraCaptureSessionImpl$1(android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureResult)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.CaptureResult r3;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r4;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.CaptureResult;

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCapturePartial(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>($r4, r2, r3);

        return;
    }

    public void lambda$onCaptureProgressed$2$CameraCaptureSessionImpl$1(android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureResult)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.CaptureResult r3;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r4;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.CaptureResult;

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>($r4, r2, r3);

        return;
    }

    public void lambda$onCaptureSequenceAborted$6$CameraCaptureSessionImpl$1(android.hardware.camera2.CameraCaptureSession$CaptureCallback, int)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1;
        int i0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r2;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        i0 := @parameter1: int;

        $r2 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int)>($r2, i0);

        return;
    }

    public void lambda$onCaptureSequenceCompleted$5$CameraCaptureSessionImpl$1(android.hardware.camera2.CameraCaptureSession$CaptureCallback, int, long)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1;
        int i0;
        long l1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r2;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r2 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long)>($r2, i0, l1);

        return;
    }

    public void lambda$onCaptureStarted$0$CameraCaptureSessionImpl$1(android.hardware.camera2.CameraCaptureSession$CaptureCallback, android.hardware.camera2.CaptureRequest, long, long)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1;
        android.hardware.camera2.CaptureRequest r2;
        long l0, l1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r3;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)>($r3, r2, l0, l1);

        return;
    }

    public void onCaptureBufferLost(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, android.view.Surface, long)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CaptureRequest r1;
        android.view.Surface r2;
        long l0, l1;
        java.util.concurrent.Executor r3, $r6;
        android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$VuYVXvwmJMkbTnKaOD_h_DOjJpE r4;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback $r5, r9;
        java.lang.Throwable $r7;
        android.hardware.camera2.CameraDevice r8;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r8 := @parameter0: android.hardware.camera2.CameraDevice;

        r1 := @parameter1: android.hardware.camera2.CaptureRequest;

        r2 := @parameter2: android.view.Surface;

        l0 := @parameter3: long;

        $r5 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        if $r5 == null goto label4;

        $r6 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        if $r6 == null goto label4;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        r9 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        r4 = new android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$VuYVXvwmJMkbTnKaOD_h_DOjJpE;

        specialinvoke r4.<android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$VuYVXvwmJMkbTnKaOD_h_DOjJpE: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl$1,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.hardware.camera2.CaptureRequest,android.view.Surface,long)>(r0, r9, r1, r2, l0);

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onCaptureCompleted(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, android.hardware.camera2.TotalCaptureResult)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CaptureRequest r1;
        android.hardware.camera2.TotalCaptureResult r2;
        long l0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3, $r5;
        android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$OA1Yz_YgzMO8qcV8esRjyt7ykp4 r4;
        java.util.concurrent.Executor $r6, r9;
        java.lang.Throwable $r7;
        android.hardware.camera2.CameraDevice r8;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r8 := @parameter0: android.hardware.camera2.CameraDevice;

        r1 := @parameter1: android.hardware.camera2.CaptureRequest;

        r2 := @parameter2: android.hardware.camera2.TotalCaptureResult;

        $r5 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        if $r5 == null goto label4;

        $r6 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        if $r6 == null goto label4;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r9 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        r4 = new android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$OA1Yz_YgzMO8qcV8esRjyt7ykp4;

        specialinvoke r4.<android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$OA1Yz_YgzMO8qcV8esRjyt7ykp4: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl$1,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>(r0, r3, r1, r2);

        interfaceinvoke r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onCaptureFailed(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureFailure)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CaptureRequest r1;
        android.hardware.camera2.CaptureFailure r2;
        long l0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3, $r5;
        android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$VsKq1alEqL3XH_hLTWXgi7fSF3s r4;
        java.util.concurrent.Executor $r6, r9;
        java.lang.Throwable $r7;
        android.hardware.camera2.CameraDevice r8;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r8 := @parameter0: android.hardware.camera2.CameraDevice;

        r1 := @parameter1: android.hardware.camera2.CaptureRequest;

        r2 := @parameter2: android.hardware.camera2.CaptureFailure;

        $r5 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        if $r5 == null goto label4;

        $r6 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        if $r6 == null goto label4;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r9 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        r4 = new android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$VsKq1alEqL3XH_hLTWXgi7fSF3s;

        specialinvoke r4.<android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$VsKq1alEqL3XH_hLTWXgi7fSF3s: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl$1,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>(r0, r3, r1, r2);

        interfaceinvoke r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onCapturePartial(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureResult)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CaptureRequest r1;
        android.hardware.camera2.CaptureResult r2;
        long l0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3, $r5;
        android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$HRzGZkXU2X5JDcudK0jcqdLZzV8 r4;
        java.util.concurrent.Executor $r6, r9;
        java.lang.Throwable $r7;
        android.hardware.camera2.CameraDevice r8;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r8 := @parameter0: android.hardware.camera2.CameraDevice;

        r1 := @parameter1: android.hardware.camera2.CaptureRequest;

        r2 := @parameter2: android.hardware.camera2.CaptureResult;

        $r5 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        if $r5 == null goto label4;

        $r6 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        if $r6 == null goto label4;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r9 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        r4 = new android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$HRzGZkXU2X5JDcudK0jcqdLZzV8;

        specialinvoke r4.<android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$HRzGZkXU2X5JDcudK0jcqdLZzV8: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl$1,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>(r0, r3, r1, r2);

        interfaceinvoke r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onCaptureProgressed(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureResult)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CaptureRequest r1;
        android.hardware.camera2.CaptureResult r2;
        long l0;
        java.util.concurrent.Executor r3, $r6;
        android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$7mSdNTTAoYA0D3ITDxzDJKGykz0 r4;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback $r5, r9;
        java.lang.Throwable $r7;
        android.hardware.camera2.CameraDevice r8;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r8 := @parameter0: android.hardware.camera2.CameraDevice;

        r1 := @parameter1: android.hardware.camera2.CaptureRequest;

        r2 := @parameter2: android.hardware.camera2.CaptureResult;

        $r5 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        if $r5 == null goto label4;

        $r6 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        if $r6 == null goto label4;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        r9 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        r4 = new android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$7mSdNTTAoYA0D3ITDxzDJKGykz0;

        specialinvoke r4.<android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$7mSdNTTAoYA0D3ITDxzDJKGykz0: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl$1,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>(r0, r9, r1, r2);

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onCaptureSequenceAborted(android.hardware.camera2.CameraDevice, int)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        int i0;
        long l1;
        java.util.concurrent.Executor r1, $r4;
        android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$TIJELOXvjSbPh6mpBLfBJ5ciNic r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback $r3, r7;
        java.lang.Throwable $r5;
        android.hardware.camera2.CameraDevice r6;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r9;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r6 := @parameter0: android.hardware.camera2.CameraDevice;

        i0 := @parameter1: int;

        $r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        if $r3 == null goto label4;

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        if $r4 == null goto label4;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        r7 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        r2 = new android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$TIJELOXvjSbPh6mpBLfBJ5ciNic;

        specialinvoke r2.<android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$TIJELOXvjSbPh6mpBLfBJ5ciNic: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl$1,android.hardware.camera2.CameraCaptureSession$CaptureCallback,int)>(r0, r7, i0);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

     label4:
        $r9 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: void access$300(android.hardware.camera2.impl.CameraCaptureSessionImpl,int)>($r9, i0);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onCaptureSequenceCompleted(android.hardware.camera2.CameraDevice, int, long)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        int i0;
        long l1, l2;
        java.util.concurrent.Executor r1, $r4;
        android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$KZ4tthx5TnA5BizPVljsPqqdHck r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback $r3, r7;
        java.lang.Throwable $r5;
        android.hardware.camera2.CameraDevice r6;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r9;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r6 := @parameter0: android.hardware.camera2.CameraDevice;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        if $r3 == null goto label4;

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        if $r4 == null goto label4;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r1 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        r7 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        r2 = new android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$KZ4tthx5TnA5BizPVljsPqqdHck;

        specialinvoke r2.<android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$KZ4tthx5TnA5BizPVljsPqqdHck: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl$1,android.hardware.camera2.CameraCaptureSession$CaptureCallback,int,long)>(r0, r7, i0, l1);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r5;

     label4:
        $r9 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: void access$300(android.hardware.camera2.impl.CameraCaptureSessionImpl,int)>($r9, i0);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onCaptureStarted(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, long, long)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r0;
        android.hardware.camera2.CaptureRequest r1;
        long l0, l1, l2;
        java.util.concurrent.Executor r2, $r5;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3, $r4;
        java.lang.Throwable $r6;
        android.hardware.camera2.CameraDevice r7;
        android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$uPVvNnGFdZcxxscdYQ5erNgaRWA r8;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        r7 := @parameter0: android.hardware.camera2.CameraDevice;

        r1 := @parameter1: android.hardware.camera2.CaptureRequest;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        if $r4 == null goto label4;

        $r5 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        if $r5 == null goto label4;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: java.util.concurrent.Executor val$executor>;

        r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$1: android.hardware.camera2.CameraCaptureSession$CaptureCallback val$callback>;

        r8 = new android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$uPVvNnGFdZcxxscdYQ5erNgaRWA;

        specialinvoke r8.<android.hardware.camera2.impl._$$Lambda$CameraCaptureSessionImpl$1$uPVvNnGFdZcxxscdYQ5erNgaRWA: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl$1,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.hardware.camera2.CaptureRequest,long,long)>(r0, r3, r1, l0, l1);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r8);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r6;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
