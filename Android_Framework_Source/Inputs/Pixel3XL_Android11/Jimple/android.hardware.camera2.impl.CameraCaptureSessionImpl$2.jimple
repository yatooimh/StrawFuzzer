class android.hardware.camera2.impl.CameraCaptureSessionImpl$2 extends android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK
{
    private boolean mActive;
    private boolean mBusy;
    final android.hardware.camera2.impl.CameraCaptureSessionImpl this$0;
    final java.lang.Object val$interfaceLock;
    final android.hardware.camera2.CameraCaptureSession val$session;

    void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl, android.hardware.camera2.CameraCaptureSession, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$2 r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r1;
        android.hardware.camera2.CameraCaptureSession r2;
        java.lang.Object r3;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$2;

        r1 := @parameter0: android.hardware.camera2.impl.CameraCaptureSessionImpl;

        r2 := @parameter1: android.hardware.camera2.CameraCaptureSession;

        r3 := @parameter2: java.lang.Object;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0> = r1;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.CameraCaptureSession val$session> = r2;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: java.lang.Object val$interfaceLock> = r3;

        specialinvoke r0.<android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK: void <init>()>();

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: boolean mBusy> = 0;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: boolean mActive> = 0;

        return;
    }

    public void onActive(android.hardware.camera2.CameraDevice)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$2 r0;
        android.hardware.camera2.CameraDevice r1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r2, $r4;
        android.hardware.camera2.utils.TaskSingleDrainer $r3;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r5;
        android.hardware.camera2.CameraCaptureSession $r6;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$2;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        $r2 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r3 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.utils.TaskSingleDrainer access$500(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r2);

        virtualinvoke $r3.<android.hardware.camera2.utils.TaskSingleDrainer: void taskStarted()>();

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: boolean mActive> = 1;

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r5 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.CameraCaptureSession$StateCallback access$600(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r4);

        $r6 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.CameraCaptureSession val$session>;

        virtualinvoke $r5.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onActive(android.hardware.camera2.CameraCaptureSession)>($r6);

        return;
    }

    public void onBusy(android.hardware.camera2.CameraDevice)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$2 r0;
        android.hardware.camera2.CameraDevice r1;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$2;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: boolean mBusy> = 1;

        return;
    }

    public void onDisconnected(android.hardware.camera2.CameraDevice)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$2 r0;
        android.hardware.camera2.CameraDevice r1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r2;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$2;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        $r2 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        virtualinvoke $r2.<android.hardware.camera2.impl.CameraCaptureSessionImpl: void close()>();

        return;
    }

    public void onError(android.hardware.camera2.CameraDevice, int)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$2 r0;
        int i0;
        java.lang.StringBuilder $r1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r2;
        java.lang.String $r3, $r7;
        android.hardware.camera2.CameraDevice r8;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$2;

        r8 := @parameter0: android.hardware.camera2.CameraDevice;

        i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r3 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: java.lang.String access$400(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got device error ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("CameraCaptureSession", $r7);

        return;
    }

    public void onIdle(android.hardware.camera2.CameraDevice)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$2 r0;
        boolean z0, $z1, $z3;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r1, $r2, $r5, $r7, $r9;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r3;
        android.hardware.camera2.CameraCaptureSession $r4;
        android.hardware.camera2.utils.TaskSingleDrainer $r6, $r8;
        java.lang.Throwable $r10, $r11;
        android.hardware.camera2.CameraDevice r12;
        java.lang.Object r13, r14;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$2;

        r12 := @parameter0: android.hardware.camera2.CameraDevice;

        r13 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: java.lang.Object val$interfaceLock>;

        entermonitor r13;

     label01:
        $r1 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        z0 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean access$700(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r1);

        exitmonitor r13;

     label02:
        $z1 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: boolean mBusy>;

        if $z1 == 0 goto label08;

        if z0 == 0 goto label08;

        $r7 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r8 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.utils.TaskSingleDrainer access$800(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r7);

        virtualinvoke $r8.<android.hardware.camera2.utils.TaskSingleDrainer: void taskFinished()>();

        r14 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: java.lang.Object val$interfaceLock>;

        entermonitor r14;

     label03:
        $r9 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean access$702(android.hardware.camera2.impl.CameraCaptureSessionImpl,boolean)>($r9, 0);

        exitmonitor r14;

     label04:
        goto label08;

     label05:
        $r11 := @caughtexception;

     label06:
        exitmonitor r14;

     label07:
        throw $r11;

     label08:
        $z3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: boolean mActive>;

        if $z3 == 0 goto label09;

        $r5 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r6 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.utils.TaskSingleDrainer access$500(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r5);

        virtualinvoke $r6.<android.hardware.camera2.utils.TaskSingleDrainer: void taskFinished()>();

     label09:
        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: boolean mBusy> = 0;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: boolean mActive> = 0;

        $r2 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r3 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.CameraCaptureSession$StateCallback access$600(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r2);

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.CameraCaptureSession val$session>;

        virtualinvoke $r3.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onReady(android.hardware.camera2.CameraCaptureSession)>($r4);

        return;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor r13;

     label12:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void onOpened(android.hardware.camera2.CameraDevice)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$2 r0;
        android.hardware.camera2.CameraDevice r1;
        java.lang.AssertionError $r2;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$2;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("Camera must already be open before creating a session");

        throw $r2;
    }

    public void onRequestQueueEmpty()
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$2 r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;
        android.hardware.camera2.CameraCaptureSession $r3;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$2;

        $r1 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r2 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.CameraCaptureSession$StateCallback access$600(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r1);

        $r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.CameraCaptureSession val$session>;

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession)>($r3);

        return;
    }

    public void onSurfacePrepared(android.view.Surface)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$2 r0;
        android.view.Surface r1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r2;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r3;
        android.hardware.camera2.CameraCaptureSession $r4;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$2;

        r1 := @parameter0: android.view.Surface;

        $r2 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r3 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.CameraCaptureSession$StateCallback access$600(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r2);

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$2: android.hardware.camera2.CameraCaptureSession val$session>;

        virtualinvoke $r3.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface)>($r4, r1);

        return;
    }

    public void onUnconfigured(android.hardware.camera2.CameraDevice)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$2 r0;
        android.hardware.camera2.CameraDevice r1;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$2;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        return;
    }
}
