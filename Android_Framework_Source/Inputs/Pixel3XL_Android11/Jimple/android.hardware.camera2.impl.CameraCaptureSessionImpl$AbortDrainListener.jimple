class android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener extends java.lang.Object implements android.hardware.camera2.utils.TaskDrainer$DrainListener
{
    final android.hardware.camera2.impl.CameraCaptureSessionImpl this$0;

    private void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r1;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener;

        r1 := @parameter0: android.hardware.camera2.impl.CameraCaptureSessionImpl;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl, android.hardware.camera2.impl.CameraCaptureSessionImpl$1)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r2;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener;

        r1 := @parameter0: android.hardware.camera2.impl.CameraCaptureSessionImpl;

        r2 := @parameter1: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        specialinvoke r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl)>(r1);

        return;
    }

    public void onDrained()
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener r0;
        java.lang.Object r1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r3, $r5, $r6;
        android.hardware.camera2.impl.CameraDeviceImpl $r4;
        boolean $z0;
        android.hardware.camera2.utils.TaskSingleDrainer $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener;

        $r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r4 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl access$1000(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r3);

        r1 = $r4.<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.Object mInterfaceLock>;

        entermonitor r1;

     label1:
        $r5 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean access$900(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r5);

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r7 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.utils.TaskSingleDrainer access$500(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r6);

        virtualinvoke $r7.<android.hardware.camera2.utils.TaskSingleDrainer: void beginDrain()>();

        exitmonitor r1;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
