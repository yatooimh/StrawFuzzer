class android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener extends java.lang.Object implements android.hardware.camera2.utils.TaskDrainer$DrainListener
{
    final android.hardware.camera2.impl.CameraCaptureSessionImpl this$0;

    private void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r1;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener;

        r1 := @parameter0: android.hardware.camera2.impl.CameraCaptureSessionImpl;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl, android.hardware.camera2.impl.CameraCaptureSessionImpl$1)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r2;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener;

        r1 := @parameter0: android.hardware.camera2.impl.CameraCaptureSessionImpl;

        r2 := @parameter1: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        specialinvoke r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl)>(r1);

        return;
    }

    public void onDrained()
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener r0;
        java.lang.Object r1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r3, $r5, $r6, $r10;
        android.hardware.camera2.impl.CameraDeviceImpl $r4, $r7;
        boolean $z0;
        java.lang.Throwable $r8, $r15;
        android.hardware.camera2.CameraAccessException $r9;
        java.lang.String $r11, $r14;
        java.lang.StringBuilder r17;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener;

        $r3 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r4 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl access$1000(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r3);

        r1 = $r4.<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.Object mInterfaceLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean access$900(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r5);

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r6 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r7 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl access$1000(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r6);

        virtualinvoke $r7.<android.hardware.camera2.impl.CameraDeviceImpl: boolean configureStreamsChecked(android.hardware.camera2.params.InputConfiguration,java.util.List,int,android.hardware.camera2.CaptureRequest)>(null, null, 0, null);

     label04:
        goto label08;

     label05:
        $r15 := @caughtexception;

        goto label08;

     label06:
        $r9 := @caughtexception;

     label07:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r11 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: java.lang.String access$400(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r10);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while unconfiguring outputs: ");

        $r14 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CameraCaptureSession", $r14, $r9);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r8 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.hardware.camera2.CameraAccessException from label03 to label04 with label06;
        catch java.lang.IllegalStateException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
