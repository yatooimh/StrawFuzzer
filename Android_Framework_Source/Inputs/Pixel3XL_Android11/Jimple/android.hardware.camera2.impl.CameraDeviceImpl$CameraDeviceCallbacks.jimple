public class android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks extends android.hardware.camera2.ICameraDeviceCallbacks$Stub
{
    final android.hardware.camera2.impl.CameraDeviceImpl this$0;

    public void <init>(android.hardware.camera2.impl.CameraDeviceImpl)
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks r0;
        android.hardware.camera2.impl.CameraDeviceImpl r1;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks;

        r1 := @parameter0: android.hardware.camera2.impl.CameraDeviceImpl;

        r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0> = r1;

        specialinvoke r0.<android.hardware.camera2.ICameraDeviceCallbacks$Stub: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks r0;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks;

        return r0;
    }

    public void onCaptureStarted(android.hardware.camera2.impl.CaptureResultExtras, long)
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks r0;
        long l0, l2, l3, l4, l5, l6;
        int i1;
        android.hardware.camera2.impl.CaptureCallbackHolder r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$1 r3;
        android.hardware.camera2.impl.CameraDeviceImpl $r4, $r5, $r7, $r8, $r9, $r12, $r13;
        android.hardware.camera2.impl.ICameraDeviceUserWrapper $r6;
        android.util.SparseArray $r10;
        java.lang.Object $r11, r21, r26;
        boolean $z0;
        android.hardware.camera2.impl.CameraOfflineSessionImpl $r14, r22;
        java.lang.Throwable $r15, $r16, $r17, $r18, $r19, r24, r27, r28;
        android.hardware.camera2.impl.CaptureResultExtras r20;
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks r23;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks;

        r20 := @parameter0: android.hardware.camera2.impl.CaptureResultExtras;

        l0 := @parameter1: long;

        i1 = virtualinvoke r20.<android.hardware.camera2.impl.CaptureResultExtras: int getRequestId()>();

        l2 = virtualinvoke r20.<android.hardware.camera2.impl.CaptureResultExtras: long getFrameNumber()>();

        l3 = virtualinvoke r20.<android.hardware.camera2.impl.CaptureResultExtras: long getLastCompletedRegularFrameNumber()>();

        l5 = virtualinvoke r20.<android.hardware.camera2.impl.CaptureResultExtras: long getLastCompletedReprocessFrameNumber()>();

        l4 = virtualinvoke r20.<android.hardware.camera2.impl.CaptureResultExtras: long getLastCompletedZslFrameNumber()>();

        $r4 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r21 = $r4.<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.Object mInterfaceLock>;

        entermonitor r21;

     label01:
        $r5 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r6 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.ICameraDeviceUserWrapper access$000(android.hardware.camera2.impl.CameraDeviceImpl)>($r5);

        if $r6 != null goto label03;

        exitmonitor r21;

     label02:
        return;

     label03:
        $r7 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r22 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r7);

     label04:
        if r22 == null goto label09;

     label05:
        $r13 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r14 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r13);

        r23 = virtualinvoke $r14.<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks getCallbacks()>();

     label06:
        virtualinvoke r23.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: void onCaptureStarted(android.hardware.camera2.impl.CaptureResultExtras,long)>(r20, l0);

        exitmonitor r21;

     label07:
        return;

     label08:
        $r15 := @caughtexception;

        r24 = $r15;

        goto label30;

     label09:
        $r8 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: void access$800(android.hardware.camera2.impl.CameraDeviceImpl,long,long,long)>($r8, l3, l5, l4);

        $r9 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r10 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.util.SparseArray access$900(android.hardware.camera2.impl.CameraDeviceImpl)>($r9);

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r1 = (android.hardware.camera2.impl.CaptureCallbackHolder) $r11;

     label10:
        if r1 != null goto label13;

     label11:
        exitmonitor r21;

     label12:
        return;

     label13:
        $r12 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: boolean access$400(android.hardware.camera2.impl.CameraDeviceImpl)>($r12);

        if $z0 == 0 goto label15;

        exitmonitor r21;

     label14:
        return;

     label15:
        l6 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label16:
        r2 = virtualinvoke r1.<android.hardware.camera2.impl.CaptureCallbackHolder: java.util.concurrent.Executor getExecutor()>();

        r3 = new android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$1;

     label17:
        specialinvoke r3.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$1: void <init>(android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks,android.hardware.camera2.impl.CaptureResultExtras,android.hardware.camera2.impl.CaptureCallbackHolder,long,long)>(r0, r20, r1, l0, l2);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r3);

     label18:
        r26 = r21;

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l6);

     label20:
        r26 = r21;

     label21:
        exitmonitor r21;

     label22:
        return;

     label23:
        $r18 := @caughtexception;

        r27 = $r18;

        goto label25;

     label24:
        $r16 := @caughtexception;

        r27 = $r16;

     label25:
        r26 = r21;

     label26:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l6);

     label27:
        r26 = r21;

     label28:
        throw r27;

     label29:
        $r19 := @caughtexception;

        r24 = $r19;

     label30:
        r28 = r24;

     label31:
        r26 = r21;

     label32:
        exitmonitor r21;

     label33:
        throw r28;

     label34:
        $r17 := @caughtexception;

        r28 = $r17;

        r21 = r26;

        goto label31;

        catch java.lang.Throwable from label01 to label02 with label29;
        catch java.lang.Throwable from label03 to label04 with label29;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label29;
        catch java.lang.Throwable from label09 to label10 with label29;
        catch java.lang.Throwable from label11 to label12 with label29;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label15 to label16 with label29;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label19 to label20 with label34;
        catch java.lang.Throwable from label21 to label22 with label34;
        catch java.lang.Throwable from label26 to label27 with label34;
        catch java.lang.Throwable from label28 to label29 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
    }

    public void onDeviceError(int, android.hardware.camera2.impl.CaptureResultExtras)
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks r0;
        int i0;
        android.hardware.camera2.impl.CaptureResultExtras r1;
        android.hardware.camera2.impl.CameraDeviceImpl $r2;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.camera2.impl.CaptureResultExtras;

        $r2 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        virtualinvoke $r2.<android.hardware.camera2.impl.CameraDeviceImpl: void onDeviceError(int,android.hardware.camera2.impl.CaptureResultExtras)>(i0, r1);

        return;
    }

    public void onDeviceIdle()
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks r0;
        android.hardware.camera2.impl.CameraDeviceImpl $r1;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks;

        $r1 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        virtualinvoke $r1.<android.hardware.camera2.impl.CameraDeviceImpl: void onDeviceIdle()>();

        return;
    }

    public void onPrepared(int)
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks r0;
        int i0;
        android.hardware.camera2.params.OutputConfiguration r1;
        android.hardware.camera2.impl.CameraDeviceImpl $r2, $r3, $r5, $r8, $r12, $r14;
        android.hardware.camera2.impl.CameraOfflineSessionImpl $r4, $r15;
        android.util.SparseArray $r6;
        java.lang.Object $r7, $r10, r18;
        java.util.List $r9;
        boolean $z0;
        android.view.Surface $r11;
        java.lang.String $r13;
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks $r16;
        java.lang.Throwable $r17;
        android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK r19;
        java.util.Iterator r20;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks;

        i0 := @parameter0: int;

        $r2 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r18 = $r2.<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.Object mInterfaceLock>;

        entermonitor r18;

     label01:
        $r3 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r4 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r3);

        if $r4 == null goto label03;

        $r14 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r15 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r14);

        $r16 = virtualinvoke $r15.<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks getCallbacks()>();

        virtualinvoke $r16.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: void onPrepared(int)>(i0);

        exitmonitor r18;

     label02:
        return;

     label03:
        $r5 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r6 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.util.SparseArray access$1400(android.hardware.camera2.impl.CameraDeviceImpl)>($r5);

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.hardware.camera2.params.OutputConfiguration) $r7;

        $r8 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r19 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK access$100(android.hardware.camera2.impl.CameraDeviceImpl)>($r8);

        exitmonitor r18;

     label04:
        if r19 != null goto label05;

        return;

     label05:
        if r1 != null goto label06;

        $r12 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r13 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: java.lang.String access$1500(android.hardware.camera2.impl.CameraDeviceImpl)>($r12);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r13, "onPrepared invoked for unknown output Surface");

        return;

     label06:
        $r9 = virtualinvoke r1.<android.hardware.camera2.params.OutputConfiguration: java.util.List getSurfaces()>();

        r20 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r10 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.view.Surface) $r10;

        virtualinvoke r19.<android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK: void onSurfacePrepared(android.view.Surface)>($r11);

        goto label07;

     label08:
        return;

     label09:
        $r17 := @caughtexception;

     label10:
        exitmonitor r18;

     label11:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void onRepeatingRequestError(long, int)
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks r0;
        long l0;
        int i1, $i2, $i3, $i4;
        java.lang.Object r1;
        android.hardware.camera2.impl.CameraDeviceImpl $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r17;
        android.hardware.camera2.impl.ICameraDeviceUserWrapper $r5;
        android.hardware.camera2.impl.CameraOfflineSessionImpl $r8, $r18;
        int[] $r12;
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks $r19;
        java.lang.Throwable $r20;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r3 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r1 = $r3.<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.Object mInterfaceLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r5 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.ICameraDeviceUserWrapper access$000(android.hardware.camera2.impl.CameraDeviceImpl)>($r4);

        if $r5 == null goto label08;

        $r6 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $i2 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: int access$500(android.hardware.camera2.impl.CameraDeviceImpl)>($r6);

        if $i2 != -1 goto label03;

     label02:
        goto label08;

     label03:
        $r7 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r8 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r7);

        if $r8 == null goto label05;

        $r17 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r18 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r17);

        $r19 = virtualinvoke $r18.<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks getCallbacks()>();

        virtualinvoke $r19.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: void onRepeatingRequestError(long,int)>(l0, i1);

        exitmonitor r1;

     label04:
        return;

     label05:
        $r10 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r9 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $i3 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: int access$500(android.hardware.camera2.impl.CameraDeviceImpl)>($r9);

        $r11 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r12 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: int[] access$600(android.hardware.camera2.impl.CameraDeviceImpl)>($r11);

        staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: void access$700(android.hardware.camera2.impl.CameraDeviceImpl,int,long,int[])>($r10, $i3, l0, $r12);

        $r13 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $i4 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: int access$500(android.hardware.camera2.impl.CameraDeviceImpl)>($r13);

        if $i4 != i1 goto label06;

        $r14 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: int access$502(android.hardware.camera2.impl.CameraDeviceImpl,int)>($r14, -1);

        $r15 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: int[] access$602(android.hardware.camera2.impl.CameraDeviceImpl,int[])>($r15, null);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r20 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void onRequestQueueEmpty()
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks r0;
        java.lang.Object r1;
        android.hardware.camera2.impl.CameraDeviceImpl $r2, $r3, $r5, $r6;
        android.hardware.camera2.impl.CameraOfflineSessionImpl $r4, $r7;
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks $r8;
        java.lang.Throwable $r9;
        android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK r10;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks;

        $r2 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r1 = $r2.<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.Object mInterfaceLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r4 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r3);

        if $r4 == null goto label3;

        $r6 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r7 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r6);

        $r8 = virtualinvoke $r7.<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks getCallbacks()>();

        virtualinvoke $r8.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: void onRequestQueueEmpty()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r10 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK access$100(android.hardware.camera2.impl.CameraDeviceImpl)>($r5);

        exitmonitor r1;

     label4:
        if r10 != null goto label5;

        return;

     label5:
        virtualinvoke r10.<android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK: void onRequestQueueEmpty()>();

        return;

     label6:
        $r9 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative, android.hardware.camera2.impl.CaptureResultExtras, android.hardware.camera2.impl.PhysicalCaptureResultInfo[]) throws android.os.RemoteException
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks r0;
        long l0, l8, l9;
        java.lang.Object r1, $r15, $r19, $r25, $r28, r54, r62;
        android.hardware.camera2.impl.CaptureCallbackHolder r2;
        android.hardware.camera2.CaptureRequest r3;
        java.util.List r5;
        android.util.Range r6;
        int i1, i2, $i3, $i4, $i5, i6, i7;
        android.hardware.camera2.TotalCaptureResult r7;
        android.hardware.camera2.impl.CameraDeviceImpl $r8, $r9, $r10, $r11, $r17, $r20, $r21, $r22, $r31, $r33, $r35, $r36, $r38;
        android.hardware.camera2.CameraCharacteristics$Key $r12, $r14;
        android.hardware.camera2.CameraCharacteristics $r13;
        android.util.Size $r16;
        android.util.SparseArray $r18;
        android.hardware.camera2.impl.FrameNumberTracker $r23, $r32, $r37, r57;
        android.hardware.camera2.CaptureResult$Key $r24;
        java.lang.Long $r26;
        android.hardware.camera2.CaptureRequest$Key $r27;
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$3 $r29;
        java.util.concurrent.Executor $r30;
        android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$2 $r34;
        android.hardware.camera2.impl.CameraOfflineSessionImpl $r39, r55;
        java.lang.Throwable $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, r53;
        android.hardware.camera2.impl.CameraMetadataNative r49, r58;
        android.hardware.camera2.impl.CaptureResultExtras r50;
        android.hardware.camera2.impl.PhysicalCaptureResultInfo[] r51;
        android.hardware.camera2.impl.ICameraDeviceUserWrapper r52;
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks r56;
        boolean z0, z1, z2;
        android.hardware.camera2.CaptureResult r59, r61;
        java.lang.Runnable r60;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks;

        r49 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r50 := @parameter1: android.hardware.camera2.impl.CaptureResultExtras;

        r51 := @parameter2: android.hardware.camera2.impl.PhysicalCaptureResultInfo[];

        i6 = virtualinvoke r50.<android.hardware.camera2.impl.CaptureResultExtras: int getRequestId()>();

        l0 = virtualinvoke r50.<android.hardware.camera2.impl.CaptureResultExtras: long getFrameNumber()>();

        $r8 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r1 = $r8.<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.Object mInterfaceLock>;

        entermonitor r1;

     label01:
        $r9 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r52 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.ICameraDeviceUserWrapper access$000(android.hardware.camera2.impl.CameraDeviceImpl)>($r9);

     label02:
        if r52 != null goto label06;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        $r42 := @caughtexception;

        r53 = $r42;

        r54 = r1;

        goto label59;

     label06:
        $r10 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r55 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r10);

     label07:
        if r55 == null goto label12;

     label08:
        $r38 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r39 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r38);

        r56 = virtualinvoke $r39.<android.hardware.camera2.impl.CameraOfflineSessionImpl: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks getCallbacks()>();

     label09:
        virtualinvoke r56.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CaptureResultExtras,android.hardware.camera2.impl.PhysicalCaptureResultInfo[])>(r49, r50, r51);

        exitmonitor r1;

     label10:
        return;

     label11:
        $r48 := @caughtexception;

        r53 = $r48;

        r54 = r1;

        goto label59;

     label12:
        $r12 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_SHADING_MAP_SIZE>;

        $r11 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r13 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.CameraCharacteristics access$1000(android.hardware.camera2.impl.CameraDeviceImpl)>($r11);

        $r14 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_SHADING_MAP_SIZE>;

        $r15 = virtualinvoke $r13.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r14);

        $r16 = (android.util.Size) $r15;

        virtualinvoke r49.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CameraCharacteristics$Key,java.lang.Object)>($r12, $r16);

        $r17 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r18 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.util.SparseArray access$900(android.hardware.camera2.impl.CameraDeviceImpl)>($r17);

        $r19 = virtualinvoke $r18.<android.util.SparseArray: java.lang.Object get(int)>(i6);

        r2 = (android.hardware.camera2.impl.CaptureCallbackHolder) $r19;

        $i3 = virtualinvoke r50.<android.hardware.camera2.impl.CaptureResultExtras: int getSubsequenceId()>();

        r3 = virtualinvoke r2.<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest(int)>($i3);

     label13:
        $i4 = virtualinvoke r50.<android.hardware.camera2.impl.CaptureResultExtras: int getPartialResultCount()>();

        $r20 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $i5 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: int access$1100(android.hardware.camera2.impl.CameraDeviceImpl)>($r20);

        if $i4 >= $i5 goto label15;

     label14:
        z0 = 1;

        goto label16;

     label15:
        z0 = 0;

     label16:
        i7 = virtualinvoke r3.<android.hardware.camera2.CaptureRequest: int getRequestType()>();

     label17:
        if r2 != null goto label20;

     label18:
        $r36 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r37 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.FrameNumberTracker access$1200(android.hardware.camera2.impl.CameraDeviceImpl)>($r36);

        virtualinvoke $r37.<android.hardware.camera2.impl.FrameNumberTracker: void updateTracker(long,android.hardware.camera2.CaptureResult,boolean,int)>(l0, null, z0, i7);

        exitmonitor r1;

     label19:
        return;

     label20:
        $r21 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        z1 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: boolean access$400(android.hardware.camera2.impl.CameraDeviceImpl)>($r21);

     label21:
        if z1 == 0 goto label26;

     label22:
        $r35 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        r57 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.FrameNumberTracker access$1200(android.hardware.camera2.impl.CameraDeviceImpl)>($r35);

     label23:
        virtualinvoke r57.<android.hardware.camera2.impl.FrameNumberTracker: void updateTracker(long,android.hardware.camera2.CaptureResult,boolean,int)>(l0, null, z0, i7);

        exitmonitor r1;

     label24:
        return;

     label25:
        $r43 := @caughtexception;

        r53 = $r43;

        r54 = r1;

        goto label59;

     label26:
        z2 = virtualinvoke r2.<android.hardware.camera2.impl.CaptureCallbackHolder: boolean hasBatchedOutputs()>();

     label27:
        if z2 == 0 goto label31;

     label28:
        r58 = new android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r58.<android.hardware.camera2.impl.CameraMetadataNative: void <init>(android.hardware.camera2.impl.CameraMetadataNative)>(r49);

     label29:
        goto label32;

     label30:
        $r40 := @caughtexception;

        r53 = $r40;

        r54 = r1;

        goto label59;

     label31:
        r58 = null;

     label32:
        if z0 == 0 goto label35;

     label33:
        r59 = new android.hardware.camera2.CaptureResult;

        specialinvoke r59.<android.hardware.camera2.CaptureResult: void <init>(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CaptureResultExtras)>(r49, r3, r50);

        $r34 = new android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$2;

        specialinvoke $r34.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$2: void <init>(android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks,android.hardware.camera2.impl.CaptureCallbackHolder,android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CaptureResultExtras,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>(r0, r2, r58, r50, r3, r59);

        r60 = $r34;

     label34:
        r61 = r59;

        goto label40;

     label35:
        $r22 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r23 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.FrameNumberTracker access$1200(android.hardware.camera2.impl.CameraDeviceImpl)>($r22);

        r5 = virtualinvoke $r23.<android.hardware.camera2.impl.FrameNumberTracker: java.util.List popPartialResults(long)>(l0);

        $r24 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_TIMESTAMP>;

        $r25 = virtualinvoke r49.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r24);

        $r26 = (java.lang.Long) $r25;

        l8 = virtualinvoke $r26.<java.lang.Long: long longValue()>();

        $r27 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_TARGET_FPS_RANGE>;

        $r28 = virtualinvoke r3.<android.hardware.camera2.CaptureRequest: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r27);

        r6 = (android.util.Range) $r28;

        i1 = virtualinvoke r50.<android.hardware.camera2.impl.CaptureResultExtras: int getSubsequenceId()>();

        r7 = new android.hardware.camera2.TotalCaptureResult;

        i2 = virtualinvoke r2.<android.hardware.camera2.impl.CaptureCallbackHolder: int getSessionId()>();

     label36:
        specialinvoke r7.<android.hardware.camera2.TotalCaptureResult: void <init>(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CaptureResultExtras,java.util.List,int,android.hardware.camera2.impl.PhysicalCaptureResultInfo[])>(r49, r3, r50, r5, i2, r51);

     label37:
        r62 = r1;

     label38:
        $r29 = new android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$3;

        specialinvoke $r29.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$3: void <init>(android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks,android.hardware.camera2.impl.CaptureCallbackHolder,android.hardware.camera2.impl.CameraMetadataNative,long,int,android.util.Range,android.hardware.camera2.impl.CaptureResultExtras,java.util.List,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>(r0, r2, r58, l8, i1, r6, r50, r5, r3, r7);

        r60 = $r29;

     label39:
        r61 = r7;

     label40:
        r62 = r1;

     label41:
        l9 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label42:
        $r30 = virtualinvoke r2.<android.hardware.camera2.impl.CaptureCallbackHolder: java.util.concurrent.Executor getExecutor()>();

        interfaceinvoke $r30.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r60);

     label43:
        r62 = r1;

     label44:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

     label45:
        r62 = r1;

     label46:
        $r31 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r32 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.FrameNumberTracker access$1200(android.hardware.camera2.impl.CameraDeviceImpl)>($r31);

        virtualinvoke $r32.<android.hardware.camera2.impl.FrameNumberTracker: void updateTracker(long,android.hardware.camera2.CaptureResult,boolean,int)>(l0, r61, z0, i7);

     label47:
        if z0 != 0 goto label49;

        r62 = r1;

     label48:
        $r33 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: void access$1300(android.hardware.camera2.impl.CameraDeviceImpl)>($r33);

     label49:
        r62 = r1;

     label50:
        exitmonitor r1;

     label51:
        return;

     label52:
        $r47 := @caughtexception;

        r62 = r1;

     label53:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

     label54:
        r62 = r1;

     label55:
        throw $r47;

     label56:
        $r46 := @caughtexception;

        r53 = $r46;

        r54 = r1;

        goto label59;

     label57:
        $r44 := @caughtexception;

        r53 = $r44;

        r54 = r1;

        goto label59;

     label58:
        $r45 := @caughtexception;

        r53 = $r45;

        r54 = r1;

     label59:
        r62 = r54;

     label60:
        exitmonitor r54;

     label61:
        throw r53;

     label62:
        $r41 := @caughtexception;

        r53 = $r41;

        r54 = r62;

        goto label59;

        catch java.lang.Throwable from label01 to label02 with label58;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label58;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label12 to label13 with label58;
        catch java.lang.Throwable from label13 to label14 with label58;
        catch java.lang.Throwable from label16 to label17 with label58;
        catch java.lang.Throwable from label18 to label19 with label05;
        catch java.lang.Throwable from label20 to label21 with label58;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label26 to label27 with label57;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label33 to label34 with label30;
        catch java.lang.Throwable from label35 to label36 with label57;
        catch java.lang.Throwable from label36 to label37 with label56;
        catch java.lang.Throwable from label38 to label39 with label62;
        catch java.lang.Throwable from label41 to label42 with label62;
        catch java.lang.Throwable from label42 to label43 with label52;
        catch java.lang.Throwable from label44 to label45 with label62;
        catch java.lang.Throwable from label46 to label47 with label62;
        catch java.lang.Throwable from label48 to label49 with label62;
        catch java.lang.Throwable from label50 to label51 with label62;
        catch java.lang.Throwable from label53 to label54 with label62;
        catch java.lang.Throwable from label55 to label56 with label62;
        catch java.lang.Throwable from label60 to label61 with label62;
    }
}
