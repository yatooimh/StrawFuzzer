class android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3 extends java.lang.Object implements java.lang.Runnable
{
    final android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks this$1;
    final long val$frameNumber;
    final android.hardware.camera2.impl.CaptureCallbackHolder val$holder;
    final android.hardware.camera2.impl.CaptureResultExtras val$resultExtras;
    final long val$timestamp;

    void <init>(android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks, android.hardware.camera2.impl.CaptureCallbackHolder, android.hardware.camera2.impl.CaptureResultExtras, long, long)
    {
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3 r0;
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks r1;
        android.hardware.camera2.impl.CaptureCallbackHolder r2;
        android.hardware.camera2.impl.CaptureResultExtras r3;
        long l0, l1;

        r0 := @this: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3;

        r1 := @parameter0: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks;

        r2 := @parameter1: android.hardware.camera2.impl.CaptureCallbackHolder;

        r3 := @parameter2: android.hardware.camera2.impl.CaptureResultExtras;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks this$1> = r1;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CaptureCallbackHolder val$holder> = r2;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CaptureResultExtras val$resultExtras> = r3;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: long val$timestamp> = l0;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: long val$frameNumber> = l1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3 r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1;
        int i0, $i5, $i8, $i9, $i12, $i14, i17;
        android.util.Range r2;
        long l1, l2, l3, l4, $l6, $l7, $l10, $l11, $l13, $l15, $l16;
        android.hardware.camera2.impl.CaptureCallbackHolder $r3, $r8, $r9, $r13, $r17, $r18;
        android.hardware.camera2.impl.CaptureCallback $r4;
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks $r5, $r10, $r21;
        android.hardware.camera2.impl.CameraOfflineSessionImpl $r6, $r12, $r22;
        boolean $z0, $z1;
        android.hardware.camera2.impl.CaptureResultExtras $r7, $r11;
        android.hardware.camera2.CaptureRequest $r14, r23, r24;
        android.hardware.camera2.CaptureRequest$Key $r15;
        java.lang.Object $r16;
        java.lang.Comparable $r19;
        java.lang.Integer $r20;

        r0 := @this: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3;

        $r3 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        $r4 = virtualinvoke $r3.<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.impl.CaptureCallback getCallback()>();

        r1 = virtualinvoke $r4.<android.hardware.camera2.impl.CaptureCallback: android.hardware.camera2.CameraCaptureSession$CaptureCallback getSessionCallback()>();

        $r5 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks this$1>;

        $r6 = $r5.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraOfflineSessionImpl this$0>;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraOfflineSessionImpl: boolean access$000(android.hardware.camera2.impl.CameraOfflineSessionImpl)>($r6);

        if $z0 != 0 goto label4;

        if r1 == null goto label4;

        $r7 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CaptureResultExtras val$resultExtras>;

        i0 = virtualinvoke $r7.<android.hardware.camera2.impl.CaptureResultExtras: int getSubsequenceId()>();

        $r8 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        r23 = virtualinvoke $r8.<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest(int)>(i0);

        $r9 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        $z1 = virtualinvoke $r9.<android.hardware.camera2.impl.CaptureCallbackHolder: boolean hasBatchedOutputs()>();

        if $z1 == 0 goto label3;

        $r15 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_TARGET_FPS_RANGE>;

        $r16 = virtualinvoke r23.<android.hardware.camera2.CaptureRequest: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r15);

        r2 = (android.util.Range) $r16;

        i17 = 0;

     label1:
        $r17 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        $i8 = virtualinvoke $r17.<android.hardware.camera2.impl.CaptureCallbackHolder: int getRequestCount()>();

        if i17 >= $i8 goto label2;

        $r18 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        r24 = virtualinvoke $r18.<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest(int)>(i17);

        l1 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: long val$timestamp>;

        $i9 = i0 - i17;

        $l10 = (long) $i9;

        $l11 = $l10 * 1000000000L;

        $r19 = virtualinvoke r2.<android.util.Range: java.lang.Comparable getUpper()>();

        $r20 = (java.lang.Integer) $r19;

        $i12 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        $l13 = (long) $i12;

        l2 = $l11 / $l13;

        l3 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: long val$frameNumber>;

        $i14 = i0 - i17;

        l4 = (long) $i14;

        $r21 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks this$1>;

        $r22 = $r21.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraOfflineSessionImpl this$0>;

        $l16 = l1 - l2;

        $l15 = l3 - l4;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)>($r22, r24, $l16, $l15);

        i17 = i17 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r10 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks this$1>;

        $r12 = $r10.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraOfflineSessionImpl this$0>;

        $r13 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        $r11 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: android.hardware.camera2.impl.CaptureResultExtras val$resultExtras>;

        $i5 = virtualinvoke $r11.<android.hardware.camera2.impl.CaptureResultExtras: int getSubsequenceId()>();

        $r14 = virtualinvoke $r13.<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest(int)>($i5);

        $l7 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: long val$timestamp>;

        $l6 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$3: long val$frameNumber>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)>($r12, $r14, $l7, $l6);

     label4:
        return;
    }
}
