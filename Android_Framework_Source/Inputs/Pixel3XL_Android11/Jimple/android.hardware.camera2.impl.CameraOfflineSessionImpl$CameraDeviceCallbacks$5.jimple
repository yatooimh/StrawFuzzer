class android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5 extends java.lang.Object implements java.lang.Runnable
{
    final android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks this$1;
    final android.util.Range val$fpsRange;
    final android.hardware.camera2.impl.CaptureCallbackHolder val$holder;
    final java.util.List val$partialResults;
    final android.hardware.camera2.CaptureRequest val$request;
    final android.hardware.camera2.TotalCaptureResult val$resultAsCapture;
    final android.hardware.camera2.impl.CameraMetadataNative val$resultCopy;
    final android.hardware.camera2.impl.CaptureResultExtras val$resultExtras;
    final long val$sensorTimestamp;
    final int val$subsequenceId;

    void <init>(android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks, android.hardware.camera2.impl.CaptureCallbackHolder, android.hardware.camera2.impl.CameraMetadataNative, long, int, android.util.Range, android.hardware.camera2.impl.CaptureResultExtras, java.util.List, android.hardware.camera2.CaptureRequest, android.hardware.camera2.TotalCaptureResult)
    {
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5 r0;
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks r1;
        android.hardware.camera2.impl.CaptureCallbackHolder r2;
        android.hardware.camera2.impl.CameraMetadataNative r3;
        long l0;
        int i1;
        android.util.Range r4;
        android.hardware.camera2.impl.CaptureResultExtras r5;
        java.util.List r6;
        android.hardware.camera2.CaptureRequest r7;
        android.hardware.camera2.TotalCaptureResult r8;

        r0 := @this: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5;

        r1 := @parameter0: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks;

        r2 := @parameter1: android.hardware.camera2.impl.CaptureCallbackHolder;

        r3 := @parameter2: android.hardware.camera2.impl.CameraMetadataNative;

        l0 := @parameter3: long;

        i1 := @parameter4: int;

        r4 := @parameter5: android.util.Range;

        r5 := @parameter6: android.hardware.camera2.impl.CaptureResultExtras;

        r6 := @parameter7: java.util.List;

        r7 := @parameter8: android.hardware.camera2.CaptureRequest;

        r8 := @parameter9: android.hardware.camera2.TotalCaptureResult;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks this$1> = r1;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CaptureCallbackHolder val$holder> = r2;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CameraMetadataNative val$resultCopy> = r3;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: long val$sensorTimestamp> = l0;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: int val$subsequenceId> = i1;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.util.Range val$fpsRange> = r4;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CaptureResultExtras val$resultExtras> = r5;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: java.util.List val$partialResults> = r6;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.CaptureRequest val$request> = r7;

        r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.TotalCaptureResult val$resultAsCapture> = r8;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5 r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1;
        android.hardware.camera2.CaptureRequest r3, $r11, $r24;
        android.hardware.camera2.impl.CaptureCallbackHolder $r4, $r8, $r13, $r23, $r25, $r29;
        android.hardware.camera2.impl.CaptureCallback $r5;
        android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks $r6, $r9, $r30;
        android.hardware.camera2.impl.CameraOfflineSessionImpl $r7, $r12, $r31;
        boolean $z0, $z1;
        android.hardware.camera2.TotalCaptureResult $r10, $r20;
        int $i0, $i1, $i2, $i6, $i10, i11;
        long $l3, $l4, $l5, $l7, $l8, $l9;
        android.util.Range $r14;
        android.hardware.camera2.impl.CameraMetadataNative $r15, $r21, $r22;
        android.hardware.camera2.CaptureResult$Key $r16;
        java.lang.Comparable $r17;
        java.lang.Integer $r18;
        java.lang.Long $r19;
        android.hardware.camera2.impl.CaptureResultExtras $r26;
        java.util.List $r27;
        android.hardware.camera2.impl.PhysicalCaptureResultInfo[] $r28;

        r0 := @this: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5;

        $r4 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        $r5 = virtualinvoke $r4.<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.impl.CaptureCallback getCallback()>();

        r1 = virtualinvoke $r5.<android.hardware.camera2.impl.CaptureCallback: android.hardware.camera2.CameraCaptureSession$CaptureCallback getSessionCallback()>();

        $r6 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks this$1>;

        $r7 = $r6.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraOfflineSessionImpl this$0>;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraOfflineSessionImpl: boolean access$000(android.hardware.camera2.impl.CameraOfflineSessionImpl)>($r7);

        if $z0 != 0 goto label4;

        if r1 == null goto label4;

        $r8 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        $z1 = virtualinvoke $r8.<android.hardware.camera2.impl.CaptureCallbackHolder: boolean hasBatchedOutputs()>();

        if $z1 == 0 goto label3;

        i11 = 0;

     label1:
        $r13 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        $i0 = virtualinvoke $r13.<android.hardware.camera2.impl.CaptureCallbackHolder: int getRequestCount()>();

        if i11 >= $i0 goto label2;

        $r15 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CameraMetadataNative val$resultCopy>;

        $r16 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key SENSOR_TIMESTAMP>;

        $l4 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: long val$sensorTimestamp>;

        $i1 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: int val$subsequenceId>;

        $i2 = $i1 - i11;

        $l3 = (long) $i2;

        $l5 = $l3 * 1000000000L;

        $r14 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.util.Range val$fpsRange>;

        $r17 = virtualinvoke $r14.<android.util.Range: java.lang.Comparable getUpper()>();

        $r18 = (java.lang.Integer) $r17;

        $i6 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $l7 = (long) $i6;

        $l8 = $l5 / $l7;

        $l9 = $l4 - $l8;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);

        virtualinvoke $r15.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureResult$Key,java.lang.Object)>($r16, $r19);

        $r20 = new android.hardware.camera2.TotalCaptureResult;

        $r21 = new android.hardware.camera2.impl.CameraMetadataNative;

        $r22 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CameraMetadataNative val$resultCopy>;

        specialinvoke $r21.<android.hardware.camera2.impl.CameraMetadataNative: void <init>(android.hardware.camera2.impl.CameraMetadataNative)>($r22);

        $r23 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        $r24 = virtualinvoke $r23.<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest(int)>(i11);

        $r26 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CaptureResultExtras val$resultExtras>;

        $r27 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: java.util.List val$partialResults>;

        $r25 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        $i10 = virtualinvoke $r25.<android.hardware.camera2.impl.CaptureCallbackHolder: int getSessionId()>();

        $r28 = newarray (android.hardware.camera2.impl.PhysicalCaptureResultInfo)[0];

        specialinvoke $r20.<android.hardware.camera2.TotalCaptureResult: void <init>(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CaptureResultExtras,java.util.List,int,android.hardware.camera2.impl.PhysicalCaptureResultInfo[])>($r21, $r24, $r26, $r27, $i10, $r28);

        $r29 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CaptureCallbackHolder val$holder>;

        r3 = virtualinvoke $r29.<android.hardware.camera2.impl.CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest(int)>(i11);

        $r30 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks this$1>;

        $r31 = $r30.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraOfflineSessionImpl this$0>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>($r31, r3, $r20);

        i11 = i11 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r9 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks this$1>;

        $r12 = $r9.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks: android.hardware.camera2.impl.CameraOfflineSessionImpl this$0>;

        $r11 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.CaptureRequest val$request>;

        $r10 = r0.<android.hardware.camera2.impl.CameraOfflineSessionImpl$CameraDeviceCallbacks$5: android.hardware.camera2.TotalCaptureResult val$resultAsCapture>;

        virtualinvoke r1.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>($r12, $r11, $r10);

     label4:
        return;
    }
}
