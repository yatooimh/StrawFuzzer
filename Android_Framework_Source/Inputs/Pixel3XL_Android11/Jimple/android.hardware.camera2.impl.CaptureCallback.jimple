public abstract class android.hardware.camera2.impl.CaptureCallback extends java.lang.Object
{
    private android.hardware.camera2.CameraCaptureSession$CaptureCallback mCallback;
    private java.util.concurrent.Executor mExecutor;

    public void <init>(java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$CaptureCallback)
    {
        android.hardware.camera2.impl.CaptureCallback r0;
        java.util.concurrent.Executor r1;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r2;

        r0 := @this: android.hardware.camera2.impl.CaptureCallback;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.impl.CaptureCallback: java.util.concurrent.Executor mExecutor> = r1;

        r0.<android.hardware.camera2.impl.CaptureCallback: android.hardware.camera2.CameraCaptureSession$CaptureCallback mCallback> = r2;

        return;
    }

    public java.util.concurrent.Executor getExecutor()
    {
        android.hardware.camera2.impl.CaptureCallback r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: android.hardware.camera2.impl.CaptureCallback;

        $r1 = r0.<android.hardware.camera2.impl.CaptureCallback: java.util.concurrent.Executor mExecutor>;

        return $r1;
    }

    public android.hardware.camera2.CameraCaptureSession$CaptureCallback getSessionCallback()
    {
        android.hardware.camera2.impl.CaptureCallback r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback $r1;

        r0 := @this: android.hardware.camera2.impl.CaptureCallback;

        $r1 = r0.<android.hardware.camera2.impl.CaptureCallback: android.hardware.camera2.CameraCaptureSession$CaptureCallback mCallback>;

        return $r1;
    }

    public abstract void onCaptureBufferLost(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, android.view.Surface, long);

    public abstract void onCaptureCompleted(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, android.hardware.camera2.TotalCaptureResult);

    public abstract void onCaptureFailed(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureFailure);

    public abstract void onCapturePartial(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureResult);

    public abstract void onCaptureProgressed(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureResult);

    public abstract void onCaptureSequenceAborted(android.hardware.camera2.CameraDevice, int);

    public abstract void onCaptureSequenceCompleted(android.hardware.camera2.CameraDevice, int, long);

    public abstract void onCaptureStarted(android.hardware.camera2.CameraDevice, android.hardware.camera2.CaptureRequest, long, long);
}
