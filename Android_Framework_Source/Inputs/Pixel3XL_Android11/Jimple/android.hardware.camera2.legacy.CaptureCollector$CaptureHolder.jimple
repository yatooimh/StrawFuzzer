class android.hardware.camera2.legacy.CaptureCollector$CaptureHolder extends java.lang.Object implements java.lang.Comparable
{
    private boolean mCompleted;
    private boolean mFailedJpeg;
    private boolean mFailedPreview;
    private boolean mHasStarted;
    private final android.hardware.camera2.legacy.LegacyRequest mLegacy;
    private boolean mPreviewCompleted;
    private int mReceivedFlags;
    private final android.hardware.camera2.legacy.RequestHolder mRequest;
    private long mTimestamp;
    public final boolean needsJpeg;
    public final boolean needsPreview;
    final android.hardware.camera2.legacy.CaptureCollector this$0;

    public void <init>(android.hardware.camera2.legacy.CaptureCollector, android.hardware.camera2.legacy.RequestHolder, android.hardware.camera2.legacy.LegacyRequest)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        android.hardware.camera2.legacy.CaptureCollector r1;
        android.hardware.camera2.legacy.RequestHolder r2;
        android.hardware.camera2.legacy.LegacyRequest r3;
        boolean $z0, $z1;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        r1 := @parameter0: android.hardware.camera2.legacy.CaptureCollector;

        r2 := @parameter1: android.hardware.camera2.legacy.RequestHolder;

        r3 := @parameter2: android.hardware.camera2.legacy.LegacyRequest;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp> = 0L;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedJpeg> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedPreview> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mCompleted> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mPreviewCompleted> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest> = r2;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.LegacyRequest mLegacy> = r3;

        $z0 = virtualinvoke r2.<android.hardware.camera2.legacy.RequestHolder: boolean hasJpegTargets()>();

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg> = $z0;

        $z1 = virtualinvoke r2.<android.hardware.camera2.legacy.RequestHolder: boolean hasPreviewTargets()>();

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview> = $z1;

        return;
    }

    static android.hardware.camera2.legacy.RequestHolder access$300(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        android.hardware.camera2.legacy.RequestHolder $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $r1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        return $r1;
    }

    static long access$400(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        long $l0;

        r0 := @parameter0: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $l0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        return $l0;
    }

    public int compareTo(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0, r1;
        android.hardware.camera2.legacy.RequestHolder $r2, $r3, $r4, $r5;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5, b6;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        r1 := @parameter0: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $r2 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l0 = virtualinvoke $r2.<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>();

        $r3 = r1.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l1 = virtualinvoke $r3.<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>();

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label1;

        b6 = 1;

        goto label3;

     label1:
        $r4 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l3 = virtualinvoke $r4.<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>();

        $r5 = r1.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l4 = virtualinvoke $r5.<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>();

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label2;

        b6 = 0;

        goto label3;

     label2:
        b6 = -1;

     label3:
        return b6;
    }

    public volatile int compareTo(java.lang.Object)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.hardware.camera2.legacy.CaptureCollector$CaptureHolder) r1;

        $i0 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int compareTo(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)>($r2);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0, $r2;
        java.lang.Object r1;
        boolean $z0, z1;
        int $i0;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        if $z0 == 0 goto label1;

        $r2 = (android.hardware.camera2.legacy.CaptureCollector$CaptureHolder) r1;

        $i0 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int compareTo(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)>($r2);

        if $i0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isCompleted()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg>;

        $z1 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isJpegCompleted()>();

        if $z0 != $z1 goto label1;

        $z2 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview>;

        $z3 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isPreviewCompleted()>();

        if $z2 != $z3 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        return z4;
    }

    public boolean isJpegCompleted()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $i0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i1 = $i0 & 3;

        if $i1 != 3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPreviewCompleted()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $i0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i1 = $i0 & 12;

        if $i1 != 12 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void setJpegFailed()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg>;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isJpegCompleted()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedJpeg> = 1;

        $i1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        i0 = 1 | $i1;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = i0;

        $i2 = i0 | 2;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i2;

        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;

     label2:
        return;
    }

    public void setJpegProduced()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg>;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isCompleted()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i1 = $i0 | 1;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i1;

        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setJpegProduced called on already completed request.");

        throw $r2;

     label2:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setJpegProduced called for capture with no jpeg targets.");

        throw $r1;
    }

    public void setJpegTimestamp(long)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        long l0, $l3, $l5;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r1, $r2;
        int $i1, $i2;
        byte $b4;
        android.hardware.camera2.legacy.CaptureCollector $r3;
        android.hardware.camera2.legacy.CameraDeviceState $r4;
        android.hardware.camera2.legacy.RequestHolder $r5;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        l0 := @parameter0: long;

        $z0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg>;

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isCompleted()>();

        if $z1 != 0 goto label3;

        $i1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i2 = $i1 | 2;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i2;

        $l3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label1;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp> = l0;

     label1:
        $z2 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted>;

        if $z2 != 0 goto label2;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted> = 1;

        $r3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        $r4 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.CameraDeviceState access$100(android.hardware.camera2.legacy.CaptureCollector)>($r3);

        $r5 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l5 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        virtualinvoke $r4.<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureStart(android.hardware.camera2.legacy.RequestHolder,long,int)>($r5, $l5, -1);

     label2:
        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;

     label3:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setJpegTimestamp called on already completed request.");

        throw $r2;

     label4:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setJpegTimestamp called for capture with no jpeg targets.");

        throw $r1;
    }

    public void setPreviewFailed()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview>;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isPreviewCompleted()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedPreview> = 1;

        $i1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        i0 = $i1 | 4;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = i0;

        $i2 = i0 | 8;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i2;

        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;

     label2:
        return;
    }

    public void setPreviewProduced()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview>;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isCompleted()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i1 = $i0 | 4;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i1;

        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setPreviewProduced called on already completed request.");

        throw $r2;

     label2:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setPreviewProduced called for capture with no preview targets.");

        throw $r1;
    }

    public void setPreviewTimestamp(long)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        long l0, $l3, $l5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalStateException $r1, $r2;
        int $i1, $i2;
        byte $b4;
        android.hardware.camera2.legacy.CaptureCollector $r3;
        android.hardware.camera2.legacy.CameraDeviceState $r4;
        android.hardware.camera2.legacy.RequestHolder $r5;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        l0 := @parameter0: long;

        $z0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview>;

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isCompleted()>();

        if $z1 != 0 goto label3;

        $i1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i2 = $i1 | 8;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i2;

        $l3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label1;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp> = l0;

     label1:
        $z2 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg>;

        if $z2 != 0 goto label2;

        $z3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted>;

        if $z3 != 0 goto label2;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted> = 1;

        $r3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        $r4 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.CameraDeviceState access$100(android.hardware.camera2.legacy.CaptureCollector)>($r3);

        $r5 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l5 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        virtualinvoke $r4.<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureStart(android.hardware.camera2.legacy.RequestHolder,long,int)>($r5, $l5, -1);

     label2:
        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;

     label3:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setPreviewTimestamp called on already completed request.");

        throw $r2;

     label4:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setPreviewTimestamp called for capture with no preview targets.");

        throw $r1;
    }

    public void tryComplete()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        java.util.Iterator r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z11, $z12, $z13, $z14;
        android.hardware.camera2.legacy.RequestHolder $r3, $r7, $r10, $r13, $r14, $r17;
        android.hardware.camera2.CaptureRequest $r4;
        java.util.Collection $r5;
        java.lang.Object $r6;
        android.hardware.camera2.legacy.CaptureCollector $r8, $r11, $r15, $r18, $r26;
        android.hardware.camera2.legacy.CameraDeviceState $r9, $r12, $r16;
        long $l0;
        android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException $r19;
        java.lang.StringBuilder $r20;
        java.lang.String $r23;
        android.view.Surface r24;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mPreviewCompleted>;

        if $z0 != 0 goto label01;

        $z12 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview>;

        if $z12 == 0 goto label01;

        $z13 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isPreviewCompleted()>();

        if $z13 == 0 goto label01;

        $r18 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        staticinvoke <android.hardware.camera2.legacy.CaptureCollector: void access$000(android.hardware.camera2.legacy.CaptureCollector)>($r18);

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mPreviewCompleted> = 1;

     label01:
        $z14 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isCompleted()>();

        if $z14 == 0 goto label12;

        $z1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mCompleted>;

        if $z1 != 0 goto label12;

        $z2 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedPreview>;

        if $z2 != 0 goto label02;

        $z11 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedJpeg>;

        if $z11 == 0 goto label11;

     label02:
        $z3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted>;

        if $z3 != 0 goto label03;

        $r14 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        virtualinvoke $r14.<android.hardware.camera2.legacy.RequestHolder: void failRequest()>();

        $r15 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        $r16 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.CameraDeviceState access$100(android.hardware.camera2.legacy.CaptureCollector)>($r15);

        $r17 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        virtualinvoke $r16.<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureStart(android.hardware.camera2.legacy.RequestHolder,long,int)>($r17, $l0, 3);

        goto label11;

     label03:
        $r3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $r4 = virtualinvoke $r3.<android.hardware.camera2.legacy.RequestHolder: android.hardware.camera2.CaptureRequest getRequest()>();

        $r5 = virtualinvoke $r4.<android.hardware.camera2.CaptureRequest: java.util.Collection getTargets()>();

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r24 = (android.view.Surface) $r6;

     label05:
        $r7 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $z5 = virtualinvoke $r7.<android.hardware.camera2.legacy.RequestHolder: boolean jpegType(android.view.Surface)>(r24);

        if $z5 == 0 goto label07;

        $z8 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedJpeg>;

        if $z8 == 0 goto label08;

        $r11 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        $r12 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.CameraDeviceState access$100(android.hardware.camera2.legacy.CaptureCollector)>($r11);

        $r13 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        virtualinvoke $r12.<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureResult(android.hardware.camera2.legacy.RequestHolder,android.hardware.camera2.impl.CameraMetadataNative,int,java.lang.Object)>($r13, null, 5, r24);

     label06:
        goto label08;

     label07:
        $z6 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedPreview>;

        if $z6 == 0 goto label08;

        $r8 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        $r9 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.CameraDeviceState access$100(android.hardware.camera2.legacy.CaptureCollector)>($r8);

        $r10 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        virtualinvoke $r9.<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureResult(android.hardware.camera2.legacy.RequestHolder,android.hardware.camera2.impl.CameraMetadataNative,int,java.lang.Object)>($r10, null, 5, r24);

     label08:
        goto label10;

     label09:
        $r19 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected exception when querying Surface: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CaptureCollector", $r23);

     label10:
        goto label04;

     label11:
        $r26 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        staticinvoke <android.hardware.camera2.legacy.CaptureCollector: void access$200(android.hardware.camera2.legacy.CaptureCollector,android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)>($r26, r0);

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mCompleted> = 1;

     label12:
        return;

        catch android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException from label05 to label06 with label09;
        catch android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException from label07 to label08 with label09;
    }
}
