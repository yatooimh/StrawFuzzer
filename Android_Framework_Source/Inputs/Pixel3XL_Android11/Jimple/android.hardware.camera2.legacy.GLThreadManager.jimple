public class android.hardware.camera2.legacy.GLThreadManager extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final int MSG_ALLOW_FRAMES;
    private static final int MSG_CLEANUP;
    private static final int MSG_DROP_FRAMES;
    private static final int MSG_NEW_CONFIGURATION;
    private static final int MSG_NEW_FRAME;
    private final java.lang.String TAG;
    private android.hardware.camera2.legacy.CaptureCollector mCaptureCollector;
    private final android.hardware.camera2.legacy.CameraDeviceState mDeviceState;
    private final android.os.Handler$Callback mGLHandlerCb;
    private final android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread;
    private final android.hardware.camera2.legacy.RequestThreadManager$FpsCounter mPrevCounter;
    private final android.hardware.camera2.legacy.SurfaceTextureRenderer mTextureRenderer;

    public void <init>(int, int, android.hardware.camera2.legacy.CameraDeviceState)
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        int i0, i1;
        android.hardware.camera2.legacy.CameraDeviceState r1;
        android.hardware.camera2.legacy.RequestThreadManager$FpsCounter $r2;
        android.hardware.camera2.legacy.GLThreadManager$1 $r3;
        android.hardware.camera2.legacy.SurfaceTextureRenderer $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.lang.String $r7, $r10;
        android.hardware.camera2.legacy.RequestHandlerThread $r8;
        android.os.Handler$Callback $r9;

        r0 := @this: android.hardware.camera2.legacy.GLThreadManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.hardware.camera2.legacy.CameraDeviceState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.hardware.camera2.legacy.RequestThreadManager$FpsCounter;

        specialinvoke $r2.<android.hardware.camera2.legacy.RequestThreadManager$FpsCounter: void <init>(java.lang.String)>("GL Preview Producer");

        r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestThreadManager$FpsCounter mPrevCounter> = $r2;

        $r3 = new android.hardware.camera2.legacy.GLThreadManager$1;

        specialinvoke $r3.<android.hardware.camera2.legacy.GLThreadManager$1: void <init>(android.hardware.camera2.legacy.GLThreadManager)>(r0);

        r0.<android.hardware.camera2.legacy.GLThreadManager: android.os.Handler$Callback mGLHandlerCb> = $r3;

        $r4 = new android.hardware.camera2.legacy.SurfaceTextureRenderer;

        specialinvoke $r4.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void <init>(int)>(i1);

        r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.SurfaceTextureRenderer mTextureRenderer> = $r4;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("CameraDeviceGLThread-%d", $r5);

        r0.<android.hardware.camera2.legacy.GLThreadManager: java.lang.String TAG> = $r7;

        $r8 = new android.hardware.camera2.legacy.RequestHandlerThread;

        $r10 = r0.<android.hardware.camera2.legacy.GLThreadManager: java.lang.String TAG>;

        $r9 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.os.Handler$Callback mGLHandlerCb>;

        specialinvoke $r8.<android.hardware.camera2.legacy.RequestHandlerThread: void <init>(java.lang.String,android.os.Handler$Callback)>($r10, $r9);

        r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread> = $r8;

        r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.CameraDeviceState mDeviceState> = r1;

        return;
    }

    static android.hardware.camera2.legacy.SurfaceTextureRenderer access$000(android.hardware.camera2.legacy.GLThreadManager)
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.SurfaceTextureRenderer $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.SurfaceTextureRenderer mTextureRenderer>;

        return $r1;
    }

    static android.hardware.camera2.legacy.CaptureCollector access$100(android.hardware.camera2.legacy.GLThreadManager)
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.CaptureCollector $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.CaptureCollector mCaptureCollector>;

        return $r1;
    }

    static android.hardware.camera2.legacy.CaptureCollector access$102(android.hardware.camera2.legacy.GLThreadManager, android.hardware.camera2.legacy.CaptureCollector)
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.CaptureCollector r1;

        r0 := @parameter0: android.hardware.camera2.legacy.GLThreadManager;

        r1 := @parameter1: android.hardware.camera2.legacy.CaptureCollector;

        r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.CaptureCollector mCaptureCollector> = r1;

        return r1;
    }

    static java.lang.String access$200(android.hardware.camera2.legacy.GLThreadManager)
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        java.lang.String $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: java.lang.String TAG>;

        return $r1;
    }

    static android.hardware.camera2.legacy.CameraDeviceState access$300(android.hardware.camera2.legacy.GLThreadManager)
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.CameraDeviceState $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.CameraDeviceState mDeviceState>;

        return $r1;
    }

    public void allowNewFrames()
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.RequestHandlerThread $r1;
        android.os.Handler $r2;

        r0 := @this: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()>();

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(5);

        return;
    }

    public android.graphics.SurfaceTexture getCurrentSurfaceTexture()
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.SurfaceTextureRenderer $r1;
        android.graphics.SurfaceTexture $r2;

        r0 := @this: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.SurfaceTextureRenderer mTextureRenderer>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture getSurfaceTexture()>();

        return $r2;
    }

    public void ignoreNewFrames()
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.RequestHandlerThread $r1;
        android.os.Handler $r2;

        r0 := @this: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()>();

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(4);

        return;
    }

    public void queueNewFrame()
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.os.Handler r1;
        android.hardware.camera2.legacy.RequestHandlerThread $r2;
        boolean $z0;
        java.lang.String $r3;
        android.os.Message $r4;

        r0 := @this: android.hardware.camera2.legacy.GLThreadManager;

        $r2 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        r1 = virtualinvoke $r2.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()>();

        $z0 = virtualinvoke r1.<android.os.Handler: boolean hasMessages(int)>(2);

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        goto label2;

     label1:
        $r3 = r0.<android.hardware.camera2.legacy.GLThreadManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "GLThread dropping frame.  Not consuming frames quickly enough!");

     label2:
        return;
    }

    public void quit()
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.RequestHandlerThread $r1, $r3, $r4, $r7, $r10;
        android.os.Message $r2;
        java.lang.Throwable $r5;
        java.lang.Object[] $r6;
        java.lang.String $r8, $r9, $r12;
        long $l0;
        java.lang.Long $r11;
        android.os.Handler r13;

        r0 := @this: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        r13 = virtualinvoke $r1.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()>();

        $r2 = virtualinvoke r13.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        virtualinvoke r13.<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>($r2);

        $r3 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        virtualinvoke $r3.<android.hardware.camera2.legacy.RequestHandlerThread: boolean quitSafely()>();

     label1:
        $r4 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        virtualinvoke $r4.<android.hardware.camera2.legacy.RequestHandlerThread: void join()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r8 = r0.<android.hardware.camera2.legacy.GLThreadManager: java.lang.String TAG>;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        $r9 = virtualinvoke $r7.<android.hardware.camera2.legacy.RequestHandlerThread: java.lang.String getName()>();

        $r6[0] = $r9;

        $r10 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        $l0 = virtualinvoke $r10.<android.hardware.camera2.legacy.RequestHandlerThread: long getId()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Thread %s (%d) interrupted while quitting.", $r6);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r8, $r12);

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void setConfigurationAndWait(java.util.Collection, android.hardware.camera2.legacy.CaptureCollector)
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        java.util.Collection r1;
        android.hardware.camera2.legacy.CaptureCollector r2;
        android.os.Handler r3;
        android.hardware.camera2.legacy.RequestHandlerThread $r6;
        android.os.ConditionVariable $r7;
        android.hardware.camera2.legacy.GLThreadManager$ConfigureHolder $r8;
        android.os.Message $r9;

        r0 := @this: android.hardware.camera2.legacy.GLThreadManager;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: android.hardware.camera2.legacy.CaptureCollector;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "collector must not be null");

        $r6 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        r3 = virtualinvoke $r6.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()>();

        $r7 = new android.os.ConditionVariable;

        specialinvoke $r7.<android.os.ConditionVariable: void <init>(boolean)>(0);

        $r8 = new android.hardware.camera2.legacy.GLThreadManager$ConfigureHolder;

        specialinvoke $r8.<android.hardware.camera2.legacy.GLThreadManager$ConfigureHolder: void <init>(android.os.ConditionVariable,java.util.Collection,android.hardware.camera2.legacy.CaptureCollector)>($r7, r1, r2);

        $r9 = virtualinvoke r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, 0, 0, $r8);

        virtualinvoke r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r9);

        virtualinvoke $r7.<android.os.ConditionVariable: void block()>();

        return;
    }

    public void start()
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.RequestHandlerThread $r1;

        r0 := @this: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        virtualinvoke $r1.<android.hardware.camera2.legacy.RequestHandlerThread: void start()>();

        return;
    }

    public void waitUntilIdle()
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.RequestHandlerThread $r1;

        r0 := @this: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        virtualinvoke $r1.<android.hardware.camera2.legacy.RequestHandlerThread: void waitUntilIdle()>();

        return;
    }

    public void waitUntilStarted()
    {
        android.hardware.camera2.legacy.GLThreadManager r0;
        android.hardware.camera2.legacy.RequestHandlerThread $r1;

        r0 := @this: android.hardware.camera2.legacy.GLThreadManager;

        $r1 = r0.<android.hardware.camera2.legacy.GLThreadManager: android.hardware.camera2.legacy.RequestHandlerThread mGLHandlerThread>;

        virtualinvoke $r1.<android.hardware.camera2.legacy.RequestHandlerThread: void waitUntilStarted()>();

        return;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.legacy.GLThreadManager: int MSG_NEW_FRAME> = 2;

        <android.hardware.camera2.legacy.GLThreadManager: int MSG_NEW_CONFIGURATION> = 1;

        <android.hardware.camera2.legacy.GLThreadManager: int MSG_DROP_FRAMES> = 4;

        <android.hardware.camera2.legacy.GLThreadManager: int MSG_CLEANUP> = 3;

        <android.hardware.camera2.legacy.GLThreadManager: int MSG_ALLOW_FRAMES> = 5;

        <android.hardware.camera2.legacy.GLThreadManager: boolean DEBUG> = 0;

        return;
    }
}
