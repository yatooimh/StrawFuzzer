class android.hardware.camera2.legacy.LegacyFocusStateMapper$1 extends java.lang.Object implements android.hardware.Camera$AutoFocusMoveCallback
{
    final android.hardware.camera2.legacy.LegacyFocusStateMapper this$0;
    final java.lang.String val$afMode;
    final int val$currentAfRun;

    void <init>(android.hardware.camera2.legacy.LegacyFocusStateMapper, int, java.lang.String)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper$1 r0;
        android.hardware.camera2.legacy.LegacyFocusStateMapper r1;
        int i0;
        java.lang.String r2;

        r0 := @this: android.hardware.camera2.legacy.LegacyFocusStateMapper$1;

        r1 := @parameter0: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: android.hardware.camera2.legacy.LegacyFocusStateMapper this$0> = r1;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: int val$currentAfRun> = i0;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: java.lang.String val$afMode> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAutoFocusMoving(boolean, android.hardware.Camera)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper$1 r0;
        boolean z0, $z1, $z2;
        int i0, $i1, $i4, i6;
        android.hardware.camera2.legacy.LegacyFocusStateMapper $r1, $r2, $r18;
        java.lang.String $r4, $r6, $r9, r13, r15, r16;
        java.lang.Throwable $r10;
        android.hardware.Camera r11;
        java.lang.Object r12;
        java.lang.StringBuilder r14, r17;
        byte b7, b8;

        r0 := @this: android.hardware.camera2.legacy.LegacyFocusStateMapper$1;

        z0 := @parameter0: boolean;

        r11 := @parameter1: android.hardware.Camera;

        $r1 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: android.hardware.camera2.legacy.LegacyFocusStateMapper this$0>;

        r12 = staticinvoke <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object access$000(android.hardware.camera2.legacy.LegacyFocusStateMapper)>($r1);

        entermonitor r12;

     label01:
        $r2 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: android.hardware.camera2.legacy.LegacyFocusStateMapper this$0>;

        i6 = staticinvoke <android.hardware.camera2.legacy.LegacyFocusStateMapper: int access$100(android.hardware.camera2.legacy.LegacyFocusStateMapper)>($r2);

        $i1 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: int val$currentAfRun>;

        if $i1 == i6 goto label03;

        r13 = staticinvoke <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String access$200()>();

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onAutoFocusMoving - ignoring move callbacks from old af run");

        $i4 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: int val$currentAfRun>;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r9 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r13, $r9);

        exitmonitor r12;

     label02:
        return;

     label03:
        if z0 == 0 goto label04;

        b7 = 1;

        goto label05;

     label04:
        b7 = 2;

     label05:
        r15 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: java.lang.String val$afMode>;

     label06:
        b8 = -1;

     label07:
        i0 = virtualinvoke r15.<java.lang.String: int hashCode()>();

     label08:
        if i0 == -194628547 goto label12;

        if i0 == 910005312 goto label10;

     label09:
        goto label14;

     label10:
        $z2 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("continuous-picture");

        if $z2 == 0 goto label09;

     label11:
        b8 = 0;

        goto label14;

     label12:
        $z1 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("continuous-video");

        if $z1 == 0 goto label09;

     label13:
        b8 = 1;

     label14:
        if b8 == 0 goto label17;

        if b8 == 1 goto label17;

     label15:
        r16 = staticinvoke <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String access$200()>();

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onAutoFocus - got unexpected onAutoFocus in mode ");

        $r4 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: java.lang.String val$afMode>;

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r16, $r6);

     label16:
        goto label17;

     label17:
        $r18 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: android.hardware.camera2.legacy.LegacyFocusStateMapper this$0>;

        staticinvoke <android.hardware.camera2.legacy.LegacyFocusStateMapper: int access$302(android.hardware.camera2.legacy.LegacyFocusStateMapper,int)>($r18, b7);

     label18:
        exitmonitor r12;

     label19:
        return;

     label20:
        $r10 := @caughtexception;

     label21:
        exitmonitor r12;

     label22:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }
}
