public class android.hardware.camera2.legacy.LegacyFocusStateMapper extends java.lang.Object
{
    private static final boolean DEBUG;
    private static java.lang.String TAG;
    private java.lang.String mAfModePrevious;
    private int mAfRun;
    private int mAfState;
    private int mAfStatePrevious;
    private final android.hardware.Camera mCamera;
    private final java.lang.Object mLock;

    static void <clinit>()
    {
        <android.hardware.camera2.legacy.LegacyFocusStateMapper: boolean DEBUG> = 0;

        <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG> = "LegacyFocusStateMapper";

        return;
    }

    public void <init>(android.hardware.Camera)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        android.hardware.Camera r1, $r4;
        java.lang.Object $r2, $r3;

        r0 := @this: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        r1 := @parameter0: android.hardware.Camera;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfStatePrevious> = 0;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String mAfModePrevious> = null;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock> = $r2;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun> = 0;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState> = 0;

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "camera must not be null");

        $r4 = (android.hardware.Camera) $r3;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: android.hardware.Camera mCamera> = $r4;

        return;
    }

    static java.lang.Object access$000(android.hardware.camera2.legacy.LegacyFocusStateMapper)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        $r1 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        return $r1;
    }

    static int access$100(android.hardware.camera2.legacy.LegacyFocusStateMapper)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        int $i0;

        r0 := @parameter0: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        $i0 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun>;

        return $i0;
    }

    static java.lang.String access$200()
    {
        java.lang.String $r0;

        $r0 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG>;

        return $r0;
    }

    static int access$302(android.hardware.camera2.legacy.LegacyFocusStateMapper, int)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        int i0;

        r0 := @parameter0: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        i0 := @parameter1: int;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState> = i0;

        return i0;
    }

    private static java.lang.String afStateToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label8;
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label2:
        return "PASSIVE_UNFOCUSED";

     label3:
        return "NOT_FOCUSED_LOCKED";

     label4:
        return "FOCUSED_LOCKED";

     label5:
        return "ACTIVE_SCAN";

     label6:
        return "PASSIVE_FOCUSED";

     label7:
        return "PASSIVE_SCAN";

     label8:
        return "INACTIVE";
    }

    public void mapResultTriggers(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        java.lang.Object r1;
        int i0;
        android.hardware.camera2.CaptureResult$Key $r3;
        java.lang.Integer $r4;
        java.lang.Throwable $r5;
        android.hardware.camera2.impl.CameraMetadataNative r6;

        r0 := @this: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        r6 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r6, "result must not be null");

        r1 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState>;

        exitmonitor r1;

     label2:
        $r3 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AF_STATE>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r6.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureResult$Key,java.lang.Object)>($r3, $r4);

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfStatePrevious> = i0;

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void processRequestTriggers(android.hardware.camera2.CaptureRequest, android.hardware.Camera$Parameters)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, i9, $i13, i14;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3, r24, r26, r31, r32, r35;
        java.lang.String $r5, $r13, r23, r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.hardware.camera2.legacy.LegacyFocusStateMapper$1 $r6;
        android.hardware.camera2.legacy.LegacyFocusStateMapper$2 $r7;
        android.hardware.Camera $r8, $r9, $r14, $r28;
        java.lang.StringBuilder $r10;
        java.lang.Throwable $r15, $r16, $r17, $r18, $r19;
        android.hardware.camera2.CaptureRequest r20;
        android.hardware.Camera$Parameters r21;
        android.hardware.camera2.CaptureRequest$Key r22;
        byte b10, b11, b12;

        r0 := @this: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        r20 := @parameter0: android.hardware.camera2.CaptureRequest;

        r21 := @parameter1: android.hardware.Camera$Parameters;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r20, "captureRequest must not be null");

        r22 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AF_TRIGGER>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = staticinvoke <android.hardware.camera2.utils.ParamsUtils: java.lang.Object getOrDefault(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>(r20, r22, $r2);

        $r4 = (java.lang.Integer) $r3;

        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r23 = virtualinvoke r21.<android.hardware.Camera$Parameters: java.lang.String getFocusMode()>();

        $r5 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String mAfModePrevious>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, r23);

        if $z0 != 0 goto label06;

        r24 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        entermonitor r24;

     label01:
        $i6 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun>;

        $i7 = $i6 + 1;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun> = $i7;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState> = 0;

        exitmonitor r24;

     label02:
        $r14 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: android.hardware.Camera mCamera>;

        virtualinvoke $r14.<android.hardware.Camera: void cancelAutoFocus()>();

        goto label06;

     label03:
        $r19 := @caughtexception;

     label04:
        exitmonitor r24;

     label05:
        throw $r19;

     label06:
        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String mAfModePrevious> = r23;

        r26 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        entermonitor r26;

     label07:
        i9 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun>;

        exitmonitor r26;

     label08:
        $r6 = new android.hardware.camera2.legacy.LegacyFocusStateMapper$1;

        specialinvoke $r6.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: void <init>(android.hardware.camera2.legacy.LegacyFocusStateMapper,int,java.lang.String)>(r0, i9, r23);

        $i1 = virtualinvoke r23.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -194628547: goto label13;
            case 3005871: goto label12;
            case 103652300: goto label11;
            case 910005312: goto label10;
            default: goto label09;
        };

     label09:
        goto label14;

     label10:
        $z1 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("continuous-picture");

        if $z1 == 0 goto label09;

        b10 = 2;

        goto label15;

     label11:
        $z6 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("macro");

        if $z6 == 0 goto label09;

        b10 = 1;

        goto label15;

     label12:
        $z7 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("auto");

        if $z7 == 0 goto label09;

        b10 = 0;

        goto label15;

     label13:
        $z8 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("continuous-video");

        if $z8 == 0 goto label09;

        b10 = 3;

        goto label15;

     label14:
        b10 = -1;

     label15:
        if b10 == 0 goto label16;

        if b10 == 1 goto label16;

        if b10 == 2 goto label16;

        if b10 == 3 goto label16;

        goto label17;

     label16:
        $r28 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: android.hardware.Camera mCamera>;

        virtualinvoke $r28.<android.hardware.Camera: void setAutoFocusMoveCallback(android.hardware.Camera$AutoFocusMoveCallback)>($r6);

     label17:
        if i0 == 0 goto label46;

        if i0 == 1 goto label29;

        if i0 == 2 goto label18;

        r29 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processRequestTriggers - ignoring unknown control.afTrigger = ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r29, $r13);

        goto label46;

     label18:
        r31 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        entermonitor r31;

     label19:
        r32 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        entermonitor r32;

     label20:
        $i3 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun>;

        $i4 = $i3 + 1;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun> = $i4;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState> = 0;

        exitmonitor r32;

     label21:
        $r9 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: android.hardware.Camera mCamera>;

        virtualinvoke $r9.<android.hardware.Camera: void cancelAutoFocus()>();

        exitmonitor r31;

     label22:
        goto label46;

     label23:
        $r18 := @caughtexception;

     label24:
        exitmonitor r32;

     label25:
        throw $r18;

     label26:
        $r16 := @caughtexception;

     label27:
        exitmonitor r31;

     label28:
        throw $r16;

     label29:
        $i2 = virtualinvoke r23.<java.lang.String: int hashCode()>();

        lookupswitch($i2)
        {
            case -194628547: goto label34;
            case 3005871: goto label33;
            case 103652300: goto label32;
            case 910005312: goto label31;
            default: goto label30;
        };

     label30:
        goto label35;

     label31:
        $z2 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("continuous-picture");

        if $z2 == 0 goto label30;

        b11 = 2;

        goto label36;

     label32:
        $z3 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("macro");

        if $z3 == 0 goto label30;

        b11 = 1;

        goto label36;

     label33:
        $z4 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("auto");

        if $z4 == 0 goto label30;

        b11 = 0;

        goto label36;

     label34:
        $z5 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("continuous-video");

        if $z5 == 0 goto label30;

        b11 = 3;

        goto label36;

     label35:
        b11 = -1;

     label36:
        if b11 == 0 goto label38;

        if b11 == 1 goto label38;

        if b11 == 2 goto label37;

        if b11 == 3 goto label37;

        b12 = 0;

        goto label39;

     label37:
        b12 = 1;

        goto label39;

     label38:
        b12 = 3;

     label39:
        r35 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        entermonitor r35;

     label40:
        $i13 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun>;

        i14 = $i13 + 1;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun> = i14;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState> = b12;

        exitmonitor r35;

     label41:
        if b12 != 0 goto label42;

        goto label46;

     label42:
        $r8 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: android.hardware.Camera mCamera>;

        $r7 = new android.hardware.camera2.legacy.LegacyFocusStateMapper$2;

        specialinvoke $r7.<android.hardware.camera2.legacy.LegacyFocusStateMapper$2: void <init>(android.hardware.camera2.legacy.LegacyFocusStateMapper,int,java.lang.String)>(r0, i14, r23);

        virtualinvoke $r8.<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>($r7);

        goto label46;

     label43:
        $r17 := @caughtexception;

     label44:
        exitmonitor r35;

     label45:
        throw $r17;

     label46:
        return;

     label47:
        $r15 := @caughtexception;

     label48:
        exitmonitor r26;

     label49:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label07 to label08 with label47;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Throwable from label24 to label25 with label23;
        catch java.lang.Throwable from label25 to label26 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
        catch java.lang.Throwable from label40 to label41 with label43;
        catch java.lang.Throwable from label44 to label45 with label43;
        catch java.lang.Throwable from label48 to label49 with label47;
    }
}
