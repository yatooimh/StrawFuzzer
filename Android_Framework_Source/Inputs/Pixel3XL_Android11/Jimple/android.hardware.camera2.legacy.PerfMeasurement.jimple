class android.hardware.camera2.legacy.PerfMeasurement extends java.lang.Object
{
    public static final int DEFAULT_MAX_QUERIES;
    private static final long FAILED_TIMING;
    private static final long NO_DURATION_YET;
    private static final java.lang.String TAG;
    private java.util.ArrayList mCollectedCpuDurations;
    private java.util.ArrayList mCollectedGpuDurations;
    private java.util.ArrayList mCollectedTimestamps;
    private int mCompletedQueryCount;
    private java.util.Queue mCpuDurationsQueue;
    private final long mNativeContext;
    private long mStartTimeNs;
    private java.util.Queue mTimestampQueue;

    public void <init>()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        java.util.ArrayList $r1, $r2, $r3;
        java.util.LinkedList $r4, $r5;
        long $l0;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: int mCompletedQueryCount> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedCpuDurations> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedTimestamps> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue> = $r4;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue> = $r5;

        $l0 = staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: long nativeCreateContext(int)>(3);

        r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext> = $l0;

        return;
    }

    public void <init>(int)
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        int i0;
        java.util.ArrayList $r1, $r2, $r3;
        java.util.LinkedList $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        long $l1;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: int mCompletedQueryCount> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedCpuDurations> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedTimestamps> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue> = $r4;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue> = $r5;

        if i0 < 1 goto label1;

        $l1 = staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: long nativeCreateContext(int)>(i0);

        r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext> = $l1;

        return;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxQueries is less than 1");

        throw $r6;
    }

    private long getNextGlDuration()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        long l0, $l1;
        byte $b2;
        int $i3, $i4;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        $l1 = r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext>;

        l0 = staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: long nativeGetNextGlDuration(long)>($l1);

        $b2 = l0 cmp 0L;

        if $b2 <= 0 goto label1;

        $i3 = r0.<android.hardware.camera2.legacy.PerfMeasurement: int mCompletedQueryCount>;

        $i4 = $i3 + 1;

        r0.<android.hardware.camera2.legacy.PerfMeasurement: int mCompletedQueryCount> = $i4;

     label1:
        return l0;
    }

    public static boolean isGlTimingSupported()
    {
        boolean $z0;

        $z0 = staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: boolean nativeQuerySupport()>();

        return $z0;
    }

    private static native long nativeCreateContext(int);

    private static native void nativeDeleteContext(long);

    protected static native long nativeGetNextGlDuration(long);

    private static native boolean nativeQuerySupport();

    protected static native void nativeStartGlTimer(long);

    protected static native void nativeStopGlTimer(long);

    public void addTimestamp(long)
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        long l0;
        java.util.Queue $r1;
        java.lang.Long $r2;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        l0 := @parameter0: long;

        $r1 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r1.<java.util.Queue: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void dumpPerformanceData(java.lang.String)
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        java.lang.String r1, $r13, $r22;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r7, $r9, $r11;
        int $i0, i2;
        java.lang.Object[] $r6;
        java.lang.Object $r8, $r10, $r12;
        java.lang.Throwable $r14, $r15, $r16;
        java.lang.StringBuilder $r17;
        java.io.BufferedWriter r23;
        java.io.FileWriter r24;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        r1 := @parameter0: java.lang.String;

     label01:
        r23 = new java.io.BufferedWriter;

        r24 = new java.io.FileWriter;

        specialinvoke r24.<java.io.FileWriter: void <init>(java.lang.String)>(r1);

        specialinvoke r23.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r24);

     label02:
        virtualinvoke r23.<java.io.BufferedWriter: void write(java.lang.String)>("timestamp gpu_duration cpu_duration\n");

     label03:
        i2 = 0;

     label04:
        $r2 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label06;

        $r6 = newarray (java.lang.Object)[3];

        $r7 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedTimestamps>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r6[0] = $r8;

        $r9 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r6[1] = $r10;

        $r11 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedCpuDurations>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r6[2] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d %d %d\n", $r6);

        virtualinvoke r23.<java.io.BufferedWriter: void write(java.lang.String)>($r13);

     label05:
        i2 = i2 + 1;

        goto label04;

     label06:
        $r3 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedTimestamps>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r4 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedCpuDurations>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

     label07:
        virtualinvoke r23.<java.io.BufferedWriter: void close()>();

     label08:
        goto label16;

     label09:
        $r15 := @caughtexception;

     label10:
        virtualinvoke r23.<java.io.BufferedWriter: void close()>();

     label11:
        goto label14;

     label12:
        $r14 := @caughtexception;

     label13:
        virtualinvoke $r15.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r14);

     label14:
        throw $r15;

     label15:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing data dump to ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PerfMeasurement", $r22);

     label16:
        return;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label14 to label15 with label15;
    }

    protected void finalize()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        long $l0;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        $l0 = r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext>;

        staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: void nativeDeleteContext(long)>($l0);

        return;
    }

    public int getCompletedQueryCount()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        int $i0;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        $i0 = r0.<android.hardware.camera2.legacy.PerfMeasurement: int mCompletedQueryCount>;

        return $i0;
    }

    public void startTimer()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        long $l0, $l1;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        $l0 = r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext>;

        staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: void nativeStartGlTimer(long)>($l0);

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: long mStartTimeNs> = $l1;

        return;
    }

    public void stopTimer()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        long l0, $l2, $l3, $l4, l6, l7, l8;
        boolean z0, $z2, $z3, $z6;
        java.util.Queue $r1, $r3, $r4, $r5, $r7, $r11, $r12, $r16, $r17;
        java.lang.Long $r2, $r10, $r14, $r15, $r19, $r20;
        byte $b5, $b9;
        java.util.ArrayList $r9, r21, r22;
        java.lang.Object $r13, $r18;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        l6 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $r1 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue>;

        $l2 = r0.<android.hardware.camera2.legacy.PerfMeasurement: long mStartTimeNs>;

        $l3 = l6 - $l2;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke $r1.<java.util.Queue: boolean add(java.lang.Object)>($r2);

        $l4 = r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext>;

        staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: void nativeStopGlTimer(long)>($l4);

        l0 = specialinvoke r0.<android.hardware.camera2.legacy.PerfMeasurement: long getNextGlDuration()>();

        $b5 = l0 cmp 0L;

        if $b5 <= 0 goto label5;

        $r9 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        r21 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedTimestamps>;

        $r11 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue>;

        z0 = interfaceinvoke $r11.<java.util.Queue: boolean isEmpty()>();

        if z0 == 0 goto label1;

        l7 = -1L;

        goto label2;

     label1:
        $r12 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue>;

        $r13 = interfaceinvoke $r12.<java.util.Queue: java.lang.Object poll()>();

        $r14 = (java.lang.Long) $r13;

        l7 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

     label2:
        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l7);

        virtualinvoke r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        r22 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedCpuDurations>;

        $r16 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue>;

        $z6 = interfaceinvoke $r16.<java.util.Queue: boolean isEmpty()>();

        if $z6 == 0 goto label3;

        l8 = -1L;

        goto label4;

     label3:
        $r17 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue>;

        $r18 = interfaceinvoke $r17.<java.util.Queue: java.lang.Object poll()>();

        $r19 = (java.lang.Long) $r18;

        l8 = virtualinvoke $r19.<java.lang.Long: long longValue()>();

     label4:
        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8);

        virtualinvoke r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label5:
        $b9 = l0 cmp -2L;

        if $b9 != 0 goto label7;

        $r3 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue>;

        $z2 = interfaceinvoke $r3.<java.util.Queue: boolean isEmpty()>();

        if $z2 != 0 goto label6;

        $r7 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue>;

        interfaceinvoke $r7.<java.util.Queue: java.lang.Object poll()>();

     label6:
        $r4 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue>;

        $z3 = interfaceinvoke $r4.<java.util.Queue: boolean isEmpty()>();

        if $z3 != 0 goto label7;

        $r5 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue>;

        interfaceinvoke $r5.<java.util.Queue: java.lang.Object poll()>();

     label7:
        return;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.legacy.PerfMeasurement: java.lang.String TAG> = "PerfMeasurement";

        <android.hardware.camera2.legacy.PerfMeasurement: long NO_DURATION_YET> = -1L;

        <android.hardware.camera2.legacy.PerfMeasurement: long FAILED_TIMING> = -2L;

        <android.hardware.camera2.legacy.PerfMeasurement: int DEFAULT_MAX_QUERIES> = 3;

        return;
    }
}
