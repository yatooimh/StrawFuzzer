public class android.hardware.camera2.legacy.RequestHandlerThread extends android.os.HandlerThread
{
    public static final int MSG_POKE_IDLE_HANDLER;
    private android.os.Handler$Callback mCallback;
    private volatile android.os.Handler mHandler;
    private final android.os.ConditionVariable mIdle;
    private final android.os.MessageQueue$IdleHandler mIdleHandler;
    private final android.os.ConditionVariable mStarted;

    public void <init>(java.lang.String, android.os.Handler$Callback)
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        java.lang.String r1;
        android.os.Handler$Callback r2;
        android.os.ConditionVariable $r3, $r4;
        android.hardware.camera2.legacy.RequestHandlerThread$1 $r5;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Handler$Callback;

        specialinvoke r0.<android.os.HandlerThread: void <init>(java.lang.String,int)>(r1, 10);

        $r3 = new android.os.ConditionVariable;

        specialinvoke $r3.<android.os.ConditionVariable: void <init>(boolean)>(0);

        r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mStarted> = $r3;

        $r4 = new android.os.ConditionVariable;

        specialinvoke $r4.<android.os.ConditionVariable: void <init>(boolean)>(1);

        r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mIdle> = $r4;

        $r5 = new android.hardware.camera2.legacy.RequestHandlerThread$1;

        specialinvoke $r5.<android.hardware.camera2.legacy.RequestHandlerThread$1: void <init>(android.hardware.camera2.legacy.RequestHandlerThread)>(r0);

        r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.MessageQueue$IdleHandler mIdleHandler> = $r5;

        r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler$Callback mCallback> = r2;

        return;
    }

    static android.os.ConditionVariable access$000(android.hardware.camera2.legacy.RequestHandlerThread)
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.ConditionVariable $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.RequestHandlerThread;

        $r1 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mIdle>;

        return $r1;
    }

    public android.os.Handler getHandler()
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.Handler $r1;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        $r1 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler>;

        return $r1;
    }

    public boolean hasAnyMessages(int[])
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.MessageQueue r1;
        int i0, i1, i2;
        android.os.Handler $r2, $r4;
        android.os.Looper $r3;
        boolean $z0;
        java.lang.Throwable $r5;
        int[] r6;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        r6 := @parameter0: int[];

        $r2 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        r1 = virtualinvoke $r3.<android.os.Looper: android.os.MessageQueue getQueue()>();

        entermonitor r1;

     label01:
        i0 = lengthof r6;

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label07;

        i1 = r6[i2];

     label04:
        $r4 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r4.<android.os.Handler: boolean hasMessages(int)>(i1);

        if $z0 == 0 goto label06;

        exitmonitor r1;

     label05:
        return 1;

     label06:
        i2 = i2 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return 0;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    protected void onLooperPrepared()
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        android.os.Handler$Callback $r3;
        android.os.ConditionVariable $r4;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        $r1 = new android.os.Handler;

        $r2 = virtualinvoke r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Looper getLooper()>();

        $r3 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler$Callback mCallback>;

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r2, $r3);

        r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler> = $r1;

        $r4 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mStarted>;

        virtualinvoke $r4.<android.os.ConditionVariable: void open()>();

        return;
    }

    public void removeMessages(int[])
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.MessageQueue r1;
        int i0, i1, i2;
        android.os.Handler $r2, $r4;
        android.os.Looper $r3;
        java.lang.Throwable $r5;
        int[] r6;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        r6 := @parameter0: int[];

        $r2 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        r1 = virtualinvoke $r3.<android.os.Looper: android.os.MessageQueue getQueue()>();

        entermonitor r1;

     label01:
        i0 = lengthof r6;

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label06;

        i1 = r6[i2];

     label04:
        $r4 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int)>(i1);

     label05:
        i2 = i2 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.os.Handler waitAndGetHandler()
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.Handler $r1;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        virtualinvoke r0.<android.hardware.camera2.legacy.RequestHandlerThread: void waitUntilStarted()>();

        $r1 = virtualinvoke r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()>();

        return $r1;
    }

    public void waitUntilIdle()
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.Handler r1;
        android.os.MessageQueue r2;
        android.os.Looper $r3;
        boolean $z0, $z2;
        android.os.ConditionVariable $r4, $r6;
        android.os.MessageQueue$IdleHandler $r5;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        r1 = virtualinvoke r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler waitAndGetHandler()>();

        $r3 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        r2 = virtualinvoke $r3.<android.os.Looper: android.os.MessageQueue getQueue()>();

        $z0 = virtualinvoke r2.<android.os.MessageQueue: boolean isIdle()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mIdle>;

        virtualinvoke $r4.<android.os.ConditionVariable: void close()>();

        $r5 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.MessageQueue$IdleHandler mIdleHandler>;

        virtualinvoke r2.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r5);

        virtualinvoke r1.<android.os.Handler: boolean sendEmptyMessage(int)>(-1);

        $z2 = virtualinvoke r2.<android.os.MessageQueue: boolean isIdle()>();

        if $z2 == 0 goto label2;

        return;

     label2:
        $r6 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mIdle>;

        virtualinvoke $r6.<android.os.ConditionVariable: void block()>();

        return;
    }

    public void waitUntilStarted()
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.ConditionVariable $r1;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        $r1 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mStarted>;

        virtualinvoke $r1.<android.os.ConditionVariable: void block()>();

        return;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.legacy.RequestHandlerThread: int MSG_POKE_IDLE_HANDLER> = -1;

        return;
    }
}
