public class android.hardware.camera2.legacy.RequestQueue extends java.lang.Object
{
    public static final long INVALID_FRAME;
    private static final java.lang.String TAG;
    private long mCurrentFrameNumber;
    private long mCurrentRepeatingFrameNumber;
    private int mCurrentRequestId;
    private final java.util.List mJpegSurfaceIds;
    private android.hardware.camera2.legacy.BurstHolder mRepeatingRequest;
    private final java.util.ArrayDeque mRequestQueue;

    public void <init>(java.util.List)
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        java.util.List r1;
        java.util.ArrayDeque $r2;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest> = null;

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<java.util.ArrayDeque: void <init>()>();

        r0.<android.hardware.camera2.legacy.RequestQueue: java.util.ArrayDeque mRequestQueue> = $r2;

        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber> = 0L;

        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber> = -1L;

        r0.<android.hardware.camera2.legacy.RequestQueue: int mCurrentRequestId> = 0;

        r0.<android.hardware.camera2.legacy.RequestQueue: java.util.List mJpegSurfaceIds> = r1;

        return;
    }

    private long calculateLastFrame(int)
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        int i0, $i1, $i3;
        java.util.Iterator r1;
        android.hardware.camera2.legacy.BurstHolder r2;
        java.util.ArrayDeque $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.Object $r5;
        long $l2, $l4, l5;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        i0 := @parameter0: int;

        l5 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber>;

        $r3 = r0.<android.hardware.camera2.legacy.RequestQueue: java.util.ArrayDeque mRequestQueue>;

        r1 = virtualinvoke $r3.<java.util.ArrayDeque: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.hardware.camera2.legacy.BurstHolder) $r5;

        $i1 = virtualinvoke r2.<android.hardware.camera2.legacy.BurstHolder: int getNumberOfRequests()>();

        $l2 = (long) $i1;

        l5 = l5 + $l2;

        $i3 = virtualinvoke r2.<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>();

        if $i3 != i0 goto label2;

        $l4 = l5 - 1L;

        return $l4;

     label2:
        goto label1;

     label3:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("At least one request must be in the queue to calculate frame number");

        throw $r4;
    }

    public android.hardware.camera2.legacy.RequestQueue$RequestQueueEntry getNext()
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        java.util.ArrayDeque $r1, $r5;
        java.lang.Object $r2;
        long $l0, $l1, $l3, $l4, $l5, $l7, $l8;
        java.lang.Long $r3;
        int $i2, $i6, $i9;
        android.hardware.camera2.legacy.BurstHolder $r4, r7, r8;
        java.lang.Throwable $r6;
        boolean z0;
        android.hardware.camera2.legacy.RequestQueue$RequestQueueEntry r9;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        entermonitor r0;

     label01:
        $r1 = r0.<android.hardware.camera2.legacy.RequestQueue: java.util.ArrayDeque mRequestQueue>;

        $r2 = virtualinvoke $r1.<java.util.ArrayDeque: java.lang.Object poll()>();

        r7 = (android.hardware.camera2.legacy.BurstHolder) $r2;

     label02:
        if r7 == null goto label05;

     label03:
        $r5 = r0.<android.hardware.camera2.legacy.RequestQueue: java.util.ArrayDeque mRequestQueue>;

        $i9 = virtualinvoke $r5.<java.util.ArrayDeque: int size()>();

        if $i9 != 0 goto label05;

     label04:
        z0 = 1;

        goto label06;

     label05:
        z0 = 0;

     label06:
        r8 = r7;

        if r7 != null goto label08;

        r8 = r7;

     label07:
        $r4 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        if $r4 == null goto label08;

        r8 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        $l5 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber>;

        $i6 = virtualinvoke r8.<android.hardware.camera2.legacy.BurstHolder: int getNumberOfRequests()>();

        $l7 = (long) $i6;

        $l8 = $l5 + $l7;

        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber> = $l8;

     label08:
        if r8 != null goto label09;

        exitmonitor r0;

        return null;

     label09:
        r9 = new android.hardware.camera2.legacy.RequestQueue$RequestQueueEntry;

        $l0 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        specialinvoke r9.<android.hardware.camera2.legacy.RequestQueue$RequestQueueEntry: void <init>(android.hardware.camera2.legacy.RequestQueue,android.hardware.camera2.legacy.BurstHolder,java.lang.Long,boolean)>(r0, r8, $r3, z0);

        $l1 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber>;

        $i2 = virtualinvoke r8.<android.hardware.camera2.legacy.BurstHolder: int getNumberOfRequests()>();

        $l3 = (long) $i2;

        $l4 = $l1 + $l3;

        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber> = $l4;

     label10:
        exitmonitor r0;

        return r9;

     label11:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public long stopRepeating()
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        long l0;
        android.hardware.camera2.legacy.BurstHolder $r2, $r3;
        int $i1;
        java.lang.Throwable $r4;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        entermonitor r0;

     label1:
        $r2 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        if $r2 != null goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RequestQueue", "cancel failed: no repeating request exists.");

     label2:
        exitmonitor r0;

        return -1L;

     label3:
        $r3 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        $i1 = virtualinvoke $r3.<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>();

        l0 = virtualinvoke r0.<android.hardware.camera2.legacy.RequestQueue: long stopRepeating(int)>($i1);

     label4:
        exitmonitor r0;

        return l0;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long stopRepeating(int)
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        int i0, $i2;
        android.hardware.camera2.legacy.BurstHolder $r1, $r5;
        java.lang.String $r4;
        long $l3, $l5, l7;
        byte $b4;
        java.lang.Throwable $r6;
        java.lang.StringBuilder r7;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        i0 := @parameter0: int;

        entermonitor r0;

        l7 = -1L;

     label1:
        $r1 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        if $r1 == null goto label6;

        $r5 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        $i2 = virtualinvoke $r5.<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>();

        if $i2 != i0 goto label6;

        r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest> = null;

        $l3 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber>;

        $b4 = $l3 cmp -1L;

        if $b4 != 0 goto label3;

     label2:
        l7 = -1L;

        goto label4;

     label3:
        $l5 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber>;

        l7 = $l5 - 1L;

     label4:
        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber> = -1L;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RequestQueue", "Repeating capture request cancelled.");

     label5:
        goto label7;

     label6:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cancel failed: no repeating request exists for request id: ");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RequestQueue", $r4);

     label7:
        exitmonitor r0;

        return l7;

     label8:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public android.hardware.camera2.utils.SubmitInfo submit(android.hardware.camera2.CaptureRequest[], boolean)
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        boolean z0, $z1;
        int i0, $i1, $i2;
        android.hardware.camera2.legacy.BurstHolder r1, $r5;
        java.util.List $r2;
        java.util.ArrayDeque $r3;
        android.hardware.camera2.utils.SubmitInfo $r4;
        long $l4, $l6, l7;
        byte $b5;
        java.lang.Throwable $r6;
        android.hardware.camera2.CaptureRequest[] r7;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        r7 := @parameter0: android.hardware.camera2.CaptureRequest[];

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        i0 = r0.<android.hardware.camera2.legacy.RequestQueue: int mCurrentRequestId>;

        $i1 = i0 + 1;

        r0.<android.hardware.camera2.legacy.RequestQueue: int mCurrentRequestId> = $i1;

        r1 = new android.hardware.camera2.legacy.BurstHolder;

        $r2 = r0.<android.hardware.camera2.legacy.RequestQueue: java.util.List mJpegSurfaceIds>;

        specialinvoke r1.<android.hardware.camera2.legacy.BurstHolder: void <init>(int,boolean,android.hardware.camera2.CaptureRequest[],java.util.Collection)>(i0, z0, r7, $r2);

     label02:
        l7 = -1L;

     label03:
        $z1 = virtualinvoke r1.<android.hardware.camera2.legacy.BurstHolder: boolean isRepeating()>();

        if $z1 == 0 goto label09;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RequestQueue", "Repeating capture request set.");

     label04:
        $r5 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        if $r5 == null goto label07;

        $l4 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber>;

        $b5 = $l4 cmp -1L;

        if $b5 != 0 goto label06;

     label05:
        l7 = -1L;

        goto label07;

     label06:
        $l6 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber>;

        l7 = $l6 - 1L;

     label07:
        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber> = -1L;

        r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest> = r1;

     label08:
        goto label10;

     label09:
        $r3 = r0.<android.hardware.camera2.legacy.RequestQueue: java.util.ArrayDeque mRequestQueue>;

        virtualinvoke $r3.<java.util.ArrayDeque: boolean offer(java.lang.Object)>(r1);

        $i2 = virtualinvoke r1.<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>();

        l7 = specialinvoke r0.<android.hardware.camera2.legacy.RequestQueue: long calculateLastFrame(int)>($i2);

     label10:
        $r4 = new android.hardware.camera2.utils.SubmitInfo;

        specialinvoke $r4.<android.hardware.camera2.utils.SubmitInfo: void <init>(int,long)>(i0, l7);

     label11:
        exitmonitor r0;

        return $r4;

     label12:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.legacy.RequestQueue: java.lang.String TAG> = "RequestQueue";

        <android.hardware.camera2.legacy.RequestQueue: long INVALID_FRAME> = -1L;

        return;
    }
}
