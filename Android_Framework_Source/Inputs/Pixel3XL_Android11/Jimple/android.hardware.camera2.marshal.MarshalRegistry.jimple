public class android.hardware.camera2.marshal.MarshalRegistry extends java.lang.Object
{
    private static final java.lang.Object sMarshalLock;
    private static final java.util.HashMap sMarshalerMap;
    private static final java.util.List sRegisteredMarshalQueryables;

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.util.ArrayList $r1;
        java.util.HashMap $r2;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.hardware.camera2.marshal.MarshalRegistry: java.lang.Object sMarshalLock> = $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        <android.hardware.camera2.marshal.MarshalRegistry: java.util.List sRegisteredMarshalQueryables> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <android.hardware.camera2.marshal.MarshalRegistry: java.util.HashMap sMarshalerMap> = $r2;

        return;
    }

    private void <init>()
    {
        android.hardware.camera2.marshal.MarshalRegistry r0;
        java.lang.AssertionError $r1;

        r0 := @this: android.hardware.camera2.marshal.MarshalRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public static android.hardware.camera2.marshal.Marshaler getMarshaler(android.hardware.camera2.utils.TypeReference, int)
    {
        int i0, $i1;
        java.lang.Object r0, $r4, $r15;
        android.hardware.camera2.marshal.MarshalRegistry$MarshalToken r1;
        java.util.Iterator r2;
        java.util.HashMap $r3, $r13;
        java.util.List $r5, $r6;
        boolean $z0, $z1;
        java.lang.String $r10, $r12;
        java.lang.Throwable $r16;
        android.hardware.camera2.utils.TypeReference r17;
        android.hardware.camera2.marshal.Marshaler r18, r19;
        android.hardware.camera2.marshal.MarshalQueryable r20;
        java.lang.UnsupportedOperationException r21;
        java.lang.StringBuilder r22;
        java.lang.AssertionError r23;

        r17 := @parameter0: android.hardware.camera2.utils.TypeReference;

        i0 := @parameter1: int;

        r0 = <android.hardware.camera2.marshal.MarshalRegistry: java.lang.Object sMarshalLock>;

        entermonitor r0;

     label01:
        r1 = new android.hardware.camera2.marshal.MarshalRegistry$MarshalToken;

        specialinvoke r1.<android.hardware.camera2.marshal.MarshalRegistry$MarshalToken: void <init>(android.hardware.camera2.utils.TypeReference,int)>(r17, i0);

        $r3 = <android.hardware.camera2.marshal.MarshalRegistry: java.util.HashMap sMarshalerMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r18 = (android.hardware.camera2.marshal.Marshaler) $r4;

     label02:
        r19 = r18;

        if r18 != null goto label13;

     label03:
        $r5 = <android.hardware.camera2.marshal.MarshalRegistry: java.util.List sRegisteredMarshalQueryables>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 == 0 goto label12;

        $r6 = <android.hardware.camera2.marshal.MarshalRegistry: java.util.List sRegisteredMarshalQueryables>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label04:
        r19 = r18;

     label05:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r20 = (android.hardware.camera2.marshal.MarshalQueryable) $r15;

        $z1 = interfaceinvoke r20.<android.hardware.camera2.marshal.MarshalQueryable: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>(r17, i0);

        if $z1 == 0 goto label07;

        r19 = interfaceinvoke r20.<android.hardware.camera2.marshal.MarshalQueryable: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>(r17, i0);

     label06:
        goto label08;

     label07:
        goto label04;

     label08:
        if r19 == null goto label11;

     label09:
        $r13 = <android.hardware.camera2.marshal.MarshalRegistry: java.util.HashMap sMarshalerMap>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r19);

     label10:
        goto label13;

     label11:
        r21 = new java.lang.UnsupportedOperationException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find marshaler that matches the requested combination of type reference ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and native type ");

        $r10 = staticinvoke <android.hardware.camera2.marshal.MarshalHelpers: java.lang.String toStringNativeType(int)>(i0);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r12);

        throw r21;

     label12:
        r23 = new java.lang.AssertionError;

        specialinvoke r23.<java.lang.AssertionError: void <init>(java.lang.Object)>("No available query marshalers registered");

        throw r23;

     label13:
        exitmonitor r0;

     label14:
        return r19;

     label15:
        $r16 := @caughtexception;

     label16:
        exitmonitor r0;

     label17:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public static void registerMarshalQueryable(android.hardware.camera2.marshal.MarshalQueryable)
    {
        java.lang.Object r0;
        java.util.List $r1;
        java.lang.Throwable $r2;
        android.hardware.camera2.marshal.MarshalQueryable r3;

        r3 := @parameter0: android.hardware.camera2.marshal.MarshalQueryable;

        r0 = <android.hardware.camera2.marshal.MarshalRegistry: java.lang.Object sMarshalLock>;

        entermonitor r0;

     label1:
        $r1 = <android.hardware.camera2.marshal.MarshalRegistry: java.util.List sRegisteredMarshalQueryables>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
