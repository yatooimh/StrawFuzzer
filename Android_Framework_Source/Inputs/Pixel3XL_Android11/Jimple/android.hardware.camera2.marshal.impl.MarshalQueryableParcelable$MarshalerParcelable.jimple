class android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable extends android.hardware.camera2.marshal.Marshaler
{
    private final java.lang.Class mClass;
    private final android.os.Parcelable$Creator mCreator;
    final android.hardware.camera2.marshal.impl.MarshalQueryableParcelable this$0;

    protected void <init>(android.hardware.camera2.marshal.impl.MarshalQueryableParcelable, android.hardware.camera2.utils.TypeReference, int)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable r0;
        android.hardware.camera2.utils.TypeReference r1;
        int i0;
        java.lang.Object $r2;
        android.os.Parcelable$Creator $r3;
        java.lang.Throwable $r4, $r6, $r8;
        java.lang.AssertionError $r5, $r7, $r9;
        android.hardware.camera2.marshal.impl.MarshalQueryableParcelable r10;
        java.lang.Class r11;
        java.lang.reflect.Field r12;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable;

        r10 := @parameter0: android.hardware.camera2.marshal.impl.MarshalQueryableParcelable;

        r1 := @parameter1: android.hardware.camera2.utils.TypeReference;

        i0 := @parameter2: int;

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: android.hardware.camera2.marshal.impl.MarshalQueryableParcelable this$0> = r10;

        specialinvoke r0.<android.hardware.camera2.marshal.Marshaler: void <init>(android.hardware.camera2.marshal.MarshalQueryable,android.hardware.camera2.utils.TypeReference,int)>(r10, r1, i0);

        r11 = virtualinvoke r1.<android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType()>();

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: java.lang.Class mClass> = r11;

     label1:
        r12 = virtualinvoke r11.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("CREATOR");

     label2:
        $r2 = virtualinvoke r12.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r3 = (android.os.Parcelable$Creator) $r2;

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: android.os.Parcelable$Creator mCreator> = $r3;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r7;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

        catch java.lang.NoSuchFieldException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label2 to label3 with label5;
        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    public int calculateMarshalSize(android.os.Parcelable)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable r0;
        android.os.Parcel r1;
        int i0;
        byte[] $r2;
        java.lang.Throwable $r3;
        android.os.Parcelable r4;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable;

        r4 := @parameter0: android.os.Parcelable;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        interfaceinvoke r4.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        $r2 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

        i0 = lengthof $r2;

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public volatile int calculateMarshalSize(java.lang.Object)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable r0;
        java.lang.Object r1;
        android.os.Parcelable $r2;
        int $i0;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.os.Parcelable) r1;

        $i0 = virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: int calculateMarshalSize(android.os.Parcelable)>($r2);

        return $i0;
    }

    public int getNativeSize()
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable r0;
        int $i0;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable;

        $i0 = <android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: int NATIVE_SIZE_DYNAMIC>;

        return $i0;
    }

    public void marshal(android.os.Parcelable, java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable r0;
        android.os.Parcel r1;
        boolean $z0;
        java.lang.String $r5, $r10;
        int $i0;
        java.lang.StringBuilder $r6, r18;
        java.lang.AssertionError $r9;
        java.lang.Throwable $r12;
        android.os.Parcelable r13;
        java.nio.ByteBuffer r14;
        byte[] r15;
        java.lang.UnsupportedOperationException r17;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable;

        r13 := @parameter0: android.os.Parcelable;

        r14 := @parameter1: java.nio.ByteBuffer;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        interfaceinvoke r13.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean hasFileDescriptors()>();

        if $z0 != 0 goto label4;

        r15 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        $i0 = lengthof r15;

        if $i0 == 0 goto label3;

        virtualinvoke r14.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r15);

        return;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No data marshaled for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r9 = new java.lang.AssertionError;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);

        throw $r9;

     label4:
        r17 = new java.lang.UnsupportedOperationException;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must not have file descriptors");

        $r5 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r5);

        throw r17;

     label5:
        $r12 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public volatile void marshal(java.lang.Object, java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable r0;
        java.lang.Object r1;
        java.nio.ByteBuffer r2;
        android.os.Parcelable $r3;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.nio.ByteBuffer;

        $r3 = (android.os.Parcelable) r1;

        virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: void marshal(android.os.Parcelable,java.nio.ByteBuffer)>($r3, r2);

        return;
    }

    public android.os.Parcelable unmarshal(java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable r0;
        android.os.Parcel r1;
        java.lang.AssertionError r2;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6, $r13;
        java.lang.String $r9;
        int $i0, $i1, i2, i3;
        java.lang.Class $r12;
        java.lang.Throwable $r14;
        java.nio.ByteBuffer r15;
        byte[] r16;
        android.os.Parcelable r17, r18;
        java.lang.StringBuilder r19;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable;

        r15 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r15.<java.nio.ByteBuffer: java.nio.Buffer mark()>();

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        i2 = virtualinvoke r15.<java.nio.ByteBuffer: int remaining()>();

        r16 = newarray (byte)[i2];

        virtualinvoke r15.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r16);

        virtualinvoke r1.<android.os.Parcel: void unmarshall(byte[],int,int)>(r16, 0, i2);

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(0);

        $r5 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: android.os.Parcelable$Creator mCreator>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r17 = (android.os.Parcelable) $r6;

        i3 = virtualinvoke r1.<android.os.Parcel: int dataPosition()>();

     label2:
        if i3 == 0 goto label5;

     label3:
        virtualinvoke r15.<java.nio.ByteBuffer: java.nio.Buffer reset()>();

        $i0 = virtualinvoke r15.<java.nio.ByteBuffer: int position()>();

        $i1 = $i0 + i3;

        virtualinvoke r15.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1);

        $r12 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: java.lang.Class mClass>;

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r17);

        r18 = (android.os.Parcelable) $r13;

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r18;

     label5:
        r2 = new java.lang.AssertionError;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No data marshaled for ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r9 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw r2;

     label6:
        $r14 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public volatile java.lang.Object unmarshal(java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable r0;
        java.nio.ByteBuffer r1;
        android.os.Parcelable $r2;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable: android.os.Parcelable unmarshal(java.nio.ByteBuffer)>(r1);

        return $r2;
    }
}
