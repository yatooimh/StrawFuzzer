class android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange extends android.hardware.camera2.marshal.Marshaler
{
    private final java.lang.Class mClass;
    private final java.lang.reflect.Constructor mConstructor;
    private final android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler;
    final android.hardware.camera2.marshal.impl.MarshalQueryableRange this$0;

    protected void <init>(android.hardware.camera2.marshal.impl.MarshalQueryableRange, android.hardware.camera2.utils.TypeReference, int)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        android.hardware.camera2.utils.TypeReference r1, $r5;
        int i0, $i1;
        java.lang.Class $r2, $r8;
        java.lang.reflect.Type $r3, r16;
        java.lang.reflect.Type[] $r4;
        android.hardware.camera2.marshal.Marshaler $r6;
        java.lang.Class[] $r7;
        java.lang.reflect.Constructor $r9;
        java.lang.ClassCastException $r10;
        java.lang.AssertionError $r11, $r13;
        java.lang.Throwable $r12;
        android.hardware.camera2.marshal.impl.MarshalQueryableRange r14;
        java.lang.reflect.ParameterizedType r15;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r14 := @parameter0: android.hardware.camera2.marshal.impl.MarshalQueryableRange;

        r1 := @parameter1: android.hardware.camera2.utils.TypeReference;

        i0 := @parameter2: int;

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.impl.MarshalQueryableRange this$0> = r14;

        specialinvoke r0.<android.hardware.camera2.marshal.Marshaler: void <init>(android.hardware.camera2.marshal.MarshalQueryable,android.hardware.camera2.utils.TypeReference,int)>(r14, r1, i0);

        $r2 = virtualinvoke r1.<android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType()>();

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: java.lang.Class mClass> = $r2;

     label1:
        $r3 = virtualinvoke r1.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type getType()>();

        r15 = (java.lang.reflect.ParameterizedType) $r3;

     label2:
        $r4 = interfaceinvoke r15.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        r16 = $r4[0];

        $r5 = staticinvoke <android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference createSpecializedTypeReference(java.lang.reflect.Type)>(r16);

        $i1 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int mNativeType>;

        $r6 = staticinvoke <android.hardware.camera2.marshal.MarshalRegistry: android.hardware.camera2.marshal.Marshaler getMarshaler(android.hardware.camera2.utils.TypeReference,int)>($r5, $i1);

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler> = $r6;

     label3:
        $r8 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: java.lang.Class mClass>;

        $r7 = newarray (java.lang.Class)[2];

        $r7[0] = class "Ljava/lang/Comparable;";

        $r7[1] = class "Ljava/lang/Comparable;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r7);

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: java.lang.reflect.Constructor mConstructor> = $r9;

     label4:
        return;

     label5:
        $r12 := @caughtexception;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r13;

     label6:
        $r10 := @caughtexception;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>("Raw use of Range is not supported", $r10);

        throw $r11;

        catch java.lang.ClassCastException from label1 to label2 with label6;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }

    public int calculateMarshalSize(android.util.Range)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        android.util.Range r1;
        int i0, $i1, $i2, $i3, $i4;
        android.hardware.camera2.marshal.Marshaler $r2, $r4;
        java.lang.Comparable $r3, $r5;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: android.util.Range;

        i0 = virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int getNativeSize()>();

        $i1 = <android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int NATIVE_SIZE_DYNAMIC>;

        if i0 == $i1 goto label1;

        return i0;

     label1:
        $r2 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r3 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getLower()>();

        $i2 = virtualinvoke $r2.<android.hardware.camera2.marshal.Marshaler: int calculateMarshalSize(java.lang.Object)>($r3);

        $r4 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r5 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getUpper()>();

        $i3 = virtualinvoke $r4.<android.hardware.camera2.marshal.Marshaler: int calculateMarshalSize(java.lang.Object)>($r5);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public volatile int calculateMarshalSize(java.lang.Object)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        java.lang.Object r1;
        android.util.Range $r2;
        int $i0;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.util.Range) r1;

        $i0 = virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int calculateMarshalSize(android.util.Range)>($r2);

        return $i0;
    }

    public int getNativeSize()
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        int i0, $i1, $i2, $i3;
        android.hardware.camera2.marshal.Marshaler $r1;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        $r1 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        i0 = virtualinvoke $r1.<android.hardware.camera2.marshal.Marshaler: int getNativeSize()>();

        $i1 = <android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int NATIVE_SIZE_DYNAMIC>;

        if i0 == $i1 goto label1;

        $i3 = i0 * 2;

        return $i3;

     label1:
        $i2 = <android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int NATIVE_SIZE_DYNAMIC>;

        return $i2;
    }

    public void marshal(android.util.Range, java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        android.util.Range r1;
        java.nio.ByteBuffer r2;
        android.hardware.camera2.marshal.Marshaler $r3, $r5;
        java.lang.Comparable $r4, $r6;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: android.util.Range;

        r2 := @parameter1: java.nio.ByteBuffer;

        $r3 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r4 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getLower()>();

        virtualinvoke $r3.<android.hardware.camera2.marshal.Marshaler: void marshal(java.lang.Object,java.nio.ByteBuffer)>($r4, r2);

        $r5 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r6 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getUpper()>();

        virtualinvoke $r5.<android.hardware.camera2.marshal.Marshaler: void marshal(java.lang.Object,java.nio.ByteBuffer)>($r6, r2);

        return;
    }

    public volatile void marshal(java.lang.Object, java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        java.lang.Object r1;
        java.nio.ByteBuffer r2;
        android.util.Range $r3;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.nio.ByteBuffer;

        $r3 = (android.util.Range) r1;

        virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: void marshal(android.util.Range,java.nio.ByteBuffer)>($r3, r2);

        return;
    }

    public android.util.Range unmarshal(java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        java.lang.Comparable r1, r18;
        android.hardware.camera2.marshal.Marshaler $r2, $r4;
        java.lang.Object $r3, $r5, $r8;
        java.lang.Object[] $r6;
        java.lang.reflect.Constructor $r7;
        java.lang.Throwable $r9, $r11, $r13, $r15;
        java.lang.AssertionError $r10, $r12, $r14, $r16;
        java.nio.ByteBuffer r17;
        android.util.Range r19;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r17 := @parameter0: java.nio.ByteBuffer;

        $r2 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.marshal.Marshaler: java.lang.Object unmarshal(java.nio.ByteBuffer)>(r17);

        r1 = (java.lang.Comparable) $r3;

        $r4 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r5 = virtualinvoke $r4.<android.hardware.camera2.marshal.Marshaler: java.lang.Object unmarshal(java.nio.ByteBuffer)>(r17);

        r18 = (java.lang.Comparable) $r5;

     label1:
        $r7 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: java.lang.reflect.Constructor mConstructor>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r1;

        $r6[1] = r18;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        r19 = (android.util.Range) $r8;

     label2:
        return r19;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r10;

     label4:
        $r15 := @caughtexception;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>($r15);

        throw $r16;

     label5:
        $r11 := @caughtexception;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>($r11);

        throw $r12;

     label6:
        $r13 := @caughtexception;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>($r13);

        throw $r14;

        catch java.lang.InstantiationException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public volatile java.lang.Object unmarshal(java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        java.nio.ByteBuffer r1;
        android.util.Range $r2;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.util.Range unmarshal(java.nio.ByteBuffer)>(r1);

        return $r2;
    }
}
