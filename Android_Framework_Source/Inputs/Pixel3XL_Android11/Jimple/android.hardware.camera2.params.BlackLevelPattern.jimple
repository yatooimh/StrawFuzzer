public final class android.hardware.camera2.params.BlackLevelPattern extends java.lang.Object
{
    public static final int COUNT;
    private final int[] mCfaOffsets;

    public void <init>(int[])
    {
        android.hardware.camera2.params.BlackLevelPattern r0;
        int[] r1, $r4;
        java.lang.NullPointerException $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.hardware.camera2.params.BlackLevelPattern;

        r1 := @parameter0: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        if $i0 < 4 goto label1;

        $r4 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r1, 4);

        r0.<android.hardware.camera2.params.BlackLevelPattern: int[] mCfaOffsets> = $r4;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid offsets array length");

        throw $r3;

     label2:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null offsets array passed to constructor");

        throw $r2;
    }

    public void copyTo(int[], int)
    {
        android.hardware.camera2.params.BlackLevelPattern r0;
        int[] r1, $r5;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.IllegalArgumentException $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: android.hardware.camera2.params.BlackLevelPattern;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "destination must not be null");

        if i0 < 0 goto label4;

        $i1 = lengthof r1;

        $i2 = $i1 - i0;

        if $i2 < 4 goto label3;

        i5 = 0;

     label1:
        if i5 >= 4 goto label2;

        $i4 = i0 + i5;

        $r5 = r0.<android.hardware.camera2.params.BlackLevelPattern: int[] mCfaOffsets>;

        $i3 = $r5[i5];

        r1[$i4] = $i3;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("destination too small to fit elements");

        throw $r4;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null offset passed to copyTo");

        throw $r3;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.camera2.params.BlackLevelPattern r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int[] $r3, $r4;

        r0 := @this: android.hardware.camera2.params.BlackLevelPattern;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z0 = r1 instanceof android.hardware.camera2.params.BlackLevelPattern;

        if $z0 == 0 goto label3;

        $r2 = (android.hardware.camera2.params.BlackLevelPattern) r1;

        $r4 = $r2.<android.hardware.camera2.params.BlackLevelPattern: int[] mCfaOffsets>;

        $r3 = r0.<android.hardware.camera2.params.BlackLevelPattern: int[] mCfaOffsets>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r4, $r3);

        return $z1;

     label3:
        return 0;
    }

    public int getOffsetForIndex(int, int)
    {
        android.hardware.camera2.params.BlackLevelPattern r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.IllegalArgumentException $r1;
        int[] $r2;

        r0 := @this: android.hardware.camera2.params.BlackLevelPattern;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 < 0 goto label1;

        if i0 < 0 goto label1;

        $r2 = r0.<android.hardware.camera2.params.BlackLevelPattern: int[] mCfaOffsets>;

        $i2 = i1 & 1;

        $i4 = $i2 << 1;

        $i3 = i0 & 1;

        $i5 = $i4 | $i3;

        $i6 = $r2[$i5];

        return $i6;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("column, row arguments must be positive");

        throw $r1;
    }

    public int hashCode()
    {
        android.hardware.camera2.params.BlackLevelPattern r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.hardware.camera2.params.BlackLevelPattern;

        $r1 = r0.<android.hardware.camera2.params.BlackLevelPattern: int[] mCfaOffsets>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        android.hardware.camera2.params.BlackLevelPattern r0;
        java.lang.Object[] $r1;
        int[] $r2, $r4, $r6, $r8;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3, $r5, $r7, $r9;
        java.lang.String $r10;

        r0 := @this: android.hardware.camera2.params.BlackLevelPattern;

        $r1 = newarray (java.lang.Object)[4];

        $r2 = r0.<android.hardware.camera2.params.BlackLevelPattern: int[] mCfaOffsets>;

        $i0 = $r2[0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r3;

        $r4 = r0.<android.hardware.camera2.params.BlackLevelPattern: int[] mCfaOffsets>;

        $i1 = $r4[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r5;

        $r6 = r0.<android.hardware.camera2.params.BlackLevelPattern: int[] mCfaOffsets>;

        $i2 = $r6[2];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r7;

        $r8 = r0.<android.hardware.camera2.params.BlackLevelPattern: int[] mCfaOffsets>;

        $i3 = $r8[3];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[3] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("BlackLevelPattern([%d, %d], [%d, %d])", $r1);

        return $r10;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.params.BlackLevelPattern: int COUNT> = 4;

        return;
    }
}
