public final class android.hardware.camera2.params.HighSpeedVideoConfiguration extends java.lang.Object
{
    private static final int HIGH_SPEED_MAX_MINIMAL_FPS;
    private final int mBatchSizeMax;
    private final int mFpsMax;
    private final int mFpsMin;
    private final android.util.Range mFpsRange;
    private final int mHeight;
    private final android.util.Size mSize;
    private final int mWidth;

    public void <init>(int, int, int, int, int)
    {
        android.hardware.camera2.params.HighSpeedVideoConfiguration r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.IllegalArgumentException $r1;
        android.util.Size $r2;
        android.util.Range $r3;
        java.lang.Integer $r4, $r5;

        r0 := @this: android.hardware.camera2.params.HighSpeedVideoConfiguration;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i3 < 120 goto label1;

        r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMax> = i3;

        $i5 = staticinvoke <com.android.internal.util.Preconditions: int checkArgumentPositive(int,java.lang.String)>(i0, "width must be positive");

        r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mWidth> = $i5;

        $i6 = staticinvoke <com.android.internal.util.Preconditions: int checkArgumentPositive(int,java.lang.String)>(i1, "height must be positive");

        r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mHeight> = $i6;

        $i7 = staticinvoke <com.android.internal.util.Preconditions: int checkArgumentPositive(int,java.lang.String)>(i2, "fpsMin must be positive");

        r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMin> = $i7;

        $r2 = new android.util.Size;

        $i9 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mWidth>;

        $i8 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mHeight>;

        specialinvoke $r2.<android.util.Size: void <init>(int,int)>($i9, $i8);

        r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: android.util.Size mSize> = $r2;

        $i10 = staticinvoke <com.android.internal.util.Preconditions: int checkArgumentPositive(int,java.lang.String)>(i4, "batchSizeMax must be positive");

        r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mBatchSizeMax> = $i10;

        $r3 = new android.util.Range;

        $i11 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMin>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $i12 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMax>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        specialinvoke $r3.<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>($r4, $r5);

        r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: android.util.Range mFpsRange> = $r3;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fpsMax must be at least 120");

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.camera2.params.HighSpeedVideoConfiguration r0, r2;
        boolean $z1, z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object r1;

        r0 := @this: android.hardware.camera2.params.HighSpeedVideoConfiguration;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z1 = r1 instanceof android.hardware.camera2.params.HighSpeedVideoConfiguration;

        if $z1 == 0 goto label4;

        r2 = (android.hardware.camera2.params.HighSpeedVideoConfiguration) r1;

        z2 = 0;

        $i1 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mWidth>;

        $i0 = r2.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mWidth>;

        if $i1 != $i0 goto label3;

        z2 = 0;

        $i3 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mHeight>;

        $i2 = r2.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mHeight>;

        if $i3 != $i2 goto label3;

        z2 = 0;

        $i5 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMin>;

        $i4 = r2.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMin>;

        if $i5 != $i4 goto label3;

        z2 = 0;

        $i7 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMax>;

        $i6 = r2.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMax>;

        if $i7 != $i6 goto label3;

        z2 = 0;

        $i9 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mBatchSizeMax>;

        $i8 = r2.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mBatchSizeMax>;

        if $i9 != $i8 goto label3;

        z2 = 1;

     label3:
        return z2;

     label4:
        return 0;
    }

    public int getBatchSizeMax()
    {
        android.hardware.camera2.params.HighSpeedVideoConfiguration r0;
        int $i0;

        r0 := @this: android.hardware.camera2.params.HighSpeedVideoConfiguration;

        $i0 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mBatchSizeMax>;

        return $i0;
    }

    public int getFpsMax()
    {
        android.hardware.camera2.params.HighSpeedVideoConfiguration r0;
        int $i0;

        r0 := @this: android.hardware.camera2.params.HighSpeedVideoConfiguration;

        $i0 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMax>;

        return $i0;
    }

    public int getFpsMin()
    {
        android.hardware.camera2.params.HighSpeedVideoConfiguration r0;
        int $i0;

        r0 := @this: android.hardware.camera2.params.HighSpeedVideoConfiguration;

        $i0 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMin>;

        return $i0;
    }

    public android.util.Range getFpsRange()
    {
        android.hardware.camera2.params.HighSpeedVideoConfiguration r0;
        android.util.Range $r1;

        r0 := @this: android.hardware.camera2.params.HighSpeedVideoConfiguration;

        $r1 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: android.util.Range mFpsRange>;

        return $r1;
    }

    public int getHeight()
    {
        android.hardware.camera2.params.HighSpeedVideoConfiguration r0;
        int $i0;

        r0 := @this: android.hardware.camera2.params.HighSpeedVideoConfiguration;

        $i0 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mHeight>;

        return $i0;
    }

    public android.util.Size getSize()
    {
        android.hardware.camera2.params.HighSpeedVideoConfiguration r0;
        android.util.Size $r1;

        r0 := @this: android.hardware.camera2.params.HighSpeedVideoConfiguration;

        $r1 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: android.util.Size mSize>;

        return $r1;
    }

    public int getWidth()
    {
        android.hardware.camera2.params.HighSpeedVideoConfiguration r0;
        int $i0;

        r0 := @this: android.hardware.camera2.params.HighSpeedVideoConfiguration;

        $i0 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mWidth>;

        return $i0;
    }

    public int hashCode()
    {
        android.hardware.camera2.params.HighSpeedVideoConfiguration r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.hardware.camera2.params.HighSpeedVideoConfiguration;

        $r1 = newarray (int)[4];

        $i0 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mWidth>;

        $r1[0] = $i0;

        $i1 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mHeight>;

        $r1[1] = $i1;

        $i2 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMin>;

        $r1[2] = $i2;

        $i3 = r0.<android.hardware.camera2.params.HighSpeedVideoConfiguration: int mFpsMax>;

        $r1[3] = $i3;

        $i4 = staticinvoke <android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int[])>($r1);

        return $i4;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.params.HighSpeedVideoConfiguration: int HIGH_SPEED_MAX_MINIMAL_FPS> = 120;

        return;
    }
}
