public class android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator extends java.lang.Object implements java.util.Comparator
{

    public void <init>()
    {
        android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator r0;

        r0 := @this: android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(android.util.Size, android.util.Size)
    {
        android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator r0;
        android.util.Size r1, r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator;

        r1 := @parameter0: android.util.Size;

        r2 := @parameter1: android.util.Size;

        $i0 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i1 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i2 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        $i3 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        $i4 = staticinvoke <android.hardware.camera2.params.MandatoryStreamCombination$Builder: int access$1600(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $i4;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator r0;
        java.lang.Object r1, r2;
        android.util.Size $r3, $r4;
        int $i0;

        r0 := @this: android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.util.Size) r1;

        $r3 = (android.util.Size) r2;

        $i0 = virtualinvoke r0.<android.hardware.camera2.params.MandatoryStreamCombination$Builder$SizeComparator: int compare(android.util.Size,android.util.Size)>($r4, $r3);

        return $i0;
    }
}
