public final class android.hardware.camera2.params.RecommendedStreamConfigurationMap extends java.lang.Object
{
    public static final int MAX_USECASE_COUNT;
    private static final java.lang.String TAG;
    public static final int USECASE_LOW_LATENCY_SNAPSHOT;
    public static final int USECASE_PREVIEW;
    public static final int USECASE_RAW;
    public static final int USECASE_RECORD;
    public static final int USECASE_SNAPSHOT;
    public static final int USECASE_VENDOR_START;
    public static final int USECASE_VIDEO_SNAPSHOT;
    public static final int USECASE_ZSL;
    private android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap;
    private boolean mSupportsPrivate;
    private int mUsecase;

    public void <init>(android.hardware.camera2.params.StreamConfigurationMap, int, boolean)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        android.hardware.camera2.params.StreamConfigurationMap r1;
        int i0;
        boolean z0;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        r1 := @parameter0: android.hardware.camera2.params.StreamConfigurationMap;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap> = r1;

        r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: int mUsecase> = i0;

        r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: boolean mSupportsPrivate> = z0;

        return;
    }

    private java.util.Set getUnmodifiableIntegerSet(int[])
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        int[] r1;
        int i0, $i1, $i2, $i3, i4;
        android.util.ArraySet $r3;
        java.util.Set $r4;
        java.lang.Integer $r5;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        r1 := @parameter0: int[];

        if r1 == null goto label3;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label3;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        $i2 = lengthof r1;

        virtualinvoke $r3.<android.util.ArraySet: void ensureCapacity(int)>($i2);

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $i3 = r1[i4];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r3.<android.util.ArraySet: boolean add(java.lang.Object)>($r5);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        return $r4;

     label3:
        return null;
    }

    private java.util.Set getUnmodifiableRangeSet(android.util.Range[])
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        android.util.Range[] r1;
        int $i0;
        android.util.ArraySet $r3;
        java.util.List $r4;
        java.util.Set $r5;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        r1 := @parameter0: android.util.Range[];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label1;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        virtualinvoke $r3.<android.util.ArraySet: boolean addAll(java.util.Collection)>($r4);

        $r5 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        return $r5;

     label1:
        return null;
    }

    private java.util.Set getUnmodifiableSizeSet(android.util.Size[])
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        android.util.Size[] r1;
        int $i0;
        android.util.ArraySet $r3;
        java.util.List $r4;
        java.util.Set $r5;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        r1 := @parameter0: android.util.Size[];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label1;

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        virtualinvoke $r3.<android.util.ArraySet: boolean addAll(java.util.Collection)>($r4);

        $r5 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        return $r5;

     label1:
        return null;
    }

    public java.util.Set getHighResolutionOutputSizes(int)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        int i0;
        android.hardware.camera2.params.StreamConfigurationMap $r1;
        android.util.Size[] $r2;
        java.util.Set $r3;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighResolutionOutputSizes(int)>(i0);

        $r3 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableSizeSet(android.util.Size[])>($r2);

        return $r3;
    }

    public java.util.Set getHighSpeedVideoFpsRanges()
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        android.hardware.camera2.params.StreamConfigurationMap $r1;
        android.util.Range[] $r2;
        java.util.Set $r3;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        $r1 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRanges()>();

        $r3 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableRangeSet(android.util.Range[])>($r2);

        return $r3;
    }

    public java.util.Set getHighSpeedVideoFpsRangesFor(android.util.Size)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        android.util.Size r1;
        android.hardware.camera2.params.StreamConfigurationMap $r2;
        android.util.Range[] $r3;
        java.util.Set $r4;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        r1 := @parameter0: android.util.Size;

        $r2 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRangesFor(android.util.Size)>(r1);

        $r4 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableRangeSet(android.util.Range[])>($r3);

        return $r4;
    }

    public java.util.Set getHighSpeedVideoSizes()
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        android.hardware.camera2.params.StreamConfigurationMap $r1;
        android.util.Size[] $r2;
        java.util.Set $r3;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        $r1 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizes()>();

        $r3 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableSizeSet(android.util.Size[])>($r2);

        return $r3;
    }

    public java.util.Set getHighSpeedVideoSizesFor(android.util.Range)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        android.util.Range r1;
        android.hardware.camera2.params.StreamConfigurationMap $r2;
        android.util.Size[] $r3;
        java.util.Set $r4;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        r1 := @parameter0: android.util.Range;

        $r2 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizesFor(android.util.Range)>(r1);

        $r4 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableSizeSet(android.util.Size[])>($r3);

        return $r4;
    }

    public java.util.Set getInputFormats()
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        android.hardware.camera2.params.StreamConfigurationMap $r1;
        int[] $r2;
        java.util.Set $r3;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        $r1 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.params.StreamConfigurationMap: int[] getInputFormats()>();

        $r3 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableIntegerSet(int[])>($r2);

        return $r3;
    }

    public java.util.Set getInputSizes(int)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        int i0;
        android.hardware.camera2.params.StreamConfigurationMap $r1;
        android.util.Size[] $r2;
        java.util.Set $r3;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getInputSizes(int)>(i0);

        $r3 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableSizeSet(android.util.Size[])>($r2);

        return $r3;
    }

    public java.util.Set getOutputFormats()
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        android.hardware.camera2.params.StreamConfigurationMap $r1;
        int[] $r2;
        java.util.Set $r3;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        $r1 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.params.StreamConfigurationMap: int[] getOutputFormats()>();

        $r3 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableIntegerSet(int[])>($r2);

        return $r3;
    }

    public long getOutputMinFrameDuration(int, android.util.Size)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        int i0;
        android.util.Size r1;
        android.hardware.camera2.params.StreamConfigurationMap $r2;
        long $l1;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        i0 := @parameter0: int;

        r1 := @parameter1: android.util.Size;

        $r2 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $l1 = virtualinvoke $r2.<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(int,android.util.Size)>(i0, r1);

        return $l1;
    }

    public long getOutputMinFrameDuration(java.lang.Class, android.util.Size)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        java.lang.Class r1;
        android.util.Size r2;
        boolean $z0;
        android.hardware.camera2.params.StreamConfigurationMap $r3;
        long $l0;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: android.util.Size;

        $z0 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: boolean mSupportsPrivate>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $l0 = virtualinvoke $r3.<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(java.lang.Class,android.util.Size)>(r1, r2);

        return $l0;

     label1:
        return 0L;
    }

    public java.util.Set getOutputSizes(int)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        int i0;
        android.hardware.camera2.params.StreamConfigurationMap $r1;
        android.util.Size[] $r2;
        java.util.Set $r3;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(int)>(i0);

        $r3 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableSizeSet(android.util.Size[])>($r2);

        return $r3;
    }

    public java.util.Set getOutputSizes(java.lang.Class)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        java.lang.Class r1;
        boolean $z0;
        android.hardware.camera2.params.StreamConfigurationMap $r2;
        android.util.Size[] $r3;
        java.util.Set $r4;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        r1 := @parameter0: java.lang.Class;

        $z0 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: boolean mSupportsPrivate>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(java.lang.Class)>(r1);

        $r4 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableSizeSet(android.util.Size[])>($r3);

        return $r4;

     label1:
        return null;
    }

    public long getOutputStallDuration(int, android.util.Size)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        int i0;
        android.util.Size r1;
        android.hardware.camera2.params.StreamConfigurationMap $r2;
        long $l1;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        i0 := @parameter0: int;

        r1 := @parameter1: android.util.Size;

        $r2 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $l1 = virtualinvoke $r2.<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(int,android.util.Size)>(i0, r1);

        return $l1;
    }

    public long getOutputStallDuration(java.lang.Class, android.util.Size)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        java.lang.Class r1;
        android.util.Size r2;
        boolean $z0;
        android.hardware.camera2.params.StreamConfigurationMap $r3;
        long $l0;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: android.util.Size;

        $z0 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: boolean mSupportsPrivate>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $l0 = virtualinvoke $r3.<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(java.lang.Class,android.util.Size)>(r1, r2);

        return $l0;

     label1:
        return 0L;
    }

    public int getRecommendedUseCase()
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        int $i0;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        $i0 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: int mUsecase>;

        return $i0;
    }

    public java.util.Set getValidOutputFormatsForInput(int)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        int i0;
        android.hardware.camera2.params.StreamConfigurationMap $r1;
        int[] $r2;
        java.util.Set $r3;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $r2 = virtualinvoke $r1.<android.hardware.camera2.params.StreamConfigurationMap: int[] getValidOutputFormatsForInput(int)>(i0);

        $r3 = specialinvoke r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.util.Set getUnmodifiableIntegerSet(int[])>($r2);

        return $r3;
    }

    public boolean isOutputSupportedFor(int)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        int i0;
        android.hardware.camera2.params.StreamConfigurationMap $r1;
        boolean $z0;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $z0 = virtualinvoke $r1.<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(int)>(i0);

        return $z0;
    }

    public boolean isOutputSupportedFor(android.view.Surface)
    {
        android.hardware.camera2.params.RecommendedStreamConfigurationMap r0;
        android.view.Surface r1;
        android.hardware.camera2.params.StreamConfigurationMap $r2;
        boolean $z0;

        r0 := @this: android.hardware.camera2.params.RecommendedStreamConfigurationMap;

        r1 := @parameter0: android.view.Surface;

        $r2 = r0.<android.hardware.camera2.params.RecommendedStreamConfigurationMap: android.hardware.camera2.params.StreamConfigurationMap mRecommendedMap>;

        $z0 = virtualinvoke $r2.<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(android.view.Surface)>(r1);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.params.RecommendedStreamConfigurationMap: int USECASE_ZSL> = 4;

        <android.hardware.camera2.params.RecommendedStreamConfigurationMap: int USECASE_VIDEO_SNAPSHOT> = 2;

        <android.hardware.camera2.params.RecommendedStreamConfigurationMap: int USECASE_VENDOR_START> = 24;

        <android.hardware.camera2.params.RecommendedStreamConfigurationMap: int USECASE_SNAPSHOT> = 3;

        <android.hardware.camera2.params.RecommendedStreamConfigurationMap: int USECASE_RECORD> = 1;

        <android.hardware.camera2.params.RecommendedStreamConfigurationMap: int USECASE_RAW> = 5;

        <android.hardware.camera2.params.RecommendedStreamConfigurationMap: int USECASE_PREVIEW> = 0;

        <android.hardware.camera2.params.RecommendedStreamConfigurationMap: int USECASE_LOW_LATENCY_SNAPSHOT> = 6;

        <android.hardware.camera2.params.RecommendedStreamConfigurationMap: java.lang.String TAG> = "RecommendedStreamConfigurationMap";

        <android.hardware.camera2.params.RecommendedStreamConfigurationMap: int MAX_USECASE_COUNT> = 32;

        return;
    }
}
