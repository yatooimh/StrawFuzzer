public final class android.hardware.camera2.params.ReprocessFormatsMap extends java.lang.Object
{
    private final int[] mEntry;
    private final int mInputCount;

    public void <init>(int[])
    {
        android.hardware.camera2.params.ReprocessFormatsMap r0;
        int[] r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i9, i10, i11, i12, i13, i14;
        java.lang.IllegalArgumentException $r3, $r7;
        java.lang.Object[] $r4, $r8;
        java.lang.Integer $r5, $r9, $r10, $r11;
        java.lang.String $r6, $r12;

        r0 := @this: android.hardware.camera2.params.ReprocessFormatsMap;

        r1 := @parameter0: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "entry must not be null");

        i9 = 0;

        i10 = lengthof r1;

        i11 = 0;

     label1:
        $i4 = lengthof r1;

        if i11 >= $i4 goto label7;

        $i5 = r1[i11];

        i0 = staticinvoke <android.hardware.camera2.params.StreamConfigurationMap: int checkArgumentFormatInternal(int)>($i5);

        i12 = i10 + -1;

        i13 = i11 + 1;

        if i12 < 1 goto label6;

        i1 = r1[i13];

        i2 = i12 - 1;

        i3 = i13 + 1;

        i14 = 0;

     label2:
        if i14 >= i1 goto label3;

        $i6 = i3 + i14;

        $i7 = r1[$i6];

        staticinvoke <android.hardware.camera2.params.StreamConfigurationMap: int checkArgumentFormatInternal(int)>($i7);

        i14 = i14 + 1;

        goto label2;

     label3:
        i10 = i2;

        i11 = i3;

        if i1 <= 0 goto label5;

        if i2 < i1 goto label4;

        i11 = i3 + i1;

        i10 = i2 - i1;

        goto label5;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = newarray (java.lang.Object)[3];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r8[1] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8[2] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Input %x had too few output formats listed (actual: %d, expected: %d)", $r8);

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label5:
        i9 = i9 + 1;

        goto label1;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Input %x had no output format length listed", $r4);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r3;

     label7:
        r0.<android.hardware.camera2.params.ReprocessFormatsMap: int[] mEntry> = r1;

        r0.<android.hardware.camera2.params.ReprocessFormatsMap: int mInputCount> = i9;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.camera2.params.ReprocessFormatsMap r0, r4;
        boolean $z0, $z1;
        int[] $r1, $r2;
        java.lang.Object r3;

        r0 := @this: android.hardware.camera2.params.ReprocessFormatsMap;

        r3 := @parameter0: java.lang.Object;

        if r3 != null goto label1;

        return 0;

     label1:
        if r0 != r3 goto label2;

        return 1;

     label2:
        $z0 = r3 instanceof android.hardware.camera2.params.ReprocessFormatsMap;

        if $z0 == 0 goto label3;

        r4 = (android.hardware.camera2.params.ReprocessFormatsMap) r3;

        $r2 = r0.<android.hardware.camera2.params.ReprocessFormatsMap: int[] mEntry>;

        $r1 = r4.<android.hardware.camera2.params.ReprocessFormatsMap: int[] mEntry>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r2, $r1);

        return $z1;

     label3:
        return 0;
    }

    public int[] getInputs()
    {
        android.hardware.camera2.params.ReprocessFormatsMap r0;
        int[] r1, r2, $r3, $r4;
        int i0, i1, i2, i3, $i4, $i5, i6, i7, i8, i9, i10;
        java.lang.AssertionError $r5, $r9;
        java.lang.Object[] $r6, $r10;
        java.lang.Integer $r7, $r11, $r12, $r13;
        java.lang.String $r8, $r14;

        r0 := @this: android.hardware.camera2.params.ReprocessFormatsMap;

        $i4 = r0.<android.hardware.camera2.params.ReprocessFormatsMap: int mInputCount>;

        r1 = newarray (int)[$i4];

        $r3 = r0.<android.hardware.camera2.params.ReprocessFormatsMap: int[] mEntry>;

        i6 = lengthof $r3;

        i7 = 0;

        i8 = 0;

     label1:
        r2 = r0.<android.hardware.camera2.params.ReprocessFormatsMap: int[] mEntry>;

        $i5 = lengthof r2;

        if i7 >= $i5 goto label5;

        i0 = r2[i7];

        i9 = i6 + -1;

        i10 = i7 + 1;

        if i9 < 1 goto label4;

        i1 = r2[i10];

        i2 = i9 - 1;

        i3 = i10 + 1;

        i6 = i2;

        i7 = i3;

        if i1 <= 0 goto label3;

        if i2 < i1 goto label2;

        i7 = i3 + i1;

        i6 = i2 - i1;

        goto label3;

     label2:
        $r9 = new java.lang.AssertionError;

        $r10 = newarray (java.lang.Object)[3];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[0] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r10[1] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10[2] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Input %x had too few output formats listed (actual: %d, expected: %d)", $r10);

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r9;

     label3:
        r1[i8] = i0;

        i8 = i8 + 1;

        goto label1;

     label4:
        $r5 = new java.lang.AssertionError;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Input %x had no output format length listed", $r6);

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r5;

     label5:
        $r4 = staticinvoke <android.hardware.camera2.params.StreamConfigurationMap: int[] imageFormatToPublic(int[])>(r1);

        return $r4;
    }

    public int[] getOutputs(int)
    {
        android.hardware.camera2.params.ReprocessFormatsMap r0;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9, i10, i11, i12;
        int[] $r1, $r10, $r11, r18, r19;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3, $r7, $r13;
        java.lang.Integer $r4, $r8, $r14, $r15, $r16;
        java.lang.String $r5, $r9, $r17;
        java.lang.AssertionError $r6, $r12;

        r0 := @this: android.hardware.camera2.params.ReprocessFormatsMap;

        i4 := @parameter0: int;

        $r1 = r0.<android.hardware.camera2.params.ReprocessFormatsMap: int[] mEntry>;

        i5 = lengthof $r1;

        i6 = 0;

     label1:
        r18 = r0.<android.hardware.camera2.params.ReprocessFormatsMap: int[] mEntry>;

        $i1 = lengthof r18;

        if i6 >= $i1 goto label8;

        i0 = r18[i6];

        i7 = i5 - 1;

        i8 = i6 + 1;

        if i7 < 1 goto label7;

        i9 = r18[i8];

        i10 = i7 + -1;

        i11 = i8 + 1;

        if i9 <= 0 goto label3;

        if i10 < i9 goto label2;

        goto label3;

     label2:
        $r12 = new java.lang.AssertionError;

        $r13 = newarray (java.lang.Object)[3];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $r13[1] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        $r13[2] = $r16;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Input %x had too few output formats listed (actual: %d, expected: %d)", $r13);

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>($r17);

        throw $r12;

     label3:
        if i0 != i4 goto label6;

        r19 = newarray (int)[i9];

        i12 = 0;

     label4:
        if i12 >= i9 goto label5;

        $r11 = r0.<android.hardware.camera2.params.ReprocessFormatsMap: int[] mEntry>;

        $i2 = i11 + i12;

        $i3 = $r11[$i2];

        r19[i12] = $i3;

        i12 = i12 + 1;

        goto label4;

     label5:
        $r10 = staticinvoke <android.hardware.camera2.params.StreamConfigurationMap: int[] imageFormatToPublic(int[])>(r19);

        return $r10;

     label6:
        i6 = i11 + i9;

        i5 = i10 - i9;

        goto label1;

     label7:
        $r6 = new java.lang.AssertionError;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Input %x had no output format length listed", $r7);

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r6;

     label8:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Input format %x was not one in #getInputs", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;
    }

    public int hashCode()
    {
        android.hardware.camera2.params.ReprocessFormatsMap r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.hardware.camera2.params.ReprocessFormatsMap;

        $r1 = r0.<android.hardware.camera2.params.ReprocessFormatsMap: int[] mEntry>;

        $i0 = staticinvoke <android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int[])>($r1);

        return $i0;
    }
}
