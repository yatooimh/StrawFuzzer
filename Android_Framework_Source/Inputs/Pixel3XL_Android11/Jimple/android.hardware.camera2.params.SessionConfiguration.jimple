public final class android.hardware.camera2.params.SessionConfiguration extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int SESSION_HIGH_SPEED;
    public static final int SESSION_REGULAR;
    public static final int SESSION_VENDOR_START;
    private static final java.lang.String TAG;
    private java.util.concurrent.Executor mExecutor;
    private android.hardware.camera2.params.InputConfiguration mInputConfig;
    private java.util.List mOutputConfigurations;
    private android.hardware.camera2.CaptureRequest mSessionParameters;
    private int mSessionType;
    private android.hardware.camera2.CameraCaptureSession$StateCallback mStateCallback;

    static void <clinit>()
    {
        android.hardware.camera2.params.SessionConfiguration$1 $r0;

        <android.hardware.camera2.params.SessionConfiguration: java.lang.String TAG> = "SessionConfiguration";

        <android.hardware.camera2.params.SessionConfiguration: int SESSION_VENDOR_START> = 32768;

        <android.hardware.camera2.params.SessionConfiguration: int SESSION_REGULAR> = 0;

        <android.hardware.camera2.params.SessionConfiguration: int SESSION_HIGH_SPEED> = 1;

        $r0 = new android.hardware.camera2.params.SessionConfiguration$1;

        specialinvoke $r0.<android.hardware.camera2.params.SessionConfiguration$1: void <init>()>();

        <android.hardware.camera2.params.SessionConfiguration: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(int, java.util.List, java.util.concurrent.Executor, android.hardware.camera2.CameraCaptureSession$StateCallback)
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        int i0;
        java.util.List r1, $r5;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraCaptureSession$StateCallback r3;
        java.util.ArrayList $r4;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: android.hardware.camera2.CameraCaptureSession$StateCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.params.SessionConfiguration: java.util.concurrent.Executor mExecutor> = null;

        r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig> = null;

        r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.CaptureRequest mSessionParameters> = null;

        r0.<android.hardware.camera2.params.SessionConfiguration: int mSessionType> = i0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        r0.<android.hardware.camera2.params.SessionConfiguration: java.util.List mOutputConfigurations> = $r5;

        r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.CameraCaptureSession$StateCallback mStateCallback> = r3;

        r0.<android.hardware.camera2.params.SessionConfiguration: java.util.concurrent.Executor mExecutor> = r2;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3;
        java.util.ArrayList $r3;
        android.os.Parcelable$Creator $r4;
        android.hardware.camera2.params.InputConfiguration $r5;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.params.SessionConfiguration: java.util.concurrent.Executor mExecutor> = null;

        r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig> = null;

        r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.CaptureRequest mSessionParameters> = null;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = <android.hardware.camera2.params.OutputConfiguration: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke r1.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>($r3, $r4);

        if i1 <= 0 goto label1;

        if i2 <= 0 goto label1;

        if i3 == -1 goto label1;

        $r5 = new android.hardware.camera2.params.InputConfiguration;

        specialinvoke $r5.<android.hardware.camera2.params.InputConfiguration: void <init>(int,int,int)>(i1, i2, i3);

        r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig> = $r5;

     label1:
        r0.<android.hardware.camera2.params.SessionConfiguration: int mSessionType> = i0;

        r0.<android.hardware.camera2.params.SessionConfiguration: java.util.List mOutputConfigurations> = $r3;

        return;
    }

    void <init>(android.os.Parcel, android.hardware.camera2.params.SessionConfiguration$1)
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        android.os.Parcel r1;
        android.hardware.camera2.params.SessionConfiguration$1 r2;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.hardware.camera2.params.SessionConfiguration$1;

        specialinvoke r0.<android.hardware.camera2.params.SessionConfiguration: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public int describeContents()
    {
        android.hardware.camera2.params.SessionConfiguration r0;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.camera2.params.SessionConfiguration r0, r12;
        boolean $z0, $z1;
        android.hardware.camera2.params.InputConfiguration $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.util.List $r3, $r4, $r5, $r6, $r8;
        java.lang.Object $r7, $r10, r11;
        android.hardware.camera2.params.OutputConfiguration $r9;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        r11 := @parameter0: java.lang.Object;

        if r11 != null goto label1;

        return 0;

     label1:
        if r0 != r11 goto label2;

        return 1;

     label2:
        $z0 = r11 instanceof android.hardware.camera2.params.SessionConfiguration;

        if $z0 == 0 goto label8;

        r12 = (android.hardware.camera2.params.SessionConfiguration) r11;

        $r2 = r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig>;

        $r1 = r12.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig>;

        if $r2 != $r1 goto label7;

        $i1 = r0.<android.hardware.camera2.params.SessionConfiguration: int mSessionType>;

        $i0 = r12.<android.hardware.camera2.params.SessionConfiguration: int mSessionType>;

        if $i1 != $i0 goto label7;

        $r3 = r0.<android.hardware.camera2.params.SessionConfiguration: java.util.List mOutputConfigurations>;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = r12.<android.hardware.camera2.params.SessionConfiguration: java.util.List mOutputConfigurations>;

        $i3 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i2 == $i3 goto label3;

        goto label7;

     label3:
        i5 = 0;

     label4:
        $r5 = r0.<android.hardware.camera2.params.SessionConfiguration: java.util.List mOutputConfigurations>;

        $i4 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i5 >= $i4 goto label6;

        $r6 = r0.<android.hardware.camera2.params.SessionConfiguration: java.util.List mOutputConfigurations>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i5);

        $r9 = (android.hardware.camera2.params.OutputConfiguration) $r7;

        $r8 = r12.<android.hardware.camera2.params.SessionConfiguration: java.util.List mOutputConfigurations>;

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i5);

        $z1 = virtualinvoke $r9.<android.hardware.camera2.params.OutputConfiguration: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        i5 = i5 + 1;

        goto label4;

     label6:
        return 1;

     label7:
        return 0;

     label8:
        return 0;
    }

    public java.util.concurrent.Executor getExecutor()
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        $r1 = r0.<android.hardware.camera2.params.SessionConfiguration: java.util.concurrent.Executor mExecutor>;

        return $r1;
    }

    public android.hardware.camera2.params.InputConfiguration getInputConfiguration()
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        android.hardware.camera2.params.InputConfiguration $r1;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        $r1 = r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig>;

        return $r1;
    }

    public java.util.List getOutputConfigurations()
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        java.util.List $r1;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        $r1 = r0.<android.hardware.camera2.params.SessionConfiguration: java.util.List mOutputConfigurations>;

        return $r1;
    }

    public android.hardware.camera2.CaptureRequest getSessionParameters()
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        android.hardware.camera2.CaptureRequest $r1;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        $r1 = r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.CaptureRequest mSessionParameters>;

        return $r1;
    }

    public int getSessionType()
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        int $i0;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        $i0 = r0.<android.hardware.camera2.params.SessionConfiguration: int mSessionType>;

        return $i0;
    }

    public android.hardware.camera2.CameraCaptureSession$StateCallback getStateCallback()
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r1;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        $r1 = r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.CameraCaptureSession$StateCallback mStateCallback>;

        return $r1;
    }

    public int hashCode()
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        int[] $r1;
        java.util.List $r2;
        int $i0, $i1, $i2, $i3;
        android.hardware.camera2.params.InputConfiguration $r3;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        $r1 = newarray (int)[3];

        $r2 = r0.<android.hardware.camera2.params.SessionConfiguration: java.util.List mOutputConfigurations>;

        $i0 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        $r1[0] = $i0;

        $r3 = r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig>;

        $i1 = virtualinvoke $r3.<android.hardware.camera2.params.InputConfiguration: int hashCode()>();

        $r1[1] = $i1;

        $i2 = r0.<android.hardware.camera2.params.SessionConfiguration: int mSessionType>;

        $r1[2] = $i2;

        $i3 = staticinvoke <android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int[])>($r1);

        return $i3;
    }

    public void setInputConfiguration(android.hardware.camera2.params.InputConfiguration)
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        android.hardware.camera2.params.InputConfiguration r1;
        int $i0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        r1 := @parameter0: android.hardware.camera2.params.InputConfiguration;

        $i0 = r0.<android.hardware.camera2.params.SessionConfiguration: int mSessionType>;

        if $i0 == 1 goto label1;

        r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig> = r1;

        return;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Method not supported for high speed session types");

        throw $r2;
    }

    public void setSessionParameters(android.hardware.camera2.CaptureRequest)
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        android.hardware.camera2.CaptureRequest r1;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.CaptureRequest mSessionParameters> = r1;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.hardware.camera2.params.SessionConfiguration r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4;
        android.hardware.camera2.params.InputConfiguration r2, $r5, $r6;
        java.lang.IllegalArgumentException $r3;
        java.util.List $r4;

        r0 := @this: android.hardware.camera2.params.SessionConfiguration;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        if r1 == null goto label3;

        $i1 = r0.<android.hardware.camera2.params.SessionConfiguration: int mSessionType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        r2 = r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig>;

        if r2 == null goto label1;

        $i2 = virtualinvoke r2.<android.hardware.camera2.params.InputConfiguration: int getWidth()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r5 = r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig>;

        $i3 = virtualinvoke $r5.<android.hardware.camera2.params.InputConfiguration: int getHeight()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r6 = r0.<android.hardware.camera2.params.SessionConfiguration: android.hardware.camera2.params.InputConfiguration mInputConfig>;

        $i4 = virtualinvoke $r6.<android.hardware.camera2.params.InputConfiguration: int getFormat()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(-1);

     label2:
        $r4 = r0.<android.hardware.camera2.params.SessionConfiguration: java.util.List mOutputConfigurations>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r4);

        return;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("dest must not be null");

        throw $r3;
    }
}
