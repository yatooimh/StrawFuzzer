public class android.hardware.camera2.utils.ConcurrentCameraIdCombination extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private java.util.Set mConcurrentCameraIds;

    static void <clinit>()
    {
        android.hardware.camera2.utils.ConcurrentCameraIdCombination$1 $r0;

        $r0 = new android.hardware.camera2.utils.ConcurrentCameraIdCombination$1;

        specialinvoke $r0.<android.hardware.camera2.utils.ConcurrentCameraIdCombination$1: void <init>()>();

        <android.hardware.camera2.utils.ConcurrentCameraIdCombination: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.hardware.camera2.utils.ConcurrentCameraIdCombination r0;
        android.os.Parcel r1;
        java.util.HashSet $r2;

        r0 := @this: android.hardware.camera2.utils.ConcurrentCameraIdCombination;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<android.hardware.camera2.utils.ConcurrentCameraIdCombination: java.util.Set mConcurrentCameraIds> = $r2;

        virtualinvoke r0.<android.hardware.camera2.utils.ConcurrentCameraIdCombination: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    void <init>(android.os.Parcel, android.hardware.camera2.utils.ConcurrentCameraIdCombination$1)
    {
        android.hardware.camera2.utils.ConcurrentCameraIdCombination r0;
        android.os.Parcel r1;
        android.hardware.camera2.utils.ConcurrentCameraIdCombination$1 r2;

        r0 := @this: android.hardware.camera2.utils.ConcurrentCameraIdCombination;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.hardware.camera2.utils.ConcurrentCameraIdCombination$1;

        specialinvoke r0.<android.hardware.camera2.utils.ConcurrentCameraIdCombination: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public int describeContents()
    {
        android.hardware.camera2.utils.ConcurrentCameraIdCombination r0;

        r0 := @this: android.hardware.camera2.utils.ConcurrentCameraIdCombination;

        return 0;
    }

    public java.util.Set getConcurrentCameraIdCombination()
    {
        android.hardware.camera2.utils.ConcurrentCameraIdCombination r0;
        java.util.Set $r1;

        r0 := @this: android.hardware.camera2.utils.ConcurrentCameraIdCombination;

        $r1 = r0.<android.hardware.camera2.utils.ConcurrentCameraIdCombination: java.util.Set mConcurrentCameraIds>;

        return $r1;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.hardware.camera2.utils.ConcurrentCameraIdCombination r0;
        int i0, i1;
        java.lang.String r1, $r8;
        java.util.Set $r2, $r10;
        java.lang.StringBuilder $r3;
        java.lang.RuntimeException $r7, $r9;
        android.os.Parcel r11;

        r0 := @this: android.hardware.camera2.utils.ConcurrentCameraIdCombination;

        r11 := @parameter0: android.os.Parcel;

        $r2 = r0.<android.hardware.camera2.utils.ConcurrentCameraIdCombination: java.util.Set mConcurrentCameraIds>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        i0 = virtualinvoke r11.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = virtualinvoke r11.<android.os.Parcel: java.lang.String readString()>();

        if r1 == null goto label2;

        $r10 = r0.<android.hardware.camera2.utils.ConcurrentCameraIdCombination: java.util.Set mConcurrentCameraIds>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed to read camera id from Parcel");

        throw $r9;

     label3:
        return;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cameraCombinationSize ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should not be negative");

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.hardware.camera2.utils.ConcurrentCameraIdCombination r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.util.Iterator r2;
        java.util.Set $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: android.hardware.camera2.utils.ConcurrentCameraIdCombination;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r3 = r0.<android.hardware.camera2.utils.ConcurrentCameraIdCombination: java.util.Set mConcurrentCameraIds>;

        $i1 = interfaceinvoke $r3.<java.util.Set: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r4 = r0.<android.hardware.camera2.utils.ConcurrentCameraIdCombination: java.util.Set mConcurrentCameraIds>;

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        goto label1;

     label2:
        return;
    }
}
