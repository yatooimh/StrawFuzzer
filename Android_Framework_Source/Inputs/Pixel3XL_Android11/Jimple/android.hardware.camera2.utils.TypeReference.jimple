public abstract class android.hardware.camera2.utils.TypeReference extends java.lang.Object
{
    private final int mHash;
    private final java.lang.reflect.Type mType;

    protected void <init>()
    {
        android.hardware.camera2.utils.TypeReference r0;
        java.lang.reflect.Type r1, $r3, $r7;
        java.lang.Class $r2;
        java.lang.reflect.ParameterizedType $r4;
        java.lang.reflect.Type[] $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        int $i0;

        r0 := @this: android.hardware.camera2.utils.TypeReference;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        $r4 = (java.lang.reflect.ParameterizedType) $r3;

        $r5 = interfaceinvoke $r4.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        r1 = $r5[0];

        r0.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type mType> = r1;

        $z0 = staticinvoke <android.hardware.camera2.utils.TypeReference: boolean containsTypeVariable(java.lang.reflect.Type)>(r1);

        if $z0 != 0 goto label1;

        $r7 = r0.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type mType>;

        $i0 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

        r0.<android.hardware.camera2.utils.TypeReference: int mHash> = $i0;

        return;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Including a type variable in a type reference is not allowed");

        throw $r6;
    }

    private void <init>(java.lang.reflect.Type)
    {
        android.hardware.camera2.utils.TypeReference r0;
        java.lang.reflect.Type r1, $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        int $i0;

        r0 := @this: android.hardware.camera2.utils.TypeReference;

        r1 := @parameter0: java.lang.reflect.Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type mType> = r1;

        $z0 = staticinvoke <android.hardware.camera2.utils.TypeReference: boolean containsTypeVariable(java.lang.reflect.Type)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type mType>;

        $i0 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        r0.<android.hardware.camera2.utils.TypeReference: int mHash> = $i0;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Including a type variable in a type reference is not allowed");

        throw $r2;
    }

    void <init>(java.lang.reflect.Type, android.hardware.camera2.utils.TypeReference$1)
    {
        android.hardware.camera2.utils.TypeReference r0;
        java.lang.reflect.Type r1;
        android.hardware.camera2.utils.TypeReference$1 r2;

        r0 := @this: android.hardware.camera2.utils.TypeReference;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: android.hardware.camera2.utils.TypeReference$1;

        specialinvoke r0.<android.hardware.camera2.utils.TypeReference: void <init>(java.lang.reflect.Type)>(r1);

        return;
    }

    public static boolean containsTypeVariable(java.lang.reflect.Type)
    {
        int i0, $i1, i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        java.lang.reflect.Type[] $r0, $r1, r8;
        java.lang.reflect.ParameterizedType $r2;
        java.lang.reflect.Type $r3, r6;
        java.lang.reflect.TypeVariable[] $r4;
        java.lang.Class $r5, r7;
        java.lang.reflect.WildcardType r9;

        r6 := @parameter0: java.lang.reflect.Type;

        z8 = 0;

        if r6 != null goto label01;

        return 0;

     label01:
        $z0 = r6 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label02;

        return 1;

     label02:
        $z1 = r6 instanceof java.lang.Class;

        if $z1 == 0 goto label04;

        r7 = (java.lang.Class) r6;

        $r4 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $i1 = lengthof $r4;

        if $i1 == 0 goto label03;

        return 1;

     label03:
        $r5 = virtualinvoke r7.<java.lang.Class: java.lang.Class getDeclaringClass()>();

        $z7 = staticinvoke <android.hardware.camera2.utils.TypeReference: boolean containsTypeVariable(java.lang.reflect.Type)>($r5);

        return $z7;

     label04:
        $z2 = r6 instanceof java.lang.reflect.ParameterizedType;

        if $z2 == 0 goto label08;

        $r2 = (java.lang.reflect.ParameterizedType) r6;

        r8 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        i0 = lengthof r8;

        i2 = 0;

     label05:
        if i2 >= i0 goto label07;

        $r3 = r8[i2];

        $z6 = staticinvoke <android.hardware.camera2.utils.TypeReference: boolean containsTypeVariable(java.lang.reflect.Type)>($r3);

        if $z6 == 0 goto label06;

        return 1;

     label06:
        i2 = i2 + 1;

        goto label05;

     label07:
        return 0;

     label08:
        $z3 = r6 instanceof java.lang.reflect.WildcardType;

        if $z3 == 0 goto label11;

        r9 = (java.lang.reflect.WildcardType) r6;

        $r0 = interfaceinvoke r9.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        $z4 = staticinvoke <android.hardware.camera2.utils.TypeReference: boolean containsTypeVariable(java.lang.reflect.Type[])>($r0);

        if $z4 != 0 goto label09;

        $r1 = interfaceinvoke r9.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $z5 = staticinvoke <android.hardware.camera2.utils.TypeReference: boolean containsTypeVariable(java.lang.reflect.Type[])>($r1);

        if $z5 == 0 goto label10;

     label09:
        z8 = 1;

     label10:
        return z8;

     label11:
        return 0;
    }

    private static boolean containsTypeVariable(java.lang.reflect.Type[])
    {
        java.lang.reflect.Type[] r0;
        int i0, i1;
        java.lang.reflect.Type $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.reflect.Type[];

        if r0 != null goto label1;

        return 0;

     label1:
        i0 = lengthof r0;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r1 = r0[i1];

        $z0 = staticinvoke <android.hardware.camera2.utils.TypeReference: boolean containsTypeVariable(java.lang.reflect.Type)>($r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static android.hardware.camera2.utils.TypeReference createSpecializedTypeReference(java.lang.Class)
    {
        java.lang.Class r0;
        android.hardware.camera2.utils.TypeReference$SpecializedTypeReference $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new android.hardware.camera2.utils.TypeReference$SpecializedTypeReference;

        specialinvoke $r1.<android.hardware.camera2.utils.TypeReference$SpecializedTypeReference: void <init>(java.lang.Class)>(r0);

        return $r1;
    }

    public static android.hardware.camera2.utils.TypeReference createSpecializedTypeReference(java.lang.reflect.Type)
    {
        java.lang.reflect.Type r0;
        android.hardware.camera2.utils.TypeReference$SpecializedBaseTypeReference $r1;

        r0 := @parameter0: java.lang.reflect.Type;

        $r1 = new android.hardware.camera2.utils.TypeReference$SpecializedBaseTypeReference;

        specialinvoke $r1.<android.hardware.camera2.utils.TypeReference$SpecializedBaseTypeReference: void <init>(java.lang.reflect.Type)>(r0);

        return $r1;
    }

    private static final java.lang.Class getArrayClass(java.lang.Class)
    {
        java.lang.Class r0, $r2;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, 0);

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        return $r2;
    }

    private static java.lang.reflect.Type getComponentType(java.lang.reflect.Type)
    {
        java.lang.reflect.Type r0, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.UnsupportedOperationException $r3;
        java.lang.StringBuilder $r4;
        java.lang.AssertionError $r7, $r9;
        java.lang.String $r8;
        java.lang.reflect.GenericArrayType $r10;
        java.lang.Class $r12, $r13;

        r0 := @parameter0: java.lang.reflect.Type;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "type must not be null");

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r12 = (java.lang.Class) r0;

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.Class getComponentType()>();

        return $r13;

     label1:
        $z1 = r0 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label2;

        return null;

     label2:
        $z2 = r0 instanceof java.lang.reflect.GenericArrayType;

        if $z2 == 0 goto label3;

        $r10 = (java.lang.reflect.GenericArrayType) r0;

        $r11 = interfaceinvoke $r10.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        return $r11;

     label3:
        $z3 = r0 instanceof java.lang.reflect.WildcardType;

        if $z3 != 0 goto label5;

        $z4 = r0 instanceof java.lang.reflect.TypeVariable;

        if $z4 == 0 goto label4;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>("Type variables are not allowed in type references");

        throw $r9;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled branch to get component type for type ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = new java.lang.AssertionError;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r7;

     label5:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("TODO: support wild card components");

        throw $r3;
    }

    private static final java.lang.Class getRawType(java.lang.reflect.Type)
    {
        java.lang.reflect.Type r0, $r13, $r17;
        java.lang.NullPointerException $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r3;
        java.lang.AssertionError $r6, $r8;
        java.lang.String $r7;
        java.lang.reflect.WildcardType $r9;
        java.lang.reflect.Type[] $r10;
        java.lang.Class $r11, $r14, $r15, $r18, $r19;
        java.lang.reflect.GenericArrayType $r12;
        java.lang.reflect.ParameterizedType $r16;

        r0 := @parameter0: java.lang.reflect.Type;

        if r0 == null goto label6;

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r19 = (java.lang.Class) r0;

        return $r19;

     label1:
        $z1 = r0 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label2;

        $r16 = (java.lang.reflect.ParameterizedType) r0;

        $r17 = interfaceinvoke $r16.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r18 = (java.lang.Class) $r17;

        return $r18;

     label2:
        $z2 = r0 instanceof java.lang.reflect.GenericArrayType;

        if $z2 == 0 goto label3;

        $r12 = (java.lang.reflect.GenericArrayType) r0;

        $r13 = interfaceinvoke $r12.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r14 = staticinvoke <android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType(java.lang.reflect.Type)>($r13);

        $r15 = staticinvoke <android.hardware.camera2.utils.TypeReference: java.lang.Class getArrayClass(java.lang.Class)>($r14);

        return $r15;

     label3:
        $z3 = r0 instanceof java.lang.reflect.WildcardType;

        if $z3 == 0 goto label4;

        $r9 = (java.lang.reflect.WildcardType) r0;

        $r10 = interfaceinvoke $r9.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r11 = staticinvoke <android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType(java.lang.reflect.Type[])>($r10);

        return $r11;

     label4:
        $z4 = r0 instanceof java.lang.reflect.TypeVariable;

        if $z4 == 0 goto label5;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("Type variables are not allowed in type references");

        throw $r8;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled branch to get raw type for type ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = new java.lang.AssertionError;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r7);

        throw $r6;

     label6:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("type must not be null");

        throw $r2;
    }

    private static final java.lang.Class getRawType(java.lang.reflect.Type[])
    {
        java.lang.reflect.Type[] r0;
        int i0, i1;
        java.lang.Class r1;
        java.lang.reflect.Type $r2;

        r0 := @parameter0: java.lang.reflect.Type[];

        if r0 != null goto label1;

        return null;

     label1:
        i0 = lengthof r0;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r2 = r0[i1];

        r1 = staticinvoke <android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType(java.lang.reflect.Type)>($r2);

        if r1 == null goto label3;

        return r1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    private static void toString(java.lang.reflect.Type, java.lang.StringBuilder)
    {
        java.lang.StringBuilder r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r1, $r8, $r11, $r15;
        java.lang.reflect.GenericArrayType $r3;
        java.lang.reflect.Type $r4, $r6, r17;
        java.lang.Class $r7, r18;
        java.lang.reflect.Type[] $r10;
        java.lang.reflect.TypeVariable[] $r13;
        java.lang.reflect.TypeVariable $r14;
        java.lang.reflect.ParameterizedType r19;

        r17 := @parameter0: java.lang.reflect.Type;

        r0 := @parameter1: java.lang.StringBuilder;

        if r17 != null goto label1;

        return;

     label1:
        $z0 = r17 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label2;

        $r14 = (java.lang.reflect.TypeVariable) r17;

        $r15 = interfaceinvoke $r14.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        goto label6;

     label2:
        $z1 = r17 instanceof java.lang.Class;

        if $z1 == 0 goto label3;

        r18 = (java.lang.Class) r17;

        $r11 = virtualinvoke r18.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r18.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        staticinvoke <android.hardware.camera2.utils.TypeReference: void toString(java.lang.reflect.Type[],java.lang.StringBuilder)>($r13, r0);

        goto label6;

     label3:
        $z2 = r17 instanceof java.lang.reflect.ParameterizedType;

        if $z2 == 0 goto label4;

        r19 = (java.lang.reflect.ParameterizedType) r17;

        $r6 = interfaceinvoke r19.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r7 = (java.lang.Class) $r6;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = interfaceinvoke r19.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        staticinvoke <android.hardware.camera2.utils.TypeReference: void toString(java.lang.reflect.Type[],java.lang.StringBuilder)>($r10, r0);

        goto label6;

     label4:
        $z3 = r17 instanceof java.lang.reflect.GenericArrayType;

        if $z3 == 0 goto label5;

        $r3 = (java.lang.reflect.GenericArrayType) r17;

        $r4 = interfaceinvoke $r3.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        staticinvoke <android.hardware.camera2.utils.TypeReference: void toString(java.lang.reflect.Type,java.lang.StringBuilder)>($r4, r0);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");

        goto label6;

     label5:
        $r1 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label6:
        return;
    }

    private static void toString(java.lang.reflect.Type[], java.lang.StringBuilder)
    {
        java.lang.reflect.Type[] r0;
        java.lang.StringBuilder r1;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.reflect.Type $r4;

        r0 := @parameter0: java.lang.reflect.Type[];

        r1 := @parameter1: java.lang.StringBuilder;

        if r0 != null goto label1;

        return;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        return;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        i4 = 0;

     label3:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label5;

        $r4 = r0[i4];

        staticinvoke <android.hardware.camera2.utils.TypeReference: void toString(java.lang.reflect.Type,java.lang.StringBuilder)>($r4, r1);

        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        if i4 == $i3 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.camera2.utils.TypeReference r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, z2;
        java.lang.reflect.Type $r3, $r4;

        r0 := @this: android.hardware.camera2.utils.TypeReference;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.hardware.camera2.utils.TypeReference;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type mType>;

        $r2 = (android.hardware.camera2.utils.TypeReference) r1;

        $r3 = $r2.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type mType>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public android.hardware.camera2.utils.TypeReference getComponentType()
    {
        android.hardware.camera2.utils.TypeReference r0, r3;
        java.lang.reflect.Type $r1, r2;

        r0 := @this: android.hardware.camera2.utils.TypeReference;

        $r1 = r0.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type mType>;

        r2 = staticinvoke <android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type getComponentType(java.lang.reflect.Type)>($r1);

        if r2 == null goto label1;

        r3 = staticinvoke <android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference createSpecializedTypeReference(java.lang.reflect.Type)>(r2);

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public final java.lang.Class getRawType()
    {
        android.hardware.camera2.utils.TypeReference r0;
        java.lang.reflect.Type $r1;
        java.lang.Class $r2;

        r0 := @this: android.hardware.camera2.utils.TypeReference;

        $r1 = r0.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type mType>;

        $r2 = staticinvoke <android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType(java.lang.reflect.Type)>($r1);

        return $r2;
    }

    public java.lang.reflect.Type getType()
    {
        android.hardware.camera2.utils.TypeReference r0;
        java.lang.reflect.Type $r1;

        r0 := @this: android.hardware.camera2.utils.TypeReference;

        $r1 = r0.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type mType>;

        return $r1;
    }

    public int hashCode()
    {
        android.hardware.camera2.utils.TypeReference r0;
        int $i0;

        r0 := @this: android.hardware.camera2.utils.TypeReference;

        $i0 = r0.<android.hardware.camera2.utils.TypeReference: int mHash>;

        return $i0;
    }

    public java.lang.String toString()
    {
        android.hardware.camera2.utils.TypeReference r0;
        java.lang.StringBuilder $r2;
        java.lang.reflect.Type $r4;
        java.lang.String $r6;

        r0 := @this: android.hardware.camera2.utils.TypeReference;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TypeReference<");

        $r4 = virtualinvoke r0.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type getType()>();

        staticinvoke <android.hardware.camera2.utils.TypeReference: void toString(java.lang.reflect.Type,java.lang.StringBuilder)>($r4, $r2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
