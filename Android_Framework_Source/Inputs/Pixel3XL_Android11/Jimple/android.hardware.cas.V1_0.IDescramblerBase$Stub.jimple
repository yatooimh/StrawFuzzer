public abstract class android.hardware.cas.V1_0.IDescramblerBase$Stub extends android.os.HwBinder implements android.hardware.cas.V1_0.IDescramblerBase
{

    public void <init>()
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        specialinvoke r0.<android.os.HwBinder: void <init>()>();

        return;
    }

    public android.os.IHwBinder asBinder()
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        return r0;
    }

    public void debug(android.os.NativeHandle, java.util.ArrayList)
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;
        android.os.NativeHandle r1;
        java.util.ArrayList r2;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        r1 := @parameter0: android.os.NativeHandle;

        r2 := @parameter1: java.util.ArrayList;

        return;
    }

    public final android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;
        android.internal.hidl.base.V1_0.DebugInfo $r2;
        int $i0;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        $r2 = new android.internal.hidl.base.V1_0.DebugInfo;

        specialinvoke $r2.<android.internal.hidl.base.V1_0.DebugInfo: void <init>()>();

        $i0 = staticinvoke <android.os.HidlSupport: int getPidIfSharable()>();

        $r2.<android.internal.hidl.base.V1_0.DebugInfo: int pid> = $i0;

        $r2.<android.internal.hidl.base.V1_0.DebugInfo: long ptr> = 0L;

        $r2.<android.internal.hidl.base.V1_0.DebugInfo: int arch> = 0;

        return $r2;
    }

    public final java.util.ArrayList getHashChain()
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;
        byte[] $r2, $r5;
        java.util.ArrayList $r3;
        byte[][] $r4;
        java.util.List $r6;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        $r2 = newarray (byte)[32];

        $r2[0] = -20;

        $r2[1] = 127;

        $r2[2] = -41;

        $r2[3] = -98;

        $r2[4] = -48;

        $r2[5] = 45;

        $r2[6] = -6;

        $r2[7] = -123;

        $r2[8] = -68;

        $r2[9] = 73;

        $r2[10] = -108;

        $r2[11] = 38;

        $r2[12] = -83;

        $r2[13] = -82;

        $r2[14] = 62;

        $r2[15] = -66;

        $r2[16] = 35;

        $r2[17] = -17;

        $r2[18] = 5;

        $r2[19] = 36;

        $r2[20] = -13;

        $r2[21] = -51;

        $r2[22] = 105;

        $r2[23] = 87;

        $r2[24] = 19;

        $r2[25] = -109;

        $r2[26] = 36;

        $r2[27] = -72;

        $r2[28] = 59;

        $r2[29] = 24;

        $r2[30] = -54;

        $r2[31] = 76;

        $r3 = new java.util.ArrayList;

        $r4 = newarray (byte[])[2];

        $r5 = newarray (byte)[32];

        $r5[0] = -92;

        $r5[1] = 50;

        $r5[2] = -42;

        $r5[3] = -39;

        $r5[4] = 32;

        $r5[5] = 2;

        $r5[6] = 72;

        $r5[7] = -36;

        $r5[8] = 33;

        $r5[9] = 38;

        $r5[10] = -126;

        $r5[11] = 123;

        $r5[12] = -51;

        $r5[13] = 108;

        $r5[14] = -34;

        $r5[15] = -93;

        $r5[16] = 29;

        $r5[17] = -42;

        $r5[18] = 94;

        $r5[19] = -1;

        $r5[20] = 57;

        $r5[21] = -71;

        $r5[22] = 57;

        $r5[23] = -10;

        $r5[24] = 69;

        $r5[25] = -123;

        $r5[26] = -46;

        $r5[27] = 125;

        $r5[28] = -111;

        $r5[29] = 90;

        $r5[30] = 88;

        $r5[31] = 87;

        $r4[0] = $r5;

        $r4[1] = $r2;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        return $r3;
    }

    public final java.util.ArrayList interfaceChain()
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;
        java.util.ArrayList $r1;
        java.lang.String[] $r2;
        java.util.List $r3;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        $r1 = new java.util.ArrayList;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "android.hardware.cas@1.0::IDescramblerBase";

        $r2[1] = "android.hidl.base@1.0::IBase";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r1;
    }

    public final java.lang.String interfaceDescriptor()
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        return "android.hardware.cas@1.0::IDescramblerBase";
    }

    public final boolean linkToDeath(android.os.IHwBinder$DeathRecipient, long)
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;
        android.os.IHwBinder$DeathRecipient r1;
        long l0;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        r1 := @parameter0: android.os.IHwBinder$DeathRecipient;

        l0 := @parameter1: long;

        return 1;
    }

    public final void notifySyspropsChanged()
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        staticinvoke <android.os.HwBinder: void enableInstrumentation()>();

        return;
    }

    public void onTransact(int, android.os.HwParcel, android.os.HwParcel, int) throws android.os.RemoteException
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;
        android.os.HwParcel r1, r13;
        java.util.ArrayList r2, $r5, $r12, r17;
        long l0;
        boolean z0;
        java.lang.String $r6, r16;
        android.os.HwBlob $r7, $r8;
        int $i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        java.lang.Object $r9;
        java.lang.IllegalArgumentException $r10;
        android.os.NativeHandle $r11;
        android.internal.hidl.base.V1_0.DebugInfo r14;
        byte[] r15;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        i4 := @parameter0: int;

        r13 := @parameter1: android.os.HwParcel;

        r1 := @parameter2: android.os.HwParcel;

        i5 := @parameter3: int;

        if i4 == 1 goto label15;

        if i4 == 2 goto label14;

        if i4 == 3 goto label13;

        lookupswitch(i4)
        {
            case 256067662: goto label12;
            case 256131655: goto label11;
            case 256136003: goto label10;
            case 256398152: goto label06;
            case 256462420: goto label05;
            case 256921159: goto label04;
            case 257049926: goto label03;
            case 257120595: goto label02;
            default: goto label01;
        };

     label01:
        goto label16;

     label02:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hidl.base@1.0::IBase");

        virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: void notifySyspropsChanged()>();

        goto label16;

     label03:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hidl.base@1.0::IBase");

        r14 = virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: android.internal.hidl.base.V1_0.DebugInfo getDebugInfo()>();

        virtualinvoke r1.<android.os.HwParcel: void writeStatus(int)>(0);

        virtualinvoke r14.<android.internal.hidl.base.V1_0.DebugInfo: void writeToParcel(android.os.HwParcel)>(r1);

        virtualinvoke r1.<android.os.HwParcel: void send()>();

        goto label16;

     label04:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hidl.base@1.0::IBase");

        virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: void ping()>();

        virtualinvoke r1.<android.os.HwParcel: void writeStatus(int)>(0);

        virtualinvoke r1.<android.os.HwParcel: void send()>();

        goto label16;

     label05:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hidl.base@1.0::IBase");

        virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: void setHALInstrumentation()>();

        goto label16;

     label06:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hidl.base@1.0::IBase");

        r2 = virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.util.ArrayList getHashChain()>();

        virtualinvoke r1.<android.os.HwParcel: void writeStatus(int)>(0);

        $r7 = new android.os.HwBlob;

        specialinvoke $r7.<android.os.HwBlob: void <init>(int)>(16);

        i6 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        virtualinvoke $r7.<android.os.HwBlob: void putInt32(long,int)>(8L, i6);

        virtualinvoke $r7.<android.os.HwBlob: void putBool(long,boolean)>(12L, 0);

        $r8 = new android.os.HwBlob;

        $i1 = i6 * 32;

        specialinvoke $r8.<android.os.HwBlob: void <init>(int)>($i1);

        i7 = 0;

     label07:
        if i7 >= i6 goto label09;

        $i2 = i7 * 32;

        l0 = (long) $i2;

        $r9 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r15 = (byte[]) $r9;

        if r15 == null goto label08;

        $i3 = lengthof r15;

        if $i3 != 32 goto label08;

        virtualinvoke $r8.<android.os.HwBlob: void putInt8Array(long,byte[])>(l0, r15);

        i7 = i7 + 1;

        goto label07;

     label08:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array element is not of the expected length");

        throw $r10;

     label09:
        virtualinvoke $r7.<android.os.HwBlob: void putBlob(long,android.os.HwBlob)>(0L, $r8);

        virtualinvoke r1.<android.os.HwParcel: void writeBuffer(android.os.HwBlob)>($r7);

        virtualinvoke r1.<android.os.HwParcel: void send()>();

        goto label16;

     label10:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hidl.base@1.0::IBase");

        r16 = virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.lang.String interfaceDescriptor()>();

        virtualinvoke r1.<android.os.HwParcel: void writeStatus(int)>(0);

        virtualinvoke r1.<android.os.HwParcel: void writeString(java.lang.String)>(r16);

        virtualinvoke r1.<android.os.HwParcel: void send()>();

        goto label16;

     label11:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hidl.base@1.0::IBase");

        $r11 = virtualinvoke r13.<android.os.HwParcel: android.os.NativeHandle readNativeHandle()>();

        $r12 = virtualinvoke r13.<android.os.HwParcel: java.util.ArrayList readStringVector()>();

        virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: void debug(android.os.NativeHandle,java.util.ArrayList)>($r11, $r12);

        virtualinvoke r1.<android.os.HwParcel: void writeStatus(int)>(0);

        virtualinvoke r1.<android.os.HwParcel: void send()>();

        goto label16;

     label12:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hidl.base@1.0::IBase");

        r17 = virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.util.ArrayList interfaceChain()>();

        virtualinvoke r1.<android.os.HwParcel: void writeStatus(int)>(0);

        virtualinvoke r1.<android.os.HwParcel: void writeStringVector(java.util.ArrayList)>(r17);

        virtualinvoke r1.<android.os.HwParcel: void send()>();

        goto label16;

     label13:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hardware.cas@1.0::IDescramblerBase");

        i8 = virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: int release()>();

        virtualinvoke r1.<android.os.HwParcel: void writeStatus(int)>(0);

        virtualinvoke r1.<android.os.HwParcel: void writeInt32(int)>(i8);

        virtualinvoke r1.<android.os.HwParcel: void send()>();

        goto label16;

     label14:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hardware.cas@1.0::IDescramblerBase");

        $r6 = virtualinvoke r13.<android.os.HwParcel: java.lang.String readString()>();

        z0 = virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: boolean requiresSecureDecoderComponent(java.lang.String)>($r6);

        virtualinvoke r1.<android.os.HwParcel: void writeStatus(int)>(0);

        virtualinvoke r1.<android.os.HwParcel: void writeBool(boolean)>(z0);

        virtualinvoke r1.<android.os.HwParcel: void send()>();

        goto label16;

     label15:
        virtualinvoke r13.<android.os.HwParcel: void enforceInterface(java.lang.String)>("android.hardware.cas@1.0::IDescramblerBase");

        $r5 = virtualinvoke r13.<android.os.HwParcel: java.util.ArrayList readInt8Vector()>();

        i9 = virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: int setMediaCasSession(java.util.ArrayList)>($r5);

        virtualinvoke r1.<android.os.HwParcel: void writeStatus(int)>(0);

        virtualinvoke r1.<android.os.HwParcel: void writeInt32(int)>(i9);

        virtualinvoke r1.<android.os.HwParcel: void send()>();

     label16:
        return;
    }

    public final void ping()
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        return;
    }

    public android.os.IHwInterface queryLocalInterface(java.lang.String)
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        r1 := @parameter0: java.lang.String;

        $r2 = "android.hardware.cas@1.0::IDescramblerBase";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        return null;
    }

    public void registerAsService(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;
        java.lang.String r1;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: void registerService(java.lang.String)>(r1);

        return;
    }

    public final void setHALInstrumentation()
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        return;
    }

    public java.lang.String toString()
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r6;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<android.hardware.cas.V1_0.IDescramblerBase$Stub: java.lang.String interfaceDescriptor()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@Stub");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public final boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)
    {
        android.hardware.cas.V1_0.IDescramblerBase$Stub r0;
        android.os.IHwBinder$DeathRecipient r1;

        r0 := @this: android.hardware.cas.V1_0.IDescramblerBase$Stub;

        r1 := @parameter0: android.os.IHwBinder$DeathRecipient;

        return 1;
    }
}
