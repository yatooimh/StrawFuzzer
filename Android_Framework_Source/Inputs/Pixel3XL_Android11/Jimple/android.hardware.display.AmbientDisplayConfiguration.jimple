public class android.hardware.display.AmbientDisplayConfiguration extends java.lang.Object
{
    private final boolean mAlwaysOnByDefault;
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        android.content.Context r1;
        android.content.res.Resources $r2;
        boolean $z0;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.display.AmbientDisplayConfiguration: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r2.<android.content.res.Resources: boolean getBoolean(int)>(17891423);

        r0.<android.hardware.display.AmbientDisplayConfiguration: boolean mAlwaysOnByDefault> = $z0;

        return;
    }

    private boolean alwaysOnDisplayAvailable()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        boolean $z0;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = r0.<android.hardware.display.AmbientDisplayConfiguration: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r2.<android.content.res.Resources: boolean getBoolean(int)>(17891422);

        return $z0;
    }

    private boolean alwaysOnDisplayDebuggingEnabled()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        boolean $z1, $z2, z3;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        z3 = 0;

        $z1 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("debug.doze.aod", 0);

        if $z1 == 0 goto label1;

        z3 = 0;

        $z2 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z2 == 0 goto label1;

        z3 = 1;

     label1:
        return z3;
    }

    private boolean boolSetting(java.lang.String, int, int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        java.lang.String r1;
        int i0, i1, $i2;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean z0;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.hardware.display.AmbientDisplayConfiguration: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i2 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r3, r1, i1, i0);

        if $i2 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean boolSettingDefaultOff(java.lang.String, int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSetting(java.lang.String,int,int)>(r1, i0, 0);

        return $z0;
    }

    private boolean boolSettingDefaultOn(java.lang.String, int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSetting(java.lang.String,int,int)>(r1, i0, 1);

        return $z0;
    }

    private boolean pulseOnLongPressAvailable()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: java.lang.String longPressSensorType()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public boolean accessibilityInversionEnabled(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSettingDefaultOff(java.lang.String,int)>("accessibility_display_inversion_enabled", i0);

        return $z0;
    }

    public boolean alwaysOnAvailable()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean alwaysOnDisplayDebuggingEnabled()>();

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean alwaysOnDisplayAvailable()>();

        if $z2 == 0 goto label2;

     label1:
        $z1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean ambientDisplayAvailable()>();

        if $z1 == 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    public boolean alwaysOnAvailableForUser(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean alwaysOnAvailable()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean accessibilityInversionEnabled(int)>(i0);

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean alwaysOnEnabled(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = r0.<android.hardware.display.AmbientDisplayConfiguration: boolean mAlwaysOnByDefault>;

        i1 = (int) $z0;

        $z1 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSetting(java.lang.String,int,int)>("doze_always_on", i0, i1);

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean alwaysOnAvailable()>();

        if $z2 == 0 goto label1;

        $z3 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean accessibilityInversionEnabled(int)>(i0);

        if $z3 != 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        return z4;
    }

    public boolean ambientDisplayAvailable()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: java.lang.String ambientDisplayComponent()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public java.lang.String ambientDisplayComponent()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = r0.<android.hardware.display.AmbientDisplayConfiguration: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039885);

        return $r3;
    }

    public boolean doubleTapGestureEnabled(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSettingDefaultOn(java.lang.String,int)>("doze_pulse_on_double_tap", i0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean doubleTapSensorAvailable()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean doubleTapSensorAvailable()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: java.lang.String doubleTapSensorType()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public java.lang.String doubleTapSensorType()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = r0.<android.hardware.display.AmbientDisplayConfiguration: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039886);

        return $r3;
    }

    public boolean dozePickupSensorAvailable()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        boolean $z0;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = r0.<android.hardware.display.AmbientDisplayConfiguration: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r2.<android.content.res.Resources: boolean getBoolean(int)>(17891424);

        return $z0;
    }

    public boolean dozeSuppressed(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSettingDefaultOff(java.lang.String,int)>("suppress_doze", i0);

        return $z0;
    }

    public boolean enabled(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean pulseOnNotificationEnabled(int)>(i0);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean pulseOnLongPressEnabled(int)>(i0);

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean alwaysOnEnabled(int)>(i0);

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean wakeLockScreenGestureEnabled(int)>(i0);

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean wakeDisplayGestureEnabled(int)>(i0);

        if $z4 != 0 goto label2;

        $z5 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean pickupGestureEnabled(int)>(i0);

        if $z5 != 0 goto label2;

        $z6 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean tapGestureEnabled(int)>(i0);

        if $z6 != 0 goto label2;

        $z7 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean doubleTapGestureEnabled(int)>(i0);

        if $z7 == 0 goto label1;

        goto label2;

     label1:
        z8 = 0;

        goto label3;

     label2:
        z8 = 1;

     label3:
        return z8;
    }

    public long getWakeLockScreenDebounce()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0;
        long $l1;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = r0.<android.hardware.display.AmbientDisplayConfiguration: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(17694804);

        $l1 = (long) $i0;

        return $l1;
    }

    public java.lang.String longPressSensorType()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = r0.<android.hardware.display.AmbientDisplayConfiguration: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039887);

        return $r3;
    }

    public boolean pickupGestureEnabled(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSettingDefaultOn(java.lang.String,int)>("doze_pulse_on_pick_up", i0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean dozePickupSensorAvailable()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean pulseOnLongPressEnabled(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean pulseOnLongPressAvailable()>();

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSettingDefaultOff(java.lang.String,int)>("doze_pulse_on_long_press", i0);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean pulseOnNotificationAvailable()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        boolean $z0;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $z0 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean ambientDisplayAvailable()>();

        return $z0;
    }

    public boolean pulseOnNotificationEnabled(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSettingDefaultOn(java.lang.String,int)>("doze_enabled", i0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean pulseOnNotificationAvailable()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean tapGestureEnabled(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSettingDefaultOn(java.lang.String,int)>("doze_tap_gesture", i0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean tapSensorAvailable()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean tapSensorAvailable()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: java.lang.String tapSensorType()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public java.lang.String tapSensorType()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = r0.<android.hardware.display.AmbientDisplayConfiguration: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039888);

        return $r3;
    }

    public boolean wakeDisplayGestureEnabled(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSettingDefaultOn(java.lang.String,int)>("doze_wake_display_gesture", i0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean wakeScreenGestureAvailable()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean wakeLockScreenGestureEnabled(int)
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        int i0;
        boolean $z0, $z1, z2;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean boolSettingDefaultOn(java.lang.String,int)>("doze_wake_screen_gesture", i0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.hardware.display.AmbientDisplayConfiguration: boolean wakeScreenGestureAvailable()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean wakeScreenGestureAvailable()
    {
        android.hardware.display.AmbientDisplayConfiguration r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        boolean $z0;

        r0 := @this: android.hardware.display.AmbientDisplayConfiguration;

        $r1 = r0.<android.hardware.display.AmbientDisplayConfiguration: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r2.<android.content.res.Resources: boolean getBoolean(int)>(17891426);

        return $z0;
    }
}
