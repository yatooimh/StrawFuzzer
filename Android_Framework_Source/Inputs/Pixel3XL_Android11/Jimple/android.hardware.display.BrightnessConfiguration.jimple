public final class android.hardware.display.BrightnessConfiguration extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String ATTR_CATEGORY;
    private static final java.lang.String ATTR_COLLECT_COLOR;
    private static final java.lang.String ATTR_DESCRIPTION;
    private static final java.lang.String ATTR_LUX;
    private static final java.lang.String ATTR_MODEL_LOWER_BOUND;
    private static final java.lang.String ATTR_MODEL_TIMEOUT;
    private static final java.lang.String ATTR_MODEL_UPPER_BOUND;
    private static final java.lang.String ATTR_NITS;
    private static final java.lang.String ATTR_PACKAGE_NAME;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final long SHORT_TERM_TIMEOUT_UNSET;
    private static final java.lang.String TAG_BRIGHTNESS_CORRECTION;
    private static final java.lang.String TAG_BRIGHTNESS_CORRECTIONS;
    private static final java.lang.String TAG_BRIGHTNESS_CURVE;
    private static final java.lang.String TAG_BRIGHTNESS_PARAMS;
    private static final java.lang.String TAG_BRIGHTNESS_POINT;
    private final java.util.Map mCorrectionsByCategory;
    private final java.util.Map mCorrectionsByPackageName;
    private final java.lang.String mDescription;
    private final float[] mLux;
    private final float[] mNits;
    private final float mShortTermModelLowerLuxMultiplier;
    private final long mShortTermModelTimeout;
    private final float mShortTermModelUpperLuxMultiplier;
    private final boolean mShouldCollectColorSamples;

    static void <clinit>()
    {
        android.hardware.display.BrightnessConfiguration$1 $r0;

        <android.hardware.display.BrightnessConfiguration: java.lang.String TAG_BRIGHTNESS_POINT> = "brightness-point";

        <android.hardware.display.BrightnessConfiguration: java.lang.String TAG_BRIGHTNESS_PARAMS> = "brightness-params";

        <android.hardware.display.BrightnessConfiguration: java.lang.String TAG_BRIGHTNESS_CURVE> = "brightness-curve";

        <android.hardware.display.BrightnessConfiguration: java.lang.String TAG_BRIGHTNESS_CORRECTIONS> = "brightness-corrections";

        <android.hardware.display.BrightnessConfiguration: java.lang.String TAG_BRIGHTNESS_CORRECTION> = "brightness-correction";

        <android.hardware.display.BrightnessConfiguration: long SHORT_TERM_TIMEOUT_UNSET> = -1L;

        <android.hardware.display.BrightnessConfiguration: java.lang.String ATTR_PACKAGE_NAME> = "package-name";

        <android.hardware.display.BrightnessConfiguration: java.lang.String ATTR_NITS> = "nits";

        <android.hardware.display.BrightnessConfiguration: java.lang.String ATTR_MODEL_UPPER_BOUND> = "model-upper-bound";

        <android.hardware.display.BrightnessConfiguration: java.lang.String ATTR_MODEL_TIMEOUT> = "model-timeout";

        <android.hardware.display.BrightnessConfiguration: java.lang.String ATTR_MODEL_LOWER_BOUND> = "model-lower-bound";

        <android.hardware.display.BrightnessConfiguration: java.lang.String ATTR_LUX> = "lux";

        <android.hardware.display.BrightnessConfiguration: java.lang.String ATTR_DESCRIPTION> = "description";

        <android.hardware.display.BrightnessConfiguration: java.lang.String ATTR_COLLECT_COLOR> = "collect-color";

        <android.hardware.display.BrightnessConfiguration: java.lang.String ATTR_CATEGORY> = "category";

        $r0 = new android.hardware.display.BrightnessConfiguration$1;

        specialinvoke $r0.<android.hardware.display.BrightnessConfiguration$1: void <init>()>();

        <android.hardware.display.BrightnessConfiguration: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(float[], float[], java.util.Map, java.util.Map, java.lang.String, boolean, long, float, float)
    {
        android.hardware.display.BrightnessConfiguration r0;
        float[] r1, r2;
        java.util.Map r3, r4;
        java.lang.String r5;
        boolean z0;
        long l0;
        float f0, f1;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        l0 := @parameter6: long;

        f0 := @parameter7: float;

        f1 := @parameter8: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.display.BrightnessConfiguration: float[] mLux> = r1;

        r0.<android.hardware.display.BrightnessConfiguration: float[] mNits> = r2;

        r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByPackageName> = r3;

        r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByCategory> = r4;

        r0.<android.hardware.display.BrightnessConfiguration: java.lang.String mDescription> = r5;

        r0.<android.hardware.display.BrightnessConfiguration: boolean mShouldCollectColorSamples> = z0;

        r0.<android.hardware.display.BrightnessConfiguration: long mShortTermModelTimeout> = l0;

        r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier> = f0;

        r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelUpperLuxMultiplier> = f1;

        return;
    }

    void <init>(float[], float[], java.util.Map, java.util.Map, java.lang.String, boolean, long, float, float, android.hardware.display.BrightnessConfiguration$1)
    {
        android.hardware.display.BrightnessConfiguration r0;
        float[] r1, r2;
        java.util.Map r3, r4;
        java.lang.String r5;
        boolean z0;
        long l0;
        float f0, f1;
        android.hardware.display.BrightnessConfiguration$1 r6;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        l0 := @parameter6: long;

        f0 := @parameter7: float;

        f1 := @parameter8: float;

        r6 := @parameter9: android.hardware.display.BrightnessConfiguration$1;

        specialinvoke r0.<android.hardware.display.BrightnessConfiguration: void <init>(float[],float[],java.util.Map,java.util.Map,java.lang.String,boolean,long,float,float)>(r1, r2, r3, r4, r5, z0, l0, f0, f1);

        return;
    }

    private boolean checkFloatEquals(float, float)
    {
        android.hardware.display.BrightnessConfiguration r0;
        float f0, f1;
        boolean z0, $z1, z2;
        byte $b0;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        z2 = 1;

        if z0 == 0 goto label1;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $b0 = f0 cmpl f1;

        if $b0 != 0 goto label2;

        goto label3;

     label2:
        z2 = 0;

     label3:
        return z2;
    }

    private static float loadFloatFromXml(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String r0, r3;
        float f0;
        java.lang.Throwable $r1;
        org.xmlpull.v1.XmlPullParser r2;

        r2 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

     label1:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r3);

     label2:
        return f0;

     label3:
        $r1 := @caughtexception;

        return #NaNF;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static android.hardware.display.BrightnessConfiguration loadFromXml(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        float f0, f1, $f2, $f3, f4, f5;
        java.lang.String r3, r4, $r26, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r46, $r47, r54;
        int i0, $i1, i2, i4, i5, i6, i7, i8;
        java.util.ArrayList $r5, $r6;
        java.util.HashMap $r7, $r8;
        android.hardware.display.BrightnessConfiguration$Builder $r9;
        java.util.Set $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z9, $z10, $z11, $z12;
        android.hardware.display.BrightnessConfiguration $r17;
        java.lang.Object $r18, $r19, $r21, $r24, $r25, $r27, $r30, $r32;
        java.lang.Integer $r20, $r43;
        android.hardware.display.BrightnessCorrection $r22, $r28, r55;
        java.lang.Float $r31, $r33, $r48, $r49;
        java.lang.Throwable $r50, $r51;
        org.xmlpull.v1.XmlPullParser r52;
        long l3;
        java.lang.Long r58;
        float[] r59, r60;
        java.util.Iterator r62, r64;
        java.util.Map$Entry r63, r65;

        r52 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        i2 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        f4 = #NaNF;

        f5 = #NaNF;

        l3 = -1L;

        z9 = 0;

        r54 = null;

     label01:
        $z10 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r52, i2);

        if $z10 == 0 goto label20;

        $r34 = "brightness-curve";

        $r35 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z2 == 0 goto label05;

        r54 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "description");

        i4 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label02:
        $z11 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r52, i4);

        if $z11 == 0 goto label04;

        $r46 = "brightness-point";

        $r47 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z6 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>($r47);

        if $z6 != 0 goto label03;

        goto label02;

     label03:
        f0 = staticinvoke <android.hardware.display.BrightnessConfiguration: float loadFloatFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r52, "lux");

        f1 = staticinvoke <android.hardware.display.BrightnessConfiguration: float loadFloatFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r52, "nits");

        $r48 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r48);

        $r49 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r49);

        goto label02;

     label04:
        goto label01;

     label05:
        $r36 = "brightness-corrections";

        $r37 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z3 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        if $z3 == 0 goto label17;

        i5 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label06:
        $z12 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r52, i5);

        if $z12 == 0 goto label16;

        $r41 = "brightness-correction";

        $r42 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z5 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z5 != 0 goto label07;

        goto label06;

     label07:
        r3 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package-name");

        r4 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "category");

        r55 = staticinvoke <android.hardware.display.BrightnessCorrection: android.hardware.display.BrightnessCorrection loadFromXml(org.xmlpull.v1.XmlPullParser)>(r52);

        if r3 == null goto label08;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r55);

        goto label15;

     label08:
        if r4 == null goto label15;

     label09:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

     label10:
        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, r55);

     label11:
        goto label15;

     label12:
        $r50 := @caughtexception;

        goto label14;

     label13:
        $r51 := @caughtexception;

     label14:
        goto label06;

     label15:
        goto label06;

     label16:
        i6 = i2;

        goto label19;

     label17:
        i6 = i2;

        $r38 = "brightness-params";

        $r39 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z4 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r39);

        if $z4 == 0 goto label19;

        $r40 = interfaceinvoke r52.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "collect-color");

        z9 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r40);

        r58 = staticinvoke <android.hardware.display.BrightnessConfiguration: java.lang.Long loadLongFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r52, "model-timeout");

        if r58 == null goto label18;

        l3 = virtualinvoke r58.<java.lang.Long: long longValue()>();

     label18:
        f5 = staticinvoke <android.hardware.display.BrightnessConfiguration: float loadFloatFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r52, "model-lower-bound");

        f4 = staticinvoke <android.hardware.display.BrightnessConfiguration: float loadFloatFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r52, "model-upper-bound");

        goto label01;

     label19:
        i2 = i6;

        goto label01;

     label20:
        i7 = interfaceinvoke $r5.<java.util.List: int size()>();

        r59 = newarray (float)[i7];

        r60 = newarray (float)[i7];

        i8 = 0;

     label21:
        if i8 >= i7 goto label22;

        $r30 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i8);

        $r31 = (java.lang.Float) $r30;

        $f2 = virtualinvoke $r31.<java.lang.Float: float floatValue()>();

        r59[i8] = $f2;

        $r32 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i8);

        $r33 = (java.lang.Float) $r32;

        $f3 = virtualinvoke $r33.<java.lang.Float: float floatValue()>();

        r60[i8] = $f3;

        i8 = i8 + 1;

        goto label21;

     label22:
        $r9 = new android.hardware.display.BrightnessConfiguration$Builder;

        specialinvoke $r9.<android.hardware.display.BrightnessConfiguration$Builder: void <init>(float[],float[])>(r59, r60);

        virtualinvoke $r9.<android.hardware.display.BrightnessConfiguration$Builder: android.hardware.display.BrightnessConfiguration$Builder setDescription(java.lang.String)>(r54);

        $r11 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        r62 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label23:
        $z0 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label24;

        $r24 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>();

        r63 = (java.util.Map$Entry) $r24;

        $r25 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r26 = (java.lang.String) $r25;

        $r27 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r28 = (android.hardware.display.BrightnessCorrection) $r27;

        virtualinvoke $r9.<android.hardware.display.BrightnessConfiguration$Builder: android.hardware.display.BrightnessConfiguration$Builder addCorrectionByPackageName(java.lang.String,android.hardware.display.BrightnessCorrection)>($r26, $r28);

        goto label23;

     label24:
        $r12 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        r64 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label25:
        $z1 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label26;

        $r18 = interfaceinvoke r64.<java.util.Iterator: java.lang.Object next()>();

        r65 = (java.util.Map$Entry) $r18;

        $r19 = interfaceinvoke r65.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = (java.lang.Integer) $r19;

        $i1 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        $r21 = interfaceinvoke r65.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (android.hardware.display.BrightnessCorrection) $r21;

        virtualinvoke $r9.<android.hardware.display.BrightnessConfiguration$Builder: android.hardware.display.BrightnessConfiguration$Builder addCorrectionByCategory(int,android.hardware.display.BrightnessCorrection)>($i1, $r22);

        goto label25;

     label26:
        virtualinvoke $r9.<android.hardware.display.BrightnessConfiguration$Builder: android.hardware.display.BrightnessConfiguration$Builder setShouldCollectColorSamples(boolean)>(z9);

        virtualinvoke $r9.<android.hardware.display.BrightnessConfiguration$Builder: android.hardware.display.BrightnessConfiguration$Builder setShortTermModelTimeoutMillis(long)>(l3);

        virtualinvoke $r9.<android.hardware.display.BrightnessConfiguration$Builder: android.hardware.display.BrightnessConfiguration$Builder setShortTermModelLowerLuxMultiplier(float)>(f5);

        virtualinvoke $r9.<android.hardware.display.BrightnessConfiguration$Builder: android.hardware.display.BrightnessConfiguration$Builder setShortTermModelUpperLuxMultiplier(float)>(f4);

        $r17 = virtualinvoke $r9.<android.hardware.display.BrightnessConfiguration$Builder: android.hardware.display.BrightnessConfiguration build()>();

        return $r17;

        catch java.lang.NullPointerException from label09 to label10 with label13;
        catch java.lang.NumberFormatException from label09 to label10 with label13;
        catch java.lang.NullPointerException from label10 to label11 with label12;
        catch java.lang.NumberFormatException from label10 to label11 with label12;
    }

    private static java.lang.Long loadLongFromXml(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String r0, r4;
        long l0;
        java.lang.Long $r1;
        java.lang.Throwable $r2;
        org.xmlpull.v1.XmlPullParser r3;

        r3 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0 := @parameter1: java.lang.String;

        r4 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r0);

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r4);

     label2:
        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public int describeContents()
    {
        android.hardware.display.BrightnessConfiguration r0;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.display.BrightnessConfiguration r0, r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        float[] $r1, $r2, $r3, $r4;
        java.util.Map $r5, $r6, $r7, $r8;
        java.lang.String $r9, $r10;
        long $l0, $l1;
        byte $b2;
        float $f0, $f1, $f2, $f3;
        java.lang.Object r11;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        r11 := @parameter0: java.lang.Object;

        z10 = 1;

        if r11 != r0 goto label1;

        return 1;

     label1:
        $z0 = r11 instanceof android.hardware.display.BrightnessConfiguration;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r12 = (android.hardware.display.BrightnessConfiguration) r11;

        $r2 = r0.<android.hardware.display.BrightnessConfiguration: float[] mLux>;

        $r1 = r12.<android.hardware.display.BrightnessConfiguration: float[] mLux>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>($r2, $r1);

        if $z1 == 0 goto label3;

        $r4 = r0.<android.hardware.display.BrightnessConfiguration: float[] mNits>;

        $r3 = r12.<android.hardware.display.BrightnessConfiguration: float[] mNits>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>($r4, $r3);

        if $z2 == 0 goto label3;

        $r6 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByPackageName>;

        $r5 = r12.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByPackageName>;

        $z3 = interfaceinvoke $r6.<java.util.Map: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label3;

        $r8 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByCategory>;

        $r7 = r12.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByCategory>;

        $z4 = interfaceinvoke $r8.<java.util.Map: boolean equals(java.lang.Object)>($r7);

        if $z4 == 0 goto label3;

        $r10 = r0.<android.hardware.display.BrightnessConfiguration: java.lang.String mDescription>;

        $r9 = r12.<android.hardware.display.BrightnessConfiguration: java.lang.String mDescription>;

        $z5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z5 == 0 goto label3;

        $z7 = r0.<android.hardware.display.BrightnessConfiguration: boolean mShouldCollectColorSamples>;

        $z6 = r12.<android.hardware.display.BrightnessConfiguration: boolean mShouldCollectColorSamples>;

        if $z7 != $z6 goto label3;

        $l1 = r0.<android.hardware.display.BrightnessConfiguration: long mShortTermModelTimeout>;

        $l0 = r12.<android.hardware.display.BrightnessConfiguration: long mShortTermModelTimeout>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        $f1 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier>;

        $f0 = r12.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier>;

        $z8 = specialinvoke r0.<android.hardware.display.BrightnessConfiguration: boolean checkFloatEquals(float,float)>($f1, $f0);

        if $z8 == 0 goto label3;

        $f3 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelUpperLuxMultiplier>;

        $f2 = r12.<android.hardware.display.BrightnessConfiguration: float mShortTermModelUpperLuxMultiplier>;

        $z9 = specialinvoke r0.<android.hardware.display.BrightnessConfiguration: boolean checkFloatEquals(float,float)>($f3, $f2);

        if $z9 == 0 goto label3;

        goto label4;

     label3:
        z10 = 0;

     label4:
        return z10;
    }

    public android.hardware.display.BrightnessCorrection getCorrectionByCategory(int)
    {
        android.hardware.display.BrightnessConfiguration r0;
        int i0;
        java.util.Map $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        android.hardware.display.BrightnessCorrection $r4;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByCategory>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (android.hardware.display.BrightnessCorrection) $r3;

        return $r4;
    }

    public android.hardware.display.BrightnessCorrection getCorrectionByPackageName(java.lang.String)
    {
        android.hardware.display.BrightnessConfiguration r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        android.hardware.display.BrightnessCorrection $r4;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByPackageName>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.hardware.display.BrightnessCorrection) $r3;

        return $r4;
    }

    public android.util.Pair getCurve()
    {
        android.hardware.display.BrightnessConfiguration r0;
        float[] r1, $r2, r4, r5;
        int $i0, $i1;
        android.util.Pair $r3;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        r4 = r0.<android.hardware.display.BrightnessConfiguration: float[] mLux>;

        $i0 = lengthof r4;

        r1 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r4, $i0);

        r5 = r0.<android.hardware.display.BrightnessConfiguration: float[] mNits>;

        $i1 = lengthof r5;

        $r2 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r5, $i1);

        $r3 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, $r2);

        return $r3;
    }

    public java.lang.String getDescription()
    {
        android.hardware.display.BrightnessConfiguration r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        $r1 = r0.<android.hardware.display.BrightnessConfiguration: java.lang.String mDescription>;

        return $r1;
    }

    public float getShortTermModelLowerLuxMultiplier()
    {
        android.hardware.display.BrightnessConfiguration r0;
        float $f0;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        $f0 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier>;

        return $f0;
    }

    public long getShortTermModelTimeoutMillis()
    {
        android.hardware.display.BrightnessConfiguration r0;
        long $l0;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        $l0 = r0.<android.hardware.display.BrightnessConfiguration: long mShortTermModelTimeout>;

        return $l0;
    }

    public float getShortTermModelUpperLuxMultiplier()
    {
        android.hardware.display.BrightnessConfiguration r0;
        float $f0;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        $f0 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelUpperLuxMultiplier>;

        return $f0;
    }

    public int hashCode()
    {
        android.hardware.display.BrightnessConfiguration r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27;
        java.lang.String r1;
        float[] $r2, $r3;
        java.util.Map $r4, $r5;
        boolean $z0;
        long $l15;
        float $f0, $f1;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        $i1 = 1 * 31;

        $r2 = r0.<android.hardware.display.BrightnessConfiguration: float[] mLux>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(float[])>($r2);

        $i3 = $i1 + $i2;

        $i4 = $i3 * 31;

        $r3 = r0.<android.hardware.display.BrightnessConfiguration: float[] mNits>;

        $i5 = staticinvoke <java.util.Arrays: int hashCode(float[])>($r3);

        $i6 = $i4 + $i5;

        $i7 = $i6 * 31;

        $r4 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByPackageName>;

        $i8 = interfaceinvoke $r4.<java.util.Map: int hashCode()>();

        $i9 = $i7 + $i8;

        $i10 = $i9 * 31;

        $r5 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByCategory>;

        $i11 = interfaceinvoke $r5.<java.util.Map: int hashCode()>();

        i0 = $i10 + $i11;

        r1 = r0.<android.hardware.display.BrightnessConfiguration: java.lang.String mDescription>;

        i27 = i0;

        if r1 == null goto label1;

        $i25 = i0 * 31;

        $i26 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        i27 = $i25 + $i26;

     label1:
        $i12 = i27 * 31;

        $z0 = r0.<android.hardware.display.BrightnessConfiguration: boolean mShouldCollectColorSamples>;

        $i13 = staticinvoke <java.lang.Boolean: int hashCode(boolean)>($z0);

        $i14 = $i12 + $i13;

        $i16 = $i14 * 31;

        $l15 = r0.<android.hardware.display.BrightnessConfiguration: long mShortTermModelTimeout>;

        $i17 = staticinvoke <java.lang.Long: int hashCode(long)>($l15);

        $i18 = $i16 + $i17;

        $i19 = $i18 * 31;

        $f0 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier>;

        $i20 = staticinvoke <java.lang.Float: int hashCode(float)>($f0);

        $i21 = $i19 + $i20;

        $i22 = $i21 * 31;

        $f1 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelUpperLuxMultiplier>;

        $i23 = staticinvoke <java.lang.Float: int hashCode(float)>($f1);

        $i24 = $i22 + $i23;

        return $i24;
    }

    public void saveToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.hardware.display.BrightnessConfiguration r0;
        org.xmlpull.v1.XmlSerializer r1;
        long l0;
        java.util.Map $r5, $r7;
        java.util.Set $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.String $r12, $r14, $r16, $r18, $r25, $r36, $r39, r43, r47;
        java.lang.Object $r20, $r21, $r23, $r28, $r29, $r30;
        java.lang.Integer $r22;
        float[] $r35, $r38, $r44;
        int i2, $i3, i4;
        java.util.Iterator r45, r49;
        java.util.Map$Entry r46, r50;
        android.hardware.display.BrightnessCorrection r48, r51;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "brightness-curve");

        r43 = r0.<android.hardware.display.BrightnessConfiguration: java.lang.String mDescription>;

        if r43 == null goto label01;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "description", r43);

     label01:
        i2 = 0;

     label02:
        $r44 = r0.<android.hardware.display.BrightnessConfiguration: float[] mLux>;

        $i3 = lengthof $r44;

        if i2 >= $i3 goto label03;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "brightness-point");

        $r35 = r0.<android.hardware.display.BrightnessConfiguration: float[] mLux>;

        $f4 = $r35[i2];

        $r36 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "lux", $r36);

        $r38 = r0.<android.hardware.display.BrightnessConfiguration: float[] mNits>;

        $f5 = $r38[i2];

        $r39 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nits", $r39);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "brightness-point");

        i2 = i2 + 1;

        goto label02;

     label03:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "brightness-curve");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "brightness-corrections");

        $r5 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByPackageName>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r45 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r28 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.util.Map$Entry) $r28;

        $r29 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getKey()>();

        r47 = (java.lang.String) $r29;

        $r30 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getValue()>();

        r48 = (android.hardware.display.BrightnessCorrection) $r30;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "brightness-correction");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "package-name", r47);

        virtualinvoke r48.<android.hardware.display.BrightnessCorrection: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "brightness-correction");

        goto label04;

     label05:
        $r7 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByCategory>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        r49 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r20 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        r50 = (java.util.Map$Entry) $r20;

        $r21 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (java.lang.Integer) $r21;

        i4 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        $r23 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getValue()>();

        r51 = (android.hardware.display.BrightnessCorrection) $r23;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "brightness-correction");

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "category", $r25);

        virtualinvoke r51.<android.hardware.display.BrightnessCorrection: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "brightness-correction");

        goto label06;

     label07:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "brightness-corrections");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "brightness-params");

        $z2 = r0.<android.hardware.display.BrightnessConfiguration: boolean mShouldCollectColorSamples>;

        if $z2 == 0 goto label08;

        $r18 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "collect-color", $r18);

     label08:
        l0 = r0.<android.hardware.display.BrightnessConfiguration: long mShortTermModelTimeout>;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label09;

        $r16 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "model-timeout", $r16);

     label09:
        $f0 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier>;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z3 != 0 goto label10;

        $f3 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier>;

        $r14 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "model-lower-bound", $r14);

     label10:
        $f1 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelUpperLuxMultiplier>;

        $z4 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z4 != 0 goto label11;

        $f2 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelUpperLuxMultiplier>;

        $r12 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "model-upper-bound", $r12);

     label11:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "brightness-params");

        return;
    }

    public boolean shouldCollectColorSamples()
    {
        android.hardware.display.BrightnessConfiguration r0;
        boolean $z0;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        $z0 = r0.<android.hardware.display.BrightnessConfiguration: boolean mShouldCollectColorSamples>;

        return $z0;
    }

    public java.lang.String toString()
    {
        android.hardware.display.BrightnessConfiguration r0;
        int i0, i4;
        java.lang.StringBuilder $r2, $r10, $r17, $r22, $r27, $r34, $r44;
        float[] $r3, $r56, $r59;
        java.util.Map $r5, $r7;
        java.util.Set $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r13, $r16, $r20, $r25, $r30, $r41, $r47, $r53, r69;
        long $l1, $l3;
        byte $b2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.Object $r33, $r35, $r38, $r43, $r46, $r50;
        java.util.Iterator r63, r66;
        java.util.Map$Entry r64, r67;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("BrightnessConfiguration{[");

        $r3 = r0.<android.hardware.display.BrightnessConfiguration: float[] mLux>;

        i0 = lengthof $r3;

        i4 = 0;

     label01:
        if i4 >= i0 goto label03;

        if i4 == 0 goto label02;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label02:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r56 = r0.<android.hardware.display.BrightnessConfiguration: float[] mLux>;

        $f4 = $r56[i4];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r59 = r0.<android.hardware.display.BrightnessConfiguration: float[] mNits>;

        $f5 = $r59[i4];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        i4 = i4 + 1;

        goto label01;

     label03:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], {");

        $r5 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByPackageName>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r63 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r43 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>();

        r64 = (java.util.Map$Entry) $r43;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r46 = interfaceinvoke r64.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r47 = (java.lang.String) $r46;

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r50 = interfaceinvoke r64.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r53 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        goto label04;

     label05:
        $r7 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByCategory>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        r66 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r66.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r33 = interfaceinvoke r66.<java.util.Iterator: java.lang.Object next()>();

        r67 = (java.util.Map$Entry) $r33;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = interfaceinvoke r67.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r38 = interfaceinvoke r67.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r41 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        goto label06;

     label07:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, \'");

        r69 = r0.<android.hardware.display.BrightnessConfiguration: java.lang.String mDescription>;

        if r69 == null goto label08;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

     label08:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", shouldCollectColorSamples = ");

        $z2 = r0.<android.hardware.display.BrightnessConfiguration: boolean mShouldCollectColorSamples>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $l1 = r0.<android.hardware.display.BrightnessConfiguration: long mShortTermModelTimeout>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label09;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", shortTermModelTimeout = ");

        $l3 = r0.<android.hardware.display.BrightnessConfiguration: long mShortTermModelTimeout>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

     label09:
        $f0 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier>;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z3 != 0 goto label10;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", shortTermModelLowerLuxMultiplier = ");

        $f3 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label10:
        $f1 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier>;

        $z4 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z4 != 0 goto label11;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", shortTermModelUpperLuxMultiplier = ");

        $f2 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelUpperLuxMultiplier>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

     label11:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'}");

        $r16 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.hardware.display.BrightnessConfiguration r0;
        android.os.Parcel r1;
        int i0, i1, $i2, $i3;
        float[] $r2, $r3;
        java.util.Map $r4, $r5, $r7, $r8;
        java.util.Set $r6, $r9;
        boolean $z0, $z1, $z2;
        java.lang.String $r10, r20;
        long $l4;
        float $f0, $f1;
        java.lang.Object $r11, $r12, $r14, $r15, $r16, $r17;
        java.lang.Integer $r13;
        java.util.Iterator r18, r22;
        java.util.Map$Entry r19, r23;
        android.hardware.display.BrightnessCorrection r21, r24;

        r0 := @this: android.hardware.display.BrightnessConfiguration;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.hardware.display.BrightnessConfiguration: float[] mLux>;

        virtualinvoke r1.<android.os.Parcel: void writeFloatArray(float[])>($r2);

        $r3 = r0.<android.hardware.display.BrightnessConfiguration: float[] mNits>;

        virtualinvoke r1.<android.os.Parcel: void writeFloatArray(float[])>($r3);

        $r4 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByPackageName>;

        $i2 = interfaceinvoke $r4.<java.util.Map: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r5 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByPackageName>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r18 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r15 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.util.Map$Entry) $r15;

        $r16 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();

        r20 = (java.lang.String) $r16;

        $r17 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getValue()>();

        r21 = (android.hardware.display.BrightnessCorrection) $r17;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r20);

        virtualinvoke r21.<android.hardware.display.BrightnessCorrection: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        goto label1;

     label2:
        $r7 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByCategory>;

        $i3 = interfaceinvoke $r7.<java.util.Map: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r8 = r0.<android.hardware.display.BrightnessConfiguration: java.util.Map mCorrectionsByCategory>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        r22 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r11 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.Integer) $r12;

        i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r14 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        r24 = (android.hardware.display.BrightnessCorrection) $r14;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r24.<android.hardware.display.BrightnessCorrection: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        goto label3;

     label4:
        $r10 = r0.<android.hardware.display.BrightnessConfiguration: java.lang.String mDescription>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r10);

        $z2 = r0.<android.hardware.display.BrightnessConfiguration: boolean mShouldCollectColorSamples>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $l4 = r0.<android.hardware.display.BrightnessConfiguration: long mShortTermModelTimeout>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $f0 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelLowerLuxMultiplier>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.hardware.display.BrightnessConfiguration: float mShortTermModelUpperLuxMultiplier>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        return;
    }
}
