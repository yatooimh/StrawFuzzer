public final class android.hardware.display.ColorDisplayManager extends java.lang.Object
{
    public static final int AUTO_MODE_CUSTOM_TIME;
    public static final int AUTO_MODE_DISABLED;
    public static final int AUTO_MODE_TWILIGHT;
    public static final int CAPABILITY_HARDWARE_ACCELERATION_GLOBAL;
    public static final int CAPABILITY_HARDWARE_ACCELERATION_PER_APP;
    public static final int CAPABILITY_NONE;
    public static final int CAPABILITY_PROTECTED_CONTENT;
    public static final int COLOR_MODE_AUTOMATIC;
    public static final int COLOR_MODE_BOOSTED;
    public static final int COLOR_MODE_NATURAL;
    public static final int COLOR_MODE_SATURATED;
    public static final int VENDOR_COLOR_MODE_RANGE_MAX;
    public static final int VENDOR_COLOR_MODE_RANGE_MIN;
    private final android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager;
    private com.android.internal.logging.MetricsLogger mMetricsLogger;

    public void <init>()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal getInstance()>();

        r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager> = $r1;

        return;
    }

    public static boolean areAccessibilityTransformsEnabled(android.content.Context)
    {
        int $i0, $i1;
        android.content.Context r0;
        android.content.ContentResolver r1;
        boolean z0;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 0;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "accessibility_display_inversion_enabled", 0);

        if $i0 == 1 goto label1;

        $i1 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "accessibility_display_daltonizer_enabled", 0);

        if $i1 != 1 goto label2;

     label1:
        z0 = 1;

     label2:
        return z0;
    }

    public static int getMaximumColorTemperature(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getInteger(int)>(17694861);

        return $i0;
    }

    private com.android.internal.logging.MetricsLogger getMetricsLogger()
    {
        android.hardware.display.ColorDisplayManager r0;
        com.android.internal.logging.MetricsLogger $r1, $r2, $r3;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        if $r1 != null goto label1;

        $r3 = new com.android.internal.logging.MetricsLogger;

        specialinvoke $r3.<com.android.internal.logging.MetricsLogger: void <init>()>();

        r0.<android.hardware.display.ColorDisplayManager: com.android.internal.logging.MetricsLogger mMetricsLogger> = $r3;

     label1:
        $r2 = r0.<android.hardware.display.ColorDisplayManager: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        return $r2;
    }

    public static int getMinimumColorTemperature(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getInteger(int)>(17694862);

        return $i0;
    }

    public static boolean isColorTransformAccelerated(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>(17891516);

        return $z0;
    }

    public static boolean isDisplayWhiteBalanceAvailable(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>(17891417);

        return $z0;
    }

    public static boolean isNightDisplayAvailable(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>(17891494);

        return $z0;
    }

    public int getColorMode()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        int $i0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $i0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getColorMode()>();

        return $i0;
    }

    public int getNightDisplayAutoMode()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        int $i0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $i0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getNightDisplayAutoMode()>();

        return $i0;
    }

    public int getNightDisplayAutoModeRaw()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        int $i0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $i0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getNightDisplayAutoModeRaw()>();

        return $i0;
    }

    public int getNightDisplayColorTemperature()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        int $i0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $i0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getNightDisplayColorTemperature()>();

        return $i0;
    }

    public java.time.LocalTime getNightDisplayCustomEndTime()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        android.hardware.display.Time $r2;
        java.time.LocalTime $r3;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $r2 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: android.hardware.display.Time getNightDisplayCustomEndTime()>();

        $r3 = virtualinvoke $r2.<android.hardware.display.Time: java.time.LocalTime getLocalTime()>();

        return $r3;
    }

    public java.time.LocalTime getNightDisplayCustomStartTime()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        android.hardware.display.Time $r2;
        java.time.LocalTime $r3;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $r2 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: android.hardware.display.Time getNightDisplayCustomStartTime()>();

        $r3 = virtualinvoke $r2.<android.hardware.display.Time: java.time.LocalTime getLocalTime()>();

        return $r3;
    }

    public int getTransformCapabilities()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        int $i0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $i0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getTransformCapabilities()>();

        return $i0;
    }

    public boolean isDeviceColorManaged()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        boolean $z0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $z0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isDeviceColorManaged()>();

        return $z0;
    }

    public boolean isDisplayWhiteBalanceEnabled()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        boolean $z0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $z0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isDisplayWhiteBalanceEnabled()>();

        return $z0;
    }

    public boolean isNightDisplayActivated()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        boolean $z0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $z0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isNightDisplayActivated()>();

        return $z0;
    }

    public boolean isSaturationActivated()
    {
        android.hardware.display.ColorDisplayManager r0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        boolean $z0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $z0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean isSaturationActivated()>();

        return $z0;
    }

    public boolean setAppSaturationLevel(java.lang.String, int)
    {
        android.hardware.display.ColorDisplayManager r0;
        java.lang.String r1;
        int i0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r2;
        boolean $z0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $z0 = virtualinvoke $r2.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setAppSaturationLevel(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public void setColorMode(int)
    {
        android.hardware.display.ColorDisplayManager r0;
        int i0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: void setColorMode(int)>(i0);

        return;
    }

    public boolean setDisplayWhiteBalanceEnabled(boolean)
    {
        android.hardware.display.ColorDisplayManager r0;
        boolean z0, $z1;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $z1 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setDisplayWhiteBalanceEnabled(boolean)>(z0);

        return $z1;
    }

    public boolean setNightDisplayActivated(boolean)
    {
        android.hardware.display.ColorDisplayManager r0;
        boolean z0, $z1;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $z1 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setNightDisplayActivated(boolean)>(z0);

        return $z1;
    }

    public boolean setNightDisplayAutoMode(int)
    {
        android.hardware.display.ColorDisplayManager r0;
        int i0, $i1;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r2, $r12;
        boolean $z0;
        com.android.internal.logging.MetricsLogger $r3;
        android.metrics.LogMaker $r4, $r5, $r6;
        java.lang.StringBuilder $r7;
        java.lang.IllegalArgumentException $r10;
        java.lang.String $r11;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid autoMode: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        $r12 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $i1 = virtualinvoke $r12.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: int getNightDisplayAutoMode()>();

        if $i1 == i0 goto label3;

        $r3 = specialinvoke r0.<android.hardware.display.ColorDisplayManager: com.android.internal.logging.MetricsLogger getMetricsLogger()>();

        $r4 = new android.metrics.LogMaker;

        specialinvoke $r4.<android.metrics.LogMaker: void <init>(int)>(1309);

        $r5 = virtualinvoke $r4.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(4);

        $r6 = virtualinvoke $r5.<android.metrics.LogMaker: android.metrics.LogMaker setSubtype(int)>(i0);

        virtualinvoke $r3.<com.android.internal.logging.MetricsLogger: void write(android.metrics.LogMaker)>($r6);

     label3:
        $r2 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $z0 = virtualinvoke $r2.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setNightDisplayAutoMode(int)>(i0);

        return $z0;
    }

    public boolean setNightDisplayColorTemperature(int)
    {
        android.hardware.display.ColorDisplayManager r0;
        int i0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        boolean $z0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $z0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setNightDisplayColorTemperature(int)>(i0);

        return $z0;
    }

    public boolean setNightDisplayCustomEndTime(java.time.LocalTime)
    {
        android.hardware.display.ColorDisplayManager r0;
        java.time.LocalTime r1;
        java.lang.IllegalArgumentException $r2;
        com.android.internal.logging.MetricsLogger $r3;
        android.metrics.LogMaker $r4, $r5, $r6;
        android.hardware.display.Time $r7;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r8;
        boolean $z0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        r1 := @parameter0: java.time.LocalTime;

        if r1 == null goto label1;

        $r3 = specialinvoke r0.<android.hardware.display.ColorDisplayManager: com.android.internal.logging.MetricsLogger getMetricsLogger()>();

        $r4 = new android.metrics.LogMaker;

        specialinvoke $r4.<android.metrics.LogMaker: void <init>(int)>(1310);

        $r5 = virtualinvoke $r4.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(4);

        $r6 = virtualinvoke $r5.<android.metrics.LogMaker: android.metrics.LogMaker setSubtype(int)>(1);

        virtualinvoke $r3.<com.android.internal.logging.MetricsLogger: void write(android.metrics.LogMaker)>($r6);

        $r8 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $r7 = new android.hardware.display.Time;

        specialinvoke $r7.<android.hardware.display.Time: void <init>(java.time.LocalTime)>(r1);

        $z0 = virtualinvoke $r8.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setNightDisplayCustomEndTime(android.hardware.display.Time)>($r7);

        return $z0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("endTime cannot be null");

        throw $r2;
    }

    public boolean setNightDisplayCustomStartTime(java.time.LocalTime)
    {
        android.hardware.display.ColorDisplayManager r0;
        java.time.LocalTime r1;
        java.lang.IllegalArgumentException $r2;
        com.android.internal.logging.MetricsLogger $r3;
        android.metrics.LogMaker $r4, $r5, $r6;
        android.hardware.display.Time $r7;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r8;
        boolean $z0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        r1 := @parameter0: java.time.LocalTime;

        if r1 == null goto label1;

        $r3 = specialinvoke r0.<android.hardware.display.ColorDisplayManager: com.android.internal.logging.MetricsLogger getMetricsLogger()>();

        $r4 = new android.metrics.LogMaker;

        specialinvoke $r4.<android.metrics.LogMaker: void <init>(int)>(1310);

        $r5 = virtualinvoke $r4.<android.metrics.LogMaker: android.metrics.LogMaker setType(int)>(4);

        $r6 = virtualinvoke $r5.<android.metrics.LogMaker: android.metrics.LogMaker setSubtype(int)>(0);

        virtualinvoke $r3.<com.android.internal.logging.MetricsLogger: void write(android.metrics.LogMaker)>($r6);

        $r8 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $r7 = new android.hardware.display.Time;

        specialinvoke $r7.<android.hardware.display.Time: void <init>(java.time.LocalTime)>(r1);

        $z0 = virtualinvoke $r8.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setNightDisplayCustomStartTime(android.hardware.display.Time)>($r7);

        return $z0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("startTime cannot be null");

        throw $r2;
    }

    public boolean setSaturationLevel(int)
    {
        android.hardware.display.ColorDisplayManager r0;
        int i0;
        android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal $r1;
        boolean $z0;

        r0 := @this: android.hardware.display.ColorDisplayManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.display.ColorDisplayManager: android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal mManager>;

        $z0 = virtualinvoke $r1.<android.hardware.display.ColorDisplayManager$ColorDisplayManagerInternal: boolean setSaturationLevel(int)>(i0);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.hardware.display.ColorDisplayManager: int VENDOR_COLOR_MODE_RANGE_MIN> = 256;

        <android.hardware.display.ColorDisplayManager: int VENDOR_COLOR_MODE_RANGE_MAX> = 511;

        <android.hardware.display.ColorDisplayManager: int COLOR_MODE_SATURATED> = 2;

        <android.hardware.display.ColorDisplayManager: int COLOR_MODE_NATURAL> = 0;

        <android.hardware.display.ColorDisplayManager: int COLOR_MODE_BOOSTED> = 1;

        <android.hardware.display.ColorDisplayManager: int COLOR_MODE_AUTOMATIC> = 3;

        <android.hardware.display.ColorDisplayManager: int CAPABILITY_PROTECTED_CONTENT> = 1;

        <android.hardware.display.ColorDisplayManager: int CAPABILITY_NONE> = 0;

        <android.hardware.display.ColorDisplayManager: int CAPABILITY_HARDWARE_ACCELERATION_PER_APP> = 4;

        <android.hardware.display.ColorDisplayManager: int CAPABILITY_HARDWARE_ACCELERATION_GLOBAL> = 2;

        <android.hardware.display.ColorDisplayManager: int AUTO_MODE_TWILIGHT> = 2;

        <android.hardware.display.ColorDisplayManager: int AUTO_MODE_DISABLED> = 0;

        <android.hardware.display.ColorDisplayManager: int AUTO_MODE_CUSTOM_TIME> = 1;

        return;
    }
}
