public final class android.hardware.display.DisplayManager extends java.lang.Object
{
    public static final java.lang.String ACTION_WIFI_DISPLAY_STATUS_CHANGED;
    private static final boolean DEBUG;
    public static final java.lang.String DISPLAY_CATEGORY_PRESENTATION;
    public static final java.lang.String EXTRA_WIFI_DISPLAY_STATUS;
    private static final java.lang.String TAG;
    public static final int VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR;
    public static final int VIRTUAL_DISPLAY_FLAG_CAN_SHOW_WITH_INSECURE_KEYGUARD;
    public static final int VIRTUAL_DISPLAY_FLAG_DESTROY_CONTENT_ON_REMOVAL;
    public static final int VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY;
    public static final int VIRTUAL_DISPLAY_FLAG_PRESENTATION;
    public static final int VIRTUAL_DISPLAY_FLAG_PUBLIC;
    public static final int VIRTUAL_DISPLAY_FLAG_ROTATES_WITH_CONTENT;
    public static final int VIRTUAL_DISPLAY_FLAG_SECURE;
    public static final int VIRTUAL_DISPLAY_FLAG_SHOULD_SHOW_SYSTEM_DECORATIONS;
    public static final int VIRTUAL_DISPLAY_FLAG_SUPPORTS_TOUCH;
    public static final int VIRTUAL_DISPLAY_FLAG_TRUSTED;
    private final android.content.Context mContext;
    private final android.util.SparseArray mDisplays;
    private final android.hardware.display.DisplayManagerGlobal mGlobal;
    private final java.lang.Object mLock;
    private final java.util.ArrayList mTempDisplays;

    public void <init>(android.content.Context)
    {
        android.hardware.display.DisplayManager r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.util.SparseArray $r3;
        java.util.ArrayList $r4;
        android.hardware.display.DisplayManagerGlobal $r5;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.hardware.display.DisplayManager: java.lang.Object mLock> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.hardware.display.DisplayManager: android.util.SparseArray mDisplays> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays> = $r4;

        r0.<android.hardware.display.DisplayManager: android.content.Context mContext> = r1;

        $r5 = staticinvoke <android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>();

        r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal> = $r5;

        return;
    }

    private void addAllDisplaysLocked(java.util.ArrayList, int[])
    {
        android.hardware.display.DisplayManager r0;
        java.util.ArrayList r1;
        int[] r2;
        android.view.Display r3;
        int $i0, $i1, i2;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: int[];

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label3;

        $i1 = r2[i2];

        r3 = specialinvoke r0.<android.hardware.display.DisplayManager: android.view.Display getOrCreateDisplayLocked(int,boolean)>($i1, 1);

        if r3 == null goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void addPresentationDisplaysLocked(java.util.ArrayList, int[], int)
    {
        android.hardware.display.DisplayManager r0;
        java.util.ArrayList r1;
        int[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.view.Display r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        i6 = 0;

     label1:
        $i1 = lengthof r2;

        if i6 >= $i1 goto label3;

        $i2 = r2[i6];

        r3 = specialinvoke r0.<android.hardware.display.DisplayManager: android.view.Display getOrCreateDisplayLocked(int,boolean)>($i2, 1);

        if r3 == null goto label2;

        $i3 = virtualinvoke r3.<android.view.Display: int getFlags()>();

        $i4 = $i3 & 8;

        if $i4 == 0 goto label2;

        $i5 = virtualinvoke r3.<android.view.Display: int getType()>();

        if $i5 != i0 goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        return;
    }

    private android.view.Display getOrCreateDisplayLocked(int, boolean)
    {
        android.hardware.display.DisplayManager r0;
        int i0, $i1;
        boolean z0, $z1;
        android.util.SparseArray $r1, $r5;
        java.lang.Object $r2;
        android.content.Context $r3, $r6;
        android.hardware.display.DisplayManagerGlobal $r4;
        android.view.Display r7, r9, r10;
        android.content.res.Resources r8;

        r0 := @this: android.hardware.display.DisplayManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.hardware.display.DisplayManager: android.util.SparseArray mDisplays>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r7 = (android.view.Display) $r2;

        if r7 != null goto label4;

        $r3 = r0.<android.hardware.display.DisplayManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r3.<android.content.Context: int getDisplayId()>();

        if $i1 != i0 goto label1;

        $r6 = r0.<android.hardware.display.DisplayManager: android.content.Context mContext>;

        r8 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        goto label2;

     label1:
        r8 = null;

     label2:
        $r4 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        r9 = virtualinvoke $r4.<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.content.res.Resources)>(i0, r8);

        r10 = r9;

        if r9 == null goto label3;

        $r5 = r0.<android.hardware.display.DisplayManager: android.util.SparseArray mDisplays>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r9);

        r10 = r9;

     label3:
        goto label5;

     label4:
        r10 = r7;

        if z0 != 0 goto label3;

        r10 = r7;

        $z1 = virtualinvoke r7.<android.view.Display: boolean isValid()>();

        if $z1 != 0 goto label3;

        r10 = null;

     label5:
        return r10;
    }

    public void connectWifiDisplay(java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1;
        android.hardware.display.DisplayManagerGlobal $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r2.<android.hardware.display.DisplayManagerGlobal: void connectWifiDisplay(java.lang.String)>(r1);

        return;
    }

    public android.hardware.display.VirtualDisplay createVirtualDisplay(android.media.projection.MediaProjection, android.hardware.display.VirtualDisplayConfig, android.hardware.display.VirtualDisplay$Callback, android.os.Handler)
    {
        android.hardware.display.DisplayManager r0;
        android.media.projection.MediaProjection r1;
        android.hardware.display.VirtualDisplayConfig r2;
        android.hardware.display.VirtualDisplay$Callback r3;
        android.os.Handler r4;
        android.content.Context $r5;
        android.hardware.display.DisplayManagerGlobal $r6;
        android.hardware.display.VirtualDisplay $r7;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.media.projection.MediaProjection;

        r2 := @parameter1: android.hardware.display.VirtualDisplayConfig;

        r3 := @parameter2: android.hardware.display.VirtualDisplay$Callback;

        r4 := @parameter3: android.os.Handler;

        $r6 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r5 = r0.<android.hardware.display.DisplayManager: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.hardware.display.DisplayManagerGlobal: android.hardware.display.VirtualDisplay createVirtualDisplay(android.content.Context,android.media.projection.MediaProjection,android.hardware.display.VirtualDisplayConfig,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)>($r5, r1, r2, r3, r4);

        return $r7;
    }

    public android.hardware.display.VirtualDisplay createVirtualDisplay(android.media.projection.MediaProjection, java.lang.String, int, int, int, android.view.Surface, int, android.hardware.display.VirtualDisplay$Callback, android.os.Handler, java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        android.media.projection.MediaProjection r1;
        int i0, i1, i2, i3;
        android.view.Surface r2;
        android.hardware.display.VirtualDisplay$Callback r3;
        android.os.Handler r4;
        java.lang.String r5, r12;
        android.hardware.display.VirtualDisplayConfig$Builder $r6;
        android.hardware.display.VirtualDisplayConfig $r8;
        android.hardware.display.VirtualDisplay $r9;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.media.projection.MediaProjection;

        r12 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 := @parameter5: android.view.Surface;

        i3 := @parameter6: int;

        r3 := @parameter7: android.hardware.display.VirtualDisplay$Callback;

        r4 := @parameter8: android.os.Handler;

        r5 := @parameter9: java.lang.String;

        $r6 = new android.hardware.display.VirtualDisplayConfig$Builder;

        specialinvoke $r6.<android.hardware.display.VirtualDisplayConfig$Builder: void <init>(java.lang.String,int,int,int)>(r12, i0, i1, i2);

        virtualinvoke $r6.<android.hardware.display.VirtualDisplayConfig$Builder: android.hardware.display.VirtualDisplayConfig$Builder setFlags(int)>(i3);

        if r5 == null goto label1;

        virtualinvoke $r6.<android.hardware.display.VirtualDisplayConfig$Builder: android.hardware.display.VirtualDisplayConfig$Builder setUniqueId(java.lang.String)>(r5);

     label1:
        if r2 == null goto label2;

        virtualinvoke $r6.<android.hardware.display.VirtualDisplayConfig$Builder: android.hardware.display.VirtualDisplayConfig$Builder setSurface(android.view.Surface)>(r2);

     label2:
        $r8 = virtualinvoke $r6.<android.hardware.display.VirtualDisplayConfig$Builder: android.hardware.display.VirtualDisplayConfig build()>();

        $r9 = virtualinvoke r0.<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(android.media.projection.MediaProjection,android.hardware.display.VirtualDisplayConfig,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)>(r1, $r8, r3, r4);

        return $r9;
    }

    public android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String, int, int, int, android.view.Surface, int)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1;
        int i0, i1, i2, i3;
        android.view.Surface r2;
        android.hardware.display.VirtualDisplay $r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.Surface;

        i3 := @parameter5: int;

        $r3 = virtualinvoke r0.<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)>(r1, i0, i1, i2, r2, i3, null, null);

        return $r3;
    }

    public android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String, int, int, int, android.view.Surface, int, android.hardware.display.VirtualDisplay$Callback, android.os.Handler)
    {
        android.hardware.display.DisplayManager r0;
        int i0, i1, i2, i3;
        android.view.Surface r1;
        android.hardware.display.VirtualDisplay$Callback r2;
        android.os.Handler r3;
        android.hardware.display.VirtualDisplayConfig$Builder $r4;
        android.hardware.display.VirtualDisplayConfig $r6;
        android.hardware.display.VirtualDisplay $r7;
        java.lang.String r9;

        r0 := @this: android.hardware.display.DisplayManager;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: android.view.Surface;

        i3 := @parameter5: int;

        r2 := @parameter6: android.hardware.display.VirtualDisplay$Callback;

        r3 := @parameter7: android.os.Handler;

        $r4 = new android.hardware.display.VirtualDisplayConfig$Builder;

        specialinvoke $r4.<android.hardware.display.VirtualDisplayConfig$Builder: void <init>(java.lang.String,int,int,int)>(r9, i0, i1, i2);

        virtualinvoke $r4.<android.hardware.display.VirtualDisplayConfig$Builder: android.hardware.display.VirtualDisplayConfig$Builder setFlags(int)>(i3);

        if r1 == null goto label1;

        virtualinvoke $r4.<android.hardware.display.VirtualDisplayConfig$Builder: android.hardware.display.VirtualDisplayConfig$Builder setSurface(android.view.Surface)>(r1);

     label1:
        $r6 = virtualinvoke $r4.<android.hardware.display.VirtualDisplayConfig$Builder: android.hardware.display.VirtualDisplayConfig build()>();

        $r7 = virtualinvoke r0.<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(android.media.projection.MediaProjection,android.hardware.display.VirtualDisplayConfig,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)>(null, $r6, r2, r3);

        return $r7;
    }

    public void disconnectWifiDisplay()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void disconnectWifiDisplay()>();

        return;
    }

    public void forgetWifiDisplay(java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1;
        android.hardware.display.DisplayManagerGlobal $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r2.<android.hardware.display.DisplayManagerGlobal: void forgetWifiDisplay(java.lang.String)>(r1);

        return;
    }

    public java.util.List getAmbientBrightnessStats()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;
        java.util.List $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r2 = virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: java.util.List getAmbientBrightnessStats()>();

        return $r2;
    }

    public android.hardware.display.BrightnessConfiguration getBrightnessConfiguration()
    {
        android.hardware.display.DisplayManager r0;
        android.content.Context $r1;
        int $i0;
        android.hardware.display.BrightnessConfiguration $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int getUserId()>();

        $r2 = virtualinvoke r0.<android.hardware.display.DisplayManager: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)>($i0);

        return $r2;
    }

    public android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)
    {
        android.hardware.display.DisplayManager r0;
        int i0;
        android.hardware.display.DisplayManagerGlobal $r1;
        android.hardware.display.BrightnessConfiguration $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r2 = virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)>(i0);

        return $r2;
    }

    public java.util.List getBrightnessEvents()
    {
        android.hardware.display.DisplayManager r0;
        android.content.Context $r1;
        android.hardware.display.DisplayManagerGlobal $r2;
        java.lang.String $r3;
        java.util.List $r4;

        r0 := @this: android.hardware.display.DisplayManager;

        $r2 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r1 = r0.<android.hardware.display.DisplayManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        $r4 = virtualinvoke $r2.<android.hardware.display.DisplayManagerGlobal: java.util.List getBrightnessEvents(java.lang.String)>($r3);

        return $r4;
    }

    public android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;
        android.hardware.display.BrightnessConfiguration $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r2 = virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()>();

        return $r2;
    }

    public android.view.Display getDisplay(int)
    {
        android.hardware.display.DisplayManager r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.view.Display r3;

        r0 := @this: android.hardware.display.DisplayManager;

        i0 := @parameter0: int;

        r1 = r0.<android.hardware.display.DisplayManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<android.hardware.display.DisplayManager: android.view.Display getOrCreateDisplayLocked(int,boolean)>(i0, 0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.view.Display[] getDisplays()
    {
        android.hardware.display.DisplayManager r0;
        android.view.Display[] $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = virtualinvoke r0.<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)>(null);

        return $r1;
    }

    public android.view.Display[] getDisplays(java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        int[] r1;
        java.lang.Object r2;
        android.hardware.display.DisplayManagerGlobal $r3;
        boolean $z0;
        java.util.ArrayList $r4, $r5, $r6, $r7, $r8, $r10, $r13, $r14, $r18;
        java.lang.Throwable $r9, $r11;
        java.lang.String r12;
        int $i0;
        android.view.Display[] $r15, r17;
        java.lang.Object[] $r16;

        r0 := @this: android.hardware.display.DisplayManager;

        r12 := @parameter0: java.lang.String;

        $r3 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        r1 = virtualinvoke $r3.<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()>();

        r2 = r0.<android.hardware.display.DisplayManager: java.lang.Object mLock>;

        entermonitor r2;

        if r12 != null goto label03;

     label01:
        $r8 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        specialinvoke r0.<android.hardware.display.DisplayManager: void addAllDisplaysLocked(java.util.ArrayList,int[])>($r8, r1);

     label02:
        goto label04;

     label03:
        $z0 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("android.hardware.display.category.PRESENTATION");

        if $z0 == 0 goto label04;

        $r4 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        specialinvoke r0.<android.hardware.display.DisplayManager: void addPresentationDisplaysLocked(java.util.ArrayList,int[],int)>($r4, r1, 3);

        $r5 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        specialinvoke r0.<android.hardware.display.DisplayManager: void addPresentationDisplaysLocked(java.util.ArrayList,int[],int)>($r5, r1, 2);

        $r6 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        specialinvoke r0.<android.hardware.display.DisplayManager: void addPresentationDisplaysLocked(java.util.ArrayList,int[],int)>($r6, r1, 4);

        $r7 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        specialinvoke r0.<android.hardware.display.DisplayManager: void addPresentationDisplaysLocked(java.util.ArrayList,int[],int)>($r7, r1, 5);

     label04:
        $r13 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        $r14 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        $i0 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        $r15 = newarray (android.view.Display)[$i0];

        $r16 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r15);

        r17 = (android.view.Display[]) $r16;

     label05:
        $r18 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        virtualinvoke $r18.<java.util.ArrayList: void clear()>();

        exitmonitor r2;

     label06:
        return r17;

     label07:
        $r9 := @caughtexception;

     label08:
        $r10 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        virtualinvoke $r10.<java.util.ArrayList: void clear()>();

     label09:
        throw $r9;

     label10:
        $r11 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.util.Pair getMinimumBrightnessCurve()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;
        android.util.Pair $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r2 = virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: android.util.Pair getMinimumBrightnessCurve()>();

        return $r2;
    }

    public android.graphics.Point getStableDisplaySize()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;
        android.graphics.Point $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r2 = virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: android.graphics.Point getStableDisplaySize()>();

        return $r2;
    }

    public android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;
        android.hardware.display.WifiDisplayStatus $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r2 = virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>();

        return $r2;
    }

    public boolean isMinimalPostProcessingRequested(int)
    {
        android.hardware.display.DisplayManager r0;
        int i0;
        android.hardware.display.DisplayManagerGlobal $r1;
        boolean $z0;

        r0 := @this: android.hardware.display.DisplayManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $z0 = virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: boolean isMinimalPostProcessingRequested(int)>(i0);

        return $z0;
    }

    public void pauseWifiDisplay()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void pauseWifiDisplay()>();

        return;
    }

    public void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener, android.os.Handler)
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManager$DisplayListener r1;
        android.os.Handler r2;
        android.hardware.display.DisplayManagerGlobal $r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.hardware.display.DisplayManager$DisplayListener;

        r2 := @parameter1: android.os.Handler;

        $r3 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r3.<android.hardware.display.DisplayManagerGlobal: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>(r1, r2);

        return;
    }

    public void renameWifiDisplay(java.lang.String, java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1, r2;
        android.hardware.display.DisplayManagerGlobal $r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r3.<android.hardware.display.DisplayManagerGlobal: void renameWifiDisplay(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void resumeWifiDisplay()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void resumeWifiDisplay()>();

        return;
    }

    public void setBrightnessConfiguration(android.hardware.display.BrightnessConfiguration)
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.BrightnessConfiguration r1;
        android.content.Context $r2, $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.hardware.display.BrightnessConfiguration;

        $r2 = r0.<android.hardware.display.DisplayManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        $r3 = r0.<android.hardware.display.DisplayManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r0.<android.hardware.display.DisplayManager: void setBrightnessConfigurationForUser(android.hardware.display.BrightnessConfiguration,int,java.lang.String)>(r1, $i0, $r4);

        return;
    }

    public void setBrightnessConfigurationForUser(android.hardware.display.BrightnessConfiguration, int, java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.BrightnessConfiguration r1;
        int i0;
        java.lang.String r2;
        android.hardware.display.DisplayManagerGlobal $r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.hardware.display.BrightnessConfiguration;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r3.<android.hardware.display.DisplayManagerGlobal: void setBrightnessConfigurationForUser(android.hardware.display.BrightnessConfiguration,int,java.lang.String)>(r1, i0, r2);

        return;
    }

    public void setSaturationLevel(float)
    {
        android.hardware.display.DisplayManager r0;
        float f0, $f1;
        byte $b0, $b1;
        java.lang.IllegalArgumentException $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.hardware.display.ColorDisplayManager $r4;
        int $i2;

        r0 := @this: android.hardware.display.DisplayManager;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 < 0 goto label1;

        $b1 = f0 cmpl 1.0F;

        if $b1 > 0 goto label1;

        $r2 = r0.<android.hardware.display.DisplayManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/display/ColorDisplayManager;");

        $r4 = (android.hardware.display.ColorDisplayManager) $r3;

        $f1 = 100.0F * f0;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f1);

        virtualinvoke $r4.<android.hardware.display.ColorDisplayManager: boolean setSaturationLevel(int)>($i2);

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saturation level must be between 0 and 1");

        throw $r1;
    }

    public void setTemporaryAutoBrightnessAdjustment(float)
    {
        android.hardware.display.DisplayManager r0;
        float f0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        f0 := @parameter0: float;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void setTemporaryAutoBrightnessAdjustment(float)>(f0);

        return;
    }

    public void setTemporaryBrightness(float)
    {
        android.hardware.display.DisplayManager r0;
        float f0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        f0 := @parameter0: float;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void setTemporaryBrightness(float)>(f0);

        return;
    }

    public void startWifiDisplayScan()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void startWifiDisplayScan()>();

        return;
    }

    public void stopWifiDisplayScan()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void stopWifiDisplayScan()>();

        return;
    }

    public void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManager$DisplayListener r1;
        android.hardware.display.DisplayManagerGlobal $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.hardware.display.DisplayManager$DisplayListener;

        $r2 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r2.<android.hardware.display.DisplayManagerGlobal: void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_TRUSTED> = 1024;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_SUPPORTS_TOUCH> = 64;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_SHOULD_SHOW_SYSTEM_DECORATIONS> = 512;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_SECURE> = 4;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_ROTATES_WITH_CONTENT> = 128;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_PUBLIC> = 1;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_PRESENTATION> = 2;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY> = 8;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_DESTROY_CONTENT_ON_REMOVAL> = 256;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_CAN_SHOW_WITH_INSECURE_KEYGUARD> = 32;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR> = 16;

        <android.hardware.display.DisplayManager: java.lang.String TAG> = "DisplayManager";

        <android.hardware.display.DisplayManager: java.lang.String EXTRA_WIFI_DISPLAY_STATUS> = "android.hardware.display.extra.WIFI_DISPLAY_STATUS";

        <android.hardware.display.DisplayManager: java.lang.String DISPLAY_CATEGORY_PRESENTATION> = "android.hardware.display.category.PRESENTATION";

        <android.hardware.display.DisplayManager: boolean DEBUG> = 0;

        <android.hardware.display.DisplayManager: java.lang.String ACTION_WIFI_DISPLAY_STATUS_CHANGED> = "android.hardware.display.action.WIFI_DISPLAY_STATUS_CHANGED";

        return;
    }
}
