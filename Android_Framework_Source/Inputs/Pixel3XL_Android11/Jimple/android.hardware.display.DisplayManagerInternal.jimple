public abstract class android.hardware.display.DisplayManagerInternal extends java.lang.Object
{

    public void <init>()
    {
        android.hardware.display.DisplayManagerInternal r0;

        r0 := @this: android.hardware.display.DisplayManagerInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract android.view.DisplayInfo getDisplayInfo(int);

    public abstract android.graphics.Point getDisplayPosition(int);

    public abstract android.hardware.display.DisplayedContentSample getDisplayedContentSample(int, long, long);

    public abstract android.hardware.display.DisplayedContentSamplingAttributes getDisplayedContentSamplingAttributes(int);

    public abstract void getNonOverrideDisplayInfo(int, android.view.DisplayInfo);

    public abstract void initPowerManagement(android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks, android.os.Handler, android.hardware.SensorManager);

    public abstract boolean isProximitySensorAvailable();

    public abstract void onOverlayChanged();

    public abstract void performTraversal(android.view.SurfaceControl$Transaction);

    public abstract void persistBrightnessTrackerState();

    public abstract void registerDisplayTransactionListener(android.hardware.display.DisplayManagerInternal$DisplayTransactionListener);

    public abstract boolean requestPowerState(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest, boolean);

    public abstract void setDisplayAccessUIDs(android.util.SparseArray);

    public abstract void setDisplayInfoOverrideFromWindowManager(int, android.view.DisplayInfo);

    public abstract void setDisplayOffsets(int, int, int);

    public abstract void setDisplayProperties(int, boolean, float, int, boolean, boolean);

    public abstract void setDisplayScalingDisabled(int, boolean);

    public abstract boolean setDisplayedContentSamplingEnabled(int, boolean, int, int);

    public abstract android.view.SurfaceControl$ScreenshotGraphicBuffer systemScreenshot(int);

    public abstract void unregisterDisplayTransactionListener(android.hardware.display.DisplayManagerInternal$DisplayTransactionListener);

    public abstract android.view.SurfaceControl$ScreenshotGraphicBuffer userScreenshot(int);
}
