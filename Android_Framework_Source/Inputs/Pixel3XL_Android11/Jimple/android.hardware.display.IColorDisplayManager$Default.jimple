public class android.hardware.display.IColorDisplayManager$Default extends java.lang.Object implements android.hardware.display.IColorDisplayManager
{

    public void <init>()
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return null;
    }

    public int getColorMode() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return 0;
    }

    public int getNightDisplayAutoMode() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return 0;
    }

    public int getNightDisplayAutoModeRaw() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return 0;
    }

    public int getNightDisplayColorTemperature() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return 0;
    }

    public android.hardware.display.Time getNightDisplayCustomEndTime() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return null;
    }

    public android.hardware.display.Time getNightDisplayCustomStartTime() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return null;
    }

    public int getTransformCapabilities() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return 0;
    }

    public boolean isDeviceColorManaged() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return 0;
    }

    public boolean isDisplayWhiteBalanceEnabled() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return 0;
    }

    public boolean isNightDisplayActivated() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return 0;
    }

    public boolean isSaturationActivated() throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        return 0;
    }

    public boolean setAppSaturationLevel(java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return 0;
    }

    public void setColorMode(int) throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;
        int i0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        i0 := @parameter0: int;

        return;
    }

    public boolean setDisplayWhiteBalanceEnabled(boolean) throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;
        boolean z0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        z0 := @parameter0: boolean;

        return 0;
    }

    public boolean setNightDisplayActivated(boolean) throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;
        boolean z0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        z0 := @parameter0: boolean;

        return 0;
    }

    public boolean setNightDisplayAutoMode(int) throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;
        int i0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean setNightDisplayColorTemperature(int) throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;
        int i0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean setNightDisplayCustomEndTime(android.hardware.display.Time) throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;
        android.hardware.display.Time r1;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        r1 := @parameter0: android.hardware.display.Time;

        return 0;
    }

    public boolean setNightDisplayCustomStartTime(android.hardware.display.Time) throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;
        android.hardware.display.Time r1;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        r1 := @parameter0: android.hardware.display.Time;

        return 0;
    }

    public boolean setSaturationLevel(int) throws android.os.RemoteException
    {
        android.hardware.display.IColorDisplayManager$Default r0;
        int i0;

        r0 := @this: android.hardware.display.IColorDisplayManager$Default;

        i0 := @parameter0: int;

        return 0;
    }
}
