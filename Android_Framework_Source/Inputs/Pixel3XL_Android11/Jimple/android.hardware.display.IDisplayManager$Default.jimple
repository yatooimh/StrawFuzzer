public class android.hardware.display.IDisplayManager$Default extends java.lang.Object implements android.hardware.display.IDisplayManager
{

    public void <init>()
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return null;
    }

    public void connectWifiDisplay(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public int createVirtualDisplay(android.hardware.display.VirtualDisplayConfig, android.hardware.display.IVirtualDisplayCallback, android.media.projection.IMediaProjection, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        android.hardware.display.VirtualDisplayConfig r1;
        android.hardware.display.IVirtualDisplayCallback r2;
        android.media.projection.IMediaProjection r3;
        java.lang.String r4;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: android.hardware.display.VirtualDisplayConfig;

        r2 := @parameter1: android.hardware.display.IVirtualDisplayCallback;

        r3 := @parameter2: android.media.projection.IMediaProjection;

        r4 := @parameter3: java.lang.String;

        return 0;
    }

    public void disconnectWifiDisplay() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return;
    }

    public void forgetWifiDisplay(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public android.content.pm.ParceledListSlice getAmbientBrightnessStats() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return null;
    }

    public android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        int i0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        i0 := @parameter0: int;

        return null;
    }

    public android.content.pm.ParceledListSlice getBrightnessEvents(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return null;
    }

    public int[] getDisplayIds() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return null;
    }

    public android.view.DisplayInfo getDisplayInfo(int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        int i0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        i0 := @parameter0: int;

        return null;
    }

    public android.hardware.display.Curve getMinimumBrightnessCurve() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return null;
    }

    public int getPreferredWideGamutColorSpaceId() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return 0;
    }

    public android.graphics.Point getStableDisplaySize() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return null;
    }

    public android.hardware.display.WifiDisplayStatus getWifiDisplayStatus() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return null;
    }

    public boolean isMinimalPostProcessingRequested(int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        int i0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isUidPresentOnDisplay(int, int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        int i0, i1;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public void pauseWifiDisplay() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return;
    }

    public void registerCallback(android.hardware.display.IDisplayManagerCallback) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        android.hardware.display.IDisplayManagerCallback r1;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: android.hardware.display.IDisplayManagerCallback;

        return;
    }

    public void releaseVirtualDisplay(android.hardware.display.IVirtualDisplayCallback) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        android.hardware.display.IVirtualDisplayCallback r1;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: android.hardware.display.IVirtualDisplayCallback;

        return;
    }

    public void renameWifiDisplay(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void requestColorMode(int, int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        int i0, i1;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void resizeVirtualDisplay(android.hardware.display.IVirtualDisplayCallback, int, int, int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        android.hardware.display.IVirtualDisplayCallback r1;
        int i0, i1, i2;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: android.hardware.display.IVirtualDisplayCallback;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public void resumeWifiDisplay() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return;
    }

    public void setBrightnessConfigurationForUser(android.hardware.display.BrightnessConfiguration, int, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        android.hardware.display.BrightnessConfiguration r1;
        int i0;
        java.lang.String r2;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: android.hardware.display.BrightnessConfiguration;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        return;
    }

    public void setTemporaryAutoBrightnessAdjustment(float) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        float f0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        f0 := @parameter0: float;

        return;
    }

    public void setTemporaryBrightness(float) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        float f0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        f0 := @parameter0: float;

        return;
    }

    public void setVirtualDisplayState(android.hardware.display.IVirtualDisplayCallback, boolean) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        android.hardware.display.IVirtualDisplayCallback r1;
        boolean z0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: android.hardware.display.IVirtualDisplayCallback;

        z0 := @parameter1: boolean;

        return;
    }

    public void setVirtualDisplaySurface(android.hardware.display.IVirtualDisplayCallback, android.view.Surface) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;
        android.hardware.display.IVirtualDisplayCallback r1;
        android.view.Surface r2;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        r1 := @parameter0: android.hardware.display.IVirtualDisplayCallback;

        r2 := @parameter1: android.view.Surface;

        return;
    }

    public void startWifiDisplayScan() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return;
    }

    public void stopWifiDisplayScan() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Default r0;

        r0 := @this: android.hardware.display.IDisplayManager$Default;

        return;
    }
}
