class android.hardware.display.IDisplayManager$Stub$Proxy extends java.lang.Object implements android.hardware.display.IDisplayManager
{
    public static android.hardware.display.IDisplayManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        $r1 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void connectWifiDisplay(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.display.IDisplayManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.display.IDisplayManager: void connectWifiDisplay(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int createVirtualDisplay(android.hardware.display.VirtualDisplayConfig, android.hardware.display.IVirtualDisplayCallback, android.media.projection.IMediaProjection, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.hardware.display.IVirtualDisplayCallback r1;
        android.media.projection.IMediaProjection r2;
        java.lang.String r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r11, r12;
        boolean $z0;
        android.hardware.display.IDisplayManager $r7, $r8;
        java.lang.Throwable $r9;
        android.hardware.display.VirtualDisplayConfig r10;
        int i0, i1;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r10 := @parameter0: android.hardware.display.VirtualDisplayConfig;

        r1 := @parameter1: android.hardware.display.IVirtualDisplayCallback;

        r2 := @parameter2: android.media.projection.IMediaProjection;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

     label02:
        if r10 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.hardware.display.VirtualDisplayConfig: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r11 = interfaceinvoke r1.<android.hardware.display.IVirtualDisplayCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r11 = null;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

     label11:
        r12 = null;

        if r2 == null goto label13;

     label12:
        r12 = interfaceinvoke r2.<android.media.projection.IMediaProjection: android.os.IBinder asBinder()>();

     label13:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r12);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r6 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r4, r5, 0);

        if $z0 != 0 goto label15;

        $r7 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r7 == null goto label15;

        $r8 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        i0 = interfaceinvoke $r8.<android.hardware.display.IDisplayManager: int createVirtualDisplay(android.hardware.display.VirtualDisplayConfig,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,java.lang.String)>(r10, r1, r2, r3);

     label14:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i0;

     label15:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label16:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i1;

     label17:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public void disconnectWifiDisplay() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void disconnectWifiDisplay()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void forgetWifiDisplay(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.display.IDisplayManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.display.IDisplayManager: void forgetWifiDisplay(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.content.pm.ParceledListSlice getAmbientBrightnessStats() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$ClassLoaderCreator $r4;
        java.lang.Object $r5;
        android.hardware.display.IDisplayManager $r6, $r7;
        java.lang.Throwable $r8;
        android.content.pm.ParceledListSlice r9, r10;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.display.IDisplayManager: android.content.pm.ParceledListSlice getAmbientBrightnessStats()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.content.pm.ParceledListSlice: android.os.Parcelable$ClassLoaderCreator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.content.pm.ParceledListSlice) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.display.IDisplayManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.display.BrightnessConfiguration r9, r10;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.display.IDisplayManager: android.hardware.display.BrightnessConfiguration getBrightnessConfigurationForUser(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.hardware.display.BrightnessConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.display.BrightnessConfiguration) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.content.pm.ParceledListSlice getBrightnessEvents(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$ClassLoaderCreator $r4;
        java.lang.Object $r5;
        android.hardware.display.IDisplayManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.content.pm.ParceledListSlice r10, r11;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.display.IDisplayManager: android.content.pm.ParceledListSlice getBrightnessEvents(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.content.pm.ParceledListSlice: android.os.Parcelable$ClassLoaderCreator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.content.pm.ParceledListSlice) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.display.IDisplayManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.display.BrightnessConfiguration r9, r10;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.display.IDisplayManager: android.hardware.display.BrightnessConfiguration getDefaultBrightnessConfiguration()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.display.BrightnessConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.display.BrightnessConfiguration) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int[] getDisplayIds() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.display.IDisplayManager $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.hardware.display.IDisplayManager: int[] getDisplayIds()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.view.DisplayInfo getDisplayInfo(int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.display.IDisplayManager $r6, $r7;
        java.lang.Throwable $r8;
        android.view.DisplayInfo r9, r10;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.display.IDisplayManager: android.view.DisplayInfo getDisplayInfo(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.view.DisplayInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.view.DisplayInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        return "android.hardware.display.IDisplayManager";
    }

    public android.hardware.display.Curve getMinimumBrightnessCurve() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.display.IDisplayManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.display.Curve r9, r10;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.display.IDisplayManager: android.hardware.display.Curve getMinimumBrightnessCurve()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.display.Curve: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.display.Curve) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getPreferredWideGamutColorSpaceId() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.hardware.display.IDisplayManager: int getPreferredWideGamutColorSpaceId()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.graphics.Point getStableDisplaySize() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.display.IDisplayManager $r6, $r7;
        java.lang.Throwable $r8;
        android.graphics.Point r9, r10;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.display.IDisplayManager: android.graphics.Point getStableDisplaySize()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.graphics.Point: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.graphics.Point) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.hardware.display.WifiDisplayStatus getWifiDisplayStatus() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.display.IDisplayManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.display.WifiDisplayStatus r9, r10;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.display.IDisplayManager: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.display.WifiDisplayStatus: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.display.WifiDisplayStatus) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public boolean isMinimalPostProcessingRequested(int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.hardware.display.IDisplayManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.display.IDisplayManager: boolean isMinimalPostProcessingRequested(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isUidPresentOnDisplay(int, int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.hardware.display.IDisplayManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.display.IDisplayManager: boolean isUidPresentOnDisplay(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void pauseWifiDisplay() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void pauseWifiDisplay()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void registerCallback(android.hardware.display.IDisplayManagerCallback) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.display.IDisplayManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.display.IDisplayManagerCallback r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.display.IDisplayManagerCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.display.IDisplayManagerCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.display.IDisplayManager: void registerCallback(android.hardware.display.IDisplayManagerCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void releaseVirtualDisplay(android.hardware.display.IVirtualDisplayCallback) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.display.IDisplayManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.display.IVirtualDisplayCallback r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.display.IVirtualDisplayCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.display.IVirtualDisplayCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.display.IDisplayManager: void releaseVirtualDisplay(android.hardware.display.IVirtualDisplayCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void renameWifiDisplay(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void renameWifiDisplay(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void requestColorMode(int, int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void requestColorMode(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void resizeVirtualDisplay(android.hardware.display.IVirtualDisplayCallback, int, int, int) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.display.IDisplayManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.display.IVirtualDisplayCallback r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.display.IVirtualDisplayCallback;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.display.IVirtualDisplayCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.display.IDisplayManager: void resizeVirtualDisplay(android.hardware.display.IVirtualDisplayCallback,int,int,int)>(r7, i0, i1, i2);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void resumeWifiDisplay() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void resumeWifiDisplay()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setBrightnessConfigurationForUser(android.hardware.display.BrightnessConfiguration, int, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        int i0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.display.BrightnessConfiguration r8;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r8 := @parameter0: android.hardware.display.BrightnessConfiguration;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.display.BrightnessConfiguration: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void setBrightnessConfigurationForUser(android.hardware.display.BrightnessConfiguration,int,java.lang.String)>(r8, i0, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setTemporaryAutoBrightnessAdjustment(float) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        float f0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        f0 := @parameter0: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void setTemporaryAutoBrightnessAdjustment(float)>(f0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setTemporaryBrightness(float) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        float f0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        f0 := @parameter0: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void setTemporaryBrightness(float)>(f0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setVirtualDisplayState(android.hardware.display.IVirtualDisplayCallback, boolean) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        android.hardware.display.IDisplayManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.display.IVirtualDisplayCallback r7;
        byte b0;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.display.IVirtualDisplayCallback;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.display.IVirtualDisplayCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

     label07:
        if z0 == 0 goto label08;

        b0 = 1;

        goto label09;

     label08:
        b0 = 0;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z1 != 0 goto label11;

        $r4 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r4 == null goto label11;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.display.IDisplayManager: void setVirtualDisplayState(android.hardware.display.IVirtualDisplayCallback,boolean)>(r7, z0);

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void setVirtualDisplaySurface(android.hardware.display.IVirtualDisplayCallback, android.view.Surface) throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.view.Surface r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.display.IVirtualDisplayCallback r8;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r8 := @parameter0: android.hardware.display.IVirtualDisplayCallback;

        r1 := @parameter1: android.view.Surface;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.hardware.display.IVirtualDisplayCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.Surface: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r2, r3, 0);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void setVirtualDisplaySurface(android.hardware.display.IVirtualDisplayCallback,android.view.Surface)>(r8, r1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void startWifiDisplayScan() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void startWifiDisplayScan()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void stopWifiDisplayScan() throws android.os.RemoteException
    {
        android.hardware.display.IDisplayManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.display.IDisplayManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.display.IDisplayManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.display.IDisplayManager");

        $r4 = r0.<android.hardware.display.IDisplayManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.display.IDisplayManager$Stub: android.hardware.display.IDisplayManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.display.IDisplayManager: void stopWifiDisplayScan()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
