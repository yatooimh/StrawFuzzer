public class android.hardware.face.FaceManager extends java.lang.Object implements android.hardware.biometrics.BiometricAuthenticator, android.hardware.biometrics.BiometricFaceConstants
{
    private static final boolean DEBUG;
    private static final int MSG_ACQUIRED;
    private static final int MSG_AUTHENTICATION_FAILED;
    private static final int MSG_AUTHENTICATION_SUCCEEDED;
    private static final int MSG_ENROLL_RESULT;
    private static final int MSG_ERROR;
    private static final int MSG_GET_FEATURE_COMPLETED;
    private static final int MSG_REMOVED;
    private static final int MSG_SET_FEATURE_COMPLETED;
    private static final java.lang.String TAG;
    private android.hardware.face.FaceManager$AuthenticationCallback mAuthenticationCallback;
    private final android.content.Context mContext;
    private android.hardware.biometrics.CryptoObject mCryptoObject;
    private android.hardware.face.FaceManager$EnrollmentCallback mEnrollmentCallback;
    private android.hardware.face.FaceManager$GetFeatureCallback mGetFeatureCallback;
    private android.os.Handler mHandler;
    private android.hardware.face.FaceManager$RemovalCallback mRemovalCallback;
    private android.hardware.face.Face mRemovalFace;
    private android.hardware.face.IFaceService mService;
    private android.hardware.face.IFaceServiceReceiver mServiceReceiver;
    private android.hardware.face.FaceManager$SetFeatureCallback mSetFeatureCallback;
    private android.os.IBinder mToken;

    public void <init>(android.content.Context, android.hardware.face.IFaceService)
    {
        android.hardware.face.FaceManager r0;
        android.content.Context r1;
        android.hardware.face.IFaceService r2;
        android.os.Binder $r3;
        android.hardware.face.FaceManager$1 $r4;
        android.hardware.face.FaceManager$MyHandler $r5;

        r0 := @this: android.hardware.face.FaceManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.hardware.face.IFaceService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.Binder;

        specialinvoke $r3.<android.os.Binder: void <init>()>();

        r0.<android.hardware.face.FaceManager: android.os.IBinder mToken> = $r3;

        $r4 = new android.hardware.face.FaceManager$1;

        specialinvoke $r4.<android.hardware.face.FaceManager$1: void <init>(android.hardware.face.FaceManager)>(r0);

        r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceServiceReceiver mServiceReceiver> = $r4;

        r0.<android.hardware.face.FaceManager: android.content.Context mContext> = r1;

        r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService> = r2;

        if r2 != null goto label1;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("FaceManager", "FaceAuthenticationManagerService was null");

     label1:
        $r5 = new android.hardware.face.FaceManager$MyHandler;

        specialinvoke $r5.<android.hardware.face.FaceManager$MyHandler: void <init>(android.hardware.face.FaceManager,android.content.Context,android.hardware.face.FaceManager$1)>(r0, r1, null);

        r0.<android.hardware.face.FaceManager: android.os.Handler mHandler> = $r5;

        return;
    }

    static android.os.Handler access$000(android.hardware.face.FaceManager)
    {
        android.hardware.face.FaceManager r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.hardware.face.FaceManager;

        $r1 = r0.<android.hardware.face.FaceManager: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$1000(android.hardware.face.FaceManager, long, int, int)
    {
        android.hardware.face.FaceManager r0;
        long l0;
        int i1, i2;

        r0 := @parameter0: android.hardware.face.FaceManager;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.hardware.face.FaceManager: void sendErrorResult(long,int,int)>(l0, i1, i2);

        return;
    }

    static void access$1100(android.hardware.face.FaceManager, android.hardware.face.Face, int)
    {
        android.hardware.face.FaceManager r0;
        android.hardware.face.Face r1;
        int i0;

        r0 := @parameter0: android.hardware.face.FaceManager;

        r1 := @parameter1: android.hardware.face.Face;

        i0 := @parameter2: int;

        specialinvoke r0.<android.hardware.face.FaceManager: void sendRemovedResult(android.hardware.face.Face,int)>(r1, i0);

        return;
    }

    static void access$1200(android.hardware.face.FaceManager, boolean, int)
    {
        android.hardware.face.FaceManager r0;
        boolean z0;
        int i0;

        r0 := @parameter0: android.hardware.face.FaceManager;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        specialinvoke r0.<android.hardware.face.FaceManager: void sendSetFeatureCompleted(boolean,int)>(z0, i0);

        return;
    }

    static void access$1300(android.hardware.face.FaceManager, boolean, int, boolean)
    {
        android.hardware.face.FaceManager r0;
        boolean z0, z1;
        int i0;

        r0 := @parameter0: android.hardware.face.FaceManager;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        specialinvoke r0.<android.hardware.face.FaceManager: void sendGetFeatureCompleted(boolean,int,boolean)>(z0, i0, z1);

        return;
    }

    static void access$400(android.hardware.face.FaceManager)
    {
        android.hardware.face.FaceManager r0;

        r0 := @parameter0: android.hardware.face.FaceManager;

        specialinvoke r0.<android.hardware.face.FaceManager: void cancelEnrollment()>();

        return;
    }

    static void access$500(android.hardware.face.FaceManager, android.hardware.biometrics.CryptoObject)
    {
        android.hardware.face.FaceManager r0;
        android.hardware.biometrics.CryptoObject r1;

        r0 := @parameter0: android.hardware.face.FaceManager;

        r1 := @parameter1: android.hardware.biometrics.CryptoObject;

        specialinvoke r0.<android.hardware.face.FaceManager: void cancelAuthentication(android.hardware.biometrics.CryptoObject)>(r1);

        return;
    }

    static void access$600(android.hardware.face.FaceManager, android.hardware.face.Face, int)
    {
        android.hardware.face.FaceManager r0;
        android.hardware.face.Face r1;
        int i0;

        r0 := @parameter0: android.hardware.face.FaceManager;

        r1 := @parameter1: android.hardware.face.Face;

        i0 := @parameter2: int;

        specialinvoke r0.<android.hardware.face.FaceManager: void sendEnrollResult(android.hardware.face.Face,int)>(r1, i0);

        return;
    }

    static void access$700(android.hardware.face.FaceManager, long, int, int)
    {
        android.hardware.face.FaceManager r0;
        long l0;
        int i1, i2;

        r0 := @parameter0: android.hardware.face.FaceManager;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.hardware.face.FaceManager: void sendAcquiredResult(long,int,int)>(l0, i1, i2);

        return;
    }

    static void access$800(android.hardware.face.FaceManager, android.hardware.face.Face, int, boolean)
    {
        android.hardware.face.FaceManager r0;
        android.hardware.face.Face r1;
        int i0;
        boolean z0;

        r0 := @parameter0: android.hardware.face.FaceManager;

        r1 := @parameter1: android.hardware.face.Face;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.hardware.face.FaceManager: void sendAuthenticatedSucceeded(android.hardware.face.Face,int,boolean)>(r1, i0, z0);

        return;
    }

    static void access$900(android.hardware.face.FaceManager)
    {
        android.hardware.face.FaceManager r0;

        r0 := @parameter0: android.hardware.face.FaceManager;

        specialinvoke r0.<android.hardware.face.FaceManager: void sendAuthenticatedFailed()>();

        return;
    }

    private void cancelAuthentication(android.hardware.biometrics.CryptoObject)
    {
        android.hardware.face.FaceManager r0;
        android.content.Context $r1;
        android.os.IBinder $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.hardware.biometrics.CryptoObject r6;
        android.hardware.face.IFaceService r7;

        r0 := @this: android.hardware.face.FaceManager;

        r6 := @parameter0: android.hardware.biometrics.CryptoObject;

        r7 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r7 == null goto label4;

     label1:
        $r2 = r0.<android.hardware.face.FaceManager: android.os.IBinder mToken>;

        $r1 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke r7.<android.hardware.face.IFaceService: void cancelAuthentication(android.os.IBinder,java.lang.String)>($r2, $r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void cancelEnrollment()
    {
        android.hardware.face.FaceManager r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.hardware.face.IFaceService r4;

        r0 := @this: android.hardware.face.FaceManager;

        r4 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r4 == null goto label4;

     label1:
        $r1 = r0.<android.hardware.face.FaceManager: android.os.IBinder mToken>;

        interfaceinvoke r4.<android.hardware.face.IFaceService: void cancelEnrollment(android.os.IBinder)>($r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.lang.String getAcquiredString(android.content.Context, int, int)
    {
        int i0, i1, $i2;
        android.content.res.Resources $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        android.content.Context r28;
        java.lang.String[] r29;

        r28 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        tableswitch(i0)
        {
            case 0: goto label24;
            case 1: goto label23;
            case 2: goto label22;
            case 3: goto label21;
            case 4: goto label20;
            case 5: goto label19;
            case 6: goto label18;
            case 7: goto label17;
            case 8: goto label16;
            case 9: goto label15;
            case 10: goto label14;
            case 11: goto label13;
            case 12: goto label12;
            case 13: goto label11;
            case 14: goto label10;
            case 15: goto label09;
            case 16: goto label08;
            case 17: goto label07;
            case 18: goto label06;
            case 19: goto label05;
            case 20: goto label04;
            case 21: goto label03;
            case 22: goto label02;
            default: goto label01;
        };

     label01:
        goto label25;

     label02:
        $r0 = virtualinvoke r28.<android.content.Context: android.content.res.Resources getResources()>();

        r29 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236101);

        $i2 = lengthof r29;

        if i1 >= $i2 goto label25;

        $r7 = r29[i1];

        return $r7;

     label03:
        $r8 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040148);

        return $r8;

     label04:
        return null;

     label05:
        $r9 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040143);

        return $r9;

     label06:
        $r10 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040147);

        return $r10;

     label07:
        $r11 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040149);

        return $r11;

     label08:
        $r12 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040144);

        return $r12;

     label09:
        $r13 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040160);

        return $r13;

     label10:
        $r14 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040153);

        return $r14;

     label11:
        $r15 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040146);

        return $r15;

     label12:
        $r16 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040158);

        return $r16;

     label13:
        $r17 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040142);

        return $r17;

     label14:
        $r18 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040145);

        return $r18;

     label15:
        $r19 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040156);

        return $r19;

     label16:
        $r20 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040159);

        return $r20;

     label17:
        $r21 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040157);

        return $r21;

     label18:
        $r22 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040155);

        return $r22;

     label19:
        $r23 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040154);

        return $r23;

     label20:
        $r24 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040151);

        return $r24;

     label21:
        $r25 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040152);

        return $r25;

     label22:
        $r26 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040150);

        return $r26;

     label23:
        $r27 = virtualinvoke r28.<android.content.Context: java.lang.String getString(int)>(17040141);

        return $r27;

     label24:
        return null;

     label25:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid acquired message: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FaceManager", $r6);

        return null;
    }

    private int getCurrentUserId()
    {
        android.hardware.face.FaceManager r0;
        int i0;
        android.app.IActivityManager $r2;
        android.content.pm.UserInfo $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.hardware.face.FaceManager;

     label1:
        $r2 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r3 = interfaceinvoke $r2.<android.app.IActivityManager: android.content.pm.UserInfo getCurrentUser()>();

        i0 = $r3.<android.content.pm.UserInfo: int id>;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.lang.String getErrorString(android.content.Context, int, int)
    {
        int i0, i1, $i2;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        android.content.res.Resources $r5;
        java.lang.StringBuilder $r6;
        android.content.Context r19;
        java.lang.String[] r20;

        r19 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        tableswitch(i0)
        {
            case 1: goto label13;
            case 2: goto label12;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label01;
            case 7: goto label08;
            case 8: goto label07;
            case 9: goto label06;
            case 10: goto label05;
            case 11: goto label04;
            case 12: goto label03;
            case 13: goto label01;
            case 14: goto label01;
            case 15: goto label02;
            default: goto label01;
        };

     label01:
        goto label14;

     label02:
        $r0 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040170);

        return $r0;

     label03:
        $r1 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040165);

        return $r1;

     label04:
        $r2 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040169);

        return $r2;

     label05:
        $r3 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040173);

        return $r3;

     label06:
        $r4 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040167);

        return $r4;

     label07:
        $r5 = virtualinvoke r19.<android.content.Context: android.content.res.Resources getResources()>();

        r20 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236102);

        $i2 = lengthof r20;

        if i1 >= $i2 goto label14;

        $r12 = r20[i1];

        return $r12;

     label08:
        $r13 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040166);

        return $r13;

     label09:
        $r14 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040163);

        return $r14;

     label10:
        $r15 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040168);

        return $r15;

     label11:
        $r16 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040171);

        return $r16;

     label12:
        $r17 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040172);

        return $r17;

     label13:
        $r18 = virtualinvoke r19.<android.content.Context: java.lang.String getString(int)>(17040164);

        return $r18;

     label14:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid error message: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FaceManager", $r11);

        return "";
    }

    public static int getMappedAcquiredInfo(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 22 goto label5;

        tableswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label3;
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label2;
            case 13: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 2;

     label3:
        return 1;

     label4:
        return 2;

     label5:
        $i2 = i1 + 1000;

        return $i2;
    }

    private void sendAcquiredResult(long, int, int)
    {
        android.hardware.face.FaceManager r0;
        long l0;
        int i1, i2;
        android.content.Context $r1;
        android.hardware.face.FaceManager$AuthenticationCallback r2, r5;
        java.lang.String r3;
        android.hardware.face.FaceManager$EnrollmentCallback r4;

        r0 := @this: android.hardware.face.FaceManager;

        l0 := @parameter0: long;

        i2 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$AuthenticationCallback mAuthenticationCallback>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.hardware.face.FaceManager$AuthenticationCallback: void onAuthenticationAcquired(int)>(i2);

     label1:
        $r1 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        r3 = staticinvoke <android.hardware.face.FaceManager: java.lang.String getAcquiredString(android.content.Context,int,int)>($r1, i2, i1);

        if i2 != 22 goto label2;

        i2 = i1 + 1000;

        goto label2;

     label2:
        r4 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$EnrollmentCallback mEnrollmentCallback>;

        if r4 == null goto label3;

        virtualinvoke r4.<android.hardware.face.FaceManager$EnrollmentCallback: void onEnrollmentHelp(int,java.lang.CharSequence)>(i2, r3);

        goto label4;

     label3:
        r5 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$AuthenticationCallback mAuthenticationCallback>;

        if r5 == null goto label4;

        if r3 == null goto label4;

        virtualinvoke r5.<android.hardware.face.FaceManager$AuthenticationCallback: void onAuthenticationHelp(int,java.lang.CharSequence)>(i2, r3);

     label4:
        return;
    }

    private void sendAuthenticatedFailed()
    {
        android.hardware.face.FaceManager r0;
        android.hardware.face.FaceManager$AuthenticationCallback r1;

        r0 := @this: android.hardware.face.FaceManager;

        r1 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$AuthenticationCallback mAuthenticationCallback>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.hardware.face.FaceManager$AuthenticationCallback: void onAuthenticationFailed()>();

     label1:
        return;
    }

    private void sendAuthenticatedSucceeded(android.hardware.face.Face, int, boolean)
    {
        android.hardware.face.FaceManager r0;
        int i0;
        boolean z0;
        android.hardware.face.FaceManager$AuthenticationCallback $r1, $r4;
        android.hardware.face.FaceManager$AuthenticationResult $r2;
        android.hardware.biometrics.CryptoObject $r3;
        android.hardware.face.Face r5;

        r0 := @this: android.hardware.face.FaceManager;

        r5 := @parameter0: android.hardware.face.Face;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$AuthenticationCallback mAuthenticationCallback>;

        if $r1 == null goto label1;

        $r2 = new android.hardware.face.FaceManager$AuthenticationResult;

        $r3 = r0.<android.hardware.face.FaceManager: android.hardware.biometrics.CryptoObject mCryptoObject>;

        specialinvoke $r2.<android.hardware.face.FaceManager$AuthenticationResult: void <init>(android.hardware.biometrics.CryptoObject,android.hardware.face.Face,int,boolean)>($r3, r5, i0, z0);

        $r4 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$AuthenticationCallback mAuthenticationCallback>;

        virtualinvoke $r4.<android.hardware.face.FaceManager$AuthenticationCallback: void onAuthenticationSucceeded(android.hardware.face.FaceManager$AuthenticationResult)>($r2);

     label1:
        return;
    }

    private void sendEnrollResult(android.hardware.face.Face, int)
    {
        android.hardware.face.FaceManager r0;
        int i0;
        android.hardware.face.Face r1;
        android.hardware.face.FaceManager$EnrollmentCallback r2;

        r0 := @this: android.hardware.face.FaceManager;

        r1 := @parameter0: android.hardware.face.Face;

        i0 := @parameter1: int;

        r2 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$EnrollmentCallback mEnrollmentCallback>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.hardware.face.FaceManager$EnrollmentCallback: void onEnrollmentProgress(int)>(i0);

     label1:
        return;
    }

    private void sendErrorResult(long, int, int)
    {
        android.hardware.face.FaceManager r0;
        long l0;
        int i1, i2, i3;
        android.content.Context $r1, $r4, $r6;
        android.hardware.face.Face $r2;
        java.lang.String $r3, $r5, $r7;
        android.hardware.face.FaceManager$EnrollmentCallback r8;
        android.hardware.face.FaceManager$AuthenticationCallback r9;
        android.hardware.face.FaceManager$RemovalCallback r10;

        r0 := @this: android.hardware.face.FaceManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i1 != 8 goto label1;

        i3 = i2 + 1000;

        goto label2;

     label1:
        i3 = i1;

     label2:
        r8 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$EnrollmentCallback mEnrollmentCallback>;

        if r8 == null goto label3;

        $r6 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r7 = staticinvoke <android.hardware.face.FaceManager: java.lang.String getErrorString(android.content.Context,int,int)>($r6, i1, i2);

        virtualinvoke r8.<android.hardware.face.FaceManager$EnrollmentCallback: void onEnrollmentError(int,java.lang.CharSequence)>(i3, $r7);

        goto label5;

     label3:
        r9 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$AuthenticationCallback mAuthenticationCallback>;

        if r9 == null goto label4;

        $r4 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r5 = staticinvoke <android.hardware.face.FaceManager: java.lang.String getErrorString(android.content.Context,int,int)>($r4, i1, i2);

        virtualinvoke r9.<android.hardware.face.FaceManager$AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)>(i3, $r5);

        goto label5;

     label4:
        r10 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$RemovalCallback mRemovalCallback>;

        if r10 == null goto label5;

        $r2 = r0.<android.hardware.face.FaceManager: android.hardware.face.Face mRemovalFace>;

        $r1 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r3 = staticinvoke <android.hardware.face.FaceManager: java.lang.String getErrorString(android.content.Context,int,int)>($r1, i1, i2);

        virtualinvoke r10.<android.hardware.face.FaceManager$RemovalCallback: void onRemovalError(android.hardware.face.Face,int,java.lang.CharSequence)>($r2, i3, $r3);

     label5:
        return;
    }

    private void sendGetFeatureCompleted(boolean, int, boolean)
    {
        android.hardware.face.FaceManager r0;
        boolean z0, z1;
        int i0;
        android.hardware.face.FaceManager$GetFeatureCallback r1;

        r0 := @this: android.hardware.face.FaceManager;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        r1 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$GetFeatureCallback mGetFeatureCallback>;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<android.hardware.face.FaceManager$GetFeatureCallback: void onCompleted(boolean,int,boolean)>(z0, i0, z1);

        return;
    }

    private void sendRemovedResult(android.hardware.face.Face, int)
    {
        android.hardware.face.FaceManager r0;
        android.hardware.face.Face r1;
        int i0;
        android.hardware.face.FaceManager$RemovalCallback r2;

        r0 := @this: android.hardware.face.FaceManager;

        r1 := @parameter0: android.hardware.face.Face;

        i0 := @parameter1: int;

        r2 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$RemovalCallback mRemovalCallback>;

        if r2 != null goto label1;

        return;

     label1:
        if r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FaceManager", "Received MSG_REMOVED, but face is null");

        return;

     label2:
        virtualinvoke r2.<android.hardware.face.FaceManager$RemovalCallback: void onRemovalSucceeded(android.hardware.face.Face,int)>(r1, i0);

        return;
    }

    private void sendSetFeatureCompleted(boolean, int)
    {
        android.hardware.face.FaceManager r0;
        boolean z0;
        int i0;
        android.hardware.face.FaceManager$SetFeatureCallback r1;

        r0 := @this: android.hardware.face.FaceManager;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$SetFeatureCallback mSetFeatureCallback>;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<android.hardware.face.FaceManager$SetFeatureCallback: void onCompleted(boolean,int)>(z0, i0);

        return;
    }

    private void useHandler(android.os.Handler)
    {
        android.hardware.face.FaceManager r0;
        android.os.Handler r1, $r2;
        android.os.Looper $r3, $r5, $r8, $r10;
        android.content.Context $r4, $r7;
        android.hardware.face.FaceManager$MyHandler $r6, $r9;

        r0 := @this: android.hardware.face.FaceManager;

        r1 := @parameter0: android.os.Handler;

        if r1 == null goto label1;

        $r9 = new android.hardware.face.FaceManager$MyHandler;

        $r10 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r9.<android.hardware.face.FaceManager$MyHandler: void <init>(android.hardware.face.FaceManager,android.os.Looper,android.hardware.face.FaceManager$1)>(r0, $r10, null);

        r0.<android.hardware.face.FaceManager: android.os.Handler mHandler> = $r9;

        goto label2;

     label1:
        $r2 = r0.<android.hardware.face.FaceManager: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        $r4 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.os.Looper getMainLooper()>();

        if $r3 == $r5 goto label2;

        $r6 = new android.hardware.face.FaceManager$MyHandler;

        $r7 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<android.hardware.face.FaceManager$MyHandler: void <init>(android.hardware.face.FaceManager,android.os.Looper,android.hardware.face.FaceManager$1)>(r0, $r8, null);

        r0.<android.hardware.face.FaceManager: android.os.Handler mHandler> = $r6;

     label2:
        return;
    }

    public void addLockoutResetCallback(android.hardware.face.FaceManager$LockoutResetCallback)
    {
        android.hardware.face.FaceManager r0;
        android.os.PowerManager r1;
        android.hardware.face.IFaceService r2, $r4;
        android.hardware.face.FaceManager$2 r3;
        android.content.Context $r5;
        java.lang.Object $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.hardware.face.FaceManager$LockoutResetCallback r9;

        r0 := @this: android.hardware.face.FaceManager;

        r9 := @parameter0: android.hardware.face.FaceManager$LockoutResetCallback;

        $r4 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if $r4 == null goto label4;

     label1:
        $r5 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        r1 = (android.os.PowerManager) $r6;

        r2 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        r3 = new android.hardware.face.FaceManager$2;

        specialinvoke r3.<android.hardware.face.FaceManager$2: void <init>(android.hardware.face.FaceManager,android.os.PowerManager,android.hardware.face.FaceManager$LockoutResetCallback)>(r0, r1, r9);

        interfaceinvoke r2.<android.hardware.face.IFaceService: void addLockoutResetCallback(android.hardware.biometrics.IBiometricServiceLockoutResetCallback)>(r3);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FaceManager", "addLockoutResetCallback(): Service not connected!");

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void authenticate(android.hardware.biometrics.CryptoObject, android.os.CancellationSignal, int, android.hardware.face.FaceManager$AuthenticationCallback, android.os.Handler)
    {
        android.hardware.face.FaceManager r0;
        android.hardware.biometrics.CryptoObject r1;
        android.os.CancellationSignal r2;
        int i0, $i1;
        android.hardware.face.FaceManager$AuthenticationCallback r3;
        android.os.Handler r4;
        android.content.Context $r5;

        r0 := @this: android.hardware.face.FaceManager;

        r1 := @parameter0: android.hardware.biometrics.CryptoObject;

        r2 := @parameter1: android.os.CancellationSignal;

        i0 := @parameter2: int;

        r3 := @parameter3: android.hardware.face.FaceManager$AuthenticationCallback;

        r4 := @parameter4: android.os.Handler;

        $r5 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

        virtualinvoke r0.<android.hardware.face.FaceManager: void authenticate(android.hardware.biometrics.CryptoObject,android.os.CancellationSignal,int,android.hardware.face.FaceManager$AuthenticationCallback,android.os.Handler,int)>(r1, r2, i0, r3, r4, $i1);

        return;
    }

    public void authenticate(android.hardware.biometrics.CryptoObject, android.os.CancellationSignal, int, android.hardware.face.FaceManager$AuthenticationCallback, android.os.Handler, int)
    {
        android.hardware.face.FaceManager r0;
        android.os.CancellationSignal r1;
        int i0, i1;
        android.hardware.face.FaceManager$AuthenticationCallback r2;
        android.os.Handler r3;
        java.lang.IllegalArgumentException $r4;
        android.hardware.face.IFaceService $r5, $r7;
        android.content.Context $r6, $r14;
        android.os.IBinder $r8;
        android.hardware.face.IFaceServiceReceiver $r9;
        java.lang.String $r10, $r15;
        boolean $z0;
        android.hardware.face.FaceManager$OnAuthenticationCancelListener $r11;
        java.lang.Throwable $r12;
        android.os.RemoteException $r13;
        android.hardware.biometrics.CryptoObject r16;
        long l4;

        r0 := @this: android.hardware.face.FaceManager;

        r16 := @parameter0: android.hardware.biometrics.CryptoObject;

        r1 := @parameter1: android.os.CancellationSignal;

        i0 := @parameter2: int;

        r2 := @parameter3: android.hardware.face.FaceManager$AuthenticationCallback;

        r3 := @parameter4: android.os.Handler;

        i1 := @parameter5: int;

        if r2 == null goto label18;

        if r1 == null goto label02;

        $z0 = virtualinvoke r1.<android.os.CancellationSignal: boolean isCanceled()>();

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FaceManager", "authentication already canceled");

        return;

     label01:
        $r11 = new android.hardware.face.FaceManager$OnAuthenticationCancelListener;

        specialinvoke $r11.<android.hardware.face.FaceManager$OnAuthenticationCancelListener: void <init>(android.hardware.face.FaceManager,android.hardware.biometrics.CryptoObject)>(r0, r16);

        virtualinvoke r1.<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)>($r11);

     label02:
        $r5 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if $r5 == null goto label17;

     label03:
        specialinvoke r0.<android.hardware.face.FaceManager: void useHandler(android.os.Handler)>(r3);

        r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$AuthenticationCallback mAuthenticationCallback> = r2;

        r0.<android.hardware.face.FaceManager: android.hardware.biometrics.CryptoObject mCryptoObject> = r16;

     label04:
        if r16 == null goto label07;

     label05:
        l4 = virtualinvoke r16.<android.hardware.biometrics.CryptoObject: long getOpId()>();

     label06:
        goto label08;

     label07:
        l4 = 0L;

     label08:
        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>("FaceManager#authenticate");

        $r7 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        $r8 = r0.<android.hardware.face.FaceManager: android.os.IBinder mToken>;

        $r9 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceServiceReceiver mServiceReceiver>;

        $r6 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r10 = virtualinvoke $r6.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r7.<android.hardware.face.IFaceService: void authenticate(android.os.IBinder,long,int,android.hardware.face.IFaceServiceReceiver,int,java.lang.String)>($r8, l4, i1, $r9, i0, $r10);

     label09:
        goto label15;

     label10:
        $r12 := @caughtexception;

        goto label16;

     label11:
        $r13 := @caughtexception;

     label12:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FaceManager", "Remote exception while authenticating: ", $r13);

     label13:
        if r2 == null goto label15;

     label14:
        $r14 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r15 = staticinvoke <android.hardware.face.FaceManager: java.lang.String getErrorString(android.content.Context,int,int)>($r14, 1, 0);

        virtualinvoke r2.<android.hardware.face.FaceManager$AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)>(1, $r15);

     label15:
        staticinvoke <android.os.Trace: void endSection()>();

        goto label17;

     label16:
        staticinvoke <android.os.Trace: void endSection()>();

        throw $r12;

     label17:
        return;

     label18:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply an authentication callback");

        throw $r4;

        catch android.os.RemoteException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch android.os.RemoteException from label08 to label09 with label11;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
        catch java.lang.Throwable from label14 to label15 with label10;
    }

    public void enroll(int, byte[], android.os.CancellationSignal, android.hardware.face.FaceManager$EnrollmentCallback, int[])
    {
        android.hardware.face.FaceManager r0;
        int i0;
        android.os.CancellationSignal r1;
        android.hardware.face.FaceManager$EnrollmentCallback r2;
        int[] r3;
        java.lang.IllegalArgumentException $r4;
        android.hardware.face.IFaceService $r5, $r7;
        android.content.Context $r6, $r13;
        android.os.IBinder $r8;
        android.hardware.face.IFaceServiceReceiver $r9;
        java.lang.String $r10, $r14;
        boolean $z0;
        android.hardware.face.FaceManager$OnEnrollCancelListener $r11;
        android.os.RemoteException $r12;
        java.lang.Throwable $r15;
        byte[] r16;

        r0 := @this: android.hardware.face.FaceManager;

        i0 := @parameter0: int;

        r16 := @parameter1: byte[];

        r1 := @parameter2: android.os.CancellationSignal;

        r2 := @parameter3: android.hardware.face.FaceManager$EnrollmentCallback;

        r3 := @parameter4: int[];

        if r2 == null goto label13;

        if r1 == null goto label02;

        $z0 = virtualinvoke r1.<android.os.CancellationSignal: boolean isCanceled()>();

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FaceManager", "enrollment already canceled");

        return;

     label01:
        $r11 = new android.hardware.face.FaceManager$OnEnrollCancelListener;

        specialinvoke $r11.<android.hardware.face.FaceManager$OnEnrollCancelListener: void <init>(android.hardware.face.FaceManager,android.hardware.face.FaceManager$1)>(r0, null);

        virtualinvoke r1.<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)>($r11);

     label02:
        $r5 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if $r5 == null goto label12;

     label03:
        r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$EnrollmentCallback mEnrollmentCallback> = r2;

        staticinvoke <android.os.Trace: void beginSection(java.lang.String)>("FaceManager#enroll");

        $r7 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        $r8 = r0.<android.hardware.face.FaceManager: android.os.IBinder mToken>;

        $r9 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceServiceReceiver mServiceReceiver>;

        $r6 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r10 = virtualinvoke $r6.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r7.<android.hardware.face.IFaceService: void enroll(int,android.os.IBinder,byte[],android.hardware.face.IFaceServiceReceiver,java.lang.String,int[])>(i0, $r8, r16, $r9, $r10, r3);

     label04:
        goto label10;

     label05:
        $r15 := @caughtexception;

        goto label11;

     label06:
        $r12 := @caughtexception;

     label07:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FaceManager", "Remote exception in enroll: ", $r12);

     label08:
        if r2 == null goto label10;

     label09:
        $r13 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r14 = staticinvoke <android.hardware.face.FaceManager: java.lang.String getErrorString(android.content.Context,int,int)>($r13, 1, 0);

        virtualinvoke r2.<android.hardware.face.FaceManager$EnrollmentCallback: void onEnrollmentError(int,java.lang.CharSequence)>(1, $r14);

     label10:
        staticinvoke <android.os.Trace: void endSection()>();

        goto label12;

     label11:
        staticinvoke <android.os.Trace: void endSection()>();

        throw $r15;

     label12:
        return;

     label13:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply an enrollment callback");

        throw $r4;

        catch android.os.RemoteException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label09 to label10 with label05;
    }

    public long generateChallenge()
    {
        android.hardware.face.FaceManager r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        long l0;
        android.hardware.face.IFaceService r4;

        r0 := @this: android.hardware.face.FaceManager;

        l0 = 0L;

        r4 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r4 == null goto label4;

     label1:
        $r1 = r0.<android.hardware.face.FaceManager: android.os.IBinder mToken>;

        l0 = interfaceinvoke r4.<android.hardware.face.IFaceService: long generateChallenge(android.os.IBinder)>($r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        return l0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getEnrolledFaces()
    {
        android.hardware.face.FaceManager r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: android.hardware.face.FaceManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r1 = virtualinvoke r0.<android.hardware.face.FaceManager: java.util.List getEnrolledFaces(int)>($i0);

        return $r1;
    }

    public java.util.List getEnrolledFaces(int)
    {
        android.hardware.face.FaceManager r0;
        int i0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.hardware.face.IFaceService r5;
        java.util.List r6;

        r0 := @this: android.hardware.face.FaceManager;

        i0 := @parameter0: int;

        r5 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r5 == null goto label4;

     label1:
        $r1 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        r6 = interfaceinvoke r5.<android.hardware.face.IFaceService: java.util.List getEnrolledFaces(int,java.lang.String)>(i0, $r2);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label4:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void getFeature(int, int, android.hardware.face.FaceManager$GetFeatureCallback)
    {
        android.hardware.face.FaceManager r0;
        int i0, i1;
        android.hardware.face.IFaceService r1;
        android.content.Context $r2;
        android.hardware.face.IFaceServiceReceiver $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.hardware.face.FaceManager$GetFeatureCallback r7;

        r0 := @this: android.hardware.face.FaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: android.hardware.face.FaceManager$GetFeatureCallback;

        r1 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r1 == null goto label4;

     label1:
        r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$GetFeatureCallback mGetFeatureCallback> = r7;

        $r3 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceServiceReceiver mServiceReceiver>;

        $r2 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke r1.<android.hardware.face.IFaceService: void getFeature(int,int,android.hardware.face.IFaceServiceReceiver,java.lang.String)>(i0, i1, $r3, $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasEnrolledTemplates()
    {
        android.hardware.face.FaceManager r0;
        boolean z0;
        int $i0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.hardware.face.IFaceService r5;

        r0 := @this: android.hardware.face.FaceManager;

        r5 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r5 == null goto label4;

     label1:
        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r1 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        z0 = interfaceinvoke r5.<android.hardware.face.IFaceService: boolean hasEnrolledFaces(int,java.lang.String)>($i0, $r2);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasEnrolledTemplates(int)
    {
        android.hardware.face.FaceManager r0;
        int i0;
        boolean z0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.hardware.face.IFaceService r5;

        r0 := @this: android.hardware.face.FaceManager;

        i0 := @parameter0: int;

        r5 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r5 == null goto label4;

     label1:
        $r1 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        z0 = interfaceinvoke r5.<android.hardware.face.IFaceService: boolean hasEnrolledFaces(int,java.lang.String)>(i0, $r2);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isHardwareDetected()
    {
        android.hardware.face.FaceManager r0;
        boolean z0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.hardware.face.IFaceService r5;

        r0 := @this: android.hardware.face.FaceManager;

        r5 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r5 == null goto label4;

     label1:
        $r1 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        z0 = interfaceinvoke r5.<android.hardware.face.IFaceService: boolean isHardwareDetected(java.lang.String)>($r2);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FaceManager", "isFaceHardwareDetected(): Service not connected!");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void remove(android.hardware.face.Face, int, android.hardware.face.FaceManager$RemovalCallback)
    {
        android.hardware.face.FaceManager r0;
        android.hardware.face.Face r1;
        int i0, $i1;
        android.hardware.face.FaceManager$RemovalCallback r2;
        android.os.IBinder $r3;
        android.content.Context $r4, $r8;
        android.hardware.face.IFaceServiceReceiver $r5;
        java.lang.String $r6, $r9;
        android.os.RemoteException $r7;
        android.hardware.face.IFaceService r10;

        r0 := @this: android.hardware.face.FaceManager;

        r1 := @parameter0: android.hardware.face.Face;

        i0 := @parameter1: int;

        r2 := @parameter2: android.hardware.face.FaceManager$RemovalCallback;

        r10 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r10 == null goto label4;

     label1:
        r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$RemovalCallback mRemovalCallback> = r2;

        r0.<android.hardware.face.FaceManager: android.hardware.face.Face mRemovalFace> = r1;

        $r3 = r0.<android.hardware.face.FaceManager: android.os.IBinder mToken>;

        $i1 = virtualinvoke r1.<android.hardware.face.Face: int getBiometricId()>();

        $r5 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceServiceReceiver mServiceReceiver>;

        $r4 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r4.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke r10.<android.hardware.face.IFaceService: void remove(android.os.IBinder,int,int,android.hardware.face.IFaceServiceReceiver,java.lang.String)>($r3, $i1, i0, $r5, $r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FaceManager", "Remote exception in remove: ", $r7);

        if r2 == null goto label4;

        $r8 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r9 = staticinvoke <android.hardware.face.FaceManager: java.lang.String getErrorString(android.content.Context,int,int)>($r8, 1, 0);

        virtualinvoke r2.<android.hardware.face.FaceManager$RemovalCallback: void onRemovalError(android.hardware.face.Face,int,java.lang.CharSequence)>(r1, 1, $r9);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int revokeChallenge()
    {
        android.hardware.face.FaceManager r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        int i0;
        android.hardware.face.IFaceService r4;

        r0 := @this: android.hardware.face.FaceManager;

        i0 = 0;

        r4 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r4 == null goto label4;

     label1:
        $r1 = r0.<android.hardware.face.FaceManager: android.os.IBinder mToken>;

        i0 = interfaceinvoke r4.<android.hardware.face.IFaceService: int revokeChallenge(android.os.IBinder)>($r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

     label4:
        return i0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setActiveUser(int)
    {
        android.hardware.face.FaceManager r0;
        int i0;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        android.hardware.face.IFaceService r3;

        r0 := @this: android.hardware.face.FaceManager;

        i0 := @parameter0: int;

        r3 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r3 == null goto label4;

     label1:
        interfaceinvoke r3.<android.hardware.face.IFaceService: void setActiveUser(int)>(i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setFeature(int, int, boolean, byte[], android.hardware.face.FaceManager$SetFeatureCallback)
    {
        android.hardware.face.FaceManager r0;
        int i0, i1;
        boolean z0;
        android.hardware.face.FaceManager$SetFeatureCallback r1;
        android.hardware.face.IFaceService r2;
        android.content.Context $r3;
        android.hardware.face.IFaceServiceReceiver $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        byte[] r8;

        r0 := @this: android.hardware.face.FaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r8 := @parameter3: byte[];

        r1 := @parameter4: android.hardware.face.FaceManager$SetFeatureCallback;

        r2 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r2 == null goto label4;

     label1:
        r0.<android.hardware.face.FaceManager: android.hardware.face.FaceManager$SetFeatureCallback mSetFeatureCallback> = r1;

        $r4 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceServiceReceiver mServiceReceiver>;

        $r3 = r0.<android.hardware.face.FaceManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke r2.<android.hardware.face.IFaceService: void setFeature(int,int,boolean,byte[],android.hardware.face.IFaceServiceReceiver,java.lang.String)>(i0, i1, z0, r8, $r4, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void userActivity()
    {
        android.hardware.face.FaceManager r0;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        android.hardware.face.IFaceService r3;

        r0 := @this: android.hardware.face.FaceManager;

        r3 = r0.<android.hardware.face.FaceManager: android.hardware.face.IFaceService mService>;

        if r3 == null goto label4;

     label1:
        interfaceinvoke r3.<android.hardware.face.IFaceService: void userActivity()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.hardware.face.FaceManager: java.lang.String TAG> = "FaceManager";

        <android.hardware.face.FaceManager: int MSG_SET_FEATURE_COMPLETED> = 107;

        <android.hardware.face.FaceManager: int MSG_REMOVED> = 105;

        <android.hardware.face.FaceManager: int MSG_GET_FEATURE_COMPLETED> = 106;

        <android.hardware.face.FaceManager: int MSG_ERROR> = 104;

        <android.hardware.face.FaceManager: int MSG_ENROLL_RESULT> = 100;

        <android.hardware.face.FaceManager: int MSG_AUTHENTICATION_SUCCEEDED> = 102;

        <android.hardware.face.FaceManager: int MSG_AUTHENTICATION_FAILED> = 103;

        <android.hardware.face.FaceManager: int MSG_ACQUIRED> = 101;

        <android.hardware.face.FaceManager: boolean DEBUG> = 1;

        return;
    }
}
