public final class android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock extends java.lang.Object
{
    public double biasNs;
    public double biasUncertaintyNs;
    public double driftNsps;
    public double driftUncertaintyNsps;
    public long fullBiasNs;
    public short gnssClockFlags;
    public int hwClockDiscontinuityCount;
    public short leapSecond;
    public long timeNs;
    public double timeUncertaintyNs;

    public void <init>()
    {
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock r0;
        short $s0;

        r0 := @this: android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $s0 = (short) 0;

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short leapSecond> = $s0;

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long timeNs> = 0L;

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double timeUncertaintyNs> = 0.0;

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long fullBiasNs> = 0L;

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasNs> = 0.0;

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasUncertaintyNs> = 0.0;

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftNsps> = 0.0;

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftUncertaintyNsps> = 0.0;

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: int hwClockDiscontinuityCount> = 0;

        return;
    }

    public static final java.util.ArrayList readVectorFromParcel(android.os.HwParcel)
    {
        android.os.HwParcel r0;
        int i0, $i1, $i4, i6;
        java.util.ArrayList $r3;
        long $l2, $l3, $l5;
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock $r4;
        android.os.HwBlob r5, r6;

        r0 := @parameter0: android.os.HwParcel;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r5 = virtualinvoke r0.<android.os.HwParcel: android.os.HwBlob readBuffer(long)>(16L);

        i0 = virtualinvoke r5.<android.os.HwBlob: int getInt32(long)>(8L);

        $i1 = i0 * 72;

        $l2 = (long) $i1;

        $l3 = virtualinvoke r5.<android.os.HwBlob: long handle()>();

        r6 = virtualinvoke r0.<android.os.HwParcel: android.os.HwBlob readEmbeddedBuffer(long,long,long,boolean)>($l2, $l3, 0L, 1);

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $r4 = new android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock;

        specialinvoke $r4.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: void <init>()>();

        $i4 = i6 * 72;

        $l5 = (long) $i4;

        virtualinvoke $r4.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>(r0, r6, $l5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i6 = i6 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public static final void writeVectorToParcel(android.os.HwParcel, java.util.ArrayList)
    {
        android.os.HwParcel r0;
        java.util.ArrayList r1;
        int i0, $i1, $i2, i4;
        android.os.HwBlob $r4, $r5;
        java.lang.Object $r6;
        long $l3;
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock $r7;

        r0 := @parameter0: android.os.HwParcel;

        r1 := @parameter1: java.util.ArrayList;

        $r4 = new android.os.HwBlob;

        specialinvoke $r4.<android.os.HwBlob: void <init>(int)>(16);

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        virtualinvoke $r4.<android.os.HwBlob: void putInt32(long,int)>(8L, i0);

        virtualinvoke $r4.<android.os.HwBlob: void putBool(long,boolean)>(12L, 0);

        $r5 = new android.os.HwBlob;

        $i1 = i0 * 72;

        specialinvoke $r5.<android.os.HwBlob: void <init>(int)>($i1);

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r7 = (android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock) $r6;

        $i2 = i4 * 72;

        $l3 = (long) $i2;

        virtualinvoke $r7.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: void writeEmbeddedToBlob(android.os.HwBlob,long)>($r5, $l3);

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke $r4.<android.os.HwBlob: void putBlob(long,android.os.HwBlob)>(0L, $r5);

        virtualinvoke r0.<android.os.HwParcel: void writeBuffer(android.os.HwBlob)>($r4);

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock r0, r5;
        java.lang.Class $r1;
        short $s0, $s1, $s2, $s3;
        java.lang.Short $r2, $r3;
        boolean $z0;
        long $l4, $l5, $l8, $l9;
        byte $b6, $b7, $b10, $b11, $b12, $b13, $b14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        int $i15, $i16;
        java.lang.Object r4;

        r0 := @this: android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock;

        r4 := @parameter0: java.lang.Object;

        if r0 != r4 goto label01;

        return 1;

     label01:
        if r4 != null goto label02;

        return 0;

     label02:
        $r1 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "Landroid/hardware/gnss/V1_0/IGnssMeasurementCallback$GnssClock;" goto label03;

        return 0;

     label03:
        r5 = (android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock) r4;

        $s0 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short gnssClockFlags>;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $s1 = r5.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short gnssClockFlags>;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $z0 = staticinvoke <android.os.HidlSupport: boolean deepEquals(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 != 0 goto label04;

        return 0;

     label04:
        $s3 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short leapSecond>;

        $s2 = r5.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short leapSecond>;

        if $s3 == $s2 goto label05;

        return 0;

     label05:
        $l5 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long timeNs>;

        $l4 = r5.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long timeNs>;

        $b6 = $l5 cmp $l4;

        if $b6 == 0 goto label06;

        return 0;

     label06:
        $d1 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double timeUncertaintyNs>;

        $d0 = r5.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double timeUncertaintyNs>;

        $b7 = $d1 cmpl $d0;

        if $b7 == 0 goto label07;

        return 0;

     label07:
        $l9 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long fullBiasNs>;

        $l8 = r5.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long fullBiasNs>;

        $b10 = $l9 cmp $l8;

        if $b10 == 0 goto label08;

        return 0;

     label08:
        $d3 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasNs>;

        $d2 = r5.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasNs>;

        $b11 = $d3 cmpl $d2;

        if $b11 == 0 goto label09;

        return 0;

     label09:
        $d5 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasUncertaintyNs>;

        $d4 = r5.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasUncertaintyNs>;

        $b12 = $d5 cmpl $d4;

        if $b12 == 0 goto label10;

        return 0;

     label10:
        $d7 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftNsps>;

        $d6 = r5.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftNsps>;

        $b13 = $d7 cmpl $d6;

        if $b13 == 0 goto label11;

        return 0;

     label11:
        $d9 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftUncertaintyNsps>;

        $d8 = r5.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftUncertaintyNsps>;

        $b14 = $d9 cmpl $d8;

        if $b14 == 0 goto label12;

        return 0;

     label12:
        $i16 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: int hwClockDiscontinuityCount>;

        $i15 = r5.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: int hwClockDiscontinuityCount>;

        if $i16 == $i15 goto label13;

        return 0;

     label13:
        return 1;
    }

    public final int hashCode()
    {
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock r0;
        java.lang.Object[] $r1;
        short $s0, $s2;
        java.lang.Short $r2, $r4;
        int $i1, $i3, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.Integer $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r20, $r21;
        long $l4, $l7;
        java.lang.Long $r6, $r10;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.Double $r8, $r12, $r14, $r16, $r18;

        r0 := @this: android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock;

        $r1 = newarray (java.lang.Object)[10];

        $s0 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short gnssClockFlags>;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $i1 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>($r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[0] = $r3;

        $s2 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short leapSecond>;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $i3 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>($r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[1] = $r5;

        $l4 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long timeNs>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $i5 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r1[2] = $r7;

        $d0 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double timeUncertaintyNs>;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $i6 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>($r8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r1[3] = $r9;

        $l7 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long fullBiasNs>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        $i8 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>($r10);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r1[4] = $r11;

        $d1 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasNs>;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $i9 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>($r12);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r1[5] = $r13;

        $d2 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasUncertaintyNs>;

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $i10 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>($r14);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r1[6] = $r15;

        $d3 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftNsps>;

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $i11 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>($r16);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r1[7] = $r17;

        $d4 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftUncertaintyNsps>;

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $i12 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>($r18);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r1[8] = $r19;

        $i13 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: int hwClockDiscontinuityCount>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $i14 = staticinvoke <android.os.HidlSupport: int deepHashCode(java.lang.Object)>($r20);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r1[9] = $r21;

        $i15 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i15;
    }

    public final void readEmbeddedFromParcel(android.os.HwParcel, android.os.HwBlob, long)
    {
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock r0;
        android.os.HwParcel r1;
        android.os.HwBlob r2;
        long l0, $l1, $l3, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14;
        short $s2, $s4;
        double $d0, $d1, $d2, $d3, $d4;
        int $i15;

        r0 := @this: android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock;

        r1 := @parameter0: android.os.HwParcel;

        r2 := @parameter1: android.os.HwBlob;

        l0 := @parameter2: long;

        $l1 = 0L + l0;

        $s2 = virtualinvoke r2.<android.os.HwBlob: short getInt16(long)>($l1);

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short gnssClockFlags> = $s2;

        $l3 = 2L + l0;

        $s4 = virtualinvoke r2.<android.os.HwBlob: short getInt16(long)>($l3);

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short leapSecond> = $s4;

        $l5 = 8L + l0;

        $l6 = virtualinvoke r2.<android.os.HwBlob: long getInt64(long)>($l5);

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long timeNs> = $l6;

        $l7 = 16L + l0;

        $d0 = virtualinvoke r2.<android.os.HwBlob: double getDouble(long)>($l7);

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double timeUncertaintyNs> = $d0;

        $l8 = 24L + l0;

        $l9 = virtualinvoke r2.<android.os.HwBlob: long getInt64(long)>($l8);

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long fullBiasNs> = $l9;

        $l10 = 32L + l0;

        $d1 = virtualinvoke r2.<android.os.HwBlob: double getDouble(long)>($l10);

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasNs> = $d1;

        $l11 = 40L + l0;

        $d2 = virtualinvoke r2.<android.os.HwBlob: double getDouble(long)>($l11);

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasUncertaintyNs> = $d2;

        $l12 = 48L + l0;

        $d3 = virtualinvoke r2.<android.os.HwBlob: double getDouble(long)>($l12);

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftNsps> = $d3;

        $l13 = 56L + l0;

        $d4 = virtualinvoke r2.<android.os.HwBlob: double getDouble(long)>($l13);

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftUncertaintyNsps> = $d4;

        $l14 = 64L + l0;

        $i15 = virtualinvoke r2.<android.os.HwBlob: int getInt32(long)>($l14);

        r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: int hwClockDiscontinuityCount> = $i15;

        return;
    }

    public final void readFromParcel(android.os.HwParcel)
    {
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock r0;
        android.os.HwParcel r1;
        android.os.HwBlob $r2;

        r0 := @this: android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock;

        r1 := @parameter0: android.os.HwParcel;

        $r2 = virtualinvoke r1.<android.os.HwParcel: android.os.HwBlob readBuffer(long)>(72L);

        virtualinvoke r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>(r1, $r2, 0L);

        return;
    }

    public final java.lang.String toString()
    {
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock r0;
        java.lang.StringBuilder $r2;
        short $s0, $s1;
        java.lang.String $r5, $r26;
        long $l2, $l3;
        double $d0, $d1, $d2, $d3, $d4;
        int $i4;

        r0 := @this: android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".gnssClockFlags = ");

        $s0 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short gnssClockFlags>;

        $r5 = staticinvoke <android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClockFlags: java.lang.String dumpBitfield(short)>($s0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .leapSecond = ");

        $s1 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short leapSecond>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .timeNs = ");

        $l2 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long timeNs>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .timeUncertaintyNs = ");

        $d0 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double timeUncertaintyNs>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .fullBiasNs = ");

        $l3 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long fullBiasNs>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .biasNs = ");

        $d1 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasNs>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .biasUncertaintyNs = ");

        $d2 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasUncertaintyNs>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .driftNsps = ");

        $d3 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftNsps>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .driftUncertaintyNsps = ");

        $d4 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftUncertaintyNsps>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", .hwClockDiscontinuityCount = ");

        $i4 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: int hwClockDiscontinuityCount>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r26 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;
    }

    public final void writeEmbeddedToBlob(android.os.HwBlob, long)
    {
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock r0;
        android.os.HwBlob r1;
        long l0, $l2, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l15;
        short $s1, $s3;
        double $d0, $d1, $d2, $d3, $d4;
        int $i14;

        r0 := @this: android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock;

        r1 := @parameter0: android.os.HwBlob;

        l0 := @parameter1: long;

        $l2 = 0L + l0;

        $s1 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short gnssClockFlags>;

        virtualinvoke r1.<android.os.HwBlob: void putInt16(long,short)>($l2, $s1);

        $l4 = 2L + l0;

        $s3 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: short leapSecond>;

        virtualinvoke r1.<android.os.HwBlob: void putInt16(long,short)>($l4, $s3);

        $l6 = 8L + l0;

        $l5 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long timeNs>;

        virtualinvoke r1.<android.os.HwBlob: void putInt64(long,long)>($l6, $l5);

        $l7 = 16L + l0;

        $d0 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double timeUncertaintyNs>;

        virtualinvoke r1.<android.os.HwBlob: void putDouble(long,double)>($l7, $d0);

        $l9 = 24L + l0;

        $l8 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: long fullBiasNs>;

        virtualinvoke r1.<android.os.HwBlob: void putInt64(long,long)>($l9, $l8);

        $l10 = 32L + l0;

        $d1 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasNs>;

        virtualinvoke r1.<android.os.HwBlob: void putDouble(long,double)>($l10, $d1);

        $l11 = 40L + l0;

        $d2 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double biasUncertaintyNs>;

        virtualinvoke r1.<android.os.HwBlob: void putDouble(long,double)>($l11, $d2);

        $l12 = 48L + l0;

        $d3 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftNsps>;

        virtualinvoke r1.<android.os.HwBlob: void putDouble(long,double)>($l12, $d3);

        $l13 = 56L + l0;

        $d4 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: double driftUncertaintyNsps>;

        virtualinvoke r1.<android.os.HwBlob: void putDouble(long,double)>($l13, $d4);

        $l15 = 64L + l0;

        $i14 = r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: int hwClockDiscontinuityCount>;

        virtualinvoke r1.<android.os.HwBlob: void putInt32(long,int)>($l15, $i14);

        return;
    }

    public final void writeToParcel(android.os.HwParcel)
    {
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock r0;
        android.os.HwParcel r1;
        android.os.HwBlob $r3;

        r0 := @this: android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock;

        r1 := @parameter0: android.os.HwParcel;

        $r3 = new android.os.HwBlob;

        specialinvoke $r3.<android.os.HwBlob: void <init>(int)>(72);

        virtualinvoke r0.<android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssClock: void writeEmbeddedToBlob(android.os.HwBlob,long)>($r3, 0L);

        virtualinvoke r1.<android.os.HwParcel: void writeBuffer(android.os.HwBlob)>($r3);

        return;
    }
}
