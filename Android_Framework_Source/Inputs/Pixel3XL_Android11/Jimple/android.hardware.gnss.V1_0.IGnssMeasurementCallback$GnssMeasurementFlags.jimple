public final class android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssMeasurementFlags extends java.lang.Object
{
    public static final int HAS_AUTOMATIC_GAIN_CONTROL;
    public static final int HAS_CARRIER_CYCLES;
    public static final int HAS_CARRIER_FREQUENCY;
    public static final int HAS_CARRIER_PHASE;
    public static final int HAS_CARRIER_PHASE_UNCERTAINTY;
    public static final int HAS_SNR;

    public void <init>()
    {
        android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssMeasurementFlags r0;

        r0 := @this: android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssMeasurementFlags;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.String dumpBitfield(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.ArrayList $r2;
        java.lang.String $r3, $r6, $r8;
        java.lang.StringBuilder $r4;
        short s8, s9, s10, s11, s12, s13;

        i0 := @parameter0: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        s8 = 0;

        $i1 = i0 & 1;

        if $i1 != 1 goto label1;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("HAS_SNR");

        s8 = 0 | 1;

     label1:
        s9 = s8;

        $i2 = i0 & 512;

        if $i2 != 512 goto label2;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("HAS_CARRIER_FREQUENCY");

        s9 = s8 | 512;

     label2:
        s10 = s9;

        $i3 = i0 & 1024;

        if $i3 != 1024 goto label3;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("HAS_CARRIER_CYCLES");

        s10 = s9 | 1024;

     label3:
        s11 = s10;

        $i4 = i0 & 2048;

        if $i4 != 2048 goto label4;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("HAS_CARRIER_PHASE");

        s11 = s10 | 2048;

     label4:
        s12 = s11;

        $i5 = i0 & 4096;

        if $i5 != 4096 goto label5;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("HAS_CARRIER_PHASE_UNCERTAINTY");

        s12 = s11 | 4096;

     label5:
        s13 = s12;

        $i6 = i0 & 8192;

        if $i6 != 8192 goto label6;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("HAS_AUTOMATIC_GAIN_CONTROL");

        s13 = s12 | 8192;

     label6:
        if i0 == s13 goto label7;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i7 = s13 & i0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label7:
        $r3 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" | ", $r2);

        return $r3;
    }

    public static final java.lang.String toString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r5;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        return "HAS_SNR";

     label1:
        if i0 != 512 goto label2;

        return "HAS_CARRIER_FREQUENCY";

     label2:
        if i0 != 1024 goto label3;

        return "HAS_CARRIER_CYCLES";

     label3:
        if i0 != 2048 goto label4;

        return "HAS_CARRIER_PHASE";

     label4:
        if i0 != 4096 goto label5;

        return "HAS_CARRIER_PHASE_UNCERTAINTY";

     label5:
        if i0 != 8192 goto label6;

        return "HAS_AUTOMATIC_GAIN_CONTROL";

     label6:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssMeasurementFlags: int HAS_SNR> = 1;

        <android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssMeasurementFlags: int HAS_CARRIER_PHASE_UNCERTAINTY> = 4096;

        <android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssMeasurementFlags: int HAS_CARRIER_PHASE> = 2048;

        <android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssMeasurementFlags: int HAS_CARRIER_FREQUENCY> = 512;

        <android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssMeasurementFlags: int HAS_CARRIER_CYCLES> = 1024;

        <android.hardware.gnss.V1_0.IGnssMeasurementCallback$GnssMeasurementFlags: int HAS_AUTOMATIC_GAIN_CONTROL> = 8192;

        return;
    }
}
