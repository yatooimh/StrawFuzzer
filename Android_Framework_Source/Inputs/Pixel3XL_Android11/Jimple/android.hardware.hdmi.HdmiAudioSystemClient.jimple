public final class android.hardware.hdmi.HdmiAudioSystemClient extends android.hardware.hdmi.HdmiClient
{
    private static final int REPORT_AUDIO_STATUS_INTERVAL_MS;
    private static final java.lang.String TAG;
    private boolean mCanSendAudioStatus;
    private final android.os.Handler mHandler;
    private boolean mLastIsMute;
    private int mLastMaxVolume;
    private int mLastVolume;
    private boolean mPendingReportAudioStatus;

    public void <init>(android.hardware.hdmi.IHdmiControlService)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        android.hardware.hdmi.IHdmiControlService r1;

        r0 := @this: android.hardware.hdmi.HdmiAudioSystemClient;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlService;

        specialinvoke r0.<android.hardware.hdmi.HdmiAudioSystemClient: void <init>(android.hardware.hdmi.IHdmiControlService,android.os.Handler)>(r1, null);

        return;
    }

    public void <init>(android.hardware.hdmi.IHdmiControlService, android.os.Handler)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        android.os.Handler r1, $r2, r5;
        android.os.Looper $r3;
        android.hardware.hdmi.IHdmiControlService r4;

        r0 := @this: android.hardware.hdmi.HdmiAudioSystemClient;

        r4 := @parameter0: android.hardware.hdmi.IHdmiControlService;

        r1 := @parameter1: android.os.Handler;

        specialinvoke r0.<android.hardware.hdmi.HdmiClient: void <init>(android.hardware.hdmi.IHdmiControlService)>(r4);

        r0.<android.hardware.hdmi.HdmiAudioSystemClient: boolean mCanSendAudioStatus> = 1;

        if r1 != null goto label1;

        $r2 = new android.os.Handler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        r5 = $r2;

        goto label2;

     label1:
        r5 = r1;

     label2:
        r0.<android.hardware.hdmi.HdmiAudioSystemClient: android.os.Handler mHandler> = r5;

        return;
    }

    static boolean access$000(android.hardware.hdmi.HdmiAudioSystemClient)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        boolean $z0;

        r0 := @parameter0: android.hardware.hdmi.HdmiAudioSystemClient;

        $z0 = r0.<android.hardware.hdmi.HdmiAudioSystemClient: boolean mPendingReportAudioStatus>;

        return $z0;
    }

    static boolean access$002(android.hardware.hdmi.HdmiAudioSystemClient, boolean)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        boolean z0;

        r0 := @parameter0: android.hardware.hdmi.HdmiAudioSystemClient;

        z0 := @parameter1: boolean;

        r0.<android.hardware.hdmi.HdmiAudioSystemClient: boolean mPendingReportAudioStatus> = z0;

        return z0;
    }

    static int access$100(android.hardware.hdmi.HdmiAudioSystemClient)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        int $i0;

        r0 := @parameter0: android.hardware.hdmi.HdmiAudioSystemClient;

        $i0 = r0.<android.hardware.hdmi.HdmiAudioSystemClient: int mLastVolume>;

        return $i0;
    }

    static int access$200(android.hardware.hdmi.HdmiAudioSystemClient)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        int $i0;

        r0 := @parameter0: android.hardware.hdmi.HdmiAudioSystemClient;

        $i0 = r0.<android.hardware.hdmi.HdmiAudioSystemClient: int mLastMaxVolume>;

        return $i0;
    }

    static boolean access$300(android.hardware.hdmi.HdmiAudioSystemClient)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        boolean $z0;

        r0 := @parameter0: android.hardware.hdmi.HdmiAudioSystemClient;

        $z0 = r0.<android.hardware.hdmi.HdmiAudioSystemClient: boolean mLastIsMute>;

        return $z0;
    }

    static android.os.Handler access$400(android.hardware.hdmi.HdmiAudioSystemClient)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.hardware.hdmi.HdmiAudioSystemClient;

        $r1 = r0.<android.hardware.hdmi.HdmiAudioSystemClient: android.os.Handler mHandler>;

        return $r1;
    }

    static boolean access$502(android.hardware.hdmi.HdmiAudioSystemClient, boolean)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        boolean z0;

        r0 := @parameter0: android.hardware.hdmi.HdmiAudioSystemClient;

        z0 := @parameter1: boolean;

        r0.<android.hardware.hdmi.HdmiAudioSystemClient: boolean mCanSendAudioStatus> = z0;

        return z0;
    }

    public int getDeviceType()
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;

        r0 := @this: android.hardware.hdmi.HdmiAudioSystemClient;

        return 5;
    }

    public void sendReportAudioStatusCecCommand(boolean, int, int, boolean)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        boolean z0, z1, $z2;
        int i0, i1, $i2, $i3;
        android.os.Handler r1;
        android.hardware.hdmi.IHdmiControlService $r2, $r3;
        android.os.RemoteException $r4, $r5;
        android.hardware.hdmi.HdmiAudioSystemClient$1 r7;

        r0 := @this: android.hardware.hdmi.HdmiAudioSystemClient;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z1 := @parameter3: boolean;

        if z0 == 0 goto label05;

     label01:
        $r3 = r0.<android.hardware.hdmi.HdmiAudioSystemClient: android.hardware.hdmi.IHdmiControlService mService>;

        $i3 = virtualinvoke r0.<android.hardware.hdmi.HdmiAudioSystemClient: int getDeviceType()>();

        interfaceinvoke $r3.<android.hardware.hdmi.IHdmiControlService: void reportAudioStatus(int,int,int,boolean)>($i3, i0, i1, z1);

     label02:
        goto label04;

     label03:
        $r5 := @caughtexception;

     label04:
        return;

     label05:
        r0.<android.hardware.hdmi.HdmiAudioSystemClient: int mLastVolume> = i0;

        r0.<android.hardware.hdmi.HdmiAudioSystemClient: int mLastMaxVolume> = i1;

        r0.<android.hardware.hdmi.HdmiAudioSystemClient: boolean mLastIsMute> = z1;

        $z2 = r0.<android.hardware.hdmi.HdmiAudioSystemClient: boolean mCanSendAudioStatus>;

        if $z2 == 0 goto label10;

     label06:
        $r2 = r0.<android.hardware.hdmi.HdmiAudioSystemClient: android.hardware.hdmi.IHdmiControlService mService>;

        $i2 = virtualinvoke r0.<android.hardware.hdmi.HdmiAudioSystemClient: int getDeviceType()>();

        interfaceinvoke $r2.<android.hardware.hdmi.IHdmiControlService: void reportAudioStatus(int,int,int,boolean)>($i2, i0, i1, z1);

        r0.<android.hardware.hdmi.HdmiAudioSystemClient: boolean mCanSendAudioStatus> = 0;

        r1 = r0.<android.hardware.hdmi.HdmiAudioSystemClient: android.os.Handler mHandler>;

        r7 = new android.hardware.hdmi.HdmiAudioSystemClient$1;

        specialinvoke r7.<android.hardware.hdmi.HdmiAudioSystemClient$1: void <init>(android.hardware.hdmi.HdmiAudioSystemClient)>(r0);

        virtualinvoke r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r7, 500L);

     label07:
        goto label09;

     label08:
        $r4 := @caughtexception;

     label09:
        goto label11;

     label10:
        r0.<android.hardware.hdmi.HdmiAudioSystemClient: boolean mPendingReportAudioStatus> = 1;

     label11:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    public void setSystemAudioMode(boolean, android.hardware.hdmi.HdmiAudioSystemClient$SetSystemAudioModeCallback)
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        boolean z0;
        android.hardware.hdmi.HdmiAudioSystemClient$SetSystemAudioModeCallback r1;

        r0 := @this: android.hardware.hdmi.HdmiAudioSystemClient;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.hardware.hdmi.HdmiAudioSystemClient$SetSystemAudioModeCallback;

        return;
    }

    public void setSystemAudioModeOnForAudioOnlySource()
    {
        android.hardware.hdmi.HdmiAudioSystemClient r0;
        android.hardware.hdmi.IHdmiControlService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.hardware.hdmi.HdmiAudioSystemClient;

     label1:
        $r2 = r0.<android.hardware.hdmi.HdmiAudioSystemClient: android.hardware.hdmi.IHdmiControlService mService>;

        interfaceinvoke $r2.<android.hardware.hdmi.IHdmiControlService: void setSystemAudioModeOnForAudioOnlySource()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("HdmiAudioSystemClient", "Failed to set System Audio Mode on for Audio Only source");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.hardware.hdmi.HdmiAudioSystemClient: java.lang.String TAG> = "HdmiAudioSystemClient";

        <android.hardware.hdmi.HdmiAudioSystemClient: int REPORT_AUDIO_STATUS_INTERVAL_MS> = 500;

        return;
    }
}
