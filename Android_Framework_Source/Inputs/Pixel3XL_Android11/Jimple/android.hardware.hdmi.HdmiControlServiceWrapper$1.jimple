class android.hardware.hdmi.HdmiControlServiceWrapper$1 extends android.hardware.hdmi.IHdmiControlService$Stub
{
    final android.hardware.hdmi.HdmiControlServiceWrapper this$0;

    void <init>(android.hardware.hdmi.HdmiControlServiceWrapper)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.HdmiControlServiceWrapper;

        r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0> = r1;

        specialinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void <init>()>();

        return;
    }

    public void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiDeviceEventListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiDeviceEventListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener)>(r1);

        return;
    }

    public void addHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void addHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)>(r1);

        return;
    }

    public void addHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiControlStatusChangeListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlStatusChangeListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void addHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)>(r1);

        return;
    }

    public void addHdmiMhlVendorCommandListener(android.hardware.hdmi.IHdmiMhlVendorCommandListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiMhlVendorCommandListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiMhlVendorCommandListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void addHdmiMhlVendorCommandListener(android.hardware.hdmi.IHdmiMhlVendorCommandListener)>(r1);

        return;
    }

    public void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiHotplugEventListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiHotplugEventListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>(r1);

        return;
    }

    public void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>(r1);

        return;
    }

    public void addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener, int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiVendorCommandListener r1;
        int i0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiVendorCommandListener;

        i0 := @parameter1: int;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener,int)>(r1, i0);

        return;
    }

    public void askRemoteDeviceToBecomeActiveSource(int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void askRemoteDeviceToBecomeActiveSource(int)>(i0);

        return;
    }

    public boolean canChangeSystemAudioMode()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;
        boolean $z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        $z0 = virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: boolean canChangeSystemAudioMode()>();

        return $z0;
    }

    public void clearTimerRecording(int, int, byte[])
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1;
        byte[] r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void clearTimerRecording(int,int,byte[])>(i0, i1, r1);

        return;
    }

    public void deviceSelect(int, android.hardware.hdmi.IHdmiControlCallback)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void deviceSelect(int,android.hardware.hdmi.IHdmiControlCallback)>(i0, r1);

        return;
    }

    public android.hardware.hdmi.HdmiDeviceInfo getActiveSource()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;
        android.hardware.hdmi.HdmiDeviceInfo $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        $r2 = virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()>();

        return $r2;
    }

    public java.util.List getDeviceList()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;
        java.util.List $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        $r2 = virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: java.util.List getDeviceList()>();

        return $r2;
    }

    public java.util.List getInputDevices()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;
        java.util.List $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        $r2 = virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: java.util.List getInputDevices()>();

        return $r2;
    }

    public int getPhysicalAddress()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;
        int $i0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        $i0 = virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: int getPhysicalAddress()>();

        return $i0;
    }

    public java.util.List getPortInfo()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;
        java.util.List $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        $r2 = virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: java.util.List getPortInfo()>();

        return $r2;
    }

    public int[] getSupportedTypes()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;
        int[] $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        $r2 = virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: int[] getSupportedTypes()>();

        return $r2;
    }

    public boolean getSystemAudioMode()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;
        boolean $z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        $z0 = virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: boolean getSystemAudioMode()>();

        return $z0;
    }

    public boolean isHdmiCecVolumeControlEnabled()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;
        boolean $z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        $z0 = virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: boolean isHdmiCecVolumeControlEnabled()>();

        return $z0;
    }

    public void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)>(r1);

        return;
    }

    public void portSelect(int, android.hardware.hdmi.IHdmiControlCallback)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void portSelect(int,android.hardware.hdmi.IHdmiControlCallback)>(i0, r1);

        return;
    }

    public void powerOffRemoteDevice(int, int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void powerOffRemoteDevice(int,int)>(i0, i1);

        return;
    }

    public void powerOnRemoteDevice(int, int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void powerOnRemoteDevice(int,int)>(i0, i1);

        return;
    }

    public void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)>(r1);

        return;
    }

    public void removeHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void removeHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)>(r1);

        return;
    }

    public void removeHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiControlStatusChangeListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlStatusChangeListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void removeHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)>(r1);

        return;
    }

    public void removeHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiHotplugEventListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiHotplugEventListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void removeHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>(r1);

        return;
    }

    public void removeSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void removeSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>(r1);

        return;
    }

    public void reportAudioStatus(int, int, int, boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1, i2;
        boolean z0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void reportAudioStatus(int,int,int,boolean)>(i0, i1, i2, z0);

        return;
    }

    public void sendKeyEvent(int, int, boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1;
        boolean z0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void sendKeyEvent(int,int,boolean)>(i0, i1, z0);

        return;
    }

    public void sendMhlVendorCommand(int, int, int, byte[])
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1, i2;
        byte[] r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: byte[];

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void sendMhlVendorCommand(int,int,int,byte[])>(i0, i1, i2, r1);

        return;
    }

    public void sendStandby(int, int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void sendStandby(int,int)>(i0, i1);

        return;
    }

    public void sendVendorCommand(int, int, byte[], boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1;
        byte[] r1;
        boolean z0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        z0 := @parameter3: boolean;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void sendVendorCommand(int,int,byte[],boolean)>(i0, i1, r1, z0);

        return;
    }

    public void sendVolumeKeyEvent(int, int, boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1;
        boolean z0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void sendVolumeKeyEvent(int,int,boolean)>(i0, i1, z0);

        return;
    }

    public void setArcMode(boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        boolean z0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void setArcMode(boolean)>(z0);

        return;
    }

    public void setHdmiCecVolumeControlEnabled(boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        boolean z0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void setHdmiCecVolumeControlEnabled(boolean)>(z0);

        return;
    }

    public void setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiRecordListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiRecordListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener)>(r1);

        return;
    }

    public void setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.IHdmiInputChangeListener r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        r1 := @parameter0: android.hardware.hdmi.IHdmiInputChangeListener;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener)>(r1);

        return;
    }

    public void setProhibitMode(boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        boolean z0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void setProhibitMode(boolean)>(z0);

        return;
    }

    public void setStandbyMode(boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        boolean z0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void setStandbyMode(boolean)>(z0);

        return;
    }

    public void setSystemAudioMode(boolean, android.hardware.hdmi.IHdmiControlCallback)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        boolean z0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void setSystemAudioMode(boolean,android.hardware.hdmi.IHdmiControlCallback)>(z0, r1);

        return;
    }

    public void setSystemAudioModeOnForAudioOnlySource()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void setSystemAudioModeOnForAudioOnlySource()>();

        return;
    }

    public void setSystemAudioMute(boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        boolean z0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void setSystemAudioMute(boolean)>(z0);

        return;
    }

    public void setSystemAudioVolume(int, int, int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1, i2;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void setSystemAudioVolume(int,int,int)>(i0, i1, i2);

        return;
    }

    public void startOneTouchRecord(int, byte[])
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0;
        byte[] r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void startOneTouchRecord(int,byte[])>(i0, r1);

        return;
    }

    public void startTimerRecording(int, int, byte[])
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0, i1;
        byte[] r1;
        android.hardware.hdmi.HdmiControlServiceWrapper $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r2.<android.hardware.hdmi.HdmiControlServiceWrapper: void startTimerRecording(int,int,byte[])>(i0, i1, r1);

        return;
    }

    public void stopOneTouchRecord(int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper$1 r0;
        int i0;
        android.hardware.hdmi.HdmiControlServiceWrapper $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper$1;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper$1: android.hardware.hdmi.HdmiControlServiceWrapper this$0>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper: void stopOneTouchRecord(int)>(i0);

        return;
    }
}
