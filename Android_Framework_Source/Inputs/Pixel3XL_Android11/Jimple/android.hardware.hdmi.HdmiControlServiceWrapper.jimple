public final class android.hardware.hdmi.HdmiControlServiceWrapper extends java.lang.Object
{
    public static final int DEVICE_PURE_CEC_SWITCH;
    private java.util.List mInfoList;
    private final android.hardware.hdmi.IHdmiControlService mInterface;
    private int[] mTypes;

    public void <init>()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.HdmiControlServiceWrapper$1 $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.hdmi.HdmiControlServiceWrapper: java.util.List mInfoList> = null;

        r0.<android.hardware.hdmi.HdmiControlServiceWrapper: int[] mTypes> = null;

        $r1 = new android.hardware.hdmi.HdmiControlServiceWrapper$1;

        specialinvoke $r1.<android.hardware.hdmi.HdmiControlServiceWrapper$1: void <init>(android.hardware.hdmi.HdmiControlServiceWrapper)>(r0);

        r0.<android.hardware.hdmi.HdmiControlServiceWrapper: android.hardware.hdmi.IHdmiControlService mInterface> = $r1;

        return;
    }

    public void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiDeviceEventListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiDeviceEventListener;

        return;
    }

    public void addHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener;

        return;
    }

    public void addHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiControlStatusChangeListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlStatusChangeListener;

        return;
    }

    public void addHdmiMhlVendorCommandListener(android.hardware.hdmi.IHdmiMhlVendorCommandListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiMhlVendorCommandListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiMhlVendorCommandListener;

        return;
    }

    public void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiHotplugEventListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiHotplugEventListener;

        return;
    }

    public void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener;

        return;
    }

    public void addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener, int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiVendorCommandListener r1;
        int i0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiVendorCommandListener;

        i0 := @parameter1: int;

        return;
    }

    public void askRemoteDeviceToBecomeActiveSource(int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        return;
    }

    public boolean canChangeSystemAudioMode()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        return 1;
    }

    public void clearTimerRecording(int, int, byte[])
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1;
        byte[] r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        return;
    }

    public android.hardware.hdmi.HdmiControlManager createHdmiControlManager()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.HdmiControlManager $r1;
        android.hardware.hdmi.IHdmiControlService $r2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        $r1 = new android.hardware.hdmi.HdmiControlManager;

        $r2 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper: android.hardware.hdmi.IHdmiControlService mInterface>;

        specialinvoke $r1.<android.hardware.hdmi.HdmiControlManager: void <init>(android.hardware.hdmi.IHdmiControlService)>($r2);

        return $r1;
    }

    public void deviceSelect(int, android.hardware.hdmi.IHdmiControlCallback)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    public android.hardware.hdmi.HdmiDeviceInfo getActiveSource()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        return null;
    }

    public java.util.List getDeviceList()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        return null;
    }

    public java.util.List getInputDevices()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        return null;
    }

    public int getPhysicalAddress()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        return 65535;
    }

    public java.util.List getPortInfo()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        java.util.List $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper: java.util.List mInfoList>;

        return $r1;
    }

    public int[] getSupportedTypes()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int[] $r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        $r1 = r0.<android.hardware.hdmi.HdmiControlServiceWrapper: int[] mTypes>;

        return $r1;
    }

    public boolean getSystemAudioMode()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        return 1;
    }

    public boolean isHdmiCecVolumeControlEnabled()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        return 1;
    }

    public void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    public void portSelect(int, android.hardware.hdmi.IHdmiControlCallback)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    public void powerOffRemoteDevice(int, int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void powerOnRemoteDevice(int, int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    public void removeHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener;

        return;
    }

    public void removeHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiControlStatusChangeListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlStatusChangeListener;

        return;
    }

    public void removeHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiHotplugEventListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiHotplugEventListener;

        return;
    }

    public void removeSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener;

        return;
    }

    public void reportAudioStatus(int, int, int, boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        return;
    }

    public void sendKeyEvent(int, int, boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        return;
    }

    public void sendMhlVendorCommand(int, int, int, byte[])
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1, i2;
        byte[] r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: byte[];

        return;
    }

    public void sendStandby(int, int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void sendVendorCommand(int, int, byte[], boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1;
        byte[] r1;
        boolean z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        z0 := @parameter3: boolean;

        return;
    }

    public void sendVolumeKeyEvent(int, int, boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        return;
    }

    public void setArcMode(boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        boolean z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        z0 := @parameter0: boolean;

        return;
    }

    public void setDeviceTypes(int[])
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int[] r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: int[];

        r0.<android.hardware.hdmi.HdmiControlServiceWrapper: int[] mTypes> = r1;

        return;
    }

    public void setHdmiCecVolumeControlEnabled(boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        boolean z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        z0 := @parameter0: boolean;

        return;
    }

    public void setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiRecordListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiRecordListener;

        return;
    }

    public void setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        android.hardware.hdmi.IHdmiInputChangeListener r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: android.hardware.hdmi.IHdmiInputChangeListener;

        return;
    }

    public void setPortInfo(java.util.List)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        java.util.List r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        r1 := @parameter0: java.util.List;

        r0.<android.hardware.hdmi.HdmiControlServiceWrapper: java.util.List mInfoList> = r1;

        return;
    }

    public void setProhibitMode(boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        boolean z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        z0 := @parameter0: boolean;

        return;
    }

    public void setStandbyMode(boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        boolean z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        z0 := @parameter0: boolean;

        return;
    }

    public void setSystemAudioMode(boolean, android.hardware.hdmi.IHdmiControlCallback)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        boolean z0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    public void setSystemAudioModeOnForAudioOnlySource()
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        return;
    }

    public void setSystemAudioMute(boolean)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        boolean z0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        z0 := @parameter0: boolean;

        return;
    }

    public void setSystemAudioVolume(int, int, int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1, i2;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return;
    }

    public void startOneTouchRecord(int, byte[])
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0;
        byte[] r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        return;
    }

    public void startTimerRecording(int, int, byte[])
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0, i1;
        byte[] r1;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        return;
    }

    public void stopOneTouchRecord(int)
    {
        android.hardware.hdmi.HdmiControlServiceWrapper r0;
        int i0;

        r0 := @this: android.hardware.hdmi.HdmiControlServiceWrapper;

        i0 := @parameter0: int;

        return;
    }

    public static void <clinit>()
    {
        <android.hardware.hdmi.HdmiControlServiceWrapper: int DEVICE_PURE_CEC_SWITCH> = 6;

        return;
    }
}
