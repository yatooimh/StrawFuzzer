public abstract class android.hardware.hdmi.HdmiRecordSources$RecordSource extends java.lang.Object
{
    final int mExtraDataSize;
    final int mSourceType;

    void <init>(int, int)
    {
        android.hardware.hdmi.HdmiRecordSources$RecordSource r0;
        int i0, i1;

        r0 := @this: android.hardware.hdmi.HdmiRecordSources$RecordSource;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.hdmi.HdmiRecordSources$RecordSource: int mSourceType> = i0;

        r0.<android.hardware.hdmi.HdmiRecordSources$RecordSource: int mExtraDataSize> = i1;

        return;
    }

    abstract int extraParamToByteArray(byte[], int);

    final int getDataSize(boolean)
    {
        android.hardware.hdmi.HdmiRecordSources$RecordSource r0;
        boolean z0;
        int i0, i1;

        r0 := @this: android.hardware.hdmi.HdmiRecordSources$RecordSource;

        z0 := @parameter0: boolean;

        i0 = r0.<android.hardware.hdmi.HdmiRecordSources$RecordSource: int mExtraDataSize>;

        i1 = i0;

        if z0 == 0 goto label1;

        i1 = i0 + 1;

     label1:
        return i1;
    }

    final int toByteArray(boolean, byte[], int)
    {
        android.hardware.hdmi.HdmiRecordSources$RecordSource r0;
        boolean z0;
        byte[] r1;
        int i0, $i2, $i3, i6;
        byte $b4, $b5;

        r0 := @this: android.hardware.hdmi.HdmiRecordSources$RecordSource;

        z0 := @parameter0: boolean;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i6 = i0;

        if z0 == 0 goto label1;

        $i3 = r0.<android.hardware.hdmi.HdmiRecordSources$RecordSource: int mSourceType>;

        $b4 = (byte) $i3;

        $b5 = (byte) $b4;

        r1[i0] = $b5;

        i6 = i0 + 1;

     label1:
        virtualinvoke r0.<android.hardware.hdmi.HdmiRecordSources$RecordSource: int extraParamToByteArray(byte[],int)>(r1, i6);

        $i2 = virtualinvoke r0.<android.hardware.hdmi.HdmiRecordSources$RecordSource: int getDataSize(boolean)>(z0);

        return $i2;
    }
}
