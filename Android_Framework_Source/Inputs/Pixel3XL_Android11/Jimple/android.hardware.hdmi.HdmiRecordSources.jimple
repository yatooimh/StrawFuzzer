public final class android.hardware.hdmi.HdmiRecordSources extends java.lang.Object
{
    public static final int ANALOGUE_BROADCAST_TYPE_CABLE;
    public static final int ANALOGUE_BROADCAST_TYPE_SATELLITE;
    public static final int ANALOGUE_BROADCAST_TYPE_TERRESTRIAL;
    public static final int BROADCAST_SYSTEM_NTSC_M;
    public static final int BROADCAST_SYSTEM_PAL_BG;
    public static final int BROADCAST_SYSTEM_PAL_DK;
    public static final int BROADCAST_SYSTEM_PAL_I;
    public static final int BROADCAST_SYSTEM_PAL_M;
    public static final int BROADCAST_SYSTEM_PAL_OTHER_SYSTEM;
    public static final int BROADCAST_SYSTEM_SECAM_BG;
    public static final int BROADCAST_SYSTEM_SECAM_DK;
    public static final int BROADCAST_SYSTEM_SECAM_L;
    public static final int BROADCAST_SYSTEM_SECAM_LP;
    private static final int CHANNEL_NUMBER_FORMAT_1_PART;
    private static final int CHANNEL_NUMBER_FORMAT_2_PART;
    public static final int DIGITAL_BROADCAST_TYPE_ARIB;
    public static final int DIGITAL_BROADCAST_TYPE_ARIB_BS;
    public static final int DIGITAL_BROADCAST_TYPE_ARIB_CS;
    public static final int DIGITAL_BROADCAST_TYPE_ARIB_T;
    public static final int DIGITAL_BROADCAST_TYPE_ATSC;
    public static final int DIGITAL_BROADCAST_TYPE_ATSC_CABLE;
    public static final int DIGITAL_BROADCAST_TYPE_ATSC_SATELLITE;
    public static final int DIGITAL_BROADCAST_TYPE_ATSC_TERRESTRIAL;
    public static final int DIGITAL_BROADCAST_TYPE_DVB;
    public static final int DIGITAL_BROADCAST_TYPE_DVB_C;
    public static final int DIGITAL_BROADCAST_TYPE_DVB_S;
    public static final int DIGITAL_BROADCAST_TYPE_DVB_S2;
    public static final int DIGITAL_BROADCAST_TYPE_DVB_T;
    private static final int RECORD_SOURCE_TYPE_ANALOGUE_SERVICE;
    private static final int RECORD_SOURCE_TYPE_DIGITAL_SERVICE;
    private static final int RECORD_SOURCE_TYPE_EXTERNAL_PHYSICAL_ADDRESS;
    private static final int RECORD_SOURCE_TYPE_EXTERNAL_PLUG;
    private static final int RECORD_SOURCE_TYPE_OWN_SOURCE;
    private static final java.lang.String TAG;

    private void <init>()
    {
        android.hardware.hdmi.HdmiRecordSources r0;

        r0 := @this: android.hardware.hdmi.HdmiRecordSources;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int access$100(int, int, int, byte[], int)
    {
        int i0, i1, i2, i3, $i4;
        byte[] r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: byte[];

        i3 := @parameter4: int;

        $i4 = staticinvoke <android.hardware.hdmi.HdmiRecordSources: int threeFieldsToSixBytes(int,int,int,byte[],int)>(i0, i1, i2, r0, i3);

        return $i4;
    }

    static int access$200(short, byte[], int)
    {
        short s0;
        byte[] r0;
        int i1, $i2;

        s0 := @parameter0: short;

        r0 := @parameter1: byte[];

        i1 := @parameter2: int;

        $i2 = staticinvoke <android.hardware.hdmi.HdmiRecordSources: int shortToByteArray(short,byte[],int)>(s0, r0, i1);

        return $i2;
    }

    public static boolean checkRecordSource(byte[])
    {
        byte[] r0;
        byte b0;
        int i1, $i2, $i3;
        boolean z4, z5, z6, z7, z8;

        r0 := @parameter0: byte[];

        z4 = 0;

        if r0 == null goto label12;

        $i2 = lengthof r0;

        if $i2 != 0 goto label01;

        goto label12;

     label01:
        b0 = r0[0];

        $i3 = lengthof r0;

        i1 = $i3 - 1;

        if b0 == 1 goto label10;

        if b0 == 2 goto label08;

        if b0 == 3 goto label06;

        if b0 == 4 goto label04;

        if b0 == 5 goto label02;

        return 0;

     label02:
        if i1 != 2 goto label03;

        z4 = 1;

     label03:
        return z4;

     label04:
        z5 = 0;

        if i1 != 1 goto label05;

        z5 = 1;

     label05:
        return z5;

     label06:
        z6 = 0;

        if i1 != 4 goto label07;

        z6 = 1;

     label07:
        return z6;

     label08:
        z7 = 0;

        if i1 != 7 goto label09;

        z7 = 1;

     label09:
        return z7;

     label10:
        z8 = 0;

        if i1 != 0 goto label11;

        z8 = 1;

     label11:
        return z8;

     label12:
        return 0;
    }

    public static android.hardware.hdmi.HdmiRecordSources$AnalogueServiceSource ofAnalogue(int, int, int)
    {
        int i0, i1, i2;
        java.lang.StringBuilder $r0, $r4, $r9, $r13, $r18, $r22;
        java.lang.String $r3, $r8, $r12, $r17, $r21, $r26;
        java.lang.IllegalArgumentException $r7, $r16, $r25;
        android.hardware.hdmi.HdmiRecordSources$AnalogueServiceSource $r27;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 < 0 goto label3;

        if i0 > 2 goto label3;

        if i1 < 0 goto label2;

        if i1 > 65535 goto label2;

        if i2 < 0 goto label1;

        if i2 > 31 goto label1;

        $r27 = new android.hardware.hdmi.HdmiRecordSources$AnalogueServiceSource;

        specialinvoke $r27.<android.hardware.hdmi.HdmiRecordSources$AnalogueServiceSource: void <init>(int,int,int,android.hardware.hdmi.HdmiRecordSources$1)>(i0, i1, i2, null);

        return $r27;

     label1:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Broadcast system:");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HdmiRecordSources", $r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Broadcast system:");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r25 = new java.lang.IllegalArgumentException;

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid frequency value[0x0000-0xFFFF]:");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HdmiRecordSources", $r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid frequency value[0x0000-0xFFFF]:");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label3:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Broadcast type:");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HdmiRecordSources", $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Broadcast type:");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public static android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource ofArib(int, android.hardware.hdmi.HdmiRecordSources$AribData)
    {
        int i0;
        java.lang.IllegalArgumentException $r0, $r6;
        android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.hardware.hdmi.HdmiRecordSources$AribData r7;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.hdmi.HdmiRecordSources$AribData;

        if r7 == null goto label3;

        if i0 == 0 goto label2;

        tableswitch(i0)
        {
            case 8: goto label2;
            case 9: goto label2;
            case 10: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid ARIB type:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HdmiRecordSources", $r5);

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("type should not be null.");

        throw $r6;

     label2:
        $r1 = new android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource;

        specialinvoke $r1.<android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource: void <init>(int,int,android.hardware.hdmi.HdmiRecordSources$DigitalServiceIdentification,android.hardware.hdmi.HdmiRecordSources$1)>(0, i0, r7, null);

        return $r1;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("data should not be null.");

        throw $r0;
    }

    public static android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource ofAtsc(int, android.hardware.hdmi.HdmiRecordSources$AtscData)
    {
        int i0;
        java.lang.IllegalArgumentException $r0, $r9;
        android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource $r1;
        java.lang.StringBuilder $r2, $r6;
        java.lang.String $r5, $r10;
        android.hardware.hdmi.HdmiRecordSources$AtscData r11;

        i0 := @parameter0: int;

        r11 := @parameter1: android.hardware.hdmi.HdmiRecordSources$AtscData;

        if r11 == null goto label3;

        if i0 == 1 goto label2;

        tableswitch(i0)
        {
            case 16: goto label2;
            case 17: goto label2;
            case 18: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid ATSC type:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HdmiRecordSources", $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid ATSC type:");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label2:
        $r1 = new android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource;

        specialinvoke $r1.<android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource: void <init>(int,int,android.hardware.hdmi.HdmiRecordSources$DigitalServiceIdentification,android.hardware.hdmi.HdmiRecordSources$1)>(0, i0, r11, null);

        return $r1;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("data should not be null.");

        throw $r0;
    }

    public static android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource ofDigitalChannelId(int, android.hardware.hdmi.HdmiRecordSources$DigitalChannelData)
    {
        int i0;
        java.lang.IllegalArgumentException $r0, $r8;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r4, $r9;
        android.hardware.hdmi.HdmiRecordSources$DigitalChannelData r10;
        android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource $r13;

        i0 := @parameter0: int;

        r10 := @parameter1: android.hardware.hdmi.HdmiRecordSources$DigitalChannelData;

        if r10 == null goto label5;

        if i0 == 0 goto label4;

        if i0 == 1 goto label4;

        if i0 == 2 goto label4;

        tableswitch(i0)
        {
            case 8: goto label4;
            case 9: goto label4;
            case 10: goto label4;
            default: goto label1;
        };

     label1:
        tableswitch(i0)
        {
            case 16: goto label4;
            case 17: goto label4;
            case 18: goto label4;
            default: goto label2;
        };

     label2:
        tableswitch(i0)
        {
            case 24: goto label4;
            case 25: goto label4;
            case 26: goto label4;
            case 27: goto label4;
            default: goto label3;
        };

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid broadcast type:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HdmiRecordSources", $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid broadcast system value:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label4:
        $r13 = new android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource;

        specialinvoke $r13.<android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource: void <init>(int,int,android.hardware.hdmi.HdmiRecordSources$DigitalServiceIdentification,android.hardware.hdmi.HdmiRecordSources$1)>(1, i0, r10, null);

        return $r13;

     label5:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("data should not be null.");

        throw $r0;
    }

    public static android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource ofDvb(int, android.hardware.hdmi.HdmiRecordSources$DvbData)
    {
        int i0;
        java.lang.IllegalArgumentException $r0, $r9;
        android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource $r1;
        java.lang.StringBuilder $r2, $r6;
        java.lang.String $r5, $r10;
        android.hardware.hdmi.HdmiRecordSources$DvbData r11;

        i0 := @parameter0: int;

        r11 := @parameter1: android.hardware.hdmi.HdmiRecordSources$DvbData;

        if r11 == null goto label3;

        if i0 == 2 goto label2;

        tableswitch(i0)
        {
            case 24: goto label2;
            case 25: goto label2;
            case 26: goto label2;
            case 27: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid DVB type:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HdmiRecordSources", $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid DVB type:");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label2:
        $r1 = new android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource;

        specialinvoke $r1.<android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource: void <init>(int,int,android.hardware.hdmi.HdmiRecordSources$DigitalServiceIdentification,android.hardware.hdmi.HdmiRecordSources$1)>(0, i0, r11, null);

        return $r1;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("data should not be null.");

        throw $r0;
    }

    public static android.hardware.hdmi.HdmiRecordSources$ExternalPhysicalAddress ofExternalPhysicalAddress(int)
    {
        int i0, $i1;
        java.lang.StringBuilder $r0, $r4;
        java.lang.String $r3, $r8;
        java.lang.IllegalArgumentException $r7;
        android.hardware.hdmi.HdmiRecordSources$ExternalPhysicalAddress $r9;

        i0 := @parameter0: int;

        $i1 = -65536 & i0;

        if $i1 != 0 goto label1;

        $r9 = new android.hardware.hdmi.HdmiRecordSources$ExternalPhysicalAddress;

        specialinvoke $r9.<android.hardware.hdmi.HdmiRecordSources$ExternalPhysicalAddress: void <init>(int,android.hardware.hdmi.HdmiRecordSources$1)>(i0, null);

        return $r9;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid physical address:");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HdmiRecordSources", $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid physical address:");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public static android.hardware.hdmi.HdmiRecordSources$ExternalPlugData ofExternalPlug(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r4;
        java.lang.String $r3, $r8;
        java.lang.IllegalArgumentException $r7;
        android.hardware.hdmi.HdmiRecordSources$ExternalPlugData $r9;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        if i0 > 255 goto label1;

        $r9 = new android.hardware.hdmi.HdmiRecordSources$ExternalPlugData;

        specialinvoke $r9.<android.hardware.hdmi.HdmiRecordSources$ExternalPlugData: void <init>(int,android.hardware.hdmi.HdmiRecordSources$1)>(i0, null);

        return $r9;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid plug number[1-255]");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HdmiRecordSources", $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid plug number[1-255]");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public static android.hardware.hdmi.HdmiRecordSources$OwnSource ofOwnSource()
    {
        android.hardware.hdmi.HdmiRecordSources$OwnSource $r0;

        $r0 = new android.hardware.hdmi.HdmiRecordSources$OwnSource;

        specialinvoke $r0.<android.hardware.hdmi.HdmiRecordSources$OwnSource: void <init>(android.hardware.hdmi.HdmiRecordSources$1)>(null);

        return $r0;
    }

    private static int shortToByteArray(short, byte[], int)
    {
        short s0, $s2, $s3, $s6;
        byte[] r0;
        int i1, $i9;
        byte $b4, $b5, $b7, $b8;

        s0 := @parameter0: short;

        r0 := @parameter1: byte[];

        i1 := @parameter2: int;

        $s2 = s0 >>> 8;

        $s3 = $s2 & 255;

        $b4 = (byte) $s3;

        $b5 = (byte) $b4;

        r0[i1] = $b5;

        $i9 = i1 + 1;

        $s6 = s0 & 255;

        $b7 = (byte) $s6;

        $b8 = (byte) $b7;

        r0[$i9] = $b8;

        return 2;
    }

    private static int threeFieldsToSixBytes(int, int, int, byte[], int)
    {
        int i0, i1, i2, i3, $i6, $i9;
        byte[] r0;
        short $s4, $s7, $s10;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: byte[];

        i3 := @parameter4: int;

        $s4 = (short) i0;

        staticinvoke <android.hardware.hdmi.HdmiRecordSources: int shortToByteArray(short,byte[],int)>($s4, r0, i3);

        $s7 = (short) i1;

        $i6 = i3 + 2;

        staticinvoke <android.hardware.hdmi.HdmiRecordSources: int shortToByteArray(short,byte[],int)>($s7, r0, $i6);

        $s10 = (short) i2;

        $i9 = i3 + 4;

        staticinvoke <android.hardware.hdmi.HdmiRecordSources: int shortToByteArray(short,byte[],int)>($s10, r0, $i9);

        return 6;
    }

    public static void <clinit>()
    {
        <android.hardware.hdmi.HdmiRecordSources: java.lang.String TAG> = "HdmiRecordSources";

        <android.hardware.hdmi.HdmiRecordSources: int RECORD_SOURCE_TYPE_OWN_SOURCE> = 1;

        <android.hardware.hdmi.HdmiRecordSources: int RECORD_SOURCE_TYPE_EXTERNAL_PLUG> = 4;

        <android.hardware.hdmi.HdmiRecordSources: int RECORD_SOURCE_TYPE_EXTERNAL_PHYSICAL_ADDRESS> = 5;

        <android.hardware.hdmi.HdmiRecordSources: int RECORD_SOURCE_TYPE_DIGITAL_SERVICE> = 2;

        <android.hardware.hdmi.HdmiRecordSources: int RECORD_SOURCE_TYPE_ANALOGUE_SERVICE> = 3;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_DVB_T> = 27;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_DVB_S2> = 26;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_DVB_S> = 25;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_DVB_C> = 24;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_DVB> = 2;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_ATSC_TERRESTRIAL> = 18;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_ATSC_SATELLITE> = 17;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_ATSC_CABLE> = 16;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_ATSC> = 1;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_ARIB_T> = 10;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_ARIB_CS> = 9;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_ARIB_BS> = 8;

        <android.hardware.hdmi.HdmiRecordSources: int DIGITAL_BROADCAST_TYPE_ARIB> = 0;

        <android.hardware.hdmi.HdmiRecordSources: int CHANNEL_NUMBER_FORMAT_2_PART> = 2;

        <android.hardware.hdmi.HdmiRecordSources: int CHANNEL_NUMBER_FORMAT_1_PART> = 1;

        <android.hardware.hdmi.HdmiRecordSources: int BROADCAST_SYSTEM_SECAM_LP> = 1;

        <android.hardware.hdmi.HdmiRecordSources: int BROADCAST_SYSTEM_SECAM_L> = 7;

        <android.hardware.hdmi.HdmiRecordSources: int BROADCAST_SYSTEM_SECAM_DK> = 5;

        <android.hardware.hdmi.HdmiRecordSources: int BROADCAST_SYSTEM_SECAM_BG> = 6;

        <android.hardware.hdmi.HdmiRecordSources: int BROADCAST_SYSTEM_PAL_OTHER_SYSTEM> = 31;

        <android.hardware.hdmi.HdmiRecordSources: int BROADCAST_SYSTEM_PAL_M> = 2;

        <android.hardware.hdmi.HdmiRecordSources: int BROADCAST_SYSTEM_PAL_I> = 4;

        <android.hardware.hdmi.HdmiRecordSources: int BROADCAST_SYSTEM_PAL_DK> = 8;

        <android.hardware.hdmi.HdmiRecordSources: int BROADCAST_SYSTEM_PAL_BG> = 0;

        <android.hardware.hdmi.HdmiRecordSources: int BROADCAST_SYSTEM_NTSC_M> = 3;

        <android.hardware.hdmi.HdmiRecordSources: int ANALOGUE_BROADCAST_TYPE_TERRESTRIAL> = 2;

        <android.hardware.hdmi.HdmiRecordSources: int ANALOGUE_BROADCAST_TYPE_SATELLITE> = 1;

        <android.hardware.hdmi.HdmiRecordSources: int ANALOGUE_BROADCAST_TYPE_CABLE> = 0;

        return;
    }
}
