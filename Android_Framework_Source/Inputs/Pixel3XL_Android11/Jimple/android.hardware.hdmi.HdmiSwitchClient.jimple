public class android.hardware.hdmi.HdmiSwitchClient extends android.hardware.hdmi.HdmiClient
{
    private static final java.lang.String TAG;

    void <init>(android.hardware.hdmi.IHdmiControlService)
    {
        android.hardware.hdmi.HdmiSwitchClient r0;
        android.hardware.hdmi.IHdmiControlService r1;

        r0 := @this: android.hardware.hdmi.HdmiSwitchClient;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlService;

        specialinvoke r0.<android.hardware.hdmi.HdmiClient: void <init>(android.hardware.hdmi.IHdmiControlService)>(r1);

        return;
    }

    private static android.hardware.hdmi.IHdmiControlCallback getCallbackWrapper(android.hardware.hdmi.HdmiSwitchClient$OnSelectListener)
    {
        android.hardware.hdmi.HdmiSwitchClient$OnSelectListener r0;
        android.hardware.hdmi.HdmiSwitchClient$1 $r1;

        r0 := @parameter0: android.hardware.hdmi.HdmiSwitchClient$OnSelectListener;

        $r1 = new android.hardware.hdmi.HdmiSwitchClient$1;

        specialinvoke $r1.<android.hardware.hdmi.HdmiSwitchClient$1: void <init>(android.hardware.hdmi.HdmiSwitchClient$OnSelectListener)>(r0);

        return $r1;
    }

    public java.util.List getDeviceList()
    {
        android.hardware.hdmi.HdmiSwitchClient r0;
        android.hardware.hdmi.IHdmiControlService $r1;
        android.os.RemoteException $r2;
        java.util.List $r3, r4;

        r0 := @this: android.hardware.hdmi.HdmiSwitchClient;

     label1:
        $r1 = r0.<android.hardware.hdmi.HdmiSwitchClient: android.hardware.hdmi.IHdmiControlService mService>;

        r4 = interfaceinvoke $r1.<android.hardware.hdmi.IHdmiControlService: java.util.List getDeviceList()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TAG", "Failed to call getDeviceList():", $r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getDeviceType()
    {
        android.hardware.hdmi.HdmiSwitchClient r0;

        r0 := @this: android.hardware.hdmi.HdmiSwitchClient;

        return 6;
    }

    public java.util.List getPortInfo()
    {
        android.hardware.hdmi.HdmiSwitchClient r0;
        android.hardware.hdmi.IHdmiControlService $r1;
        android.os.RemoteException $r2;
        java.util.List $r3, r4;

        r0 := @this: android.hardware.hdmi.HdmiSwitchClient;

     label1:
        $r1 = r0.<android.hardware.hdmi.HdmiSwitchClient: android.hardware.hdmi.IHdmiControlService mService>;

        r4 = interfaceinvoke $r1.<android.hardware.hdmi.IHdmiControlService: java.util.List getPortInfo()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TAG", "Failed to call getPortInfo():", $r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void selectDevice(int, android.hardware.hdmi.HdmiSwitchClient$OnSelectListener)
    {
        android.hardware.hdmi.HdmiSwitchClient r0;
        int i0;
        android.hardware.hdmi.IHdmiControlService $r2;
        android.hardware.hdmi.IHdmiControlCallback $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.hardware.hdmi.HdmiSwitchClient$OnSelectListener r6;

        r0 := @this: android.hardware.hdmi.HdmiSwitchClient;

        i0 := @parameter0: int;

        r6 := @parameter1: android.hardware.hdmi.HdmiSwitchClient$OnSelectListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r6);

     label1:
        $r2 = r0.<android.hardware.hdmi.HdmiSwitchClient: android.hardware.hdmi.IHdmiControlService mService>;

        $r3 = staticinvoke <android.hardware.hdmi.HdmiSwitchClient: android.hardware.hdmi.IHdmiControlCallback getCallbackWrapper(android.hardware.hdmi.HdmiSwitchClient$OnSelectListener)>(r6);

        interfaceinvoke $r2.<android.hardware.hdmi.IHdmiControlService: void deviceSelect(int,android.hardware.hdmi.IHdmiControlCallback)>(i0, $r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("HdmiSwitchClient", "failed to select device: ", $r4);

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void selectDevice(int, java.util.concurrent.Executor, android.hardware.hdmi.HdmiSwitchClient$OnSelectListener)
    {
        android.hardware.hdmi.HdmiSwitchClient r0;
        int i0;
        android.hardware.hdmi.HdmiSwitchClient$OnSelectListener r1;
        android.hardware.hdmi.IHdmiControlService r2;
        android.hardware.hdmi.HdmiSwitchClient$2 r3;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.util.concurrent.Executor r7;

        r0 := @this: android.hardware.hdmi.HdmiSwitchClient;

        i0 := @parameter0: int;

        r7 := @parameter1: java.util.concurrent.Executor;

        r1 := @parameter2: android.hardware.hdmi.HdmiSwitchClient$OnSelectListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

     label1:
        r2 = r0.<android.hardware.hdmi.HdmiSwitchClient: android.hardware.hdmi.IHdmiControlService mService>;

        r3 = new android.hardware.hdmi.HdmiSwitchClient$2;

        specialinvoke r3.<android.hardware.hdmi.HdmiSwitchClient$2: void <init>(android.hardware.hdmi.HdmiSwitchClient,java.util.concurrent.Executor,android.hardware.hdmi.HdmiSwitchClient$OnSelectListener)>(r0, r7, r1);

        interfaceinvoke r2.<android.hardware.hdmi.IHdmiControlService: void deviceSelect(int,android.hardware.hdmi.IHdmiControlCallback)>(i0, r3);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("HdmiSwitchClient", "failed to select device: ", $r5);

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void selectPort(int, android.hardware.hdmi.HdmiSwitchClient$OnSelectListener)
    {
        android.hardware.hdmi.HdmiSwitchClient r0;
        int i0;
        android.hardware.hdmi.IHdmiControlService $r2;
        android.hardware.hdmi.IHdmiControlCallback $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.hardware.hdmi.HdmiSwitchClient$OnSelectListener r6;

        r0 := @this: android.hardware.hdmi.HdmiSwitchClient;

        i0 := @parameter0: int;

        r6 := @parameter1: android.hardware.hdmi.HdmiSwitchClient$OnSelectListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r6);

     label1:
        $r2 = r0.<android.hardware.hdmi.HdmiSwitchClient: android.hardware.hdmi.IHdmiControlService mService>;

        $r3 = staticinvoke <android.hardware.hdmi.HdmiSwitchClient: android.hardware.hdmi.IHdmiControlCallback getCallbackWrapper(android.hardware.hdmi.HdmiSwitchClient$OnSelectListener)>(r6);

        interfaceinvoke $r2.<android.hardware.hdmi.IHdmiControlService: void portSelect(int,android.hardware.hdmi.IHdmiControlCallback)>(i0, $r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("HdmiSwitchClient", "failed to select port: ", $r4);

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void selectPort(int, java.util.concurrent.Executor, android.hardware.hdmi.HdmiSwitchClient$OnSelectListener)
    {
        android.hardware.hdmi.HdmiSwitchClient r0;
        int i0;
        android.hardware.hdmi.HdmiSwitchClient$OnSelectListener r1;
        android.hardware.hdmi.IHdmiControlService r2;
        android.hardware.hdmi.HdmiSwitchClient$3 r3;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.util.concurrent.Executor r7;

        r0 := @this: android.hardware.hdmi.HdmiSwitchClient;

        i0 := @parameter0: int;

        r7 := @parameter1: java.util.concurrent.Executor;

        r1 := @parameter2: android.hardware.hdmi.HdmiSwitchClient$OnSelectListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

     label1:
        r2 = r0.<android.hardware.hdmi.HdmiSwitchClient: android.hardware.hdmi.IHdmiControlService mService>;

        r3 = new android.hardware.hdmi.HdmiSwitchClient$3;

        specialinvoke r3.<android.hardware.hdmi.HdmiSwitchClient$3: void <init>(android.hardware.hdmi.HdmiSwitchClient,java.util.concurrent.Executor,android.hardware.hdmi.HdmiSwitchClient$OnSelectListener)>(r0, r7, r1);

        interfaceinvoke r2.<android.hardware.hdmi.IHdmiControlService: void portSelect(int,android.hardware.hdmi.IHdmiControlCallback)>(i0, r3);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("HdmiSwitchClient", "failed to select port: ", $r5);

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.hardware.hdmi.HdmiSwitchClient: java.lang.String TAG> = "HdmiSwitchClient";

        return;
    }
}
