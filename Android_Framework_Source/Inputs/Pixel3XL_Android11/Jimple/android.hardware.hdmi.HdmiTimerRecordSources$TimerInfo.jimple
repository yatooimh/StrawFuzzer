public final class android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo extends java.lang.Object
{
    private static final int BASIC_INFO_SIZE;
    private static final int DAY_OF_MONTH_SIZE;
    private static final int DURATION_SIZE;
    private static final int MONTH_OF_YEAR_SIZE;
    private static final int RECORDING_SEQUENCE_SIZE;
    private static final int START_TIME_SIZE;
    private final int mDayOfMonth;
    private final android.hardware.hdmi.HdmiTimerRecordSources$Duration mDuration;
    private final int mMonthOfYear;
    private final int mRecordingSequence;
    private final android.hardware.hdmi.HdmiTimerRecordSources$Time mStartTime;

    private void <init>(int, int, android.hardware.hdmi.HdmiTimerRecordSources$Time, android.hardware.hdmi.HdmiTimerRecordSources$Duration, int)
    {
        android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo r0;
        int i0, i1, i2;
        android.hardware.hdmi.HdmiTimerRecordSources$Time r1;
        android.hardware.hdmi.HdmiTimerRecordSources$Duration r2;

        r0 := @this: android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.hardware.hdmi.HdmiTimerRecordSources$Time;

        r2 := @parameter3: android.hardware.hdmi.HdmiTimerRecordSources$Duration;

        i2 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int mDayOfMonth> = i0;

        r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int mMonthOfYear> = i1;

        r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: android.hardware.hdmi.HdmiTimerRecordSources$Time mStartTime> = r1;

        r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: android.hardware.hdmi.HdmiTimerRecordSources$Duration mDuration> = r2;

        r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int mRecordingSequence> = i2;

        return;
    }

    void <init>(int, int, android.hardware.hdmi.HdmiTimerRecordSources$Time, android.hardware.hdmi.HdmiTimerRecordSources$Duration, int, android.hardware.hdmi.HdmiTimerRecordSources$1)
    {
        android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo r0;
        int i0, i1, i2;
        android.hardware.hdmi.HdmiTimerRecordSources$Time r1;
        android.hardware.hdmi.HdmiTimerRecordSources$Duration r2;
        android.hardware.hdmi.HdmiTimerRecordSources$1 r3;

        r0 := @this: android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.hardware.hdmi.HdmiTimerRecordSources$Time;

        r2 := @parameter3: android.hardware.hdmi.HdmiTimerRecordSources$Duration;

        i2 := @parameter4: int;

        r3 := @parameter5: android.hardware.hdmi.HdmiTimerRecordSources$1;

        specialinvoke r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: void <init>(int,int,android.hardware.hdmi.HdmiTimerRecordSources$Time,android.hardware.hdmi.HdmiTimerRecordSources$Duration,int)>(i0, i1, r1, r2, i2);

        return;
    }

    int getDataSize()
    {
        android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo r0;

        r0 := @this: android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo;

        return 7;
    }

    int toByteArray(byte[], int)
    {
        android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo r0;
        byte[] r1;
        int $i0, $i3, $i6, $i7, $i8, $i11, $i12, i13, i14, i15, i16;
        byte $b1, $b2, $b4, $b5, $b9, $b10;
        android.hardware.hdmi.HdmiTimerRecordSources$Time $r2;
        android.hardware.hdmi.HdmiTimerRecordSources$Duration $r3;

        r0 := @this: android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo;

        r1 := @parameter0: byte[];

        i13 := @parameter1: int;

        $i0 = r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int mDayOfMonth>;

        $b1 = (byte) $i0;

        $b2 = (byte) $b1;

        r1[i13] = $b2;

        i14 = i13 + 1;

        $i3 = r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int mMonthOfYear>;

        $b4 = (byte) $i3;

        $b5 = (byte) $b4;

        r1[i14] = $b5;

        i15 = i14 + 1;

        $r2 = r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: android.hardware.hdmi.HdmiTimerRecordSources$Time mStartTime>;

        $i6 = virtualinvoke $r2.<android.hardware.hdmi.HdmiTimerRecordSources$Time: int toByteArray(byte[],int)>(r1, i15);

        i16 = i15 + $i6;

        $r3 = r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: android.hardware.hdmi.HdmiTimerRecordSources$Duration mDuration>;

        $i7 = virtualinvoke $r3.<android.hardware.hdmi.HdmiTimerRecordSources$Duration: int toByteArray(byte[],int)>(r1, i16);

        $i11 = i16 + $i7;

        $i8 = r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int mRecordingSequence>;

        $b9 = (byte) $i8;

        $b10 = (byte) $b9;

        r1[$i11] = $b10;

        $i12 = virtualinvoke r0.<android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int getDataSize()>();

        return $i12;
    }

    public static void <clinit>()
    {
        <android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int START_TIME_SIZE> = 2;

        <android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int RECORDING_SEQUENCE_SIZE> = 1;

        <android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int MONTH_OF_YEAR_SIZE> = 1;

        <android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int DURATION_SIZE> = 2;

        <android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int DAY_OF_MONTH_SIZE> = 1;

        <android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo: int BASIC_INFO_SIZE> = 7;

        return;
    }
}
