public class android.hardware.hdmi.IHdmiControlService$Default extends java.lang.Object implements android.hardware.hdmi.IHdmiControlService
{

    public void <init>()
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiDeviceEventListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiDeviceEventListener;

        return;
    }

    public void addHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener;

        return;
    }

    public void addHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiControlStatusChangeListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlStatusChangeListener;

        return;
    }

    public void addHdmiMhlVendorCommandListener(android.hardware.hdmi.IHdmiMhlVendorCommandListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiMhlVendorCommandListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiMhlVendorCommandListener;

        return;
    }

    public void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiHotplugEventListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiHotplugEventListener;

        return;
    }

    public void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener;

        return;
    }

    public void addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiVendorCommandListener r1;
        int i0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiVendorCommandListener;

        i0 := @parameter1: int;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return null;
    }

    public void askRemoteDeviceToBecomeActiveSource(int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        return;
    }

    public boolean canChangeSystemAudioMode() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return 0;
    }

    public void clearTimerRecording(int, int, byte[]) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1;
        byte[] r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        return;
    }

    public void deviceSelect(int, android.hardware.hdmi.IHdmiControlCallback) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    public android.hardware.hdmi.HdmiDeviceInfo getActiveSource() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return null;
    }

    public java.util.List getDeviceList() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return null;
    }

    public java.util.List getInputDevices() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return null;
    }

    public int getPhysicalAddress() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return 0;
    }

    public java.util.List getPortInfo() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return null;
    }

    public int[] getSupportedTypes() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return null;
    }

    public boolean getSystemAudioMode() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return 0;
    }

    public boolean isHdmiCecVolumeControlEnabled() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return 0;
    }

    public void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    public void portSelect(int, android.hardware.hdmi.IHdmiControlCallback) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    public void powerOffRemoteDevice(int, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void powerOnRemoteDevice(int, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    public void removeHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener;

        return;
    }

    public void removeHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiControlStatusChangeListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlStatusChangeListener;

        return;
    }

    public void removeHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiHotplugEventListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiHotplugEventListener;

        return;
    }

    public void removeSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener;

        return;
    }

    public void reportAudioStatus(int, int, int, boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        return;
    }

    public void sendKeyEvent(int, int, boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        return;
    }

    public void sendMhlVendorCommand(int, int, int, byte[]) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1, i2;
        byte[] r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: byte[];

        return;
    }

    public void sendStandby(int, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void sendVendorCommand(int, int, byte[], boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1;
        byte[] r1;
        boolean z0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        z0 := @parameter3: boolean;

        return;
    }

    public void sendVolumeKeyEvent(int, int, boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        return;
    }

    public void setArcMode(boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        boolean z0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void setHdmiCecVolumeControlEnabled(boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        boolean z0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiRecordListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiRecordListener;

        return;
    }

    public void setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        android.hardware.hdmi.IHdmiInputChangeListener r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        r1 := @parameter0: android.hardware.hdmi.IHdmiInputChangeListener;

        return;
    }

    public void setProhibitMode(boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        boolean z0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void setStandbyMode(boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        boolean z0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void setSystemAudioMode(boolean, android.hardware.hdmi.IHdmiControlCallback) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        boolean z0;
        android.hardware.hdmi.IHdmiControlCallback r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        return;
    }

    public void setSystemAudioModeOnForAudioOnlySource() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        return;
    }

    public void setSystemAudioMute(boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        boolean z0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void setSystemAudioVolume(int, int, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1, i2;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return;
    }

    public void startOneTouchRecord(int, byte[]) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0;
        byte[] r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        return;
    }

    public void startTimerRecording(int, int, byte[]) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0, i1;
        byte[] r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        return;
    }

    public void stopOneTouchRecord(int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Default r0;
        int i0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Default;

        i0 := @parameter0: int;

        return;
    }
}
