class android.hardware.hdmi.IHdmiControlService$Stub$Proxy extends java.lang.Object implements android.hardware.hdmi.IHdmiControlService
{
    public static android.hardware.hdmi.IHdmiControlService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiDeviceEventListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiDeviceEventListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiDeviceEventListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void addHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiControlStatusChangeListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiControlStatusChangeListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiControlStatusChangeListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void addHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addHdmiMhlVendorCommandListener(android.hardware.hdmi.IHdmiMhlVendorCommandListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiMhlVendorCommandListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiMhlVendorCommandListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiMhlVendorCommandListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void addHdmiMhlVendorCommandListener(android.hardware.hdmi.IHdmiMhlVendorCommandListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiHotplugEventListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiHotplugEventListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiHotplugEventListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiVendorCommandListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiVendorCommandListener;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiVendorCommandListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        $r1 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void askRemoteDeviceToBecomeActiveSource(int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void askRemoteDeviceToBecomeActiveSource(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean canChangeSystemAudioMode() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.hardware.hdmi.IHdmiControlService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        r6 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.hdmi.IHdmiControlService: boolean canChangeSystemAudioMode()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void clearTimerRecording(int, int, byte[]) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void clearTimerRecording(int,int,byte[])>(i0, i1, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void deviceSelect(int, android.hardware.hdmi.IHdmiControlCallback) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiControlCallback r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiControlCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void deviceSelect(int,android.hardware.hdmi.IHdmiControlCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.hardware.hdmi.HdmiDeviceInfo getActiveSource() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.hdmi.IHdmiControlService $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.hdmi.HdmiDeviceInfo r9, r10;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.hdmi.IHdmiControlService: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.hdmi.HdmiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.hdmi.HdmiDeviceInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.util.List getDeviceList() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: java.util.List getDeviceList()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.hardware.hdmi.HdmiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getInputDevices() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: java.util.List getInputDevices()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.hardware.hdmi.HdmiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        return "android.hardware.hdmi.IHdmiControlService";
    }

    public int getPhysicalAddress() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: int getPhysicalAddress()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getPortInfo() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: java.util.List getPortInfo()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.hardware.hdmi.HdmiPortInfo: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int[] getSupportedTypes() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: int[] getSupportedTypes()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean getSystemAudioMode() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.hardware.hdmi.IHdmiControlService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        r6 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.hdmi.IHdmiControlService: boolean getSystemAudioMode()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isHdmiCecVolumeControlEnabled() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.hardware.hdmi.IHdmiControlService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        r6 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.hdmi.IHdmiControlService: boolean isHdmiCecVolumeControlEnabled()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiControlCallback r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiControlCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void portSelect(int, android.hardware.hdmi.IHdmiControlCallback) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiControlCallback r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiControlCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void portSelect(int,android.hardware.hdmi.IHdmiControlCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void powerOffRemoteDevice(int, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void powerOffRemoteDevice(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void powerOnRemoteDevice(int, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void powerOnRemoteDevice(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiControlCallback r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiControlCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiControlCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void removeHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiControlStatusChangeListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiControlStatusChangeListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiControlStatusChangeListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void removeHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiHotplugEventListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiHotplugEventListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiHotplugEventListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void removeHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void removeSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void reportAudioStatus(int, int, int, boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1, i2;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        byte b3;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label2:
        if z0 == 0 goto label3;

        b3 = 1;

        goto label4;

     label3:
        b3 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b3);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void reportAudioStatus(int,int,int,boolean)>(i0, i1, i2, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void sendKeyEvent(int, int, boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        byte b2;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void sendKeyEvent(int,int,boolean)>(i0, i1, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void sendMhlVendorCommand(int, int, int, byte[]) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r7 := @parameter3: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void sendMhlVendorCommand(int,int,int,byte[])>(i0, i1, i2, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void sendStandby(int, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void sendStandby(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void sendVendorCommand(int, int, byte[], boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7;
        byte b2;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: byte[];

        z0 := @parameter3: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void sendVendorCommand(int,int,byte[],boolean)>(i0, i1, r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void sendVolumeKeyEvent(int, int, boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        byte b2;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void sendVolumeKeyEvent(int,int,boolean)>(i0, i1, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setArcMode(boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void setArcMode(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setHdmiCecVolumeControlEnabled(boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void setHdmiCecVolumeControlEnabled(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiRecordListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiRecordListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiRecordListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiInputChangeListener r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r7 := @parameter0: android.hardware.hdmi.IHdmiInputChangeListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiInputChangeListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setProhibitMode(boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void setProhibitMode(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setStandbyMode(boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void setStandbyMode(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setSystemAudioMode(boolean, android.hardware.hdmi.IHdmiControlCallback) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.hdmi.IHdmiControlCallback r7;
        byte b0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r7 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label02:
        if z0 == 0 goto label03;

        b0 = 1;

        goto label04;

     label03:
        b0 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

     label05:
        if r7 == null goto label08;

     label06:
        r8 = interfaceinvoke r7.<android.hardware.hdmi.IHdmiControlCallback: android.os.IBinder asBinder()>();

     label07:
        goto label09;

     label08:
        r8 = null;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z1 != 0 goto label11;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label11;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void setSystemAudioMode(boolean,android.hardware.hdmi.IHdmiControlCallback)>(z0, r7);

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void setSystemAudioModeOnForAudioOnlySource() throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void setSystemAudioModeOnForAudioOnlySource()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setSystemAudioMute(boolean) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void setSystemAudioMute(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setSystemAudioVolume(int, int, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void setSystemAudioVolume(int,int,int)>(i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void startOneTouchRecord(int, byte[]) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void startOneTouchRecord(int,byte[])>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void startTimerRecording(int, int, byte[]) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

        $r3 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.hdmi.IHdmiControlService: void startTimerRecording(int,int,byte[])>(i0, i1, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void stopOneTouchRecord(int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void stopOneTouchRecord(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
