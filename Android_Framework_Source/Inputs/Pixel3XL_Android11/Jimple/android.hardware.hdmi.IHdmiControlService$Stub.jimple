public abstract class android.hardware.hdmi.IHdmiControlService$Stub extends android.os.Binder implements android.hardware.hdmi.IHdmiControlService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addDeviceEventListener;
    static final int TRANSACTION_addHdmiCecVolumeControlFeatureListener;
    static final int TRANSACTION_addHdmiControlStatusChangeListener;
    static final int TRANSACTION_addHdmiMhlVendorCommandListener;
    static final int TRANSACTION_addHotplugEventListener;
    static final int TRANSACTION_addSystemAudioModeChangeListener;
    static final int TRANSACTION_addVendorCommandListener;
    static final int TRANSACTION_askRemoteDeviceToBecomeActiveSource;
    static final int TRANSACTION_canChangeSystemAudioMode;
    static final int TRANSACTION_clearTimerRecording;
    static final int TRANSACTION_deviceSelect;
    static final int TRANSACTION_getActiveSource;
    static final int TRANSACTION_getDeviceList;
    static final int TRANSACTION_getInputDevices;
    static final int TRANSACTION_getPhysicalAddress;
    static final int TRANSACTION_getPortInfo;
    static final int TRANSACTION_getSupportedTypes;
    static final int TRANSACTION_getSystemAudioMode;
    static final int TRANSACTION_isHdmiCecVolumeControlEnabled;
    static final int TRANSACTION_oneTouchPlay;
    static final int TRANSACTION_portSelect;
    static final int TRANSACTION_powerOffRemoteDevice;
    static final int TRANSACTION_powerOnRemoteDevice;
    static final int TRANSACTION_queryDisplayStatus;
    static final int TRANSACTION_removeHdmiCecVolumeControlFeatureListener;
    static final int TRANSACTION_removeHdmiControlStatusChangeListener;
    static final int TRANSACTION_removeHotplugEventListener;
    static final int TRANSACTION_removeSystemAudioModeChangeListener;
    static final int TRANSACTION_reportAudioStatus;
    static final int TRANSACTION_sendKeyEvent;
    static final int TRANSACTION_sendMhlVendorCommand;
    static final int TRANSACTION_sendStandby;
    static final int TRANSACTION_sendVendorCommand;
    static final int TRANSACTION_sendVolumeKeyEvent;
    static final int TRANSACTION_setArcMode;
    static final int TRANSACTION_setHdmiCecVolumeControlEnabled;
    static final int TRANSACTION_setHdmiRecordListener;
    static final int TRANSACTION_setInputChangeListener;
    static final int TRANSACTION_setProhibitMode;
    static final int TRANSACTION_setStandbyMode;
    static final int TRANSACTION_setSystemAudioMode;
    static final int TRANSACTION_setSystemAudioModeOnForAudioOnlySource;
    static final int TRANSACTION_setSystemAudioMute;
    static final int TRANSACTION_setSystemAudioVolume;
    static final int TRANSACTION_startOneTouchRecord;
    static final int TRANSACTION_startTimerRecording;
    static final int TRANSACTION_stopOneTouchRecord;

    public void <init>()
    {
        android.hardware.hdmi.IHdmiControlService$Stub r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.hardware.hdmi.IHdmiControlService");

        return;
    }

    public static android.hardware.hdmi.IHdmiControlService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.hardware.hdmi.IHdmiControlService$Stub$Proxy $r2;
        boolean $z0;
        android.hardware.hdmi.IHdmiControlService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.hardware.hdmi.IHdmiControlService;

        if $z0 == 0 goto label2;

        $r3 = (android.hardware.hdmi.IHdmiControlService) r1;

        return $r3;

     label2:
        $r2 = new android.hardware.hdmi.IHdmiControlService$Stub$Proxy;

        specialinvoke $r2.<android.hardware.hdmi.IHdmiControlService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.hardware.hdmi.IHdmiControlService getDefaultImpl()
    {
        android.hardware.hdmi.IHdmiControlService $r0;

        $r0 = <android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.hardware.hdmi.IHdmiControlService sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label48;
            case 2: goto label47;
            case 3: goto label46;
            case 4: goto label45;
            case 5: goto label44;
            case 6: goto label43;
            case 7: goto label42;
            case 8: goto label41;
            case 9: goto label40;
            case 10: goto label39;
            case 11: goto label38;
            case 12: goto label37;
            case 13: goto label36;
            case 14: goto label35;
            case 15: goto label34;
            case 16: goto label33;
            case 17: goto label32;
            case 18: goto label31;
            case 19: goto label30;
            case 20: goto label29;
            case 21: goto label28;
            case 22: goto label27;
            case 23: goto label26;
            case 24: goto label25;
            case 25: goto label24;
            case 26: goto label23;
            case 27: goto label22;
            case 28: goto label21;
            case 29: goto label20;
            case 30: goto label19;
            case 31: goto label18;
            case 32: goto label17;
            case 33: goto label16;
            case 34: goto label15;
            case 35: goto label14;
            case 36: goto label13;
            case 37: goto label12;
            case 38: goto label11;
            case 39: goto label10;
            case 40: goto label09;
            case 41: goto label08;
            case 42: goto label07;
            case 43: goto label06;
            case 44: goto label05;
            case 45: goto label04;
            case 46: goto label03;
            case 47: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "setSystemAudioModeOnForAudioOnlySource";

     label03:
        return "reportAudioStatus";

     label04:
        return "isHdmiCecVolumeControlEnabled";

     label05:
        return "setHdmiCecVolumeControlEnabled";

     label06:
        return "setStandbyMode";

     label07:
        return "addHdmiMhlVendorCommandListener";

     label08:
        return "sendMhlVendorCommand";

     label09:
        return "clearTimerRecording";

     label10:
        return "startTimerRecording";

     label11:
        return "stopOneTouchRecord";

     label12:
        return "startOneTouchRecord";

     label13:
        return "setHdmiRecordListener";

     label14:
        return "sendStandby";

     label15:
        return "addVendorCommandListener";

     label16:
        return "sendVendorCommand";

     label17:
        return "askRemoteDeviceToBecomeActiveSource";

     label18:
        return "powerOnRemoteDevice";

     label19:
        return "powerOffRemoteDevice";

     label20:
        return "getDeviceList";

     label21:
        return "getInputDevices";

     label22:
        return "setInputChangeListener";

     label23:
        return "setSystemAudioMute";

     label24:
        return "setSystemAudioVolume";

     label25:
        return "setProhibitMode";

     label26:
        return "setArcMode";

     label27:
        return "removeSystemAudioModeChangeListener";

     label28:
        return "addSystemAudioModeChangeListener";

     label29:
        return "setSystemAudioMode";

     label30:
        return "getPhysicalAddress";

     label31:
        return "getSystemAudioMode";

     label32:
        return "canChangeSystemAudioMode";

     label33:
        return "getPortInfo";

     label34:
        return "sendVolumeKeyEvent";

     label35:
        return "sendKeyEvent";

     label36:
        return "portSelect";

     label37:
        return "deviceSelect";

     label38:
        return "addDeviceEventListener";

     label39:
        return "removeHotplugEventListener";

     label40:
        return "addHotplugEventListener";

     label41:
        return "removeHdmiCecVolumeControlFeatureListener";

     label42:
        return "addHdmiCecVolumeControlFeatureListener";

     label43:
        return "removeHdmiControlStatusChangeListener";

     label44:
        return "addHdmiControlStatusChangeListener";

     label45:
        return "queryDisplayStatus";

     label46:
        return "oneTouchPlay";

     label47:
        return "getActiveSource";

     label48:
        return "getSupportedTypes";
    }

    public static boolean setDefaultImpl(android.hardware.hdmi.IHdmiControlService)
    {
        android.hardware.hdmi.IHdmiControlService r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.hardware.hdmi.IHdmiControlService;

        $r1 = <android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.hardware.hdmi.IHdmiControlService sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.hardware.hdmi.IHdmiControlService$Stub$Proxy: android.hardware.hdmi.IHdmiControlService sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.hdmi.IHdmiControlService$Stub r0;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.hardware.hdmi.IHdmiControlService$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiControlService$Stub r0;
        android.os.Parcel r1, r43;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46;
        byte[] r2, $r5, $r6, $r7, $r8;
        android.os.IBinder $r3, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41;
        android.hardware.hdmi.IHdmiMhlVendorCommandListener $r4;
        android.hardware.hdmi.IHdmiRecordListener $r10;
        android.hardware.hdmi.IHdmiVendorCommandListener $r12;
        android.hardware.hdmi.IHdmiInputChangeListener $r14;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener $r16, $r18;
        android.hardware.hdmi.IHdmiControlCallback $r20, $r22, $r24, $r40, $r42;
        android.hardware.hdmi.IHdmiDeviceEventListener $r26;
        android.hardware.hdmi.IHdmiHotplugEventListener $r28, $r30;
        android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener $r32, $r34;
        android.hardware.hdmi.IHdmiControlStatusChangeListener $r36, $r38;
        boolean $z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22;
        java.util.List r44, r45, r46;
        android.hardware.hdmi.HdmiDeviceInfo r47;
        int[] r48;

        r0 := @this: android.hardware.hdmi.IHdmiControlService$Stub;

        i33 := @parameter0: int;

        r43 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i34 := @parameter3: int;

        if i33 == 1598968902 goto label61;

        z10 = 0;

        tableswitch(i33)
        {
            case 1: goto label60;
            case 2: goto label57;
            case 3: goto label56;
            case 4: goto label55;
            case 5: goto label54;
            case 6: goto label53;
            case 7: goto label52;
            case 8: goto label51;
            case 9: goto label50;
            case 10: goto label49;
            case 11: goto label48;
            case 12: goto label47;
            case 13: goto label46;
            case 14: goto label44;
            case 15: goto label42;
            case 16: goto label41;
            case 17: goto label40;
            case 18: goto label39;
            case 19: goto label38;
            case 20: goto label36;
            case 21: goto label35;
            case 22: goto label34;
            case 23: goto label32;
            case 24: goto label30;
            case 25: goto label29;
            case 26: goto label27;
            case 27: goto label26;
            case 28: goto label25;
            case 29: goto label24;
            case 30: goto label23;
            case 31: goto label22;
            case 32: goto label21;
            case 33: goto label19;
            case 34: goto label18;
            case 35: goto label17;
            case 36: goto label16;
            case 37: goto label15;
            case 38: goto label14;
            case 39: goto label13;
            case 40: goto label12;
            case 41: goto label11;
            case 42: goto label10;
            case 43: goto label08;
            case 44: goto label06;
            case 45: goto label05;
            case 46: goto label03;
            case 47: goto label02;
            default: goto label01;
        };

     label01:
        $z9 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i33, r43, r1, i34);

        return $z9;

     label02:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void setSystemAudioModeOnForAudioOnlySource()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label03:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        i35 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        i0 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        i36 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label04;

        z10 = 1;

     label04:
        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void reportAudioStatus(int,int,int,boolean)>(i35, i0, i36, z10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label05:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        z11 = virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: boolean isHdmiCecVolumeControlEnabled()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i44 = (int) z11;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i44);

        return 1;

     label06:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        z12 = 0;

        $i2 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label07;

        z12 = 1;

     label07:
        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void setHdmiCecVolumeControlEnabled(boolean)>(z12);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label08:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        z13 = 0;

        $i3 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label09;

        z13 = 1;

     label09:
        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void setStandbyMode(boolean)>(z13);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label10:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r3 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: android.hardware.hdmi.IHdmiMhlVendorCommandListener asInterface(android.os.IBinder)>($r3);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void addHdmiMhlVendorCommandListener(android.hardware.hdmi.IHdmiMhlVendorCommandListener)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label11:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i4 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $r5 = virtualinvoke r43.<android.os.Parcel: byte[] createByteArray()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void sendMhlVendorCommand(int,int,int,byte[])>($i4, $i5, $i6, $r5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label12:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i7 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $i8 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $r6 = virtualinvoke r43.<android.os.Parcel: byte[] createByteArray()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void clearTimerRecording(int,int,byte[])>($i7, $i8, $r6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label13:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i9 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $i10 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $r7 = virtualinvoke r43.<android.os.Parcel: byte[] createByteArray()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void startTimerRecording(int,int,byte[])>($i9, $i10, $r7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label14:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i11 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void stopOneTouchRecord(int)>($i11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label15:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i12 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $r8 = virtualinvoke r43.<android.os.Parcel: byte[] createByteArray()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void startOneTouchRecord(int,byte[])>($i12, $r8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label16:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r9 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r10 = staticinvoke <android.hardware.hdmi.IHdmiRecordListener$Stub: android.hardware.hdmi.IHdmiRecordListener asInterface(android.os.IBinder)>($r9);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener)>($r10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i13 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $i14 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void sendStandby(int,int)>($i13, $i14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label18:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r11 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r12 = staticinvoke <android.hardware.hdmi.IHdmiVendorCommandListener$Stub: android.hardware.hdmi.IHdmiVendorCommandListener asInterface(android.os.IBinder)>($r11);

        $i15 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener,int)>($r12, $i15);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label19:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        i37 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        i38 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        r2 = virtualinvoke r43.<android.os.Parcel: byte[] createByteArray()>();

        z14 = 0;

        $i16 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        if $i16 == 0 goto label20;

        z14 = 1;

     label20:
        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void sendVendorCommand(int,int,byte[],boolean)>(i37, i38, r2, z14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label21:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i17 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void askRemoteDeviceToBecomeActiveSource(int)>($i17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label22:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i18 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $i19 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void powerOnRemoteDevice(int,int)>($i18, $i19);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label23:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i20 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $i21 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void powerOffRemoteDevice(int,int)>($i20, $i21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label24:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        r44 = virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: java.util.List getDeviceList()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r44);

        return 1;

     label25:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        r45 = virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: java.util.List getInputDevices()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r45);

        return 1;

     label26:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r13 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r14 = staticinvoke <android.hardware.hdmi.IHdmiInputChangeListener$Stub: android.hardware.hdmi.IHdmiInputChangeListener asInterface(android.os.IBinder)>($r13);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener)>($r14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label27:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        z15 = 0;

        $i22 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        if $i22 == 0 goto label28;

        z15 = 1;

     label28:
        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void setSystemAudioMute(boolean)>(z15);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label29:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i23 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $i24 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $i25 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void setSystemAudioVolume(int,int,int)>($i23, $i24, $i25);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label30:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        z16 = 0;

        $i26 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        if $i26 == 0 goto label31;

        z16 = 1;

     label31:
        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void setProhibitMode(boolean)>(z16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label32:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        z17 = 0;

        $i27 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        if $i27 == 0 goto label33;

        z17 = 1;

     label33:
        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void setArcMode(boolean)>(z17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label34:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r15 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r16 = staticinvoke <android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener asInterface(android.os.IBinder)>($r15);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void removeSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>($r16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label35:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r17 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r18 = staticinvoke <android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener asInterface(android.os.IBinder)>($r17);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>($r18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label36:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        z18 = 0;

        $i28 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        if $i28 == 0 goto label37;

        z18 = 1;

     label37:
        $r19 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r20 = staticinvoke <android.hardware.hdmi.IHdmiControlCallback$Stub: android.hardware.hdmi.IHdmiControlCallback asInterface(android.os.IBinder)>($r19);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void setSystemAudioMode(boolean,android.hardware.hdmi.IHdmiControlCallback)>(z18, $r20);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label38:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        i39 = virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: int getPhysicalAddress()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i39);

        return 1;

     label39:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        z19 = virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: boolean getSystemAudioMode()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i45 = (int) z19;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i45);

        return 1;

     label40:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        z20 = virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: boolean canChangeSystemAudioMode()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i46 = (int) z20;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i46);

        return 1;

     label41:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        r46 = virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: java.util.List getPortInfo()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r46);

        return 1;

     label42:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        i40 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        i41 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        z21 = 0;

        $i29 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        if $i29 == 0 goto label43;

        z21 = 1;

     label43:
        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void sendVolumeKeyEvent(int,int,boolean)>(i40, i41, z21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label44:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        i42 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        i43 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        z22 = 0;

        $i30 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        if $i30 == 0 goto label45;

        z22 = 1;

     label45:
        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void sendKeyEvent(int,int,boolean)>(i42, i43, z22);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label46:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i31 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $r21 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r22 = staticinvoke <android.hardware.hdmi.IHdmiControlCallback$Stub: android.hardware.hdmi.IHdmiControlCallback asInterface(android.os.IBinder)>($r21);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void portSelect(int,android.hardware.hdmi.IHdmiControlCallback)>($i31, $r22);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label47:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $i32 = virtualinvoke r43.<android.os.Parcel: int readInt()>();

        $r23 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r24 = staticinvoke <android.hardware.hdmi.IHdmiControlCallback$Stub: android.hardware.hdmi.IHdmiControlCallback asInterface(android.os.IBinder)>($r23);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void deviceSelect(int,android.hardware.hdmi.IHdmiControlCallback)>($i32, $r24);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label48:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r25 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r26 = staticinvoke <android.hardware.hdmi.IHdmiDeviceEventListener$Stub: android.hardware.hdmi.IHdmiDeviceEventListener asInterface(android.os.IBinder)>($r25);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener)>($r26);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label49:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r27 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r28 = staticinvoke <android.hardware.hdmi.IHdmiHotplugEventListener$Stub: android.hardware.hdmi.IHdmiHotplugEventListener asInterface(android.os.IBinder)>($r27);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void removeHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>($r28);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label50:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r29 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r30 = staticinvoke <android.hardware.hdmi.IHdmiHotplugEventListener$Stub: android.hardware.hdmi.IHdmiHotplugEventListener asInterface(android.os.IBinder)>($r29);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>($r30);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label51:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r31 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r32 = staticinvoke <android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener asInterface(android.os.IBinder)>($r31);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void removeHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)>($r32);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label52:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r33 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r34 = staticinvoke <android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener$Stub: android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener asInterface(android.os.IBinder)>($r33);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void addHdmiCecVolumeControlFeatureListener(android.hardware.hdmi.IHdmiCecVolumeControlFeatureListener)>($r34);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label53:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r35 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r36 = staticinvoke <android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: android.hardware.hdmi.IHdmiControlStatusChangeListener asInterface(android.os.IBinder)>($r35);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void removeHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)>($r36);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label54:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r37 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r38 = staticinvoke <android.hardware.hdmi.IHdmiControlStatusChangeListener$Stub: android.hardware.hdmi.IHdmiControlStatusChangeListener asInterface(android.os.IBinder)>($r37);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void addHdmiControlStatusChangeListener(android.hardware.hdmi.IHdmiControlStatusChangeListener)>($r38);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label55:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r39 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r40 = staticinvoke <android.hardware.hdmi.IHdmiControlCallback$Stub: android.hardware.hdmi.IHdmiControlCallback asInterface(android.os.IBinder)>($r39);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)>($r40);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label56:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        $r41 = virtualinvoke r43.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r42 = staticinvoke <android.hardware.hdmi.IHdmiControlCallback$Stub: android.hardware.hdmi.IHdmiControlCallback asInterface(android.os.IBinder)>($r41);

        virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)>($r42);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label57:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        r47 = virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r47 == null goto label58;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r47.<android.hardware.hdmi.HdmiDeviceInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label59;

     label58:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label59:
        return 1;

     label60:
        virtualinvoke r43.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        r48 = virtualinvoke r0.<android.hardware.hdmi.IHdmiControlService$Stub: int[] getSupportedTypes()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r48);

        return 1;

     label61:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.hardware.hdmi.IHdmiControlService");

        return 1;
    }

    public static void <clinit>()
    {
        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_stopOneTouchRecord> = 38;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_startTimerRecording> = 39;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_startOneTouchRecord> = 37;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_setSystemAudioVolume> = 25;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_setSystemAudioMute> = 26;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_setSystemAudioModeOnForAudioOnlySource> = 47;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_setSystemAudioMode> = 20;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_setStandbyMode> = 43;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_setProhibitMode> = 24;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_setInputChangeListener> = 27;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_setHdmiRecordListener> = 36;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_setHdmiCecVolumeControlEnabled> = 44;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_setArcMode> = 23;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_sendVolumeKeyEvent> = 15;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_sendVendorCommand> = 33;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_sendStandby> = 35;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_sendMhlVendorCommand> = 41;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_sendKeyEvent> = 14;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_reportAudioStatus> = 46;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_removeSystemAudioModeChangeListener> = 22;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_removeHotplugEventListener> = 10;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_removeHdmiControlStatusChangeListener> = 6;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_removeHdmiCecVolumeControlFeatureListener> = 8;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_queryDisplayStatus> = 4;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_powerOnRemoteDevice> = 31;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_powerOffRemoteDevice> = 30;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_portSelect> = 13;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_oneTouchPlay> = 3;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_isHdmiCecVolumeControlEnabled> = 45;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_getSystemAudioMode> = 18;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_getSupportedTypes> = 1;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_getPortInfo> = 16;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_getPhysicalAddress> = 19;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_getInputDevices> = 28;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_getDeviceList> = 29;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_getActiveSource> = 2;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_deviceSelect> = 12;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_clearTimerRecording> = 40;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_canChangeSystemAudioMode> = 17;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_askRemoteDeviceToBecomeActiveSource> = 32;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_addVendorCommandListener> = 34;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_addSystemAudioModeChangeListener> = 21;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_addHotplugEventListener> = 9;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_addHdmiMhlVendorCommandListener> = 42;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_addHdmiControlStatusChangeListener> = 5;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_addHdmiCecVolumeControlFeatureListener> = 7;

        <android.hardware.hdmi.IHdmiControlService$Stub: int TRANSACTION_addDeviceEventListener> = 11;

        <android.hardware.hdmi.IHdmiControlService$Stub: java.lang.String DESCRIPTOR> = "android.hardware.hdmi.IHdmiControlService";

        return;
    }
}
