class android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy extends java.lang.Object implements android.hardware.hdmi.IHdmiMhlVendorCommandListener
{
    public static android.hardware.hdmi.IHdmiMhlVendorCommandListener sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy;

        $r1 = r0.<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy r0;

        r0 := @this: android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy;

        return "android.hardware.hdmi.IHdmiMhlVendorCommandListener";
    }

    public void onReceived(int, int, int, byte[]) throws android.os.RemoteException
    {
        android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.hardware.hdmi.IHdmiMhlVendorCommandListener $r3, $r4;
        java.lang.Throwable $r5;
        byte[] r6;

        r0 := @this: android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r6 := @parameter3: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.hdmi.IHdmiMhlVendorCommandListener");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r6);

        $r2 = r0.<android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: android.hardware.hdmi.IHdmiMhlVendorCommandListener getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub: android.hardware.hdmi.IHdmiMhlVendorCommandListener getDefaultImpl()>();

        interfaceinvoke $r4.<android.hardware.hdmi.IHdmiMhlVendorCommandListener: void onReceived(int,int,int,byte[])>(i0, i1, i2, r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
