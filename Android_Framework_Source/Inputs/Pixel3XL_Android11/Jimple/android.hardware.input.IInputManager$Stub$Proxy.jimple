class android.hardware.input.IInputManager$Stub$Proxy extends java.lang.Object implements android.hardware.input.IInputManager
{
    public static android.hardware.input.IInputManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.input.InputDeviceIdentifier r8;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r8 := @parameter0: android.hardware.input.InputDeviceIdentifier;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.input.InputDeviceIdentifier: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.input.IInputManager: void addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addPortAssociation(java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.input.IInputManager: void addPortAssociation(java.lang.String,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        $r1 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void cancelVibrate(int, android.os.IBinder) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.input.IInputManager: void cancelVibrate(int,android.os.IBinder)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void disableInputDevice(int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.input.IInputManager: void disableInputDevice(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void enableInputDevice(int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.input.IInputManager: void enableInputDevice(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.input.InputDeviceIdentifier r7;
        java.lang.String r8, r9;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.input.InputDeviceIdentifier;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.input.InputDeviceIdentifier: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.hardware.input.IInputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.input.InputDeviceIdentifier r7;
        java.lang.String[] r8, r9;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.input.InputDeviceIdentifier;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.input.InputDeviceIdentifier: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.hardware.input.IInputManager: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.view.InputDevice getInputDevice(int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.input.IInputManager $r6, $r7;
        java.lang.Throwable $r8;
        android.view.InputDevice r9, r10;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.input.IInputManager: android.view.InputDevice getInputDevice(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.view.InputDevice: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.view.InputDevice) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int[] getInputDeviceIds() throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.hardware.input.IInputManager: int[] getInputDeviceIds()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        return "android.hardware.input.IInputManager";
    }

    public android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.input.IInputManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.hardware.input.KeyboardLayout r10, r11;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.input.IInputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.input.KeyboardLayout: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.hardware.input.KeyboardLayout) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.hardware.input.KeyboardLayout[] getKeyboardLayouts() throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.hardware.input.IInputManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.input.KeyboardLayout[] r9, r10;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.input.IInputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.hardware.input.KeyboardLayout: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.hardware.input.KeyboardLayout[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.hardware.input.IInputManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.input.InputDeviceIdentifier r9;
        android.hardware.input.KeyboardLayout[] r10, r11;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r9 := @parameter0: android.hardware.input.InputDeviceIdentifier;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.hardware.input.InputDeviceIdentifier: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.input.IInputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>(r9);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.hardware.input.KeyboardLayout: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r11 = (android.hardware.input.KeyboardLayout[]) $r5;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.input.IInputManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.hardware.input.TouchCalibration r10, r11;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.input.IInputManager: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)>(r9, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.hardware.input.TouchCalibration: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.hardware.input.TouchCalibration) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public boolean hasKeys(int, int, int[], boolean[]) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0, i1, $i2, $i3;
        boolean[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;
        int[] r8;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r8 := @parameter2: int[];

        r1 := @parameter3: boolean[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r8);

     label02:
        if r1 != null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(-1);

     label04:
        goto label06;

     label05:
        $i2 = lengthof r1;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($i2);

     label06:
        r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        if $z0 != 0 goto label10;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label10;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.hardware.input.IInputManager: boolean hasKeys(int,int,int[],boolean[])>(i0, i1, r8, r1);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label11:
        $i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label13;

     label12:
        z1 = 1;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readBooleanArray(boolean[])>(r1);

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public boolean injectInputEvent(android.view.InputEvent, int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.InputEvent r7;
        int i0, i1;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r7 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.view.InputEvent: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.hardware.input.IInputManager: boolean injectInputEvent(android.view.InputEvent,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i1 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public int isInTabletMode() throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.hardware.input.IInputManager: int isInTabletMode()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isInputDeviceEnabled(int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.hardware.input.IInputManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.input.IInputManager: boolean isInputDeviceEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int isMicMuted() throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.hardware.input.IInputManager: int isMicMuted()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.view.InputMonitor monitorGestureInput(java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.input.IInputManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.view.InputMonitor r10, r11;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.input.IInputManager: android.view.InputMonitor monitorGestureInput(java.lang.String,int)>(r9, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.view.InputMonitor: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.view.InputMonitor) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.input.IInputDevicesChangedListener r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.input.IInputDevicesChangedListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.input.IInputDevicesChangedListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.input.IInputManager: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerTabletModeChangedListener(android.hardware.input.ITabletModeChangedListener) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.input.ITabletModeChangedListener r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.input.ITabletModeChangedListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.input.ITabletModeChangedListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.input.IInputManager: void registerTabletModeChangedListener(android.hardware.input.ITabletModeChangedListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.input.InputDeviceIdentifier r8;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r8 := @parameter0: android.hardware.input.InputDeviceIdentifier;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.input.InputDeviceIdentifier: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.input.IInputManager: void removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removePortAssociation(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.input.IInputManager: void removePortAssociation(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void requestPointerCapture(android.os.IBinder, boolean) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.input.IInputManager: void requestPointerCapture(android.os.IBinder,boolean)>(r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.input.InputDeviceIdentifier r8;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r8 := @parameter0: android.hardware.input.InputDeviceIdentifier;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.input.InputDeviceIdentifier: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.input.IInputManager: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setCustomPointerIcon(android.view.PointerIcon) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.input.IInputManager $r4, $r5;
        java.lang.Throwable $r6;
        android.view.PointerIcon r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r7 := @parameter0: android.view.PointerIcon;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.view.PointerIcon: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.input.IInputManager: void setCustomPointerIcon(android.view.PointerIcon)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setPointerIconType(int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.input.IInputManager: void setPointerIconType(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setTouchCalibrationForInputDevice(java.lang.String, int, android.hardware.input.TouchCalibration) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0;
        android.hardware.input.TouchCalibration r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.hardware.input.TouchCalibration;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.input.TouchCalibration: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.input.IInputManager: void setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration)>(r8, i0, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void tryPointerSpeed(int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.input.IInputManager: void tryPointerSpeed(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.view.VerifiedInputEvent verifyInputEvent(android.view.InputEvent) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.input.IInputManager $r6, $r7;
        java.lang.Throwable $r8;
        android.view.InputEvent r9;
        android.view.VerifiedInputEvent r10, r11;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r9 := @parameter0: android.view.InputEvent;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.view.InputEvent: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.input.IInputManager: android.view.VerifiedInputEvent verifyInputEvent(android.view.InputEvent)>(r9);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r4 = <android.view.VerifiedInputEvent: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.view.VerifiedInputEvent) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public void vibrate(int, long[], int, android.os.IBinder) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0, i1;
        android.os.IBinder r1, $r4;
        android.os.Parcel r2, r3;
        boolean $z0;
        android.hardware.input.IInputManager $r5, $r6;
        java.lang.Throwable $r7;
        long[] r8;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: long[];

        i1 := @parameter2: int;

        r1 := @parameter3: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeLongArray(long[])>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.input.IInputManager: void vibrate(int,long[],int,android.os.IBinder)>(i0, r8, i1, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
