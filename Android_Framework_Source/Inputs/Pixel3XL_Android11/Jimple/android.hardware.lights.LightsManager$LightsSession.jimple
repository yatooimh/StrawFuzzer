public final class android.hardware.lights.LightsManager$LightsSession extends java.lang.Object implements java.lang.AutoCloseable
{
    private final android.util.CloseGuard mCloseGuard;
    private boolean mClosed;
    private final android.os.IBinder mToken;
    final android.hardware.lights.LightsManager this$0;

    private void <init>(android.hardware.lights.LightsManager)
    {
        android.hardware.lights.LightsManager$LightsSession r0;
        android.os.Binder $r1;
        android.util.CloseGuard $r2;
        android.hardware.lights.LightsManager r3;

        r0 := @this: android.hardware.lights.LightsManager$LightsSession;

        r3 := @parameter0: android.hardware.lights.LightsManager;

        r0.<android.hardware.lights.LightsManager$LightsSession: android.hardware.lights.LightsManager this$0> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.Binder;

        specialinvoke $r1.<android.os.Binder: void <init>()>();

        r0.<android.hardware.lights.LightsManager$LightsSession: android.os.IBinder mToken> = $r1;

        $r2 = new android.util.CloseGuard;

        specialinvoke $r2.<android.util.CloseGuard: void <init>()>();

        r0.<android.hardware.lights.LightsManager$LightsSession: android.util.CloseGuard mCloseGuard> = $r2;

        r0.<android.hardware.lights.LightsManager$LightsSession: boolean mClosed> = 0;

        virtualinvoke $r2.<android.util.CloseGuard: void open(java.lang.String)>("close");

        return;
    }

    void <init>(android.hardware.lights.LightsManager, android.hardware.lights.LightsManager$1)
    {
        android.hardware.lights.LightsManager$LightsSession r0;
        android.hardware.lights.LightsManager r1;
        android.hardware.lights.LightsManager$1 r2;

        r0 := @this: android.hardware.lights.LightsManager$LightsSession;

        r1 := @parameter0: android.hardware.lights.LightsManager;

        r2 := @parameter1: android.hardware.lights.LightsManager$1;

        specialinvoke r0.<android.hardware.lights.LightsManager$LightsSession: void <init>(android.hardware.lights.LightsManager)>(r1);

        return;
    }

    static android.os.IBinder access$100(android.hardware.lights.LightsManager$LightsSession)
    {
        android.hardware.lights.LightsManager$LightsSession r0;
        android.os.IBinder $r1;

        r0 := @parameter0: android.hardware.lights.LightsManager$LightsSession;

        $r1 = r0.<android.hardware.lights.LightsManager$LightsSession: android.os.IBinder mToken>;

        return $r1;
    }

    public void close()
    {
        android.hardware.lights.LightsManager$LightsSession r0;
        boolean $z0;
        android.hardware.lights.LightsManager $r2;
        android.hardware.lights.ILightsManager $r3;
        android.os.IBinder $r4;
        android.util.CloseGuard $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: android.hardware.lights.LightsManager$LightsSession;

        $z0 = r0.<android.hardware.lights.LightsManager$LightsSession: boolean mClosed>;

        if $z0 != 0 goto label4;

     label1:
        $r2 = r0.<android.hardware.lights.LightsManager$LightsSession: android.hardware.lights.LightsManager this$0>;

        $r3 = staticinvoke <android.hardware.lights.LightsManager: android.hardware.lights.ILightsManager access$200(android.hardware.lights.LightsManager)>($r2);

        $r4 = r0.<android.hardware.lights.LightsManager$LightsSession: android.os.IBinder mToken>;

        interfaceinvoke $r3.<android.hardware.lights.ILightsManager: void closeSession(android.os.IBinder)>($r4);

        r0.<android.hardware.lights.LightsManager$LightsSession: boolean mClosed> = 1;

        $r5 = r0.<android.hardware.lights.LightsManager$LightsSession: android.util.CloseGuard mCloseGuard>;

        virtualinvoke $r5.<android.util.CloseGuard: void close()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

     label4:
        staticinvoke <java.lang.ref.Reference: void reachabilityFence(java.lang.Object)>(r0);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.hardware.lights.LightsManager$LightsSession r0;
        android.util.CloseGuard $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.hardware.lights.LightsManager$LightsSession;

     label1:
        $r2 = r0.<android.hardware.lights.LightsManager$LightsSession: android.util.CloseGuard mCloseGuard>;

        virtualinvoke $r2.<android.util.CloseGuard: void warnIfOpen()>();

        virtualinvoke r0.<android.hardware.lights.LightsManager$LightsSession: void close()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void requestLights(android.hardware.lights.LightsRequest)
    {
        android.hardware.lights.LightsManager$LightsSession r0;
        boolean $z0;
        android.hardware.lights.LightsManager $r2;
        android.hardware.lights.ILightsManager $r3;
        android.hardware.lights.LightState[] $r4;
        int[] $r5;
        android.os.IBinder $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.hardware.lights.LightsRequest r9;

        r0 := @this: android.hardware.lights.LightsManager$LightsSession;

        r9 := @parameter0: android.hardware.lights.LightsRequest;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r9);

        $z0 = r0.<android.hardware.lights.LightsManager$LightsSession: boolean mClosed>;

        if $z0 != 0 goto label4;

     label1:
        $r2 = r0.<android.hardware.lights.LightsManager$LightsSession: android.hardware.lights.LightsManager this$0>;

        $r3 = staticinvoke <android.hardware.lights.LightsManager: android.hardware.lights.ILightsManager access$200(android.hardware.lights.LightsManager)>($r2);

        $r6 = r0.<android.hardware.lights.LightsManager$LightsSession: android.os.IBinder mToken>;

        $r5 = r9.<android.hardware.lights.LightsRequest: int[] mLightIds>;

        $r4 = r9.<android.hardware.lights.LightsRequest: android.hardware.lights.LightState[] mLightStates>;

        interfaceinvoke $r3.<android.hardware.lights.ILightsManager: void setLightStates(android.os.IBinder,int[],android.hardware.lights.LightState[])>($r6, $r5, $r4);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
