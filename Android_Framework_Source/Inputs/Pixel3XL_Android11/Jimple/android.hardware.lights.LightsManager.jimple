public final class android.hardware.lights.LightsManager extends java.lang.Object
{
    public static final int LIGHT_TYPE_MICROPHONE;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.hardware.lights.ILightsManager mService;

    public void <init>(android.content.Context) throws android.os.ServiceManager$ServiceNotFoundException
    {
        android.hardware.lights.LightsManager r0;
        android.content.Context r1;
        android.os.IBinder $r2;
        android.hardware.lights.ILightsManager $r3;

        r0 := @this: android.hardware.lights.LightsManager;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("lights");

        $r3 = staticinvoke <android.hardware.lights.ILightsManager$Stub: android.hardware.lights.ILightsManager asInterface(android.os.IBinder)>($r2);

        specialinvoke r0.<android.hardware.lights.LightsManager: void <init>(android.content.Context,android.hardware.lights.ILightsManager)>(r1, $r3);

        return;
    }

    public void <init>(android.content.Context, android.hardware.lights.ILightsManager)
    {
        android.hardware.lights.LightsManager r0;
        android.content.Context r1, $r4;
        android.hardware.lights.ILightsManager r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: android.hardware.lights.LightsManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.hardware.lights.ILightsManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.content.Context) $r3;

        r0.<android.hardware.lights.LightsManager: android.content.Context mContext> = $r4;

        $r5 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (android.hardware.lights.ILightsManager) $r5;

        r0.<android.hardware.lights.LightsManager: android.hardware.lights.ILightsManager mService> = $r6;

        return;
    }

    static android.hardware.lights.ILightsManager access$200(android.hardware.lights.LightsManager)
    {
        android.hardware.lights.LightsManager r0;
        android.hardware.lights.ILightsManager $r1;

        r0 := @parameter0: android.hardware.lights.LightsManager;

        $r1 = r0.<android.hardware.lights.LightsManager: android.hardware.lights.ILightsManager mService>;

        return $r1;
    }

    public android.hardware.lights.LightState getLightState(android.hardware.lights.Light)
    {
        android.hardware.lights.LightsManager r0;
        android.hardware.lights.ILightsManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.hardware.lights.Light r5;
        android.hardware.lights.LightState r6;

        r0 := @this: android.hardware.lights.LightsManager;

        r5 := @parameter0: android.hardware.lights.Light;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

     label1:
        $r2 = r0.<android.hardware.lights.LightsManager: android.hardware.lights.ILightsManager mService>;

        $i0 = virtualinvoke r5.<android.hardware.lights.Light: int getId()>();

        r6 = interfaceinvoke $r2.<android.hardware.lights.ILightsManager: android.hardware.lights.LightState getLightState(int)>($i0);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getLights()
    {
        android.hardware.lights.LightsManager r0;
        android.hardware.lights.ILightsManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.hardware.lights.LightsManager;

     label1:
        $r1 = r0.<android.hardware.lights.LightsManager: android.hardware.lights.ILightsManager mService>;

        r4 = interfaceinvoke $r1.<android.hardware.lights.ILightsManager: java.util.List getLights()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.lights.LightsManager$LightsSession openSession()
    {
        android.hardware.lights.LightsManager r0;
        android.hardware.lights.ILightsManager $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.hardware.lights.LightsManager$LightsSession r5;

        r0 := @this: android.hardware.lights.LightsManager;

     label1:
        r5 = new android.hardware.lights.LightsManager$LightsSession;

        specialinvoke r5.<android.hardware.lights.LightsManager$LightsSession: void <init>(android.hardware.lights.LightsManager,android.hardware.lights.LightsManager$1)>(r0, null);

        $r1 = r0.<android.hardware.lights.LightsManager: android.hardware.lights.ILightsManager mService>;

        $r2 = staticinvoke <android.hardware.lights.LightsManager$LightsSession: android.os.IBinder access$100(android.hardware.lights.LightsManager$LightsSession)>(r5);

        interfaceinvoke $r1.<android.hardware.lights.ILightsManager: void openSession(android.os.IBinder)>($r2);

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.hardware.lights.LightsManager: java.lang.String TAG> = "LightsManager";

        <android.hardware.lights.LightsManager: int LIGHT_TYPE_MICROPHONE> = 8;

        return;
    }
}
