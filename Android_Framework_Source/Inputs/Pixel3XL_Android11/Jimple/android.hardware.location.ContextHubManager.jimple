public final class android.hardware.location.ContextHubManager extends java.lang.Object
{
    public static final int EVENT_HUB_RESET;
    public static final int EVENT_NANOAPP_ABORTED;
    public static final int EVENT_NANOAPP_DISABLED;
    public static final int EVENT_NANOAPP_ENABLED;
    public static final int EVENT_NANOAPP_LOADED;
    public static final int EVENT_NANOAPP_MESSAGE;
    public static final int EVENT_NANOAPP_UNLOADED;
    public static final java.lang.String EXTRA_CONTEXT_HUB_INFO;
    public static final java.lang.String EXTRA_EVENT_TYPE;
    public static final java.lang.String EXTRA_MESSAGE;
    public static final java.lang.String EXTRA_NANOAPP_ABORT_CODE;
    public static final java.lang.String EXTRA_NANOAPP_ID;
    private static final java.lang.String TAG;
    private android.hardware.location.ContextHubManager$Callback mCallback;
    private android.os.Handler mCallbackHandler;
    private final android.hardware.location.IContextHubCallback$Stub mClientCallback;
    private android.hardware.location.ContextHubManager$ICallback mLocalCallback;
    private final android.os.Looper mMainLooper;
    private final android.hardware.location.IContextHubService mService;

    public void <init>(android.content.Context, android.os.Looper) throws android.os.ServiceManager$ServiceNotFoundException
    {
        android.hardware.location.ContextHubManager r0;
        android.os.Looper r1;
        android.hardware.location.ContextHubManager$4 $r2;
        android.os.IBinder $r3;
        android.hardware.location.IContextHubCallback$Stub $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.content.Context r7;
        android.hardware.location.IContextHubService r8;

        r0 := @this: android.hardware.location.ContextHubManager;

        r7 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.hardware.location.ContextHubManager$4;

        specialinvoke $r2.<android.hardware.location.ContextHubManager$4: void <init>(android.hardware.location.ContextHubManager)>(r0);

        r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubCallback$Stub mClientCallback> = $r2;

        r0.<android.hardware.location.ContextHubManager: android.os.Looper mMainLooper> = r1;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("contexthub");

        r8 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService asInterface(android.os.IBinder)>($r3);

        r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService> = r8;

     label1:
        $r4 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubCallback$Stub mClientCallback>;

        interfaceinvoke r8.<android.hardware.location.IContextHubService: int registerCallback(android.hardware.location.IContextHubCallback)>($r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.hardware.location.ContextHubManager$Callback access$000(android.hardware.location.ContextHubManager)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.ContextHubManager$Callback $r1;

        r0 := @parameter0: android.hardware.location.ContextHubManager;

        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$Callback mCallback>;

        return $r1;
    }

    static android.os.Handler access$100(android.hardware.location.ContextHubManager)
    {
        android.hardware.location.ContextHubManager r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.hardware.location.ContextHubManager;

        $r1 = r0.<android.hardware.location.ContextHubManager: android.os.Handler mCallbackHandler>;

        return $r1;
    }

    static android.hardware.location.ContextHubManager$ICallback access$200(android.hardware.location.ContextHubManager)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.ContextHubManager$ICallback $r1;

        r0 := @parameter0: android.hardware.location.ContextHubManager;

        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$ICallback mLocalCallback>;

        return $r1;
    }

    static void access$300(android.hardware.location.ContextHubManager, int, int, android.hardware.location.ContextHubMessage)
    {
        android.hardware.location.ContextHubManager r0;
        int i0, i1;
        android.hardware.location.ContextHubMessage r1;

        r0 := @parameter0: android.hardware.location.ContextHubManager;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.hardware.location.ContextHubMessage;

        specialinvoke r0.<android.hardware.location.ContextHubManager: void invokeOnMessageReceiptCallback(int,int,android.hardware.location.ContextHubMessage)>(i0, i1, r1);

        return;
    }

    private android.hardware.location.IContextHubClientCallback createClientCallback(android.hardware.location.ContextHubClient, android.hardware.location.ContextHubClientCallback, java.util.concurrent.Executor)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.ContextHubClient r1;
        android.hardware.location.ContextHubClientCallback r2;
        java.util.concurrent.Executor r3;
        android.hardware.location.ContextHubManager$3 $r4;

        r0 := @this: android.hardware.location.ContextHubManager;

        r1 := @parameter0: android.hardware.location.ContextHubClient;

        r2 := @parameter1: android.hardware.location.ContextHubClientCallback;

        r3 := @parameter2: java.util.concurrent.Executor;

        $r4 = new android.hardware.location.ContextHubManager$3;

        specialinvoke $r4.<android.hardware.location.ContextHubManager$3: void <init>(android.hardware.location.ContextHubManager,java.util.concurrent.Executor,android.hardware.location.ContextHubClientCallback,android.hardware.location.ContextHubClient)>(r0, r3, r2, r1);

        return $r4;
    }

    private android.hardware.location.IContextHubTransactionCallback createQueryCallback(android.hardware.location.ContextHubTransaction)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.ContextHubTransaction r1;
        android.hardware.location.ContextHubManager$2 $r2;

        r0 := @this: android.hardware.location.ContextHubManager;

        r1 := @parameter0: android.hardware.location.ContextHubTransaction;

        $r2 = new android.hardware.location.ContextHubManager$2;

        specialinvoke $r2.<android.hardware.location.ContextHubManager$2: void <init>(android.hardware.location.ContextHubManager,android.hardware.location.ContextHubTransaction)>(r0, r1);

        return $r2;
    }

    private android.hardware.location.IContextHubTransactionCallback createTransactionCallback(android.hardware.location.ContextHubTransaction)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.ContextHubTransaction r1;
        android.hardware.location.ContextHubManager$1 $r2;

        r0 := @this: android.hardware.location.ContextHubManager;

        r1 := @parameter0: android.hardware.location.ContextHubTransaction;

        $r2 = new android.hardware.location.ContextHubManager$1;

        specialinvoke $r2.<android.hardware.location.ContextHubManager$1: void <init>(android.hardware.location.ContextHubManager,android.hardware.location.ContextHubTransaction)>(r0, r1);

        return $r2;
    }

    private void invokeOnMessageReceiptCallback(int, int, android.hardware.location.ContextHubMessage)
    {
        android.hardware.location.ContextHubManager r0;
        int i0, i1;
        android.hardware.location.ContextHubManager$Callback $r1, $r2;
        java.lang.Throwable $r3;
        android.hardware.location.ContextHubMessage r4;

        r0 := @this: android.hardware.location.ContextHubManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: android.hardware.location.ContextHubMessage;

        entermonitor r0;

     label1:
        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$Callback mCallback>;

        if $r1 == null goto label2;

        $r2 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$Callback mCallback>;

        virtualinvoke $r2.<android.hardware.location.ContextHubManager$Callback: void onMessageReceipt(int,int,android.hardware.location.ContextHubMessage)>(i0, i1, r4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.hardware.location.ContextHubClient createClient(android.hardware.location.ContextHubInfo, android.app.PendingIntent, long)
    {
        android.hardware.location.ContextHubManager r0;
        android.app.PendingIntent r1;
        long l0;
        android.hardware.location.ContextHubClient $r5;
        android.hardware.location.IContextHubService $r6;
        int $i1;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.hardware.location.ContextHubInfo r9;
        android.hardware.location.IContextHubClient r10;

        r0 := @this: android.hardware.location.ContextHubManager;

        r9 := @parameter0: android.hardware.location.ContextHubInfo;

        r1 := @parameter1: android.app.PendingIntent;

        l0 := @parameter2: long;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r9);

        $r5 = new android.hardware.location.ContextHubClient;

        specialinvoke $r5.<android.hardware.location.ContextHubClient: void <init>(android.hardware.location.ContextHubInfo,boolean)>(r9, 1);

     label1:
        $r6 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        $i1 = virtualinvoke r9.<android.hardware.location.ContextHubInfo: int getId()>();

        r10 = interfaceinvoke $r6.<android.hardware.location.IContextHubService: android.hardware.location.IContextHubClient createPendingIntentClient(int,android.app.PendingIntent,long)>($i1, r1, l0);

     label2:
        virtualinvoke $r5.<android.hardware.location.ContextHubClient: void setClientProxy(android.hardware.location.IContextHubClient)>(r10);

        return $r5;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.location.ContextHubClient createClient(android.hardware.location.ContextHubInfo, android.hardware.location.ContextHubClientCallback)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.ContextHubInfo r1;
        android.hardware.location.ContextHubClientCallback r2;
        android.os.HandlerExecutor $r3;
        android.os.Handler $r4;
        android.hardware.location.ContextHubClient $r5;

        r0 := @this: android.hardware.location.ContextHubManager;

        r1 := @parameter0: android.hardware.location.ContextHubInfo;

        r2 := @parameter1: android.hardware.location.ContextHubClientCallback;

        $r3 = new android.os.HandlerExecutor;

        $r4 = staticinvoke <android.os.Handler: android.os.Handler getMain()>();

        specialinvoke $r3.<android.os.HandlerExecutor: void <init>(android.os.Handler)>($r4);

        $r5 = virtualinvoke r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubClient createClient(android.hardware.location.ContextHubInfo,android.hardware.location.ContextHubClientCallback,java.util.concurrent.Executor)>(r1, r2, $r3);

        return $r5;
    }

    public android.hardware.location.ContextHubClient createClient(android.hardware.location.ContextHubInfo, android.hardware.location.ContextHubClientCallback, java.util.concurrent.Executor)
    {
        android.hardware.location.ContextHubManager r0;
        java.util.concurrent.Executor r1;
        android.hardware.location.ContextHubClient $r6;
        android.hardware.location.IContextHubService $r7;
        int $i0;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        android.hardware.location.ContextHubInfo r10;
        android.hardware.location.ContextHubClientCallback r11;
        android.hardware.location.IContextHubClientCallback r12;
        android.hardware.location.IContextHubClient r13;

        r0 := @this: android.hardware.location.ContextHubManager;

        r10 := @parameter0: android.hardware.location.ContextHubInfo;

        r11 := @parameter1: android.hardware.location.ContextHubClientCallback;

        r1 := @parameter2: java.util.concurrent.Executor;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r11, "Callback cannot be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r10, "ContextHubInfo cannot be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Executor cannot be null");

        $r6 = new android.hardware.location.ContextHubClient;

        specialinvoke $r6.<android.hardware.location.ContextHubClient: void <init>(android.hardware.location.ContextHubInfo,boolean)>(r10, 0);

        r12 = specialinvoke r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubClientCallback createClientCallback(android.hardware.location.ContextHubClient,android.hardware.location.ContextHubClientCallback,java.util.concurrent.Executor)>($r6, r11, r1);

     label1:
        $r7 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        $i0 = virtualinvoke r10.<android.hardware.location.ContextHubInfo: int getId()>();

        r13 = interfaceinvoke $r7.<android.hardware.location.IContextHubService: android.hardware.location.IContextHubClient createClient(int,android.hardware.location.IContextHubClientCallback)>($i0, r12);

     label2:
        virtualinvoke $r6.<android.hardware.location.ContextHubClient: void setClientProxy(android.hardware.location.IContextHubClient)>(r13);

        return $r6;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.location.ContextHubTransaction disableNanoApp(android.hardware.location.ContextHubInfo, long)
    {
        android.hardware.location.ContextHubManager r0;
        long l0;
        android.hardware.location.IContextHubTransactionCallback r2;
        android.hardware.location.ContextHubTransaction $r4;
        android.hardware.location.IContextHubService $r5;
        int $i1;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.hardware.location.ContextHubInfo r8;

        r0 := @this: android.hardware.location.ContextHubManager;

        r8 := @parameter0: android.hardware.location.ContextHubInfo;

        l0 := @parameter1: long;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r8, "ContextHubInfo cannot be null");

        $r4 = new android.hardware.location.ContextHubTransaction;

        specialinvoke $r4.<android.hardware.location.ContextHubTransaction: void <init>(int)>(3);

        r2 = specialinvoke r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubTransactionCallback createTransactionCallback(android.hardware.location.ContextHubTransaction)>($r4);

     label1:
        $r5 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        $i1 = virtualinvoke r8.<android.hardware.location.ContextHubInfo: int getId()>();

        interfaceinvoke $r5.<android.hardware.location.IContextHubService: void disableNanoApp(int,android.hardware.location.IContextHubTransactionCallback,long)>($i1, r2, l0);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.location.ContextHubTransaction enableNanoApp(android.hardware.location.ContextHubInfo, long)
    {
        android.hardware.location.ContextHubManager r0;
        long l0;
        android.hardware.location.IContextHubTransactionCallback r2;
        android.hardware.location.ContextHubTransaction $r4;
        android.hardware.location.IContextHubService $r5;
        int $i1;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.hardware.location.ContextHubInfo r8;

        r0 := @this: android.hardware.location.ContextHubManager;

        r8 := @parameter0: android.hardware.location.ContextHubInfo;

        l0 := @parameter1: long;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r8, "ContextHubInfo cannot be null");

        $r4 = new android.hardware.location.ContextHubTransaction;

        specialinvoke $r4.<android.hardware.location.ContextHubTransaction: void <init>(int)>(2);

        r2 = specialinvoke r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubTransactionCallback createTransactionCallback(android.hardware.location.ContextHubTransaction)>($r4);

     label1:
        $r5 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        $i1 = virtualinvoke r8.<android.hardware.location.ContextHubInfo: int getId()>();

        interfaceinvoke $r5.<android.hardware.location.IContextHubService: void enableNanoApp(int,android.hardware.location.IContextHubTransactionCallback,long)>($i1, r2, l0);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] findNanoAppOnHub(int, android.hardware.location.NanoAppFilter)
    {
        android.hardware.location.ContextHubManager r0;
        int i0;
        android.hardware.location.IContextHubService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.hardware.location.NanoAppFilter r4;
        int[] r5;

        r0 := @this: android.hardware.location.ContextHubManager;

        i0 := @parameter0: int;

        r4 := @parameter1: android.hardware.location.NanoAppFilter;

     label1:
        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        r5 = interfaceinvoke $r1.<android.hardware.location.IContextHubService: int[] findNanoAppOnHub(int,android.hardware.location.NanoAppFilter)>(i0, r4);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getContextHubHandles()
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.IContextHubService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        int[] r4;

        r0 := @this: android.hardware.location.ContextHubManager;

     label1:
        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        r4 = interfaceinvoke $r1.<android.hardware.location.IContextHubService: int[] getContextHubHandles()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.location.ContextHubInfo getContextHubInfo(int)
    {
        android.hardware.location.ContextHubManager r0;
        int i0;
        android.hardware.location.IContextHubService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.hardware.location.ContextHubInfo r4;

        r0 := @this: android.hardware.location.ContextHubManager;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        r4 = interfaceinvoke $r1.<android.hardware.location.IContextHubService: android.hardware.location.ContextHubInfo getContextHubInfo(int)>(i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getContextHubs()
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.IContextHubService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.hardware.location.ContextHubManager;

     label1:
        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        r4 = interfaceinvoke $r1.<android.hardware.location.IContextHubService: java.util.List getContextHubs()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)
    {
        android.hardware.location.ContextHubManager r0;
        int i0;
        android.hardware.location.IContextHubService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.hardware.location.NanoAppInstanceInfo r4;

        r0 := @this: android.hardware.location.ContextHubManager;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        r4 = interfaceinvoke $r1.<android.hardware.location.IContextHubService: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)>(i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int loadNanoApp(int, android.hardware.location.NanoApp)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.IContextHubService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        int i0, i1;
        android.hardware.location.NanoApp r4;

        r0 := @this: android.hardware.location.ContextHubManager;

        i0 := @parameter0: int;

        r4 := @parameter1: android.hardware.location.NanoApp;

     label1:
        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        i1 = interfaceinvoke $r1.<android.hardware.location.IContextHubService: int loadNanoApp(int,android.hardware.location.NanoApp)>(i0, r4);

     label2:
        return i1;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.location.ContextHubTransaction loadNanoApp(android.hardware.location.ContextHubInfo, android.hardware.location.NanoAppBinary)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.NanoAppBinary r1;
        android.hardware.location.IContextHubTransactionCallback r3;
        android.hardware.location.ContextHubTransaction $r6;
        android.hardware.location.IContextHubService $r7;
        int $i0;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        android.hardware.location.ContextHubInfo r10;

        r0 := @this: android.hardware.location.ContextHubManager;

        r10 := @parameter0: android.hardware.location.ContextHubInfo;

        r1 := @parameter1: android.hardware.location.NanoAppBinary;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r10, "ContextHubInfo cannot be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "NanoAppBinary cannot be null");

        $r6 = new android.hardware.location.ContextHubTransaction;

        specialinvoke $r6.<android.hardware.location.ContextHubTransaction: void <init>(int)>(0);

        r3 = specialinvoke r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubTransactionCallback createTransactionCallback(android.hardware.location.ContextHubTransaction)>($r6);

     label1:
        $r7 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        $i0 = virtualinvoke r10.<android.hardware.location.ContextHubInfo: int getId()>();

        interfaceinvoke $r7.<android.hardware.location.IContextHubService: void loadNanoAppOnHub(int,android.hardware.location.IContextHubTransactionCallback,android.hardware.location.NanoAppBinary)>($i0, r3, r1);

     label2:
        return $r6;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.location.ContextHubTransaction queryNanoApps(android.hardware.location.ContextHubInfo)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.IContextHubTransactionCallback r2;
        android.hardware.location.ContextHubTransaction $r4;
        android.hardware.location.IContextHubService $r5;
        int $i0;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.hardware.location.ContextHubInfo r8;

        r0 := @this: android.hardware.location.ContextHubManager;

        r8 := @parameter0: android.hardware.location.ContextHubInfo;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r8, "ContextHubInfo cannot be null");

        $r4 = new android.hardware.location.ContextHubTransaction;

        specialinvoke $r4.<android.hardware.location.ContextHubTransaction: void <init>(int)>(4);

        r2 = specialinvoke r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubTransactionCallback createQueryCallback(android.hardware.location.ContextHubTransaction)>($r4);

     label1:
        $r5 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        $i0 = virtualinvoke r8.<android.hardware.location.ContextHubInfo: int getId()>();

        interfaceinvoke $r5.<android.hardware.location.IContextHubService: void queryNanoApps(int,android.hardware.location.IContextHubTransactionCallback)>($i0, r2);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int registerCallback(android.hardware.location.ContextHubManager$Callback)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.ContextHubManager$Callback r1;
        int $i0;

        r0 := @this: android.hardware.location.ContextHubManager;

        r1 := @parameter0: android.hardware.location.ContextHubManager$Callback;

        $i0 = virtualinvoke r0.<android.hardware.location.ContextHubManager: int registerCallback(android.hardware.location.ContextHubManager$Callback,android.os.Handler)>(r1, null);

        return $i0;
    }

    public int registerCallback(android.hardware.location.ContextHubManager$Callback, android.os.Handler)
    {
        android.hardware.location.ContextHubManager r0;
        android.os.Handler r1, r6;
        android.hardware.location.ContextHubManager$Callback $r2, r5;
        android.os.Looper $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.hardware.location.ContextHubManager;

        r5 := @parameter0: android.hardware.location.ContextHubManager$Callback;

        r1 := @parameter1: android.os.Handler;

        entermonitor r0;

     label01:
        $r2 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$Callback mCallback>;

        if $r2 == null goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContextHubManager", "Max number of callbacks reached!");

        exitmonitor r0;

     label02:
        return -1;

     label03:
        r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$Callback mCallback> = r5;

     label04:
        if r1 != null goto label07;

     label05:
        r6 = new android.os.Handler;

        $r3 = r0.<android.hardware.location.ContextHubManager: android.os.Looper mMainLooper>;

        specialinvoke r6.<android.os.Handler: void <init>(android.os.Looper)>($r3);

     label06:
        goto label08;

     label07:
        r6 = r1;

     label08:
        r0.<android.hardware.location.ContextHubManager: android.os.Handler mCallbackHandler> = r6;

        exitmonitor r0;

     label09:
        return 0;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int registerCallback(android.hardware.location.ContextHubManager$ICallback)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.ContextHubManager$ICallback r1, $r2;

        r0 := @this: android.hardware.location.ContextHubManager;

        r1 := @parameter0: android.hardware.location.ContextHubManager$ICallback;

        $r2 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$ICallback mLocalCallback>;

        if $r2 == null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContextHubManager", "Max number of local callbacks reached!");

        return -1;

     label1:
        r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$ICallback mLocalCallback> = r1;

        return 0;
    }

    public int sendMessage(int, int, android.hardware.location.ContextHubMessage)
    {
        android.hardware.location.ContextHubManager r0;
        int i0, i1, i2;
        android.hardware.location.IContextHubService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.hardware.location.ContextHubMessage r4;

        r0 := @this: android.hardware.location.ContextHubManager;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r4 := @parameter2: android.hardware.location.ContextHubMessage;

     label1:
        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        i2 = interfaceinvoke $r1.<android.hardware.location.IContextHubService: int sendMessage(int,int,android.hardware.location.ContextHubMessage)>(i1, i0, r4);

     label2:
        return i2;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int unloadNanoApp(int)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.IContextHubService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        int i0, i1;

        r0 := @this: android.hardware.location.ContextHubManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        i1 = interfaceinvoke $r2.<android.hardware.location.IContextHubService: int unloadNanoApp(int)>(i0);

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.location.ContextHubTransaction unloadNanoApp(android.hardware.location.ContextHubInfo, long)
    {
        android.hardware.location.ContextHubManager r0;
        long l0;
        android.hardware.location.IContextHubTransactionCallback r2;
        android.hardware.location.ContextHubTransaction $r4;
        android.hardware.location.IContextHubService $r5;
        int $i1;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;
        android.hardware.location.ContextHubInfo r8;

        r0 := @this: android.hardware.location.ContextHubManager;

        r8 := @parameter0: android.hardware.location.ContextHubInfo;

        l0 := @parameter1: long;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r8, "ContextHubInfo cannot be null");

        $r4 = new android.hardware.location.ContextHubTransaction;

        specialinvoke $r4.<android.hardware.location.ContextHubTransaction: void <init>(int)>(1);

        r2 = specialinvoke r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubTransactionCallback createTransactionCallback(android.hardware.location.ContextHubTransaction)>($r4);

     label1:
        $r5 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.IContextHubService mService>;

        $i1 = virtualinvoke r8.<android.hardware.location.ContextHubInfo: int getId()>();

        interfaceinvoke $r5.<android.hardware.location.IContextHubService: void unloadNanoAppFromHub(int,android.hardware.location.IContextHubTransactionCallback,long)>($i1, r2, l0);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int unregisterCallback(android.hardware.location.ContextHubManager$Callback)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.ContextHubManager$Callback $r1, r3;
        java.lang.Throwable $r2;

        r0 := @this: android.hardware.location.ContextHubManager;

        r3 := @parameter0: android.hardware.location.ContextHubManager$Callback;

        entermonitor r0;

     label1:
        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$Callback mCallback>;

        if r3 == $r1 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContextHubManager", "Cannot recognize callback!");

        exitmonitor r0;

     label2:
        return -1;

     label3:
        r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$Callback mCallback> = null;

        r0.<android.hardware.location.ContextHubManager: android.os.Handler mCallbackHandler> = null;

        exitmonitor r0;

     label4:
        return 0;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int unregisterCallback(android.hardware.location.ContextHubManager$ICallback)
    {
        android.hardware.location.ContextHubManager r0;
        android.hardware.location.ContextHubManager$ICallback $r1, r3;
        java.lang.Throwable $r2;

        r0 := @this: android.hardware.location.ContextHubManager;

        r3 := @parameter0: android.hardware.location.ContextHubManager$ICallback;

        entermonitor r0;

     label1:
        $r1 = r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$ICallback mLocalCallback>;

        if r3 == $r1 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContextHubManager", "Cannot recognize local callback!");

     label2:
        exitmonitor r0;

        return -1;

     label3:
        r0.<android.hardware.location.ContextHubManager: android.hardware.location.ContextHubManager$ICallback mLocalCallback> = null;

     label4:
        exitmonitor r0;

        return 0;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static void <clinit>()
    {
        <android.hardware.location.ContextHubManager: java.lang.String TAG> = "ContextHubManager";

        <android.hardware.location.ContextHubManager: java.lang.String EXTRA_NANOAPP_ID> = "android.hardware.location.extra.NANOAPP_ID";

        <android.hardware.location.ContextHubManager: java.lang.String EXTRA_NANOAPP_ABORT_CODE> = "android.hardware.location.extra.NANOAPP_ABORT_CODE";

        <android.hardware.location.ContextHubManager: java.lang.String EXTRA_MESSAGE> = "android.hardware.location.extra.MESSAGE";

        <android.hardware.location.ContextHubManager: java.lang.String EXTRA_EVENT_TYPE> = "android.hardware.location.extra.EVENT_TYPE";

        <android.hardware.location.ContextHubManager: java.lang.String EXTRA_CONTEXT_HUB_INFO> = "android.hardware.location.extra.CONTEXT_HUB_INFO";

        <android.hardware.location.ContextHubManager: int EVENT_NANOAPP_UNLOADED> = 1;

        <android.hardware.location.ContextHubManager: int EVENT_NANOAPP_MESSAGE> = 5;

        <android.hardware.location.ContextHubManager: int EVENT_NANOAPP_LOADED> = 0;

        <android.hardware.location.ContextHubManager: int EVENT_NANOAPP_ENABLED> = 2;

        <android.hardware.location.ContextHubManager: int EVENT_NANOAPP_DISABLED> = 3;

        <android.hardware.location.ContextHubManager: int EVENT_NANOAPP_ABORTED> = 4;

        <android.hardware.location.ContextHubManager: int EVENT_HUB_RESET> = 6;

        return;
    }
}
