class android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy extends java.lang.Object implements android.hardware.location.IActivityRecognitionHardwareSink
{
    public static android.hardware.location.IActivityRecognitionHardwareSink sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy;

        $r1 = r0.<android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy r0;

        r0 := @this: android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy;

        return "android.hardware.location.IActivityRecognitionHardwareSink";
    }

    public void onActivityChanged(android.hardware.location.ActivityChangedEvent) throws android.os.RemoteException
    {
        android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.location.IActivityRecognitionHardwareSink $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.location.ActivityChangedEvent r7;

        r0 := @this: android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy;

        r7 := @parameter0: android.hardware.location.ActivityChangedEvent;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IActivityRecognitionHardwareSink");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.location.ActivityChangedEvent: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IActivityRecognitionHardwareSink$Stub: android.hardware.location.IActivityRecognitionHardwareSink getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IActivityRecognitionHardwareSink$Stub: android.hardware.location.IActivityRecognitionHardwareSink getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IActivityRecognitionHardwareSink: void onActivityChanged(android.hardware.location.ActivityChangedEvent)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
