public abstract class android.hardware.location.IContextHubClientCallback$Stub extends android.os.Binder implements android.hardware.location.IContextHubClientCallback
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_onHubReset;
    static final int TRANSACTION_onMessageFromNanoApp;
    static final int TRANSACTION_onNanoAppAborted;
    static final int TRANSACTION_onNanoAppDisabled;
    static final int TRANSACTION_onNanoAppEnabled;
    static final int TRANSACTION_onNanoAppLoaded;
    static final int TRANSACTION_onNanoAppUnloaded;

    public void <init>()
    {
        android.hardware.location.IContextHubClientCallback$Stub r0;

        r0 := @this: android.hardware.location.IContextHubClientCallback$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.hardware.location.IContextHubClientCallback$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.hardware.location.IContextHubClientCallback");

        return;
    }

    public static android.hardware.location.IContextHubClientCallback asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.hardware.location.IContextHubClientCallback$Stub$Proxy $r2;
        boolean $z0;
        android.hardware.location.IContextHubClientCallback $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.hardware.location.IContextHubClientCallback");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.hardware.location.IContextHubClientCallback;

        if $z0 == 0 goto label2;

        $r3 = (android.hardware.location.IContextHubClientCallback) r1;

        return $r3;

     label2:
        $r2 = new android.hardware.location.IContextHubClientCallback$Stub$Proxy;

        specialinvoke $r2.<android.hardware.location.IContextHubClientCallback$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.hardware.location.IContextHubClientCallback getDefaultImpl()
    {
        android.hardware.location.IContextHubClientCallback $r0;

        $r0 = <android.hardware.location.IContextHubClientCallback$Stub$Proxy: android.hardware.location.IContextHubClientCallback sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "onNanoAppDisabled";

     label3:
        return "onNanoAppEnabled";

     label4:
        return "onNanoAppUnloaded";

     label5:
        return "onNanoAppLoaded";

     label6:
        return "onNanoAppAborted";

     label7:
        return "onHubReset";

     label8:
        return "onMessageFromNanoApp";
    }

    public static boolean setDefaultImpl(android.hardware.location.IContextHubClientCallback)
    {
        android.hardware.location.IContextHubClientCallback r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.hardware.location.IContextHubClientCallback;

        $r1 = <android.hardware.location.IContextHubClientCallback$Stub$Proxy: android.hardware.location.IContextHubClientCallback sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.hardware.location.IContextHubClientCallback$Stub$Proxy: android.hardware.location.IContextHubClientCallback sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.location.IContextHubClientCallback$Stub r0;

        r0 := @this: android.hardware.location.IContextHubClientCallback$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.hardware.location.IContextHubClientCallback$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.hardware.location.IContextHubClientCallback$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.hardware.location.IContextHubClientCallback$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubClientCallback$Stub r0;
        int i0, i1, $i7, $i8;
        android.os.Parcel r1, r4;
        long $l2, $l3, $l4, $l5, $l6;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        boolean $z0;
        android.hardware.location.NanoAppMessage r5;

        r0 := @this: android.hardware.location.IContextHubClientCallback$Stub;

        i0 := @parameter0: int;

        r4 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        if i0 == 1598968902 goto label11;

        tableswitch(i0)
        {
            case 1: goto label08;
            case 2: goto label07;
            case 3: goto label06;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r4, r1, i1);

        return $z0;

     label02:
        virtualinvoke r4.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.location.IContextHubClientCallback");

        $l2 = virtualinvoke r4.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.hardware.location.IContextHubClientCallback$Stub: void onNanoAppDisabled(long)>($l2);

        return 1;

     label03:
        virtualinvoke r4.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.location.IContextHubClientCallback");

        $l3 = virtualinvoke r4.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.hardware.location.IContextHubClientCallback$Stub: void onNanoAppEnabled(long)>($l3);

        return 1;

     label04:
        virtualinvoke r4.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.location.IContextHubClientCallback");

        $l4 = virtualinvoke r4.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.hardware.location.IContextHubClientCallback$Stub: void onNanoAppUnloaded(long)>($l4);

        return 1;

     label05:
        virtualinvoke r4.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.location.IContextHubClientCallback");

        $l5 = virtualinvoke r4.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.hardware.location.IContextHubClientCallback$Stub: void onNanoAppLoaded(long)>($l5);

        return 1;

     label06:
        virtualinvoke r4.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.location.IContextHubClientCallback");

        $l6 = virtualinvoke r4.<android.os.Parcel: long readLong()>();

        $i7 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.location.IContextHubClientCallback$Stub: void onNanoAppAborted(long,int)>($l6, $i7);

        return 1;

     label07:
        virtualinvoke r4.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.location.IContextHubClientCallback");

        virtualinvoke r0.<android.hardware.location.IContextHubClientCallback$Stub: void onHubReset()>();

        return 1;

     label08:
        virtualinvoke r4.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.location.IContextHubClientCallback");

        $i8 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i8 == 0 goto label09;

        $r2 = <android.hardware.location.NanoAppMessage: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r4);

        r5 = (android.hardware.location.NanoAppMessage) $r3;

        goto label10;

     label09:
        r5 = null;

     label10:
        virtualinvoke r0.<android.hardware.location.IContextHubClientCallback$Stub: void onMessageFromNanoApp(android.hardware.location.NanoAppMessage)>(r5);

        return 1;

     label11:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.hardware.location.IContextHubClientCallback");

        return 1;
    }

    public static void <clinit>()
    {
        <android.hardware.location.IContextHubClientCallback$Stub: int TRANSACTION_onNanoAppUnloaded> = 5;

        <android.hardware.location.IContextHubClientCallback$Stub: int TRANSACTION_onNanoAppLoaded> = 4;

        <android.hardware.location.IContextHubClientCallback$Stub: int TRANSACTION_onNanoAppEnabled> = 6;

        <android.hardware.location.IContextHubClientCallback$Stub: int TRANSACTION_onNanoAppDisabled> = 7;

        <android.hardware.location.IContextHubClientCallback$Stub: int TRANSACTION_onNanoAppAborted> = 3;

        <android.hardware.location.IContextHubClientCallback$Stub: int TRANSACTION_onMessageFromNanoApp> = 1;

        <android.hardware.location.IContextHubClientCallback$Stub: int TRANSACTION_onHubReset> = 2;

        <android.hardware.location.IContextHubClientCallback$Stub: java.lang.String DESCRIPTOR> = "android.hardware.location.IContextHubClientCallback";

        return;
    }
}
