class android.hardware.location.IContextHubService$Stub$Proxy extends java.lang.Object implements android.hardware.location.IContextHubService
{
    public static android.hardware.location.IContextHubService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        $r1 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.hardware.location.IContextHubClient createClient(int, android.hardware.location.IContextHubClientCallback) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4, r9;
        boolean $z0;
        android.hardware.location.IContextHubService $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.location.IContextHubClientCallback r8;
        android.hardware.location.IContextHubClient r10, r11;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.hardware.location.IContextHubClientCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.hardware.location.IContextHubClientCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        r10 = interfaceinvoke $r6.<android.hardware.location.IContextHubService: android.hardware.location.IContextHubClient createClient(int,android.hardware.location.IContextHubClientCallback)>(i0, r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r11 = staticinvoke <android.hardware.location.IContextHubClient$Stub: android.hardware.location.IContextHubClient asInterface(android.os.IBinder)>($r4);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.hardware.location.IContextHubClient createPendingIntentClient(int, android.app.PendingIntent, long) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.hardware.location.IContextHubService $r5, $r6;
        java.lang.Throwable $r7;
        android.app.PendingIntent r8;
        android.hardware.location.IContextHubClient r9, r10;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.app.PendingIntent;

        l1 := @parameter2: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.hardware.location.IContextHubService: android.hardware.location.IContextHubClient createPendingIntentClient(int,android.app.PendingIntent,long)>(i0, r8, l1);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r10 = staticinvoke <android.hardware.location.IContextHubClient$Stub: android.hardware.location.IContextHubClient asInterface(android.os.IBinder)>($r4);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void disableNanoApp(int, android.hardware.location.IContextHubTransactionCallback, long) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.location.IContextHubService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.location.IContextHubTransactionCallback r7;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        l1 := @parameter2: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.location.IContextHubTransactionCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IContextHubService: void disableNanoApp(int,android.hardware.location.IContextHubTransactionCallback,long)>(i0, r7, l1);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void enableNanoApp(int, android.hardware.location.IContextHubTransactionCallback, long) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.location.IContextHubService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.location.IContextHubTransactionCallback r7;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        l1 := @parameter2: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.location.IContextHubTransactionCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IContextHubService: void enableNanoApp(int,android.hardware.location.IContextHubTransactionCallback,long)>(i0, r7, l1);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int[] findNanoAppOnHub(int, android.hardware.location.NanoAppFilter) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.location.IContextHubService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.location.NanoAppFilter r7;
        int[] r8, r9;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.location.NanoAppFilter;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.location.NanoAppFilter: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.hardware.location.IContextHubService: int[] findNanoAppOnHub(int,android.hardware.location.NanoAppFilter)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int[] getContextHubHandles() throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.location.IContextHubService $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.hardware.location.IContextHubService: int[] getContextHubHandles()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.hardware.location.ContextHubInfo getContextHubInfo(int) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.location.IContextHubService $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.location.ContextHubInfo r9, r10;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.location.IContextHubService: android.hardware.location.ContextHubInfo getContextHubInfo(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.hardware.location.ContextHubInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.location.ContextHubInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.util.List getContextHubs() throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.hardware.location.IContextHubService $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.hardware.location.IContextHubService: java.util.List getContextHubs()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.hardware.location.ContextHubInfo: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        return "android.hardware.location.IContextHubService";
    }

    public android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.location.IContextHubService $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.location.NanoAppInstanceInfo r9, r10;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.location.IContextHubService: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.hardware.location.NanoAppInstanceInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.location.NanoAppInstanceInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int loadNanoApp(int, android.hardware.location.NanoApp) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.location.IContextHubService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        android.hardware.location.NanoApp r7;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.location.NanoApp;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.location.NanoApp: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.hardware.location.IContextHubService: int loadNanoApp(int,android.hardware.location.NanoApp)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void loadNanoAppOnHub(int, android.hardware.location.IContextHubTransactionCallback, android.hardware.location.NanoAppBinary) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0;
        android.hardware.location.NanoAppBinary r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.hardware.location.IContextHubService $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.location.IContextHubTransactionCallback r8;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        r1 := @parameter2: android.hardware.location.NanoAppBinary;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.hardware.location.IContextHubTransactionCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.location.NanoAppBinary: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r4 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.location.IContextHubService: void loadNanoAppOnHub(int,android.hardware.location.IContextHubTransactionCallback,android.hardware.location.NanoAppBinary)>(i0, r8, r1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void queryNanoApps(int, android.hardware.location.IContextHubTransactionCallback) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.location.IContextHubService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.location.IContextHubTransactionCallback r7;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.location.IContextHubTransactionCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IContextHubService: void queryNanoApps(int,android.hardware.location.IContextHubTransactionCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int registerCallback(android.hardware.location.IContextHubCallback) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.location.IContextHubService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.location.IContextHubCallback r7;
        int i0, i1;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        r7 := @parameter0: android.hardware.location.IContextHubCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.location.IContextHubCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.hardware.location.IContextHubService: int registerCallback(android.hardware.location.IContextHubCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int sendMessage(int, int, android.hardware.location.ContextHubMessage) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.location.IContextHubService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.location.ContextHubMessage r7;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r7 := @parameter2: android.hardware.location.ContextHubMessage;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.location.ContextHubMessage: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        i2 = interfaceinvoke $r5.<android.hardware.location.IContextHubService: int sendMessage(int,int,android.hardware.location.ContextHubMessage)>(i1, i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int unloadNanoApp(int) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.location.IContextHubService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.hardware.location.IContextHubService: int unloadNanoApp(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unloadNanoAppFromHub(int, android.hardware.location.IContextHubTransactionCallback, long) throws android.os.RemoteException
    {
        android.hardware.location.IContextHubService$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.location.IContextHubService $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.location.IContextHubTransactionCallback r7;

        r0 := @this: android.hardware.location.IContextHubService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.hardware.location.IContextHubTransactionCallback;

        l1 := @parameter2: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IContextHubService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.hardware.location.IContextHubTransactionCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r3 = r0.<android.hardware.location.IContextHubService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IContextHubService$Stub: android.hardware.location.IContextHubService getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IContextHubService: void unloadNanoAppFromHub(int,android.hardware.location.IContextHubTransactionCallback,long)>(i0, r7, l1);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
