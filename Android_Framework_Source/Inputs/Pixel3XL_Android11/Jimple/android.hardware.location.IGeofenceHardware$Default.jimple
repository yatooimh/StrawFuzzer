public class android.hardware.location.IGeofenceHardware$Default extends java.lang.Object implements android.hardware.location.IGeofenceHardware
{

    public void <init>()
    {
        android.hardware.location.IGeofenceHardware$Default r0;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean addCircularFence(int, android.hardware.location.GeofenceHardwareRequestParcelable, android.hardware.location.IGeofenceHardwareCallback) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Default r0;
        int i0;
        android.hardware.location.GeofenceHardwareRequestParcelable r1;
        android.hardware.location.IGeofenceHardwareCallback r2;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.location.GeofenceHardwareRequestParcelable;

        r2 := @parameter2: android.hardware.location.IGeofenceHardwareCallback;

        return 0;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.location.IGeofenceHardware$Default r0;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        return null;
    }

    public int[] getMonitoringTypes() throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Default r0;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        return null;
    }

    public int getStatusOfMonitoringType(int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Default r0;
        int i0;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean pauseGeofence(int, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Default r0;
        int i0, i1;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public boolean registerForMonitorStateChangeCallback(int, android.hardware.location.IGeofenceHardwareMonitorCallback) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Default r0;
        int i0;
        android.hardware.location.IGeofenceHardwareMonitorCallback r1;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.location.IGeofenceHardwareMonitorCallback;

        return 0;
    }

    public boolean removeGeofence(int, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Default r0;
        int i0, i1;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public boolean resumeGeofence(int, int, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Default r0;
        int i0, i1, i2;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return 0;
    }

    public void setFusedGeofenceHardware(android.location.IFusedGeofenceHardware) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Default r0;
        android.location.IFusedGeofenceHardware r1;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        r1 := @parameter0: android.location.IFusedGeofenceHardware;

        return;
    }

    public void setGpsGeofenceHardware(android.location.IGpsGeofenceHardware) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Default r0;
        android.location.IGpsGeofenceHardware r1;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        r1 := @parameter0: android.location.IGpsGeofenceHardware;

        return;
    }

    public boolean unregisterForMonitorStateChangeCallback(int, android.hardware.location.IGeofenceHardwareMonitorCallback) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Default r0;
        int i0;
        android.hardware.location.IGeofenceHardwareMonitorCallback r1;

        r0 := @this: android.hardware.location.IGeofenceHardware$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.location.IGeofenceHardwareMonitorCallback;

        return 0;
    }
}
