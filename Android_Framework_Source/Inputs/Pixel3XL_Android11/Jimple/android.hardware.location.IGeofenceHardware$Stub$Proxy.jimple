class android.hardware.location.IGeofenceHardware$Stub$Proxy extends java.lang.Object implements android.hardware.location.IGeofenceHardware
{
    public static android.hardware.location.IGeofenceHardware sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public boolean addCircularFence(int, android.hardware.location.GeofenceHardwareRequestParcelable, android.hardware.location.IGeofenceHardwareCallback) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        android.hardware.location.IGeofenceHardwareCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0, z1, z2;
        android.hardware.location.IGeofenceHardware $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;
        android.hardware.location.GeofenceHardwareRequestParcelable r8;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.hardware.location.GeofenceHardwareRequestParcelable;

        r1 := @parameter2: android.hardware.location.IGeofenceHardwareCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardware");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        z1 = 1;

        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.location.GeofenceHardwareRequestParcelable: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r9 = interfaceinvoke r1.<android.hardware.location.IGeofenceHardwareCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r9 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.hardware.location.IGeofenceHardware: boolean addCircularFence(int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback)>(i0, r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label13:
        if i1 == 0 goto label14;

        goto label15;

     label14:
        z1 = 0;

     label15:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label16:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        $r1 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        return "android.hardware.location.IGeofenceHardware";
    }

    public int[] getMonitoringTypes() throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.location.IGeofenceHardware $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardware");

        $r3 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.hardware.location.IGeofenceHardware: int[] getMonitoringTypes()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getStatusOfMonitoringType(int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.location.IGeofenceHardware $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardware");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.hardware.location.IGeofenceHardware: int getStatusOfMonitoringType(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean pauseGeofence(int, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.hardware.location.IGeofenceHardware $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardware");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.location.IGeofenceHardware: boolean pauseGeofence(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean registerForMonitorStateChangeCallback(int, android.hardware.location.IGeofenceHardwareMonitorCallback) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.hardware.location.IGeofenceHardware $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.hardware.location.IGeofenceHardwareMonitorCallback r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: android.hardware.location.IGeofenceHardwareMonitorCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardware");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.hardware.location.IGeofenceHardwareMonitorCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.location.IGeofenceHardware: boolean registerForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>(i0, r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i1 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public boolean removeGeofence(int, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.hardware.location.IGeofenceHardware $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardware");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.location.IGeofenceHardware: boolean removeGeofence(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean resumeGeofence(int, int, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.hardware.location.IGeofenceHardware $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardware");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        r6 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.location.IGeofenceHardware: boolean resumeGeofence(int,int,int)>(i2, i0, i1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i3 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void setFusedGeofenceHardware(android.location.IFusedGeofenceHardware) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.location.IGeofenceHardware $r4, $r5;
        java.lang.Throwable $r6;
        android.location.IFusedGeofenceHardware r7;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        r7 := @parameter0: android.location.IFusedGeofenceHardware;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardware");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.location.IFusedGeofenceHardware: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IGeofenceHardware: void setFusedGeofenceHardware(android.location.IFusedGeofenceHardware)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setGpsGeofenceHardware(android.location.IGpsGeofenceHardware) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.hardware.location.IGeofenceHardware $r4, $r5;
        java.lang.Throwable $r6;
        android.location.IGpsGeofenceHardware r7;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        r7 := @parameter0: android.location.IGpsGeofenceHardware;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardware");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.location.IGpsGeofenceHardware: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IGeofenceHardware: void setGpsGeofenceHardware(android.location.IGpsGeofenceHardware)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean unregisterForMonitorStateChangeCallback(int, android.hardware.location.IGeofenceHardwareMonitorCallback) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardware$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.hardware.location.IGeofenceHardware $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.hardware.location.IGeofenceHardwareMonitorCallback r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.hardware.location.IGeofenceHardware$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: android.hardware.location.IGeofenceHardwareMonitorCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardware");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.hardware.location.IGeofenceHardwareMonitorCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.hardware.location.IGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardware$Stub: android.hardware.location.IGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.hardware.location.IGeofenceHardware: boolean unregisterForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>(i0, r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i1 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
