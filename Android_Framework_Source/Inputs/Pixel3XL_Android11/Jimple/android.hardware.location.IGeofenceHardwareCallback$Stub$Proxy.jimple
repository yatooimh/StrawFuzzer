class android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy extends java.lang.Object implements android.hardware.location.IGeofenceHardwareCallback
{
    public static android.hardware.location.IGeofenceHardwareCallback sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy;

        $r1 = r0.<android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy r0;

        r0 := @this: android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy;

        return "android.hardware.location.IGeofenceHardwareCallback";
    }

    public void onGeofenceAdd(int, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.location.IGeofenceHardwareCallback $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardwareCallback");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardwareCallback$Stub: android.hardware.location.IGeofenceHardwareCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.location.IGeofenceHardwareCallback$Stub: android.hardware.location.IGeofenceHardwareCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IGeofenceHardwareCallback: void onGeofenceAdd(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onGeofencePause(int, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.location.IGeofenceHardwareCallback $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardwareCallback");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardwareCallback$Stub: android.hardware.location.IGeofenceHardwareCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.location.IGeofenceHardwareCallback$Stub: android.hardware.location.IGeofenceHardwareCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IGeofenceHardwareCallback: void onGeofencePause(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onGeofenceRemove(int, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.location.IGeofenceHardwareCallback $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardwareCallback");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardwareCallback$Stub: android.hardware.location.IGeofenceHardwareCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.location.IGeofenceHardwareCallback$Stub: android.hardware.location.IGeofenceHardwareCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IGeofenceHardwareCallback: void onGeofenceRemove(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onGeofenceResume(int, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.location.IGeofenceHardwareCallback $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardwareCallback");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardwareCallback$Stub: android.hardware.location.IGeofenceHardwareCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.location.IGeofenceHardwareCallback$Stub: android.hardware.location.IGeofenceHardwareCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.location.IGeofenceHardwareCallback: void onGeofenceResume(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onGeofenceTransition(int, int, android.location.Location, long, int) throws android.os.RemoteException
    {
        android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy r0;
        int i0, i1, i3;
        long l2;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.hardware.location.IGeofenceHardwareCallback $r3, $r4;
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9, $r10, r12;
        android.location.Location r11;

        r0 := @this: android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r11 := @parameter2: android.location.Location;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IGeofenceHardwareCallback");

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        if r11 == null goto label07;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r11.<android.location.Location: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label06:
        goto label08;

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l2);

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

     label10:
        $r2 = r0.<android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label12;

        $r3 = staticinvoke <android.hardware.location.IGeofenceHardwareCallback$Stub: android.hardware.location.IGeofenceHardwareCallback getDefaultImpl()>();

        if $r3 == null goto label12;

        $r4 = staticinvoke <android.hardware.location.IGeofenceHardwareCallback$Stub: android.hardware.location.IGeofenceHardwareCallback getDefaultImpl()>();

        interfaceinvoke $r4.<android.hardware.location.IGeofenceHardwareCallback: void onGeofenceTransition(int,int,android.location.Location,long,int)>(i0, i1, r11, l2, i3);

     label11:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r8 := @caughtexception;

        r12 = $r8;

        goto label19;

     label14:
        $r5 := @caughtexception;

        r12 = $r5;

        goto label19;

     label15:
        $r6 := @caughtexception;

        r12 = $r6;

        goto label19;

     label16:
        $r7 := @caughtexception;

        r12 = $r7;

        goto label19;

     label17:
        $r9 := @caughtexception;

        r12 = $r9;

        goto label19;

     label18:
        $r10 := @caughtexception;

        r12 = $r10;

     label19:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r12;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
