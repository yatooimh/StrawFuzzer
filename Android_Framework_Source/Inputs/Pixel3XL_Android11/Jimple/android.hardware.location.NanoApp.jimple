public class android.hardware.location.NanoApp extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final java.lang.String TAG;
    private final java.lang.String UNKNOWN;
    private byte[] mAppBinary;
    private long mAppId;
    private boolean mAppIdSet;
    private int mAppVersion;
    private java.lang.String mName;
    private int mNeededExecMemBytes;
    private int mNeededReadMemBytes;
    private int[] mNeededSensors;
    private int mNeededWriteMemBytes;
    private int[] mOutputEvents;
    private java.lang.String mPublisher;

    static void <clinit>()
    {
        android.hardware.location.NanoApp$1 $r0;

        $r0 = new android.hardware.location.NanoApp$1;

        specialinvoke $r0.<android.hardware.location.NanoApp$1: void <init>()>();

        <android.hardware.location.NanoApp: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.hardware.location.NanoApp r0;

        r0 := @this: android.hardware.location.NanoApp;

        specialinvoke r0.<android.hardware.location.NanoApp: void <init>(long,byte[])>(0L, null);

        r0.<android.hardware.location.NanoApp: boolean mAppIdSet> = 0;

        return;
    }

    public void <init>(int, byte[])
    {
        android.hardware.location.NanoApp r0;
        int i0;
        byte[] r1;

        r0 := @this: android.hardware.location.NanoApp;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.location.NanoApp: java.lang.String TAG> = "NanoApp";

        r0.<android.hardware.location.NanoApp: java.lang.String UNKNOWN> = "Unknown";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NanoApp", "NanoApp(int, byte[]) is deprecated, please use NanoApp(long, byte[]) instead.");

        return;
    }

    public void <init>(long, byte[])
    {
        android.hardware.location.NanoApp r0;
        long l0;
        byte[] r1;
        int[] $r2, $r3;

        r0 := @this: android.hardware.location.NanoApp;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.location.NanoApp: java.lang.String TAG> = "NanoApp";

        r0.<android.hardware.location.NanoApp: java.lang.String UNKNOWN> = "Unknown";

        r0.<android.hardware.location.NanoApp: java.lang.String mPublisher> = "Unknown";

        r0.<android.hardware.location.NanoApp: java.lang.String mName> = "Unknown";

        r0.<android.hardware.location.NanoApp: long mAppId> = l0;

        r0.<android.hardware.location.NanoApp: boolean mAppIdSet> = 1;

        r0.<android.hardware.location.NanoApp: int mAppVersion> = 0;

        r0.<android.hardware.location.NanoApp: int mNeededReadMemBytes> = 0;

        r0.<android.hardware.location.NanoApp: int mNeededWriteMemBytes> = 0;

        r0.<android.hardware.location.NanoApp: int mNeededExecMemBytes> = 0;

        $r2 = newarray (int)[0];

        r0.<android.hardware.location.NanoApp: int[] mNeededSensors> = $r2;

        $r3 = newarray (int)[0];

        r0.<android.hardware.location.NanoApp: int[] mOutputEvents> = $r3;

        r0.<android.hardware.location.NanoApp: byte[] mAppBinary> = r1;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.hardware.location.NanoApp r0;
        android.os.Parcel r1;
        java.lang.String $r2, $r3;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] r4, r5;
        byte[] r6;

        r0 := @this: android.hardware.location.NanoApp;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.location.NanoApp: java.lang.String TAG> = "NanoApp";

        r0.<android.hardware.location.NanoApp: java.lang.String UNKNOWN> = "Unknown";

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.hardware.location.NanoApp: java.lang.String mPublisher> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.hardware.location.NanoApp: java.lang.String mName> = $r3;

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.hardware.location.NanoApp: long mAppId> = $l0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.hardware.location.NanoApp: int mAppVersion> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.hardware.location.NanoApp: int mNeededReadMemBytes> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.hardware.location.NanoApp: int mNeededWriteMemBytes> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.hardware.location.NanoApp: int mNeededExecMemBytes> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r4 = newarray (int)[$i5];

        r0.<android.hardware.location.NanoApp: int[] mNeededSensors> = r4;

        virtualinvoke r1.<android.os.Parcel: void readIntArray(int[])>(r4);

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r5 = newarray (int)[$i6];

        r0.<android.hardware.location.NanoApp: int[] mOutputEvents> = r5;

        virtualinvoke r1.<android.os.Parcel: void readIntArray(int[])>(r5);

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r6 = newarray (byte)[$i7];

        r0.<android.hardware.location.NanoApp: byte[] mAppBinary> = r6;

        virtualinvoke r1.<android.os.Parcel: void readByteArray(byte[])>(r6);

        return;
    }

    void <init>(android.os.Parcel, android.hardware.location.NanoApp$1)
    {
        android.hardware.location.NanoApp r0;
        android.os.Parcel r1;
        android.hardware.location.NanoApp$1 r2;

        r0 := @this: android.hardware.location.NanoApp;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.hardware.location.NanoApp$1;

        specialinvoke r0.<android.hardware.location.NanoApp: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public int describeContents()
    {
        android.hardware.location.NanoApp r0;

        r0 := @this: android.hardware.location.NanoApp;

        return 0;
    }

    public byte[] getAppBinary()
    {
        android.hardware.location.NanoApp r0;
        byte[] $r1;

        r0 := @this: android.hardware.location.NanoApp;

        $r1 = r0.<android.hardware.location.NanoApp: byte[] mAppBinary>;

        return $r1;
    }

    public long getAppId()
    {
        android.hardware.location.NanoApp r0;
        long $l0;

        r0 := @this: android.hardware.location.NanoApp;

        $l0 = r0.<android.hardware.location.NanoApp: long mAppId>;

        return $l0;
    }

    public int getAppVersion()
    {
        android.hardware.location.NanoApp r0;
        int $i0;

        r0 := @this: android.hardware.location.NanoApp;

        $i0 = r0.<android.hardware.location.NanoApp: int mAppVersion>;

        return $i0;
    }

    public java.lang.String getName()
    {
        android.hardware.location.NanoApp r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.location.NanoApp;

        $r1 = r0.<android.hardware.location.NanoApp: java.lang.String mName>;

        return $r1;
    }

    public int getNeededExecMemBytes()
    {
        android.hardware.location.NanoApp r0;
        int $i0;

        r0 := @this: android.hardware.location.NanoApp;

        $i0 = r0.<android.hardware.location.NanoApp: int mNeededExecMemBytes>;

        return $i0;
    }

    public int getNeededReadMemBytes()
    {
        android.hardware.location.NanoApp r0;
        int $i0;

        r0 := @this: android.hardware.location.NanoApp;

        $i0 = r0.<android.hardware.location.NanoApp: int mNeededReadMemBytes>;

        return $i0;
    }

    public int[] getNeededSensors()
    {
        android.hardware.location.NanoApp r0;
        int[] $r1;

        r0 := @this: android.hardware.location.NanoApp;

        $r1 = r0.<android.hardware.location.NanoApp: int[] mNeededSensors>;

        return $r1;
    }

    public int getNeededWriteMemBytes()
    {
        android.hardware.location.NanoApp r0;
        int $i0;

        r0 := @this: android.hardware.location.NanoApp;

        $i0 = r0.<android.hardware.location.NanoApp: int mNeededWriteMemBytes>;

        return $i0;
    }

    public int[] getOutputEvents()
    {
        android.hardware.location.NanoApp r0;
        int[] $r1;

        r0 := @this: android.hardware.location.NanoApp;

        $r1 = r0.<android.hardware.location.NanoApp: int[] mOutputEvents>;

        return $r1;
    }

    public java.lang.String getPublisher()
    {
        android.hardware.location.NanoApp r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.location.NanoApp;

        $r1 = r0.<android.hardware.location.NanoApp: java.lang.String mPublisher>;

        return $r1;
    }

    public void setAppBinary(byte[])
    {
        android.hardware.location.NanoApp r0;
        byte[] r1;

        r0 := @this: android.hardware.location.NanoApp;

        r1 := @parameter0: byte[];

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "appBinary must not be null");

        r0.<android.hardware.location.NanoApp: byte[] mAppBinary> = r1;

        return;
    }

    public void setAppId(long)
    {
        android.hardware.location.NanoApp r0;
        long l0;

        r0 := @this: android.hardware.location.NanoApp;

        l0 := @parameter0: long;

        r0.<android.hardware.location.NanoApp: long mAppId> = l0;

        r0.<android.hardware.location.NanoApp: boolean mAppIdSet> = 1;

        return;
    }

    public void setAppVersion(int)
    {
        android.hardware.location.NanoApp r0;
        int i0;

        r0 := @this: android.hardware.location.NanoApp;

        i0 := @parameter0: int;

        r0.<android.hardware.location.NanoApp: int mAppVersion> = i0;

        return;
    }

    public void setName(java.lang.String)
    {
        android.hardware.location.NanoApp r0;
        java.lang.String r1;

        r0 := @this: android.hardware.location.NanoApp;

        r1 := @parameter0: java.lang.String;

        r0.<android.hardware.location.NanoApp: java.lang.String mName> = r1;

        return;
    }

    public void setNeededExecMemBytes(int)
    {
        android.hardware.location.NanoApp r0;
        int i0;

        r0 := @this: android.hardware.location.NanoApp;

        i0 := @parameter0: int;

        r0.<android.hardware.location.NanoApp: int mNeededExecMemBytes> = i0;

        return;
    }

    public void setNeededReadMemBytes(int)
    {
        android.hardware.location.NanoApp r0;
        int i0;

        r0 := @this: android.hardware.location.NanoApp;

        i0 := @parameter0: int;

        r0.<android.hardware.location.NanoApp: int mNeededReadMemBytes> = i0;

        return;
    }

    public void setNeededSensors(int[])
    {
        android.hardware.location.NanoApp r0;
        int[] r1;

        r0 := @this: android.hardware.location.NanoApp;

        r1 := @parameter0: int[];

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "neededSensors must not be null");

        r0.<android.hardware.location.NanoApp: int[] mNeededSensors> = r1;

        return;
    }

    public void setNeededWriteMemBytes(int)
    {
        android.hardware.location.NanoApp r0;
        int i0;

        r0 := @this: android.hardware.location.NanoApp;

        i0 := @parameter0: int;

        r0.<android.hardware.location.NanoApp: int mNeededWriteMemBytes> = i0;

        return;
    }

    public void setOutputEvents(int[])
    {
        android.hardware.location.NanoApp r0;
        int[] r1;

        r0 := @this: android.hardware.location.NanoApp;

        r1 := @parameter0: int[];

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "outputEvents must not be null");

        r0.<android.hardware.location.NanoApp: int[] mOutputEvents> = r1;

        return;
    }

    public void setPublisher(java.lang.String)
    {
        android.hardware.location.NanoApp r0;
        java.lang.String r1;

        r0 := @this: android.hardware.location.NanoApp;

        r1 := @parameter0: java.lang.String;

        r0.<android.hardware.location.NanoApp: java.lang.String mPublisher> = r1;

        return;
    }

    public java.lang.String toString()
    {
        android.hardware.location.NanoApp r0;
        java.lang.StringBuilder $r1, $r4, $r8, $r13;
        long $l0;
        int $i1;
        java.lang.String $r11, $r16, $r18, r20, r22, r24;

        r0 := @this: android.hardware.location.NanoApp;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Id : ");

        $l0 = r0.<android.hardware.location.NanoApp: long mAppId>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        r20 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Version : ");

        $i1 = r0.<android.hardware.location.NanoApp: int mAppVersion>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        r22 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Name : ");

        $r11 = r0.<android.hardware.location.NanoApp: java.lang.String mName>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r24 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Publisher : ");

        $r16 = r0.<android.hardware.location.NanoApp: java.lang.String mPublisher>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.hardware.location.NanoApp r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        byte[] $r1, $r20, $r21;
        java.lang.StringBuilder $r2, $r8;
        java.lang.String $r4, $r7, $r10, $r13, $r14, $r15;
        java.lang.IllegalStateException $r6, $r12;
        boolean $z0;
        long $l1;
        int[] $r16, $r17, $r18, $r19;
        android.os.Parcel r22;

        r0 := @this: android.hardware.location.NanoApp;

        r22 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r1 = r0.<android.hardware.location.NanoApp: byte[] mAppBinary>;

        if $r1 == null goto label2;

        $z0 = r0.<android.hardware.location.NanoApp: boolean mAppIdSet>;

        if $z0 == 0 goto label1;

        $r14 = r0.<android.hardware.location.NanoApp: java.lang.String mPublisher>;

        virtualinvoke r22.<android.os.Parcel: void writeString(java.lang.String)>($r14);

        $r15 = r0.<android.hardware.location.NanoApp: java.lang.String mName>;

        virtualinvoke r22.<android.os.Parcel: void writeString(java.lang.String)>($r15);

        $l1 = r0.<android.hardware.location.NanoApp: long mAppId>;

        virtualinvoke r22.<android.os.Parcel: void writeLong(long)>($l1);

        $i2 = r0.<android.hardware.location.NanoApp: int mAppVersion>;

        virtualinvoke r22.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.hardware.location.NanoApp: int mNeededReadMemBytes>;

        virtualinvoke r22.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.hardware.location.NanoApp: int mNeededWriteMemBytes>;

        virtualinvoke r22.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.hardware.location.NanoApp: int mNeededExecMemBytes>;

        virtualinvoke r22.<android.os.Parcel: void writeInt(int)>($i5);

        $r16 = r0.<android.hardware.location.NanoApp: int[] mNeededSensors>;

        $i6 = lengthof $r16;

        virtualinvoke r22.<android.os.Parcel: void writeInt(int)>($i6);

        $r17 = r0.<android.hardware.location.NanoApp: int[] mNeededSensors>;

        virtualinvoke r22.<android.os.Parcel: void writeIntArray(int[])>($r17);

        $r18 = r0.<android.hardware.location.NanoApp: int[] mOutputEvents>;

        $i7 = lengthof $r18;

        virtualinvoke r22.<android.os.Parcel: void writeInt(int)>($i7);

        $r19 = r0.<android.hardware.location.NanoApp: int[] mOutputEvents>;

        virtualinvoke r22.<android.os.Parcel: void writeIntArray(int[])>($r19);

        $r20 = r0.<android.hardware.location.NanoApp: byte[] mAppBinary>;

        $i8 = lengthof $r20;

        virtualinvoke r22.<android.os.Parcel: void writeInt(int)>($i8);

        $r21 = r0.<android.hardware.location.NanoApp: byte[] mAppBinary>;

        virtualinvoke r22.<android.os.Parcel: void writeByteArray(byte[])>($r21);

        return;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must set AppId for nanoapp ");

        $r10 = r0.<android.hardware.location.NanoApp: java.lang.String mName>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must set non-null AppBinary for nanoapp ");

        $r4 = r0.<android.hardware.location.NanoApp: java.lang.String mName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }
}
