public class android.hardware.location.NanoAppFilter extends java.lang.Object implements android.os.Parcelable
{
    public static final int APP_ANY;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int FLAGS_VERSION_ANY;
    public static final int FLAGS_VERSION_GREAT_THAN;
    public static final int FLAGS_VERSION_LESS_THAN;
    public static final int FLAGS_VERSION_STRICTLY_EQUAL;
    public static final int HUB_ANY;
    private static final java.lang.String TAG;
    public static final int VENDOR_ANY;
    private long mAppId;
    private long mAppIdVendorMask;
    private int mAppVersion;
    private int mContextHubId;
    private int mVersionRestrictionMask;

    static void <clinit>()
    {
        android.hardware.location.NanoAppFilter$1 $r0;

        <android.hardware.location.NanoAppFilter: int VENDOR_ANY> = -1;

        <android.hardware.location.NanoAppFilter: java.lang.String TAG> = "NanoAppFilter";

        <android.hardware.location.NanoAppFilter: int HUB_ANY> = -1;

        <android.hardware.location.NanoAppFilter: int FLAGS_VERSION_STRICTLY_EQUAL> = 8;

        <android.hardware.location.NanoAppFilter: int FLAGS_VERSION_LESS_THAN> = 4;

        <android.hardware.location.NanoAppFilter: int FLAGS_VERSION_GREAT_THAN> = 2;

        <android.hardware.location.NanoAppFilter: int FLAGS_VERSION_ANY> = -1;

        <android.hardware.location.NanoAppFilter: int APP_ANY> = -1;

        $r0 = new android.hardware.location.NanoAppFilter$1;

        specialinvoke $r0.<android.hardware.location.NanoAppFilter$1: void <init>()>();

        <android.hardware.location.NanoAppFilter: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(long, int, int, long)
    {
        android.hardware.location.NanoAppFilter r0;
        long l0, l3;
        int i1, i2;

        r0 := @this: android.hardware.location.NanoAppFilter;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.location.NanoAppFilter: int mContextHubId> = -1;

        r0.<android.hardware.location.NanoAppFilter: long mAppId> = l0;

        r0.<android.hardware.location.NanoAppFilter: int mAppVersion> = i1;

        r0.<android.hardware.location.NanoAppFilter: int mVersionRestrictionMask> = i2;

        r0.<android.hardware.location.NanoAppFilter: long mAppIdVendorMask> = l3;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.hardware.location.NanoAppFilter r0;
        android.os.Parcel r1;
        long $l0, $l3;
        int $i1, $i2;

        r0 := @this: android.hardware.location.NanoAppFilter;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.location.NanoAppFilter: int mContextHubId> = -1;

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.hardware.location.NanoAppFilter: long mAppId> = $l0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.hardware.location.NanoAppFilter: int mAppVersion> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.hardware.location.NanoAppFilter: int mVersionRestrictionMask> = $i2;

        $l3 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.hardware.location.NanoAppFilter: long mAppIdVendorMask> = $l3;

        return;
    }

    void <init>(android.os.Parcel, android.hardware.location.NanoAppFilter$1)
    {
        android.hardware.location.NanoAppFilter r0;
        android.os.Parcel r1;
        android.hardware.location.NanoAppFilter$1 r2;

        r0 := @this: android.hardware.location.NanoAppFilter;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.hardware.location.NanoAppFilter$1;

        specialinvoke r0.<android.hardware.location.NanoAppFilter: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private boolean versionsMatch(int, int, int)
    {
        android.hardware.location.NanoAppFilter r0;
        int i0, i1, i2;

        r0 := @this: android.hardware.location.NanoAppFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return 1;
    }

    public int describeContents()
    {
        android.hardware.location.NanoAppFilter r0;

        r0 := @this: android.hardware.location.NanoAppFilter;

        return 0;
    }

    public boolean testMatch(android.hardware.location.NanoAppInstanceInfo)
    {
        android.hardware.location.NanoAppFilter r0;
        android.hardware.location.NanoAppInstanceInfo r1;
        int $i0, $i3, $i4, $i5, $i9, $i10;
        long $l1, $l6, $l7;
        byte $b2, $b8;
        boolean $z0, z1;

        r0 := @this: android.hardware.location.NanoAppFilter;

        r1 := @parameter0: android.hardware.location.NanoAppInstanceInfo;

        $i0 = r0.<android.hardware.location.NanoAppFilter: int mContextHubId>;

        if $i0 == -1 goto label1;

        $i9 = virtualinvoke r1.<android.hardware.location.NanoAppInstanceInfo: int getContexthubId()>();

        $i10 = r0.<android.hardware.location.NanoAppFilter: int mContextHubId>;

        if $i9 != $i10 goto label3;

     label1:
        $l1 = r0.<android.hardware.location.NanoAppFilter: long mAppId>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label2;

        $l6 = virtualinvoke r1.<android.hardware.location.NanoAppInstanceInfo: long getAppId()>();

        $l7 = r0.<android.hardware.location.NanoAppFilter: long mAppId>;

        $b8 = $l6 cmp $l7;

        if $b8 != 0 goto label3;

     label2:
        $i3 = r0.<android.hardware.location.NanoAppFilter: int mVersionRestrictionMask>;

        $i4 = r0.<android.hardware.location.NanoAppFilter: int mAppVersion>;

        $i5 = virtualinvoke r1.<android.hardware.location.NanoAppInstanceInfo: int getAppVersion()>();

        $z0 = specialinvoke r0.<android.hardware.location.NanoAppFilter: boolean versionsMatch(int,int,int)>($i3, $i4, $i5);

        if $z0 == 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    public java.lang.String toString()
    {
        android.hardware.location.NanoAppFilter r0;
        java.lang.StringBuilder $r2;
        long $l0, $l3;
        java.lang.String $r4, $r7, $r13;
        int $i1, $i2;

        r0 := @this: android.hardware.location.NanoAppFilter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nanoAppId: 0x");

        $l0 = r0.<android.hardware.location.NanoAppFilter: long mAppId>;

        $r4 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nanoAppVersion: 0x");

        $i1 = r0.<android.hardware.location.NanoAppFilter: int mAppVersion>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", versionMask: ");

        $i2 = r0.<android.hardware.location.NanoAppFilter: int mVersionRestrictionMask>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", vendorMask: ");

        $l3 = r0.<android.hardware.location.NanoAppFilter: long mAppIdVendorMask>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.hardware.location.NanoAppFilter r0;
        android.os.Parcel r1;
        int i0, $i2, $i3;
        long $l1, $l4;

        r0 := @this: android.hardware.location.NanoAppFilter;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $l1 = r0.<android.hardware.location.NanoAppFilter: long mAppId>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $i2 = r0.<android.hardware.location.NanoAppFilter: int mAppVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.hardware.location.NanoAppFilter: int mVersionRestrictionMask>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $l4 = r0.<android.hardware.location.NanoAppFilter: long mAppIdVendorMask>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        return;
    }
}
