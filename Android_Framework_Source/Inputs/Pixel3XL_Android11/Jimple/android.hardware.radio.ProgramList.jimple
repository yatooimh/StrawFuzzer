public final class android.hardware.radio.ProgramList extends java.lang.Object implements java.lang.AutoCloseable
{
    private boolean mIsClosed;
    private boolean mIsComplete;
    private final java.util.List mListCallbacks;
    private final java.lang.Object mLock;
    private android.hardware.radio.ProgramList$OnCloseListener mOnCloseListener;
    private final java.util.List mOnCompleteListeners;
    private final java.util.Map mPrograms;

    void <init>()
    {
        android.hardware.radio.ProgramList r0;
        java.lang.Object $r1;
        java.util.HashMap $r2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: android.hardware.radio.ProgramList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.hardware.radio.ProgramList: java.lang.Object mLock> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.hardware.radio.ProgramList: java.util.Map mPrograms> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.radio.ProgramList: java.util.List mListCallbacks> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.radio.ProgramList: java.util.List mOnCompleteListeners> = $r4;

        r0.<android.hardware.radio.ProgramList: boolean mIsClosed> = 0;

        r0.<android.hardware.radio.ProgramList: boolean mIsComplete> = 0;

        return;
    }

    static void lambda$addOnCompleteListener$0(java.util.concurrent.Executor, android.hardware.radio.ProgramList$OnCompleteListener)
    {
        java.util.concurrent.Executor r0;
        android.hardware.radio.ProgramList$OnCompleteListener r1;
        android.hardware.radio._$$Lambda$1DA3e7WM2G0cVcFyFUhdDG0CYnw $r3;

        r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.hardware.radio.ProgramList$OnCompleteListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = new android.hardware.radio._$$Lambda$1DA3e7WM2G0cVcFyFUhdDG0CYnw;

        specialinvoke $r3.<android.hardware.radio._$$Lambda$1DA3e7WM2G0cVcFyFUhdDG0CYnw: void <init>(android.hardware.radio.ProgramList$OnCompleteListener)>(r1);

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    static void lambda$apply$4(android.hardware.radio.ProgramList$OnCompleteListener)
    {
        android.hardware.radio.ProgramList$OnCompleteListener r0;

        r0 := @parameter0: android.hardware.radio.ProgramList$OnCompleteListener;

        interfaceinvoke r0.<android.hardware.radio.ProgramList$OnCompleteListener: void onComplete()>();

        return;
    }

    static void lambda$putLocked$5(android.hardware.radio.ProgramSelector$Identifier, android.hardware.radio.ProgramList$ListCallback)
    {
        android.hardware.radio.ProgramSelector$Identifier r0;
        android.hardware.radio.ProgramList$ListCallback r1;

        r0 := @parameter0: android.hardware.radio.ProgramSelector$Identifier;

        r1 := @parameter1: android.hardware.radio.ProgramList$ListCallback;

        virtualinvoke r1.<android.hardware.radio.ProgramList$ListCallback: void onItemChanged(android.hardware.radio.ProgramSelector$Identifier)>(r0);

        return;
    }

    static void lambda$removeLocked$6(android.hardware.radio.ProgramSelector$Identifier, android.hardware.radio.ProgramList$ListCallback)
    {
        android.hardware.radio.ProgramSelector$Identifier r0;
        android.hardware.radio.ProgramList$ListCallback r1;

        r0 := @parameter0: android.hardware.radio.ProgramSelector$Identifier;

        r1 := @parameter1: android.hardware.radio.ProgramList$ListCallback;

        virtualinvoke r1.<android.hardware.radio.ProgramList$ListCallback: void onItemRemoved(android.hardware.radio.ProgramSelector$Identifier)>(r0);

        return;
    }

    private void putLocked(android.hardware.radio.RadioManager$ProgramInfo)
    {
        android.hardware.radio.ProgramList r0;
        android.hardware.radio.ProgramSelector$Identifier r1, $r5, r11;
        java.util.Map r2;
        android.hardware.radio.ProgramSelector $r3, $r7;
        android.hardware.radio._$$Lambda$ProgramList$fDnoTVk5UB7qTfD9S7SYPcadYn0 $r8;
        java.util.List $r9;
        android.hardware.radio.RadioManager$ProgramInfo r10;

        r0 := @this: android.hardware.radio.ProgramList;

        r10 := @parameter0: android.hardware.radio.RadioManager$ProgramInfo;

        $r3 = virtualinvoke r10.<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.ProgramSelector getSelector()>();

        r1 = virtualinvoke $r3.<android.hardware.radio.ProgramSelector: android.hardware.radio.ProgramSelector$Identifier getPrimaryId()>();

        r2 = r0.<android.hardware.radio.ProgramList: java.util.Map mPrograms>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (android.hardware.radio.ProgramSelector$Identifier) r1;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r10);

        $r7 = virtualinvoke r10.<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.ProgramSelector getSelector()>();

        r11 = virtualinvoke $r7.<android.hardware.radio.ProgramSelector: android.hardware.radio.ProgramSelector$Identifier getPrimaryId()>();

        $r9 = r0.<android.hardware.radio.ProgramList: java.util.List mListCallbacks>;

        $r8 = new android.hardware.radio._$$Lambda$ProgramList$fDnoTVk5UB7qTfD9S7SYPcadYn0;

        specialinvoke $r8.<android.hardware.radio._$$Lambda$ProgramList$fDnoTVk5UB7qTfD9S7SYPcadYn0: void <init>(android.hardware.radio.ProgramSelector$Identifier)>(r11);

        interfaceinvoke $r9.<java.util.List: void forEach(java.util.function.Consumer)>($r8);

        return;
    }

    private void removeLocked(android.hardware.radio.ProgramSelector$Identifier)
    {
        android.hardware.radio.ProgramList r0;
        java.util.Map r1;
        java.lang.Object $r3;
        android.hardware.radio.ProgramSelector $r4;
        android.hardware.radio._$$Lambda$ProgramList$fHYelmhnUsVTYl6dFj75fMqCjGs $r5;
        java.util.List $r6;
        android.hardware.radio.ProgramSelector$Identifier r7, r9;
        android.hardware.radio.RadioManager$ProgramInfo r8;

        r0 := @this: android.hardware.radio.ProgramList;

        r7 := @parameter0: android.hardware.radio.ProgramSelector$Identifier;

        r1 = r0.<android.hardware.radio.ProgramList: java.util.Map mPrograms>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r7);

        $r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7);

        r8 = (android.hardware.radio.RadioManager$ProgramInfo) $r3;

        if r8 != null goto label1;

        return;

     label1:
        $r4 = virtualinvoke r8.<android.hardware.radio.RadioManager$ProgramInfo: android.hardware.radio.ProgramSelector getSelector()>();

        r9 = virtualinvoke $r4.<android.hardware.radio.ProgramSelector: android.hardware.radio.ProgramSelector$Identifier getPrimaryId()>();

        $r6 = r0.<android.hardware.radio.ProgramList: java.util.List mListCallbacks>;

        $r5 = new android.hardware.radio._$$Lambda$ProgramList$fHYelmhnUsVTYl6dFj75fMqCjGs;

        specialinvoke $r5.<android.hardware.radio._$$Lambda$ProgramList$fHYelmhnUsVTYl6dFj75fMqCjGs: void <init>(android.hardware.radio.ProgramSelector$Identifier)>(r9);

        interfaceinvoke $r6.<java.util.List: void forEach(java.util.function.Consumer)>($r5);

        return;
    }

    public void addOnCompleteListener(android.hardware.radio.ProgramList$OnCompleteListener)
    {
        android.hardware.radio.ProgramList r0;
        java.lang.Object r1;
        java.util.List r2;
        boolean $z0, $z2;
        android.hardware.radio.ProgramList$OnCompleteListener $r4, r6;
        java.lang.Throwable $r5;

        r0 := @this: android.hardware.radio.ProgramList;

        r6 := @parameter0: android.hardware.radio.ProgramList$OnCompleteListener;

        r1 = r0.<android.hardware.radio.ProgramList: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.hardware.radio.ProgramList: boolean mIsClosed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r2 = r0.<android.hardware.radio.ProgramList: java.util.List mOnCompleteListeners>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r6);

        $r4 = (android.hardware.radio.ProgramList$OnCompleteListener) r6;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z2 = r0.<android.hardware.radio.ProgramList: boolean mIsComplete>;

        if $z2 == 0 goto label4;

        interfaceinvoke r6.<android.hardware.radio.ProgramList$OnCompleteListener: void onComplete()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void addOnCompleteListener(java.util.concurrent.Executor, android.hardware.radio.ProgramList$OnCompleteListener)
    {
        android.hardware.radio.ProgramList r0;
        java.util.concurrent.Executor r1;
        android.hardware.radio.ProgramList$OnCompleteListener r2;
        android.hardware.radio._$$Lambda$ProgramList$aDYMynqVdAUqeKXIxfNtN1u67zs $r3;

        r0 := @this: android.hardware.radio.ProgramList;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.hardware.radio.ProgramList$OnCompleteListener;

        $r3 = new android.hardware.radio._$$Lambda$ProgramList$aDYMynqVdAUqeKXIxfNtN1u67zs;

        specialinvoke $r3.<android.hardware.radio._$$Lambda$ProgramList$aDYMynqVdAUqeKXIxfNtN1u67zs: void <init>(java.util.concurrent.Executor,android.hardware.radio.ProgramList$OnCompleteListener)>(r1, r2);

        virtualinvoke r0.<android.hardware.radio.ProgramList: void addOnCompleteListener(android.hardware.radio.ProgramList$OnCompleteListener)>($r3);

        return;
    }

    void apply(android.hardware.radio.ProgramList$Chunk)
    {
        android.hardware.radio.ProgramList r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.util.Set $r2, $r3, $r7;
        android.hardware.radio.'-$$Lambda$ProgramList$GfCj9jJ5znxw2TV4c2uykq35dgI' $r4;
        java.util.List $r5;
        java.util.Map $r6;
        java.lang.Throwable $r8;
        android.hardware.radio.ProgramList$Chunk r9;
        java.util.stream.Stream r11, r13, r15;
        java.util.HashSet r18;
        android.hardware.radio._$$Lambda$ProgramList$F_JpTj3vYguKIUQbnLbTePTuqUE r19;
        android.hardware.radio._$$Lambda$ProgramList$pKu0Zp5jwjix619hfB_Imj8Ke_g r20;
        android.hardware.radio._$$Lambda$ProgramList$eY050tMTgAcGV9hiWR_UDxhkfhw r21;
        java.util.function.Consumer r22;

        r0 := @this: android.hardware.radio.ProgramList;

        r9 := @parameter0: android.hardware.radio.ProgramList$Chunk;

        r1 = r0.<android.hardware.radio.ProgramList: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.hardware.radio.ProgramList: boolean mIsClosed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<android.hardware.radio.ProgramList: boolean mIsComplete> = 0;

        $z1 = virtualinvoke r9.<android.hardware.radio.ProgramList$Chunk: boolean isPurge()>();

        if $z1 == 0 goto label4;

        r18 = new java.util.HashSet;

        $r6 = r0.<android.hardware.radio.ProgramList: java.util.Map mPrograms>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        specialinvoke r18.<java.util.HashSet: void <init>(java.util.Collection)>($r7);

        r11 = virtualinvoke r18.<java.util.HashSet: java.util.stream.Stream stream()>();

        r19 = new android.hardware.radio._$$Lambda$ProgramList$F_JpTj3vYguKIUQbnLbTePTuqUE;

        specialinvoke r19.<android.hardware.radio._$$Lambda$ProgramList$F_JpTj3vYguKIUQbnLbTePTuqUE: void <init>(android.hardware.radio.ProgramList)>(r0);

        interfaceinvoke r11.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(r19);

     label4:
        $r2 = virtualinvoke r9.<android.hardware.radio.ProgramList$Chunk: java.util.Set getRemoved()>();

        r13 = interfaceinvoke $r2.<java.util.Set: java.util.stream.Stream stream()>();

        r20 = new android.hardware.radio._$$Lambda$ProgramList$pKu0Zp5jwjix619hfB_Imj8Ke_g;

        specialinvoke r20.<android.hardware.radio._$$Lambda$ProgramList$pKu0Zp5jwjix619hfB_Imj8Ke_g: void <init>(android.hardware.radio.ProgramList)>(r0);

        interfaceinvoke r13.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(r20);

        $r3 = virtualinvoke r9.<android.hardware.radio.ProgramList$Chunk: java.util.Set getModified()>();

        r15 = interfaceinvoke $r3.<java.util.Set: java.util.stream.Stream stream()>();

        r21 = new android.hardware.radio._$$Lambda$ProgramList$eY050tMTgAcGV9hiWR_UDxhkfhw;

        specialinvoke r21.<android.hardware.radio._$$Lambda$ProgramList$eY050tMTgAcGV9hiWR_UDxhkfhw: void <init>(android.hardware.radio.ProgramList)>(r0);

        interfaceinvoke r15.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(r21);

        $z2 = virtualinvoke r9.<android.hardware.radio.ProgramList$Chunk: boolean isComplete()>();

        if $z2 == 0 goto label5;

        r0.<android.hardware.radio.ProgramList: boolean mIsComplete> = 1;

        $r5 = r0.<android.hardware.radio.ProgramList: java.util.List mOnCompleteListeners>;

        $r4 = <android.hardware.radio._$$Lambda$ProgramList$GfCj9jJ5znxw2TV4c2uykq35dgI: android.hardware.radio.'-$$Lambda$ProgramList$GfCj9jJ5znxw2TV4c2uykq35dgI' INSTANCE>;

        r22 = (java.util.function.Consumer) $r4;

        interfaceinvoke $r5.<java.util.List: void forEach(java.util.function.Consumer)>(r22);

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void close()
    {
        android.hardware.radio.ProgramList r0;
        java.lang.Object r1;
        boolean $z0;
        java.util.Map $r3;
        java.util.List $r4, $r5;
        android.hardware.radio.ProgramList$OnCloseListener $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.hardware.radio.ProgramList;

        r1 = r0.<android.hardware.radio.ProgramList: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.hardware.radio.ProgramList: boolean mIsClosed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<android.hardware.radio.ProgramList: boolean mIsClosed> = 1;

        $r3 = r0.<android.hardware.radio.ProgramList: java.util.Map mPrograms>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        $r4 = r0.<android.hardware.radio.ProgramList: java.util.List mListCallbacks>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r0.<android.hardware.radio.ProgramList: java.util.List mOnCompleteListeners>;

        interfaceinvoke $r5.<java.util.List: void clear()>();

        $r6 = r0.<android.hardware.radio.ProgramList: android.hardware.radio.ProgramList$OnCloseListener mOnCloseListener>;

        if $r6 == null goto label4;

        $r7 = r0.<android.hardware.radio.ProgramList: android.hardware.radio.ProgramList$OnCloseListener mOnCloseListener>;

        interfaceinvoke $r7.<android.hardware.radio.ProgramList$OnCloseListener: void onClose()>();

        r0.<android.hardware.radio.ProgramList: android.hardware.radio.ProgramList$OnCloseListener mOnCloseListener> = null;

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public android.hardware.radio.RadioManager$ProgramInfo get(android.hardware.radio.ProgramSelector$Identifier)
    {
        android.hardware.radio.ProgramList r0;
        java.lang.Object r1, $r4;
        java.util.Map r2;
        java.lang.Throwable $r5;
        android.hardware.radio.ProgramSelector$Identifier r6;
        android.hardware.radio.RadioManager$ProgramInfo r7;

        r0 := @this: android.hardware.radio.ProgramList;

        r6 := @parameter0: android.hardware.radio.ProgramSelector$Identifier;

        r1 = r0.<android.hardware.radio.ProgramList: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r2 = r0.<android.hardware.radio.ProgramList: java.util.Map mPrograms>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r6);

        $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (android.hardware.radio.RadioManager$ProgramInfo) $r4;

        exitmonitor r1;

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$apply$1$ProgramList(android.hardware.radio.ProgramSelector$Identifier)
    {
        android.hardware.radio.ProgramList r0;
        android.hardware.radio.ProgramSelector$Identifier r1;

        r0 := @this: android.hardware.radio.ProgramList;

        r1 := @parameter0: android.hardware.radio.ProgramSelector$Identifier;

        specialinvoke r0.<android.hardware.radio.ProgramList: void removeLocked(android.hardware.radio.ProgramSelector$Identifier)>(r1);

        return;
    }

    public void lambda$apply$2$ProgramList(android.hardware.radio.ProgramSelector$Identifier)
    {
        android.hardware.radio.ProgramList r0;
        android.hardware.radio.ProgramSelector$Identifier r1;

        r0 := @this: android.hardware.radio.ProgramList;

        r1 := @parameter0: android.hardware.radio.ProgramSelector$Identifier;

        specialinvoke r0.<android.hardware.radio.ProgramList: void removeLocked(android.hardware.radio.ProgramSelector$Identifier)>(r1);

        return;
    }

    public void lambda$apply$3$ProgramList(android.hardware.radio.RadioManager$ProgramInfo)
    {
        android.hardware.radio.ProgramList r0;
        android.hardware.radio.RadioManager$ProgramInfo r1;

        r0 := @this: android.hardware.radio.ProgramList;

        r1 := @parameter0: android.hardware.radio.RadioManager$ProgramInfo;

        specialinvoke r0.<android.hardware.radio.ProgramList: void putLocked(android.hardware.radio.RadioManager$ProgramInfo)>(r1);

        return;
    }

    public void registerListCallback(android.hardware.radio.ProgramList$ListCallback)
    {
        android.hardware.radio.ProgramList r0;
        java.lang.Object r1;
        java.util.List r2;
        boolean $z0;
        android.hardware.radio.ProgramList$ListCallback $r4, r6;
        java.lang.Throwable $r5;

        r0 := @this: android.hardware.radio.ProgramList;

        r6 := @parameter0: android.hardware.radio.ProgramList$ListCallback;

        r1 = r0.<android.hardware.radio.ProgramList: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.hardware.radio.ProgramList: boolean mIsClosed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r2 = r0.<android.hardware.radio.ProgramList: java.util.List mListCallbacks>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r6);

        $r4 = (android.hardware.radio.ProgramList$ListCallback) r6;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void registerListCallback(java.util.concurrent.Executor, android.hardware.radio.ProgramList$ListCallback)
    {
        android.hardware.radio.ProgramList r0;
        java.util.concurrent.Executor r1;
        android.hardware.radio.ProgramList$ListCallback r2;
        android.hardware.radio.ProgramList$1 $r3;

        r0 := @this: android.hardware.radio.ProgramList;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.hardware.radio.ProgramList$ListCallback;

        $r3 = new android.hardware.radio.ProgramList$1;

        specialinvoke $r3.<android.hardware.radio.ProgramList$1: void <init>(android.hardware.radio.ProgramList,java.util.concurrent.Executor,android.hardware.radio.ProgramList$ListCallback)>(r0, r1, r2);

        virtualinvoke r0.<android.hardware.radio.ProgramList: void registerListCallback(android.hardware.radio.ProgramList$ListCallback)>($r3);

        return;
    }

    public void removeOnCompleteListener(android.hardware.radio.ProgramList$OnCompleteListener)
    {
        android.hardware.radio.ProgramList r0;
        java.lang.Object r1;
        java.util.List r2;
        boolean $z0;
        java.lang.Throwable $r4;
        android.hardware.radio.ProgramList$OnCompleteListener r5;

        r0 := @this: android.hardware.radio.ProgramList;

        r5 := @parameter0: android.hardware.radio.ProgramList$OnCompleteListener;

        r1 = r0.<android.hardware.radio.ProgramList: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.hardware.radio.ProgramList: boolean mIsClosed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r2 = r0.<android.hardware.radio.ProgramList: java.util.List mOnCompleteListeners>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r5);

        interfaceinvoke r2.<java.util.List: boolean remove(java.lang.Object)>(r5);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void setOnCloseListener(android.hardware.radio.ProgramList$OnCloseListener)
    {
        android.hardware.radio.ProgramList r0;
        java.lang.Object r1;
        android.hardware.radio.ProgramList$OnCloseListener $r2, r4;
        java.lang.Throwable $r3;
        java.lang.IllegalStateException r5;

        r0 := @this: android.hardware.radio.ProgramList;

        r4 := @parameter0: android.hardware.radio.ProgramList$OnCloseListener;

        r1 = r0.<android.hardware.radio.ProgramList: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.hardware.radio.ProgramList: android.hardware.radio.ProgramList$OnCloseListener mOnCloseListener>;

        if $r2 != null goto label3;

        r0.<android.hardware.radio.ProgramList: android.hardware.radio.ProgramList$OnCloseListener mOnCloseListener> = r4;

        exitmonitor r1;

     label2:
        return;

     label3:
        r5 = new java.lang.IllegalStateException;

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Close callback is already set");

        throw r5;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.util.List toList()
    {
        android.hardware.radio.ProgramList r0;
        java.lang.Object r1, $r6;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.util.stream.Stream $r4;
        java.util.stream.Collector $r5;
        java.lang.Throwable $r7;
        java.util.List r8;

        r0 := @this: android.hardware.radio.ProgramList;

        r1 = r0.<android.hardware.radio.ProgramList: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.hardware.radio.ProgramList: java.util.Map mPrograms>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.stream.Stream stream()>();

        $r5 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r5);

        r8 = (java.util.List) $r6;

        exitmonitor r1;

     label2:
        return r8;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterListCallback(android.hardware.radio.ProgramList$ListCallback)
    {
        android.hardware.radio.ProgramList r0;
        java.lang.Object r1;
        java.util.List r2;
        boolean $z0;
        java.lang.Throwable $r4;
        android.hardware.radio.ProgramList$ListCallback r5;

        r0 := @this: android.hardware.radio.ProgramList;

        r5 := @parameter0: android.hardware.radio.ProgramList$ListCallback;

        r1 = r0.<android.hardware.radio.ProgramList: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.hardware.radio.ProgramList: boolean mIsClosed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r2 = r0.<android.hardware.radio.ProgramList: java.util.List mListCallbacks>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r5);

        interfaceinvoke r2.<java.util.List: boolean remove(java.lang.Object)>(r5);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
