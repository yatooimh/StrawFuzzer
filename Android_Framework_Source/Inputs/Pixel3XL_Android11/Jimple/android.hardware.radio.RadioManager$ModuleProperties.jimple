public class android.hardware.radio.RadioManager$ModuleProperties extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final android.hardware.radio.RadioManager$BandDescriptor[] mBands;
    private final int mClassId;
    private final java.util.Map mDabFrequencyTable;
    private final int mId;
    private final java.lang.String mImplementor;
    private final boolean mIsBgScanSupported;
    private final boolean mIsCaptureSupported;
    private final boolean mIsInitializationRequired;
    private final int mNumAudioSources;
    private final int mNumTuners;
    private final java.lang.String mProduct;
    private final java.lang.String mSerial;
    private final java.lang.String mServiceName;
    private final java.util.Set mSupportedIdentifierTypes;
    private final java.util.Set mSupportedProgramTypes;
    private final java.util.Map mVendorInfo;
    private final java.lang.String mVersion;

    static void <clinit>()
    {
        android.hardware.radio.RadioManager$ModuleProperties$1 $r0;

        $r0 = new android.hardware.radio.RadioManager$ModuleProperties$1;

        specialinvoke $r0.<android.hardware.radio.RadioManager$ModuleProperties$1: void <init>()>();

        <android.hardware.radio.RadioManager$ModuleProperties: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(int, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, boolean, boolean, android.hardware.radio.RadioManager$BandDescriptor[], boolean, int[], int[], java.util.Map, java.util.Map)
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        int i0, i1, i2, i3;
        java.lang.String r1, r2, r3, $r15, r20, r21;
        boolean z0, z1, z2, $z3, $z4;
        android.hardware.radio.RadioManager$BandDescriptor[] r4;
        int[] r5, r6;
        java.util.Map r7, r8, r26;
        java.util.Set $r9, $r10, $r12;
        java.lang.Object $r13, $r14, $r17, r24;
        java.lang.Integer $r18;
        java.util.Iterator r22;
        java.util.Map$Entry r23;
        java.util.HashMap r25;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        i0 := @parameter0: int;

        r20 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r21 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: java.lang.String;

        r3 := @parameter6: java.lang.String;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        z0 := @parameter9: boolean;

        z1 := @parameter10: boolean;

        r4 := @parameter11: android.hardware.radio.RadioManager$BandDescriptor[];

        z2 := @parameter12: boolean;

        r5 := @parameter13: int[];

        r6 := @parameter14: int[];

        r7 := @parameter15: java.util.Map;

        r8 := @parameter16: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.radio.RadioManager$ModuleProperties: int mId> = i0;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

        if $z3 == 0 goto label1;

        r20 = "default";

        goto label1;

     label1:
        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mServiceName> = r20;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: int mClassId> = i1;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mImplementor> = r21;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mProduct> = r1;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mVersion> = r2;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mSerial> = r3;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumTuners> = i2;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumAudioSources> = i3;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsInitializationRequired> = z0;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsCaptureSupported> = z1;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] mBands> = r4;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsBgScanSupported> = z2;

        $r9 = staticinvoke <android.hardware.radio.RadioManager$ModuleProperties: java.util.Set arrayToSet(int[])>(r5);

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Set mSupportedProgramTypes> = $r9;

        $r10 = staticinvoke <android.hardware.radio.RadioManager$ModuleProperties: java.util.Set arrayToSet(int[])>(r6);

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Set mSupportedIdentifierTypes> = $r10;

        if r7 == null goto label3;

        $r12 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>();

        r22 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label3;

        $r13 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.Map$Entry) $r13;

        $r14 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.String) $r14;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r15);

        $r17 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.Integer) $r17;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r18);

        goto label2;

     label3:
        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mDabFrequencyTable> = r7;

        if r8 != null goto label4;

        r25 = new java.util.HashMap;

        specialinvoke r25.<java.util.HashMap: void <init>()>();

        r24 = r25;

        goto label5;

     label4:
        r24 = r8;

     label5:
        r26 = (java.util.Map) r24;

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mVendorInfo> = r26;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9;
        boolean $z1, z2, z3, z4;
        java.lang.String $r2, $r3, $r4, $r5, r18;
        java.lang.Class $r6;
        java.lang.ClassLoader $r7;
        android.hardware.radio.RadioManager$BandDescriptor[] $r8, $r17;
        int[] $r9, $r11;
        java.util.Set $r10, $r12;
        java.util.Map $r13, $r14;
        android.os.Parcelable $r15;
        android.hardware.radio.RadioManager$BandDescriptor $r16;
        android.os.Parcelable[] r19;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.hardware.radio.RadioManager$ModuleProperties: int mId> = $i0;

        r18 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r18);

        if $z1 == 0 goto label1;

        r18 = "default";

        goto label1;

     label1:
        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mServiceName> = r18;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.hardware.radio.RadioManager$ModuleProperties: int mClassId> = $i1;

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mImplementor> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mProduct> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mVersion> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mSerial> = $r5;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumTuners> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumAudioSources> = $i3;

        i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i7 != 1 goto label2;

        z2 = 1;

        goto label3;

     label2:
        z2 = 0;

     label3:
        r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsInitializationRequired> = z2;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i4 != 1 goto label4;

        z3 = 1;

        goto label5;

     label4:
        z3 = 0;

     label5:
        r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsCaptureSupported> = z3;

        $r6 = class "Landroid/hardware/radio/RadioManager$BandDescriptor;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r19 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>($r7);

        $i5 = lengthof r19;

        $r8 = newarray (android.hardware.radio.RadioManager$BandDescriptor)[$i5];

        r0.<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] mBands> = $r8;

        i8 = 0;

     label6:
        $i9 = lengthof r19;

        if i8 >= $i9 goto label7;

        $r17 = r0.<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] mBands>;

        $r15 = r19[i8];

        $r16 = (android.hardware.radio.RadioManager$BandDescriptor) $r15;

        $r17[i8] = $r16;

        i8 = i8 + 1;

        goto label6;

     label7:
        z4 = 0;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 != 1 goto label8;

        z4 = 1;

     label8:
        r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsBgScanSupported> = z4;

        $r9 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        $r10 = staticinvoke <android.hardware.radio.RadioManager$ModuleProperties: java.util.Set arrayToSet(int[])>($r9);

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Set mSupportedProgramTypes> = $r10;

        $r11 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        $r12 = staticinvoke <android.hardware.radio.RadioManager$ModuleProperties: java.util.Set arrayToSet(int[])>($r11);

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Set mSupportedIdentifierTypes> = $r12;

        $r13 = staticinvoke <android.hardware.radio.Utils: java.util.Map readStringIntMap(android.os.Parcel)>(r1);

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mDabFrequencyTable> = $r13;

        $r14 = staticinvoke <android.hardware.radio.Utils: java.util.Map readStringMap(android.os.Parcel)>(r1);

        r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mVendorInfo> = $r14;

        return;
    }

    void <init>(android.os.Parcel, android.hardware.radio.RadioManager$1)
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        android.os.Parcel r1;
        android.hardware.radio.RadioManager$1 r2;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.hardware.radio.RadioManager$1;

        specialinvoke r0.<android.hardware.radio.RadioManager$ModuleProperties: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private static java.util.Set arrayToSet(int[])
    {
        int[] r0;
        java.util.stream.IntStream $r1;
        java.util.stream.Stream $r2;
        java.util.stream.Collector $r3;
        java.lang.Object $r4;
        java.util.Set $r5;

        r0 := @parameter0: int[];

        $r1 = staticinvoke <java.util.Arrays: java.util.stream.IntStream stream(int[])>(r0);

        $r2 = interfaceinvoke $r1.<java.util.stream.IntStream: java.util.stream.Stream boxed()>();

        $r3 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toSet()>();

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r3);

        $r5 = (java.util.Set) $r4;

        return $r5;
    }

    private static int[] setToArray(java.util.Set)
    {
        java.util.Set r0;
        java.util.stream.Stream $r1;
        android.hardware.radio.'-$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw' $r2;
        java.util.stream.IntStream $r3;
        int[] $r4;
        java.util.function.ToIntFunction r5;

        r0 := @parameter0: java.util.Set;

        $r1 = interfaceinvoke r0.<java.util.Set: java.util.stream.Stream stream()>();

        $r2 = <android.hardware.radio._$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw: android.hardware.radio.'-$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw' INSTANCE>;

        r5 = (java.util.function.ToIntFunction) $r2;

        $r3 = interfaceinvoke $r1.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r5);

        $r4 = interfaceinvoke $r3.<java.util.stream.IntStream: int[] toArray()>();

        return $r4;
    }

    public int describeContents()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.radio.RadioManager$ModuleProperties r0, r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        android.hardware.radio.RadioManager$BandDescriptor[] $r11, $r12;
        java.util.Map $r13, $r14, $r15, $r16;
        java.lang.Object r17;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        r17 := @parameter0: java.lang.Object;

        if r0 != r17 goto label01;

        return 1;

     label01:
        $z0 = r17 instanceof android.hardware.radio.RadioManager$ModuleProperties;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r18 = (android.hardware.radio.RadioManager$ModuleProperties) r17;

        $i0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mId>;

        $i1 = virtualinvoke r18.<android.hardware.radio.RadioManager$ModuleProperties: int getId()>();

        if $i0 == $i1 goto label03;

        return 0;

     label03:
        $r2 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mServiceName>;

        $r1 = r18.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mServiceName>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r2, $r1);

        if $z1 != 0 goto label04;

        return 0;

     label04:
        $i3 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mClassId>;

        $i2 = r18.<android.hardware.radio.RadioManager$ModuleProperties: int mClassId>;

        if $i3 == $i2 goto label05;

        return 0;

     label05:
        $r4 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mImplementor>;

        $r3 = r18.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mImplementor>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 != 0 goto label06;

        return 0;

     label06:
        $r6 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mProduct>;

        $r5 = r18.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mProduct>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z3 != 0 goto label07;

        return 0;

     label07:
        $r8 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mVersion>;

        $r7 = r18.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mVersion>;

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z4 != 0 goto label08;

        return 0;

     label08:
        $r10 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mSerial>;

        $r9 = r18.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mSerial>;

        $z5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z5 != 0 goto label09;

        return 0;

     label09:
        $i5 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumTuners>;

        $i4 = r18.<android.hardware.radio.RadioManager$ModuleProperties: int mNumTuners>;

        if $i5 == $i4 goto label10;

        return 0;

     label10:
        $i7 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumAudioSources>;

        $i6 = r18.<android.hardware.radio.RadioManager$ModuleProperties: int mNumAudioSources>;

        if $i7 == $i6 goto label11;

        return 0;

     label11:
        $z7 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsInitializationRequired>;

        $z6 = r18.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsInitializationRequired>;

        if $z7 == $z6 goto label12;

        return 0;

     label12:
        $z9 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsCaptureSupported>;

        $z8 = r18.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsCaptureSupported>;

        if $z9 == $z8 goto label13;

        return 0;

     label13:
        $r12 = r0.<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] mBands>;

        $r11 = r18.<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] mBands>;

        $z10 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r12, $r11);

        if $z10 != 0 goto label14;

        return 0;

     label14:
        $z12 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsBgScanSupported>;

        $z11 = r18.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsBgScanSupported>;

        if $z12 == $z11 goto label15;

        return 0;

     label15:
        $r14 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mDabFrequencyTable>;

        $r13 = r18.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mDabFrequencyTable>;

        $z13 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r14, $r13);

        if $z13 != 0 goto label16;

        return 0;

     label16:
        $r16 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mVendorInfo>;

        $r15 = r18.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mVendorInfo>;

        $z14 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z14 != 0 goto label17;

        return 0;

     label17:
        return 1;
    }

    public android.hardware.radio.RadioManager$BandDescriptor[] getBands()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        android.hardware.radio.RadioManager$BandDescriptor[] $r1;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $r1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] mBands>;

        return $r1;
    }

    public int getClassId()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        int $i0;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $i0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mClassId>;

        return $i0;
    }

    public java.util.Map getDabFrequencyTable()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        java.util.Map $r1;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $r1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mDabFrequencyTable>;

        return $r1;
    }

    public int getId()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        int $i0;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $i0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mId>;

        return $i0;
    }

    public java.lang.String getImplementor()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $r1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mImplementor>;

        return $r1;
    }

    public int getNumAudioSources()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        int $i0;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $i0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumAudioSources>;

        return $i0;
    }

    public int getNumTuners()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        int $i0;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $i0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumTuners>;

        return $i0;
    }

    public java.lang.String getProduct()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $r1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mProduct>;

        return $r1;
    }

    public java.lang.String getSerial()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $r1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mSerial>;

        return $r1;
    }

    public java.lang.String getServiceName()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $r1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mServiceName>;

        return $r1;
    }

    public java.util.Map getVendorInfo()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        java.util.Map $r1;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $r1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mVendorInfo>;

        return $r1;
    }

    public java.lang.String getVersion()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $r1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mVersion>;

        return $r1;
    }

    public int hashCode()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r2, $r4, $r9, $r10;
        java.lang.String $r3, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r11, $r12, $r14;
        android.hardware.radio.RadioManager$BandDescriptor[] $r13;
        java.util.Map $r15, $r16;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $r1 = newarray (java.lang.Object)[15];

        $i0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mId>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mServiceName>;

        $r1[1] = $r3;

        $i1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mClassId>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[2] = $r4;

        $r5 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mImplementor>;

        $r1[3] = $r5;

        $r6 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mProduct>;

        $r1[4] = $r6;

        $r7 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mVersion>;

        $r1[5] = $r7;

        $r8 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mSerial>;

        $r1[6] = $r8;

        $i2 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumTuners>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[7] = $r9;

        $i3 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumAudioSources>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[8] = $r10;

        $z0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsInitializationRequired>;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[9] = $r11;

        $z1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsCaptureSupported>;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r1[10] = $r12;

        $r13 = r0.<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] mBands>;

        $r1[11] = $r13;

        $z2 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsBgScanSupported>;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r1[12] = $r14;

        $r15 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mDabFrequencyTable>;

        $r1[13] = $r15;

        $r16 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mVendorInfo>;

        $r1[14] = $r16;

        $i4 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i4;
    }

    public boolean isBackgroundScanningSupported()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        boolean $z0;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $z0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsBgScanSupported>;

        return $z0;
    }

    public boolean isCaptureSupported()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        boolean $z0;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $z0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsCaptureSupported>;

        return $z0;
    }

    public boolean isInitializationRequired()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        boolean $z0;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $z0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsInitializationRequired>;

        return $z0;
    }

    public boolean isProgramIdentifierSupported(int)
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        int i0;
        java.util.Set $r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Set mSupportedIdentifierTypes>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean isProgramTypeSupported(int)
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        int i0;
        java.util.Set $r1;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Set mSupportedProgramTypes>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    public java.lang.String toString()
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6, $r11, $r14, $r17, $r20, $r34, $r37;
        boolean $z0, $z1, $z2;
        android.hardware.radio.RadioManager$BandDescriptor[] $r33;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ModuleProperties [mId=");

        $i0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mServiceName=");

        $r6 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mServiceName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mClassId=");

        $i1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mClassId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mImplementor=");

        $r11 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mImplementor>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mProduct=");

        $r14 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mProduct>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mVersion=");

        $r17 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mVersion>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mSerial=");

        $r20 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mSerial>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mNumTuners=");

        $i2 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumTuners>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mNumAudioSources=");

        $i3 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumAudioSources>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsInitializationRequired=");

        $z0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsInitializationRequired>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsCaptureSupported=");

        $z1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsCaptureSupported>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIsBgScanSupported=");

        $z2 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsBgScanSupported>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mBands=");

        $r33 = r0.<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] mBands>;

        $r34 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r33);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r37 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r37;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.hardware.radio.RadioManager$ModuleProperties r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;
        android.hardware.radio.RadioManager$BandDescriptor[] $r7;
        java.util.Set $r8, $r10;
        int[] $r9, $r11;
        java.util.Map $r12, $r13;

        r0 := @this: android.hardware.radio.RadioManager$ModuleProperties;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mServiceName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i2 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mClassId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r3 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mImplementor>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mProduct>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r6 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.lang.String mSerial>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $i3 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumTuners>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.hardware.radio.RadioManager$ModuleProperties: int mNumAudioSources>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $z0 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsInitializationRequired>;

        i5 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        $z1 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsCaptureSupported>;

        i6 = (int) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        $r7 = r0.<android.hardware.radio.RadioManager$ModuleProperties: android.hardware.radio.RadioManager$BandDescriptor[] mBands>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>($r7, i0);

        $z2 = r0.<android.hardware.radio.RadioManager$ModuleProperties: boolean mIsBgScanSupported>;

        i7 = (int) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i7);

        $r8 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Set mSupportedProgramTypes>;

        $r9 = staticinvoke <android.hardware.radio.RadioManager$ModuleProperties: int[] setToArray(java.util.Set)>($r8);

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r9);

        $r10 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Set mSupportedIdentifierTypes>;

        $r11 = staticinvoke <android.hardware.radio.RadioManager$ModuleProperties: int[] setToArray(java.util.Set)>($r10);

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r11);

        $r12 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mDabFrequencyTable>;

        staticinvoke <android.hardware.radio.Utils: void writeStringIntMap(android.os.Parcel,java.util.Map)>(r1, $r12);

        $r13 = r0.<android.hardware.radio.RadioManager$ModuleProperties: java.util.Map mVendorInfo>;

        staticinvoke <android.hardware.radio.Utils: void writeStringMap(android.os.Parcel,java.util.Map)>(r1, $r13);

        return;
    }
}
