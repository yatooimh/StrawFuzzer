class android.hardware.radio.TunerAdapter extends android.hardware.radio.RadioTuner
{
    private static final java.lang.String TAG;
    private int mBand;
    private final android.hardware.radio.TunerCallbackAdapter mCallback;
    private boolean mIsClosed;
    private java.util.Map mLegacyListFilter;
    private android.hardware.radio.ProgramList mLegacyListProxy;
    private final android.hardware.radio.ITuner mTuner;

    void <init>(android.hardware.radio.ITuner, android.hardware.radio.TunerCallbackAdapter, int)
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.ITuner r1, $r4;
        android.hardware.radio.TunerCallbackAdapter r2, $r6;
        int i0;

        r0 := @this: android.hardware.radio.TunerAdapter;

        r1 := @parameter0: android.hardware.radio.ITuner;

        r2 := @parameter1: android.hardware.radio.TunerCallbackAdapter;

        i0 := @parameter2: int;

        specialinvoke r0.<android.hardware.radio.RadioTuner: void <init>()>();

        r0.<android.hardware.radio.TunerAdapter: boolean mIsClosed> = 0;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (android.hardware.radio.ITuner) r1;

        r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner> = $r4;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r6 = (android.hardware.radio.TunerCallbackAdapter) r2;

        r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.TunerCallbackAdapter mCallback> = $r6;

        r0.<android.hardware.radio.TunerAdapter: int mBand> = i0;

        return;
    }

    static void lambda$getDynamicProgramList$2()
    {
        return;
    }

    static void lambda$getProgramList$0()
    {
        return;
    }

    public int cancel()
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.ITuner $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.hardware.radio.TunerAdapter;

     label1:
        $r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        interfaceinvoke $r1.<android.hardware.radio.ITuner: void cancel()>();

     label2:
        return 0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "service died", $r3);

        return -32;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "Can\'t cancel", $r2);

        return -38;

        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void cancelAnnouncement()
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.ITuner $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.hardware.radio.TunerAdapter;

     label1:
        $r2 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        interfaceinvoke $r2.<android.hardware.radio.ITuner: void cancelAnnouncement()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void close()
    {
        android.hardware.radio.TunerAdapter r0;
        boolean $z0;
        android.hardware.radio.ProgramList $r2, $r5;
        android.hardware.radio.TunerCallbackAdapter $r3;
        android.hardware.radio.ITuner $r4, r8;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.radio.TunerAdapter;

        r8 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        entermonitor r8;

     label01:
        $z0 = r0.<android.hardware.radio.TunerAdapter: boolean mIsClosed>;

        if $z0 == 0 goto label03;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("BroadcastRadio.TunerAdapter", "Tuner is already closed");

        exitmonitor r8;

     label02:
        return;

     label03:
        r0.<android.hardware.radio.TunerAdapter: boolean mIsClosed> = 1;

        $r2 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList mLegacyListProxy>;

        if $r2 == null goto label04;

        $r5 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList mLegacyListProxy>;

        virtualinvoke $r5.<android.hardware.radio.ProgramList: void close()>();

        r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList mLegacyListProxy> = null;

     label04:
        $r3 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.TunerCallbackAdapter mCallback>;

        virtualinvoke $r3.<android.hardware.radio.TunerCallbackAdapter: void close()>();

        exitmonitor r8;

     label05:
        $r4 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        interfaceinvoke $r4.<android.hardware.radio.ITuner: void close()>();

     label06:
        goto label08;

     label07:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "Exception trying to close tuner", $r6);

     label08:
        return;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r8;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public int getConfiguration(android.hardware.radio.RadioManager$BandConfig[])
    {
        android.hardware.radio.TunerAdapter r0;
        java.lang.IllegalArgumentException $r1;
        int $i0;
        android.hardware.radio.ITuner $r2;
        android.hardware.radio.RadioManager$BandConfig $r3;
        android.os.RemoteException $r4;
        android.hardware.radio.RadioManager$BandConfig[] r5;

        r0 := @this: android.hardware.radio.TunerAdapter;

        r5 := @parameter0: android.hardware.radio.RadioManager$BandConfig[];

        if r5 == null goto label4;

        $i0 = lengthof r5;

        if $i0 != 1 goto label4;

     label1:
        $r2 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        $r3 = interfaceinvoke $r2.<android.hardware.radio.ITuner: android.hardware.radio.RadioManager$BandConfig getConfiguration()>();

        r5[0] = $r3;

     label2:
        return 0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "service died", $r4);

        return -32;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The argument must be an array of length 1");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.radio.ProgramList getDynamicProgramList(android.hardware.radio.ProgramList$Filter)
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.ITuner r1, $r5;
        android.hardware.radio.ProgramList $r4, $r6, r18;
        android.os.RemoteException $r7;
        android.hardware.radio.'-$$Lambda$TunerAdapter$St9hluCzvLWs9wyE7kDX24NpwJQ' $r8;
        android.hardware.radio.TunerCallbackAdapter $r9, r13;
        java.lang.Throwable $r10, $r11;
        android.hardware.radio.ProgramList$Filter r12;
        android.hardware.radio._$$Lambda$TunerAdapter$ytmKJEaNVVp6n7nE6SVU6pZ9g7c r19;
        java.lang.RuntimeException r20;
        android.hardware.radio.ProgramList$OnCloseListener r21;

        r0 := @this: android.hardware.radio.TunerAdapter;

        r12 := @parameter0: android.hardware.radio.ProgramList$Filter;

        r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        entermonitor r1;

     label01:
        $r4 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList mLegacyListProxy>;

        if $r4 == null goto label02;

        $r6 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList mLegacyListProxy>;

        virtualinvoke $r6.<android.hardware.radio.ProgramList: void close()>();

        r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList mLegacyListProxy> = null;

     label02:
        r0.<android.hardware.radio.TunerAdapter: java.util.Map mLegacyListFilter> = null;

        r18 = new android.hardware.radio.ProgramList;

        specialinvoke r18.<android.hardware.radio.ProgramList: void <init>()>();

        r13 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.TunerCallbackAdapter mCallback>;

        r19 = new android.hardware.radio._$$Lambda$TunerAdapter$ytmKJEaNVVp6n7nE6SVU6pZ9g7c;

        specialinvoke r19.<android.hardware.radio._$$Lambda$TunerAdapter$ytmKJEaNVVp6n7nE6SVU6pZ9g7c: void <init>(android.hardware.radio.TunerAdapter)>(r0);

        virtualinvoke r13.<android.hardware.radio.TunerCallbackAdapter: void setProgramListObserver(android.hardware.radio.ProgramList,android.hardware.radio.ProgramList$OnCloseListener)>(r18, r19);

     label03:
        $r5 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        interfaceinvoke $r5.<android.hardware.radio.ITuner: void startProgramListUpdates(android.hardware.radio.ProgramList$Filter)>(r12);

     label04:
        exitmonitor r1;

     label05:
        return r18;

     label06:
        $r7 := @caughtexception;

     label07:
        $r9 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.TunerCallbackAdapter mCallback>;

        $r8 = <android.hardware.radio._$$Lambda$TunerAdapter$St9hluCzvLWs9wyE7kDX24NpwJQ: android.hardware.radio.'-$$Lambda$TunerAdapter$St9hluCzvLWs9wyE7kDX24NpwJQ' INSTANCE>;

        r21 = (android.hardware.radio.ProgramList$OnCloseListener) $r8;

        virtualinvoke $r9.<android.hardware.radio.TunerCallbackAdapter: void setProgramListObserver(android.hardware.radio.ProgramList,android.hardware.radio.ProgramList$OnCloseListener)>(null, r21);

        r20 = new java.lang.RuntimeException;

        specialinvoke r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r7);

        throw r20;

     label08:
        $r10 := @caughtexception;

     label09:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BroadcastRadio.TunerAdapter", "Program list is not supported with this hardware");

        exitmonitor r1;

     label10:
        return null;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.UnsupportedOperationException from label03 to label04 with label08;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public android.graphics.Bitmap getMetadataImage(int)
    {
        android.hardware.radio.TunerAdapter r0;
        int i0;
        android.hardware.radio.ITuner $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.graphics.Bitmap r4;

        r0 := @this: android.hardware.radio.TunerAdapter;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        r4 = interfaceinvoke $r1.<android.hardware.radio.ITuner: android.graphics.Bitmap getImage(int)>(i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r2);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getMute()
    {
        android.hardware.radio.TunerAdapter r0;
        boolean z0;
        android.hardware.radio.ITuner $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.hardware.radio.TunerAdapter;

     label1:
        $r2 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        z0 = interfaceinvoke $r2.<android.hardware.radio.ITuner: boolean isMuted()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "service died", $r3);

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.Map getParameters(java.util.List)
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.ITuner r1;
        java.util.List $r3, r6;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.util.Map r7;

        r0 := @this: android.hardware.radio.TunerAdapter;

        r6 := @parameter0: java.util.List;

     label1:
        r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r6);

        $r3 = (java.util.List) r6;

        r7 = interfaceinvoke r1.<android.hardware.radio.ITuner: java.util.Map getParameters(java.util.List)>($r3);

     label2:
        return r7;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r4);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getProgramInformation(android.hardware.radio.RadioManager$ProgramInfo[])
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.RadioManager$ProgramInfo[] r1;
        android.hardware.radio.RadioManager$ProgramInfo r2;
        int $i1;
        android.hardware.radio.TunerCallbackAdapter $r3;

        r0 := @this: android.hardware.radio.TunerAdapter;

        r1 := @parameter0: android.hardware.radio.RadioManager$ProgramInfo[];

        if r1 == null goto label3;

        $i1 = lengthof r1;

        if $i1 == 1 goto label1;

        goto label3;

     label1:
        $r3 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.TunerCallbackAdapter mCallback>;

        r2 = virtualinvoke $r3.<android.hardware.radio.TunerCallbackAdapter: android.hardware.radio.RadioManager$ProgramInfo getCurrentProgramInformation()>();

        if r2 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BroadcastRadio.TunerAdapter", "Didn\'t get program info yet");

        return -38;

     label2:
        r1[0] = r2;

        return 0;

     label3:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BroadcastRadio.TunerAdapter", "The argument must be an array of length 1");

        return -22;
    }

    public java.util.List getProgramList(java.util.Map)
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.ITuner r1, r13;
        android.hardware.radio.ProgramList $r3, $r6, r20;
        android.hardware.radio.TunerCallbackAdapter $r4, $r7, $r14;
        android.hardware.radio.'-$$Lambda$TunerAdapter$xm27iP_3PUgByOaDoK2KJcP5fnA' $r5;
        java.util.Map $r8, r11;
        boolean $z0;
        android.os.RemoteException $r9;
        java.lang.Throwable $r10;
        java.util.List r15;
        android.hardware.radio.ProgramList$Filter r21;
        java.lang.IllegalStateException r22;
        java.lang.RuntimeException r23;
        android.hardware.radio.ProgramList$OnCloseListener r24;

        r0 := @this: android.hardware.radio.TunerAdapter;

        r11 := @parameter0: java.util.Map;

        r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList mLegacyListProxy>;

        if $r3 == null goto label02;

        $r8 = r0.<android.hardware.radio.TunerAdapter: java.util.Map mLegacyListFilter>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, r11);

        if $z0 != 0 goto label04;

     label02:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BroadcastRadio.TunerAdapter", "Program list filter has changed, requesting new list");

        r20 = new android.hardware.radio.ProgramList;

        specialinvoke r20.<android.hardware.radio.ProgramList: void <init>()>();

        r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList mLegacyListProxy> = r20;

        r0.<android.hardware.radio.TunerAdapter: java.util.Map mLegacyListFilter> = r11;

        $r4 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.TunerCallbackAdapter mCallback>;

        virtualinvoke $r4.<android.hardware.radio.TunerCallbackAdapter: void clearLastCompleteList()>();

        $r7 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.TunerCallbackAdapter mCallback>;

        $r6 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList mLegacyListProxy>;

        $r5 = <android.hardware.radio._$$Lambda$TunerAdapter$xm27iP_3PUgByOaDoK2KJcP5fnA: android.hardware.radio.'-$$Lambda$TunerAdapter$xm27iP_3PUgByOaDoK2KJcP5fnA' INSTANCE>;

        r24 = (android.hardware.radio.ProgramList$OnCloseListener) $r5;

        virtualinvoke $r7.<android.hardware.radio.TunerCallbackAdapter: void setProgramListObserver(android.hardware.radio.ProgramList,android.hardware.radio.ProgramList$OnCloseListener)>($r6, r24);

     label03:
        r13 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        r21 = new android.hardware.radio.ProgramList$Filter;

        specialinvoke r21.<android.hardware.radio.ProgramList$Filter: void <init>(java.util.Map)>(r11);

        interfaceinvoke r13.<android.hardware.radio.ITuner: void startProgramListUpdates(android.hardware.radio.ProgramList$Filter)>(r21);

     label04:
        $r14 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.TunerCallbackAdapter mCallback>;

        r15 = virtualinvoke $r14.<android.hardware.radio.TunerCallbackAdapter: java.util.List getLastCompleteList()>();

     label05:
        if r15 == null goto label08;

     label06:
        exitmonitor r1;

     label07:
        return r15;

     label08:
        r22 = new java.lang.IllegalStateException;

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Program list is not ready yet");

        throw r22;

     label09:
        $r9 := @caughtexception;

     label10:
        r23 = new java.lang.RuntimeException;

        specialinvoke r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r9);

        throw r23;

     label11:
        $r10 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean hasControl()
    {
        android.hardware.radio.TunerAdapter r0;
        boolean z0, $z1;
        android.hardware.radio.ITuner $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.hardware.radio.TunerAdapter;

     label1:
        $r2 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        z0 = interfaceinvoke $r2.<android.hardware.radio.ITuner: boolean isClosed()>();

     label2:
        $z1 = z0 ^ 1;

        return $z1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isAnalogForced()
    {
        android.hardware.radio.TunerAdapter r0;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.hardware.radio.TunerAdapter;

     label1:
        z0 = virtualinvoke r0.<android.hardware.radio.TunerAdapter: boolean isConfigFlagSet(int)>(2);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public boolean isAntennaConnected()
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.TunerCallbackAdapter $r1;
        boolean $z0;

        r0 := @this: android.hardware.radio.TunerAdapter;

        $r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.TunerCallbackAdapter mCallback>;

        $z0 = virtualinvoke $r1.<android.hardware.radio.TunerCallbackAdapter: boolean isAntennaConnected()>();

        return $z0;
    }

    public boolean isConfigFlagSet(int)
    {
        android.hardware.radio.TunerAdapter r0;
        int i0;
        boolean z0;
        android.hardware.radio.ITuner $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.hardware.radio.TunerAdapter;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        z0 = interfaceinvoke $r2.<android.hardware.radio.ITuner: boolean isConfigFlagSet(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isConfigFlagSupported(int)
    {
        android.hardware.radio.TunerAdapter r0;
        int i0;
        boolean z0;
        android.hardware.radio.ITuner $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.hardware.radio.TunerAdapter;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        z0 = interfaceinvoke $r2.<android.hardware.radio.ITuner: boolean isConfigFlagSupported(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void lambda$getDynamicProgramList$1$TunerAdapter()
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.ITuner $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.hardware.radio.TunerAdapter;

     label1:
        $r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        interfaceinvoke $r1.<android.hardware.radio.ITuner: void stopProgramListUpdates()>();

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "Couldn\'t stop program list updates", $r3);

        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int scan(int, boolean)
    {
        android.hardware.radio.TunerAdapter r0;
        int i0;
        boolean z0, z1;
        java.lang.Throwable $r1;
        android.os.RemoteException $r2;
        android.hardware.radio.ITuner r3;

        r0 := @this: android.hardware.radio.TunerAdapter;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        r3 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

     label2:
        z1 = 1;

        if i0 != 1 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        interfaceinvoke r3.<android.hardware.radio.ITuner: void scan(boolean,boolean)>(z1, z0);

     label5:
        return 0;

     label6:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "service died", $r2);

        return -32;

     label7:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "Can\'t scan", $r1);

        return -38;

        catch java.lang.IllegalStateException from label1 to label2 with label7;
        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.IllegalStateException from label4 to label5 with label7;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void setAnalogForced(boolean)
    {
        android.hardware.radio.TunerAdapter r0;
        boolean z0;
        java.lang.Throwable $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.hardware.radio.TunerAdapter;

        z0 := @parameter0: boolean;

     label1:
        virtualinvoke r0.<android.hardware.radio.TunerAdapter: void setConfigFlag(int,boolean)>(2, z0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public void setConfigFlag(int, boolean)
    {
        android.hardware.radio.TunerAdapter r0;
        int i0;
        boolean z0;
        android.hardware.radio.ITuner $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.hardware.radio.TunerAdapter;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r2 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        interfaceinvoke $r2.<android.hardware.radio.ITuner: void setConfigFlag(int,boolean)>(i0, z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int setConfiguration(android.hardware.radio.RadioManager$BandConfig)
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.ITuner $r1;
        int $i0;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        android.hardware.radio.RadioManager$BandConfig r4;

        r0 := @this: android.hardware.radio.TunerAdapter;

        r4 := @parameter0: android.hardware.radio.RadioManager$BandConfig;

        if r4 != null goto label1;

        return -22;

     label1:
        $r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        interfaceinvoke $r1.<android.hardware.radio.ITuner: void setConfiguration(android.hardware.radio.RadioManager$BandConfig)>(r4);

        $i0 = virtualinvoke r4.<android.hardware.radio.RadioManager$BandConfig: int getType()>();

        r0.<android.hardware.radio.TunerAdapter: int mBand> = $i0;

     label2:
        return 0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "service died", $r3);

        return -32;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "Can\'t set configuration", $r2);

        return -22;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int setMute(boolean)
    {
        android.hardware.radio.TunerAdapter r0;
        boolean z0;
        android.hardware.radio.ITuner $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.hardware.radio.TunerAdapter;

        z0 := @parameter0: boolean;

     label1:
        $r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        interfaceinvoke $r1.<android.hardware.radio.ITuner: void setMuted(boolean)>(z0);

     label2:
        return 0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "service died", $r2);

        return -32;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "Can\'t set muted", $r3);

        return -2147483648;

        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.Map setParameters(java.util.Map)
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.ITuner r1;
        java.util.Map $r3, r6, r7;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.hardware.radio.TunerAdapter;

        r6 := @parameter0: java.util.Map;

     label1:
        r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r6);

        $r3 = (java.util.Map) r6;

        r7 = interfaceinvoke r1.<android.hardware.radio.ITuner: java.util.Map setParameters(java.util.Map)>($r3);

     label2:
        return r7;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r4);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean startBackgroundScan()
    {
        android.hardware.radio.TunerAdapter r0;
        boolean z0;
        android.hardware.radio.ITuner $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.hardware.radio.TunerAdapter;

     label1:
        $r2 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        z0 = interfaceinvoke $r2.<android.hardware.radio.ITuner: boolean startBackgroundScan()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int step(int, boolean)
    {
        android.hardware.radio.TunerAdapter r0;
        int i0;
        boolean z0, z1;
        java.lang.Throwable $r1;
        android.os.RemoteException $r2;
        android.hardware.radio.ITuner r3;

        r0 := @this: android.hardware.radio.TunerAdapter;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        r3 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

     label2:
        z1 = 1;

        if i0 != 1 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        interfaceinvoke r3.<android.hardware.radio.ITuner: void step(boolean,boolean)>(z1, z0);

     label5:
        return 0;

     label6:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "service died", $r2);

        return -32;

     label7:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "Can\'t step", $r1);

        return -38;

        catch java.lang.IllegalStateException from label1 to label2 with label7;
        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.IllegalStateException from label4 to label5 with label7;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public int tune(int, int)
    {
        android.hardware.radio.TunerAdapter r0;
        int i0, i1, $i2;
        android.hardware.radio.ITuner $r1;
        android.hardware.radio.ProgramSelector $r2;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4, $r5;

        r0 := @this: android.hardware.radio.TunerAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        $i2 = r0.<android.hardware.radio.TunerAdapter: int mBand>;

        $r2 = staticinvoke <android.hardware.radio.ProgramSelector: android.hardware.radio.ProgramSelector createAmFmSelector(int,int,int)>($i2, i0, i1);

        interfaceinvoke $r1.<android.hardware.radio.ITuner: void tune(android.hardware.radio.ProgramSelector)>($r2);

     label2:
        return 0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "service died", $r3);

        return -32;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "Can\'t tune", $r4);

        return -22;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BroadcastRadio.TunerAdapter", "Can\'t tune", $r5);

        return -38;

        catch java.lang.IllegalStateException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void tune(android.hardware.radio.ProgramSelector)
    {
        android.hardware.radio.TunerAdapter r0;
        android.hardware.radio.ITuner $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.hardware.radio.ProgramSelector r4;

        r0 := @this: android.hardware.radio.TunerAdapter;

        r4 := @parameter0: android.hardware.radio.ProgramSelector;

     label1:
        $r1 = r0.<android.hardware.radio.TunerAdapter: android.hardware.radio.ITuner mTuner>;

        interfaceinvoke $r1.<android.hardware.radio.ITuner: void tune(android.hardware.radio.ProgramSelector)>(r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("service died", $r2);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.hardware.radio.TunerAdapter: java.lang.String TAG> = "BroadcastRadio.TunerAdapter";

        return;
    }
}
