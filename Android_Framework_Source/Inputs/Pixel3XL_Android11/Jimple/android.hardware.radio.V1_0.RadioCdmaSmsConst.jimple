public final class android.hardware.radio.V1_0.RadioCdmaSmsConst extends java.lang.Object
{
    public static final int ADDRESS_MAX;
    public static final int BEARER_DATA_MAX;
    public static final int IP_ADDRESS_SIZE;
    public static final int MAX_UD_HEADERS;
    public static final int SUBADDRESS_MAX;
    public static final int UDH_ANIM_NUM_BITMAPS;
    public static final int UDH_EO_DATA_SEGMENT_MAX;
    public static final int UDH_LARGE_BITMAP_SIZE;
    public static final int UDH_LARGE_PIC_SIZE;
    public static final int UDH_MAX_SND_SIZE;
    public static final int UDH_OTHER_SIZE;
    public static final int UDH_SMALL_BITMAP_SIZE;
    public static final int UDH_SMALL_PIC_SIZE;
    public static final int UDH_VAR_PIC_SIZE;
    public static final int USER_DATA_MAX;

    public void <init>()
    {
        android.hardware.radio.V1_0.RadioCdmaSmsConst r0;

        r0 := @this: android.hardware.radio.V1_0.RadioCdmaSmsConst;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.String dumpBitfield(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.util.ArrayList $r2;
        java.lang.String $r3, $r6, $r8;
        java.lang.StringBuilder $r4;
        short s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31;

        i0 := @parameter0: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        s17 = 0;

        $i1 = i0 & 36;

        if $i1 != 36 goto label01;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("ADDRESS_MAX");

        s17 = 0 | 36;

     label01:
        s18 = s17;

        $i2 = i0 & 36;

        if $i2 != 36 goto label02;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("SUBADDRESS_MAX");

        s18 = s17 | 36;

     label02:
        s19 = s18;

        $i3 = i0 & 255;

        if $i3 != 255 goto label03;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("BEARER_DATA_MAX");

        s19 = s18 | 255;

     label03:
        s20 = s19;

        $i4 = i0 & 128;

        if $i4 != 128 goto label04;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("UDH_MAX_SND_SIZE");

        s20 = s19 | 128;

     label04:
        s21 = s20;

        $i5 = i0 & 131;

        if $i5 != 131 goto label05;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("UDH_EO_DATA_SEGMENT_MAX");

        s21 = s20 | 131;

     label05:
        s22 = s21;

        $i6 = i0 & 7;

        if $i6 != 7 goto label06;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("MAX_UD_HEADERS");

        s22 = s21 | 7;

     label06:
        s23 = s22;

        $i7 = i0 & 229;

        if $i7 != 229 goto label07;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("USER_DATA_MAX");

        s23 = s22 | 229;

     label07:
        s24 = s23;

        $i8 = i0 & 128;

        if $i8 != 128 goto label08;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("UDH_LARGE_PIC_SIZE");

        s24 = s23 | 128;

     label08:
        s25 = s24;

        $i9 = i0 & 32;

        if $i9 != 32 goto label09;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("UDH_SMALL_PIC_SIZE");

        s25 = s24 | 32;

     label09:
        s26 = s25;

        $i10 = i0 & 134;

        if $i10 != 134 goto label10;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("UDH_VAR_PIC_SIZE");

        s26 = s25 | 134;

     label10:
        s27 = s26;

        $i11 = i0 & 4;

        if $i11 != 4 goto label11;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("UDH_ANIM_NUM_BITMAPS");

        s27 = s26 | 4;

     label11:
        s28 = s27;

        $i12 = i0 & 32;

        if $i12 != 32 goto label12;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("UDH_LARGE_BITMAP_SIZE");

        s28 = s27 | 32;

     label12:
        s29 = s28;

        $i13 = i0 & 8;

        if $i13 != 8 goto label13;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("UDH_SMALL_BITMAP_SIZE");

        s29 = s28 | 8;

     label13:
        s30 = s29;

        $i14 = i0 & 226;

        if $i14 != 226 goto label14;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("UDH_OTHER_SIZE");

        s30 = s29 | 226;

     label14:
        s31 = s30;

        $i15 = i0 & 4;

        if $i15 != 4 goto label15;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("IP_ADDRESS_SIZE");

        s31 = s30 | 4;

     label15:
        if i0 == s31 goto label16;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i16 = s31 & i0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i16);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label16:
        $r3 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" | ", $r2);

        return $r3;
    }

    public static final java.lang.String toString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r5;

        i0 := @parameter0: int;

        if i0 != 36 goto label01;

        return "ADDRESS_MAX";

     label01:
        if i0 != 36 goto label02;

        return "SUBADDRESS_MAX";

     label02:
        if i0 != 255 goto label03;

        return "BEARER_DATA_MAX";

     label03:
        if i0 != 128 goto label04;

        return "UDH_MAX_SND_SIZE";

     label04:
        if i0 != 131 goto label05;

        return "UDH_EO_DATA_SEGMENT_MAX";

     label05:
        if i0 != 7 goto label06;

        return "MAX_UD_HEADERS";

     label06:
        if i0 != 229 goto label07;

        return "USER_DATA_MAX";

     label07:
        if i0 != 128 goto label08;

        return "UDH_LARGE_PIC_SIZE";

     label08:
        if i0 != 32 goto label09;

        return "UDH_SMALL_PIC_SIZE";

     label09:
        if i0 != 134 goto label10;

        return "UDH_VAR_PIC_SIZE";

     label10:
        if i0 != 4 goto label11;

        return "UDH_ANIM_NUM_BITMAPS";

     label11:
        if i0 != 32 goto label12;

        return "UDH_LARGE_BITMAP_SIZE";

     label12:
        if i0 != 8 goto label13;

        return "UDH_SMALL_BITMAP_SIZE";

     label13:
        if i0 != 226 goto label14;

        return "UDH_OTHER_SIZE";

     label14:
        if i0 != 4 goto label15;

        return "IP_ADDRESS_SIZE";

     label15:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int USER_DATA_MAX> = 229;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int UDH_VAR_PIC_SIZE> = 134;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int UDH_SMALL_PIC_SIZE> = 32;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int UDH_SMALL_BITMAP_SIZE> = 8;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int UDH_OTHER_SIZE> = 226;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int UDH_MAX_SND_SIZE> = 128;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int UDH_LARGE_PIC_SIZE> = 128;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int UDH_LARGE_BITMAP_SIZE> = 32;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int UDH_EO_DATA_SEGMENT_MAX> = 131;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int UDH_ANIM_NUM_BITMAPS> = 4;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int SUBADDRESS_MAX> = 36;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int MAX_UD_HEADERS> = 7;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int IP_ADDRESS_SIZE> = 4;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int BEARER_DATA_MAX> = 255;

        <android.hardware.radio.V1_0.RadioCdmaSmsConst: int ADDRESS_MAX> = 36;

        return;
    }
}
