public final class android.hardware.radio.V1_0.RadioConst extends java.lang.Object
{
    public static final int CARD_MAX_APPS;
    public static final int CDMA_ALPHA_INFO_BUFFER_LENGTH;
    public static final int CDMA_MAX_NUMBER_OF_INFO_RECS;
    public static final int CDMA_NUMBER_INFO_BUFFER_LENGTH;
    public static final int MAX_CLIENT_ID_LENGTH;
    public static final int MAX_DEBUG_SOCKET_NAME_LENGTH;
    public static final int MAX_QEMU_PIPE_NAME_LENGTH;
    public static final int MAX_RILDS;
    public static final int MAX_SOCKET_NAME_LENGTH;
    public static final int MAX_UUID_LENGTH;
    public static final int NUM_SERVICE_CLASSES;
    public static final int NUM_TX_POWER_LEVELS;
    public static final int SS_INFO_MAX;

    public void <init>()
    {
        android.hardware.radio.V1_0.RadioConst r0;

        r0 := @this: android.hardware.radio.V1_0.RadioConst;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.String dumpBitfield(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.util.ArrayList $r2;
        java.lang.String $r3, $r6, $r8;
        java.lang.StringBuilder $r4;
        byte b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27;

        i0 := @parameter0: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        b15 = 0;

        $i1 = i0 & 64;

        if $i1 != 64 goto label01;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("CDMA_ALPHA_INFO_BUFFER_LENGTH");

        b15 = 0 | 64;

     label01:
        b16 = b15;

        $i2 = i0 & 81;

        if $i2 != 81 goto label02;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("CDMA_NUMBER_INFO_BUFFER_LENGTH");

        b16 = b15 | 81;

     label02:
        b17 = b16;

        $i3 = i0 & 3;

        if $i3 != 3 goto label03;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("MAX_RILDS");

        b17 = b16 | 3;

     label03:
        b18 = b17;

        $i4 = i0 & 6;

        if $i4 != 6 goto label04;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("MAX_SOCKET_NAME_LENGTH");

        b18 = b17 | 6;

     label04:
        b19 = b18;

        $i5 = i0 & 2;

        if $i5 != 2 goto label05;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("MAX_CLIENT_ID_LENGTH");

        b19 = b18 | 2;

     label05:
        b20 = b19;

        $i6 = i0 & 12;

        if $i6 != 12 goto label06;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("MAX_DEBUG_SOCKET_NAME_LENGTH");

        b20 = b19 | 12;

     label06:
        b21 = b20;

        $i7 = i0 & 11;

        if $i7 != 11 goto label07;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("MAX_QEMU_PIPE_NAME_LENGTH");

        b21 = b20 | 11;

     label07:
        b22 = b21;

        $i8 = i0 & 64;

        if $i8 != 64 goto label08;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("MAX_UUID_LENGTH");

        b22 = b21 | 64;

     label08:
        b23 = b22;

        $i9 = i0 & 8;

        if $i9 != 8 goto label09;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("CARD_MAX_APPS");

        b23 = b22 | 8;

     label09:
        b24 = b23;

        $i10 = i0 & 10;

        if $i10 != 10 goto label10;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("CDMA_MAX_NUMBER_OF_INFO_RECS");

        b24 = b23 | 10;

     label10:
        b25 = b24;

        $i11 = i0 & 4;

        if $i11 != 4 goto label11;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("SS_INFO_MAX");

        b25 = b24 | 4;

     label11:
        b26 = b25;

        $i12 = i0 & 7;

        if $i12 != 7 goto label12;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("NUM_SERVICE_CLASSES");

        b26 = b25 | 7;

     label12:
        b27 = b26;

        $i13 = i0 & 5;

        if $i13 != 5 goto label13;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>("NUM_TX_POWER_LEVELS");

        b27 = b26 | 5;

     label13:
        if i0 == b27 goto label14;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i14 = b27 & i0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i14);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label14:
        $r3 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" | ", $r2);

        return $r3;
    }

    public static final java.lang.String toString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r5;

        i0 := @parameter0: int;

        if i0 != 64 goto label01;

        return "CDMA_ALPHA_INFO_BUFFER_LENGTH";

     label01:
        if i0 != 81 goto label02;

        return "CDMA_NUMBER_INFO_BUFFER_LENGTH";

     label02:
        if i0 != 3 goto label03;

        return "MAX_RILDS";

     label03:
        if i0 != 6 goto label04;

        return "MAX_SOCKET_NAME_LENGTH";

     label04:
        if i0 != 2 goto label05;

        return "MAX_CLIENT_ID_LENGTH";

     label05:
        if i0 != 12 goto label06;

        return "MAX_DEBUG_SOCKET_NAME_LENGTH";

     label06:
        if i0 != 11 goto label07;

        return "MAX_QEMU_PIPE_NAME_LENGTH";

     label07:
        if i0 != 64 goto label08;

        return "MAX_UUID_LENGTH";

     label08:
        if i0 != 8 goto label09;

        return "CARD_MAX_APPS";

     label09:
        if i0 != 10 goto label10;

        return "CDMA_MAX_NUMBER_OF_INFO_RECS";

     label10:
        if i0 != 4 goto label11;

        return "SS_INFO_MAX";

     label11:
        if i0 != 7 goto label12;

        return "NUM_SERVICE_CLASSES";

     label12:
        if i0 != 5 goto label13;

        return "NUM_TX_POWER_LEVELS";

     label13:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <android.hardware.radio.V1_0.RadioConst: int SS_INFO_MAX> = 4;

        <android.hardware.radio.V1_0.RadioConst: int NUM_TX_POWER_LEVELS> = 5;

        <android.hardware.radio.V1_0.RadioConst: int NUM_SERVICE_CLASSES> = 7;

        <android.hardware.radio.V1_0.RadioConst: int MAX_UUID_LENGTH> = 64;

        <android.hardware.radio.V1_0.RadioConst: int MAX_SOCKET_NAME_LENGTH> = 6;

        <android.hardware.radio.V1_0.RadioConst: int MAX_RILDS> = 3;

        <android.hardware.radio.V1_0.RadioConst: int MAX_QEMU_PIPE_NAME_LENGTH> = 11;

        <android.hardware.radio.V1_0.RadioConst: int MAX_DEBUG_SOCKET_NAME_LENGTH> = 12;

        <android.hardware.radio.V1_0.RadioConst: int MAX_CLIENT_ID_LENGTH> = 2;

        <android.hardware.radio.V1_0.RadioConst: int CDMA_NUMBER_INFO_BUFFER_LENGTH> = 81;

        <android.hardware.radio.V1_0.RadioConst: int CDMA_MAX_NUMBER_OF_INFO_RECS> = 10;

        <android.hardware.radio.V1_0.RadioConst: int CDMA_ALPHA_INFO_BUFFER_LENGTH> = 64;

        <android.hardware.radio.V1_0.RadioConst: int CARD_MAX_APPS> = 8;

        return;
    }
}
