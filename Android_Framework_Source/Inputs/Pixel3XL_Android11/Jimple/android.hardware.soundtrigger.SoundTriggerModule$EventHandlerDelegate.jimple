class android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate extends android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub implements android.os.IBinder$DeathRecipient
{
    private final android.os.Handler mHandler;
    final android.hardware.soundtrigger.SoundTriggerModule this$0;

    void <init>(android.hardware.soundtrigger.SoundTriggerModule, android.hardware.soundtrigger.SoundTrigger$StatusListener, android.os.Looper)
    {
        android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate r0;
        android.hardware.soundtrigger.SoundTriggerModule r1;
        android.hardware.soundtrigger.SoundTrigger$StatusListener r2;
        android.os.Looper r3;
        android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate$1 $r4;

        r0 := @this: android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate;

        r1 := @parameter0: android.hardware.soundtrigger.SoundTriggerModule;

        r2 := @parameter1: android.hardware.soundtrigger.SoundTrigger$StatusListener;

        r3 := @parameter2: android.os.Looper;

        r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.hardware.soundtrigger.SoundTriggerModule this$0> = r1;

        specialinvoke r0.<android.media.soundtrigger_middleware.ISoundTriggerCallback$Stub: void <init>()>();

        $r4 = new android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate$1;

        specialinvoke $r4.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate$1: void <init>(android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate,android.os.Looper,android.hardware.soundtrigger.SoundTriggerModule,android.hardware.soundtrigger.SoundTrigger$StatusListener)>(r0, r3, r1, r2);

        r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler> = $r4;

        return;
    }

    public void binderDied()
    {
        android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate r0;
        android.os.Handler $r1, $r2;
        java.lang.Throwable $r3;
        android.os.Message r4;

        r0 := @this: android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate;

        entermonitor r0;

     label1:
        $r1 = r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler>;

        r4 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        $r2 = r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onModuleDied()
    {
        android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate r0;
        android.os.Handler $r1, $r2;
        java.lang.Throwable $r3;
        android.os.Message r4;

        r0 := @this: android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate;

        entermonitor r0;

     label1:
        $r1 = r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler>;

        r4 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        $r2 = r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onPhraseRecognition(int, android.media.soundtrigger_middleware.PhraseRecognitionEvent) throws android.os.RemoteException
    {
        android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate r0;
        int i0;
        android.os.Handler $r1, $r3;
        android.hardware.soundtrigger.SoundTrigger$RecognitionEvent $r2;
        java.lang.Throwable $r4;
        android.media.soundtrigger_middleware.PhraseRecognitionEvent r5;
        android.os.Message r6;

        r0 := @this: android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate;

        i0 := @parameter0: int;

        r5 := @parameter1: android.media.soundtrigger_middleware.PhraseRecognitionEvent;

        entermonitor r0;

     label1:
        $r1 = r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler>;

        $r2 = staticinvoke <android.hardware.soundtrigger.ConversionUtil: android.hardware.soundtrigger.SoundTrigger$RecognitionEvent aidl2apiPhraseRecognitionEvent(int,android.media.soundtrigger_middleware.PhraseRecognitionEvent)>(i0, r5);

        r6 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r2);

        $r3 = r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>(r6);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onRecognition(int, android.media.soundtrigger_middleware.RecognitionEvent) throws android.os.RemoteException
    {
        android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate r0;
        int i0;
        android.os.Handler $r1, $r3;
        android.hardware.soundtrigger.SoundTrigger$RecognitionEvent $r2;
        java.lang.Throwable $r4;
        android.media.soundtrigger_middleware.RecognitionEvent r5;
        android.os.Message r6;

        r0 := @this: android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate;

        i0 := @parameter0: int;

        r5 := @parameter1: android.media.soundtrigger_middleware.RecognitionEvent;

        entermonitor r0;

     label1:
        $r1 = r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler>;

        $r2 = staticinvoke <android.hardware.soundtrigger.ConversionUtil: android.hardware.soundtrigger.SoundTrigger$RecognitionEvent aidl2apiRecognitionEvent(int,android.media.soundtrigger_middleware.RecognitionEvent)>(i0, r5);

        r6 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r2);

        $r3 = r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>(r6);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onRecognitionAvailabilityChange(boolean) throws android.os.RemoteException
    {
        android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate r0;
        boolean z0;
        java.lang.Integer $r1;
        android.os.Handler $r2, r4;
        java.lang.Throwable $r3;
        byte b0;
        android.os.Message r5;

        r0 := @this: android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        r4 = r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler>;

     label2:
        if z0 == 0 goto label3;

        b0 = 0;

        goto label4;

     label3:
        b0 = 1;

     label4:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b0);

        r5 = virtualinvoke r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r1);

        $r2 = r0.<android.hardware.soundtrigger.SoundTriggerModule$EventHandlerDelegate: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>(r5);

     label5:
        exitmonitor r0;

        return;

     label6:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
