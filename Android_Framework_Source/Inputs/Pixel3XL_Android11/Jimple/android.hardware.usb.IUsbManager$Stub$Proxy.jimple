class android.hardware.usb.IUsbManager$Stub$Proxy extends java.lang.Object implements android.hardware.usb.IUsbManager
{
    public static android.hardware.usb.IUsbManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addAccessoryPackagesToPreferenceDenied(android.hardware.usb.UsbAccessory, java.lang.String[], android.os.UserHandle) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String[] r1;
        android.os.UserHandle r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.hardware.usb.IUsbManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.usb.UsbAccessory r9;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r9 := @parameter0: android.hardware.usb.UsbAccessory;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: android.os.UserHandle;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.hardware.usb.IUsbManager: void addAccessoryPackagesToPreferenceDenied(android.hardware.usb.UsbAccessory,java.lang.String[],android.os.UserHandle)>(r9, r1, r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void addDevicePackagesToPreferenceDenied(android.hardware.usb.UsbDevice, java.lang.String[], android.os.UserHandle) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String[] r1;
        android.os.UserHandle r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.hardware.usb.IUsbManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.usb.UsbDevice r9;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r9 := @parameter0: android.hardware.usb.UsbDevice;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: android.os.UserHandle;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.hardware.usb.IUsbManager: void addDevicePackagesToPreferenceDenied(android.hardware.usb.UsbDevice,java.lang.String[],android.os.UserHandle)>(r9, r1, r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        $r1 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void clearDefaults(java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.usb.IUsbManager: void clearDefaults(java.lang.String,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void enableContaminantDetection(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b0;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.usb.IUsbManager: void enableContaminantDetection(java.lang.String,boolean)>(r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public android.os.ParcelFileDescriptor getControlFd(long) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i1;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.usb.IUsbManager $r6, $r7;
        java.lang.Throwable $r8;
        android.os.ParcelFileDescriptor r9, r10;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.usb.IUsbManager: android.os.ParcelFileDescriptor getControlFd(long)>(l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.os.ParcelFileDescriptor) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.hardware.usb.UsbAccessory getCurrentAccessory() throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.usb.IUsbManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.usb.UsbAccessory r9, r10;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.hardware.usb.IUsbManager: android.hardware.usb.UsbAccessory getCurrentAccessory()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.hardware.usb.UsbAccessory) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public long getCurrentFunctions() throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.hardware.usb.IUsbManager: long getCurrentFunctions()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void getDeviceList(android.os.Bundle) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.Bundle r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: android.os.Bundle;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.usb.IUsbManager: void getDeviceList(android.os.Bundle)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label4;

        virtualinvoke r7.<android.os.Bundle: void readFromParcel(android.os.Parcel)>(r2);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        return "android.hardware.usb.IUsbManager";
    }

    public android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.usb.IUsbManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.hardware.usb.UsbPortStatus r10, r11;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.usb.IUsbManager: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.hardware.usb.UsbPortStatus: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.hardware.usb.UsbPortStatus) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.util.List getPorts() throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.hardware.usb.IUsbManager: java.util.List getPorts()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.hardware.usb.ParcelableUsbPort: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getScreenUnlockedFunctions() throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.hardware.usb.IUsbManager: long getScreenUnlockedFunctions()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void grantAccessoryPermission(android.hardware.usb.UsbAccessory, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.usb.UsbAccessory r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.usb.UsbAccessory;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.usb.IUsbManager: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void grantDevicePermission(android.hardware.usb.UsbDevice, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.usb.UsbDevice r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.usb.UsbDevice;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.usb.IUsbManager: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        android.hardware.usb.UsbAccessory r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: android.hardware.usb.UsbAccessory;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.hardware.usb.IUsbManager: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public boolean hasDefaults(java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.hardware.usb.IUsbManager: boolean hasDefaults(java.lang.String,int)>(r7, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean hasDevicePermission(android.hardware.usb.UsbDevice, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        int i0;
        android.os.IBinder $r4;
        boolean $z0, z1, z2;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.usb.UsbDevice r8;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r8 := @parameter0: android.hardware.usb.UsbDevice;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        z1 = 1;

        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.hardware.usb.IUsbManager: boolean hasDevicePermission(android.hardware.usb.UsbDevice,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public boolean isFunctionEnabled(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.hardware.usb.IUsbManager: boolean isFunctionEnabled(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.hardware.usb.IUsbManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.usb.UsbAccessory r9;
        android.os.ParcelFileDescriptor r10, r11;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r9 := @parameter0: android.hardware.usb.UsbAccessory;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.hardware.usb.IUsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>(r9);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r4 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.os.ParcelFileDescriptor) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public android.os.ParcelFileDescriptor openDevice(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.hardware.usb.IUsbManager $r7, $r8;
        java.lang.Throwable $r9;
        android.os.ParcelFileDescriptor r11, r12;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<android.hardware.usb.IUsbManager: android.os.ParcelFileDescriptor openDevice(java.lang.String,java.lang.String)>(r10, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r5 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (android.os.ParcelFileDescriptor) $r6;

     label4:
        goto label6;

     label5:
        r12 = null;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public void removeAccessoryPackagesFromPreferenceDenied(android.hardware.usb.UsbAccessory, java.lang.String[], android.os.UserHandle) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String[] r1;
        android.os.UserHandle r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.hardware.usb.IUsbManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.usb.UsbAccessory r9;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r9 := @parameter0: android.hardware.usb.UsbAccessory;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: android.os.UserHandle;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.hardware.usb.IUsbManager: void removeAccessoryPackagesFromPreferenceDenied(android.hardware.usb.UsbAccessory,java.lang.String[],android.os.UserHandle)>(r9, r1, r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void removeDevicePackagesFromPreferenceDenied(android.hardware.usb.UsbDevice, java.lang.String[], android.os.UserHandle) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String[] r1;
        android.os.UserHandle r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.hardware.usb.IUsbManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.usb.UsbDevice r9;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r9 := @parameter0: android.hardware.usb.UsbDevice;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: android.os.UserHandle;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.hardware.usb.IUsbManager: void removeDevicePackagesFromPreferenceDenied(android.hardware.usb.UsbDevice,java.lang.String[],android.os.UserHandle)>(r9, r1, r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void requestAccessoryPermission(android.hardware.usb.UsbAccessory, java.lang.String, android.app.PendingIntent) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1;
        android.app.PendingIntent r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.hardware.usb.IUsbManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.usb.UsbAccessory r9;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r9 := @parameter0: android.hardware.usb.UsbAccessory;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.app.PendingIntent;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.hardware.usb.IUsbManager: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>(r9, r1, r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void requestDevicePermission(android.hardware.usb.UsbDevice, java.lang.String, android.app.PendingIntent) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1;
        android.app.PendingIntent r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.hardware.usb.IUsbManager $r6, $r7;
        java.lang.Throwable $r8;
        android.hardware.usb.UsbDevice r9;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r9 := @parameter0: android.hardware.usb.UsbDevice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.app.PendingIntent;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.hardware.usb.IUsbManager: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>(r9, r1, r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void resetUsbGadget() throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.usb.IUsbManager: void resetUsbGadget()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setAccessoryPackage(android.hardware.usb.UsbAccessory, java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.usb.UsbAccessory r8;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r8 := @parameter0: android.hardware.usb.UsbAccessory;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.usb.IUsbManager: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>(r8, r1, i0);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setAccessoryPersistentPermission(android.hardware.usb.UsbAccessory, int, android.os.UserHandle, boolean) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        int i0;
        android.os.UserHandle r1;
        boolean z0, $z1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.usb.UsbAccessory r8;
        byte b1;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r8 := @parameter0: android.hardware.usb.UsbAccessory;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.UserHandle;

        z0 := @parameter3: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        b1 = 1;

        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        if z0 == 0 goto label12;

        goto label13;

     label12:
        b1 = 0;

     label13:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        if $z1 != 0 goto label15;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label15;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.usb.IUsbManager: void setAccessoryPersistentPermission(android.hardware.usb.UsbAccessory,int,android.os.UserHandle,boolean)>(r8, i0, r1, z0);

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label16:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label17:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public void setCurrentFunction(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b0;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.usb.IUsbManager: void setCurrentFunction(java.lang.String,boolean)>(r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setCurrentFunctions(long) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.usb.IUsbManager: void setCurrentFunctions(long)>(l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setDevicePackage(android.hardware.usb.UsbDevice, java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.usb.UsbDevice r8;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r8 := @parameter0: android.hardware.usb.UsbDevice;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.usb.IUsbManager: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>(r8, r1, i0);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setDevicePersistentPermission(android.hardware.usb.UsbDevice, int, android.os.UserHandle, boolean) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        int i0;
        android.os.UserHandle r1;
        boolean z0, $z1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;
        android.hardware.usb.UsbDevice r8;
        byte b1;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r8 := @parameter0: android.hardware.usb.UsbDevice;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.UserHandle;

        z0 := @parameter3: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        b1 = 1;

        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        if z0 == 0 goto label12;

        goto label13;

     label12:
        b1 = 0;

     label13:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, r3, 0);

        if $z1 != 0 goto label15;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label15;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.usb.IUsbManager: void setDevicePersistentPermission(android.hardware.usb.UsbDevice,int,android.os.UserHandle,boolean)>(r8, i0, r1, z0);

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label16:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label17:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public void setPortRoles(java.lang.String, int, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.usb.IUsbManager: void setPortRoles(java.lang.String,int,int)>(r7, i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setScreenUnlockedFunctions(long) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.hardware.usb.IUsbManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.hardware.usb.IUsbManager: void setScreenUnlockedFunctions(long)>(l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setUsbDeviceConnectionHandler(android.content.ComponentName) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.hardware.usb.IUsbManager $r4, $r5;
        java.lang.Throwable $r6;
        android.content.ComponentName r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r7 := @parameter0: android.content.ComponentName;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.hardware.usb.IUsbManager: void setUsbDeviceConnectionHandler(android.content.ComponentName)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
