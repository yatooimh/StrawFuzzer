public final class android.hardware.usb.ParcelableUsbPort extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final java.lang.String mId;
    private final int mSupportedContaminantProtectionModes;
    private final int mSupportedModes;
    private final boolean mSupportsEnableContaminantPresenceDetection;
    private final boolean mSupportsEnableContaminantPresenceProtection;

    static void <clinit>()
    {
        android.hardware.usb.ParcelableUsbPort$1 $r0;

        $r0 = new android.hardware.usb.ParcelableUsbPort$1;

        specialinvoke $r0.<android.hardware.usb.ParcelableUsbPort$1: void <init>()>();

        <android.hardware.usb.ParcelableUsbPort: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(java.lang.String, int, int, boolean, boolean)
    {
        android.hardware.usb.ParcelableUsbPort r0;
        java.lang.String r1;
        int i0, i1;
        boolean z0, z1;

        r0 := @this: android.hardware.usb.ParcelableUsbPort;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.usb.ParcelableUsbPort: java.lang.String mId> = r1;

        r0.<android.hardware.usb.ParcelableUsbPort: int mSupportedModes> = i0;

        r0.<android.hardware.usb.ParcelableUsbPort: int mSupportedContaminantProtectionModes> = i1;

        r0.<android.hardware.usb.ParcelableUsbPort: boolean mSupportsEnableContaminantPresenceProtection> = z0;

        r0.<android.hardware.usb.ParcelableUsbPort: boolean mSupportsEnableContaminantPresenceDetection> = z1;

        return;
    }

    void <init>(java.lang.String, int, int, boolean, boolean, android.hardware.usb.ParcelableUsbPort$1)
    {
        android.hardware.usb.ParcelableUsbPort r0;
        java.lang.String r1;
        int i0, i1;
        boolean z0, z1;
        android.hardware.usb.ParcelableUsbPort$1 r2;

        r0 := @this: android.hardware.usb.ParcelableUsbPort;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r2 := @parameter5: android.hardware.usb.ParcelableUsbPort$1;

        specialinvoke r0.<android.hardware.usb.ParcelableUsbPort: void <init>(java.lang.String,int,int,boolean,boolean)>(r1, i0, i1, z0, z1);

        return;
    }

    public static android.hardware.usb.ParcelableUsbPort of(android.hardware.usb.UsbPort)
    {
        android.hardware.usb.UsbPort r0;
        android.hardware.usb.ParcelableUsbPort $r1;
        java.lang.String $r2;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @parameter0: android.hardware.usb.UsbPort;

        $r1 = new android.hardware.usb.ParcelableUsbPort;

        $r2 = virtualinvoke r0.<android.hardware.usb.UsbPort: java.lang.String getId()>();

        $i0 = virtualinvoke r0.<android.hardware.usb.UsbPort: int getSupportedModes()>();

        $i1 = virtualinvoke r0.<android.hardware.usb.UsbPort: int getSupportedContaminantProtectionModes()>();

        $z0 = virtualinvoke r0.<android.hardware.usb.UsbPort: boolean supportsEnableContaminantPresenceProtection()>();

        $z1 = virtualinvoke r0.<android.hardware.usb.UsbPort: boolean supportsEnableContaminantPresenceDetection()>();

        specialinvoke $r1.<android.hardware.usb.ParcelableUsbPort: void <init>(java.lang.String,int,int,boolean,boolean)>($r2, $i0, $i1, $z0, $z1);

        return $r1;
    }

    public int describeContents()
    {
        android.hardware.usb.ParcelableUsbPort r0;

        r0 := @this: android.hardware.usb.ParcelableUsbPort;

        return 0;
    }

    public android.hardware.usb.UsbPort getUsbPort(android.hardware.usb.UsbManager)
    {
        android.hardware.usb.ParcelableUsbPort r0;
        android.hardware.usb.UsbManager r1;
        android.hardware.usb.UsbPort $r2;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.String $r3;

        r0 := @this: android.hardware.usb.ParcelableUsbPort;

        r1 := @parameter0: android.hardware.usb.UsbManager;

        $r2 = new android.hardware.usb.UsbPort;

        $r3 = r0.<android.hardware.usb.ParcelableUsbPort: java.lang.String mId>;

        $i1 = r0.<android.hardware.usb.ParcelableUsbPort: int mSupportedModes>;

        $i0 = r0.<android.hardware.usb.ParcelableUsbPort: int mSupportedContaminantProtectionModes>;

        $z1 = r0.<android.hardware.usb.ParcelableUsbPort: boolean mSupportsEnableContaminantPresenceProtection>;

        $z0 = r0.<android.hardware.usb.ParcelableUsbPort: boolean mSupportsEnableContaminantPresenceDetection>;

        specialinvoke $r2.<android.hardware.usb.UsbPort: void <init>(android.hardware.usb.UsbManager,java.lang.String,int,int,boolean,boolean)>(r1, $r3, $i1, $i0, $z1, $z0);

        return $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.hardware.usb.ParcelableUsbPort r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: android.hardware.usb.ParcelableUsbPort;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.hardware.usb.ParcelableUsbPort: java.lang.String mId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = r0.<android.hardware.usb.ParcelableUsbPort: int mSupportedModes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.hardware.usb.ParcelableUsbPort: int mSupportedContaminantProtectionModes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $z0 = r0.<android.hardware.usb.ParcelableUsbPort: boolean mSupportsEnableContaminantPresenceProtection>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        $z1 = r0.<android.hardware.usb.ParcelableUsbPort: boolean mSupportsEnableContaminantPresenceDetection>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z1);

        return;
    }
}
