class android.inputmethodservice.IInputMethodWrapper extends com.android.internal.view.IInputMethod$Stub implements com.android.internal.os.HandlerCaller$Callback
{
    private static final int DO_CHANGE_INPUTMETHOD_SUBTYPE;
    private static final int DO_CREATE_INLINE_SUGGESTIONS_REQUEST;
    private static final int DO_CREATE_SESSION;
    private static final int DO_DUMP;
    private static final int DO_HIDE_SOFT_INPUT;
    private static final int DO_INITIALIZE_INTERNAL;
    private static final int DO_REVOKE_SESSION;
    private static final int DO_SET_INPUT_CONTEXT;
    private static final int DO_SET_SESSION_ENABLED;
    private static final int DO_SHOW_SOFT_INPUT;
    private static final int DO_START_INPUT;
    private static final int DO_UNSET_INPUT_CONTEXT;
    private static final java.lang.String TAG;
    final com.android.internal.os.HandlerCaller mCaller;
    com.android.internal.inputmethod.CancellationGroup mCancellationGroup;
    final android.content.Context mContext;
    final java.lang.ref.WeakReference mInputMethod;
    final java.lang.ref.WeakReference mTarget;
    final int mTargetSdkVersion;

    public void <init>(android.inputmethodservice.AbstractInputMethodService, android.view.inputmethod.InputMethod)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.inputmethodservice.AbstractInputMethodService r1;
        android.view.inputmethod.InputMethod r2;
        android.content.Context r3;
        java.lang.ref.WeakReference $r4, $r6;
        com.android.internal.os.HandlerCaller $r5;
        android.content.pm.ApplicationInfo $r7;
        int $i0;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.inputmethodservice.AbstractInputMethodService;

        r2 := @parameter1: android.view.inputmethod.InputMethod;

        specialinvoke r0.<com.android.internal.view.IInputMethod$Stub: void <init>()>();

        r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup> = null;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget> = $r4;

        r3 = virtualinvoke r1.<android.inputmethodservice.AbstractInputMethodService: android.content.Context getApplicationContext()>();

        r0.<android.inputmethodservice.IInputMethodWrapper: android.content.Context mContext> = r3;

        $r5 = new com.android.internal.os.HandlerCaller;

        specialinvoke $r5.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r3, null, r0, 1);

        r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller> = $r5;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mInputMethod> = $r6;

        $r7 = virtualinvoke r1.<android.inputmethodservice.AbstractInputMethodService: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        r0.<android.inputmethodservice.IInputMethodWrapper: int mTargetSdkVersion> = $i0;

        return;
    }

    public void bindInput(android.view.inputmethod.InputBinding)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.os.HandlerCaller r1;
        com.android.internal.inputmethod.CancellationGroup $r2, $r3, $r9;
        android.view.inputmethod.InputBinding $r4, r11;
        com.android.internal.view.InputConnectionWrapper $r5;
        java.lang.ref.WeakReference $r6;
        android.os.IBinder $r7;
        com.android.internal.view.IInputContext $r8;
        android.os.Message $r10;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r11 := @parameter0: android.view.inputmethod.InputBinding;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        if $r2 == null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InputMethodWrapper", "bindInput must be paired with unbindInput.");

     label1:
        $r3 = new com.android.internal.inputmethod.CancellationGroup;

        specialinvoke $r3.<com.android.internal.inputmethod.CancellationGroup: void <init>()>();

        r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup> = $r3;

        $r4 = new android.view.inputmethod.InputBinding;

        $r5 = new com.android.internal.view.InputConnectionWrapper;

        $r6 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget>;

        $r7 = virtualinvoke r11.<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>();

        $r8 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext asInterface(android.os.IBinder)>($r7);

        $r9 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        specialinvoke $r5.<com.android.internal.view.InputConnectionWrapper: void <init>(java.lang.ref.WeakReference,com.android.internal.view.IInputContext,int,com.android.internal.inputmethod.CancellationGroup)>($r6, $r8, 0, $r9);

        specialinvoke $r4.<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>($r5, r11);

        r1 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r10 = virtualinvoke r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(20, $r4);

        virtualinvoke r1.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r10);

        return;
    }

    public void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.view.inputmethod.InputMethodSubtype r1;
        com.android.internal.os.HandlerCaller r2;
        android.os.Message $r3;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(80, r1);

        virtualinvoke r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r3);

        return;
    }

    public void createSession(android.view.InputChannel, com.android.internal.view.IInputSessionCallback)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.view.InputChannel r1;
        com.android.internal.view.IInputSessionCallback r2;
        com.android.internal.os.HandlerCaller r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.view.InputChannel;

        r2 := @parameter1: com.android.internal.view.IInputSessionCallback;

        r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(40, r1, r2);

        virtualinvoke r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        com.android.internal.os.HandlerCaller r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        int $i0, $i1, $i2;
        java.util.concurrent.CountDownLatch $r6;
        android.os.Message $r7;
        java.util.concurrent.TimeUnit $r8;
        boolean $z0;
        java.lang.StringBuilder $r9;
        java.lang.String $r14;
        java.lang.Throwable $r15;
        java.io.FileDescriptor r16;
        android.inputmethodservice.AbstractInputMethodService r17;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r16 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r17 = (android.inputmethodservice.AbstractInputMethodService) $r5;

        if r17 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r17.<android.inputmethodservice.AbstractInputMethodService: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump InputMethodManager from from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        return;

     label2:
        $r6 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r6.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r7 = virtualinvoke r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOOO(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(1, r16, r1, r2, $r6);

        virtualinvoke r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r7);

     label3:
        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z0 = virtualinvoke $r6.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(5L, $r8);

        if $z0 != 0 goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Timeout waiting for dump");

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Interrupted waiting for dump");

     label6:
        return;

        catch java.lang.InterruptedException from label3 to label4 with label5;
    }

    public void executeMessage(android.os.Message)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputContext r1;
        android.view.inputmethod.EditorInfo r2;
        com.android.internal.os.SomeArgs r3, r79, r80, r81, r83, r84, r88, r91;
        java.lang.ref.WeakReference $r4, $r40, $r48;
        java.lang.Object $r5, $r6, $r7, $r8, $r11, $r13, $r14, $r15, $r18, $r19, $r20, $r23, $r25, $r26, $r28, $r29, $r33, $r34, $r35, $r36, $r37, $r38, $r41, $r43, $r44, $r45, $r49, $r50, $r51, $r52, $r53, $r57, $r68, r95;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12;
        com.android.internal.view.IInlineSuggestionsRequestCallback $r9;
        com.android.internal.view.InlineSuggestionsRequestInfo $r10;
        android.view.inputmethod.InputMethodSubtype $r12;
        android.os.IBinder $r16, $r21, $r47, r85;
        android.os.ResultReceiver $r17, $r22;
        android.view.inputmethod.InputMethodSession $r24, r82;
        android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper $r27;
        com.android.internal.view.IInputSessionCallback $r30;
        android.view.InputChannel $r31;
        android.content.Context $r32;
        com.android.internal.view.InputConnectionWrapper $r39, r87;
        android.view.inputmethod.InputBinding $r42;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations $r46;
        java.lang.String[] $r54;
        java.io.PrintWriter $r55, r93;
        java.io.FileDescriptor $r56;
        java.util.concurrent.CountDownLatch $r58;
        java.lang.StringBuilder $r59, $r63, $r69;
        java.lang.String $r62, $r66, $r72;
        java.lang.RuntimeException $r67;
        java.lang.Throwable $r73, $r74;
        android.os.Message r75;
        android.view.inputmethod.InputMethod r76;
        boolean z0, z1, z2;
        com.android.internal.inputmethod.CancellationGroup r86;
        android.inputmethodservice.AbstractInputMethodService r90;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r75 := @parameter0: android.os.Message;

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mInputMethod>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r76 = (android.view.inputmethod.InputMethod) $r5;

        z0 = 1;

        if r76 != null goto label01;

        $i11 = r75.<android.os.Message: int what>;

        if $i11 == 1 goto label01;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method reference was null, ignoring message: ");

        $i12 = r75.<android.os.Message: int what>;

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r66);

        return;

     label01:
        $i0 = r75.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label25;
            case 10: goto label21;
            case 20: goto label20;
            case 30: goto label19;
            case 32: goto label12;
            case 40: goto label11;
            case 45: goto label08;
            case 50: goto label07;
            case 60: goto label06;
            case 70: goto label05;
            case 80: goto label04;
            case 90: goto label03;
            default: goto label02;
        };

     label02:
        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message code: ");

        $i9 = r75.<android.os.Message: int what>;

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r62);

        return;

     label03:
        $r6 = r75.<android.os.Message: java.lang.Object obj>;

        r79 = (com.android.internal.os.SomeArgs) $r6;

        $r7 = r79.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r10 = (com.android.internal.view.InlineSuggestionsRequestInfo) $r7;

        $r8 = r79.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r9 = (com.android.internal.view.IInlineSuggestionsRequestCallback) $r8;

        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void onCreateInlineSuggestionsRequest(com.android.internal.view.InlineSuggestionsRequestInfo,com.android.internal.view.IInlineSuggestionsRequestCallback)>($r10, $r9);

        virtualinvoke r79.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label04:
        $r11 = r75.<android.os.Message: java.lang.Object obj>;

        $r12 = (android.view.inputmethod.InputMethodSubtype) $r11;

        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>($r12);

        return;

     label05:
        $r13 = r75.<android.os.Message: java.lang.Object obj>;

        r80 = (com.android.internal.os.SomeArgs) $r13;

        $i1 = r75.<android.os.Message: int arg1>;

        $r14 = r80.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r17 = (android.os.ResultReceiver) $r14;

        $r15 = r80.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r16 = (android.os.IBinder) $r15;

        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void hideSoftInputWithToken(int,android.os.ResultReceiver,android.os.IBinder)>($i1, $r17, $r16);

        virtualinvoke r80.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label06:
        $r18 = r75.<android.os.Message: java.lang.Object obj>;

        r81 = (com.android.internal.os.SomeArgs) $r18;

        $i2 = r75.<android.os.Message: int arg1>;

        $r19 = r81.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r22 = (android.os.ResultReceiver) $r19;

        $r20 = r81.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r21 = (android.os.IBinder) $r20;

        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void showSoftInputWithToken(int,android.os.ResultReceiver,android.os.IBinder)>($i2, $r22, $r21);

        virtualinvoke r81.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label07:
        $r23 = r75.<android.os.Message: java.lang.Object obj>;

        $r24 = (android.view.inputmethod.InputMethodSession) $r23;

        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void revokeSession(android.view.inputmethod.InputMethodSession)>($r24);

        return;

     label08:
        $r25 = r75.<android.os.Message: java.lang.Object obj>;

        r82 = (android.view.inputmethod.InputMethodSession) $r25;

        $i3 = r75.<android.os.Message: int arg1>;

        if $i3 == 0 goto label09;

        goto label10;

     label09:
        z0 = 0;

     label10:
        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>(r82, z0);

        return;

     label11:
        $r26 = r75.<android.os.Message: java.lang.Object obj>;

        r83 = (com.android.internal.os.SomeArgs) $r26;

        $r27 = new android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper;

        $r32 = r0.<android.inputmethodservice.IInputMethodWrapper: android.content.Context mContext>;

        $r28 = r83.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r31 = (android.view.InputChannel) $r28;

        $r29 = r83.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r30 = (com.android.internal.view.IInputSessionCallback) $r29;

        specialinvoke $r27.<android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper: void <init>(android.content.Context,android.view.InputChannel,com.android.internal.view.IInputSessionCallback)>($r32, $r31, $r30);

        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void createSession(android.view.inputmethod.InputMethod$SessionCallback)>($r27);

        virtualinvoke r83.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label12:
        $r33 = r75.<android.os.Message: java.lang.Object obj>;

        r84 = (com.android.internal.os.SomeArgs) $r33;

        $r34 = r84.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r85 = (android.os.IBinder) $r34;

        $r35 = r84.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r1 = (com.android.internal.view.IInputContext) $r35;

        $r36 = r84.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r2 = (android.view.inputmethod.EditorInfo) $r36;

        $r37 = r84.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r86 = (com.android.internal.inputmethod.CancellationGroup) $r37;

        $r38 = r84.<com.android.internal.os.SomeArgs: java.lang.Object arg5>;

        r3 = (com.android.internal.os.SomeArgs) $r38;

        if r1 == null goto label13;

        $r39 = new com.android.internal.view.InputConnectionWrapper;

        $r40 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget>;

        $i7 = r3.<com.android.internal.os.SomeArgs: int argi3>;

        specialinvoke $r39.<com.android.internal.view.InputConnectionWrapper: void <init>(java.lang.ref.WeakReference,com.android.internal.view.IInputContext,int,com.android.internal.inputmethod.CancellationGroup)>($r40, r1, $i7, r86);

        r87 = $r39;

        goto label14;

     label13:
        r87 = null;

     label14:
        $i4 = r0.<android.inputmethodservice.IInputMethodWrapper: int mTargetSdkVersion>;

        virtualinvoke r2.<android.view.inputmethod.EditorInfo: void makeCompatible(int)>($i4);

        $i5 = r3.<com.android.internal.os.SomeArgs: int argi1>;

        if $i5 != 1 goto label15;

        z1 = 1;

        goto label16;

     label15:
        z1 = 0;

     label16:
        $i6 = r3.<com.android.internal.os.SomeArgs: int argi2>;

        if $i6 != 1 goto label17;

        z2 = 1;

        goto label18;

     label17:
        z2 = 0;

     label18:
        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void dispatchStartInputWithToken(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,boolean,android.os.IBinder,boolean)>(r87, r2, z1, r85, z2);

        virtualinvoke r84.<com.android.internal.os.SomeArgs: void recycle()>();

        virtualinvoke r3.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label19:
        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void unbindInput()>();

        return;

     label20:
        $r41 = r75.<android.os.Message: java.lang.Object obj>;

        $r42 = (android.view.inputmethod.InputBinding) $r41;

        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void bindInput(android.view.inputmethod.InputBinding)>($r42);

        return;

     label21:
        $r43 = r75.<android.os.Message: java.lang.Object obj>;

        r88 = (com.android.internal.os.SomeArgs) $r43;

     label22:
        $r44 = r88.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r47 = (android.os.IBinder) $r44;

        $i8 = r75.<android.os.Message: int arg1>;

        $r45 = r88.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r46 = (com.android.internal.inputmethod.IInputMethodPrivilegedOperations) $r45;

        interfaceinvoke r76.<android.view.inputmethod.InputMethod: void initializeInternal(android.os.IBinder,int,com.android.internal.inputmethod.IInputMethodPrivilegedOperations)>($r47, $i8, $r46);

     label23:
        virtualinvoke r88.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label24:
        $r73 := @caughtexception;

        virtualinvoke r88.<com.android.internal.os.SomeArgs: void recycle()>();

        throw $r73;

     label25:
        $r48 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget>;

        $r49 = virtualinvoke $r48.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r90 = (android.inputmethodservice.AbstractInputMethodService) $r49;

        if r90 != null goto label26;

        return;

     label26:
        $r50 = r75.<android.os.Message: java.lang.Object obj>;

        r91 = (com.android.internal.os.SomeArgs) $r50;

     label27:
        $r51 = r91.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r56 = (java.io.FileDescriptor) $r51;

        $r52 = r91.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r55 = (java.io.PrintWriter) $r52;

        $r53 = r91.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r54 = (java.lang.String[]) $r53;

        virtualinvoke r90.<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r56, $r55, $r54);

     label28:
        goto label30;

     label29:
        $r67 := @caughtexception;

        $r68 = r91.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r93 = (java.io.PrintWriter) $r68;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception: ");

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        $r72 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r93.<java.io.PrintWriter: void println(java.lang.String)>($r72);

     label30:
        r95 = r91.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        entermonitor r95;

     label31:
        $r57 = r91.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        $r58 = (java.util.concurrent.CountDownLatch) $r57;

        virtualinvoke $r58.<java.util.concurrent.CountDownLatch: void countDown()>();

        exitmonitor r95;

     label32:
        virtualinvoke r91.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label33:
        $r74 := @caughtexception;

     label34:
        exitmonitor r95;

     label35:
        throw $r74;

        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.RuntimeException from label27 to label28 with label29;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label34 to label35 with label33;
    }

    public void hideSoftInput(android.os.IBinder, int, android.os.ResultReceiver)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.os.IBinder r1;
        int i0;
        android.os.ResultReceiver r2;
        com.android.internal.os.HandlerCaller r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIOO(int,int,java.lang.Object,java.lang.Object)>(70, i0, r1, r2);

        virtualinvoke r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void initializeInternal(android.os.IBinder, int, com.android.internal.inputmethod.IInputMethodPrivilegedOperations)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.os.IBinder r1;
        int i0;
        com.android.internal.inputmethod.IInputMethodPrivilegedOperations r2;
        com.android.internal.os.HandlerCaller r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.inputmethod.IInputMethodPrivilegedOperations;

        r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIOO(int,int,java.lang.Object,java.lang.Object)>(10, i0, r1, r2);

        virtualinvoke r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void onCreateInlineSuggestionsRequest(com.android.internal.view.InlineSuggestionsRequestInfo, com.android.internal.view.IInlineSuggestionsRequestCallback)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.InlineSuggestionsRequestInfo r1;
        com.android.internal.view.IInlineSuggestionsRequestCallback r2;
        com.android.internal.os.HandlerCaller r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.InlineSuggestionsRequestInfo;

        r2 := @parameter1: com.android.internal.view.IInlineSuggestionsRequestCallback;

        r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(90, r1, r2);

        virtualinvoke r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void revokeSession(com.android.internal.view.IInputMethodSession)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputMethodSession r1;
        android.inputmethodservice.IInputMethodSessionWrapper $r3;
        com.android.internal.os.HandlerCaller $r4, $r5;
        android.os.Message $r6;
        java.lang.String $r9, $r14;
        java.lang.ClassCastException $r10;
        java.lang.StringBuilder $r11, r16;
        android.view.inputmethod.InputMethodSession r15;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.IInputMethodSession;

     label1:
        $r3 = (android.inputmethodservice.IInputMethodSessionWrapper) r1;

        r15 = virtualinvoke $r3.<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>();

     label2:
        if r15 != null goto label5;

     label3:
        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session is already finished: ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r9);

     label4:
        return;

     label5:
        $r5 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r6 = virtualinvoke $r4.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(50, r15);

        virtualinvoke $r5.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r6);

     label6:
        goto label8;

     label7:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming session not of correct type: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodWrapper", $r14, $r10);

     label8:
        return;

        catch java.lang.ClassCastException from label1 to label2 with label7;
        catch java.lang.ClassCastException from label3 to label4 with label7;
        catch java.lang.ClassCastException from label5 to label6 with label7;
    }

    public void setSessionEnabled(com.android.internal.view.IInputMethodSession, boolean)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputMethodSession r1;
        boolean z0;
        android.view.inputmethod.InputMethodSession r2;
        android.inputmethodservice.IInputMethodSessionWrapper $r3;
        android.os.Message $r4;
        java.lang.String $r7, $r12;
        java.lang.ClassCastException $r8;
        java.lang.StringBuilder $r9, r13;
        com.android.internal.os.HandlerCaller r14, r15;
        byte b2;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.IInputMethodSession;

        z0 := @parameter1: boolean;

     label01:
        $r3 = (android.inputmethodservice.IInputMethodSessionWrapper) r1;

        r2 = virtualinvoke $r3.<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>();

     label02:
        if r2 != null goto label05;

     label03:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session is already finished: ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r7);

     label04:
        return;

     label05:
        r14 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r15 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

     label06:
        if z0 == 0 goto label07;

        b2 = 1;

        goto label08;

     label07:
        b2 = 0;

     label08:
        $r4 = virtualinvoke r15.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(45, b2, r2);

        virtualinvoke r14.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming session not of correct type: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodWrapper", $r12, $r8);

     label11:
        return;

        catch java.lang.ClassCastException from label01 to label02 with label10;
        catch java.lang.ClassCastException from label03 to label04 with label10;
        catch java.lang.ClassCastException from label05 to label06 with label10;
        catch java.lang.ClassCastException from label08 to label09 with label10;
    }

    public void showSoftInput(android.os.IBinder, int, android.os.ResultReceiver)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.os.IBinder r1;
        int i0;
        android.os.ResultReceiver r2;
        com.android.internal.os.HandlerCaller r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIOO(int,int,java.lang.Object,java.lang.Object)>(60, i0, r1, r2);

        virtualinvoke r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void startInput(android.os.IBinder, com.android.internal.view.IInputContext, int, android.view.inputmethod.EditorInfo, boolean, boolean)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.os.IBinder r1;
        com.android.internal.view.IInputContext r2;
        int i0, i2, i3;
        android.view.inputmethod.EditorInfo r3;
        boolean z0, z1;
        com.android.internal.os.SomeArgs r4;
        com.android.internal.os.HandlerCaller r5;
        com.android.internal.inputmethod.CancellationGroup $r6, $r7, $r9;
        android.os.Message $r8;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: com.android.internal.view.IInputContext;

        i0 := @parameter2: int;

        r3 := @parameter3: android.view.inputmethod.EditorInfo;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r6 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        if $r6 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InputMethodWrapper", "startInput must be called after bindInput.");

        $r9 = new com.android.internal.inputmethod.CancellationGroup;

        specialinvoke $r9.<com.android.internal.inputmethod.CancellationGroup: void <init>()>();

        r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup> = $r9;

     label1:
        r4 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        i2 = (int) z0;

        r4.<com.android.internal.os.SomeArgs: int argi1> = i2;

        i3 = (int) z1;

        r4.<com.android.internal.os.SomeArgs: int argi2> = i3;

        r4.<com.android.internal.os.SomeArgs: int argi3> = i0;

        r5 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r7 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        $r8 = virtualinvoke r5.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOOOO(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(32, r1, r2, r3, $r7, r4);

        virtualinvoke r5.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r8);

        return;
    }

    public void unbindInput()
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.os.Message $r1;
        com.android.internal.inputmethod.CancellationGroup r2;
        com.android.internal.os.HandlerCaller r3;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.inputmethod.CancellationGroup: void cancelAll()>();

        r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.inputmethod.CancellationGroup mCancellationGroup> = null;

        goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InputMethodWrapper", "unbindInput must be paired with bindInput.");

     label2:
        r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r1 = virtualinvoke r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(30);

        virtualinvoke r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <android.inputmethodservice.IInputMethodWrapper: java.lang.String TAG> = "InputMethodWrapper";

        <android.inputmethodservice.IInputMethodWrapper: int DO_UNSET_INPUT_CONTEXT> = 30;

        <android.inputmethodservice.IInputMethodWrapper: int DO_START_INPUT> = 32;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SHOW_SOFT_INPUT> = 60;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SET_SESSION_ENABLED> = 45;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SET_INPUT_CONTEXT> = 20;

        <android.inputmethodservice.IInputMethodWrapper: int DO_REVOKE_SESSION> = 50;

        <android.inputmethodservice.IInputMethodWrapper: int DO_INITIALIZE_INTERNAL> = 10;

        <android.inputmethodservice.IInputMethodWrapper: int DO_HIDE_SOFT_INPUT> = 70;

        <android.inputmethodservice.IInputMethodWrapper: int DO_DUMP> = 1;

        <android.inputmethodservice.IInputMethodWrapper: int DO_CREATE_SESSION> = 40;

        <android.inputmethodservice.IInputMethodWrapper: int DO_CREATE_INLINE_SUGGESTIONS_REQUEST> = 90;

        <android.inputmethodservice.IInputMethodWrapper: int DO_CHANGE_INPUTMETHOD_SUBTYPE> = 80;

        return;
    }
}
