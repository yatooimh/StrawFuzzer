final class android.inputmethodservice.InputMethodService$SettingsObserver extends android.database.ContentObserver
{
    private final android.inputmethodservice.InputMethodService mService;
    private int mShowImeWithHardKeyboard;

    private void <init>(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService$SettingsObserver r0;
        android.inputmethodservice.InputMethodService r1;
        android.os.Handler $r2;
        android.os.Looper $r3;

        r0 := @this: android.inputmethodservice.InputMethodService$SettingsObserver;

        r1 := @parameter0: android.inputmethodservice.InputMethodService;

        $r2 = new android.os.Handler;

        $r3 = virtualinvoke r1.<android.inputmethodservice.InputMethodService: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>($r2);

        r0.<android.inputmethodservice.InputMethodService$SettingsObserver: int mShowImeWithHardKeyboard> = 0;

        r0.<android.inputmethodservice.InputMethodService$SettingsObserver: android.inputmethodservice.InputMethodService mService> = r1;

        return;
    }

    static boolean access$1600(android.inputmethodservice.InputMethodService$SettingsObserver)
    {
        android.inputmethodservice.InputMethodService$SettingsObserver r0;
        boolean $z0;

        r0 := @parameter0: android.inputmethodservice.InputMethodService$SettingsObserver;

        $z0 = specialinvoke r0.<android.inputmethodservice.InputMethodService$SettingsObserver: boolean shouldShowImeWithHardKeyboard()>();

        return $z0;
    }

    public static android.inputmethodservice.InputMethodService$SettingsObserver createAndRegister(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.InputMethodService$SettingsObserver $r2;
        android.content.ContentResolver $r3;
        android.net.Uri $r4;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        $r2 = new android.inputmethodservice.InputMethodService$SettingsObserver;

        specialinvoke $r2.<android.inputmethodservice.InputMethodService$SettingsObserver: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        $r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("show_ime_with_hard_keyboard");

        virtualinvoke $r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r4, 0, $r2);

        return $r2;
    }

    private boolean shouldShowImeWithHardKeyboard()
    {
        android.inputmethodservice.InputMethodService$SettingsObserver r0;
        int $i0, $i1, $i3, i5;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.inputmethodservice.InputMethodService $r6;
        android.content.ContentResolver $r7;
        byte b4;

        r0 := @this: android.inputmethodservice.InputMethodService$SettingsObserver;

        $i0 = r0.<android.inputmethodservice.InputMethodService$SettingsObserver: int mShowImeWithHardKeyboard>;

        if $i0 != 0 goto label3;

        $r6 = r0.<android.inputmethodservice.InputMethodService$SettingsObserver: android.inputmethodservice.InputMethodService mService>;

        $r7 = virtualinvoke $r6.<android.inputmethodservice.InputMethodService: android.content.ContentResolver getContentResolver()>();

        $i3 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r7, "show_ime_with_hard_keyboard", 0);

        if $i3 == 0 goto label1;

        b4 = 2;

        goto label2;

     label1:
        b4 = 1;

     label2:
        r0.<android.inputmethodservice.InputMethodService$SettingsObserver: int mShowImeWithHardKeyboard> = b4;

     label3:
        i5 = r0.<android.inputmethodservice.InputMethodService$SettingsObserver: int mShowImeWithHardKeyboard>;

        if i5 == 1 goto label5;

        if i5 == 2 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected mShowImeWithHardKeyboard=");

        $i1 = r0.<android.inputmethodservice.InputMethodService$SettingsObserver: int mShowImeWithHardKeyboard>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InputMethodService", $r5);

        return 0;

     label4:
        return 1;

     label5:
        return 0;
    }

    public void onChange(boolean, android.net.Uri)
    {
        android.inputmethodservice.InputMethodService$SettingsObserver r0;
        boolean z0, $z1;
        android.net.Uri r1, $r2;
        android.inputmethodservice.InputMethodService $r3, $r5;
        android.content.ContentResolver $r4;
        int $i0;
        byte b1;

        r0 := @this: android.inputmethodservice.InputMethodService$SettingsObserver;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("show_ime_with_hard_keyboard");

        $z1 = virtualinvoke $r2.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r3 = r0.<android.inputmethodservice.InputMethodService$SettingsObserver: android.inputmethodservice.InputMethodService mService>;

        $r4 = virtualinvoke $r3.<android.inputmethodservice.InputMethodService: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r4, "show_ime_with_hard_keyboard", 0);

        if $i0 == 0 goto label1;

        b1 = 2;

        goto label2;

     label1:
        b1 = 1;

     label2:
        r0.<android.inputmethodservice.InputMethodService$SettingsObserver: int mShowImeWithHardKeyboard> = b1;

        $r5 = r0.<android.inputmethodservice.InputMethodService$SettingsObserver: android.inputmethodservice.InputMethodService mService>;

        staticinvoke <android.inputmethodservice.InputMethodService: void access$1500(android.inputmethodservice.InputMethodService)>($r5);

     label3:
        return;
    }

    public java.lang.String toString()
    {
        android.inputmethodservice.InputMethodService$SettingsObserver r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r6;

        r0 := @this: android.inputmethodservice.InputMethodService$SettingsObserver;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SettingsObserver{mShowImeWithHardKeyboard=");

        $i0 = r0.<android.inputmethodservice.InputMethodService$SettingsObserver: int mShowImeWithHardKeyboard>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    void unregister()
    {
        android.inputmethodservice.InputMethodService$SettingsObserver r0;
        android.inputmethodservice.InputMethodService $r1;
        android.content.ContentResolver $r2;

        r0 := @this: android.inputmethodservice.InputMethodService$SettingsObserver;

        $r1 = r0.<android.inputmethodservice.InputMethodService$SettingsObserver: android.inputmethodservice.InputMethodService mService>;

        $r2 = virtualinvoke $r1.<android.inputmethodservice.InputMethodService: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r2.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>(r0);

        return;
    }
}
