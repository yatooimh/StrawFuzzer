public class android.inputmethodservice.InputMethodService extends android.inputmethodservice.AbstractInputMethodService
{
    public static final int BACK_DISPOSITION_ADJUST_NOTHING;
    public static final int BACK_DISPOSITION_DEFAULT;
    private static final int BACK_DISPOSITION_MAX;
    private static final int BACK_DISPOSITION_MIN;
    public static final int BACK_DISPOSITION_WILL_DISMISS;
    public static final int BACK_DISPOSITION_WILL_NOT_DISMISS;
    static final boolean DEBUG;
    public static final int IME_ACTIVE;
    public static final int IME_INVISIBLE;
    public static final int IME_VISIBLE;
    static final int MOVEMENT_DOWN;
    static final int MOVEMENT_UP;
    static final java.lang.String TAG;
    final android.view.View$OnClickListener mActionClickListener;
    private boolean mAutomotiveHideNavBarForKeyboard;
    int mBackDisposition;
    boolean mCanPreRender;
    android.widget.FrameLayout mCandidatesFrame;
    boolean mCandidatesViewStarted;
    int mCandidatesVisibility;
    android.view.inputmethod.CompletionInfo[] mCurCompletions;
    private android.os.IBinder mCurHideInputToken;
    private android.os.IBinder mCurShowInputToken;
    boolean mDecorViewVisible;
    boolean mDecorViewWasVisible;
    android.view.ViewGroup mExtractAccessories;
    android.view.View mExtractAction;
    android.inputmethodservice.ExtractEditText mExtractEditText;
    android.widget.FrameLayout mExtractFrame;
    android.view.View mExtractView;
    boolean mExtractViewHidden;
    android.view.inputmethod.ExtractedText mExtractedText;
    int mExtractedToken;
    boolean mFullscreenApplied;
    android.view.ViewGroup mFullscreenArea;
    android.view.inputmethod.InputMethodManager mImm;
    boolean mInShowWindow;
    android.view.LayoutInflater mInflater;
    boolean mInitialized;
    private android.inputmethodservice.InlineSuggestionSessionController mInlineSuggestionSessionController;
    android.view.inputmethod.InputBinding mInputBinding;
    android.view.inputmethod.InputConnection mInputConnection;
    android.view.inputmethod.EditorInfo mInputEditorInfo;
    android.widget.FrameLayout mInputFrame;
    boolean mInputStarted;
    android.view.View mInputView;
    boolean mInputViewStarted;
    final android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer;
    private boolean mIsAutomotive;
    boolean mIsFullscreen;
    boolean mIsInputViewShown;
    boolean mIsPreRendered;
    boolean mLastShowInputRequested;
    private java.lang.Object mLock;
    private boolean mNotifyUserActionSent;
    private com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps;
    android.view.View mRootView;
    private android.inputmethodservice.InputMethodService$SettingsObserver mSettingsObserver;
    int mShowInputFlags;
    boolean mShowInputRequested;
    android.view.inputmethod.InputConnection mStartedInputConnection;
    int mStatusIcon;
    int mTheme;
    android.content.res.TypedArray mThemeAttrs;
    final android.inputmethodservice.InputMethodService$Insets mTmpInsets;
    final int[] mTmpLocation;
    android.os.IBinder mToken;
    boolean mViewsCreated;
    android.inputmethodservice.SoftInputWindow mWindow;
    boolean mWindowVisible;

    public void <init>()
    {
        android.inputmethodservice.InputMethodService r0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;
        java.lang.Object $r2;
        android.inputmethodservice.InputMethodService$Insets $r3;
        int[] $r4;
        android.inputmethodservice._$$Lambda$InputMethodService$8T9TmAUIN7vW9eU6kTg8309_d4E $r5;
        android.inputmethodservice._$$Lambda$InputMethodService$wp8DeVGx_WDOPw4F6an7QbwVxf0 $r6;

        r0 := @this: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.AbstractInputMethodService: void <init>()>();

        $r1 = new com.android.internal.inputmethod.InputMethodPrivilegedOperations;

        specialinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void <init>()>();

        r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps> = $r1;

        r0.<android.inputmethodservice.InputMethodService: int mTheme> = 0;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.inputmethodservice.InputMethodService: java.lang.Object mLock> = $r2;

        $r3 = new android.inputmethodservice.InputMethodService$Insets;

        specialinvoke $r3.<android.inputmethodservice.InputMethodService$Insets: void <init>()>();

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets> = $r3;

        $r4 = newarray (int)[2];

        r0.<android.inputmethodservice.InputMethodService: int[] mTmpLocation> = $r4;

        $r5 = new android.inputmethodservice._$$Lambda$InputMethodService$8T9TmAUIN7vW9eU6kTg8309_d4E;

        specialinvoke $r5.<android.inputmethodservice._$$Lambda$InputMethodService$8T9TmAUIN7vW9eU6kTg8309_d4E: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        r0.<android.inputmethodservice.InputMethodService: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer> = $r5;

        $r6 = new android.inputmethodservice._$$Lambda$InputMethodService$wp8DeVGx_WDOPw4F6an7QbwVxf0;

        specialinvoke $r6.<android.inputmethodservice._$$Lambda$InputMethodService$wp8DeVGx_WDOPw4F6an7QbwVxf0: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        r0.<android.inputmethodservice.InputMethodService: android.view.View$OnClickListener mActionClickListener> = $r6;

        return;
    }

    static com.android.internal.inputmethod.InputMethodPrivilegedOperations access$000(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        return $r1;
    }

    static android.inputmethodservice.InlineSuggestionSessionController access$100(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.InlineSuggestionSessionController $r1;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InlineSuggestionSessionController mInlineSuggestionSessionController>;

        return $r1;
    }

    static int access$1000(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;
        int $i0;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        $i0 = specialinvoke r0.<android.inputmethodservice.InputMethodService: int mapToImeWindowStatus()>();

        return $i0;
    }

    static void access$1100(android.inputmethodservice.InputMethodService, android.view.inputmethod.InputMethodSubtype)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputMethodSubtype r1;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        r1 := @parameter1: android.view.inputmethod.InputMethodSubtype;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void dispatchOnCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>(r1);

        return;
    }

    static void access$1200(android.inputmethodservice.InputMethodService, int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onToggleSoftInput(int,int)>(i0, i1);

        return;
    }

    static void access$1300(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void notifyImeHidden()>();

        return;
    }

    static void access$1400(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void removeImeSurface()>();

        return;
    }

    static void access$1500(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void resetStateForNewConfiguration()>();

        return;
    }

    static void access$200(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void reportFullscreenMode()>();

        return;
    }

    static android.os.IBinder access$302(android.inputmethodservice.InputMethodService, android.os.IBinder)
    {
        android.inputmethodservice.InputMethodService r0;
        android.os.IBinder r1;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        r1 := @parameter1: android.os.IBinder;

        r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mCurHideInputToken> = r1;

        return r1;
    }

    static void access$400(android.inputmethodservice.InputMethodService, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void applyVisibilityInInsetsConsumerIfNecessary(boolean)>(z0);

        return;
    }

    static void access$500(android.inputmethodservice.InputMethodService, int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void setImeWindowStatus(int,int)>(i0, i1);

        return;
    }

    static void access$600(android.inputmethodservice.InputMethodService, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onPreRenderedWindowVisibilityChanged(boolean)>(z0);

        return;
    }

    static void access$700(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void doHideWindow()>();

        return;
    }

    static android.os.IBinder access$802(android.inputmethodservice.InputMethodService, android.os.IBinder)
    {
        android.inputmethodservice.InputMethodService r0;
        android.os.IBinder r1;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        r1 := @parameter1: android.os.IBinder;

        r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mCurShowInputToken> = r1;

        return r1;
    }

    static boolean access$900(android.inputmethodservice.InputMethodService, int, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        boolean z0, $z1;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z1 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean dispatchOnShowInputRequested(int,boolean)>(i0, z0);

        return $z1;
    }

    private void applyVisibilityInInsetsConsumerIfNecessary(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations r1;
        android.os.IBinder r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean isVisibilityAppliedUsingInsetsConsumer()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        if z0 == 0 goto label2;

        r2 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mCurShowInputToken>;

        goto label3;

     label2:
        r2 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mCurHideInputToken>;

     label3:
        virtualinvoke r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void applyImeVisibility(android.os.IBinder,boolean)>(r2, z0);

        return;
    }

    private void dispatchOnCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.view.inputmethod.InputMethodSubtype r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r3 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        r1 = r0.<android.inputmethodservice.InputMethodService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.inputmethodservice.InputMethodService: boolean mNotifyUserActionSent> = 0;

        exitmonitor r1;

     label2:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>(r3);

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean dispatchOnShowInputRequested(int, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.inputmethodservice.InlineSuggestionSessionController $r1;
        boolean z0, z1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onShowInputRequested(int,boolean)>(i0, z0);

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InlineSuggestionSessionController mInlineSuggestionSessionController>;

        virtualinvoke $r1.<android.inputmethodservice.InlineSuggestionSessionController: void notifyOnShowInputRequested(boolean)>(z1);

        if z1 == 0 goto label1;

        r0.<android.inputmethodservice.InputMethodService: int mShowInputFlags> = i0;

        goto label2;

     label1:
        r0.<android.inputmethodservice.InputMethodService: int mShowInputFlags> = 0;

     label2:
        return z1;
    }

    private void doHideWindow()
    {
        android.inputmethodservice.InputMethodService r0;
        int $i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $i0 = r0.<android.inputmethodservice.InputMethodService: int mBackDisposition>;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void setImeWindowStatus(int,int)>(0, $i0);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void hideWindow()>();

        return;
    }

    private void exposeContentInternal(android.view.inputmethod.InputContentInfo, android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        android.net.Uri r2;
        com.android.internal.inputmethod.IInputContentUriToken r3;
        java.lang.String $r4, $r8, $r11, $r13;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r5;
        java.lang.StringBuilder $r6;
        android.view.inputmethod.InputContentInfo r14;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r14 := @parameter0: android.view.inputmethod.InputContentInfo;

        r1 := @parameter1: android.view.inputmethod.EditorInfo;

        r2 = virtualinvoke r14.<android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>();

        $r5 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        $r4 = r1.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

        r3 = virtualinvoke $r5.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.net.Uri,java.lang.String)>(r2, $r4);

        if r3 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createInputContentAccessToken failed. contentUri=");

        $r8 = virtualinvoke r2.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packageName=");

        $r11 = r1.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InputMethodService", $r13);

        return;

     label1:
        virtualinvoke r14.<android.view.inputmethod.InputContentInfo: void setUriToken(com.android.internal.inputmethod.IInputContentUriToken)>(r3);

        return;
    }

    private void finishViews(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2;
        android.inputmethodservice.InlineSuggestionSessionController $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted>;

        if $z1 == 0 goto label1;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InlineSuggestionSessionController mInlineSuggestionSessionController>;

        virtualinvoke $r1.<android.inputmethodservice.InlineSuggestionSessionController: void notifyOnFinishInputView()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onFinishInputView(boolean)>(z0);

        goto label2;

     label1:
        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted>;

        if $z2 == 0 goto label2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onFinishCandidatesView(boolean)>(z0);

     label2:
        r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted> = 0;

        return;
    }

    private android.inputmethodservice.ExtractEditText getExtractEditTextIfVisible()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1;
        android.inputmethodservice.ExtractEditText $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>();

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        return $r1;

     label2:
        return null;
    }

    private android.os.IBinder getHostInputToken()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View r1;
        android.view.ViewRootImpl r2;
        android.os.IBinder r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r2 = null;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

     label1:
        if r2 != null goto label2;

        r3 = null;

        goto label3;

     label2:
        r3 = virtualinvoke r2.<android.view.ViewRootImpl: android.os.IBinder getInputToken()>();

     label3:
        return r3;
    }

    private int getIconForImeAction(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        tableswitch($i1)
        {
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        return 17302453;

     label2:
        return 17302452;

     label3:
        return 17302449;

     label4:
        return 17302451;

     label5:
        return 17302455;

     label6:
        return 17302454;

     label7:
        return 17302450;
    }

    private boolean handleBack(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2;
        int $i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z1 == 0 goto label2;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>(0);

     label1:
        return 1;

     label2:
        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible>;

        if $z2 == 0 goto label5;

        $i0 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        if $i0 != 0 goto label3;

        if z0 == 0 goto label4;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>(0);

        goto label4;

     label3:
        if z0 == 0 goto label4;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void doHideWindow()>();

     label4:
        return 1;

     label5:
        return 0;
    }

    private boolean isAutomotive()
    {
        android.inputmethodservice.InputMethodService r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r2.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.type.automotive");

        return $z0;
    }

    private boolean isVisibilityAppliedUsingInsetsConsumer()
    {
        android.inputmethodservice.InputMethodService r0;
        int $i0;
        boolean z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $i0 = <android.view.ViewRootImpl: int sNewInsetsMode>;

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static android.os.IBinder lambda$TZAfta6HEKUpxapSrZpy7Hhlwrw(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;
        android.os.IBinder $r1;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        $r1 = specialinvoke r0.<android.inputmethodservice.InputMethodService: android.os.IBinder getHostInputToken()>();

        return $r1;
    }

    private int mapToImeWindowStatus()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2;
        byte b0, $b1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>();

        b0 = 2;

        if z0 == 0 goto label3;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mCanPreRender>;

        if $z1 == 0 goto label2;

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        if $z2 == 0 goto label1;

        goto label4;

     label1:
        b0 = 4;

        goto label4;

     label2:
        goto label4;

     label3:
        b0 = 0;

     label4:
        $b1 = 1 | b0;

        return $b1;
    }

    private void maybeNotifyPreRendered()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;
        android.view.inputmethod.EditorInfo $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mCanPreRender>;

        if $z0 == 0 goto label2;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mIsPreRendered>;

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

        virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void reportPreRendered(android.view.inputmethod.EditorInfo)>($r2);

        return;

     label2:
        return;
    }

    private void notifyImeHidden()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>(0);

        return;
    }

    private void onPreRenderedWindowVisibilityChanged(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;
        int i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible> = z0;

        if z0 == 0 goto label1;

        i0 = r0.<android.inputmethodservice.InputMethodService: int mShowInputFlags>;

        goto label2;

     label1:
        i0 = 0;

     label2:
        r0.<android.inputmethodservice.InputMethodService: int mShowInputFlags> = i0;

        r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested> = z0;

        r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible> = z0;

        if z0 == 0 goto label3;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onWindowShown()>();

     label3:
        return;
    }

    private void onToggleSoftInput(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>(i1);

        goto label2;

     label1:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void requestShowSelf(int)>(i0);

     label2:
        return;
    }

    private boolean prepareWindow(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z2, $z3, z4, $z5;
        android.view.View r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible> = 1;

        z4 = 0;

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z2 != 0 goto label1;

        z4 = 0;

        $z3 = r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted>;

        if $z3 == 0 goto label1;

        z4 = 0;

        if z0 == 0 goto label1;

        z4 = 1;

        r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested> = 1;

     label1:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initialize()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateFullscreenMode()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateInputViewShown()>();

        $z5 = r0.<android.inputmethodservice.InputMethodService: boolean mViewsCreated>;

        if $z5 != 0 goto label2;

        r0.<android.inputmethodservice.InputMethodService: boolean mViewsCreated> = 1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initialize()>();

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()>();

        if r1 == null goto label2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)>(r1);

     label2:
        return z4;
    }

    private void removeImeSurface()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1;
        android.inputmethodservice.SoftInputWindow $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z0 != 0 goto label1;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        if $z1 != 0 goto label1;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r1.<android.inputmethodservice.SoftInputWindow: void hide()>();

     label1:
        return;
    }

    private void reportFullscreenMode()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen>;

        virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void reportFullscreenMode(boolean)>($z0);

        return;
    }

    private void resetStateForNewConfiguration()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, $i1, $i2;
        android.view.inputmethod.CompletionInfo[] r1;
        byte $b3, b4;
        android.view.inputmethod.InputConnection $r2;
        android.view.inputmethod.EditorInfo $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible>;

        i0 = r0.<android.inputmethodservice.InputMethodService: int mShowInputFlags>;

        z1 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.CompletionInfo[] mCurCompletions>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initViews()>();

        b4 = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted> = 0;

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted>;

        if $z2 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        $r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void doStartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,boolean)>($r2, $r3, 1);

     label1:
        if z0 == 0 goto label7;

        if z1 == 0 goto label3;

        $z3 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean dispatchOnShowInputRequested(int,boolean)>(i0, 1);

        if $z3 == 0 goto label2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void showWindow(boolean)>(1);

        if r1 == null goto label5;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.CompletionInfo[] mCurCompletions> = r1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])>(r1);

        goto label5;

     label2:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void doHideWindow()>();

        goto label5;

     label3:
        $i1 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        if $i1 != 0 goto label4;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void showWindow(boolean)>(0);

        goto label5;

     label4:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void doHideWindow()>();

     label5:
        $z4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>();

        if $z4 == 0 goto label6;

        b4 = 2;

     label6:
        $b3 = b4 | 1;

        $i2 = r0.<android.inputmethodservice.InputMethodService: int mBackDisposition>;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void setImeWindowStatus(int,int)>($b3, $i2);

     label7:
        return;
    }

    private void setImeExclusionRect(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1, $i2;
        android.view.View r1;
        android.widget.FrameLayout $r2;
        android.graphics.Rect $r3;
        java.util.List $r4;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        r1 = virtualinvoke $r2.<android.widget.FrameLayout: android.view.View getRootView()>();

        $r3 = new android.graphics.Rect;

        $i1 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke r1.<android.view.View: int getHeight()>();

        specialinvoke $r3.<android.graphics.Rect: void <init>(int,int,int,int)>(0, i0, $i1, $i2);

        $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        virtualinvoke r1.<android.view.View: void setSystemGestureExclusionRects(java.util.List)>($r4);

        return;
    }

    private void setImeWindowStatus(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void setImeWindowStatus(int,int)>(i0, i1);

        return;
    }

    private void startViews(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2, $z3;
        android.view.inputmethod.EditorInfo $r1, $r3;
        android.inputmethodservice.InlineSuggestionSessionController $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z1 == 0 goto label1;

        $z3 = r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted>;

        if $z3 != 0 goto label2;

        r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted> = 1;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InlineSuggestionSessionController mInlineSuggestionSessionController>;

        virtualinvoke $r2.<android.inputmethodservice.InlineSuggestionSessionController: void notifyOnStartInputView()>();

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>($r3, 0);

        goto label2;

     label1:
        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted>;

        if $z2 != 0 goto label2;

        r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted> = 1;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onStartCandidatesView(android.view.inputmethod.EditorInfo,boolean)>($r1, 0);

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void startExtractingText(boolean)>(0);

     label3:
        return;
    }

    void doFinishInput()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;
        android.inputmethodservice.InlineSuggestionSessionController $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void finishViews(boolean)>(1);

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InlineSuggestionSessionController mInlineSuggestionSessionController>;

        virtualinvoke $r1.<android.inputmethodservice.InlineSuggestionSessionController: void notifyOnFinishInput()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onFinishInput()>();

     label1:
        r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted> = 0;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mStartedInputConnection> = null;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.CompletionInfo[] mCurCompletions> = null;

        return;
    }

    boolean doMovementKey(int, android.view.KeyEvent, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        android.inputmethodservice.ExtractEditText r1;
        android.text.method.MovementMethod r2;
        android.text.Editable $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z5, $z6;
        android.view.KeyEvent r10, r12, r13;
        android.text.Layout r11;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r10 := @parameter1: android.view.KeyEvent;

        i1 := @parameter2: int;

        r1 = specialinvoke r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText getExtractEditTextIfVisible()>();

        if r1 == null goto label9;

        r2 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.method.MovementMethod getMovementMethod()>();

        r11 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.Layout getLayout()>();

        if r2 == null goto label6;

        if r11 == null goto label6;

        if i1 != -1 goto label1;

        $r9 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        $z6 = interfaceinvoke r2.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r1, $r9, i0, r10);

        if $z6 == 0 goto label6;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void reportExtractedMovement(int,int)>(i0, 1);

        return 1;

     label1:
        if i1 != -2 goto label2;

        $r8 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        $z5 = interfaceinvoke r2.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r1, $r8, i0, r10);

        if $z5 == 0 goto label6;

        return 1;

     label2:
        $r3 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        $z0 = interfaceinvoke r2.<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>(r1, $r3, r10);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void reportExtractedMovement(int,int)>(i0, i1);

        goto label6;

     label3:
        r12 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>(r10, 0);

        $r4 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        $z1 = interfaceinvoke r2.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r1, $r4, i0, r12);

        if $z1 == 0 goto label6;

        r13 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>(r10, 1);

        $r5 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        interfaceinvoke r2.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r1, $r5, i0, r13);

     label4:
        i1 = i1 + -1;

        if i1 <= 0 goto label5;

        $r6 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        interfaceinvoke r2.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r1, $r6, i0, r12);

        $r7 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        interfaceinvoke r2.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r1, $r7, i0, r13);

        goto label4;

     label5:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void reportExtractedMovement(int,int)>(i0, i1);

     label6:
        tableswitch(i0)
        {
            case 19: goto label8;
            case 20: goto label8;
            case 21: goto label8;
            case 22: goto label8;
            default: goto label7;
        };

     label7:
        goto label9;

     label8:
        return 1;

     label9:
        return 0;
    }

    void doStartInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1, $r3, $r6, $r8;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.inputmethodservice.InlineSuggestionSessionController r2, $r7;
        android.view.inputmethod.InputConnection $r4, r9;
        android.inputmethodservice.SoftInputWindow $r5;
        int $i1;
        android.view.autofill.AutofillId r10;
        java.lang.String r11;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r9 := @parameter0: android.view.inputmethod.InputConnection;

        r1 := @parameter1: android.view.inputmethod.EditorInfo;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label01;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void doFinishInput()>();

     label01:
        r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted> = 1;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mStartedInputConnection> = r9;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo> = r1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initialize()>();

        r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InlineSuggestionSessionController mInlineSuggestionSessionController>;

        r10 = null;

        if r1 != null goto label02;

        r11 = null;

        goto label03;

     label02:
        r11 = r1.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

     label03:
        if r1 != null goto label04;

        goto label05;

     label04:
        r10 = r1.<android.view.inputmethod.EditorInfo: android.view.autofill.AutofillId autofillId>;

     label05:
        virtualinvoke r2.<android.inputmethodservice.InlineSuggestionSessionController: void notifyOnStartInput(java.lang.String,android.view.autofill.AutofillId)>(r11, r10);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>(r1, z0);

        z1 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible>;

        if z1 == 0 goto label07;

        $z5 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z5 == 0 goto label06;

        r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted> = 1;

        $r7 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InlineSuggestionSessionController mInlineSuggestionSessionController>;

        virtualinvoke $r7.<android.inputmethodservice.InlineSuggestionSessionController: void notifyOnStartInputView()>();

        $r8 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>($r8, z0);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void startExtractingText(boolean)>(1);

        goto label10;

     label06:
        $i1 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        if $i1 != 0 goto label10;

        r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted> = 1;

        $r6 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onStartCandidatesView(android.view.inputmethod.EditorInfo,boolean)>($r6, z0);

        goto label10;

     label07:
        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mCanPreRender>;

        if $z2 == 0 goto label09;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        if $r3 == null goto label09;

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mStartedInputConnection>;

        if $r4 == null goto label09;

        $z3 = r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow>;

        if $z3 == 0 goto label08;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodService", "Re-entrance in to showWindow");

        return;

     label08:
        r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewWasVisible> = z1;

        r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow> = 1;

        $z4 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean prepareWindow(boolean)>(1);

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void startViews(boolean)>($z4);

        r0.<android.inputmethodservice.InputMethodService: boolean mIsPreRendered> = 1;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onPreRenderedWindowVisibilityChanged(boolean)>(0);

        $r5 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r5.<android.inputmethodservice.SoftInputWindow: void show()>();

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void maybeNotifyPreRendered()>();

        r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewWasVisible> = 1;

        r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow> = 0;

        goto label10;

     label09:
        r0.<android.inputmethodservice.InputMethodService: boolean mIsPreRendered> = 0;

     label10:
        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.String[] r1;
        android.util.PrintWriterPrinter $r2;
        java.lang.StringBuilder $r3, $r8, $r12, $r22, $r28, $r33, $r38, $r43, $r48, $r57, $r70, $r81, $r85, $r91, $r106, $r111, $r120;
        java.lang.String $r7, $r11, $r21, $r27, $r32, $r37, $r42, $r47, $r55, $r67, $r69, $r79, $r84, $r90, $r105, $r110, $r119, $r129, $r131;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        android.content.res.Resources $r24;
        android.content.res.Configuration $r25;
        android.os.IBinder $r30;
        android.view.inputmethod.InputBinding $r35;
        android.view.inputmethod.InputConnection $r40, $r45;
        android.view.inputmethod.EditorInfo $r56, $r132;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.view.inputmethod.ExtractedText $r80, $r113, $r117, $r122, $r125, $r128;
        android.inputmethodservice.InputMethodService$Insets $r93, $r96, $r99, $r102;
        android.graphics.Region $r103;
        android.inputmethodservice.InputMethodService$SettingsObserver $r108;
        java.lang.CharSequence $r114;
        java.io.FileDescriptor r133;
        java.io.PrintWriter r134;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r133 := @parameter0: java.io.FileDescriptor;

        r134 := @parameter1: java.io.PrintWriter;

        r1 := @parameter2: java.lang.String[];

        $r2 = new android.util.PrintWriterPrinter;

        specialinvoke $r2.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r134);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method service state for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mViewsCreated=");

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mViewsCreated>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDecorViewVisible=");

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDecorViewWasVisible=");

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewWasVisible>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWindowVisible=");

        $z3 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInShowWindow=");

        $z4 = r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r21 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Configuration=");

        $r24 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.res.Resources getResources()>();

        $r25 = virtualinvoke $r24.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mToken=");

        $r30 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mInputBinding=");

        $r35 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding mInputBinding>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mInputConnection=");

        $r40 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mInputConnection>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r42);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mStartedInputConnection=");

        $r45 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mStartedInputConnection>;

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r47 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r47);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mInputStarted=");

        $z5 = r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInputViewStarted=");

        $z6 = r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCandidatesViewStarted=");

        $z7 = r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r55 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r55);

        $r56 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        if $r56 == null goto label1;

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>("  mInputEditorInfo:");

        $r132 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        virtualinvoke $r132.<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>($r2, "    ");

        goto label2;

     label1:
        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>("  mInputEditorInfo: null");

     label2:
        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mShowInputRequested=");

        $z8 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastShowInputRequested=");

        $z9 = r0.<android.inputmethodservice.InputMethodService: boolean mLastShowInputRequested>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCanPreRender=");

        $z10 = r0.<android.inputmethodservice.InputMethodService: boolean mCanPreRender>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsPreRendered=");

        $z11 = r0.<android.inputmethodservice.InputMethodService: boolean mIsPreRendered>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mShowInputFlags=0x");

        $i0 = r0.<android.inputmethodservice.InputMethodService: int mShowInputFlags>;

        $r67 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r69);

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCandidatesVisibility=");

        $i1 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFullscreenApplied=");

        $z12 = r0.<android.inputmethodservice.InputMethodService: boolean mFullscreenApplied>;

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsFullscreen=");

        $z13 = r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen>;

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mExtractViewHidden=");

        $z14 = r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden>;

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z14);

        $r79 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r79);

        $r80 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        if $r80 == null goto label3;

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>("  mExtractedText:");

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    text=");

        $r113 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $r114 = $r113.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        $i7 = interfaceinvoke $r114.<java.lang.CharSequence: int length()>();

        virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chars startOffset=");

        $r117 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $i8 = $r117.<android.view.inputmethod.ExtractedText: int startOffset>;

        virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r119 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r119);

        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    selectionStart=");

        $r122 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $i9 = $r122.<android.view.inputmethod.ExtractedText: int selectionStart>;

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" selectionEnd=");

        $r125 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $i10 = $r125.<android.view.inputmethod.ExtractedText: int selectionEnd>;

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags=0x");

        $r128 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $i11 = $r128.<android.view.inputmethod.ExtractedText: int flags>;

        $r129 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);

        $r131 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r131);

        goto label4;

     label3:
        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>("  mExtractedText: null");

     label4:
        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mExtractedToken=");

        $i2 = r0.<android.inputmethodservice.InputMethodService: int mExtractedToken>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r84 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r84);

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mIsInputViewShown=");

        $z15 = r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown>;

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mStatusIcon=");

        $i3 = r0.<android.inputmethodservice.InputMethodService: int mStatusIcon>;

        virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r90 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r90);

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>("Last computed insets:");

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  contentTopInsets=");

        $r93 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $i4 = $r93.<android.inputmethodservice.InputMethodService$Insets: int contentTopInsets>;

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" visibleTopInsets=");

        $r96 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $i5 = $r96.<android.inputmethodservice.InputMethodService$Insets: int visibleTopInsets>;

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" touchableInsets=");

        $r99 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $i6 = $r99.<android.inputmethodservice.InputMethodService$Insets: int touchableInsets>;

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" touchableRegion=");

        $r102 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $r103 = $r102.<android.inputmethodservice.InputMethodService$Insets: android.graphics.Region touchableRegion>;

        virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r103);

        $r105 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r105);

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSettingsObserver=");

        $r108 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$SettingsObserver mSettingsObserver>;

        virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r108);

        $r110 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<android.util.Printer: void println(java.lang.String)>($r110);

        return;
    }

    public boolean enableHardwareAcceleration()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.SoftInputWindow $r1;
        java.lang.IllegalStateException $r2;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        if $r1 != null goto label1;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        return $z0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called before onCreate()");

        throw $r2;
    }

    public final void exposeContent(android.view.inputmethod.InputContentInfo, android.view.inputmethod.InputConnection)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputContentInfo r1;
        android.view.inputmethod.InputConnection r2, $r3;
        android.view.inputmethod.EditorInfo $r4;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.InputContentInfo;

        r2 := @parameter1: android.view.inputmethod.InputConnection;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if $r3 == r2 goto label2;

        return;

     label2:
        $r4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void exposeContentInternal(android.view.inputmethod.InputContentInfo,android.view.inputmethod.EditorInfo)>(r1, $r4);

        return;
    }

    public int getBackDisposition()
    {
        android.inputmethodservice.InputMethodService r0;
        int $i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $i0 = r0.<android.inputmethodservice.InputMethodService: int mBackDisposition>;

        return $i0;
    }

    public int getCandidatesHiddenVisibility()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;
        byte b0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>();

        if $z0 == 0 goto label1;

        b0 = 8;

        goto label2;

     label1:
        b0 = 4;

     label2:
        return b0;
    }

    public android.view.inputmethod.InputBinding getCurrentInputBinding()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputBinding $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding mInputBinding>;

        return $r1;
    }

    public android.view.inputmethod.InputConnection getCurrentInputConnection()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputConnection r1, $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mStartedInputConnection>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mInputConnection>;

        return $r2;
    }

    public android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        return $r1;
    }

    public boolean getCurrentInputStarted()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted>;

        return $z0;
    }

    public int getInputMethodWindowRecommendedHeight()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodService", "getInputMethodWindowRecommendedHeight() is deprecated and now always returns 0. Do not use this method.");

        return 0;
    }

    public android.view.LayoutInflater getLayoutInflater()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.LayoutInflater $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.LayoutInflater mInflater>;

        return $r1;
    }

    public int getMaxWidth()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.WindowManager r1;
        java.lang.Object $r2;
        android.view.WindowMetrics $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/WindowManager;");

        r1 = (android.view.WindowManager) $r2;

        $r3 = interfaceinvoke r1.<android.view.WindowManager: android.view.WindowMetrics getCurrentWindowMetrics()>();

        $r4 = staticinvoke <android.window.WindowMetricsHelper: android.graphics.Rect getBoundsExcludingNavigationBarAndCutout(android.view.WindowMetrics)>($r3);

        $i0 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        return $i0;
    }

    public java.lang.CharSequence getTextForImeAction(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1;
        java.lang.CharSequence $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        tableswitch($i1)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        $r7 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040314);

        return $r7;

     label2:
        $r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040318);

        return $r1;

     label3:
        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040315);

        return $r2;

     label4:
        $r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040317);

        return $r3;

     label5:
        $r4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040320);

        return $r4;

     label6:
        $r5 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040319);

        return $r5;

     label7:
        $r6 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040316);

        return $r6;

     label8:
        return null;
    }

    public android.app.Dialog getWindow()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.SoftInputWindow $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        return $r1;
    }

    public void hideStatusIcon()
    {
        android.inputmethodservice.InputMethodService r0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r0.<android.inputmethodservice.InputMethodService: int mStatusIcon> = 0;

        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void updateStatusIcon(java.lang.String,int)>(null, 0);

        return;
    }

    public void hideWindow()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View r1;
        boolean $z0, $z1;
        android.inputmethodservice.SoftInputWindow $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r0.<android.inputmethodservice.InputMethodService: boolean mIsPreRendered> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible> = 0;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void finishViews(boolean)>(0);

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible>;

        if $z0 == 0 goto label3;

        $z1 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean isVisibilityAppliedUsingInsetsConsumer()>();

        if $z1 == 0 goto label1;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.view.View mInputView>;

        if r1 == null goto label2;

        virtualinvoke r1.<android.view.View: void dispatchWindowVisibilityChanged(int)>(8);

        goto label2;

     label1:
        $r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r2.<android.inputmethodservice.SoftInputWindow: void hide()>();

     label2:
        r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible> = 0;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onWindowHidden()>();

        r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewWasVisible> = 0;

     label3:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateFullscreenMode()>();

        return;
    }

    void initViews()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View r1, $r6, $r9, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23;
        int i0, $i1;
        int[] $r2;
        android.content.res.TypedArray $r3;
        android.view.LayoutInflater $r4;
        android.inputmethodservice.SoftInputWindow $r5, $r28;
        android.view.ViewTreeObserver $r7, $r10;
        android.view.ViewTreeObserver$OnComputeInternalInsetsListener $r8, $r11;
        android.content.ContentResolver $r12;
        android.view.ViewGroup $r15;
        android.widget.FrameLayout $r18, $r21, $r24, $r25, $r26, $r27;
        android.view.Window $r29;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r0.<android.inputmethodservice.InputMethodService: boolean mInitialized> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mViewsCreated> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested> = 0;

        r0.<android.inputmethodservice.InputMethodService: int mShowInputFlags> = 0;

        $r2 = <android.R$styleable: int[] InputMethodService>;

        $r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2);

        r0.<android.inputmethodservice.InputMethodService: android.content.res.TypedArray mThemeAttrs> = $r3;

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.view.LayoutInflater mInflater>;

        r1 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367175, null);

        r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView> = r1;

        $r5 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r5.<android.inputmethodservice.SoftInputWindow: void setContentView(android.view.View)>(r1);

        $r6 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r8 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke $r7.<android.view.ViewTreeObserver: void removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r8);

        $r9 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r10 = virtualinvoke $r9.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r11 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke $r10.<android.view.ViewTreeObserver: void addOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r11);

        $r12 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r12, "fancy_ime_animations", 0);

        if $i1 == 0 goto label1;

        $r28 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r29 = virtualinvoke $r28.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r29.<android.view.Window: void setWindowAnimations(int)>(16974587);

     label1:
        $r13 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r14 = virtualinvoke $r13.<android.view.View: android.view.View findViewById(int)>(16909015);

        $r15 = (android.view.ViewGroup) $r14;

        r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea> = $r15;

        r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden> = 0;

        $r16 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r17 = virtualinvoke $r16.<android.view.View: android.view.View findViewById(int)>(16908316);

        $r18 = (android.widget.FrameLayout) $r17;

        r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame> = $r18;

        r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractView> = null;

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText> = null;

        r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories> = null;

        r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractAction> = null;

        r0.<android.inputmethodservice.InputMethodService: boolean mFullscreenApplied> = 0;

        $r19 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r20 = virtualinvoke $r19.<android.view.View: android.view.View findViewById(int)>(16908317);

        $r21 = (android.widget.FrameLayout) $r20;

        r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame> = $r21;

        $r22 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r23 = virtualinvoke $r22.<android.view.View: android.view.View findViewById(int)>(16908318);

        $r24 = (android.widget.FrameLayout) $r23;

        r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame> = $r24;

        r0.<android.inputmethodservice.InputMethodService: android.view.View mInputView> = null;

        r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown> = 0;

        $r25 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame>;

        virtualinvoke $r25.<android.widget.FrameLayout: void setVisibility(int)>(8);

        i0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>();

        r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility> = i0;

        $r26 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        virtualinvoke $r26.<android.widget.FrameLayout: void setVisibility(int)>(i0);

        $r27 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        virtualinvoke $r27.<android.widget.FrameLayout: void setVisibility(int)>(8);

        return;
    }

    void initialize()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mInitialized>;

        if $z0 != 0 goto label1;

        r0.<android.inputmethodservice.InputMethodService: boolean mInitialized> = 1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onInitializeInterface()>();

     label1:
        return;
    }

    public boolean isExtractViewShown()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1, z2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden>;

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean isFullscreenMode()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen>;

        return $z0;
    }

    public boolean isInputViewShown()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mCanPreRender>;

        if $z0 == 0 goto label1;

        z3 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        goto label3;

     label1:
        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown>;

        if $z1 == 0 goto label2;

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible>;

        if $z2 == 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    public boolean isShowInputRequested()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        return $z0;
    }

    public void lambda$new$0$InputMethodService(android.view.ViewTreeObserver$InternalInsetsInfo)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.ViewTreeObserver$InternalInsetsInfo r1;
        android.view.View r2;
        android.graphics.Rect r3, r4, $r7, $r9;
        int i0, $i1, $i2, $i3, $i4;
        android.inputmethodservice.InputMethodService$Insets $r5, $r6, $r8, $r10, $r13, $r15, $r19;
        boolean $z0, $z1;
        android.graphics.Region $r11, $r12, $r18;
        android.widget.FrameLayout $r14;
        android.app.Dialog $r16;
        android.view.Window $r17;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.ViewTreeObserver$InternalInsetsInfo;

        $r5 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onComputeInsets(android.inputmethodservice.InputMethodService$Insets)>($r5);

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mViewsCreated>;

        if $z0 != 0 goto label1;

        $r19 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $r19.<android.inputmethodservice.InputMethodService$Insets: int visibleTopInsets> = 0;

     label1:
        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>();

        if $z1 == 0 goto label2;

        $r16 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>();

        $r17 = virtualinvoke $r16.<android.app.Dialog: android.view.Window getWindow()>();

        r2 = virtualinvoke $r17.<android.view.Window: android.view.View getDecorView()>();

        r3 = r1.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Rect contentInsets>;

        r4 = r1.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Rect visibleInsets>;

        i0 = virtualinvoke r2.<android.view.View: int getHeight()>();

        r4.<android.graphics.Rect: int top> = i0;

        r3.<android.graphics.Rect: int top> = i0;

        $r18 = r1.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Region touchableRegion>;

        virtualinvoke $r18.<android.graphics.Region: void setEmpty()>();

        virtualinvoke r1.<android.view.ViewTreeObserver$InternalInsetsInfo: void setTouchableInsets(int)>(0);

        goto label3;

     label2:
        $r7 = r1.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Rect contentInsets>;

        $r6 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $i1 = $r6.<android.inputmethodservice.InputMethodService$Insets: int contentTopInsets>;

        $r7.<android.graphics.Rect: int top> = $i1;

        $r9 = r1.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Rect visibleInsets>;

        $r8 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $i2 = $r8.<android.inputmethodservice.InputMethodService$Insets: int visibleTopInsets>;

        $r9.<android.graphics.Rect: int top> = $i2;

        $r12 = r1.<android.view.ViewTreeObserver$InternalInsetsInfo: android.graphics.Region touchableRegion>;

        $r10 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $r11 = $r10.<android.inputmethodservice.InputMethodService$Insets: android.graphics.Region touchableRegion>;

        virtualinvoke $r12.<android.graphics.Region: boolean set(android.graphics.Region)>($r11);

        $r13 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $i3 = $r13.<android.inputmethodservice.InputMethodService$Insets: int touchableInsets>;

        virtualinvoke r1.<android.view.ViewTreeObserver$InternalInsetsInfo: void setTouchableInsets(int)>($i3);

     label3:
        $r14 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        if $r14 == null goto label4;

        $r15 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $i4 = $r15.<android.inputmethodservice.InputMethodService$Insets: int visibleTopInsets>;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void setImeExclusionRect(int)>($i4);

     label4:
        return;
    }

    public void lambda$new$1$InputMethodService(android.view.View)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View r2;
        android.view.inputmethod.InputConnection r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r2 := @parameter0: android.view.View;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

        r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label2;

        if r3 == null goto label2;

        $i0 = r1.<android.view.inputmethod.EditorInfo: int actionId>;

        if $i0 == 0 goto label1;

        $i5 = r1.<android.view.inputmethod.EditorInfo: int actionId>;

        interfaceinvoke r3.<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>($i5);

        goto label2;

     label1:
        $i1 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = $i1 & 255;

        if $i2 == 1 goto label2;

        $i3 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i4 = $i3 & 255;

        interfaceinvoke r3.<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>($i4);

     label2:
        return;
    }

    public android.view.WindowInsets lambda$onCreate$2$InputMethodService(android.view.View, android.view.WindowInsets)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View r1;
        int i0, $i1;
        android.view.WindowInsets$Builder $r3, $r6;
        boolean $z0, $z1;
        android.view.WindowInsets r4, $r7, $r8;
        android.graphics.Insets r5;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.View;

        r4 := @parameter1: android.view.WindowInsets;

        $r3 = new android.view.WindowInsets$Builder;

        specialinvoke $r3.<android.view.WindowInsets$Builder: void <init>(android.view.WindowInsets)>(r4);

        i0 = staticinvoke <android.view.WindowInsets$Type: int navigationBars()>();

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mIsAutomotive>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mAutomotiveHideNavBarForKeyboard>;

        if $z1 == 0 goto label1;

        r5 = <android.graphics.Insets: android.graphics.Insets NONE>;

        goto label2;

     label1:
        $i1 = staticinvoke <android.view.WindowInsets$Type: int navigationBars()>();

        r5 = virtualinvoke r4.<android.view.WindowInsets: android.graphics.Insets getInsetsIgnoringVisibility(int)>($i1);

     label2:
        $r6 = virtualinvoke $r3.<android.view.WindowInsets$Builder: android.view.WindowInsets$Builder setInsets(int,android.graphics.Insets)>(i0, r5);

        $r7 = virtualinvoke $r6.<android.view.WindowInsets$Builder: android.view.WindowInsets build()>();

        $r8 = virtualinvoke r1.<android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>($r7);

        return $r8;
    }

    public final void notifyUserActionIfNecessary()
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.Object r1;
        boolean $z0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 = r0.<android.inputmethodservice.InputMethodService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mNotifyUserActionSent>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        virtualinvoke $r3.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void notifyUserAction()>();

        r0.<android.inputmethodservice.InputMethodService: boolean mNotifyUserActionSent> = 1;

        exitmonitor r1;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void onAppPrivateCommand(java.lang.String, android.os.Bundle)
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onBindInput()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return;
    }

    public void onComputeInsets(android.inputmethodservice.InputMethodService$Insets)
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.InputMethodService$Insets r1;
        int[] r2;
        android.widget.FrameLayout $r3, $r7, $r9, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.app.Dialog $r4, $r10;
        android.view.Window $r5, $r11;
        android.view.View $r6, $r12;
        boolean $z0;
        android.graphics.Region $r8;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.inputmethodservice.InputMethodService$Insets;

        r2 = r0.<android.inputmethodservice.InputMethodService: int[] mTmpLocation>;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        $i0 = virtualinvoke $r3.<android.widget.FrameLayout: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r13 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        virtualinvoke $r13.<android.widget.FrameLayout: void getLocationInWindow(int[])>(r2);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>();

        $r5 = virtualinvoke $r4.<android.app.Dialog: android.view.Window getWindow()>();

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        $i1 = virtualinvoke $r6.<android.view.View: int getHeight()>();

        r2[1] = $i1;

     label2:
        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>();

        if $z0 == 0 goto label3;

        $r10 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>();

        $r11 = virtualinvoke $r10.<android.app.Dialog: android.view.Window getWindow()>();

        $r12 = virtualinvoke $r11.<android.view.Window: android.view.View getDecorView()>();

        $i5 = virtualinvoke $r12.<android.view.View: int getHeight()>();

        r1.<android.inputmethodservice.InputMethodService$Insets: int contentTopInsets> = $i5;

        goto label4;

     label3:
        $i2 = r2[1];

        r1.<android.inputmethodservice.InputMethodService$Insets: int contentTopInsets> = $i2;

     label4:
        $r7 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        $i3 = virtualinvoke $r7.<android.widget.FrameLayout: int getVisibility()>();

        if $i3 != 0 goto label5;

        $r9 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        virtualinvoke $r9.<android.widget.FrameLayout: void getLocationInWindow(int[])>(r2);

     label5:
        $i4 = r2[1];

        r1.<android.inputmethodservice.InputMethodService$Insets: int visibleTopInsets> = $i4;

        r1.<android.inputmethodservice.InputMethodService$Insets: int touchableInsets> = 2;

        $r8 = r1.<android.inputmethodservice.InputMethodService$Insets: android.graphics.Region touchableRegion>;

        virtualinvoke $r8.<android.graphics.Region: void setEmpty()>();

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.inputmethodservice.InputMethodService r0;
        android.content.res.Configuration r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.inputmethodservice.AbstractInputMethodService: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void resetStateForNewConfiguration()>();

        return;
    }

    public void onConfigureWindow(android.view.Window, boolean, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.Window r1, $r3, $r6;
        boolean z0, z1;
        android.inputmethodservice.SoftInputWindow $r2, $r5;
        android.view.WindowManager$LayoutParams $r4;
        int i0;
        byte b1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.Window;

        z1 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r3 = virtualinvoke $r2.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        i0 = $r4.<android.view.WindowManager$LayoutParams: int height>;

        if z1 == 0 goto label1;

        b1 = -1;

        goto label2;

     label1:
        b1 = -2;

     label2:
        $r5 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r6 = virtualinvoke $r5.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r6.<android.view.Window: void setLayout(int,int)>(-1, b1);

        return;
    }

    public void onCreate()
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.pm.ApplicationInfo $r2;
        java.lang.Object $r3, $r8;
        android.view.inputmethod.InputMethodManager $r4;
        android.inputmethodservice.InputMethodService$SettingsObserver $r5;
        boolean $z0, $z1;
        android.content.Context $r6;
        android.content.res.Resources $r7;
        android.view.LayoutInflater $r9;
        android.inputmethodservice.SoftInputWindow $r10, $r14, $r17, $r20, $r24, $r26;
        android.view.KeyEvent$DispatcherState $r11;
        android.view.Window $r12, $r15, $r18, $r21, $r25, $r27;
        android.view.WindowManager$LayoutParams $r13, $r16, $r19;
        android.view.View $r22;
        android.inputmethodservice._$$Lambda$InputMethodService$TvVfWDKZ3ljQdrU87qYykg6uD_I $r23;
        android.inputmethodservice.InlineSuggestionSessionController $r28;
        android.inputmethodservice._$$Lambda$hehYicAn_teGDK35tKSDBx5a_qY $r29;
        android.inputmethodservice._$$Lambda$InputMethodService$TZAfta6HEKUpxapSrZpy7Hhlwrw $r30;
        android.inputmethodservice._$$Lambda$_pjAZYkcDmGn7I8XQsAVO3X__e0 $r31;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $i1 = r0.<android.inputmethodservice.InputMethodService: int mTheme>;

        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        i0 = staticinvoke <android.content.res.Resources: int selectSystemTheme(int,int,int,int,int,int)>($i1, $i2, 16973908, 16973951, 16974142, 16974142);

        r0.<android.inputmethodservice.InputMethodService: int mTheme> = i0;

        specialinvoke r0.<android.inputmethodservice.AbstractInputMethodService: void setTheme(int)>(i0);

        specialinvoke r0.<android.inputmethodservice.AbstractInputMethodService: void onCreate()>();

        $r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputMethodManager mImm> = $r4;

        $r5 = staticinvoke <android.inputmethodservice.InputMethodService$SettingsObserver: android.inputmethodservice.InputMethodService$SettingsObserver createAndRegister(android.inputmethodservice.InputMethodService)>(r0);

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$SettingsObserver mSettingsObserver> = $r5;

        $z0 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean isAutomotive()>();

        r0.<android.inputmethodservice.InputMethodService: boolean mIsAutomotive> = $z0;

        $r6 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.Context getApplicationContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r7.<android.content.res.Resources: boolean getBoolean(int)>(17891370);

        r0.<android.inputmethodservice.InputMethodService: boolean mAutomotiveHideNavBarForKeyboard> = $z1;

        $r8 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r9 = (android.view.LayoutInflater) $r8;

        r0.<android.inputmethodservice.InputMethodService: android.view.LayoutInflater mInflater> = $r9;

        $r10 = new android.inputmethodservice.SoftInputWindow;

        $i3 = r0.<android.inputmethodservice.InputMethodService: int mTheme>;

        $r11 = r0.<android.inputmethodservice.InputMethodService: android.view.KeyEvent$DispatcherState mDispatcherState>;

        specialinvoke $r10.<android.inputmethodservice.SoftInputWindow: void <init>(android.content.Context,java.lang.String,int,android.inputmethodservice.SoftInputWindow$Callback,android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,int,int,boolean)>(r0, "InputMethod", $i3, null, null, $r11, 2011, 80, 0);

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow> = $r10;

        $r12 = virtualinvoke $r10.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $r13 = virtualinvoke $r12.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i4 = staticinvoke <android.view.WindowInsets$Type: int statusBars()>();

        $i5 = staticinvoke <android.view.WindowInsets$Type: int navigationBars()>();

        $i6 = $i4 | $i5;

        virtualinvoke $r13.<android.view.WindowManager$LayoutParams: void setFitInsetsTypes(int)>($i6);

        $r14 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r15 = virtualinvoke $r14.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $r16 = virtualinvoke $r15.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i7 = staticinvoke <android.view.WindowInsets$Side: int all()>();

        $i8 = $i7 & -9;

        virtualinvoke $r16.<android.view.WindowManager$LayoutParams: void setFitInsetsSides(int)>($i8);

        $r17 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r18 = virtualinvoke $r17.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $r19 = virtualinvoke $r18.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        virtualinvoke $r19.<android.view.WindowManager$LayoutParams: void setFitInsetsIgnoringVisibility(boolean)>(1);

        $r20 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r21 = virtualinvoke $r20.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $r22 = virtualinvoke $r21.<android.view.Window: android.view.View getDecorView()>();

        $r23 = new android.inputmethodservice._$$Lambda$InputMethodService$TvVfWDKZ3ljQdrU87qYykg6uD_I;

        specialinvoke $r23.<android.inputmethodservice._$$Lambda$InputMethodService$TvVfWDKZ3ljQdrU87qYykg6uD_I: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        virtualinvoke $r22.<android.view.View: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>($r23);

        $r24 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r25 = virtualinvoke $r24.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r25.<android.view.Window: void setFlags(int,int)>(-2147483648, -2147483648);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initViews()>();

        $r26 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r27 = virtualinvoke $r26.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r27.<android.view.Window: void setLayout(int,int)>(-1, -2);

        $r28 = new android.inputmethodservice.InlineSuggestionSessionController;

        $r29 = new android.inputmethodservice._$$Lambda$hehYicAn_teGDK35tKSDBx5a_qY;

        specialinvoke $r29.<android.inputmethodservice._$$Lambda$hehYicAn_teGDK35tKSDBx5a_qY: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        $r30 = new android.inputmethodservice._$$Lambda$InputMethodService$TZAfta6HEKUpxapSrZpy7Hhlwrw;

        specialinvoke $r30.<android.inputmethodservice._$$Lambda$InputMethodService$TZAfta6HEKUpxapSrZpy7Hhlwrw: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        $r31 = new android.inputmethodservice._$$Lambda$_pjAZYkcDmGn7I8XQsAVO3X__e0;

        specialinvoke $r31.<android.inputmethodservice._$$Lambda$_pjAZYkcDmGn7I8XQsAVO3X__e0: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        specialinvoke $r28.<android.inputmethodservice.InlineSuggestionSessionController: void <init>(java.util.function.Function,java.util.function.Supplier,java.util.function.Consumer)>($r29, $r30, $r31);

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InlineSuggestionSessionController mInlineSuggestionSessionController> = $r28;

        return;
    }

    public android.view.View onCreateCandidatesView()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return null;
    }

    public android.view.View onCreateExtractTextView()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.LayoutInflater $r1;
        android.view.View $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.LayoutInflater mInflater>;

        $r2 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367176, null);

        return $r2;
    }

    public android.view.inputmethod.InlineSuggestionsRequest onCreateInlineSuggestionsRequest(android.os.Bundle)
    {
        android.inputmethodservice.InputMethodService r0;
        android.os.Bundle r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.os.Bundle;

        return null;
    }

    public android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl onCreateInputMethodInterface()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.InputMethodService$InputMethodImpl $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = new android.inputmethodservice.InputMethodService$InputMethodImpl;

        specialinvoke $r1.<android.inputmethodservice.InputMethodService$InputMethodImpl: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        return $r1;
    }

    public android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.InputMethodService$InputMethodSessionImpl $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = new android.inputmethodservice.InputMethodService$InputMethodSessionImpl;

        specialinvoke $r1.<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        return $r1;
    }

    public android.view.View onCreateInputView()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return null;
    }

    protected void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputMethodSubtype r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        return;
    }

    public void onDestroy()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View $r1;
        android.view.ViewTreeObserver $r2;
        android.view.ViewTreeObserver$OnComputeInternalInsetsListener $r3;
        android.inputmethodservice.SoftInputWindow $r4;
        android.inputmethodservice.InputMethodService$SettingsObserver r5;
        android.os.IBinder r6;

        r0 := @this: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.AbstractInputMethodService: void onDestroy()>();

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r3);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void doFinishInput()>();

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r4.<android.inputmethodservice.SoftInputWindow: void dismissForDestroyIfNecessary()>();

        r5 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$SettingsObserver mSettingsObserver>;

        if r5 == null goto label1;

        virtualinvoke r5.<android.inputmethodservice.InputMethodService$SettingsObserver: void unregister()>();

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$SettingsObserver mSettingsObserver> = null;

     label1:
        r6 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        if r6 == null goto label2;

        staticinvoke <com.android.internal.inputmethod.InputMethodPrivilegedOperationsRegistry: void remove(android.os.IBinder)>(r6);

     label2:
        return;
    }

    public void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.CompletionInfo[] r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo[];

        return;
    }

    public boolean onEvaluateFullscreenMode()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        int $i0, $i1, $i2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r3.<android.content.res.Configuration: int orientation>;

        if $i0 == 2 goto label1;

        return 0;

     label1:
        r1 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        if r1 == null goto label2;

        $i1 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = $i1 & 33554432;

        if $i2 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public boolean onEvaluateInputViewShown()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, z1;
        android.content.res.Resources $r1;
        int $i0, $i1;
        android.inputmethodservice.InputMethodService$SettingsObserver r2;
        android.content.res.Configuration r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$SettingsObserver mSettingsObserver>;

        z1 = 0;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodService", "onEvaluateInputViewShown: mSettingsObserver must not be null here.");

        return 0;

     label1:
        $z0 = staticinvoke <android.inputmethodservice.InputMethodService$SettingsObserver: boolean access$1600(android.inputmethodservice.InputMethodService$SettingsObserver)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.res.Resources getResources()>();

        r3 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = r3.<android.content.res.Configuration: int keyboard>;

        if $i0 == 1 goto label3;

        $i1 = r3.<android.content.res.Configuration: int hardKeyboardHidden>;

        if $i1 != 2 goto label4;

     label3:
        z1 = 1;

     label4:
        return z1;
    }

    public boolean onExtractTextContextMenuItem(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>(i0);

     label1:
        return 1;
    }

    public void onExtractedCursorMovement(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        android.inputmethodservice.ExtractEditText r1;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        if r1 == null goto label3;

        if i1 != 0 goto label1;

        goto label3;

     label1:
        $z0 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: boolean hasVerticalScrollBar()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>(0);

     label2:
        return;

     label3:
        return;
    }

    public void onExtractedDeleteText(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1, $i2;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>(i0, i0);

        $i2 = i1 - i0;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>(0, $i2);

     label1:
        return;
    }

    public void onExtractedReplaceText(int, int, java.lang.CharSequence)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        java.lang.CharSequence r1;
        android.view.inputmethod.InputConnection r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r2 == null goto label1;

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>(i0, i1);

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>(r1, 1);

     label1:
        return;
    }

    public void onExtractedSelectionChanged(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>(i0, i1);

     label1:
        return;
    }

    public void onExtractedSetSpan(java.lang.Object, int, int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.Object r1;
        int i0, i1, i2, $i3;
        android.view.inputmethod.InputConnection r2;
        java.lang.CharSequence r3;
        boolean $z0, $z1;
        android.text.Spannable $r4;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r2 == null goto label2;

        $z0 = interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>(i0, i1);

        if $z0 != 0 goto label1;

        return;

     label1:
        r3 = interfaceinvoke r2.<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>(1);

        $z1 = r3 instanceof android.text.Spannable;

        if $z1 == 0 goto label2;

        $r4 = (android.text.Spannable) r3;

        $i3 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        interfaceinvoke $r4.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r1, 0, $i3, i2);

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>(i0, i1);

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>(r3, 1);

     label2:
        return;
    }

    public void onExtractedTextClicked()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.ExtractEditText r1;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: boolean hasVerticalScrollBar()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>(0);

     label2:
        return;
    }

    public void onExtractingInputChanged(android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        int $i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $i0 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        if $i0 != 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>(2);

     label1:
        return;
    }

    public void onFinishCandidatesView(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

     label1:
        return;
    }

    public void onFinishInput()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

     label1:
        return;
    }

    public void onFinishInputView(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

     label1:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.MotionEvent r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public void onInitializeInterface()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return;
    }

    public boolean onInlineSuggestionsResponse(android.view.inputmethod.InlineSuggestionsResponse)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InlineSuggestionsResponse r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.InlineSuggestionsResponse;

        return 0;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        android.inputmethodservice.ExtractEditText r2;
        boolean $z0, $z1, $z2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 != 4 goto label3;

        r2 = specialinvoke r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText getExtractEditTextIfVisible()>();

        if r2 == null goto label1;

        $z2 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: boolean handleBackInTextActionModeIfNeeded(android.view.KeyEvent)>(r1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean handleBack(boolean)>(0);

        if $z1 == 0 goto label2;

        virtualinvoke r1.<android.view.KeyEvent: void startTracking()>();

        return 1;

     label2:
        return 0;

     label3:
        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean doMovementKey(int,android.view.KeyEvent,int)>(i0, r1, -1);

        return $z0;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        android.view.KeyEvent r1;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean doMovementKey(int,android.view.KeyEvent,int)>(i0, r1, i1);

        return $z0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        android.inputmethodservice.ExtractEditText r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 != 4 goto label2;

        r2 = specialinvoke r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText getExtractEditTextIfVisible()>();

        if r2 == null goto label1;

        $z3 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: boolean handleBackInTextActionModeIfNeeded(android.view.KeyEvent)>(r1);

        if $z3 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean handleBack(boolean)>(1);

        return $z2;

     label2:
        $z4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean doMovementKey(int,android.view.KeyEvent,int)>(i0, r1, -2);

        return $z4;
    }

    public boolean onShowInputRequested(int, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1, $i2;
        boolean z0, $z1, $z2, $z3;
        android.inputmethodservice.InputMethodService$SettingsObserver $r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $i1 = i0 & 1;

        if $i1 != 0 goto label3;

        if z0 != 0 goto label2;

        $z3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>();

        if $z3 == 0 goto label2;

        return 0;

     label2:
        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$SettingsObserver mSettingsObserver>;

        $z2 = staticinvoke <android.inputmethodservice.InputMethodService$SettingsObserver: boolean access$1600(android.inputmethodservice.InputMethodService$SettingsObserver)>($r1);

        if $z2 != 0 goto label3;

        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i2 = $r3.<android.content.res.Configuration: int keyboard>;

        if $i2 == 1 goto label3;

        return 0;

     label3:
        return 1;
    }

    public void onStartCandidatesView(android.view.inputmethod.EditorInfo, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        return;
    }

    public void onStartInput(android.view.inputmethod.EditorInfo, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        return;
    }

    public void onStartInputView(android.view.inputmethod.EditorInfo, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        return;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.MotionEvent r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public void onUnbindInput()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return;
    }

    public void onUpdateCursor(android.graphics.Rect)
    {
        android.inputmethodservice.InputMethodService r0;
        android.graphics.Rect r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.graphics.Rect;

        return;
    }

    public void onUpdateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.CursorAnchorInfo r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.CursorAnchorInfo;

        return;
    }

    public void onUpdateExtractedText(int, android.view.inputmethod.ExtractedText)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1;
        android.view.inputmethod.ExtractedText r1;
        android.inputmethodservice.ExtractEditText r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.inputmethod.ExtractedText;

        $i1 = r0.<android.inputmethodservice.InputMethodService: int mExtractedToken>;

        if $i1 == i0 goto label1;

        return;

     label1:
        if r1 == null goto label2;

        r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        if r2 == null goto label2;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText> = r1;

        virtualinvoke r2.<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>(r1);

     label2:
        return;
    }

    public void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z1, $z2, z3;
        android.view.ViewGroup $r1, $r2, $r3;
        java.lang.CharSequence $r4, $r7, $r9, $r12, $r14, $r15, r18;
        android.view.View $r5, $r8, $r13, $r16, r19, $r20, r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.widget.TextView $r6, $r10;
        android.widget.ImageButton $r11;
        android.view.inputmethod.EditorInfo r17;
        android.view.View$OnClickListener $r21;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r17 := @parameter0: android.view.inputmethod.EditorInfo;

        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>();

        if $z1 != 0 goto label01;

        return;

     label01:
        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories>;

        if $r1 != null goto label02;

        return;

     label02:
        r18 = r17.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        z3 = 1;

        if r18 != null goto label04;

        $i4 = r17.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i5 = $i4 & 255;

        if $i5 == 1 goto label03;

        $i6 = r17.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i7 = $i6 & 536870912;

        if $i7 != 0 goto label03;

        $i8 = r17.<android.view.inputmethod.EditorInfo: int inputType>;

        if $i8 == 0 goto label03;

        z3 = 1;

        goto label04;

     label03:
        z3 = 0;

     label04:
        if z3 == 0 goto label09;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories>;

        virtualinvoke $r3.<android.view.ViewGroup: void setVisibility(int)>(0);

        r19 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractAction>;

        if r19 == null goto label10;

        $z2 = r19 instanceof android.widget.ImageButton;

        if $z2 == 0 goto label06;

        $r11 = (android.widget.ImageButton) r19;

        $i1 = r17.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = specialinvoke r0.<android.inputmethodservice.InputMethodService: int getIconForImeAction(int)>($i1);

        virtualinvoke $r11.<android.widget.ImageButton: void setImageResource(int)>($i2);

        $r12 = r17.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        if $r12 == null goto label05;

        $r16 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractAction>;

        $r15 = r17.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        virtualinvoke $r16.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r15);

        goto label08;

     label05:
        $r13 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractAction>;

        $i3 = r17.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $r14 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>($i3);

        virtualinvoke $r13.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r14);

        goto label08;

     label06:
        $r4 = r17.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        if $r4 == null goto label07;

        $r8 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractAction>;

        $r10 = (android.widget.TextView) $r8;

        $r9 = r17.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>($r9);

        goto label08;

     label07:
        $r5 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractAction>;

        $r6 = (android.widget.TextView) $r5;

        $i0 = r17.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $r7 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>($i0);

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

     label08:
        $r20 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractAction>;

        $r21 = r0.<android.inputmethodservice.InputMethodService: android.view.View$OnClickListener mActionClickListener>;

        virtualinvoke $r20.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r21);

        goto label10;

     label09:
        $r2 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories>;

        virtualinvoke $r2.<android.view.ViewGroup: void setVisibility(int)>(8);

        r22 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractAction>;

        if r22 == null goto label10;

        virtualinvoke r22.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(null);

     label10:
        return;
    }

    public void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        int $i0, $i1, $i2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $i0 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        if $i0 == 0 goto label2;

        $i1 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = $i1 & 268435456;

        if $i2 == 0 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>(1);

        return;

     label2:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>(0);

        return;
    }

    public void onUpdateSelection(int, int, int, int, int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11;
        android.inputmethodservice.ExtractEditText r1;
        android.view.inputmethod.ExtractedText r2;
        boolean $z0;
        android.text.Editable $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        if r1 == null goto label5;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>();

        if $z0 == 0 goto label5;

        r2 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        if r2 == null goto label5;

        i6 = r2.<android.view.inputmethod.ExtractedText: int startOffset>;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void startInternalChanges()>();

        i7 = i4 - i6;

        i8 = i5 - i6;

        $r3 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        i9 = interfaceinvoke $r3.<android.text.Editable: int length()>();

        if i7 >= 0 goto label1;

        i10 = 0;

        goto label2;

     label1:
        i10 = i7;

        if i7 <= i9 goto label2;

        i10 = i9;

     label2:
        if i8 >= 0 goto label3;

        i11 = 0;

        goto label4;

     label3:
        i11 = i8;

        if i8 <= i9 goto label4;

        i11 = i9;

     label4:
        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setSelection(int,int)>(i10, i11);

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>();

     label5:
        return;
    }

    public void onViewClicked(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        return;
    }

    public void onWindowHidden()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return;
    }

    public void onWindowShown()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return;
    }

    void reportExtractedMovement(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i2, i3, i4;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        tableswitch(i2)
        {
            case 19: goto label5;
            case 20: goto label4;
            case 21: goto label3;
            case 22: goto label2;
            default: goto label1;
        };

     label1:
        i4 = 0;

        i3 = 0;

        goto label6;

     label2:
        i4 = i3;

        i3 = 0;

        goto label6;

     label3:
        i4 = neg i3;

        i3 = 0;

        goto label6;

     label4:
        i4 = 0;

        goto label6;

     label5:
        i3 = neg i3;

        i4 = 0;

     label6:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onExtractedCursorMovement(int,int)>(i4, i3);

        return;
    }

    public void requestHideSelf(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void hideMySoftInput(int)>(i0);

        return;
    }

    public final void requestShowSelf(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void showMySoftInput(int)>(i0);

        return;
    }

    public boolean sendDefaultEditorAction(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;
        android.view.inputmethod.EditorInfo r1;
        android.view.inputmethod.InputConnection r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

        if r1 == null goto label3;

        if z0 == 0 goto label1;

        $i4 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i5 = $i4 & 1073741824;

        if $i5 != 0 goto label3;

     label1:
        $i0 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i1 = $i0 & 255;

        if $i1 == 1 goto label3;

        r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r2 == null goto label2;

        $i2 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i3 = $i2 & 255;

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>($i3);

     label2:
        return 1;

     label3:
        return 0;
    }

    public void sendDownUpKeyEvents(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.view.inputmethod.InputConnection r1;
        long l1, $l2;
        android.view.KeyEvent $r2, $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 != null goto label1;

        return;

     label1:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = new android.view.KeyEvent;

        specialinvoke $r2.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, l1, 0, i0, 0, 0, -1, 0, 6);

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r2);

        $r3 = new android.view.KeyEvent;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke $r3.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, $l2, 1, i0, 0, 0, -1, 0, 6);

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r3);

        return;
    }

    public void sendKeyChar(char)
    {
        android.inputmethodservice.InputMethodService r0;
        char c0;
        android.view.inputmethod.InputConnection r1;
        boolean $z0;
        java.lang.String $r2;
        int $i1, $i2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        c0 := @parameter0: char;

        if c0 == 10 goto label2;

        if c0 < 48 goto label1;

        if c0 > 57 goto label1;

        $i1 = c0 - 48;

        $i2 = $i1 + 7;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>($i2);

        goto label3;

     label1:
        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label3;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>($r2, 1);

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean sendDefaultEditorAction(boolean)>(1);

        if $z0 != 0 goto label3;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>(66);

     label3:
        return;
    }

    public void setBackDisposition(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $i1 = r0.<android.inputmethodservice.InputMethodService: int mBackDisposition>;

        if i0 != $i1 goto label1;

        return;

     label1:
        if i0 > 3 goto label3;

        if i0 >= 0 goto label2;

        goto label3;

     label2:
        r0.<android.inputmethodservice.InputMethodService: int mBackDisposition> = i0;

        $i3 = specialinvoke r0.<android.inputmethodservice.InputMethodService: int mapToImeWindowStatus()>();

        $i4 = r0.<android.inputmethodservice.InputMethodService: int mBackDisposition>;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void setImeWindowStatus(int,int)>($i3, $i4);

        return;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid back disposition value (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") specified.");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InputMethodService", $r6);

        return;
    }

    public void setCandidatesView(android.view.View)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View r1;
        android.widget.FrameLayout $r2, $r4;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void removeAllViews()>();

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        $r3 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r3.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r3);

        return;
    }

    public void setCandidatesViewShown(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateCandidatesVisibility(boolean)>(z0);

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z1 != 0 goto label2;

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible>;

        if $z2 == z0 goto label2;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void showWindow(boolean)>(0);

        goto label2;

     label1:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void doHideWindow()>();

     label2:
        return;
    }

    public void setExtractView(android.view.View)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View r1, $r5, $r6, r9;
        android.widget.FrameLayout $r2, $r4;
        android.widget.FrameLayout$LayoutParams $r3;
        android.view.ViewGroup $r7;
        android.inputmethodservice.ExtractEditText r8;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void removeAllViews()>();

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame>;

        $r3 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r3.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r3);

        r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractView> = r1;

        if r1 == null goto label2;

        $r5 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16908325);

        r8 = (android.inputmethodservice.ExtractEditText) $r5;

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText> = r8;

        virtualinvoke r8.<android.inputmethodservice.ExtractEditText: void setIME(android.inputmethodservice.InputMethodService)>(r0);

        r9 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909077);

        r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractAction> = r9;

        if r9 == null goto label1;

        $r6 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909076);

        $r7 = (android.view.ViewGroup) $r6;

        r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories> = $r7;

     label1:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void startExtractingText(boolean)>(0);

        goto label3;

     label2:
        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText> = null;

        r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories> = null;

        r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractAction> = null;

     label3:
        return;
    }

    public void setExtractViewShown(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden>;

        if $z1 != z0 goto label1;

        $z2 = z0 ^ 1;

        r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden> = $z2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateExtractFrameVisibility()>();

     label1:
        return;
    }

    public void setInputView(android.view.View)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View r1;
        android.widget.FrameLayout $r2, $r4;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void removeAllViews()>();

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        $r3 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r3.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r3);

        r0.<android.inputmethodservice.InputMethodService: android.view.View mInputView> = r1;

        return;
    }

    public void setTheme(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.inputmethodservice.SoftInputWindow $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        if $r1 != null goto label1;

        r0.<android.inputmethodservice.InputMethodService: int mTheme> = i0;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called before onCreate()");

        throw $r2;
    }

    public final boolean shouldOfferSwitchingToNextInputMethod()
    {
        android.inputmethodservice.InputMethodService r0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        $z0 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: boolean shouldOfferSwitchingToNextInputMethod()>();

        return $z0;
    }

    public void showStatusIcon(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;
        java.lang.String $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r0.<android.inputmethodservice.InputMethodService: int mStatusIcon> = i0;

        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.String getPackageName()>();

        virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void updateStatusIcon(java.lang.String,int)>($r2, i0);

        return;
    }

    public void showWindow(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6, $z7, $z8, z9;
        byte b0, $b1, b4, b6;
        android.inputmethodservice.SoftInputWindow $r1;
        int $i2, i5;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z5 := @parameter0: boolean;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow>;

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodService", "Re-entrance in to showWindow");

        return;

     label01:
        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible>;

        r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewWasVisible> = $z2;

        r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow> = 1;

        $z3 = r0.<android.inputmethodservice.InputMethodService: boolean mIsPreRendered>;

        if $z3 == 0 goto label02;

        $z4 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        if $z4 != 0 goto label02;

        z6 = 1;

        goto label03;

     label02:
        z6 = 0;

     label03:
        z0 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible>;

        $z7 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>();

        if $z7 == 0 goto label05;

        if z6 == 0 goto label04;

        b4 = 4;

        goto label06;

     label04:
        b4 = 2;

        goto label06;

     label05:
        b4 = 0;

     label06:
        b6 = (byte) z0;

        b0 = b6 | b4;

        $z8 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean prepareWindow(boolean)>(z5);

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void startViews(boolean)>($z8);

        i5 = specialinvoke r0.<android.inputmethodservice.InputMethodService: int mapToImeWindowStatus()>();

        if b0 == i5 goto label07;

        $i2 = r0.<android.inputmethodservice.InputMethodService: int mBackDisposition>;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void setImeWindowStatus(int,int)>(i5, $i2);

     label07:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onWindowShown()>();

        z9 = r0.<android.inputmethodservice.InputMethodService: boolean mCanPreRender>;

        r0.<android.inputmethodservice.InputMethodService: boolean mIsPreRendered> = z9;

        if z9 == 0 goto label08;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onPreRenderedWindowVisibilityChanged(boolean)>(1);

        goto label09;

     label08:
        r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible> = 1;

     label09:
        $b1 = b0 & 1;

        if $b1 != 0 goto label10;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r1.<android.inputmethodservice.SoftInputWindow: void show()>();

     label10:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void maybeNotifyPreRendered()>();

        r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewWasVisible> = 1;

        r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow> = 0;

        return;
    }

    void startExtractingText(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2;
        android.inputmethodservice.ExtractEditText r1;
        android.view.inputmethod.InputConnection r2;
        int i0, $i1, $i2, $i3, $i5, i6, $i7;
        android.view.inputmethod.ExtractedTextRequest $r3;
        java.lang.StringBuilder $r4;
        android.view.inputmethod.ExtractedText $r6, $r11, r14, $r18;
        java.lang.String $r10;
        java.lang.Throwable $r12;
        android.view.inputmethod.EditorInfo r16;
        java.lang.CharSequence $r17;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        if r1 == null goto label12;

        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>();

        if $z1 == 0 goto label12;

        $z2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>();

        if $z2 == 0 goto label12;

        $i1 = r0.<android.inputmethodservice.InputMethodService: int mExtractedToken>;

        $i2 = $i1 + 1;

        r0.<android.inputmethodservice.InputMethodService: int mExtractedToken> = $i2;

        $r3 = new android.view.inputmethod.ExtractedTextRequest;

        specialinvoke $r3.<android.view.inputmethod.ExtractedTextRequest: void <init>()>();

        $i3 = r0.<android.inputmethodservice.InputMethodService: int mExtractedToken>;

        $r3.<android.view.inputmethod.ExtractedTextRequest: int token> = $i3;

        $r3.<android.view.inputmethod.ExtractedTextRequest: int flags> = 1;

        $r3.<android.view.inputmethod.ExtractedTextRequest: int hintMaxLines> = 10;

        $r3.<android.view.inputmethod.ExtractedTextRequest: int hintMaxChars> = 10000;

        r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r2 != null goto label01;

        r14 = null;

        goto label02;

     label01:
        r14 = interfaceinvoke r2.<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>($r3, 1);

     label02:
        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText> = r14;

        if r14 == null goto label03;

        if r2 != null goto label04;

     label03:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected null in startExtractingText : mExtractedText = ");

        $r6 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", input connection = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InputMethodService", $r10);

     label04:
        r16 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

     label05:
        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void startInternalChanges()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)>(r16);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)>(r16);

        i0 = r16.<android.view.inputmethod.EditorInfo: int inputType>;

     label06:
        i6 = i0;

        $i7 = i0 & 15;

        if $i7 != 1 goto label07;

        i6 = i0;

        $i5 = 262144 & i0;

        if $i5 == 0 goto label07;

        i6 = i0 | 131072;

     label07:
        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setInputType(int)>(i6);

        $r17 = r16.<android.view.inputmethod.EditorInfo: java.lang.CharSequence hintText>;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setHint(java.lang.CharSequence)>($r17);

        $r18 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        if $r18 == null goto label09;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setEnabled(boolean)>(1);

        $r11 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>($r11);

     label08:
        goto label10;

     label09:
        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setEnabled(boolean)>(0);

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setText(java.lang.CharSequence)>("");

     label10:
        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>();

        if z0 == 0 goto label12;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onExtractingInputChanged(android.view.inputmethod.EditorInfo)>(r16);

        goto label12;

     label11:
        $r12 := @caughtexception;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>();

        throw $r12;

     label12:
        return;

        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void switchInputMethod(java.lang.String)
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.String r1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        virtualinvoke $r2.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void setInputMethod(java.lang.String)>(r1);

        return;
    }

    public final void switchInputMethod(java.lang.String, android.view.inputmethod.InputMethodSubtype)
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.String r1;
        android.view.inputmethod.InputMethodSubtype r2;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype;

        $r3 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        virtualinvoke $r3.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: void setInputMethodAndSubtype(java.lang.String,android.view.inputmethod.InputMethodSubtype)>(r1, r2);

        return;
    }

    public final boolean switchToNextInputMethod(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        $z1 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: boolean switchToNextInputMethod(boolean)>(z0);

        return $z1;
    }

    public final boolean switchToPreviousInputMethod()
    {
        android.inputmethodservice.InputMethodService r0;
        com.android.internal.inputmethod.InputMethodPrivilegedOperations $r1;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: com.android.internal.inputmethod.InputMethodPrivilegedOperations mPrivOps>;

        $z0 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodPrivilegedOperations: boolean switchToPreviousInputMethod()>();

        return $z0;
    }

    void updateCandidatesVisibility(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;
        int $i0, i1;
        android.widget.FrameLayout $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        i1 = 0;

        goto label2;

     label1:
        i1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>();

     label2:
        $i0 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        if $i0 == i1 goto label3;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        virtualinvoke $r1.<android.widget.FrameLayout: void setVisibility(int)>(i1);

        r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility> = i1;

     label3:
        return;
    }

    void updateExtractFrameVisibility()
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1, i4;
        android.content.res.TypedArray r1;
        boolean $z0, $z1, $z2, z3;
        android.widget.FrameLayout $r2, $r6;
        android.view.ViewGroup $r3, $r4, $r7;
        android.view.animation.Animation $r5;
        byte b2, b3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>();

        if $z0 == 0 goto label3;

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden>;

        if $z2 == 0 goto label1;

        b2 = 4;

        goto label2;

     label1:
        b2 = 0;

     label2:
        $r6 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame>;

        virtualinvoke $r6.<android.widget.FrameLayout: void setVisibility(int)>(b2);

        goto label4;

     label3:
        b2 = 0;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void setVisibility(int)>(8);

     label4:
        i0 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        b3 = 1;

        if i0 != 0 goto label5;

        z3 = 1;

        goto label6;

     label5:
        z3 = 0;

     label6:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateCandidatesVisibility(boolean)>(z3);

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewWasVisible>;

        if $z1 == 0 goto label9;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        $i1 = virtualinvoke $r3.<android.view.ViewGroup: int getVisibility()>();

        if $i1 == b2 goto label9;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.content.res.TypedArray mThemeAttrs>;

        if b2 != 0 goto label7;

        goto label8;

     label7:
        b3 = 2;

     label8:
        i4 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(b3, 0);

        if i4 == 0 goto label9;

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        $r5 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, i4);

        virtualinvoke $r4.<android.view.ViewGroup: void startAnimation(android.view.animation.Animation)>($r5);

     label9:
        $r7 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        virtualinvoke $r7.<android.view.ViewGroup: void setVisibility(int)>(b2);

        return;
    }

    public void updateFullscreenMode()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, z10;
        android.view.ViewGroup $r1, $r3, $r4, $r6, $r7, $r12;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewParent $r5;
        android.inputmethodservice.SoftInputWindow $r8;
        android.view.Window $r9;
        android.view.View $r10, r15;
        android.content.res.TypedArray $r11;
        android.graphics.drawable.Drawable $r13;
        android.widget.LinearLayout$LayoutParams r14;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z0 == 0 goto label01;

        $z6 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>();

        if $z6 == 0 goto label01;

        z7 = 1;

        goto label02;

     label01:
        z7 = 0;

     label02:
        $z8 = r0.<android.inputmethodservice.InputMethodService: boolean mLastShowInputRequested>;

        $z9 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z8 == $z9 goto label03;

        z10 = 1;

        goto label04;

     label03:
        z10 = 0;

     label04:
        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen>;

        if $z1 != z7 goto label05;

        $z5 = r0.<android.inputmethodservice.InputMethodService: boolean mFullscreenApplied>;

        if $z5 != 0 goto label10;

     label05:
        z10 = 1;

        r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen> = z7;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void reportFullscreenMode()>();

        r0.<android.inputmethodservice.InputMethodService: boolean mFullscreenApplied> = 1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initialize()>();

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        $r2 = virtualinvoke $r1.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r14 = (android.widget.LinearLayout$LayoutParams) $r2;

        if z7 == 0 goto label06;

        $r12 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        $r11 = r0.<android.inputmethodservice.InputMethodService: android.content.res.TypedArray mThemeAttrs>;

        $r13 = virtualinvoke $r11.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke $r12.<android.view.ViewGroup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r13);

        r14.<android.widget.LinearLayout$LayoutParams: int height> = 0;

        r14.<android.widget.LinearLayout$LayoutParams: float weight> = 1.0F;

        goto label07;

     label06:
        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        virtualinvoke $r3.<android.view.ViewGroup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(null);

        r14.<android.widget.LinearLayout$LayoutParams: int height> = -2;

        r14.<android.widget.LinearLayout$LayoutParams: float weight> = 0.0F;

     label07:
        $r4 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        $r5 = virtualinvoke $r4.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        $r7 = (android.view.ViewGroup) $r5;

        $r6 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        virtualinvoke $r7.<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r6, r14);

        if z7 == 0 goto label09;

        $r10 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractView>;

        if $r10 != null goto label08;

        r15 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.View onCreateExtractTextView()>();

        if r15 == null goto label08;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setExtractView(android.view.View)>(r15);

     label08:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void startExtractingText(boolean)>(0);

     label09:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateExtractFrameVisibility()>();

     label10:
        if z10 == 0 goto label11;

        $r8 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r9 = virtualinvoke $r8.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        $z3 = 1 ^ $z2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onConfigureWindow(android.view.Window,boolean,boolean)>($r9, z7, $z3);

        $z4 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        r0.<android.inputmethodservice.InputMethodService: boolean mLastShowInputRequested> = $z4;

     label11:
        return;
    }

    public void updateInputViewShown()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1, z2, z3, $z4;
        android.view.View $r1, r3;
        byte b0;
        android.widget.FrameLayout r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z2 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        b0 = 0;

        if z2 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>();

        if $z1 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        $z4 = r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown>;

        if $z4 == z3 goto label5;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mDecorViewVisible>;

        if $z0 == 0 goto label5;

        r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown> = z3;

        r2 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        if z3 == 0 goto label3;

        goto label4;

     label3:
        b0 = 8;

     label4:
        virtualinvoke r2.<android.widget.FrameLayout: void setVisibility(int)>(b0);

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.View mInputView>;

        if $r1 != null goto label5;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initialize()>();

        r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()>();

        if r3 == null goto label5;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)>(r3);

     label5:
        return;
    }

    public static void <clinit>()
    {
        <android.inputmethodservice.InputMethodService: java.lang.String TAG> = "InputMethodService";

        <android.inputmethodservice.InputMethodService: int MOVEMENT_UP> = -2;

        <android.inputmethodservice.InputMethodService: int MOVEMENT_DOWN> = -1;

        <android.inputmethodservice.InputMethodService: int IME_VISIBLE> = 2;

        <android.inputmethodservice.InputMethodService: int IME_INVISIBLE> = 4;

        <android.inputmethodservice.InputMethodService: int IME_ACTIVE> = 1;

        <android.inputmethodservice.InputMethodService: boolean DEBUG> = 0;

        <android.inputmethodservice.InputMethodService: int BACK_DISPOSITION_WILL_NOT_DISMISS> = 1;

        <android.inputmethodservice.InputMethodService: int BACK_DISPOSITION_WILL_DISMISS> = 2;

        <android.inputmethodservice.InputMethodService: int BACK_DISPOSITION_MIN> = 0;

        <android.inputmethodservice.InputMethodService: int BACK_DISPOSITION_MAX> = 3;

        <android.inputmethodservice.InputMethodService: int BACK_DISPOSITION_DEFAULT> = 0;

        <android.inputmethodservice.InputMethodService: int BACK_DISPOSITION_ADJUST_NOTHING> = 3;

        return;
    }
}
