public class android.inputmethodservice.Keyboard$Key extends java.lang.Object
{
    private static final int[] KEY_STATE_NORMAL;
    private static final int[] KEY_STATE_NORMAL_OFF;
    private static final int[] KEY_STATE_NORMAL_ON;
    private static final int[] KEY_STATE_PRESSED;
    private static final int[] KEY_STATE_PRESSED_OFF;
    private static final int[] KEY_STATE_PRESSED_ON;
    public int[] codes;
    public int edgeFlags;
    public int gap;
    public int height;
    public android.graphics.drawable.Drawable icon;
    public android.graphics.drawable.Drawable iconPreview;
    private android.inputmethodservice.Keyboard keyboard;
    public java.lang.CharSequence label;
    public boolean modifier;
    public boolean on;
    public java.lang.CharSequence popupCharacters;
    public int popupResId;
    public boolean pressed;
    public boolean repeatable;
    public boolean sticky;
    public java.lang.CharSequence text;
    public int width;
    public int x;
    public int y;

    static void <clinit>()
    {
        int[] $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = newarray (int)[2];

        $r0[0] = 16842911;

        $r0[1] = 16842912;

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL_ON> = $r0;

        $r1 = newarray (int)[3];

        $r1[0] = 16842919;

        $r1[1] = 16842911;

        $r1[2] = 16842912;

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED_ON> = $r1;

        $r2 = newarray (int)[1];

        $r2[0] = 16842911;

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL_OFF> = $r2;

        $r3 = newarray (int)[2];

        $r3[0] = 16842919;

        $r3[1] = 16842911;

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED_OFF> = $r3;

        $r4 = newarray (int)[0];

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL> = $r4;

        $r5 = newarray (int)[1];

        $r5[0] = 16842919;

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED> = $r5;

        return;
    }

    public void <init>(android.content.res.Resources, android.inputmethodservice.Keyboard$Row, int, int, android.content.res.XmlResourceParser)
    {
        android.inputmethodservice.Keyboard$Key r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26;
        android.content.res.TypedArray r1, r26;
        android.util.AttributeSet $r2, $r7;
        int[] $r3, $r8, $r10, $r14, $r16, $r22;
        android.inputmethodservice.Keyboard $r4, $r5, $r6;
        android.util.TypedValue $r9;
        java.lang.CharSequence $r11, $r12, $r13, $r15, $r17, $r20;
        boolean $z1, $z2, $z3, $z4;
        char $c18;
        android.graphics.drawable.Drawable $r18, $r19, r28, r29;
        java.lang.String $r21;
        android.content.res.Resources r23;
        android.inputmethodservice.Keyboard$Row r24;
        android.content.res.XmlResourceParser r25;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        r23 := @parameter0: android.content.res.Resources;

        r24 := @parameter1: android.inputmethodservice.Keyboard$Row;

        i25 := @parameter2: int;

        i0 := @parameter3: int;

        r25 := @parameter4: android.content.res.XmlResourceParser;

        specialinvoke r0.<android.inputmethodservice.Keyboard$Key: void <init>(android.inputmethodservice.Keyboard$Row)>(r24);

        r0.<android.inputmethodservice.Keyboard$Key: int x> = i25;

        r0.<android.inputmethodservice.Keyboard$Key: int y> = i0;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r25);

        $r3 = <com.android.internal.R$styleable: int[] Keyboard>;

        r1 = virtualinvoke r23.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $r4 = r0.<android.inputmethodservice.Keyboard$Key: android.inputmethodservice.Keyboard keyboard>;

        $i1 = staticinvoke <android.inputmethodservice.Keyboard: int access$000(android.inputmethodservice.Keyboard)>($r4);

        $i2 = r24.<android.inputmethodservice.Keyboard$Row: int defaultWidth>;

        $i3 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>(r1, 0, $i1, $i2);

        r0.<android.inputmethodservice.Keyboard$Key: int width> = $i3;

        $r5 = r0.<android.inputmethodservice.Keyboard$Key: android.inputmethodservice.Keyboard keyboard>;

        $i4 = staticinvoke <android.inputmethodservice.Keyboard: int access$200(android.inputmethodservice.Keyboard)>($r5);

        $i5 = r24.<android.inputmethodservice.Keyboard$Row: int defaultHeight>;

        $i6 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>(r1, 1, $i4, $i5);

        r0.<android.inputmethodservice.Keyboard$Key: int height> = $i6;

        $r6 = r0.<android.inputmethodservice.Keyboard$Key: android.inputmethodservice.Keyboard keyboard>;

        $i7 = staticinvoke <android.inputmethodservice.Keyboard: int access$000(android.inputmethodservice.Keyboard)>($r6);

        $i8 = r24.<android.inputmethodservice.Keyboard$Row: int defaultHorizontalGap>;

        $i9 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>(r1, 2, $i7, $i8);

        r0.<android.inputmethodservice.Keyboard$Key: int gap> = $i9;

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        $r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r25);

        $r8 = <com.android.internal.R$styleable: int[] Keyboard_Key>;

        r26 = virtualinvoke r23.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r7, $r8);

        $i11 = r0.<android.inputmethodservice.Keyboard$Key: int x>;

        $i10 = r0.<android.inputmethodservice.Keyboard$Key: int gap>;

        $i12 = $i11 + $i10;

        r0.<android.inputmethodservice.Keyboard$Key: int x> = $i12;

        $r9 = new android.util.TypedValue;

        specialinvoke $r9.<android.util.TypedValue: void <init>()>();

        virtualinvoke r26.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(0, $r9);

        $i13 = $r9.<android.util.TypedValue: int type>;

        if $i13 == 16 goto label2;

        $i23 = $r9.<android.util.TypedValue: int type>;

        if $i23 != 17 goto label1;

        goto label2;

     label1:
        $i24 = $r9.<android.util.TypedValue: int type>;

        if $i24 != 3 goto label3;

        $r20 = $r9.<android.util.TypedValue: java.lang.CharSequence string>;

        $r21 = interfaceinvoke $r20.<java.lang.CharSequence: java.lang.String toString()>();

        $r22 = virtualinvoke r0.<android.inputmethodservice.Keyboard$Key: int[] parseCSV(java.lang.String)>($r21);

        r0.<android.inputmethodservice.Keyboard$Key: int[] codes> = $r22;

        goto label3;

     label2:
        $r10 = newarray (int)[1];

        $i14 = $r9.<android.util.TypedValue: int data>;

        $r10[0] = $i14;

        r0.<android.inputmethodservice.Keyboard$Key: int[] codes> = $r10;

     label3:
        r28 = virtualinvoke r26.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(7);

        r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable iconPreview> = r28;

        if r28 == null goto label4;

        $i21 = virtualinvoke r28.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r19 = r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable iconPreview>;

        $i22 = virtualinvoke $r19.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r28.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i21, $i22);

     label4:
        $r11 = virtualinvoke r26.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(2);

        r0.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence popupCharacters> = $r11;

        $i15 = virtualinvoke r26.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        r0.<android.inputmethodservice.Keyboard$Key: int popupResId> = $i15;

        $z1 = virtualinvoke r26.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        r0.<android.inputmethodservice.Keyboard$Key: boolean repeatable> = $z1;

        $z2 = virtualinvoke r26.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        r0.<android.inputmethodservice.Keyboard$Key: boolean modifier> = $z2;

        $z3 = virtualinvoke r26.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        r0.<android.inputmethodservice.Keyboard$Key: boolean sticky> = $z3;

        i26 = virtualinvoke r26.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags> = i26;

        $i16 = r24.<android.inputmethodservice.Keyboard$Row: int rowEdgeFlags>;

        $i17 = i26 | $i16;

        r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags> = $i17;

        r29 = virtualinvoke r26.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(10);

        r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable icon> = r29;

        if r29 == null goto label5;

        $i19 = virtualinvoke r29.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r18 = r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable icon>;

        $i20 = virtualinvoke $r18.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r29.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i19, $i20);

     label5:
        $r12 = virtualinvoke r26.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(9);

        r0.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence label> = $r12;

        $r13 = virtualinvoke r26.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(8);

        r0.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence text> = $r13;

        $r14 = r0.<android.inputmethodservice.Keyboard$Key: int[] codes>;

        if $r14 != null goto label6;

        $r15 = r0.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence label>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r15);

        if $z4 != 0 goto label6;

        $r16 = newarray (int)[1];

        $r17 = r0.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence label>;

        $c18 = interfaceinvoke $r17.<java.lang.CharSequence: char charAt(int)>(0);

        $r16[0] = $c18;

        r0.<android.inputmethodservice.Keyboard$Key: int[] codes> = $r16;

     label6:
        virtualinvoke r26.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.inputmethodservice.Keyboard$Row)
    {
        android.inputmethodservice.Keyboard$Key r0;
        android.inputmethodservice.Keyboard$Row r1;
        android.inputmethodservice.Keyboard $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        r1 := @parameter0: android.inputmethodservice.Keyboard$Row;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.inputmethodservice.Keyboard$Row: android.inputmethodservice.Keyboard access$600(android.inputmethodservice.Keyboard$Row)>(r1);

        r0.<android.inputmethodservice.Keyboard$Key: android.inputmethodservice.Keyboard keyboard> = $r2;

        $i0 = r1.<android.inputmethodservice.Keyboard$Row: int defaultHeight>;

        r0.<android.inputmethodservice.Keyboard$Key: int height> = $i0;

        $i1 = r1.<android.inputmethodservice.Keyboard$Row: int defaultWidth>;

        r0.<android.inputmethodservice.Keyboard$Key: int width> = $i1;

        $i2 = r1.<android.inputmethodservice.Keyboard$Row: int defaultHorizontalGap>;

        r0.<android.inputmethodservice.Keyboard$Key: int gap> = $i2;

        $i3 = r1.<android.inputmethodservice.Keyboard$Row: int rowEdgeFlags>;

        r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags> = $i3;

        return;
    }

    public int[] getCurrentDrawableState()
    {
        android.inputmethodservice.Keyboard$Key r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        int[] r1;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        r1 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL>;

        $z0 = r0.<android.inputmethodservice.Keyboard$Key: boolean on>;

        if $z0 == 0 goto label2;

        $z4 = r0.<android.inputmethodservice.Keyboard$Key: boolean pressed>;

        if $z4 == 0 goto label1;

        r1 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED_ON>;

        goto label5;

     label1:
        r1 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL_ON>;

        goto label5;

     label2:
        $z1 = r0.<android.inputmethodservice.Keyboard$Key: boolean sticky>;

        if $z1 == 0 goto label4;

        $z3 = r0.<android.inputmethodservice.Keyboard$Key: boolean pressed>;

        if $z3 == 0 goto label3;

        r1 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED_OFF>;

        goto label5;

     label3:
        r1 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL_OFF>;

        goto label5;

     label4:
        $z2 = r0.<android.inputmethodservice.Keyboard$Key: boolean pressed>;

        if $z2 == 0 goto label5;

        r1 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED>;

     label5:
        return r1;
    }

    public boolean isInside(int, int)
    {
        android.inputmethodservice.Keyboard$Key r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21;
        boolean z0, z1, z2, z3;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        i18 := @parameter0: int;

        i0 := @parameter1: int;

        $i2 = r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags>;

        $i3 = $i2 & 1;

        if $i3 <= 0 goto label01;

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        $i4 = r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags>;

        $i5 = $i4 & 2;

        if $i5 <= 0 goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        $i6 = r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags>;

        $i7 = $i6 & 4;

        if $i7 <= 0 goto label05;

        z2 = 1;

        goto label06;

     label05:
        z2 = 0;

     label06:
        $i8 = r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags>;

        $i9 = $i8 & 8;

        if $i9 <= 0 goto label07;

        z3 = 1;

        goto label08;

     label07:
        z3 = 0;

     label08:
        i1 = r0.<android.inputmethodservice.Keyboard$Key: int x>;

        if i18 >= i1 goto label09;

        if z0 == 0 goto label12;

        $i16 = r0.<android.inputmethodservice.Keyboard$Key: int width>;

        $i17 = i1 + $i16;

        if i18 > $i17 goto label12;

     label09:
        i19 = r0.<android.inputmethodservice.Keyboard$Key: int x>;

        $i10 = r0.<android.inputmethodservice.Keyboard$Key: int width>;

        $i11 = $i10 + i19;

        if i18 < $i11 goto label10;

        if z1 == 0 goto label12;

        if i18 < i19 goto label12;

     label10:
        i20 = r0.<android.inputmethodservice.Keyboard$Key: int y>;

        if i0 >= i20 goto label11;

        if z2 == 0 goto label12;

        $i14 = r0.<android.inputmethodservice.Keyboard$Key: int height>;

        $i15 = i20 + $i14;

        if i0 > $i15 goto label12;

     label11:
        i21 = r0.<android.inputmethodservice.Keyboard$Key: int y>;

        $i12 = r0.<android.inputmethodservice.Keyboard$Key: int height>;

        $i13 = $i12 + i21;

        if i0 < $i13 goto label13;

        if z3 == 0 goto label12;

        if i0 < i21 goto label12;

        goto label13;

     label12:
        return 0;

     label13:
        return 1;
    }

    public void onPressed()
    {
        android.inputmethodservice.Keyboard$Key r0;
        boolean $z0, $z1;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        $z0 = r0.<android.inputmethodservice.Keyboard$Key: boolean pressed>;

        $z1 = $z0 ^ 1;

        r0.<android.inputmethodservice.Keyboard$Key: boolean pressed> = $z1;

        return;
    }

    public void onReleased(boolean)
    {
        android.inputmethodservice.Keyboard$Key r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.inputmethodservice.Keyboard$Key: boolean pressed>;

        $z2 = $z1 ^ 1;

        r0.<android.inputmethodservice.Keyboard$Key: boolean pressed> = $z2;

        $z3 = r0.<android.inputmethodservice.Keyboard$Key: boolean sticky>;

        if $z3 == 0 goto label1;

        if z0 == 0 goto label1;

        $z4 = r0.<android.inputmethodservice.Keyboard$Key: boolean on>;

        $z5 = $z4 ^ 1;

        r0.<android.inputmethodservice.Keyboard$Key: boolean on> = $z5;

     label1:
        return;
    }

    int[] parseCSV(java.lang.String)
    {
        android.inputmethodservice.Keyboard$Key r0;
        java.lang.String r1, $r5, $r10;
        int i0, $i1, $i2, $i3, i5, i6, i7, i8;
        int[] r2;
        java.util.StringTokenizer $r4;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7;
        boolean $z0;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        r1 := @parameter0: java.lang.String;

        i5 = 0;

        i6 = 0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        i7 = 0 + 1;

     label1:
        $i3 = i6 + 1;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(",", $i3);

        i6 = i0;

        i5 = i7;

        if i0 <= 0 goto label2;

        i7 = i7 + 1;

        goto label1;

     label2:
        r2 = newarray (int)[i5];

        i8 = 0;

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");

     label3:
        $z0 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label8;

     label4:
        $r5 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        r2[i8] = $i2;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing keycodes ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Keyboard", $r10);

     label7:
        i8 = i8 + 1;

        goto label3;

     label8:
        return r2;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public int squaredDistanceFrom(int, int)
    {
        android.inputmethodservice.Keyboard$Key r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        i11 := @parameter0: int;

        i12 := @parameter1: int;

        $i2 = r0.<android.inputmethodservice.Keyboard$Key: int x>;

        $i0 = r0.<android.inputmethodservice.Keyboard$Key: int width>;

        $i1 = $i0 / 2;

        $i3 = $i2 + $i1;

        i13 = $i3 - i11;

        $i6 = r0.<android.inputmethodservice.Keyboard$Key: int y>;

        $i4 = r0.<android.inputmethodservice.Keyboard$Key: int height>;

        $i5 = $i4 / 2;

        $i7 = $i6 + $i5;

        i14 = $i7 - i12;

        $i9 = i13 * i13;

        $i8 = i14 * i14;

        $i10 = $i9 + $i8;

        return $i10;
    }
}
