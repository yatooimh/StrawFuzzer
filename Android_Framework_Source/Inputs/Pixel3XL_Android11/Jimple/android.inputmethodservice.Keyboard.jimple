public class android.inputmethodservice.Keyboard extends java.lang.Object
{
    public static final int EDGE_BOTTOM;
    public static final int EDGE_LEFT;
    public static final int EDGE_RIGHT;
    public static final int EDGE_TOP;
    private static final int GRID_HEIGHT;
    private static final int GRID_SIZE;
    private static final int GRID_WIDTH;
    public static final int KEYCODE_ALT;
    public static final int KEYCODE_CANCEL;
    public static final int KEYCODE_DELETE;
    public static final int KEYCODE_DONE;
    public static final int KEYCODE_MODE_CHANGE;
    public static final int KEYCODE_SHIFT;
    private static float SEARCH_DISTANCE;
    static final java.lang.String TAG;
    private static final java.lang.String TAG_KEY;
    private static final java.lang.String TAG_KEYBOARD;
    private static final java.lang.String TAG_ROW;
    private int mCellHeight;
    private int mCellWidth;
    private int mDefaultHeight;
    private int mDefaultHorizontalGap;
    private int mDefaultVerticalGap;
    private int mDefaultWidth;
    private int mDisplayHeight;
    private int mDisplayWidth;
    private int[][] mGridNeighbors;
    private int mKeyHeight;
    private int mKeyWidth;
    private int mKeyboardMode;
    private java.util.List mKeys;
    private java.lang.CharSequence mLabel;
    private java.util.List mModifierKeys;
    private int mProximityThreshold;
    private int[] mShiftKeyIndices;
    private android.inputmethodservice.Keyboard$Key[] mShiftKeys;
    private boolean mShifted;
    private int mTotalHeight;
    private int mTotalWidth;
    private java.util.ArrayList rows;

    static void <clinit>()
    {
        <android.inputmethodservice.Keyboard: java.lang.String TAG_ROW> = "Row";

        <android.inputmethodservice.Keyboard: java.lang.String TAG_KEYBOARD> = "Keyboard";

        <android.inputmethodservice.Keyboard: java.lang.String TAG_KEY> = "Key";

        <android.inputmethodservice.Keyboard: java.lang.String TAG> = "Keyboard";

        <android.inputmethodservice.Keyboard: int KEYCODE_SHIFT> = -1;

        <android.inputmethodservice.Keyboard: int KEYCODE_MODE_CHANGE> = -2;

        <android.inputmethodservice.Keyboard: int KEYCODE_DONE> = -4;

        <android.inputmethodservice.Keyboard: int KEYCODE_DELETE> = -5;

        <android.inputmethodservice.Keyboard: int KEYCODE_CANCEL> = -3;

        <android.inputmethodservice.Keyboard: int KEYCODE_ALT> = -6;

        <android.inputmethodservice.Keyboard: int GRID_WIDTH> = 10;

        <android.inputmethodservice.Keyboard: int GRID_SIZE> = 50;

        <android.inputmethodservice.Keyboard: int GRID_HEIGHT> = 5;

        <android.inputmethodservice.Keyboard: int EDGE_TOP> = 4;

        <android.inputmethodservice.Keyboard: int EDGE_RIGHT> = 2;

        <android.inputmethodservice.Keyboard: int EDGE_LEFT> = 1;

        <android.inputmethodservice.Keyboard: int EDGE_BOTTOM> = 8;

        <android.inputmethodservice.Keyboard: float SEARCH_DISTANCE> = 1.8F;

        return;
    }

    public void <init>(android.content.Context, int)
    {
        android.inputmethodservice.Keyboard r0;
        android.content.Context r1;
        int i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int)>(r1, i0, 0);

        return;
    }

    public void <init>(android.content.Context, int, int)
    {
        android.inputmethodservice.Keyboard r0;
        android.content.Context r1;
        int i0, i1, i2, $i3, $i4, $i5;
        android.util.DisplayMetrics r2;
        android.inputmethodservice.Keyboard$Key[] $r3;
        int[] $r4;
        java.util.ArrayList $r5, $r7, $r8;
        android.content.res.Resources $r6, $r9;
        android.content.res.XmlResourceParser $r10;

        r0 := @this: android.inputmethodservice.Keyboard;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (android.inputmethodservice.Keyboard$Key)[2];

        $r3[0] = null;

        $r3[1] = null;

        r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key[] mShiftKeys> = $r3;

        $r4 = newarray (int)[2];

        $r4[0] = -1;

        $r4[1] = -1;

        r0.<android.inputmethodservice.Keyboard: int[] mShiftKeyIndices> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.inputmethodservice.Keyboard: java.util.ArrayList rows> = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i3 = r2.<android.util.DisplayMetrics: int widthPixels>;

        r0.<android.inputmethodservice.Keyboard: int mDisplayWidth> = $i3;

        $i4 = r2.<android.util.DisplayMetrics: int heightPixels>;

        r0.<android.inputmethodservice.Keyboard: int mDisplayHeight> = $i4;

        r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap> = 0;

        $i5 = r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        i2 = $i5 / 10;

        r0.<android.inputmethodservice.Keyboard: int mDefaultWidth> = i2;

        r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap> = 0;

        r0.<android.inputmethodservice.Keyboard: int mDefaultHeight> = i2;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.inputmethodservice.Keyboard: java.util.List mKeys> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.inputmethodservice.Keyboard: java.util.List mModifierKeys> = $r8;

        r0.<android.inputmethodservice.Keyboard: int mKeyboardMode> = i1;

        $r9 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        specialinvoke r0.<android.inputmethodservice.Keyboard: void loadKeyboard(android.content.Context,android.content.res.XmlResourceParser)>(r1, $r10);

        return;
    }

    public void <init>(android.content.Context, int, int, int, int)
    {
        android.inputmethodservice.Keyboard r0;
        android.content.Context r1;
        int i0, i1, i2, i3, i4;
        android.inputmethodservice.Keyboard$Key[] $r2;
        int[] $r3;
        java.util.ArrayList $r4, $r5, $r6;
        android.content.res.Resources $r7;
        android.content.res.XmlResourceParser $r8;

        r0 := @this: android.inputmethodservice.Keyboard;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (android.inputmethodservice.Keyboard$Key)[2];

        $r2[0] = null;

        $r2[1] = null;

        r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key[] mShiftKeys> = $r2;

        $r3 = newarray (int)[2];

        $r3[0] = -1;

        $r3[1] = -1;

        r0.<android.inputmethodservice.Keyboard: int[] mShiftKeyIndices> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.inputmethodservice.Keyboard: java.util.ArrayList rows> = $r4;

        r0.<android.inputmethodservice.Keyboard: int mDisplayWidth> = i3;

        r0.<android.inputmethodservice.Keyboard: int mDisplayHeight> = i2;

        r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap> = 0;

        i4 = i3 / 10;

        r0.<android.inputmethodservice.Keyboard: int mDefaultWidth> = i4;

        r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap> = 0;

        r0.<android.inputmethodservice.Keyboard: int mDefaultHeight> = i4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.inputmethodservice.Keyboard: java.util.List mKeys> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.inputmethodservice.Keyboard: java.util.List mModifierKeys> = $r6;

        r0.<android.inputmethodservice.Keyboard: int mKeyboardMode> = i1;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        specialinvoke r0.<android.inputmethodservice.Keyboard: void loadKeyboard(android.content.Context,android.content.res.XmlResourceParser)>(r1, $r8);

        return;
    }

    public void <init>(android.content.Context, int, java.lang.CharSequence, int, int)
    {
        android.inputmethodservice.Keyboard r0;
        java.lang.CharSequence r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i20, i21, i22, $i23, i24, i25, $i26, $i27, $i28, $i29;
        char c1;
        android.inputmethodservice.Keyboard$Row $r3;
        java.util.ArrayList $r4, $r11;
        android.content.Context r5;
        android.inputmethodservice.Keyboard$Key $r7;
        java.lang.String $r8;
        int[] $r9;
        java.util.List $r10;

        r0 := @this: android.inputmethodservice.Keyboard;

        r5 := @parameter0: android.content.Context;

        i15 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        i16 := @parameter3: int;

        i0 := @parameter4: int;

        specialinvoke r0.<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int)>(r5, i15);

        i17 = 0;

        i18 = 0;

        r0.<android.inputmethodservice.Keyboard: int mTotalWidth> = 0;

        $r3 = new android.inputmethodservice.Keyboard$Row;

        specialinvoke $r3.<android.inputmethodservice.Keyboard$Row: void <init>(android.inputmethodservice.Keyboard)>(r0);

        $i2 = r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        $r3.<android.inputmethodservice.Keyboard$Row: int defaultHeight> = $i2;

        $i3 = r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        $r3.<android.inputmethodservice.Keyboard$Row: int defaultWidth> = $i3;

        $i4 = r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap>;

        $r3.<android.inputmethodservice.Keyboard$Row: int defaultHorizontalGap> = $i4;

        $i5 = r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap>;

        $r3.<android.inputmethodservice.Keyboard$Row: int verticalGap> = $i5;

        $r3.<android.inputmethodservice.Keyboard$Row: int rowEdgeFlags> = 12;

        if i16 != -1 goto label1;

        i20 = 2147483647;

        goto label2;

     label1:
        i20 = i16;

     label2:
        i21 = 0;

        i22 = 0;

     label3:
        $i23 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if i21 >= $i23 goto label7;

        c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i21);

        if i22 >= i20 goto label4;

        i24 = i17;

        i25 = i18;

        $i11 = r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        $i12 = $i11 + i17;

        $i14 = $i12 + i0;

        $i13 = r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        if $i14 <= $i13 goto label5;

     label4:
        i24 = 0;

        $i9 = r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap>;

        $i8 = r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        $i10 = $i9 + $i8;

        i25 = i18 + $i10;

        i22 = 0;

     label5:
        $r7 = new android.inputmethodservice.Keyboard$Key;

        specialinvoke $r7.<android.inputmethodservice.Keyboard$Key: void <init>(android.inputmethodservice.Keyboard$Row)>($r3);

        $r7.<android.inputmethodservice.Keyboard$Key: int x> = i24;

        $r7.<android.inputmethodservice.Keyboard$Key: int y> = i25;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c1);

        $r7.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence label> = $r8;

        $r9 = newarray (int)[1];

        $r9[0] = c1;

        $r7.<android.inputmethodservice.Keyboard$Key: int[] codes> = $r9;

        i22 = i22 + 1;

        $i26 = $r7.<android.inputmethodservice.Keyboard$Key: int width>;

        $i27 = $r7.<android.inputmethodservice.Keyboard$Key: int gap>;

        $i28 = $i26 + $i27;

        i17 = i24 + $i28;

        $r10 = r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r11 = $r3.<android.inputmethodservice.Keyboard$Row: java.util.ArrayList mKeys>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i29 = r0.<android.inputmethodservice.Keyboard: int mTotalWidth>;

        if i17 <= $i29 goto label6;

        r0.<android.inputmethodservice.Keyboard: int mTotalWidth> = i17;

     label6:
        i21 = i21 + 1;

        i18 = i25;

        goto label3;

     label7:
        $i6 = r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        $i7 = $i6 + i18;

        r0.<android.inputmethodservice.Keyboard: int mTotalHeight> = $i7;

        $r4 = r0.<android.inputmethodservice.Keyboard: java.util.ArrayList rows>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return;
    }

    static int access$000(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @parameter0: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        return $i0;
    }

    static int access$100(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @parameter0: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        return $i0;
    }

    static int access$200(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @parameter0: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mDisplayHeight>;

        return $i0;
    }

    static int access$300(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @parameter0: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        return $i0;
    }

    static int access$400(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @parameter0: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap>;

        return $i0;
    }

    static int access$500(android.inputmethodservice.Keyboard)
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @parameter0: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap>;

        return $i0;
    }

    private void computeNearestNeighbors()
    {
        android.inputmethodservice.Keyboard r0;
        int[] r1, r9;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, i41, i42, i43, i44, i45;
        int[][] r2, $r3;
        java.util.List $r4, $r5, $r6;
        java.lang.Object $r7;
        android.inputmethodservice.Keyboard$Key r8;

        r0 := @this: android.inputmethodservice.Keyboard;

        $i2 = virtualinvoke r0.<android.inputmethodservice.Keyboard: int getMinWidth()>();

        $i3 = $i2 + 10;

        $i4 = $i3 - 1;

        $i5 = $i4 / 10;

        r0.<android.inputmethodservice.Keyboard: int mCellWidth> = $i5;

        $i6 = virtualinvoke r0.<android.inputmethodservice.Keyboard: int getHeight()>();

        $i7 = $i6 + 5;

        $i8 = $i7 - 1;

        $i9 = $i8 / 5;

        r0.<android.inputmethodservice.Keyboard: int mCellHeight> = $i9;

        $r3 = newarray (int[])[50];

        r0.<android.inputmethodservice.Keyboard: int[][] mGridNeighbors> = $r3;

        $r4 = r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        $i10 = interfaceinvoke $r4.<java.util.List: int size()>();

        r1 = newarray (int)[$i10];

        i0 = r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        i1 = r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        i40 = 0;

     label1:
        $i11 = i0 * 10;

        if i40 >= $i11 goto label8;

        i41 = 0;

     label2:
        $i12 = i1 * 5;

        if i41 >= $i12 goto label7;

        i42 = 0;

        i43 = 0;

     label3:
        $r5 = r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        $i14 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i43 >= $i14 goto label6;

        $r6 = r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i43);

        r8 = (android.inputmethodservice.Keyboard$Key) $r7;

        $i20 = virtualinvoke r8.<android.inputmethodservice.Keyboard$Key: int squaredDistanceFrom(int,int)>(i40, i41);

        $i21 = r0.<android.inputmethodservice.Keyboard: int mProximityThreshold>;

        if $i20 < $i21 goto label4;

        $i22 = r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        $i23 = $i22 + i40;

        $i24 = $i23 - 1;

        $i25 = virtualinvoke r8.<android.inputmethodservice.Keyboard$Key: int squaredDistanceFrom(int,int)>($i24, i41);

        $i26 = r0.<android.inputmethodservice.Keyboard: int mProximityThreshold>;

        if $i25 < $i26 goto label4;

        $i27 = r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        $i28 = $i27 + i40;

        $i32 = $i28 - 1;

        $i29 = r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        $i30 = $i29 + i41;

        $i31 = $i30 - 1;

        $i33 = virtualinvoke r8.<android.inputmethodservice.Keyboard$Key: int squaredDistanceFrom(int,int)>($i32, $i31);

        $i34 = r0.<android.inputmethodservice.Keyboard: int mProximityThreshold>;

        if $i33 < $i34 goto label4;

        i44 = i42;

        $i35 = r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        $i36 = $i35 + i41;

        $i37 = $i36 - 1;

        $i38 = virtualinvoke r8.<android.inputmethodservice.Keyboard$Key: int squaredDistanceFrom(int,int)>(i40, $i37);

        $i39 = r0.<android.inputmethodservice.Keyboard: int mProximityThreshold>;

        if $i38 >= $i39 goto label5;

     label4:
        r1[i42] = i43;

        i44 = i42 + 1;

     label5:
        i43 = i43 + 1;

        i42 = i44;

        goto label3;

     label6:
        r9 = newarray (int)[i42];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r9, 0, i42);

        r2 = r0.<android.inputmethodservice.Keyboard: int[][] mGridNeighbors>;

        i45 = r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        $i15 = i41 / i45;

        $i18 = $i15 * 10;

        $i16 = r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        $i17 = i40 / $i16;

        $i19 = $i18 + $i17;

        r2[$i19] = r9;

        i41 = i41 + i45;

        goto label2;

     label7:
        $i13 = r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        i40 = i40 + $i13;

        goto label1;

     label8:
        return;
    }

    static int getDimensionOrFraction(android.content.res.TypedArray, int, int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.util.TypedValue r1;
        float $f0, $f1;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        if r1 != null goto label1;

        return i2;

     label1:
        $i3 = r1.<android.util.TypedValue: int type>;

        if $i3 != 5 goto label2;

        $i6 = virtualinvoke r0.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i0, i2);

        return $i6;

     label2:
        $i4 = r1.<android.util.TypedValue: int type>;

        if $i4 != 6 goto label3;

        $f0 = (float) i2;

        $f1 = virtualinvoke r0.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(i0, i1, i1, $f0);

        $i5 = staticinvoke <java.lang.Math: int round(float)>($f1);

        return $i5;

     label3:
        return i2;
    }

    private void loadKeyboard(android.content.Context, android.content.res.XmlResourceParser)
    {
        android.inputmethodservice.Keyboard r0;
        android.content.res.Resources r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, $i24, $i25;
        java.lang.String r2, $r3, $r4, $r5, $r35;
        boolean $z1, z7, z8, z9, z10, z11, z12;
        java.util.List $r6, $r9, $r11, $r15;
        int[] $r7, $r8, $r16;
        android.inputmethodservice.Keyboard$Key[] $r10, $r12, $r14;
        android.inputmethodservice.Keyboard$Key $r13, r29;
        java.util.ArrayList $r17, $r32;
        java.lang.Exception $r18, $r21, $r22, $r23, $r24, $r25, $r26, r31;
        android.content.Context r27;
        android.content.res.XmlResourceParser r28;
        android.inputmethodservice.Keyboard$Row r30;
        java.lang.StringBuilder $r33;

        r0 := @this: android.inputmethodservice.Keyboard;

        r27 := @parameter0: android.content.Context;

        r28 := @parameter1: android.content.res.XmlResourceParser;

        r1 = virtualinvoke r27.<android.content.Context: android.content.res.Resources getResources()>();

        i13 = 0;

        i14 = 0;

        z7 = 0;

        z8 = 0;

        r29 = null;

        r30 = null;

     label01:
        i0 = interfaceinvoke r28.<android.content.res.XmlResourceParser: int next()>();

     label02:
        if i0 == 1 goto label44;

        if i0 != 2 goto label31;

     label03:
        r2 = interfaceinvoke r28.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r3 = "Row";

        z9 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

     label04:
        if z9 == 0 goto label14;

     label05:
        r30 = virtualinvoke r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Row createRowFromXml(android.content.res.Resources,android.content.res.XmlResourceParser)>(r1, r28);

        $r17 = r0.<android.inputmethodservice.Keyboard: java.util.ArrayList rows>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r30);

        $i10 = r30.<android.inputmethodservice.Keyboard$Row: int mode>;

        if $i10 == 0 goto label07;

        i15 = r30.<android.inputmethodservice.Keyboard$Row: int mode>;

        i16 = r0.<android.inputmethodservice.Keyboard: int mKeyboardMode>;

     label06:
        if i15 == i16 goto label07;

        z10 = 1;

        goto label08;

     label07:
        z10 = 0;

     label08:
        if z10 == 0 goto label12;

     label09:
        specialinvoke r0.<android.inputmethodservice.Keyboard: void skipToEndOfRow(android.content.res.XmlResourceParser)>(r28);

     label10:
        i13 = 0;

        z7 = 0;

        goto label30;

     label11:
        $r22 := @caughtexception;

        r31 = $r22;

        goto label46;

     label12:
        i13 = 0;

        z7 = 1;

        goto label30;

     label13:
        $r26 := @caughtexception;

        r31 = $r26;

        goto label46;

     label14:
        $r4 = "Key";

        z11 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

     label15:
        if z11 == 0 goto label29;

        i17 = i14;

     label16:
        r29 = virtualinvoke r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard$Row,int,int,android.content.res.XmlResourceParser)>(r1, r30, i13, i14, r28);

     label17:
        $r6 = r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r29);

        $r7 = r29.<android.inputmethodservice.Keyboard$Key: int[] codes>;

        $i5 = $r7[0];

        if $i5 != -1 goto label24;

     label18:
        i18 = 0;

     label19:
        $r10 = r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key[] mShiftKeys>;

        $i7 = lengthof $r10;

        if i18 >= $i7 goto label22;

        $r12 = r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key[] mShiftKeys>;

        $r13 = $r12[i18];

        if $r13 != null goto label21;

        $r14 = r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key[] mShiftKeys>;

        $r14[i18] = r29;

        $r16 = r0.<android.inputmethodservice.Keyboard: int[] mShiftKeyIndices>;

        $r15 = r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        $i8 = interfaceinvoke $r15.<java.util.List: int size()>();

        $i9 = $i8 - 1;

        $r16[i18] = $i9;

     label20:
        goto label22;

     label21:
        i18 = i18 + 1;

        goto label19;

     label22:
        $r11 = r0.<android.inputmethodservice.Keyboard: java.util.List mModifierKeys>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r29);

     label23:
        goto label25;

     label24:
        $r8 = r29.<android.inputmethodservice.Keyboard$Key: int[] codes>;

        $i6 = $r8[0];

        if $i6 != -6 goto label25;

        $r9 = r0.<android.inputmethodservice.Keyboard: java.util.List mModifierKeys>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r29);

     label25:
        $r32 = r30.<android.inputmethodservice.Keyboard$Row: java.util.ArrayList mKeys>;

        virtualinvoke $r32.<java.util.ArrayList: boolean add(java.lang.Object)>(r29);

     label26:
        z8 = 1;

        goto label30;

     label27:
        $r25 := @caughtexception;

        r31 = $r25;

        i14 = i17;

        goto label46;

     label28:
        $r24 := @caughtexception;

        r31 = $r24;

        i14 = i17;

        goto label46;

     label29:
        $r5 = "Keyboard";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label30;

        specialinvoke r0.<android.inputmethodservice.Keyboard: void parseKeyboardAttributes(android.content.res.Resources,android.content.res.XmlResourceParser)>(r1, r28);

     label30:
        goto label01;

     label31:
        i19 = i14;

        z12 = z8;

        i20 = i13;

        if i0 != 3 goto label43;

        if z8 == 0 goto label37;

     label32:
        $i2 = r29.<android.inputmethodservice.Keyboard$Key: int gap>;

        $i1 = r29.<android.inputmethodservice.Keyboard$Key: int width>;

        $i3 = $i2 + $i1;

        i21 = i13 + $i3;

     label33:
        z12 = 0;

        i20 = i21;

     label34:
        $i4 = r0.<android.inputmethodservice.Keyboard: int mTotalWidth>;

        if i21 <= $i4 goto label43;

        r0.<android.inputmethodservice.Keyboard: int mTotalWidth> = i21;

     label35:
        z12 = 0;

        i20 = i21;

        goto label43;

     label36:
        $r21 := @caughtexception;

        r31 = $r21;

        goto label46;

     label37:
        z12 = z8;

        i20 = i13;

        if z7 == 0 goto label43;

        z7 = 0;

     label38:
        i22 = r30.<android.inputmethodservice.Keyboard$Row: int verticalGap>;

     label39:
        i14 = i14 + i22;

     label40:
        i23 = r30.<android.inputmethodservice.Keyboard$Row: int defaultHeight>;

     label41:
        i14 = i23 + i14;

        goto label01;

     label42:
        $r18 := @caughtexception;

        r31 = $r18;

        goto label46;

     label43:
        i14 = i19;

        z8 = z12;

        i13 = i20;

        goto label01;

     label44:
        goto label47;

     label45:
        $r23 := @caughtexception;

        r31 = $r23;

     label46:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse error:");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Keyboard", $r35);

        virtualinvoke r31.<java.lang.Exception: void printStackTrace()>();

     label47:
        $i24 = r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap>;

        $i25 = i14 - $i24;

        r0.<android.inputmethodservice.Keyboard: int mTotalHeight> = $i25;

        return;

        catch java.lang.Exception from label01 to label02 with label45;
        catch java.lang.Exception from label03 to label04 with label45;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label14 to label15 with label45;
        catch java.lang.Exception from label16 to label17 with label28;
        catch java.lang.Exception from label17 to label18 with label27;
        catch java.lang.Exception from label19 to label20 with label27;
        catch java.lang.Exception from label22 to label23 with label27;
        catch java.lang.Exception from label24 to label25 with label27;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Exception from label29 to label30 with label36;
        catch java.lang.Exception from label32 to label33 with label36;
        catch java.lang.Exception from label34 to label35 with label36;
        catch java.lang.Exception from label38 to label39 with label36;
        catch java.lang.Exception from label40 to label41 with label42;
    }

    private void parseKeyboardAttributes(android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.inputmethodservice.Keyboard r0;
        android.content.res.XmlResourceParser r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        float $f0, $f1, $f2;
        android.content.res.Resources r4;
        android.content.res.TypedArray r5;

        r0 := @this: android.inputmethodservice.Keyboard;

        r4 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.XmlResourceParser;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r3 = <com.android.internal.R$styleable: int[] Keyboard>;

        r5 = virtualinvoke r4.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        i10 = r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        $i0 = i10 / 10;

        $i1 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>(r5, 0, i10, $i0);

        r0.<android.inputmethodservice.Keyboard: int mDefaultWidth> = $i1;

        $i2 = r0.<android.inputmethodservice.Keyboard: int mDisplayHeight>;

        $i3 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>(r5, 1, $i2, 50);

        r0.<android.inputmethodservice.Keyboard: int mDefaultHeight> = $i3;

        $i4 = r0.<android.inputmethodservice.Keyboard: int mDisplayWidth>;

        $i5 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>(r5, 2, $i4, 0);

        r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap> = $i5;

        $i6 = r0.<android.inputmethodservice.Keyboard: int mDisplayHeight>;

        $i7 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>(r5, 3, $i6, 0);

        r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap> = $i7;

        $i8 = r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        $f1 = (float) $i8;

        $f0 = <android.inputmethodservice.Keyboard: float SEARCH_DISTANCE>;

        $f2 = $f1 * $f0;

        i11 = (int) $f2;

        r0.<android.inputmethodservice.Keyboard: int mProximityThreshold> = i11;

        $i9 = i11 * i11;

        r0.<android.inputmethodservice.Keyboard: int mProximityThreshold> = $i9;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void skipToEndOfRow(android.content.res.XmlResourceParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.inputmethodservice.Keyboard r0;
        android.content.res.XmlResourceParser r1;
        int i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: android.inputmethodservice.Keyboard;

        r1 := @parameter0: android.content.res.XmlResourceParser;

     label1:
        i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int next()>();

        if i0 == 1 goto label2;

        if i0 != 3 goto label1;

        $r2 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("Row");

        if $z0 == 0 goto label1;

     label2:
        return;
    }

    protected android.inputmethodservice.Keyboard$Key createKeyFromXml(android.content.res.Resources, android.inputmethodservice.Keyboard$Row, int, int, android.content.res.XmlResourceParser)
    {
        android.inputmethodservice.Keyboard r0;
        android.content.res.Resources r1;
        android.inputmethodservice.Keyboard$Row r2;
        int i0, i1;
        android.content.res.XmlResourceParser r3;
        android.inputmethodservice.Keyboard$Key $r4;

        r0 := @this: android.inputmethodservice.Keyboard;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.inputmethodservice.Keyboard$Row;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.content.res.XmlResourceParser;

        $r4 = new android.inputmethodservice.Keyboard$Key;

        specialinvoke $r4.<android.inputmethodservice.Keyboard$Key: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard$Row,int,int,android.content.res.XmlResourceParser)>(r1, r2, i0, i1, r3);

        return $r4;
    }

    protected android.inputmethodservice.Keyboard$Row createRowFromXml(android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        android.inputmethodservice.Keyboard r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        android.inputmethodservice.Keyboard$Row $r3;

        r0 := @this: android.inputmethodservice.Keyboard;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        $r3 = new android.inputmethodservice.Keyboard$Row;

        specialinvoke $r3.<android.inputmethodservice.Keyboard$Row: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard,android.content.res.XmlResourceParser)>(r1, r0, r2);

        return $r3;
    }

    public int getHeight()
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mTotalHeight>;

        return $i0;
    }

    protected int getHorizontalGap()
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap>;

        return $i0;
    }

    protected int getKeyHeight()
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mDefaultHeight>;

        return $i0;
    }

    protected int getKeyWidth()
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mDefaultWidth>;

        return $i0;
    }

    public java.util.List getKeys()
    {
        android.inputmethodservice.Keyboard r0;
        java.util.List $r1;

        r0 := @this: android.inputmethodservice.Keyboard;

        $r1 = r0.<android.inputmethodservice.Keyboard: java.util.List mKeys>;

        return $r1;
    }

    public int getMinWidth()
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mTotalWidth>;

        return $i0;
    }

    public java.util.List getModifierKeys()
    {
        android.inputmethodservice.Keyboard r0;
        java.util.List $r1;

        r0 := @this: android.inputmethodservice.Keyboard;

        $r1 = r0.<android.inputmethodservice.Keyboard: java.util.List mModifierKeys>;

        return $r1;
    }

    public int[] getNearestKeys(int, int)
    {
        android.inputmethodservice.Keyboard r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        int[][] $r1, $r2;
        int[] $r3, $r4;

        r0 := @this: android.inputmethodservice.Keyboard;

        i8 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<android.inputmethodservice.Keyboard: int[][] mGridNeighbors>;

        if $r1 != null goto label1;

        specialinvoke r0.<android.inputmethodservice.Keyboard: void computeNearestNeighbors()>();

     label1:
        if i8 < 0 goto label2;

        $i1 = virtualinvoke r0.<android.inputmethodservice.Keyboard: int getMinWidth()>();

        if i8 >= $i1 goto label2;

        if i0 < 0 goto label2;

        $i2 = virtualinvoke r0.<android.inputmethodservice.Keyboard: int getHeight()>();

        if i0 >= $i2 goto label2;

        $i3 = r0.<android.inputmethodservice.Keyboard: int mCellHeight>;

        $i4 = i0 / $i3;

        $i7 = $i4 * 10;

        $i5 = r0.<android.inputmethodservice.Keyboard: int mCellWidth>;

        $i6 = i8 / $i5;

        i9 = $i7 + $i6;

        if i9 >= 50 goto label2;

        $r2 = r0.<android.inputmethodservice.Keyboard: int[][] mGridNeighbors>;

        $r3 = $r2[i9];

        return $r3;

     label2:
        $r4 = newarray (int)[0];

        return $r4;
    }

    public int getShiftKeyIndex()
    {
        android.inputmethodservice.Keyboard r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        $r1 = r0.<android.inputmethodservice.Keyboard: int[] mShiftKeyIndices>;

        $i0 = $r1[0];

        return $i0;
    }

    public int[] getShiftKeyIndices()
    {
        android.inputmethodservice.Keyboard r0;
        int[] $r1;

        r0 := @this: android.inputmethodservice.Keyboard;

        $r1 = r0.<android.inputmethodservice.Keyboard: int[] mShiftKeyIndices>;

        return $r1;
    }

    protected int getVerticalGap()
    {
        android.inputmethodservice.Keyboard r0;
        int $i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        $i0 = r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap>;

        return $i0;
    }

    public boolean isShifted()
    {
        android.inputmethodservice.Keyboard r0;
        boolean $z0;

        r0 := @this: android.inputmethodservice.Keyboard;

        $z0 = r0.<android.inputmethodservice.Keyboard: boolean mShifted>;

        return $z0;
    }

    final void resize(int, int)
    {
        android.inputmethodservice.Keyboard r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i19, i20;
        android.inputmethodservice.Keyboard$Row r1;
        float f0, $f1, $f2, $f3, $f4;
        java.util.ArrayList $r2, $r3, $r5, $r6, $r8;
        java.lang.Object $r4, $r7, $r9;
        android.inputmethodservice.Keyboard$Key r10, r11;

        r0 := @this: android.inputmethodservice.Keyboard;

        i0 := @parameter0: int;

        i12 := @parameter1: int;

        $r2 = r0.<android.inputmethodservice.Keyboard: java.util.ArrayList rows>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i13 = 0;

     label1:
        if i13 >= i1 goto label7;

        $r3 = r0.<android.inputmethodservice.Keyboard: java.util.ArrayList rows>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r1 = (android.inputmethodservice.Keyboard$Row) $r4;

        $r5 = r1.<android.inputmethodservice.Keyboard$Row: java.util.ArrayList mKeys>;

        i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i14 = 0;

        i15 = 0;

        i16 = 0;

     label2:
        if i16 >= i2 goto label4;

        $r8 = r1.<android.inputmethodservice.Keyboard$Row: java.util.ArrayList mKeys>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r10 = (android.inputmethodservice.Keyboard$Key) $r9;

        i17 = i14;

        if i16 <= 0 goto label3;

        $i11 = r10.<android.inputmethodservice.Keyboard$Key: int gap>;

        i17 = i14 + $i11;

     label3:
        $i10 = r10.<android.inputmethodservice.Keyboard$Key: int width>;

        i15 = i15 + $i10;

        i16 = i16 + 1;

        i14 = i17;

        goto label2;

     label4:
        $i3 = i14 + i15;

        if $i3 <= i0 goto label6;

        $i4 = i0 - i14;

        $f2 = (float) $i4;

        $f1 = (float) i15;

        f0 = $f2 / $f1;

        i19 = 0;

        i20 = 0;

     label5:
        if i19 >= i2 goto label6;

        $r6 = r1.<android.inputmethodservice.Keyboard$Row: java.util.ArrayList mKeys>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i19);

        r11 = (android.inputmethodservice.Keyboard$Key) $r7;

        $i5 = r11.<android.inputmethodservice.Keyboard$Key: int width>;

        $f3 = (float) $i5;

        $f4 = $f3 * f0;

        $i6 = (int) $f4;

        r11.<android.inputmethodservice.Keyboard$Key: int width> = $i6;

        r11.<android.inputmethodservice.Keyboard$Key: int x> = i20;

        $i8 = r11.<android.inputmethodservice.Keyboard$Key: int width>;

        $i7 = r11.<android.inputmethodservice.Keyboard$Key: int gap>;

        $i9 = $i8 + $i7;

        i20 = i20 + $i9;

        i19 = i19 + 1;

        goto label5;

     label6:
        i13 = i13 + 1;

        goto label1;

     label7:
        r0.<android.inputmethodservice.Keyboard: int mTotalWidth> = i0;

        return;
    }

    protected void setHorizontalGap(int)
    {
        android.inputmethodservice.Keyboard r0;
        int i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        i0 := @parameter0: int;

        r0.<android.inputmethodservice.Keyboard: int mDefaultHorizontalGap> = i0;

        return;
    }

    protected void setKeyHeight(int)
    {
        android.inputmethodservice.Keyboard r0;
        int i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        i0 := @parameter0: int;

        r0.<android.inputmethodservice.Keyboard: int mDefaultHeight> = i0;

        return;
    }

    protected void setKeyWidth(int)
    {
        android.inputmethodservice.Keyboard r0;
        int i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        i0 := @parameter0: int;

        r0.<android.inputmethodservice.Keyboard: int mDefaultWidth> = i0;

        return;
    }

    public boolean setShifted(boolean)
    {
        android.inputmethodservice.Keyboard r0;
        boolean z0, $z1;
        android.inputmethodservice.Keyboard$Key[] r1;
        int i0, i1;
        android.inputmethodservice.Keyboard$Key r2;

        r0 := @this: android.inputmethodservice.Keyboard;

        z0 := @parameter0: boolean;

        r1 = r0.<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key[] mShiftKeys>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        if r2 == null goto label2;

        r2.<android.inputmethodservice.Keyboard$Key: boolean on> = z0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z1 = r0.<android.inputmethodservice.Keyboard: boolean mShifted>;

        if $z1 == z0 goto label4;

        r0.<android.inputmethodservice.Keyboard: boolean mShifted> = z0;

        return 1;

     label4:
        return 0;
    }

    protected void setVerticalGap(int)
    {
        android.inputmethodservice.Keyboard r0;
        int i0;

        r0 := @this: android.inputmethodservice.Keyboard;

        i0 := @parameter0: int;

        r0.<android.inputmethodservice.Keyboard: int mDefaultVerticalGap> = i0;

        return;
    }
}
