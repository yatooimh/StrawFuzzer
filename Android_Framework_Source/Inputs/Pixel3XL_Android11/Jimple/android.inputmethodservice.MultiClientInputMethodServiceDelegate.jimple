public final class android.inputmethodservice.MultiClientInputMethodServiceDelegate extends java.lang.Object
{
    public static final int INVALID_CLIENT_ID;
    public static final int INVALID_WINDOW_HANDLE;
    public static final java.lang.String SERVICE_INTERFACE;
    private final android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl mImpl;

    private void <init>(android.content.Context, android.inputmethodservice.MultiClientInputMethodServiceDelegate$ServiceCallback)
    {
        android.inputmethodservice.MultiClientInputMethodServiceDelegate r0;
        android.content.Context r1;
        android.inputmethodservice.MultiClientInputMethodServiceDelegate$ServiceCallback r2;
        android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl $r3;

        r0 := @this: android.inputmethodservice.MultiClientInputMethodServiceDelegate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.inputmethodservice.MultiClientInputMethodServiceDelegate$ServiceCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl;

        specialinvoke $r3.<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl: void <init>(android.content.Context,android.inputmethodservice.MultiClientInputMethodServiceDelegate$ServiceCallback)>(r1, r2);

        r0.<android.inputmethodservice.MultiClientInputMethodServiceDelegate: android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl mImpl> = $r3;

        return;
    }

    public static android.inputmethodservice.MultiClientInputMethodServiceDelegate create(android.content.Context, android.inputmethodservice.MultiClientInputMethodServiceDelegate$ServiceCallback)
    {
        android.content.Context r0;
        android.inputmethodservice.MultiClientInputMethodServiceDelegate$ServiceCallback r1;
        android.inputmethodservice.MultiClientInputMethodServiceDelegate $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.inputmethodservice.MultiClientInputMethodServiceDelegate$ServiceCallback;

        $r2 = new android.inputmethodservice.MultiClientInputMethodServiceDelegate;

        specialinvoke $r2.<android.inputmethodservice.MultiClientInputMethodServiceDelegate: void <init>(android.content.Context,android.inputmethodservice.MultiClientInputMethodServiceDelegate$ServiceCallback)>(r0, r1);

        return $r2;
    }

    public void acceptClient(int, android.inputmethodservice.MultiClientInputMethodServiceDelegate$ClientCallback, android.view.KeyEvent$DispatcherState, android.os.Looper)
    {
        android.inputmethodservice.MultiClientInputMethodServiceDelegate r0;
        int i0;
        android.inputmethodservice.MultiClientInputMethodServiceDelegate$ClientCallback r1;
        android.view.KeyEvent$DispatcherState r2;
        android.os.Looper r3;
        android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl $r4;

        r0 := @this: android.inputmethodservice.MultiClientInputMethodServiceDelegate;

        i0 := @parameter0: int;

        r1 := @parameter1: android.inputmethodservice.MultiClientInputMethodServiceDelegate$ClientCallback;

        r2 := @parameter2: android.view.KeyEvent$DispatcherState;

        r3 := @parameter3: android.os.Looper;

        $r4 = r0.<android.inputmethodservice.MultiClientInputMethodServiceDelegate: android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl mImpl>;

        virtualinvoke $r4.<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl: void acceptClient(int,android.inputmethodservice.MultiClientInputMethodServiceDelegate$ClientCallback,android.view.KeyEvent$DispatcherState,android.os.Looper)>(i0, r1, r2, r3);

        return;
    }

    public android.os.IBinder createInputMethodWindowToken(int)
    {
        android.inputmethodservice.MultiClientInputMethodServiceDelegate r0;
        int i0;
        android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl $r1;
        android.os.IBinder $r2;

        r0 := @this: android.inputmethodservice.MultiClientInputMethodServiceDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<android.inputmethodservice.MultiClientInputMethodServiceDelegate: android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl mImpl>;

        $r2 = virtualinvoke $r1.<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl: android.os.IBinder createInputMethodWindowToken(int)>(i0);

        return $r2;
    }

    public boolean isUidAllowedOnDisplay(int, int)
    {
        android.inputmethodservice.MultiClientInputMethodServiceDelegate r0;
        int i0, i1;
        android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl $r1;
        boolean $z0;

        r0 := @this: android.inputmethodservice.MultiClientInputMethodServiceDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.inputmethodservice.MultiClientInputMethodServiceDelegate: android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl mImpl>;

        $z0 = virtualinvoke $r1.<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl: boolean isUidAllowedOnDisplay(int,int)>(i0, i1);

        return $z0;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.inputmethodservice.MultiClientInputMethodServiceDelegate r0;
        android.content.Intent r1;
        android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl $r2;
        android.os.IBinder $r3;

        r0 := @this: android.inputmethodservice.MultiClientInputMethodServiceDelegate;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.inputmethodservice.MultiClientInputMethodServiceDelegate: android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl mImpl>;

        $r3 = virtualinvoke $r2.<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl: android.os.IBinder onBind(android.content.Intent)>(r1);

        return $r3;
    }

    public void onDestroy()
    {
        android.inputmethodservice.MultiClientInputMethodServiceDelegate r0;
        android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl $r1;

        r0 := @this: android.inputmethodservice.MultiClientInputMethodServiceDelegate;

        $r1 = r0.<android.inputmethodservice.MultiClientInputMethodServiceDelegate: android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl mImpl>;

        virtualinvoke $r1.<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl: void onDestroy()>();

        return;
    }

    public boolean onUnbind(android.content.Intent)
    {
        android.inputmethodservice.MultiClientInputMethodServiceDelegate r0;
        android.content.Intent r1;
        android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl $r2;
        boolean $z0;

        r0 := @this: android.inputmethodservice.MultiClientInputMethodServiceDelegate;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.inputmethodservice.MultiClientInputMethodServiceDelegate: android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl mImpl>;

        $z0 = virtualinvoke $r2.<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl: boolean onUnbind(android.content.Intent)>(r1);

        return $z0;
    }

    public void reportImeWindowTarget(int, int, android.os.IBinder)
    {
        android.inputmethodservice.MultiClientInputMethodServiceDelegate r0;
        int i0, i1;
        android.os.IBinder r1;
        android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl $r2;

        r0 := @this: android.inputmethodservice.MultiClientInputMethodServiceDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.IBinder;

        $r2 = r0.<android.inputmethodservice.MultiClientInputMethodServiceDelegate: android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl mImpl>;

        virtualinvoke $r2.<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl: void reportImeWindowTarget(int,int,android.os.IBinder)>(i0, i1, r1);

        return;
    }

    public void setActive(int, boolean)
    {
        android.inputmethodservice.MultiClientInputMethodServiceDelegate r0;
        int i0;
        boolean z0;
        android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl $r1;

        r0 := @this: android.inputmethodservice.MultiClientInputMethodServiceDelegate;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.inputmethodservice.MultiClientInputMethodServiceDelegate: android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl mImpl>;

        virtualinvoke $r1.<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl: void setActive(int,boolean)>(i0, z0);

        return;
    }

    public static void <clinit>()
    {
        <android.inputmethodservice.MultiClientInputMethodServiceDelegate: java.lang.String SERVICE_INTERFACE> = "android.inputmethodservice.MultiClientInputMethodService";

        <android.inputmethodservice.MultiClientInputMethodServiceDelegate: int INVALID_WINDOW_HANDLE> = -1;

        <android.inputmethodservice.MultiClientInputMethodServiceDelegate: int INVALID_CLIENT_ID> = -1;

        return;
    }
}
