abstract class android.location.AbstractListenerManager extends java.lang.Object
{
    private volatile android.util.ArrayMap mListeners;
    private final java.lang.Object mLock;
    private java.lang.Object mMergedRequest;

    void <init>()
    {
        android.location.AbstractListenerManager r0;
        java.lang.Object $r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.location.AbstractListenerManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.location.AbstractListenerManager: java.lang.Object mLock> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners> = $r2;

        return;
    }

    private boolean addInternal(java.lang.Object, android.location.AbstractListenerManager$Registration) throws android.os.RemoteException
    {
        android.location.AbstractListenerManager r0;
        android.location.AbstractListenerManager$Registration r1, r13;
        java.lang.Object r2, $r8, $r9, $r10, r12, r14;
        boolean z0, $z2;
        android.util.ArrayMap r3, $r5, $r6, $r7;
        int $i0, $i1;
        java.lang.Throwable $r11;

        r0 := @this: android.location.AbstractListenerManager;

        r12 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.location.AbstractListenerManager$Registration;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = r0.<android.location.AbstractListenerManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r5 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        r3 = new android.util.ArrayMap;

        $r6 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        $i0 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        $i1 = $i0 + 1;

        specialinvoke r3.<android.util.ArrayMap: void <init>(int)>($i1);

        $r7 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        virtualinvoke r3.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>($r7);

        $r8 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, r1);

        r13 = (android.location.AbstractListenerManager$Registration) $r8;

        r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners> = r3;

     label02:
        if r13 == null goto label04;

     label03:
        staticinvoke <android.location.AbstractListenerManager$Registration: void access$100(android.location.AbstractListenerManager$Registration)>(r13);

     label04:
        r14 = specialinvoke r0.<android.location.AbstractListenerManager: java.lang.Object mergeRequests()>();

     label05:
        if z0 != 0 goto label07;

     label06:
        $r10 = r0.<android.location.AbstractListenerManager: java.lang.Object mMergedRequest>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r14, $r10);

        if $z2 != 0 goto label11;

     label07:
        r0.<android.location.AbstractListenerManager: java.lang.Object mMergedRequest> = r14;

     label08:
        if z0 != 0 goto label10;

     label09:
        virtualinvoke r0.<android.location.AbstractListenerManager: void unregisterService()>();

     label10:
        $r9 = r0.<android.location.AbstractListenerManager: java.lang.Object mMergedRequest>;

        virtualinvoke r0.<android.location.AbstractListenerManager: boolean registerService(java.lang.Object)>($r9);

     label11:
        exitmonitor r2;

     label12:
        return 1;

     label13:
        $r11 := @caughtexception;

     label14:
        exitmonitor r2;

     label15:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private java.lang.Object mergeRequests()
    {
        android.location.AbstractListenerManager r0;
        java.lang.Object $r2, $r8, $r10, $r12, $r14, $r16;
        boolean $z0, $z1;
        android.util.ArrayMap $r3, $r4, $r6, $r7, $r9, $r13;
        int $i0, $i1, $i2, i3;
        java.util.ArrayList $r5;
        android.location.AbstractListenerManager$Registration $r11, $r15;

        r0 := @this: android.location.AbstractListenerManager;

        $r2 = r0.<android.location.AbstractListenerManager: java.lang.Object mLock>;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r2);

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>($z0);

        $r3 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        $z1 = virtualinvoke $r3.<android.util.ArrayMap: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r4 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        $i0 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        if $i0 != 1 goto label2;

        $r13 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(0);

        $r15 = (android.location.AbstractListenerManager$Registration) $r14;

        $r16 = virtualinvoke $r15.<android.location.AbstractListenerManager$Registration: java.lang.Object getRequest()>();

        return $r16;

     label2:
        $r5 = new java.util.ArrayList;

        $r6 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        $i1 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i1);

        i3 = 0;

     label3:
        $r7 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        $i2 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        if i3 >= $i2 goto label4;

        $r9 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        $r11 = (android.location.AbstractListenerManager$Registration) $r10;

        $r12 = virtualinvoke $r11.<android.location.AbstractListenerManager$Registration: java.lang.Object getRequest()>();

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        i3 = i3 + 1;

        goto label3;

     label4:
        $r8 = virtualinvoke r0.<android.location.AbstractListenerManager: java.lang.Object merge(java.util.List)>($r5);

        return $r8;
    }

    protected final boolean addInternal(java.lang.Object, java.lang.Object, android.os.Handler) throws android.os.RemoteException
    {
        android.location.AbstractListenerManager r0;
        java.lang.Object r1, r2;
        android.os.Handler r3;
        android.os.HandlerExecutor $r4;
        boolean $z0;

        r0 := @this: android.location.AbstractListenerManager;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: android.os.Handler;

        $r4 = new android.os.HandlerExecutor;

        specialinvoke $r4.<android.os.HandlerExecutor: void <init>(android.os.Handler)>(r3);

        $z0 = virtualinvoke r0.<android.location.AbstractListenerManager: boolean addInternal(java.lang.Object,java.lang.Object,java.util.concurrent.Executor)>(r1, r2, $r4);

        return $z0;
    }

    protected final boolean addInternal(java.lang.Object, java.lang.Object, java.util.concurrent.Executor) throws android.os.RemoteException
    {
        android.location.AbstractListenerManager r0;
        java.lang.Object r1, r2, $r5;
        java.util.concurrent.Executor r3;
        android.location.AbstractListenerManager$Registration $r4;
        boolean $z0, z1;

        r0 := @this: android.location.AbstractListenerManager;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.concurrent.Executor;

        if r2 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, "invalid null listener/callback");

        $r4 = new android.location.AbstractListenerManager$Registration;

        $r5 = virtualinvoke r0.<android.location.AbstractListenerManager: java.lang.Object convertKey(java.lang.Object)>(r2);

        specialinvoke $r4.<android.location.AbstractListenerManager$Registration: void <init>(java.lang.Object,java.util.concurrent.Executor,java.lang.Object,android.location.AbstractListenerManager$1)>(r1, r3, $r5, null);

        $z0 = specialinvoke r0.<android.location.AbstractListenerManager: boolean addInternal(java.lang.Object,android.location.AbstractListenerManager$Registration)>(r2, $r4);

        return $z0;
    }

    public boolean addListener(java.lang.Object, android.os.Handler) throws android.os.RemoteException
    {
        android.location.AbstractListenerManager r0;
        java.lang.Object r1;
        android.os.Handler r2;
        boolean $z0;

        r0 := @this: android.location.AbstractListenerManager;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.os.Handler;

        $z0 = virtualinvoke r0.<android.location.AbstractListenerManager: boolean addInternal(java.lang.Object,java.lang.Object,android.os.Handler)>(null, r1, r2);

        return $z0;
    }

    public boolean addListener(java.lang.Object, java.lang.Object, android.os.Handler) throws android.os.RemoteException
    {
        android.location.AbstractListenerManager r0;
        java.lang.Object r1, r2;
        android.os.Handler r3;
        boolean $z0;

        r0 := @this: android.location.AbstractListenerManager;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: android.os.Handler;

        $z0 = virtualinvoke r0.<android.location.AbstractListenerManager: boolean addInternal(java.lang.Object,java.lang.Object,android.os.Handler)>(r1, r2, r3);

        return $z0;
    }

    public boolean addListener(java.lang.Object, java.lang.Object, java.util.concurrent.Executor) throws android.os.RemoteException
    {
        android.location.AbstractListenerManager r0;
        java.lang.Object r1, r2;
        java.util.concurrent.Executor r3;
        boolean $z0;

        r0 := @this: android.location.AbstractListenerManager;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.concurrent.Executor;

        $z0 = virtualinvoke r0.<android.location.AbstractListenerManager: boolean addInternal(java.lang.Object,java.lang.Object,java.util.concurrent.Executor)>(r1, r2, r3);

        return $z0;
    }

    public boolean addListener(java.lang.Object, java.util.concurrent.Executor) throws android.os.RemoteException
    {
        android.location.AbstractListenerManager r0;
        java.lang.Object r1;
        java.util.concurrent.Executor r2;
        boolean $z0;

        r0 := @this: android.location.AbstractListenerManager;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.concurrent.Executor;

        $z0 = virtualinvoke r0.<android.location.AbstractListenerManager: boolean addInternal(java.lang.Object,java.lang.Object,java.util.concurrent.Executor)>(null, r1, r2);

        return $z0;
    }

    protected java.lang.Object convertKey(java.lang.Object)
    {
        android.location.AbstractListenerManager r0;
        java.lang.Object r1;

        r0 := @this: android.location.AbstractListenerManager;

        r1 := @parameter0: java.lang.Object;

        return r1;
    }

    protected void execute(java.util.function.Consumer)
    {
        android.location.AbstractListenerManager r0;
        java.util.function.Consumer r1;
        java.util.Iterator r2;
        android.util.ArrayMap $r3;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.location.AbstractListenerManager$Registration $r6;

        r0 := @this: android.location.AbstractListenerManager;

        r1 := @parameter0: java.util.function.Consumer;

        $r3 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.location.AbstractListenerManager$Registration) $r5;

        staticinvoke <android.location.AbstractListenerManager$Registration: void access$200(android.location.AbstractListenerManager$Registration,java.util.function.Consumer)>($r6, r1);

        goto label1;

     label2:
        return;
    }

    protected java.lang.Object merge(java.util.List)
    {
        android.location.AbstractListenerManager r0;
        boolean $z0, z1;
        java.lang.Object $r1;
        java.util.List r2;
        java.util.Iterator r3;

        r0 := @this: android.location.AbstractListenerManager;

        r2 := @parameter0: java.util.List;

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r1 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        if $r1 != null goto label2;

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, "merge() has to be overridden for non-null requests.");

        goto label1;

     label4:
        return null;
    }

    protected abstract boolean registerService(java.lang.Object) throws android.os.RemoteException;

    public void removeListener(java.lang.Object) throws android.os.RemoteException
    {
        android.location.AbstractListenerManager r0;
        java.lang.Object r1, $r4, $r6, r8, r10;
        android.util.ArrayMap r2, $r3, $r5;
        boolean z0, $z2, z3;
        java.lang.Throwable $r7;
        android.location.AbstractListenerManager$Registration r9;

        r0 := @this: android.location.AbstractListenerManager;

        r8 := @parameter0: java.lang.Object;

        r1 = r0.<android.location.AbstractListenerManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = new android.util.ArrayMap;

        $r3 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        specialinvoke r2.<android.util.ArrayMap: void <init>(android.util.ArrayMap)>($r3);

        $r4 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r8);

        r9 = (android.location.AbstractListenerManager$Registration) $r4;

        r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners> = r2;

     label02:
        if r9 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        staticinvoke <android.location.AbstractListenerManager$Registration: void access$100(android.location.AbstractListenerManager$Registration)>(r9);

        $r5 = r0.<android.location.AbstractListenerManager: android.util.ArrayMap mListeners>;

        z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

     label06:
        if z0 == 0 goto label07;

        r10 = null;

        goto label08;

     label07:
        r10 = specialinvoke r0.<android.location.AbstractListenerManager: java.lang.Object mergeRequests()>();

     label08:
        if z0 != 0 goto label11;

     label09:
        $r6 = r0.<android.location.AbstractListenerManager: java.lang.Object mMergedRequest>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r10, $r6);

        if $z2 != 0 goto label11;

     label10:
        z3 = 1;

        goto label12;

     label11:
        z3 = 0;

     label12:
        if z0 != 0 goto label13;

        if z3 == 0 goto label16;

     label13:
        virtualinvoke r0.<android.location.AbstractListenerManager: void unregisterService()>();

        r0.<android.location.AbstractListenerManager: java.lang.Object mMergedRequest> = r10;

     label14:
        if z3 == 0 goto label16;

     label15:
        virtualinvoke r0.<android.location.AbstractListenerManager: boolean registerService(java.lang.Object)>(r10);

     label16:
        exitmonitor r1;

     label17:
        return;

     label18:
        $r7 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    protected abstract void unregisterService() throws android.os.RemoteException;
}
