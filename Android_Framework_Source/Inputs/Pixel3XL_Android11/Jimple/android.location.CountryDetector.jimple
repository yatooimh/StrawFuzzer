public class android.location.CountryDetector extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.util.HashMap mListeners;
    private final android.location.ICountryDetector mService;

    public void <init>(android.location.ICountryDetector)
    {
        android.location.CountryDetector r0;
        android.location.ICountryDetector r1;
        java.util.HashMap $r2;

        r0 := @this: android.location.CountryDetector;

        r1 := @parameter0: android.location.ICountryDetector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.CountryDetector: android.location.ICountryDetector mService> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.location.CountryDetector: java.util.HashMap mListeners> = $r2;

        return;
    }

    public void addCountryListener(android.location.CountryListener, android.os.Looper)
    {
        android.location.CountryDetector r0;
        android.os.Looper r1;
        java.util.HashMap r2, $r4, $r6;
        android.location.CountryDetector$ListenerTransport r3;
        boolean $z0;
        android.location.ICountryDetector $r5;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        android.location.CountryListener r10;

        r0 := @this: android.location.CountryDetector;

        r10 := @parameter0: android.location.CountryListener;

        r1 := @parameter1: android.os.Looper;

        r2 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        entermonitor r2;

     label01:
        $r4 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r10);

        if $z0 != 0 goto label06;

        r3 = new android.location.CountryDetector$ListenerTransport;

        specialinvoke r3.<android.location.CountryDetector$ListenerTransport: void <init>(android.location.CountryListener,android.os.Looper)>(r10, r1);

     label02:
        $r5 = r0.<android.location.CountryDetector: android.location.ICountryDetector mService>;

        interfaceinvoke $r5.<android.location.ICountryDetector: void addCountryListener(android.location.ICountryListener)>(r3);

        $r6 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r3);

     label03:
        goto label06;

     label04:
        $r8 := @caughtexception;

     label05:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CountryDetector", "addCountryListener: RemoteException", $r8);

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.location.Country detectCountry()
    {
        android.location.CountryDetector r0;
        android.location.ICountryDetector $r1;
        android.os.RemoteException $r2;
        android.location.Country r3;

        r0 := @this: android.location.CountryDetector;

     label1:
        $r1 = r0.<android.location.CountryDetector: android.location.ICountryDetector mService>;

        r3 = interfaceinvoke $r1.<android.location.ICountryDetector: android.location.Country detectCountry()>();

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CountryDetector", "detectCountry: RemoteException", $r2);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removeCountryListener(android.location.CountryListener)
    {
        android.location.CountryDetector r0;
        java.util.HashMap r1, $r3, $r5;
        android.location.CountryDetector$ListenerTransport r2;
        java.lang.Object $r4;
        android.location.ICountryDetector $r7;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        android.location.CountryListener r10;

        r0 := @this: android.location.CountryDetector;

        r10 := @parameter0: android.location.CountryListener;

        r1 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r10);

        r2 = (android.location.CountryDetector$ListenerTransport) $r4;

     label02:
        if r2 == null goto label07;

     label03:
        $r5 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r10);

        $r7 = r0.<android.location.CountryDetector: android.location.ICountryDetector mService>;

        interfaceinvoke $r7.<android.location.ICountryDetector: void removeCountryListener(android.location.ICountryListener)>(r2);

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CountryDetector", "removeCountryListener: RemoteException", $r8);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public static void <clinit>()
    {
        <android.location.CountryDetector: java.lang.String TAG> = "CountryDetector";

        return;
    }
}
