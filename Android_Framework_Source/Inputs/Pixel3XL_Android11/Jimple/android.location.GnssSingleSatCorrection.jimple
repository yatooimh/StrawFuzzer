public final class android.location.GnssSingleSatCorrection extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int HAS_EXCESS_PATH_LENGTH_MASK;
    public static final int HAS_EXCESS_PATH_LENGTH_UNC_MASK;
    public static final int HAS_PROB_SAT_IS_LOS_MASK;
    public static final int HAS_REFLECTING_PLANE_MASK;
    private final float mCarrierFrequencyHz;
    private final int mConstellationType;
    private final float mExcessPathLengthMeters;
    private final float mExcessPathLengthUncertaintyMeters;
    private final float mProbSatIsLos;
    private final android.location.GnssReflectingPlane mReflectingPlane;
    private final int mSatId;
    private final int mSingleSatCorrectionFlags;

    static void <clinit>()
    {
        android.location.GnssSingleSatCorrection$1 $r0;

        <android.location.GnssSingleSatCorrection: int HAS_REFLECTING_PLANE_MASK> = 8;

        <android.location.GnssSingleSatCorrection: int HAS_PROB_SAT_IS_LOS_MASK> = 1;

        <android.location.GnssSingleSatCorrection: int HAS_EXCESS_PATH_LENGTH_UNC_MASK> = 4;

        <android.location.GnssSingleSatCorrection: int HAS_EXCESS_PATH_LENGTH_MASK> = 2;

        $r0 = new android.location.GnssSingleSatCorrection$1;

        specialinvoke $r0.<android.location.GnssSingleSatCorrection$1: void <init>()>();

        <android.location.GnssSingleSatCorrection: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.location.GnssSingleSatCorrection$Builder)
    {
        android.location.GnssSingleSatCorrection r0;
        android.location.GnssSingleSatCorrection$Builder r1;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3;
        android.location.GnssReflectingPlane $r2;

        r0 := @this: android.location.GnssSingleSatCorrection;

        r1 := @parameter0: android.location.GnssSingleSatCorrection$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <android.location.GnssSingleSatCorrection$Builder: int access$000(android.location.GnssSingleSatCorrection$Builder)>(r1);

        r0.<android.location.GnssSingleSatCorrection: int mSingleSatCorrectionFlags> = $i0;

        $i1 = staticinvoke <android.location.GnssSingleSatCorrection$Builder: int access$100(android.location.GnssSingleSatCorrection$Builder)>(r1);

        r0.<android.location.GnssSingleSatCorrection: int mSatId> = $i1;

        $i2 = staticinvoke <android.location.GnssSingleSatCorrection$Builder: int access$200(android.location.GnssSingleSatCorrection$Builder)>(r1);

        r0.<android.location.GnssSingleSatCorrection: int mConstellationType> = $i2;

        $f0 = staticinvoke <android.location.GnssSingleSatCorrection$Builder: float access$300(android.location.GnssSingleSatCorrection$Builder)>(r1);

        r0.<android.location.GnssSingleSatCorrection: float mCarrierFrequencyHz> = $f0;

        $f1 = staticinvoke <android.location.GnssSingleSatCorrection$Builder: float access$400(android.location.GnssSingleSatCorrection$Builder)>(r1);

        r0.<android.location.GnssSingleSatCorrection: float mProbSatIsLos> = $f1;

        $f2 = staticinvoke <android.location.GnssSingleSatCorrection$Builder: float access$500(android.location.GnssSingleSatCorrection$Builder)>(r1);

        r0.<android.location.GnssSingleSatCorrection: float mExcessPathLengthMeters> = $f2;

        $f3 = staticinvoke <android.location.GnssSingleSatCorrection$Builder: float access$600(android.location.GnssSingleSatCorrection$Builder)>(r1);

        r0.<android.location.GnssSingleSatCorrection: float mExcessPathLengthUncertaintyMeters> = $f3;

        $r2 = staticinvoke <android.location.GnssSingleSatCorrection$Builder: android.location.GnssReflectingPlane access$700(android.location.GnssSingleSatCorrection$Builder)>(r1);

        r0.<android.location.GnssSingleSatCorrection: android.location.GnssReflectingPlane mReflectingPlane> = $r2;

        return;
    }

    void <init>(android.location.GnssSingleSatCorrection$Builder, android.location.GnssSingleSatCorrection$1)
    {
        android.location.GnssSingleSatCorrection r0;
        android.location.GnssSingleSatCorrection$Builder r1;
        android.location.GnssSingleSatCorrection$1 r2;

        r0 := @this: android.location.GnssSingleSatCorrection;

        r1 := @parameter0: android.location.GnssSingleSatCorrection$Builder;

        r2 := @parameter1: android.location.GnssSingleSatCorrection$1;

        specialinvoke r0.<android.location.GnssSingleSatCorrection: void <init>(android.location.GnssSingleSatCorrection$Builder)>(r1);

        return;
    }

    public int describeContents()
    {
        android.location.GnssSingleSatCorrection r0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        return 0;
    }

    public float getCarrierFrequencyHz()
    {
        android.location.GnssSingleSatCorrection r0;
        float $f0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $f0 = r0.<android.location.GnssSingleSatCorrection: float mCarrierFrequencyHz>;

        return $f0;
    }

    public int getConstellationType()
    {
        android.location.GnssSingleSatCorrection r0;
        int $i0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $i0 = r0.<android.location.GnssSingleSatCorrection: int mConstellationType>;

        return $i0;
    }

    public float getExcessPathLengthMeters()
    {
        android.location.GnssSingleSatCorrection r0;
        float $f0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $f0 = r0.<android.location.GnssSingleSatCorrection: float mExcessPathLengthMeters>;

        return $f0;
    }

    public float getExcessPathLengthUncertaintyMeters()
    {
        android.location.GnssSingleSatCorrection r0;
        float $f0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $f0 = r0.<android.location.GnssSingleSatCorrection: float mExcessPathLengthUncertaintyMeters>;

        return $f0;
    }

    public float getProbabilityLineOfSight()
    {
        android.location.GnssSingleSatCorrection r0;
        float $f0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $f0 = r0.<android.location.GnssSingleSatCorrection: float mProbSatIsLos>;

        return $f0;
    }

    public android.location.GnssReflectingPlane getReflectingPlane()
    {
        android.location.GnssSingleSatCorrection r0;
        android.location.GnssReflectingPlane $r1;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $r1 = r0.<android.location.GnssSingleSatCorrection: android.location.GnssReflectingPlane mReflectingPlane>;

        return $r1;
    }

    public int getSatelliteId()
    {
        android.location.GnssSingleSatCorrection r0;
        int $i0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $i0 = r0.<android.location.GnssSingleSatCorrection: int mSatId>;

        return $i0;
    }

    public int getSingleSatelliteCorrectionFlags()
    {
        android.location.GnssSingleSatCorrection r0;
        int $i0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $i0 = r0.<android.location.GnssSingleSatCorrection: int mSingleSatCorrectionFlags>;

        return $i0;
    }

    public boolean hasExcessPathLength()
    {
        android.location.GnssSingleSatCorrection r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $i0 = r0.<android.location.GnssSingleSatCorrection: int mSingleSatCorrectionFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasExcessPathLengthUncertainty()
    {
        android.location.GnssSingleSatCorrection r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $i0 = r0.<android.location.GnssSingleSatCorrection: int mSingleSatCorrectionFlags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasReflectingPlane()
    {
        android.location.GnssSingleSatCorrection r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $i0 = r0.<android.location.GnssSingleSatCorrection: int mSingleSatCorrectionFlags>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasValidSatelliteLineOfSight()
    {
        android.location.GnssSingleSatCorrection r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.location.GnssSingleSatCorrection;

        i0 = r0.<android.location.GnssSingleSatCorrection: int mSingleSatCorrectionFlags>;

        z0 = 1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String toString()
    {
        android.location.GnssSingleSatCorrection r0;
        java.lang.StringBuilder $r2;
        java.lang.Object[] $r3, $r7, $r11, $r15, $r19, $r23, $r27, $r32;
        int $i0, $i1, $i2;
        java.lang.Integer $r4, $r8, $r12;
        java.lang.String $r5, $r9, $r13, $r17, $r21, $r25, $r29, $r31, $r34;
        float $f0, $f1, $f2, $f3;
        java.lang.Float $r16, $r20, $r24, $r28;
        boolean $z0;
        android.location.GnssReflectingPlane $r33;

        r0 := @this: android.location.GnssSingleSatCorrection;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("GnssSingleSatCorrection:\n");

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = "SingleSatCorrectionFlags = ";

        $i0 = r0.<android.location.GnssSingleSatCorrection: int mSingleSatCorrectionFlags>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "ConstellationType = ";

        $i1 = r0.<android.location.GnssSingleSatCorrection: int mConstellationType>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[1] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "SatId = ";

        $i2 = r0.<android.location.GnssSingleSatCorrection: int mSatId>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r11[1] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = "CarrierFrequencyHz = ";

        $f0 = r0.<android.location.GnssSingleSatCorrection: float mCarrierFrequencyHz>;

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r15[1] = $r16;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = "ProbSatIsLos = ";

        $f1 = r0.<android.location.GnssSingleSatCorrection: float mProbSatIsLos>;

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r19[1] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r19);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = newarray (java.lang.Object)[2];

        $r23[0] = "ExcessPathLengthMeters = ";

        $f2 = r0.<android.location.GnssSingleSatCorrection: float mExcessPathLengthMeters>;

        $r24 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r23[1] = $r24;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r23);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = newarray (java.lang.Object)[2];

        $r27[0] = "ExcessPathLengthUncertaintyMeters = ";

        $f3 = r0.<android.location.GnssSingleSatCorrection: float mExcessPathLengthUncertaintyMeters>;

        $r28 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r27[1] = $r28;

        $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r27);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $z0 = virtualinvoke r0.<android.location.GnssSingleSatCorrection: boolean hasReflectingPlane()>();

        if $z0 == 0 goto label1;

        $r32 = newarray (java.lang.Object)[2];

        $r32[0] = "ReflectingPlane = ";

        $r33 = r0.<android.location.GnssSingleSatCorrection: android.location.GnssReflectingPlane mReflectingPlane>;

        $r32[1] = $r33;

        $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r32);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

     label1:
        $r31 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r31;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.location.GnssSingleSatCorrection r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;
        boolean $z0;
        android.location.GnssReflectingPlane $r2;

        r0 := @this: android.location.GnssSingleSatCorrection;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.location.GnssSingleSatCorrection: int mSingleSatCorrectionFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.location.GnssSingleSatCorrection: int mConstellationType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.location.GnssSingleSatCorrection: int mSatId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $f0 = r0.<android.location.GnssSingleSatCorrection: float mCarrierFrequencyHz>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.location.GnssSingleSatCorrection: float mProbSatIsLos>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $f2 = r0.<android.location.GnssSingleSatCorrection: float mExcessPathLengthMeters>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f2);

        $f3 = r0.<android.location.GnssSingleSatCorrection: float mExcessPathLengthUncertaintyMeters>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f3);

        $z0 = virtualinvoke r0.<android.location.GnssSingleSatCorrection: boolean hasReflectingPlane()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.location.GnssSingleSatCorrection: android.location.GnssReflectingPlane mReflectingPlane>;

        virtualinvoke $r2.<android.location.GnssReflectingPlane: void writeToParcel(android.os.Parcel,int)>(r1, i0);

     label1:
        return;
    }
}
