public class android.location.GpsClock extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final short HAS_BIAS;
    private static final short HAS_BIAS_UNCERTAINTY;
    private static final short HAS_DRIFT;
    private static final short HAS_DRIFT_UNCERTAINTY;
    private static final short HAS_FULL_BIAS;
    private static final short HAS_LEAP_SECOND;
    private static final short HAS_NO_FLAGS;
    private static final short HAS_TIME_UNCERTAINTY;
    public static final byte TYPE_GPS_TIME;
    public static final byte TYPE_LOCAL_HW_TIME;
    public static final byte TYPE_UNKNOWN;
    private double mBiasInNs;
    private double mBiasUncertaintyInNs;
    private double mDriftInNsPerSec;
    private double mDriftUncertaintyInNsPerSec;
    private short mFlags;
    private long mFullBiasInNs;
    private short mLeapSecond;
    private long mTimeInNs;
    private double mTimeUncertaintyInNs;
    private byte mType;

    static void <clinit>()
    {
        android.location.GpsClock$1 $r0;

        <android.location.GpsClock: byte TYPE_UNKNOWN> = 0;

        <android.location.GpsClock: byte TYPE_LOCAL_HW_TIME> = 1;

        <android.location.GpsClock: byte TYPE_GPS_TIME> = 2;

        <android.location.GpsClock: short HAS_TIME_UNCERTAINTY> = 2;

        <android.location.GpsClock: short HAS_NO_FLAGS> = 0;

        <android.location.GpsClock: short HAS_LEAP_SECOND> = 1;

        <android.location.GpsClock: short HAS_FULL_BIAS> = 4;

        <android.location.GpsClock: short HAS_DRIFT_UNCERTAINTY> = 64;

        <android.location.GpsClock: short HAS_DRIFT> = 32;

        <android.location.GpsClock: short HAS_BIAS_UNCERTAINTY> = 16;

        <android.location.GpsClock: short HAS_BIAS> = 8;

        $r0 = new android.location.GpsClock$1;

        specialinvoke $r0.<android.location.GpsClock$1: void <init>()>();

        <android.location.GpsClock: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    void <init>()
    {
        android.location.GpsClock r0;

        r0 := @this: android.location.GpsClock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.location.GpsClock: void initialize()>();

        return;
    }

    static short access$002(android.location.GpsClock, short)
    {
        android.location.GpsClock r0;
        short s0;

        r0 := @parameter0: android.location.GpsClock;

        s0 := @parameter1: short;

        r0.<android.location.GpsClock: short mFlags> = s0;

        return s0;
    }

    static short access$102(android.location.GpsClock, short)
    {
        android.location.GpsClock r0;
        short s0;

        r0 := @parameter0: android.location.GpsClock;

        s0 := @parameter1: short;

        r0.<android.location.GpsClock: short mLeapSecond> = s0;

        return s0;
    }

    static byte access$202(android.location.GpsClock, byte)
    {
        android.location.GpsClock r0;
        byte b0;

        r0 := @parameter0: android.location.GpsClock;

        b0 := @parameter1: byte;

        r0.<android.location.GpsClock: byte mType> = b0;

        return b0;
    }

    static long access$302(android.location.GpsClock, long)
    {
        android.location.GpsClock r0;
        long l0;

        r0 := @parameter0: android.location.GpsClock;

        l0 := @parameter1: long;

        r0.<android.location.GpsClock: long mTimeInNs> = l0;

        return l0;
    }

    static double access$402(android.location.GpsClock, double)
    {
        android.location.GpsClock r0;
        double d0;

        r0 := @parameter0: android.location.GpsClock;

        d0 := @parameter1: double;

        r0.<android.location.GpsClock: double mTimeUncertaintyInNs> = d0;

        return d0;
    }

    static long access$502(android.location.GpsClock, long)
    {
        android.location.GpsClock r0;
        long l0;

        r0 := @parameter0: android.location.GpsClock;

        l0 := @parameter1: long;

        r0.<android.location.GpsClock: long mFullBiasInNs> = l0;

        return l0;
    }

    static double access$602(android.location.GpsClock, double)
    {
        android.location.GpsClock r0;
        double d0;

        r0 := @parameter0: android.location.GpsClock;

        d0 := @parameter1: double;

        r0.<android.location.GpsClock: double mBiasInNs> = d0;

        return d0;
    }

    static double access$702(android.location.GpsClock, double)
    {
        android.location.GpsClock r0;
        double d0;

        r0 := @parameter0: android.location.GpsClock;

        d0 := @parameter1: double;

        r0.<android.location.GpsClock: double mBiasUncertaintyInNs> = d0;

        return d0;
    }

    static double access$802(android.location.GpsClock, double)
    {
        android.location.GpsClock r0;
        double d0;

        r0 := @parameter0: android.location.GpsClock;

        d0 := @parameter1: double;

        r0.<android.location.GpsClock: double mDriftInNsPerSec> = d0;

        return d0;
    }

    static double access$902(android.location.GpsClock, double)
    {
        android.location.GpsClock r0;
        double d0;

        r0 := @parameter0: android.location.GpsClock;

        d0 := @parameter1: double;

        r0.<android.location.GpsClock: double mDriftUncertaintyInNsPerSec> = d0;

        return d0;
    }

    private java.lang.String getTypeString()
    {
        android.location.GpsClock r0;
        byte b0, $b1;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;

        r0 := @this: android.location.GpsClock;

        b0 = r0.<android.location.GpsClock: byte mType>;

        if b0 == 0 goto label3;

        if b0 == 1 goto label2;

        if b0 == 2 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Invalid:");

        $b1 = r0.<android.location.GpsClock: byte mType>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label1:
        return "GpsTime";

     label2:
        return "LocalHwClock";

     label3:
        return "Unknown";
    }

    private void initialize()
    {
        android.location.GpsClock r0;
        short $s0;

        r0 := @this: android.location.GpsClock;

        $s0 = (short) 0;

        r0.<android.location.GpsClock: short mFlags> = $s0;

        virtualinvoke r0.<android.location.GpsClock: void resetLeapSecond()>();

        virtualinvoke r0.<android.location.GpsClock: void setType(byte)>(0);

        virtualinvoke r0.<android.location.GpsClock: void setTimeInNs(long)>(-9223372036854775808L);

        virtualinvoke r0.<android.location.GpsClock: void resetTimeUncertaintyInNs()>();

        virtualinvoke r0.<android.location.GpsClock: void resetFullBiasInNs()>();

        virtualinvoke r0.<android.location.GpsClock: void resetBiasInNs()>();

        virtualinvoke r0.<android.location.GpsClock: void resetBiasUncertaintyInNs()>();

        virtualinvoke r0.<android.location.GpsClock: void resetDriftInNsPerSec()>();

        virtualinvoke r0.<android.location.GpsClock: void resetDriftUncertaintyInNsPerSec()>();

        return;
    }

    private boolean isFlagSet(short)
    {
        android.location.GpsClock r0;
        short s0, $s1, $s2;
        boolean z0;

        r0 := @this: android.location.GpsClock;

        s0 := @parameter0: short;

        $s1 = r0.<android.location.GpsClock: short mFlags>;

        $s2 = $s1 & s0;

        if $s2 != s0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void resetFlag(short)
    {
        android.location.GpsClock r0;
        short s0, $s1, $s2, $s3, $s4;

        r0 := @this: android.location.GpsClock;

        s0 := @parameter0: short;

        $s1 = r0.<android.location.GpsClock: short mFlags>;

        $s2 = $s1 & s0;

        $s3 = (short) $s2;

        $s4 = (short) $s3;

        r0.<android.location.GpsClock: short mFlags> = $s4;

        return;
    }

    private void setFlag(short)
    {
        android.location.GpsClock r0;
        short s0, $s1, $s2, $s3, $s4;

        r0 := @this: android.location.GpsClock;

        s0 := @parameter0: short;

        $s1 = r0.<android.location.GpsClock: short mFlags>;

        $s2 = $s1 | s0;

        $s3 = (short) $s2;

        $s4 = (short) $s3;

        r0.<android.location.GpsClock: short mFlags> = $s4;

        return;
    }

    public int describeContents()
    {
        android.location.GpsClock r0;

        r0 := @this: android.location.GpsClock;

        return 0;
    }

    public double getBiasInNs()
    {
        android.location.GpsClock r0;
        double $d0;

        r0 := @this: android.location.GpsClock;

        $d0 = r0.<android.location.GpsClock: double mBiasInNs>;

        return $d0;
    }

    public double getBiasUncertaintyInNs()
    {
        android.location.GpsClock r0;
        double $d0;

        r0 := @this: android.location.GpsClock;

        $d0 = r0.<android.location.GpsClock: double mBiasUncertaintyInNs>;

        return $d0;
    }

    public double getDriftInNsPerSec()
    {
        android.location.GpsClock r0;
        double $d0;

        r0 := @this: android.location.GpsClock;

        $d0 = r0.<android.location.GpsClock: double mDriftInNsPerSec>;

        return $d0;
    }

    public double getDriftUncertaintyInNsPerSec()
    {
        android.location.GpsClock r0;
        double $d0;

        r0 := @this: android.location.GpsClock;

        $d0 = r0.<android.location.GpsClock: double mDriftUncertaintyInNsPerSec>;

        return $d0;
    }

    public long getFullBiasInNs()
    {
        android.location.GpsClock r0;
        long $l0;

        r0 := @this: android.location.GpsClock;

        $l0 = r0.<android.location.GpsClock: long mFullBiasInNs>;

        return $l0;
    }

    public short getLeapSecond()
    {
        android.location.GpsClock r0;
        short $s0;

        r0 := @this: android.location.GpsClock;

        $s0 = r0.<android.location.GpsClock: short mLeapSecond>;

        return $s0;
    }

    public long getTimeInNs()
    {
        android.location.GpsClock r0;
        long $l0;

        r0 := @this: android.location.GpsClock;

        $l0 = r0.<android.location.GpsClock: long mTimeInNs>;

        return $l0;
    }

    public double getTimeUncertaintyInNs()
    {
        android.location.GpsClock r0;
        double $d0;

        r0 := @this: android.location.GpsClock;

        $d0 = r0.<android.location.GpsClock: double mTimeUncertaintyInNs>;

        return $d0;
    }

    public byte getType()
    {
        android.location.GpsClock r0;
        byte $b0;

        r0 := @this: android.location.GpsClock;

        $b0 = r0.<android.location.GpsClock: byte mType>;

        return $b0;
    }

    public boolean hasBiasInNs()
    {
        android.location.GpsClock r0;
        boolean $z0;

        r0 := @this: android.location.GpsClock;

        $z0 = specialinvoke r0.<android.location.GpsClock: boolean isFlagSet(short)>(8);

        return $z0;
    }

    public boolean hasBiasUncertaintyInNs()
    {
        android.location.GpsClock r0;
        boolean $z0;

        r0 := @this: android.location.GpsClock;

        $z0 = specialinvoke r0.<android.location.GpsClock: boolean isFlagSet(short)>(16);

        return $z0;
    }

    public boolean hasDriftInNsPerSec()
    {
        android.location.GpsClock r0;
        boolean $z0;

        r0 := @this: android.location.GpsClock;

        $z0 = specialinvoke r0.<android.location.GpsClock: boolean isFlagSet(short)>(32);

        return $z0;
    }

    public boolean hasDriftUncertaintyInNsPerSec()
    {
        android.location.GpsClock r0;
        boolean $z0;

        r0 := @this: android.location.GpsClock;

        $z0 = specialinvoke r0.<android.location.GpsClock: boolean isFlagSet(short)>(64);

        return $z0;
    }

    public boolean hasFullBiasInNs()
    {
        android.location.GpsClock r0;
        boolean $z0;

        r0 := @this: android.location.GpsClock;

        $z0 = specialinvoke r0.<android.location.GpsClock: boolean isFlagSet(short)>(4);

        return $z0;
    }

    public boolean hasLeapSecond()
    {
        android.location.GpsClock r0;
        boolean $z0;

        r0 := @this: android.location.GpsClock;

        $z0 = specialinvoke r0.<android.location.GpsClock: boolean isFlagSet(short)>(1);

        return $z0;
    }

    public boolean hasTimeUncertaintyInNs()
    {
        android.location.GpsClock r0;
        boolean $z0;

        r0 := @this: android.location.GpsClock;

        $z0 = specialinvoke r0.<android.location.GpsClock: boolean isFlagSet(short)>(2);

        return $z0;
    }

    public void reset()
    {
        android.location.GpsClock r0;

        r0 := @this: android.location.GpsClock;

        specialinvoke r0.<android.location.GpsClock: void initialize()>();

        return;
    }

    public void resetBiasInNs()
    {
        android.location.GpsClock r0;

        r0 := @this: android.location.GpsClock;

        specialinvoke r0.<android.location.GpsClock: void resetFlag(short)>(8);

        r0.<android.location.GpsClock: double mBiasInNs> = #NaN;

        return;
    }

    public void resetBiasUncertaintyInNs()
    {
        android.location.GpsClock r0;

        r0 := @this: android.location.GpsClock;

        specialinvoke r0.<android.location.GpsClock: void resetFlag(short)>(16);

        r0.<android.location.GpsClock: double mBiasUncertaintyInNs> = #NaN;

        return;
    }

    public void resetDriftInNsPerSec()
    {
        android.location.GpsClock r0;

        r0 := @this: android.location.GpsClock;

        specialinvoke r0.<android.location.GpsClock: void resetFlag(short)>(32);

        r0.<android.location.GpsClock: double mDriftInNsPerSec> = #NaN;

        return;
    }

    public void resetDriftUncertaintyInNsPerSec()
    {
        android.location.GpsClock r0;

        r0 := @this: android.location.GpsClock;

        specialinvoke r0.<android.location.GpsClock: void resetFlag(short)>(64);

        r0.<android.location.GpsClock: double mDriftUncertaintyInNsPerSec> = #NaN;

        return;
    }

    public void resetFullBiasInNs()
    {
        android.location.GpsClock r0;

        r0 := @this: android.location.GpsClock;

        specialinvoke r0.<android.location.GpsClock: void resetFlag(short)>(4);

        r0.<android.location.GpsClock: long mFullBiasInNs> = -9223372036854775808L;

        return;
    }

    public void resetLeapSecond()
    {
        android.location.GpsClock r0;
        short $s0;

        r0 := @this: android.location.GpsClock;

        specialinvoke r0.<android.location.GpsClock: void resetFlag(short)>(1);

        $s0 = (short) -32768;

        r0.<android.location.GpsClock: short mLeapSecond> = $s0;

        return;
    }

    public void resetTimeUncertaintyInNs()
    {
        android.location.GpsClock r0;

        r0 := @this: android.location.GpsClock;

        specialinvoke r0.<android.location.GpsClock: void resetFlag(short)>(2);

        r0.<android.location.GpsClock: double mTimeUncertaintyInNs> = #NaN;

        return;
    }

    public void set(android.location.GpsClock)
    {
        android.location.GpsClock r0, r1;
        short $s0, $s1, $s2, $s3;
        byte $b4, $b5;
        long $l6, $l7;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: android.location.GpsClock;

        r1 := @parameter0: android.location.GpsClock;

        $s0 = r1.<android.location.GpsClock: short mFlags>;

        $s1 = (short) $s0;

        r0.<android.location.GpsClock: short mFlags> = $s1;

        $s2 = r1.<android.location.GpsClock: short mLeapSecond>;

        $s3 = (short) $s2;

        r0.<android.location.GpsClock: short mLeapSecond> = $s3;

        $b4 = r1.<android.location.GpsClock: byte mType>;

        $b5 = (byte) $b4;

        r0.<android.location.GpsClock: byte mType> = $b5;

        $l6 = r1.<android.location.GpsClock: long mTimeInNs>;

        r0.<android.location.GpsClock: long mTimeInNs> = $l6;

        $d0 = r1.<android.location.GpsClock: double mTimeUncertaintyInNs>;

        r0.<android.location.GpsClock: double mTimeUncertaintyInNs> = $d0;

        $l7 = r1.<android.location.GpsClock: long mFullBiasInNs>;

        r0.<android.location.GpsClock: long mFullBiasInNs> = $l7;

        $d1 = r1.<android.location.GpsClock: double mBiasInNs>;

        r0.<android.location.GpsClock: double mBiasInNs> = $d1;

        $d2 = r1.<android.location.GpsClock: double mBiasUncertaintyInNs>;

        r0.<android.location.GpsClock: double mBiasUncertaintyInNs> = $d2;

        $d3 = r1.<android.location.GpsClock: double mDriftInNsPerSec>;

        r0.<android.location.GpsClock: double mDriftInNsPerSec> = $d3;

        $d4 = r1.<android.location.GpsClock: double mDriftUncertaintyInNsPerSec>;

        r0.<android.location.GpsClock: double mDriftUncertaintyInNsPerSec> = $d4;

        return;
    }

    public void setBiasInNs(double)
    {
        android.location.GpsClock r0;
        double d0;

        r0 := @this: android.location.GpsClock;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsClock: void setFlag(short)>(8);

        r0.<android.location.GpsClock: double mBiasInNs> = d0;

        return;
    }

    public void setBiasUncertaintyInNs(double)
    {
        android.location.GpsClock r0;
        double d0;

        r0 := @this: android.location.GpsClock;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsClock: void setFlag(short)>(16);

        r0.<android.location.GpsClock: double mBiasUncertaintyInNs> = d0;

        return;
    }

    public void setDriftInNsPerSec(double)
    {
        android.location.GpsClock r0;
        double d0;

        r0 := @this: android.location.GpsClock;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsClock: void setFlag(short)>(32);

        r0.<android.location.GpsClock: double mDriftInNsPerSec> = d0;

        return;
    }

    public void setDriftUncertaintyInNsPerSec(double)
    {
        android.location.GpsClock r0;
        double d0;

        r0 := @this: android.location.GpsClock;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsClock: void setFlag(short)>(64);

        r0.<android.location.GpsClock: double mDriftUncertaintyInNsPerSec> = d0;

        return;
    }

    public void setFullBiasInNs(long)
    {
        android.location.GpsClock r0;
        long l0;

        r0 := @this: android.location.GpsClock;

        l0 := @parameter0: long;

        specialinvoke r0.<android.location.GpsClock: void setFlag(short)>(4);

        r0.<android.location.GpsClock: long mFullBiasInNs> = l0;

        return;
    }

    public void setLeapSecond(short)
    {
        android.location.GpsClock r0;
        short s0, $s1;

        r0 := @this: android.location.GpsClock;

        s0 := @parameter0: short;

        specialinvoke r0.<android.location.GpsClock: void setFlag(short)>(1);

        $s1 = (short) s0;

        r0.<android.location.GpsClock: short mLeapSecond> = $s1;

        return;
    }

    public void setTimeInNs(long)
    {
        android.location.GpsClock r0;
        long l0;

        r0 := @this: android.location.GpsClock;

        l0 := @parameter0: long;

        r0.<android.location.GpsClock: long mTimeInNs> = l0;

        return;
    }

    public void setTimeUncertaintyInNs(double)
    {
        android.location.GpsClock r0;
        double d0;

        r0 := @this: android.location.GpsClock;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsClock: void setFlag(short)>(2);

        r0.<android.location.GpsClock: double mTimeUncertaintyInNs> = d0;

        return;
    }

    public void setType(byte)
    {
        android.location.GpsClock r0;
        byte b0, $b1;

        r0 := @this: android.location.GpsClock;

        b0 := @parameter0: byte;

        $b1 = (byte) b0;

        r0.<android.location.GpsClock: byte mType> = $b1;

        return;
    }

    public java.lang.String toString()
    {
        android.location.GpsClock r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        long l0, $l1;
        java.lang.StringBuilder $r2;
        java.lang.Object[] $r3, $r6, $r8, $r11, $r13, $r15;
        java.lang.String $r4, $r5, $r7, $r10, $r12, $r14, $r16, $r17;
        java.lang.Long $r9, r20;
        double $d0, $d1, $d2, $d3, $d4;
        short $s2;
        java.lang.Short r18;
        java.lang.Double r19, r21, r22, r23, r24;

        r0 := @this: android.location.GpsClock;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("GpsClock:\n");

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = "Type";

        $r4 = specialinvoke r0.<android.location.GpsClock: java.lang.String getTypeString()>();

        $r3[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-15s = %s\n", $r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        z0 = virtualinvoke r0.<android.location.GpsClock: boolean hasLeapSecond()>();

        if z0 == 0 goto label01;

        $s2 = r0.<android.location.GpsClock: short mLeapSecond>;

        r18 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        goto label02;

     label01:
        r18 = null;

     label02:
        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "LeapSecond";

        $r6[1] = r18;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-15s = %s\n", $r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        l0 = r0.<android.location.GpsClock: long mTimeInNs>;

        $z1 = virtualinvoke r0.<android.location.GpsClock: boolean hasTimeUncertaintyInNs()>();

        if $z1 == 0 goto label03;

        $d4 = r0.<android.location.GpsClock: double mTimeUncertaintyInNs>;

        r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        goto label04;

     label03:
        r19 = null;

     label04:
        $r8 = newarray (java.lang.Object)[4];

        $r8[0] = "TimeInNs";

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r8[1] = $r9;

        $r8[2] = "TimeUncertaintyInNs";

        $r8[3] = r19;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-15s = %-25s   %-26s = %s\n", $r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $z2 = virtualinvoke r0.<android.location.GpsClock: boolean hasFullBiasInNs()>();

        if $z2 == 0 goto label05;

        $l1 = r0.<android.location.GpsClock: long mFullBiasInNs>;

        r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        goto label06;

     label05:
        r20 = null;

     label06:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "FullBiasInNs";

        $r11[1] = r20;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-15s = %s\n", $r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $z3 = virtualinvoke r0.<android.location.GpsClock: boolean hasBiasInNs()>();

        if $z3 == 0 goto label07;

        $d3 = r0.<android.location.GpsClock: double mBiasInNs>;

        r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        goto label08;

     label07:
        r21 = null;

     label08:
        $z4 = virtualinvoke r0.<android.location.GpsClock: boolean hasBiasUncertaintyInNs()>();

        if $z4 == 0 goto label09;

        $d2 = r0.<android.location.GpsClock: double mBiasUncertaintyInNs>;

        r22 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        goto label10;

     label09:
        r22 = null;

     label10:
        $r13 = newarray (java.lang.Object)[4];

        $r13[0] = "BiasInNs";

        $r13[1] = r21;

        $r13[2] = "BiasUncertaintyInNs";

        $r13[3] = r22;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-15s = %-25s   %-26s = %s\n", $r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $z5 = virtualinvoke r0.<android.location.GpsClock: boolean hasDriftInNsPerSec()>();

        if $z5 == 0 goto label11;

        $d1 = r0.<android.location.GpsClock: double mDriftInNsPerSec>;

        r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        goto label12;

     label11:
        r23 = null;

     label12:
        r24 = null;

        $z6 = virtualinvoke r0.<android.location.GpsClock: boolean hasDriftUncertaintyInNsPerSec()>();

        if $z6 == 0 goto label13;

        $d0 = r0.<android.location.GpsClock: double mDriftUncertaintyInNsPerSec>;

        r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label13:
        $r15 = newarray (java.lang.Object)[4];

        $r15[0] = "DriftInNsPerSec";

        $r15[1] = r23;

        $r15[2] = "DriftUncertaintyInNsPerSec";

        $r15[3] = r24;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-15s = %-25s   %-26s = %s\n", $r15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.location.GpsClock r0;
        android.os.Parcel r1;
        int i0;
        short $s1, $s2;
        byte $b3;
        long $l4, $l5;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: android.location.GpsClock;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $s1 = r0.<android.location.GpsClock: short mFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($s1);

        $s2 = r0.<android.location.GpsClock: short mLeapSecond>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($s2);

        $b3 = r0.<android.location.GpsClock: byte mType>;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>($b3);

        $l4 = r0.<android.location.GpsClock: long mTimeInNs>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $d0 = r0.<android.location.GpsClock: double mTimeUncertaintyInNs>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d0);

        $l5 = r0.<android.location.GpsClock: long mFullBiasInNs>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        $d1 = r0.<android.location.GpsClock: double mBiasInNs>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d1);

        $d2 = r0.<android.location.GpsClock: double mBiasUncertaintyInNs>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d2);

        $d3 = r0.<android.location.GpsClock: double mDriftInNsPerSec>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d3);

        $d4 = r0.<android.location.GpsClock: double mDriftUncertaintyInNsPerSec>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d4);

        return;
    }
}
