public class android.location.GpsMeasurement extends java.lang.Object implements android.os.Parcelable
{
    private static final short ADR_ALL;
    public static final short ADR_STATE_CYCLE_SLIP;
    public static final short ADR_STATE_RESET;
    public static final short ADR_STATE_UNKNOWN;
    public static final short ADR_STATE_VALID;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int GPS_MEASUREMENT_HAS_UNCORRECTED_PSEUDORANGE_RATE;
    private static final int HAS_AZIMUTH;
    private static final int HAS_AZIMUTH_UNCERTAINTY;
    private static final int HAS_BIT_NUMBER;
    private static final int HAS_CARRIER_CYCLES;
    private static final int HAS_CARRIER_FREQUENCY;
    private static final int HAS_CARRIER_PHASE;
    private static final int HAS_CARRIER_PHASE_UNCERTAINTY;
    private static final int HAS_CODE_PHASE;
    private static final int HAS_CODE_PHASE_UNCERTAINTY;
    private static final int HAS_DOPPLER_SHIFT;
    private static final int HAS_DOPPLER_SHIFT_UNCERTAINTY;
    private static final int HAS_ELEVATION;
    private static final int HAS_ELEVATION_UNCERTAINTY;
    private static final int HAS_NO_FLAGS;
    private static final int HAS_PSEUDORANGE;
    private static final int HAS_PSEUDORANGE_UNCERTAINTY;
    private static final int HAS_SNR;
    private static final int HAS_TIME_FROM_LAST_BIT;
    private static final int HAS_USED_IN_FIX;
    public static final byte LOSS_OF_LOCK_CYCLE_SLIP;
    public static final byte LOSS_OF_LOCK_OK;
    public static final byte LOSS_OF_LOCK_UNKNOWN;
    public static final byte MULTIPATH_INDICATOR_DETECTED;
    public static final byte MULTIPATH_INDICATOR_NOT_USED;
    public static final byte MULTIPATH_INDICATOR_UNKNOWN;
    private static final short STATE_ALL;
    public static final short STATE_BIT_SYNC;
    public static final short STATE_CODE_LOCK;
    public static final short STATE_MSEC_AMBIGUOUS;
    public static final short STATE_SUBFRAME_SYNC;
    public static final short STATE_TOW_DECODED;
    public static final short STATE_UNKNOWN;
    private double mAccumulatedDeltaRangeInMeters;
    private short mAccumulatedDeltaRangeState;
    private double mAccumulatedDeltaRangeUncertaintyInMeters;
    private double mAzimuthInDeg;
    private double mAzimuthUncertaintyInDeg;
    private int mBitNumber;
    private long mCarrierCycles;
    private float mCarrierFrequencyInHz;
    private double mCarrierPhase;
    private double mCarrierPhaseUncertainty;
    private double mCn0InDbHz;
    private double mCodePhaseInChips;
    private double mCodePhaseUncertaintyInChips;
    private double mDopplerShiftInHz;
    private double mDopplerShiftUncertaintyInHz;
    private double mElevationInDeg;
    private double mElevationUncertaintyInDeg;
    private int mFlags;
    private byte mLossOfLock;
    private byte mMultipathIndicator;
    private byte mPrn;
    private double mPseudorangeInMeters;
    private double mPseudorangeRateInMetersPerSec;
    private double mPseudorangeRateUncertaintyInMetersPerSec;
    private double mPseudorangeUncertaintyInMeters;
    private long mReceivedGpsTowInNs;
    private long mReceivedGpsTowUncertaintyInNs;
    private double mSnrInDb;
    private short mState;
    private short mTimeFromLastBitInMs;
    private double mTimeOffsetInNs;
    private boolean mUsedInFix;

    static void <clinit>()
    {
        android.location.GpsMeasurement$1 $r0;

        <android.location.GpsMeasurement: short STATE_UNKNOWN> = 0;

        <android.location.GpsMeasurement: short STATE_TOW_DECODED> = 8;

        <android.location.GpsMeasurement: short STATE_SUBFRAME_SYNC> = 4;

        <android.location.GpsMeasurement: short STATE_MSEC_AMBIGUOUS> = 16;

        <android.location.GpsMeasurement: short STATE_CODE_LOCK> = 1;

        <android.location.GpsMeasurement: short STATE_BIT_SYNC> = 2;

        <android.location.GpsMeasurement: short STATE_ALL> = 31;

        <android.location.GpsMeasurement: byte MULTIPATH_INDICATOR_UNKNOWN> = 0;

        <android.location.GpsMeasurement: byte MULTIPATH_INDICATOR_NOT_USED> = 2;

        <android.location.GpsMeasurement: byte MULTIPATH_INDICATOR_DETECTED> = 1;

        <android.location.GpsMeasurement: byte LOSS_OF_LOCK_UNKNOWN> = 0;

        <android.location.GpsMeasurement: byte LOSS_OF_LOCK_OK> = 1;

        <android.location.GpsMeasurement: byte LOSS_OF_LOCK_CYCLE_SLIP> = 2;

        <android.location.GpsMeasurement: int HAS_USED_IN_FIX> = 131072;

        <android.location.GpsMeasurement: int HAS_TIME_FROM_LAST_BIT> = 16384;

        <android.location.GpsMeasurement: int HAS_SNR> = 1;

        <android.location.GpsMeasurement: int HAS_PSEUDORANGE_UNCERTAINTY> = 64;

        <android.location.GpsMeasurement: int HAS_PSEUDORANGE> = 32;

        <android.location.GpsMeasurement: int HAS_NO_FLAGS> = 0;

        <android.location.GpsMeasurement: int HAS_ELEVATION_UNCERTAINTY> = 4;

        <android.location.GpsMeasurement: int HAS_ELEVATION> = 2;

        <android.location.GpsMeasurement: int HAS_DOPPLER_SHIFT_UNCERTAINTY> = 65536;

        <android.location.GpsMeasurement: int HAS_DOPPLER_SHIFT> = 32768;

        <android.location.GpsMeasurement: int HAS_CODE_PHASE_UNCERTAINTY> = 256;

        <android.location.GpsMeasurement: int HAS_CODE_PHASE> = 128;

        <android.location.GpsMeasurement: int HAS_CARRIER_PHASE_UNCERTAINTY> = 4096;

        <android.location.GpsMeasurement: int HAS_CARRIER_PHASE> = 2048;

        <android.location.GpsMeasurement: int HAS_CARRIER_FREQUENCY> = 512;

        <android.location.GpsMeasurement: int HAS_CARRIER_CYCLES> = 1024;

        <android.location.GpsMeasurement: int HAS_BIT_NUMBER> = 8192;

        <android.location.GpsMeasurement: int HAS_AZIMUTH_UNCERTAINTY> = 16;

        <android.location.GpsMeasurement: int HAS_AZIMUTH> = 8;

        <android.location.GpsMeasurement: int GPS_MEASUREMENT_HAS_UNCORRECTED_PSEUDORANGE_RATE> = 262144;

        <android.location.GpsMeasurement: short ADR_STATE_VALID> = 1;

        <android.location.GpsMeasurement: short ADR_STATE_UNKNOWN> = 0;

        <android.location.GpsMeasurement: short ADR_STATE_RESET> = 2;

        <android.location.GpsMeasurement: short ADR_STATE_CYCLE_SLIP> = 4;

        <android.location.GpsMeasurement: short ADR_ALL> = 7;

        $r0 = new android.location.GpsMeasurement$1;

        specialinvoke $r0.<android.location.GpsMeasurement$1: void <init>()>();

        <android.location.GpsMeasurement: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    void <init>()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.location.GpsMeasurement: void initialize()>();

        return;
    }

    static int access$002(android.location.GpsMeasurement, int)
    {
        android.location.GpsMeasurement r0;
        int i0;

        r0 := @parameter0: android.location.GpsMeasurement;

        i0 := @parameter1: int;

        r0.<android.location.GpsMeasurement: int mFlags> = i0;

        return i0;
    }

    static double access$1002(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeInMeters> = d0;

        return d0;
    }

    static byte access$102(android.location.GpsMeasurement, byte)
    {
        android.location.GpsMeasurement r0;
        byte b0;

        r0 := @parameter0: android.location.GpsMeasurement;

        b0 := @parameter1: byte;

        r0.<android.location.GpsMeasurement: byte mPrn> = b0;

        return b0;
    }

    static double access$1102(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeUncertaintyInMeters> = d0;

        return d0;
    }

    static double access$1202(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mPseudorangeInMeters> = d0;

        return d0;
    }

    static double access$1302(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mPseudorangeUncertaintyInMeters> = d0;

        return d0;
    }

    static double access$1402(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mCodePhaseInChips> = d0;

        return d0;
    }

    static double access$1502(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mCodePhaseUncertaintyInChips> = d0;

        return d0;
    }

    static float access$1602(android.location.GpsMeasurement, float)
    {
        android.location.GpsMeasurement r0;
        float f0;

        r0 := @parameter0: android.location.GpsMeasurement;

        f0 := @parameter1: float;

        r0.<android.location.GpsMeasurement: float mCarrierFrequencyInHz> = f0;

        return f0;
    }

    static long access$1702(android.location.GpsMeasurement, long)
    {
        android.location.GpsMeasurement r0;
        long l0;

        r0 := @parameter0: android.location.GpsMeasurement;

        l0 := @parameter1: long;

        r0.<android.location.GpsMeasurement: long mCarrierCycles> = l0;

        return l0;
    }

    static double access$1802(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mCarrierPhase> = d0;

        return d0;
    }

    static double access$1902(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mCarrierPhaseUncertainty> = d0;

        return d0;
    }

    static byte access$2002(android.location.GpsMeasurement, byte)
    {
        android.location.GpsMeasurement r0;
        byte b0;

        r0 := @parameter0: android.location.GpsMeasurement;

        b0 := @parameter1: byte;

        r0.<android.location.GpsMeasurement: byte mLossOfLock> = b0;

        return b0;
    }

    static double access$202(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mTimeOffsetInNs> = d0;

        return d0;
    }

    static int access$2102(android.location.GpsMeasurement, int)
    {
        android.location.GpsMeasurement r0;
        int i0;

        r0 := @parameter0: android.location.GpsMeasurement;

        i0 := @parameter1: int;

        r0.<android.location.GpsMeasurement: int mBitNumber> = i0;

        return i0;
    }

    static short access$2202(android.location.GpsMeasurement, short)
    {
        android.location.GpsMeasurement r0;
        short s0;

        r0 := @parameter0: android.location.GpsMeasurement;

        s0 := @parameter1: short;

        r0.<android.location.GpsMeasurement: short mTimeFromLastBitInMs> = s0;

        return s0;
    }

    static double access$2302(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mDopplerShiftInHz> = d0;

        return d0;
    }

    static double access$2402(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mDopplerShiftUncertaintyInHz> = d0;

        return d0;
    }

    static byte access$2502(android.location.GpsMeasurement, byte)
    {
        android.location.GpsMeasurement r0;
        byte b0;

        r0 := @parameter0: android.location.GpsMeasurement;

        b0 := @parameter1: byte;

        r0.<android.location.GpsMeasurement: byte mMultipathIndicator> = b0;

        return b0;
    }

    static double access$2602(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mSnrInDb> = d0;

        return d0;
    }

    static double access$2702(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mElevationInDeg> = d0;

        return d0;
    }

    static double access$2802(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mElevationUncertaintyInDeg> = d0;

        return d0;
    }

    static double access$2902(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mAzimuthInDeg> = d0;

        return d0;
    }

    static double access$3002(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mAzimuthUncertaintyInDeg> = d0;

        return d0;
    }

    static short access$302(android.location.GpsMeasurement, short)
    {
        android.location.GpsMeasurement r0;
        short s0;

        r0 := @parameter0: android.location.GpsMeasurement;

        s0 := @parameter1: short;

        r0.<android.location.GpsMeasurement: short mState> = s0;

        return s0;
    }

    static boolean access$3102(android.location.GpsMeasurement, boolean)
    {
        android.location.GpsMeasurement r0;
        boolean z0;

        r0 := @parameter0: android.location.GpsMeasurement;

        z0 := @parameter1: boolean;

        r0.<android.location.GpsMeasurement: boolean mUsedInFix> = z0;

        return z0;
    }

    static long access$402(android.location.GpsMeasurement, long)
    {
        android.location.GpsMeasurement r0;
        long l0;

        r0 := @parameter0: android.location.GpsMeasurement;

        l0 := @parameter1: long;

        r0.<android.location.GpsMeasurement: long mReceivedGpsTowInNs> = l0;

        return l0;
    }

    static long access$502(android.location.GpsMeasurement, long)
    {
        android.location.GpsMeasurement r0;
        long l0;

        r0 := @parameter0: android.location.GpsMeasurement;

        l0 := @parameter1: long;

        r0.<android.location.GpsMeasurement: long mReceivedGpsTowUncertaintyInNs> = l0;

        return l0;
    }

    static double access$602(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mCn0InDbHz> = d0;

        return d0;
    }

    static double access$702(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mPseudorangeRateInMetersPerSec> = d0;

        return d0;
    }

    static double access$802(android.location.GpsMeasurement, double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @parameter0: android.location.GpsMeasurement;

        d0 := @parameter1: double;

        r0.<android.location.GpsMeasurement: double mPseudorangeRateUncertaintyInMetersPerSec> = d0;

        return d0;
    }

    static short access$902(android.location.GpsMeasurement, short)
    {
        android.location.GpsMeasurement r0;
        short s0;

        r0 := @parameter0: android.location.GpsMeasurement;

        s0 := @parameter1: short;

        r0.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState> = s0;

        return s0;
    }

    private java.lang.String getAccumulatedDeltaRangeStateString()
    {
        android.location.GpsMeasurement r0;
        short s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8;
        java.lang.StringBuilder $r2;
        int $i9, $i10;
        java.lang.String $r4, $r6;

        r0 := @this: android.location.GpsMeasurement;

        $s1 = r0.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState>;

        if $s1 != 0 goto label1;

        return "Unknown";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $s2 = r0.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState>;

        $s3 = $s2 & 1;

        if $s3 != 1 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Valid|");

     label2:
        $s4 = r0.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState>;

        $s5 = $s4 & 2;

        if $s5 != 2 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reset|");

     label3:
        $s6 = r0.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState>;

        $s7 = $s6 & 4;

        if $s7 != 4 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CycleSlip|");

     label4:
        $s8 = r0.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState>;

        s0 = $s8 & -8;

        if s0 <= 0 goto label5;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Other(");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>(s0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")|");

     label5:
        $i9 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i10 = $i9 - 1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i10);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private java.lang.String getLossOfLockString()
    {
        android.location.GpsMeasurement r0;
        byte b0, $b1;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;

        r0 := @this: android.location.GpsMeasurement;

        b0 = r0.<android.location.GpsMeasurement: byte mLossOfLock>;

        if b0 == 0 goto label3;

        if b0 == 1 goto label2;

        if b0 == 2 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Invalid:");

        $b1 = r0.<android.location.GpsMeasurement: byte mLossOfLock>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label1:
        return "CycleSlip";

     label2:
        return "Ok";

     label3:
        return "Unknown";
    }

    private java.lang.String getMultipathIndicatorString()
    {
        android.location.GpsMeasurement r0;
        byte b0, $b1;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;

        r0 := @this: android.location.GpsMeasurement;

        b0 = r0.<android.location.GpsMeasurement: byte mMultipathIndicator>;

        if b0 == 0 goto label3;

        if b0 == 1 goto label2;

        if b0 == 2 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Invalid:");

        $b1 = r0.<android.location.GpsMeasurement: byte mMultipathIndicator>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label1:
        return "NotUsed";

     label2:
        return "Detected";

     label3:
        return "Unknown";
    }

    private java.lang.String getStateString()
    {
        android.location.GpsMeasurement r0;
        short s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12;
        java.lang.StringBuilder $r2;
        int $i13, $i14;
        java.lang.String $r4, $r6;

        r0 := @this: android.location.GpsMeasurement;

        $s1 = r0.<android.location.GpsMeasurement: short mState>;

        if $s1 != 0 goto label1;

        return "Unknown";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $s2 = r0.<android.location.GpsMeasurement: short mState>;

        $s3 = $s2 & 1;

        if $s3 != 1 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CodeLock|");

     label2:
        $s4 = r0.<android.location.GpsMeasurement: short mState>;

        $s5 = $s4 & 2;

        if $s5 != 2 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BitSync|");

     label3:
        $s6 = r0.<android.location.GpsMeasurement: short mState>;

        $s7 = $s6 & 4;

        if $s7 != 4 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SubframeSync|");

     label4:
        $s8 = r0.<android.location.GpsMeasurement: short mState>;

        $s9 = $s8 & 8;

        if $s9 != 8 goto label5;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TowDecoded|");

     label5:
        $s10 = r0.<android.location.GpsMeasurement: short mState>;

        $s11 = $s10 & 16;

        if $s11 != 16 goto label6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MsecAmbiguous");

     label6:
        $s12 = r0.<android.location.GpsMeasurement: short mState>;

        s0 = $s12 & -32;

        if s0 <= 0 goto label7;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Other(");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>(s0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")|");

     label7:
        $i13 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i14 = $i13 - 1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i14);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private void initialize()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        r0.<android.location.GpsMeasurement: int mFlags> = 0;

        virtualinvoke r0.<android.location.GpsMeasurement: void setPrn(byte)>(-128);

        virtualinvoke r0.<android.location.GpsMeasurement: void setTimeOffsetInNs(double)>(-9.223372036854776E18);

        virtualinvoke r0.<android.location.GpsMeasurement: void setState(short)>(0);

        virtualinvoke r0.<android.location.GpsMeasurement: void setReceivedGpsTowInNs(long)>(-9223372036854775808L);

        virtualinvoke r0.<android.location.GpsMeasurement: void setReceivedGpsTowUncertaintyInNs(long)>(9223372036854775807L);

        virtualinvoke r0.<android.location.GpsMeasurement: void setCn0InDbHz(double)>(4.9E-324);

        virtualinvoke r0.<android.location.GpsMeasurement: void setPseudorangeRateInMetersPerSec(double)>(4.9E-324);

        virtualinvoke r0.<android.location.GpsMeasurement: void setPseudorangeRateUncertaintyInMetersPerSec(double)>(4.9E-324);

        virtualinvoke r0.<android.location.GpsMeasurement: void setAccumulatedDeltaRangeState(short)>(0);

        virtualinvoke r0.<android.location.GpsMeasurement: void setAccumulatedDeltaRangeInMeters(double)>(4.9E-324);

        virtualinvoke r0.<android.location.GpsMeasurement: void setAccumulatedDeltaRangeUncertaintyInMeters(double)>(4.9E-324);

        virtualinvoke r0.<android.location.GpsMeasurement: void resetPseudorangeInMeters()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetPseudorangeUncertaintyInMeters()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetCodePhaseInChips()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetCodePhaseUncertaintyInChips()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetCarrierFrequencyInHz()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetCarrierCycles()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetCarrierPhase()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetCarrierPhaseUncertainty()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void setLossOfLock(byte)>(0);

        virtualinvoke r0.<android.location.GpsMeasurement: void resetBitNumber()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetTimeFromLastBitInMs()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetDopplerShiftInHz()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetDopplerShiftUncertaintyInHz()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void setMultipathIndicator(byte)>(0);

        virtualinvoke r0.<android.location.GpsMeasurement: void resetSnrInDb()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetElevationInDeg()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetElevationUncertaintyInDeg()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetAzimuthInDeg()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void resetAzimuthUncertaintyInDeg()>();

        virtualinvoke r0.<android.location.GpsMeasurement: void setUsedInFix(boolean)>(0);

        return;
    }

    private boolean isFlagSet(int)
    {
        android.location.GpsMeasurement r0;
        int i0, $i1, $i2;
        boolean z0;

        r0 := @this: android.location.GpsMeasurement;

        i0 := @parameter0: int;

        $i1 = r0.<android.location.GpsMeasurement: int mFlags>;

        $i2 = $i1 & i0;

        if $i2 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void resetFlag(int)
    {
        android.location.GpsMeasurement r0;
        int i0, $i1, $i2;

        r0 := @this: android.location.GpsMeasurement;

        i0 := @parameter0: int;

        $i1 = r0.<android.location.GpsMeasurement: int mFlags>;

        $i2 = $i1 & i0;

        r0.<android.location.GpsMeasurement: int mFlags> = $i2;

        return;
    }

    private void setFlag(int)
    {
        android.location.GpsMeasurement r0;
        int i0, $i1, $i2;

        r0 := @this: android.location.GpsMeasurement;

        i0 := @parameter0: int;

        $i1 = r0.<android.location.GpsMeasurement: int mFlags>;

        $i2 = $i1 | i0;

        r0.<android.location.GpsMeasurement: int mFlags> = $i2;

        return;
    }

    public int describeContents()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        return 0;
    }

    public double getAccumulatedDeltaRangeInMeters()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeInMeters>;

        return $d0;
    }

    public short getAccumulatedDeltaRangeState()
    {
        android.location.GpsMeasurement r0;
        short $s0;

        r0 := @this: android.location.GpsMeasurement;

        $s0 = r0.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState>;

        return $s0;
    }

    public double getAccumulatedDeltaRangeUncertaintyInMeters()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeUncertaintyInMeters>;

        return $d0;
    }

    public double getAzimuthInDeg()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mAzimuthInDeg>;

        return $d0;
    }

    public double getAzimuthUncertaintyInDeg()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mAzimuthUncertaintyInDeg>;

        return $d0;
    }

    public int getBitNumber()
    {
        android.location.GpsMeasurement r0;
        int $i0;

        r0 := @this: android.location.GpsMeasurement;

        $i0 = r0.<android.location.GpsMeasurement: int mBitNumber>;

        return $i0;
    }

    public long getCarrierCycles()
    {
        android.location.GpsMeasurement r0;
        long $l0;

        r0 := @this: android.location.GpsMeasurement;

        $l0 = r0.<android.location.GpsMeasurement: long mCarrierCycles>;

        return $l0;
    }

    public float getCarrierFrequencyInHz()
    {
        android.location.GpsMeasurement r0;
        float $f0;

        r0 := @this: android.location.GpsMeasurement;

        $f0 = r0.<android.location.GpsMeasurement: float mCarrierFrequencyInHz>;

        return $f0;
    }

    public double getCarrierPhase()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mCarrierPhase>;

        return $d0;
    }

    public double getCarrierPhaseUncertainty()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mCarrierPhaseUncertainty>;

        return $d0;
    }

    public double getCn0InDbHz()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mCn0InDbHz>;

        return $d0;
    }

    public double getCodePhaseInChips()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mCodePhaseInChips>;

        return $d0;
    }

    public double getCodePhaseUncertaintyInChips()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mCodePhaseUncertaintyInChips>;

        return $d0;
    }

    public double getDopplerShiftInHz()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mDopplerShiftInHz>;

        return $d0;
    }

    public double getDopplerShiftUncertaintyInHz()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mDopplerShiftUncertaintyInHz>;

        return $d0;
    }

    public double getElevationInDeg()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mElevationInDeg>;

        return $d0;
    }

    public double getElevationUncertaintyInDeg()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mElevationUncertaintyInDeg>;

        return $d0;
    }

    public byte getLossOfLock()
    {
        android.location.GpsMeasurement r0;
        byte $b0;

        r0 := @this: android.location.GpsMeasurement;

        $b0 = r0.<android.location.GpsMeasurement: byte mLossOfLock>;

        return $b0;
    }

    public byte getMultipathIndicator()
    {
        android.location.GpsMeasurement r0;
        byte $b0;

        r0 := @this: android.location.GpsMeasurement;

        $b0 = r0.<android.location.GpsMeasurement: byte mMultipathIndicator>;

        return $b0;
    }

    public byte getPrn()
    {
        android.location.GpsMeasurement r0;
        byte $b0;

        r0 := @this: android.location.GpsMeasurement;

        $b0 = r0.<android.location.GpsMeasurement: byte mPrn>;

        return $b0;
    }

    public double getPseudorangeInMeters()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mPseudorangeInMeters>;

        return $d0;
    }

    public double getPseudorangeRateInMetersPerSec()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mPseudorangeRateInMetersPerSec>;

        return $d0;
    }

    public double getPseudorangeRateUncertaintyInMetersPerSec()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mPseudorangeRateUncertaintyInMetersPerSec>;

        return $d0;
    }

    public double getPseudorangeUncertaintyInMeters()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mPseudorangeUncertaintyInMeters>;

        return $d0;
    }

    public long getReceivedGpsTowInNs()
    {
        android.location.GpsMeasurement r0;
        long $l0;

        r0 := @this: android.location.GpsMeasurement;

        $l0 = r0.<android.location.GpsMeasurement: long mReceivedGpsTowInNs>;

        return $l0;
    }

    public long getReceivedGpsTowUncertaintyInNs()
    {
        android.location.GpsMeasurement r0;
        long $l0;

        r0 := @this: android.location.GpsMeasurement;

        $l0 = r0.<android.location.GpsMeasurement: long mReceivedGpsTowUncertaintyInNs>;

        return $l0;
    }

    public double getSnrInDb()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mSnrInDb>;

        return $d0;
    }

    public short getState()
    {
        android.location.GpsMeasurement r0;
        short $s0;

        r0 := @this: android.location.GpsMeasurement;

        $s0 = r0.<android.location.GpsMeasurement: short mState>;

        return $s0;
    }

    public short getTimeFromLastBitInMs()
    {
        android.location.GpsMeasurement r0;
        short $s0;

        r0 := @this: android.location.GpsMeasurement;

        $s0 = r0.<android.location.GpsMeasurement: short mTimeFromLastBitInMs>;

        return $s0;
    }

    public double getTimeOffsetInNs()
    {
        android.location.GpsMeasurement r0;
        double $d0;

        r0 := @this: android.location.GpsMeasurement;

        $d0 = r0.<android.location.GpsMeasurement: double mTimeOffsetInNs>;

        return $d0;
    }

    public boolean hasAzimuthInDeg()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(8);

        return $z0;
    }

    public boolean hasAzimuthUncertaintyInDeg()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(16);

        return $z0;
    }

    public boolean hasBitNumber()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(8192);

        return $z0;
    }

    public boolean hasCarrierCycles()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(1024);

        return $z0;
    }

    public boolean hasCarrierFrequencyInHz()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(512);

        return $z0;
    }

    public boolean hasCarrierPhase()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(2048);

        return $z0;
    }

    public boolean hasCarrierPhaseUncertainty()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(4096);

        return $z0;
    }

    public boolean hasCodePhaseInChips()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(128);

        return $z0;
    }

    public boolean hasCodePhaseUncertaintyInChips()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(256);

        return $z0;
    }

    public boolean hasDopplerShiftInHz()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(32768);

        return $z0;
    }

    public boolean hasDopplerShiftUncertaintyInHz()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(65536);

        return $z0;
    }

    public boolean hasElevationInDeg()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(2);

        return $z0;
    }

    public boolean hasElevationUncertaintyInDeg()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(4);

        return $z0;
    }

    public boolean hasPseudorangeInMeters()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(32);

        return $z0;
    }

    public boolean hasPseudorangeUncertaintyInMeters()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(64);

        return $z0;
    }

    public boolean hasSnrInDb()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(1);

        return $z0;
    }

    public boolean hasTimeFromLastBitInMs()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(16384);

        return $z0;
    }

    public boolean isPseudorangeRateCorrected()
    {
        android.location.GpsMeasurement r0;
        boolean $z0, $z1;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = specialinvoke r0.<android.location.GpsMeasurement: boolean isFlagSet(int)>(262144);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public boolean isUsedInFix()
    {
        android.location.GpsMeasurement r0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        $z0 = r0.<android.location.GpsMeasurement: boolean mUsedInFix>;

        return $z0;
    }

    public void reset()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void initialize()>();

        return;
    }

    public void resetAzimuthInDeg()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(8);

        r0.<android.location.GpsMeasurement: double mAzimuthInDeg> = #NaN;

        return;
    }

    public void resetAzimuthUncertaintyInDeg()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(16);

        r0.<android.location.GpsMeasurement: double mAzimuthUncertaintyInDeg> = #NaN;

        return;
    }

    public void resetBitNumber()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(8192);

        r0.<android.location.GpsMeasurement: int mBitNumber> = -2147483648;

        return;
    }

    public void resetCarrierCycles()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(1024);

        r0.<android.location.GpsMeasurement: long mCarrierCycles> = -9223372036854775808L;

        return;
    }

    public void resetCarrierFrequencyInHz()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(512);

        r0.<android.location.GpsMeasurement: float mCarrierFrequencyInHz> = #NaNF;

        return;
    }

    public void resetCarrierPhase()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(2048);

        r0.<android.location.GpsMeasurement: double mCarrierPhase> = #NaN;

        return;
    }

    public void resetCarrierPhaseUncertainty()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(4096);

        r0.<android.location.GpsMeasurement: double mCarrierPhaseUncertainty> = #NaN;

        return;
    }

    public void resetCodePhaseInChips()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(128);

        r0.<android.location.GpsMeasurement: double mCodePhaseInChips> = #NaN;

        return;
    }

    public void resetCodePhaseUncertaintyInChips()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(256);

        r0.<android.location.GpsMeasurement: double mCodePhaseUncertaintyInChips> = #NaN;

        return;
    }

    public void resetDopplerShiftInHz()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(32768);

        r0.<android.location.GpsMeasurement: double mDopplerShiftInHz> = #NaN;

        return;
    }

    public void resetDopplerShiftUncertaintyInHz()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(65536);

        r0.<android.location.GpsMeasurement: double mDopplerShiftUncertaintyInHz> = #NaN;

        return;
    }

    public void resetElevationInDeg()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(2);

        r0.<android.location.GpsMeasurement: double mElevationInDeg> = #NaN;

        return;
    }

    public void resetElevationUncertaintyInDeg()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(4);

        r0.<android.location.GpsMeasurement: double mElevationUncertaintyInDeg> = #NaN;

        return;
    }

    public void resetPseudorangeInMeters()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(32);

        r0.<android.location.GpsMeasurement: double mPseudorangeInMeters> = #NaN;

        return;
    }

    public void resetPseudorangeUncertaintyInMeters()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(64);

        r0.<android.location.GpsMeasurement: double mPseudorangeUncertaintyInMeters> = #NaN;

        return;
    }

    public void resetSnrInDb()
    {
        android.location.GpsMeasurement r0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(1);

        r0.<android.location.GpsMeasurement: double mSnrInDb> = #NaN;

        return;
    }

    public void resetTimeFromLastBitInMs()
    {
        android.location.GpsMeasurement r0;
        short $s0;

        r0 := @this: android.location.GpsMeasurement;

        specialinvoke r0.<android.location.GpsMeasurement: void resetFlag(int)>(16384);

        $s0 = (short) -32768;

        r0.<android.location.GpsMeasurement: short mTimeFromLastBitInMs> = $s0;

        return;
    }

    public void set(android.location.GpsMeasurement)
    {
        android.location.GpsMeasurement r0, r1;
        int $i0, $i12;
        byte $b1, $b2, $b10, $b11, $b15, $b16;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        short $s3, $s4, $s7, $s8, $s13, $s14;
        long $l5, $l6, $l9;
        float $f0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        r1 := @parameter0: android.location.GpsMeasurement;

        $i0 = r1.<android.location.GpsMeasurement: int mFlags>;

        r0.<android.location.GpsMeasurement: int mFlags> = $i0;

        $b1 = r1.<android.location.GpsMeasurement: byte mPrn>;

        $b2 = (byte) $b1;

        r0.<android.location.GpsMeasurement: byte mPrn> = $b2;

        $d0 = r1.<android.location.GpsMeasurement: double mTimeOffsetInNs>;

        r0.<android.location.GpsMeasurement: double mTimeOffsetInNs> = $d0;

        $s3 = r1.<android.location.GpsMeasurement: short mState>;

        $s4 = (short) $s3;

        r0.<android.location.GpsMeasurement: short mState> = $s4;

        $l5 = r1.<android.location.GpsMeasurement: long mReceivedGpsTowInNs>;

        r0.<android.location.GpsMeasurement: long mReceivedGpsTowInNs> = $l5;

        $l6 = r1.<android.location.GpsMeasurement: long mReceivedGpsTowUncertaintyInNs>;

        r0.<android.location.GpsMeasurement: long mReceivedGpsTowUncertaintyInNs> = $l6;

        $d1 = r1.<android.location.GpsMeasurement: double mCn0InDbHz>;

        r0.<android.location.GpsMeasurement: double mCn0InDbHz> = $d1;

        $d2 = r1.<android.location.GpsMeasurement: double mPseudorangeRateInMetersPerSec>;

        r0.<android.location.GpsMeasurement: double mPseudorangeRateInMetersPerSec> = $d2;

        $d3 = r1.<android.location.GpsMeasurement: double mPseudorangeRateUncertaintyInMetersPerSec>;

        r0.<android.location.GpsMeasurement: double mPseudorangeRateUncertaintyInMetersPerSec> = $d3;

        $s7 = r1.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState>;

        $s8 = (short) $s7;

        r0.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState> = $s8;

        $d4 = r1.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeInMeters>;

        r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeInMeters> = $d4;

        $d5 = r1.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeUncertaintyInMeters>;

        r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeUncertaintyInMeters> = $d5;

        $d6 = r1.<android.location.GpsMeasurement: double mPseudorangeInMeters>;

        r0.<android.location.GpsMeasurement: double mPseudorangeInMeters> = $d6;

        $d7 = r1.<android.location.GpsMeasurement: double mPseudorangeUncertaintyInMeters>;

        r0.<android.location.GpsMeasurement: double mPseudorangeUncertaintyInMeters> = $d7;

        $d8 = r1.<android.location.GpsMeasurement: double mCodePhaseInChips>;

        r0.<android.location.GpsMeasurement: double mCodePhaseInChips> = $d8;

        $d9 = r1.<android.location.GpsMeasurement: double mCodePhaseUncertaintyInChips>;

        r0.<android.location.GpsMeasurement: double mCodePhaseUncertaintyInChips> = $d9;

        $f0 = r1.<android.location.GpsMeasurement: float mCarrierFrequencyInHz>;

        r0.<android.location.GpsMeasurement: float mCarrierFrequencyInHz> = $f0;

        $l9 = r1.<android.location.GpsMeasurement: long mCarrierCycles>;

        r0.<android.location.GpsMeasurement: long mCarrierCycles> = $l9;

        $d10 = r1.<android.location.GpsMeasurement: double mCarrierPhase>;

        r0.<android.location.GpsMeasurement: double mCarrierPhase> = $d10;

        $d11 = r1.<android.location.GpsMeasurement: double mCarrierPhaseUncertainty>;

        r0.<android.location.GpsMeasurement: double mCarrierPhaseUncertainty> = $d11;

        $b10 = r1.<android.location.GpsMeasurement: byte mLossOfLock>;

        $b11 = (byte) $b10;

        r0.<android.location.GpsMeasurement: byte mLossOfLock> = $b11;

        $i12 = r1.<android.location.GpsMeasurement: int mBitNumber>;

        r0.<android.location.GpsMeasurement: int mBitNumber> = $i12;

        $s13 = r1.<android.location.GpsMeasurement: short mTimeFromLastBitInMs>;

        $s14 = (short) $s13;

        r0.<android.location.GpsMeasurement: short mTimeFromLastBitInMs> = $s14;

        $d12 = r1.<android.location.GpsMeasurement: double mDopplerShiftInHz>;

        r0.<android.location.GpsMeasurement: double mDopplerShiftInHz> = $d12;

        $d13 = r1.<android.location.GpsMeasurement: double mDopplerShiftUncertaintyInHz>;

        r0.<android.location.GpsMeasurement: double mDopplerShiftUncertaintyInHz> = $d13;

        $b15 = r1.<android.location.GpsMeasurement: byte mMultipathIndicator>;

        $b16 = (byte) $b15;

        r0.<android.location.GpsMeasurement: byte mMultipathIndicator> = $b16;

        $d14 = r1.<android.location.GpsMeasurement: double mSnrInDb>;

        r0.<android.location.GpsMeasurement: double mSnrInDb> = $d14;

        $d15 = r1.<android.location.GpsMeasurement: double mElevationInDeg>;

        r0.<android.location.GpsMeasurement: double mElevationInDeg> = $d15;

        $d16 = r1.<android.location.GpsMeasurement: double mElevationUncertaintyInDeg>;

        r0.<android.location.GpsMeasurement: double mElevationUncertaintyInDeg> = $d16;

        $d17 = r1.<android.location.GpsMeasurement: double mAzimuthInDeg>;

        r0.<android.location.GpsMeasurement: double mAzimuthInDeg> = $d17;

        $d18 = r1.<android.location.GpsMeasurement: double mAzimuthUncertaintyInDeg>;

        r0.<android.location.GpsMeasurement: double mAzimuthUncertaintyInDeg> = $d18;

        $z0 = r1.<android.location.GpsMeasurement: boolean mUsedInFix>;

        r0.<android.location.GpsMeasurement: boolean mUsedInFix> = $z0;

        return;
    }

    public void setAccumulatedDeltaRangeInMeters(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeInMeters> = d0;

        return;
    }

    public void setAccumulatedDeltaRangeState(short)
    {
        android.location.GpsMeasurement r0;
        short s0, $s1;

        r0 := @this: android.location.GpsMeasurement;

        s0 := @parameter0: short;

        $s1 = (short) s0;

        r0.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState> = $s1;

        return;
    }

    public void setAccumulatedDeltaRangeUncertaintyInMeters(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeUncertaintyInMeters> = d0;

        return;
    }

    public void setAzimuthInDeg(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(8);

        r0.<android.location.GpsMeasurement: double mAzimuthInDeg> = d0;

        return;
    }

    public void setAzimuthUncertaintyInDeg(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(16);

        r0.<android.location.GpsMeasurement: double mAzimuthUncertaintyInDeg> = d0;

        return;
    }

    public void setBitNumber(int)
    {
        android.location.GpsMeasurement r0;
        int i0;

        r0 := @this: android.location.GpsMeasurement;

        i0 := @parameter0: int;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(8192);

        r0.<android.location.GpsMeasurement: int mBitNumber> = i0;

        return;
    }

    public void setCarrierCycles(long)
    {
        android.location.GpsMeasurement r0;
        long l0;

        r0 := @this: android.location.GpsMeasurement;

        l0 := @parameter0: long;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(1024);

        r0.<android.location.GpsMeasurement: long mCarrierCycles> = l0;

        return;
    }

    public void setCarrierFrequencyInHz(float)
    {
        android.location.GpsMeasurement r0;
        float f0;

        r0 := @this: android.location.GpsMeasurement;

        f0 := @parameter0: float;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(512);

        r0.<android.location.GpsMeasurement: float mCarrierFrequencyInHz> = f0;

        return;
    }

    public void setCarrierPhase(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(2048);

        r0.<android.location.GpsMeasurement: double mCarrierPhase> = d0;

        return;
    }

    public void setCarrierPhaseUncertainty(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(4096);

        r0.<android.location.GpsMeasurement: double mCarrierPhaseUncertainty> = d0;

        return;
    }

    public void setCn0InDbHz(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        r0.<android.location.GpsMeasurement: double mCn0InDbHz> = d0;

        return;
    }

    public void setCodePhaseInChips(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(128);

        r0.<android.location.GpsMeasurement: double mCodePhaseInChips> = d0;

        return;
    }

    public void setCodePhaseUncertaintyInChips(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(256);

        r0.<android.location.GpsMeasurement: double mCodePhaseUncertaintyInChips> = d0;

        return;
    }

    public void setDopplerShiftInHz(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(32768);

        r0.<android.location.GpsMeasurement: double mDopplerShiftInHz> = d0;

        return;
    }

    public void setDopplerShiftUncertaintyInHz(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(65536);

        r0.<android.location.GpsMeasurement: double mDopplerShiftUncertaintyInHz> = d0;

        return;
    }

    public void setElevationInDeg(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(2);

        r0.<android.location.GpsMeasurement: double mElevationInDeg> = d0;

        return;
    }

    public void setElevationUncertaintyInDeg(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(4);

        r0.<android.location.GpsMeasurement: double mElevationUncertaintyInDeg> = d0;

        return;
    }

    public void setLossOfLock(byte)
    {
        android.location.GpsMeasurement r0;
        byte b0, $b1;

        r0 := @this: android.location.GpsMeasurement;

        b0 := @parameter0: byte;

        $b1 = (byte) b0;

        r0.<android.location.GpsMeasurement: byte mLossOfLock> = $b1;

        return;
    }

    public void setMultipathIndicator(byte)
    {
        android.location.GpsMeasurement r0;
        byte b0, $b1;

        r0 := @this: android.location.GpsMeasurement;

        b0 := @parameter0: byte;

        $b1 = (byte) b0;

        r0.<android.location.GpsMeasurement: byte mMultipathIndicator> = $b1;

        return;
    }

    public void setPrn(byte)
    {
        android.location.GpsMeasurement r0;
        byte b0, $b1;

        r0 := @this: android.location.GpsMeasurement;

        b0 := @parameter0: byte;

        $b1 = (byte) b0;

        r0.<android.location.GpsMeasurement: byte mPrn> = $b1;

        return;
    }

    public void setPseudorangeInMeters(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(32);

        r0.<android.location.GpsMeasurement: double mPseudorangeInMeters> = d0;

        return;
    }

    public void setPseudorangeRateInMetersPerSec(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        r0.<android.location.GpsMeasurement: double mPseudorangeRateInMetersPerSec> = d0;

        return;
    }

    public void setPseudorangeRateUncertaintyInMetersPerSec(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        r0.<android.location.GpsMeasurement: double mPseudorangeRateUncertaintyInMetersPerSec> = d0;

        return;
    }

    public void setPseudorangeUncertaintyInMeters(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(64);

        r0.<android.location.GpsMeasurement: double mPseudorangeUncertaintyInMeters> = d0;

        return;
    }

    public void setReceivedGpsTowInNs(long)
    {
        android.location.GpsMeasurement r0;
        long l0;

        r0 := @this: android.location.GpsMeasurement;

        l0 := @parameter0: long;

        r0.<android.location.GpsMeasurement: long mReceivedGpsTowInNs> = l0;

        return;
    }

    public void setReceivedGpsTowUncertaintyInNs(long)
    {
        android.location.GpsMeasurement r0;
        long l0;

        r0 := @this: android.location.GpsMeasurement;

        l0 := @parameter0: long;

        r0.<android.location.GpsMeasurement: long mReceivedGpsTowUncertaintyInNs> = l0;

        return;
    }

    public void setSnrInDb(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(1);

        r0.<android.location.GpsMeasurement: double mSnrInDb> = d0;

        return;
    }

    public void setState(short)
    {
        android.location.GpsMeasurement r0;
        short s0, $s1;

        r0 := @this: android.location.GpsMeasurement;

        s0 := @parameter0: short;

        $s1 = (short) s0;

        r0.<android.location.GpsMeasurement: short mState> = $s1;

        return;
    }

    public void setTimeFromLastBitInMs(short)
    {
        android.location.GpsMeasurement r0;
        short s0, $s1;

        r0 := @this: android.location.GpsMeasurement;

        s0 := @parameter0: short;

        specialinvoke r0.<android.location.GpsMeasurement: void setFlag(int)>(16384);

        $s1 = (short) s0;

        r0.<android.location.GpsMeasurement: short mTimeFromLastBitInMs> = $s1;

        return;
    }

    public void setTimeOffsetInNs(double)
    {
        android.location.GpsMeasurement r0;
        double d0;

        r0 := @this: android.location.GpsMeasurement;

        d0 := @parameter0: double;

        r0.<android.location.GpsMeasurement: double mTimeOffsetInNs> = d0;

        return;
    }

    public void setUsedInFix(boolean)
    {
        android.location.GpsMeasurement r0;
        boolean z0;

        r0 := @this: android.location.GpsMeasurement;

        z0 := @parameter0: boolean;

        r0.<android.location.GpsMeasurement: boolean mUsedInFix> = z0;

        return;
    }

    public java.lang.String toString()
    {
        android.location.GpsMeasurement r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.lang.StringBuilder $r2;
        java.lang.Object[] $r3, $r6, $r9, $r12, $r16, $r19, $r23, $r26, $r29, $r33, $r35, $r37, $r39, $r41, $r43, $r46, $r48, $r50, $r52, $r55, $r57, $r59, $r61;
        byte $b0;
        java.lang.Byte $r4;
        java.lang.String $r5, $r8, $r10, $r11, $r15, $r18, $r22, $r25, $r27, $r28, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r45, $r47, $r49, $r51, $r53, $r54, $r56, $r58, $r60, $r63, $r64;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        java.lang.Double $r7, $r17, $r20, $r21, $r30, $r31, r65, r66, r67, r68, r71, r72, r75, r76, r77, r78, r79, r80, r81;
        long $l1, $l2, $l5;
        java.lang.Long $r13, $r14, r70;
        java.lang.Boolean $r24, $r62;
        short $s3;
        int $i4;
        float $f0;
        java.lang.Float r69;
        java.lang.Integer r73;
        java.lang.Short r74;

        r0 := @this: android.location.GpsMeasurement;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("GpsMeasurement:\n");

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = "Prn";

        $b0 = r0.<android.location.GpsMeasurement: byte mPrn>;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r3[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "TimeOffsetInNs";

        $d0 = r0.<android.location.GpsMeasurement: double mTimeOffsetInNs>;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6[1] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "State";

        $r10 = specialinvoke r0.<android.location.GpsMeasurement: java.lang.String getStateString()>();

        $r9[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = newarray (java.lang.Object)[4];

        $r12[0] = "ReceivedGpsTowInNs";

        $l1 = r0.<android.location.GpsMeasurement: long mReceivedGpsTowInNs>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r12[1] = $r13;

        $r12[2] = "ReceivedGpsTowUncertaintyInNs";

        $l2 = r0.<android.location.GpsMeasurement: long mReceivedGpsTowUncertaintyInNs>;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r12[3] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %-25s   %-40s = %s\n", $r12);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = "Cn0InDbHz";

        $d1 = r0.<android.location.GpsMeasurement: double mCn0InDbHz>;

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r16[1] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r19 = newarray (java.lang.Object)[4];

        $r19[0] = "PseudorangeRateInMetersPerSec";

        $d2 = r0.<android.location.GpsMeasurement: double mPseudorangeRateInMetersPerSec>;

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r19[1] = $r20;

        $r19[2] = "PseudorangeRateUncertaintyInMetersPerSec";

        $d3 = r0.<android.location.GpsMeasurement: double mPseudorangeRateUncertaintyInMetersPerSec>;

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r19[3] = $r21;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %-25s   %-40s = %s\n", $r19);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r23 = newarray (java.lang.Object)[2];

        $r23[0] = "PseudorangeRateIsCorrected";

        $z1 = virtualinvoke r0.<android.location.GpsMeasurement: boolean isPseudorangeRateCorrected()>();

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r23[1] = $r24;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r23);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r26 = newarray (java.lang.Object)[2];

        $r26[0] = "AccumulatedDeltaRangeState";

        $r27 = specialinvoke r0.<android.location.GpsMeasurement: java.lang.String getAccumulatedDeltaRangeStateString()>();

        $r26[1] = $r27;

        $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r26);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r29 = newarray (java.lang.Object)[4];

        $r29[0] = "AccumulatedDeltaRangeInMeters";

        $d4 = r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeInMeters>;

        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r29[1] = $r30;

        $r29[2] = "AccumulatedDeltaRangeUncertaintyInMeters";

        $d5 = r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeUncertaintyInMeters>;

        $r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r29[3] = $r31;

        $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %-25s   %-40s = %s\n", $r29);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        z0 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasPseudorangeInMeters()>();

        if z0 == 0 goto label01;

        $d18 = r0.<android.location.GpsMeasurement: double mPseudorangeInMeters>;

        r65 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d18);

        goto label02;

     label01:
        r65 = null;

     label02:
        $z2 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasPseudorangeUncertaintyInMeters()>();

        if $z2 == 0 goto label03;

        $d17 = r0.<android.location.GpsMeasurement: double mPseudorangeUncertaintyInMeters>;

        r66 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d17);

        goto label04;

     label03:
        r66 = null;

     label04:
        $r33 = newarray (java.lang.Object)[4];

        $r33[0] = "PseudorangeInMeters";

        $r33[1] = r65;

        $r33[2] = "PseudorangeUncertaintyInMeters";

        $r33[3] = r66;

        $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %-25s   %-40s = %s\n", $r33);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $z3 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasCodePhaseInChips()>();

        if $z3 == 0 goto label05;

        $d16 = r0.<android.location.GpsMeasurement: double mCodePhaseInChips>;

        r67 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d16);

        goto label06;

     label05:
        r67 = null;

     label06:
        $z4 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasCodePhaseUncertaintyInChips()>();

        if $z4 == 0 goto label07;

        $d15 = r0.<android.location.GpsMeasurement: double mCodePhaseUncertaintyInChips>;

        r68 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d15);

        goto label08;

     label07:
        r68 = null;

     label08:
        $r35 = newarray (java.lang.Object)[4];

        $r35[0] = "CodePhaseInChips";

        $r35[1] = r67;

        $r35[2] = "CodePhaseUncertaintyInChips";

        $r35[3] = r68;

        $r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %-25s   %-40s = %s\n", $r35);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $z5 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasCarrierFrequencyInHz()>();

        if $z5 == 0 goto label09;

        $f0 = r0.<android.location.GpsMeasurement: float mCarrierFrequencyInHz>;

        r69 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        goto label10;

     label09:
        r69 = null;

     label10:
        $r37 = newarray (java.lang.Object)[2];

        $r37[0] = "CarrierFrequencyInHz";

        $r37[1] = r69;

        $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r37);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $z6 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasCarrierCycles()>();

        if $z6 == 0 goto label11;

        $l5 = r0.<android.location.GpsMeasurement: long mCarrierCycles>;

        r70 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        goto label12;

     label11:
        r70 = null;

     label12:
        $r39 = newarray (java.lang.Object)[2];

        $r39[0] = "CarrierCycles";

        $r39[1] = r70;

        $r40 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r39);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $z7 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasCarrierPhase()>();

        if $z7 == 0 goto label13;

        $d14 = r0.<android.location.GpsMeasurement: double mCarrierPhase>;

        r71 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        goto label14;

     label13:
        r71 = null;

     label14:
        $z8 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasCarrierPhaseUncertainty()>();

        if $z8 == 0 goto label15;

        $d13 = r0.<android.location.GpsMeasurement: double mCarrierPhaseUncertainty>;

        r72 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d13);

        goto label16;

     label15:
        r72 = null;

     label16:
        $r41 = newarray (java.lang.Object)[4];

        $r41[0] = "CarrierPhase";

        $r41[1] = r71;

        $r41[2] = "CarrierPhaseUncertainty";

        $r41[3] = r72;

        $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %-25s   %-40s = %s\n", $r41);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r43 = newarray (java.lang.Object)[2];

        $r43[0] = "LossOfLock";

        $r44 = specialinvoke r0.<android.location.GpsMeasurement: java.lang.String getLossOfLockString()>();

        $r43[1] = $r44;

        $r45 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r43);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $z9 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasBitNumber()>();

        if $z9 == 0 goto label17;

        $i4 = r0.<android.location.GpsMeasurement: int mBitNumber>;

        r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        goto label18;

     label17:
        r73 = null;

     label18:
        $r46 = newarray (java.lang.Object)[2];

        $r46[0] = "BitNumber";

        $r46[1] = r73;

        $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r46);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $z10 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasTimeFromLastBitInMs()>();

        if $z10 == 0 goto label19;

        $s3 = r0.<android.location.GpsMeasurement: short mTimeFromLastBitInMs>;

        r74 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        goto label20;

     label19:
        r74 = null;

     label20:
        $r48 = newarray (java.lang.Object)[2];

        $r48[0] = "TimeFromLastBitInMs";

        $r48[1] = r74;

        $r49 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r48);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $z11 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasDopplerShiftInHz()>();

        if $z11 == 0 goto label21;

        $d12 = r0.<android.location.GpsMeasurement: double mDopplerShiftInHz>;

        r75 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d12);

        goto label22;

     label21:
        r75 = null;

     label22:
        $z12 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasDopplerShiftUncertaintyInHz()>();

        if $z12 == 0 goto label23;

        $d11 = r0.<android.location.GpsMeasurement: double mDopplerShiftUncertaintyInHz>;

        r76 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        goto label24;

     label23:
        r76 = null;

     label24:
        $r50 = newarray (java.lang.Object)[4];

        $r50[0] = "DopplerShiftInHz";

        $r50[1] = r75;

        $r50[2] = "DopplerShiftUncertaintyInHz";

        $r50[3] = r76;

        $r51 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %-25s   %-40s = %s\n", $r50);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r52 = newarray (java.lang.Object)[2];

        $r52[0] = "MultipathIndicator";

        $r53 = specialinvoke r0.<android.location.GpsMeasurement: java.lang.String getMultipathIndicatorString()>();

        $r52[1] = $r53;

        $r54 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r52);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $z13 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasSnrInDb()>();

        if $z13 == 0 goto label25;

        $d10 = r0.<android.location.GpsMeasurement: double mSnrInDb>;

        r77 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        goto label26;

     label25:
        r77 = null;

     label26:
        $r55 = newarray (java.lang.Object)[2];

        $r55[0] = "SnrInDb";

        $r55[1] = r77;

        $r56 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r55);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $z14 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasElevationInDeg()>();

        if $z14 == 0 goto label27;

        $d9 = r0.<android.location.GpsMeasurement: double mElevationInDeg>;

        r78 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d9);

        goto label28;

     label27:
        r78 = null;

     label28:
        $z15 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasElevationUncertaintyInDeg()>();

        if $z15 == 0 goto label29;

        $d8 = r0.<android.location.GpsMeasurement: double mElevationUncertaintyInDeg>;

        r79 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        goto label30;

     label29:
        r79 = null;

     label30:
        $r57 = newarray (java.lang.Object)[4];

        $r57[0] = "ElevationInDeg";

        $r57[1] = r78;

        $r57[2] = "ElevationUncertaintyInDeg";

        $r57[3] = r79;

        $r58 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %-25s   %-40s = %s\n", $r57);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $z16 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasAzimuthInDeg()>();

        if $z16 == 0 goto label31;

        $d7 = r0.<android.location.GpsMeasurement: double mAzimuthInDeg>;

        r80 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        goto label32;

     label31:
        r80 = null;

     label32:
        r81 = null;

        $z17 = virtualinvoke r0.<android.location.GpsMeasurement: boolean hasAzimuthUncertaintyInDeg()>();

        if $z17 == 0 goto label33;

        $d6 = r0.<android.location.GpsMeasurement: double mAzimuthUncertaintyInDeg>;

        r81 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

     label33:
        $r59 = newarray (java.lang.Object)[4];

        $r59[0] = "AzimuthInDeg";

        $r59[1] = r80;

        $r59[2] = "AzimuthUncertaintyInDeg";

        $r59[3] = r81;

        $r60 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %-25s   %-40s = %s\n", $r59);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r61 = newarray (java.lang.Object)[2];

        $r61[0] = "UsedInFix";

        $z18 = r0.<android.location.GpsMeasurement: boolean mUsedInFix>;

        $r62 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z18);

        $r61[1] = $r62;

        $r63 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("   %-29s = %s\n", $r61);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r64 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r64;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.location.GpsMeasurement r0;
        android.os.Parcel r1;
        int i0, $i1, $i9, i12;
        byte $b2, $b8, $b11;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        short $s3, $s6, $s10;
        long $l4, $l5, $l7;
        float $f0;
        boolean $z0;

        r0 := @this: android.location.GpsMeasurement;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.location.GpsMeasurement: int mFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $b2 = r0.<android.location.GpsMeasurement: byte mPrn>;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>($b2);

        $d0 = r0.<android.location.GpsMeasurement: double mTimeOffsetInNs>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d0);

        $s3 = r0.<android.location.GpsMeasurement: short mState>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($s3);

        $l4 = r0.<android.location.GpsMeasurement: long mReceivedGpsTowInNs>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $l5 = r0.<android.location.GpsMeasurement: long mReceivedGpsTowUncertaintyInNs>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        $d1 = r0.<android.location.GpsMeasurement: double mCn0InDbHz>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d1);

        $d2 = r0.<android.location.GpsMeasurement: double mPseudorangeRateInMetersPerSec>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d2);

        $d3 = r0.<android.location.GpsMeasurement: double mPseudorangeRateUncertaintyInMetersPerSec>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d3);

        $s6 = r0.<android.location.GpsMeasurement: short mAccumulatedDeltaRangeState>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($s6);

        $d4 = r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeInMeters>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d4);

        $d5 = r0.<android.location.GpsMeasurement: double mAccumulatedDeltaRangeUncertaintyInMeters>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d5);

        $d6 = r0.<android.location.GpsMeasurement: double mPseudorangeInMeters>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d6);

        $d7 = r0.<android.location.GpsMeasurement: double mPseudorangeUncertaintyInMeters>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d7);

        $d8 = r0.<android.location.GpsMeasurement: double mCodePhaseInChips>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d8);

        $d9 = r0.<android.location.GpsMeasurement: double mCodePhaseUncertaintyInChips>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d9);

        $f0 = r0.<android.location.GpsMeasurement: float mCarrierFrequencyInHz>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $l7 = r0.<android.location.GpsMeasurement: long mCarrierCycles>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l7);

        $d10 = r0.<android.location.GpsMeasurement: double mCarrierPhase>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d10);

        $d11 = r0.<android.location.GpsMeasurement: double mCarrierPhaseUncertainty>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d11);

        $b8 = r0.<android.location.GpsMeasurement: byte mLossOfLock>;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>($b8);

        $i9 = r0.<android.location.GpsMeasurement: int mBitNumber>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        $s10 = r0.<android.location.GpsMeasurement: short mTimeFromLastBitInMs>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($s10);

        $d12 = r0.<android.location.GpsMeasurement: double mDopplerShiftInHz>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d12);

        $d13 = r0.<android.location.GpsMeasurement: double mDopplerShiftUncertaintyInHz>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d13);

        $b11 = r0.<android.location.GpsMeasurement: byte mMultipathIndicator>;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>($b11);

        $d14 = r0.<android.location.GpsMeasurement: double mSnrInDb>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d14);

        $d15 = r0.<android.location.GpsMeasurement: double mElevationInDeg>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d15);

        $d16 = r0.<android.location.GpsMeasurement: double mElevationUncertaintyInDeg>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d16);

        $d17 = r0.<android.location.GpsMeasurement: double mAzimuthInDeg>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d17);

        $d18 = r0.<android.location.GpsMeasurement: double mAzimuthUncertaintyInDeg>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d18);

        $z0 = r0.<android.location.GpsMeasurement: boolean mUsedInFix>;

        i12 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i12);

        return;
    }
}
