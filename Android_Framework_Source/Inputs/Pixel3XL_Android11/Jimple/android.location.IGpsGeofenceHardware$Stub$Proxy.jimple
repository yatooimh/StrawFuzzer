class android.location.IGpsGeofenceHardware$Stub$Proxy extends java.lang.Object implements android.location.IGpsGeofenceHardware
{
    public static android.location.IGpsGeofenceHardware sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.location.IGpsGeofenceHardware$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.location.IGpsGeofenceHardware$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.IGpsGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public boolean addCircularHardwareGeofence(int, double, double, double, int, int, int, int) throws android.os.RemoteException
    {
        android.location.IGpsGeofenceHardware$Stub$Proxy r0;
        double d0, d1, d2;
        int i0, i1, i2, i3, i4, i5;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.location.IGpsGeofenceHardware $r3, $r4;
        java.lang.Throwable $r5, $r6, r8;
        android.os.IBinder r7;

        r0 := @this: android.location.IGpsGeofenceHardware$Stub$Proxy;

        i4 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.IGpsGeofenceHardware");

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>(d0);

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>(d1);

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>(d2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        r7 = r0.<android.location.IGpsGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

     label03:
        z1 = 0;

     label04:
        $z0 = interfaceinvoke r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label06;

        $r3 = staticinvoke <android.location.IGpsGeofenceHardware$Stub: android.location.IGpsGeofenceHardware getDefaultImpl()>();

        if $r3 == null goto label06;

        $r4 = staticinvoke <android.location.IGpsGeofenceHardware$Stub: android.location.IGpsGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.location.IGpsGeofenceHardware: boolean addCircularHardwareGeofence(int,double,double,double,int,int,int,int)>(i4, d0, d1, d2, i0, i1, i2, i3);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i5 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i5 == 0 goto label08;

        z1 = 1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label09:
        $r5 := @caughtexception;

        r8 = $r5;

        goto label11;

     label10:
        $r6 := @caughtexception;

        r8 = $r6;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    public android.os.IBinder asBinder()
    {
        android.location.IGpsGeofenceHardware$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.location.IGpsGeofenceHardware$Stub$Proxy;

        $r1 = r0.<android.location.IGpsGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.location.IGpsGeofenceHardware$Stub$Proxy r0;

        r0 := @this: android.location.IGpsGeofenceHardware$Stub$Proxy;

        return "android.location.IGpsGeofenceHardware";
    }

    public boolean isHardwareGeofenceSupported() throws android.os.RemoteException
    {
        android.location.IGpsGeofenceHardware$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.location.IGpsGeofenceHardware $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.location.IGpsGeofenceHardware$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.IGpsGeofenceHardware");

        r6 = r0.<android.location.IGpsGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.location.IGpsGeofenceHardware$Stub: android.location.IGpsGeofenceHardware getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.location.IGpsGeofenceHardware$Stub: android.location.IGpsGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.location.IGpsGeofenceHardware: boolean isHardwareGeofenceSupported()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean pauseHardwareGeofence(int) throws android.os.RemoteException
    {
        android.location.IGpsGeofenceHardware$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.location.IGpsGeofenceHardware $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.location.IGpsGeofenceHardware$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.IGpsGeofenceHardware");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.location.IGpsGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.location.IGpsGeofenceHardware$Stub: android.location.IGpsGeofenceHardware getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.location.IGpsGeofenceHardware$Stub: android.location.IGpsGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.location.IGpsGeofenceHardware: boolean pauseHardwareGeofence(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean removeHardwareGeofence(int) throws android.os.RemoteException
    {
        android.location.IGpsGeofenceHardware$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.location.IGpsGeofenceHardware $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.location.IGpsGeofenceHardware$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.IGpsGeofenceHardware");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.location.IGpsGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.location.IGpsGeofenceHardware$Stub: android.location.IGpsGeofenceHardware getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.location.IGpsGeofenceHardware$Stub: android.location.IGpsGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.location.IGpsGeofenceHardware: boolean removeHardwareGeofence(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean resumeHardwareGeofence(int, int) throws android.os.RemoteException
    {
        android.location.IGpsGeofenceHardware$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.location.IGpsGeofenceHardware $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.location.IGpsGeofenceHardware$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.IGpsGeofenceHardware");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.location.IGpsGeofenceHardware$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.location.IGpsGeofenceHardware$Stub: android.location.IGpsGeofenceHardware getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.location.IGpsGeofenceHardware$Stub: android.location.IGpsGeofenceHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.location.IGpsGeofenceHardware: boolean resumeHardwareGeofence(int,int)>(i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
}
