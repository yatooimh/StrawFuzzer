public class android.location.ILocationManager$Default extends java.lang.Object implements android.location.ILocationManager
{

    public void <init>()
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean addGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.IGnssAntennaInfoListener r1;
        java.lang.String r2, r3;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.IGnssAntennaInfoListener;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return 0;
    }

    public boolean addGnssBatchingCallback(android.location.IBatchedLocationCallback, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.IBatchedLocationCallback r1;
        java.lang.String r2, r3;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.IBatchedLocationCallback;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return 0;
    }

    public boolean addGnssMeasurementsListener(android.location.GnssRequest, android.location.IGnssMeasurementsListener, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.GnssRequest r1;
        android.location.IGnssMeasurementsListener r2;
        java.lang.String r3, r4;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.GnssRequest;

        r2 := @parameter1: android.location.IGnssMeasurementsListener;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        return 0;
    }

    public boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.IGnssNavigationMessageListener r1;
        java.lang.String r2, r3;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.IGnssNavigationMessageListener;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return 0;
    }

    public void addTestProvider(java.lang.String, com.android.internal.location.ProviderProperties, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1, r3, r4;
        com.android.internal.location.ProviderProperties r2;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.location.ProviderProperties;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return null;
    }

    public void flushGnssBatch(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public boolean geocoderIsPresent() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return 0;
    }

    public java.util.List getAllProviders() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return null;
    }

    public java.lang.String[] getBackgroundThrottlingWhitelist() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return null;
    }

    public java.lang.String getBestProvider(android.location.Criteria, boolean) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.Criteria r1;
        boolean z0;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.Criteria;

        z0 := @parameter1: boolean;

        return null;
    }

    public boolean getCurrentLocation(android.location.LocationRequest, android.os.ICancellationSignal, android.location.ILocationListener, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.LocationRequest r1;
        android.os.ICancellationSignal r2;
        android.location.ILocationListener r3;
        java.lang.String r4, r5, r6;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.LocationRequest;

        r2 := @parameter1: android.os.ICancellationSignal;

        r3 := @parameter2: android.location.ILocationListener;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        return 0;
    }

    public java.lang.String getExtraLocationControllerPackage() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return null;
    }

    public java.lang.String getFromLocation(double, double, int, android.location.GeocoderParams, java.util.List) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        double d0, d1;
        int i0;
        android.location.GeocoderParams r1;
        java.util.List r2;

        r0 := @this: android.location.ILocationManager$Default;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        r1 := @parameter3: android.location.GeocoderParams;

        r2 := @parameter4: java.util.List;

        return null;
    }

    public java.lang.String getFromLocationName(java.lang.String, double, double, double, double, int, android.location.GeocoderParams, java.util.List) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1;
        double d0, d1, d2, d3;
        int i0;
        android.location.GeocoderParams r2;
        java.util.List r3;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        i0 := @parameter5: int;

        r2 := @parameter6: android.location.GeocoderParams;

        r3 := @parameter7: java.util.List;

        return null;
    }

    public int getGnssBatchSize(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public long getGnssCapabilities() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return 0L;
    }

    public java.lang.String getGnssHardwareModelName() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return null;
    }

    public android.location.LocationTime getGnssTimeMillis() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return null;
    }

    public int getGnssYearOfHardware() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return 0;
    }

    public java.lang.String[] getIgnoreSettingsWhitelist() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return null;
    }

    public android.location.Location getLastLocation(android.location.LocationRequest, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.LocationRequest r1;
        java.lang.String r2, r3;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.LocationRequest;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return null;
    }

    public java.util.List getProviderPackages(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.util.List getProviders(android.location.Criteria, boolean) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.Criteria r1;
        boolean z0;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.Criteria;

        z0 := @parameter1: boolean;

        return null;
    }

    public java.util.List getTestProviderCurrentRequests(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.GnssMeasurementCorrections r1;
        java.lang.String r2;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.GnssMeasurementCorrections;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void injectLocation(android.location.Location) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.Location r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.Location;

        return;
    }

    public boolean isExtraLocationControllerPackageEnabled() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return 0;
    }

    public boolean isLocationEnabledForUser(int) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        int i0;

        r0 := @this: android.location.ILocationManager$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isProviderEnabledForUser(java.lang.String, int) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return 0;
    }

    public boolean isProviderPackage(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void locationCallbackFinished(android.location.ILocationListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.ILocationListener r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.ILocationListener;

        return;
    }

    public boolean registerGnssStatusCallback(android.location.IGnssStatusListener, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.IGnssStatusListener r1;
        java.lang.String r2, r3;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.IGnssStatusListener;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return 0;
    }

    public void removeGeofence(android.location.Geofence, android.app.PendingIntent, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.Geofence r1;
        android.app.PendingIntent r2;
        java.lang.String r3;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.Geofence;

        r2 := @parameter1: android.app.PendingIntent;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void removeGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.IGnssAntennaInfoListener r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.IGnssAntennaInfoListener;

        return;
    }

    public void removeGnssBatchingCallback() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return;
    }

    public void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.IGnssMeasurementsListener r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.IGnssMeasurementsListener;

        return;
    }

    public void removeGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.IGnssNavigationMessageListener r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.IGnssNavigationMessageListener;

        return;
    }

    public void removeTestProvider(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1, r2, r3;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void removeUpdates(android.location.ILocationListener, android.app.PendingIntent) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.ILocationListener r1;
        android.app.PendingIntent r2;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.ILocationListener;

        r2 := @parameter1: android.app.PendingIntent;

        return;
    }

    public void requestGeofence(android.location.LocationRequest, android.location.Geofence, android.app.PendingIntent, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.LocationRequest r1;
        android.location.Geofence r2;
        android.app.PendingIntent r3;
        java.lang.String r4, r5;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.LocationRequest;

        r2 := @parameter1: android.location.Geofence;

        r3 := @parameter2: android.app.PendingIntent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        return;
    }

    public void requestLocationUpdates(android.location.LocationRequest, android.location.ILocationListener, android.app.PendingIntent, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.LocationRequest r1;
        android.location.ILocationListener r2;
        android.app.PendingIntent r3;
        java.lang.String r4, r5, r6;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.LocationRequest;

        r2 := @parameter1: android.location.ILocationListener;

        r3 := @parameter2: android.app.PendingIntent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        return;
    }

    public boolean sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        return 0;
    }

    public void setExtraLocationControllerPackage(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void setExtraLocationControllerPackageEnabled(boolean) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        boolean z0;

        r0 := @this: android.location.ILocationManager$Default;

        z0 := @parameter0: boolean;

        return;
    }

    public void setLocationEnabledForUser(boolean, int) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        boolean z0;
        int i0;

        r0 := @this: android.location.ILocationManager$Default;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        return;
    }

    public void setTestProviderEnabled(java.lang.String, boolean, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1, r2, r3;
        boolean z0;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        return;
    }

    public void setTestProviderLocation(java.lang.String, android.location.Location, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        java.lang.String r1, r3, r4;
        android.location.Location r2;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.location.Location;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        return;
    }

    public boolean startGnssBatch(long, boolean, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        long l0;
        boolean z0;
        java.lang.String r1, r2;

        r0 := @this: android.location.ILocationManager$Default;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        return 0;
    }

    public boolean stopGnssBatch() throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;

        r0 := @this: android.location.ILocationManager$Default;

        return 0;
    }

    public void unregisterGnssStatusCallback(android.location.IGnssStatusListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Default r0;
        android.location.IGnssStatusListener r1;

        r0 := @this: android.location.ILocationManager$Default;

        r1 := @parameter0: android.location.IGnssStatusListener;

        return;
    }
}
