class android.location.ILocationManager$Stub$Proxy extends java.lang.Object implements android.location.ILocationManager
{
    public static android.location.ILocationManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public boolean addGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        int i0;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        android.location.IGnssAntennaInfoListener r8;
        android.os.IBinder r9, r10;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r8 := @parameter0: android.location.IGnssAntennaInfoListener;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.location.IGnssAntennaInfoListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        r10 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r10.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r3, r4, 0);

        if $z0 != 0 goto label10;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label10;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.location.ILocationManager: boolean addGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener,java.lang.String,java.lang.String)>(r8, r1, r2);

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r7 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public boolean addGnssBatchingCallback(android.location.IBatchedLocationCallback, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        int i0;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        android.location.IBatchedLocationCallback r8;
        android.os.IBinder r9, r10;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r8 := @parameter0: android.location.IBatchedLocationCallback;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.location.IBatchedLocationCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        r10 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r10.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r3, r4, 0);

        if $z0 != 0 goto label10;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label10;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.location.ILocationManager: boolean addGnssBatchingCallback(android.location.IBatchedLocationCallback,java.lang.String,java.lang.String)>(r8, r1, r2);

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r7 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public boolean addGnssMeasurementsListener(android.location.GnssRequest, android.location.IGnssMeasurementsListener, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.location.IGnssMeasurementsListener r1;
        java.lang.String r2, r3;
        android.os.Parcel r4, r5;
        int i0;
        android.os.IBinder $r6, r11;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r7, $r8;
        java.lang.Throwable $r9;
        android.location.GnssRequest r10;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r10 := @parameter0: android.location.GnssRequest;

        r1 := @parameter1: android.location.IGnssMeasurementsListener;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        z1 = 1;

        if r10 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.location.GnssRequest: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r11 = interfaceinvoke r1.<android.location.IGnssMeasurementsListener: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r11 = null;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r6 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r4, r5, 0);

        if $z0 != 0 goto label12;

        $r7 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r7 == null goto label12;

        $r8 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r8.<android.location.ILocationManager: boolean addGnssMeasurementsListener(android.location.GnssRequest,android.location.IGnssMeasurementsListener,java.lang.String,java.lang.String)>(r10, r1, r2, r3);

     label11:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return z2;

     label12:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label13:
        if i0 == 0 goto label14;

        goto label15;

     label14:
        z1 = 0;

     label15:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return z1;

     label16:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
    }

    public boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        int i0;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        android.location.IGnssNavigationMessageListener r8;
        android.os.IBinder r9, r10;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r8 := @parameter0: android.location.IGnssNavigationMessageListener;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.location.IGnssNavigationMessageListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        r10 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r10.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r3, r4, 0);

        if $z0 != 0 goto label10;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label10;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.location.ILocationManager: boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener,java.lang.String,java.lang.String)>(r8, r1, r2);

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r7 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void addTestProvider(java.lang.String, com.android.internal.location.ProviderProperties, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        com.android.internal.location.ProviderProperties r1;
        java.lang.String r2, r3, r10;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6;
        boolean $z0;
        android.location.ILocationManager $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.location.ProviderProperties;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r10);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<com.android.internal.location.ProviderProperties: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r6 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r4, r5, 0);

        if $z0 != 0 goto label08;

        $r7 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r7 == null goto label08;

        $r8 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r8.<android.location.ILocationManager: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties,java.lang.String,java.lang.String)>(r10, r1, r2, r3);

     label07:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        $r1 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void flushGnssBatch(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.location.ILocationManager: void flushGnssBatch(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean geocoderIsPresent() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        r6 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.location.ILocationManager: boolean geocoderIsPresent()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public java.util.List getAllProviders() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;
        java.util.ArrayList r8;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.location.ILocationManager: java.util.List getAllProviders()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getBackgroundThrottlingWhitelist() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.location.ILocationManager: java.lang.String[] getBackgroundThrottlingWhitelist()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getBestProvider(android.location.Criteria, boolean) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        android.location.Criteria r7;
        byte b0;
        java.lang.String r8, r9;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: android.location.Criteria;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        b0 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.location.Criteria: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        goto label08;

     label07:
        b0 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z1 != 0 goto label10;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label10;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.location.ILocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>(r7, z0);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public boolean getCurrentLocation(android.location.LocationRequest, android.os.ICancellationSignal, android.location.ILocationListener, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.ICancellationSignal r1;
        android.location.ILocationListener r2;
        java.lang.String r3, r4, r5;
        android.os.Parcel r6, r7;
        int i0;
        android.os.IBinder $r8, r17, r18;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r9, $r10;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, r19;
        android.location.LocationRequest r16;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r16 := @parameter0: android.location.LocationRequest;

        r1 := @parameter1: android.os.ICancellationSignal;

        r2 := @parameter2: android.location.ILocationListener;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        z1 = 1;

        if r16 == null goto label05;

     label03:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r16.<android.location.LocationRequest: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r17 = interfaceinvoke r1.<android.os.ICancellationSignal: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r17 = null;

     label10:
        virtualinvoke r6.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r17);

     label11:
        r18 = null;

        if r2 == null goto label13;

     label12:
        r18 = interfaceinvoke r2.<android.location.ILocationListener: android.os.IBinder asBinder()>();

     label13:
        virtualinvoke r6.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r18);

     label14:
        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r3);

     label15:
        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r4);

     label16:
        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r5);

     label17:
        $r8 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r6, r7, 0);

        if $z0 != 0 goto label19;

        $r9 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r9 == null goto label19;

        $r10 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r10.<android.location.ILocationManager: boolean getCurrentLocation(android.location.LocationRequest,android.os.ICancellationSignal,android.location.ILocationListener,java.lang.String,java.lang.String,java.lang.String)>(r16, r1, r2, r3, r4, r5);

     label18:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return z2;

     label19:
        virtualinvoke r7.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

     label20:
        if i0 == 0 goto label21;

        goto label22;

     label21:
        z1 = 0;

     label22:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return z1;

     label23:
        $r13 := @caughtexception;

        r19 = $r13;

        goto label28;

     label24:
        $r12 := @caughtexception;

        r19 = $r12;

        goto label28;

     label25:
        $r11 := @caughtexception;

        r19 = $r11;

        goto label28;

     label26:
        $r15 := @caughtexception;

        r19 = $r15;

        goto label28;

     label27:
        $r14 := @caughtexception;

        r19 = $r14;

     label28:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r19;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label10 to label11 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
    }

    public java.lang.String getExtraLocationControllerPackage() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.location.ILocationManager: java.lang.String getExtraLocationControllerPackage()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getFromLocation(double, double, int, android.location.GeocoderParams, java.util.List) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        double d0, d1;
        int i0;
        java.util.List r1;
        android.os.Parcel r2, r3;
        android.os.Parcelable$Creator r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.location.ILocationManager $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, r15;
        android.location.GeocoderParams r12;
        java.lang.String r13, r14;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        r12 := @parameter3: android.location.GeocoderParams;

        r1 := @parameter4: java.util.List;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeDouble(double)>(d0);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeDouble(double)>(d1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label04:
        if r12 == null goto label07;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r12.<android.location.GeocoderParams: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label06:
        goto label08;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        $r5 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, r3, 0);

        if $z0 != 0 goto label10;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r6 == null goto label10;

        $r7 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r13 = interfaceinvoke $r7.<android.location.ILocationManager: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>(d0, d1, i0, r12, r1);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r13;

     label10:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r14 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

        r4 = <android.location.Address: android.os.Parcelable$Creator CREATOR>;

     label11:
        virtualinvoke r3.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>(r1, r4);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r14;

     label13:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label17;

     label14:
        $r10 := @caughtexception;

        r15 = $r10;

        goto label17;

     label15:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label17;

     label16:
        $r9 := @caughtexception;

        r15 = $r9;

     label17:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public java.lang.String getFromLocationName(java.lang.String, double, double, double, double, int, android.location.GeocoderParams, java.util.List) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        double d0, d1, d2, d3;
        int i0;
        java.util.List r1;
        android.os.Parcel r2, r3;
        boolean z0;
        android.os.IBinder $r4;
        android.location.ILocationManager $r5, r15;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, $r11, r14;
        java.lang.String r12, r16, r17;
        android.location.GeocoderParams r13;
        android.os.Parcelable$Creator r18;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r12 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        i0 := @parameter5: int;

        r13 := @parameter6: android.location.GeocoderParams;

        r1 := @parameter7: java.util.List;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r12);

        virtualinvoke r2.<android.os.Parcel: void writeDouble(double)>(d0);

        virtualinvoke r2.<android.os.Parcel: void writeDouble(double)>(d1);

        virtualinvoke r2.<android.os.Parcel: void writeDouble(double)>(d2);

        virtualinvoke r2.<android.os.Parcel: void writeDouble(double)>(d3);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r13 == null goto label06;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r13.<android.location.GeocoderParams: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label20;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        $r4 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, r3, 0);

     label08:
        if z0 != 0 goto label14;

     label09:
        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label14;

        r15 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

     label10:
        r16 = interfaceinvoke r15.<android.location.ILocationManager: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>(r12, d0, d1, d2, d3, i0, r13, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r16;

     label12:
        $r11 := @caughtexception;

        r14 = $r11;

        goto label20;

     label13:
        $r7 := @caughtexception;

        r14 = $r7;

        goto label20;

     label14:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r17 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

        r18 = <android.location.Address: android.os.Parcelable$Creator CREATOR>;

     label15:
        virtualinvoke r3.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>(r1, r18);

     label16:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r17;

     label17:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label20;

     label18:
        $r6 := @caughtexception;

        r14 = $r6;

        goto label20;

     label19:
        $r9 := @caughtexception;

        r14 = $r9;

     label20:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public int getGnssBatchSize(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.location.ILocationManager: int getGnssBatchSize(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getGnssCapabilities() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r4 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        l0 = interfaceinvoke $r6.<android.location.ILocationManager: long getGnssCapabilities()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getGnssHardwareModelName() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.location.ILocationManager: java.lang.String getGnssHardwareModelName()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.location.LocationTime getGnssTimeMillis() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.location.ILocationManager $r6, $r7;
        java.lang.Throwable $r8;
        android.location.LocationTime r9, r10;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.location.ILocationManager: android.location.LocationTime getGnssTimeMillis()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.location.LocationTime: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.location.LocationTime) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getGnssYearOfHardware() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r4 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.location.ILocationManager: int getGnssYearOfHardware()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getIgnoreSettingsWhitelist() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(51, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.location.ILocationManager: java.lang.String[] getIgnoreSettingsWhitelist()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.location.ILocationManager$Stub$Proxy r0;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        return "android.location.ILocationManager";
    }

    public android.location.Location getLastLocation(android.location.LocationRequest, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;
        android.location.ILocationManager $r8, $r9;
        java.lang.Throwable $r10;
        android.location.LocationRequest r11;
        android.location.Location r12, r13;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r11 := @parameter0: android.location.LocationRequest;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r11 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r11.<android.location.LocationRequest: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r8 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r8 == null goto label08;

        $r9 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r12 = interfaceinvoke $r9.<android.location.ILocationManager: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String,java.lang.String)>(r11, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r12;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r6 = <android.location.Location: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r4);

        r13 = (android.location.Location) $r7;

     label09:
        goto label11;

     label10:
        r13 = null;

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r13;

     label12:
        $r10 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public java.util.List getProviderPackages(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.location.ILocationManager: java.util.List getProviderPackages(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.location.ILocationManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        com.android.internal.location.ProviderProperties r10, r11;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.location.ILocationManager: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <com.android.internal.location.ProviderProperties: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (com.android.internal.location.ProviderProperties) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.util.List getProviders(android.location.Criteria, boolean) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        android.location.Criteria r7;
        byte b0;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: android.location.Criteria;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        b0 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.location.Criteria: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        goto label08;

     label07:
        b0 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z1 != 0 goto label10;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label10;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.location.ILocationManager: java.util.List getProviders(android.location.Criteria,boolean)>(r7, z0);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public java.util.List getTestProviderCurrentRequests(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        java.util.List r9;
        java.util.ArrayList r10;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.location.ILocationManager: java.util.List getTestProviderCurrentRequests(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.location.LocationRequest: android.os.Parcelable$Creator CREATOR>;

        r10 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        android.location.GnssMeasurementCorrections r8;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r8 := @parameter0: android.location.GnssMeasurementCorrections;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.location.GnssMeasurementCorrections: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.location.ILocationManager: void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void injectLocation(android.location.Location) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        android.location.Location r7;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: android.location.Location;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.location.Location: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.location.ILocationManager: void injectLocation(android.location.Location)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean isExtraLocationControllerPackageEnabled() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        r6 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.location.ILocationManager: boolean isExtraLocationControllerPackageEnabled()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isLocationEnabledForUser(int) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.location.ILocationManager: boolean isLocationEnabledForUser(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isProviderEnabledForUser(java.lang.String, int) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.location.ILocationManager: boolean isProviderEnabledForUser(java.lang.String,int)>(r7, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isProviderPackage(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.location.ILocationManager: boolean isProviderPackage(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void locationCallbackFinished(android.location.ILocationListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        android.location.ILocationListener r7;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: android.location.ILocationListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.location.ILocationListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.location.ILocationManager: void locationCallbackFinished(android.location.ILocationListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean registerGnssStatusCallback(android.location.IGnssStatusListener, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        int i0;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        android.location.IGnssStatusListener r8;
        android.os.IBinder r9, r10;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r8 := @parameter0: android.location.IGnssStatusListener;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.location.IGnssStatusListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        r10 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r10.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        if $z0 != 0 goto label10;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label10;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.location.ILocationManager: boolean registerGnssStatusCallback(android.location.IGnssStatusListener,java.lang.String,java.lang.String)>(r8, r1, r2);

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r7 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void removeGeofence(android.location.Geofence, android.app.PendingIntent, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.app.PendingIntent r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.location.ILocationManager $r6, $r7;
        java.lang.Throwable $r8;
        android.location.Geofence r9;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r9 := @parameter0: android.location.Geofence;

        r1 := @parameter1: android.app.PendingIntent;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.location.Geofence: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, r4, 0);

        if $z0 != 0 goto label12;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r6 == null goto label12;

        $r7 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.location.ILocationManager: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>(r9, r1, r2);

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void removeGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        android.location.IGnssAntennaInfoListener r7;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: android.location.IGnssAntennaInfoListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.location.IGnssAntennaInfoListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.location.ILocationManager: void removeGnssAntennaInfoListener(android.location.IGnssAntennaInfoListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeGnssBatchingCallback() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        $r4 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.location.ILocationManager: void removeGnssBatchingCallback()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        android.location.IGnssMeasurementsListener r7;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: android.location.IGnssMeasurementsListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.location.IGnssMeasurementsListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.location.ILocationManager: void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        android.location.IGnssNavigationMessageListener r7;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: android.location.IGnssNavigationMessageListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.location.IGnssNavigationMessageListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.location.ILocationManager: void removeGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeTestProvider(java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        java.lang.String r1, r2, r9;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.location.ILocationManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.location.ILocationManager: void removeTestProvider(java.lang.String,java.lang.String,java.lang.String)>(r9, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void removeUpdates(android.location.ILocationListener, android.app.PendingIntent) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.app.PendingIntent r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        android.location.ILocationListener r8;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r8 := @parameter0: android.location.ILocationListener;

        r1 := @parameter1: android.app.PendingIntent;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.location.ILocationListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r4 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.location.ILocationManager: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent)>(r8, r1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void requestGeofence(android.location.LocationRequest, android.location.Geofence, android.app.PendingIntent, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.location.Geofence r1;
        android.app.PendingIntent r2;
        java.lang.String r3, r4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7;
        boolean $z0;
        android.location.ILocationManager $r8, $r9;
        java.lang.Throwable $r10;
        android.location.LocationRequest r11;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r11 := @parameter0: android.location.LocationRequest;

        r1 := @parameter1: android.location.Geofence;

        r2 := @parameter2: android.app.PendingIntent;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r11 == null goto label05;

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r11.<android.location.LocationRequest: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.location.Geofence: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        if r2 == null goto label13;

     label11:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label12:
        goto label14;

     label13:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r7 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r5, r6, 0);

        if $z0 != 0 goto label16;

        $r8 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r8 == null goto label16;

        $r9 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r9.<android.location.ILocationManager: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String,java.lang.String)>(r11, r1, r2, r3, r4);

     label15:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label16:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

     label17:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label18:
        $r10 := @caughtexception;

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public void requestLocationUpdates(android.location.LocationRequest, android.location.ILocationListener, android.app.PendingIntent, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.location.ILocationListener r1;
        android.app.PendingIntent r2;
        java.lang.String r3, r4, r5;
        android.os.Parcel r6, r7;
        android.os.IBinder $r8, r17;
        boolean $z0;
        android.location.ILocationManager $r9, $r10;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, r18;
        android.location.LocationRequest r16;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r16 := @parameter0: android.location.LocationRequest;

        r1 := @parameter1: android.location.ILocationListener;

        r2 := @parameter2: android.app.PendingIntent;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r16 == null goto label05;

     label03:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r16.<android.location.LocationRequest: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r17 = interfaceinvoke r1.<android.location.ILocationListener: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r17 = null;

     label10:
        virtualinvoke r6.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r17);

     label11:
        if r2 == null goto label14;

     label12:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label13:
        goto label15;

     label14:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label15:
        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r3);

     label16:
        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r4);

     label17:
        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r5);

     label18:
        $r8 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r6, r7, 0);

        if $z0 != 0 goto label20;

        $r9 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r9 == null goto label20;

        $r10 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r10.<android.location.ILocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String,java.lang.String,java.lang.String)>(r16, r1, r2, r3, r4, r5);

     label19:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return;

     label20:
        virtualinvoke r7.<android.os.Parcel: void readException()>();

     label21:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return;

     label22:
        $r14 := @caughtexception;

        r18 = $r14;

        goto label27;

     label23:
        $r13 := @caughtexception;

        r18 = $r13;

        goto label27;

     label24:
        $r15 := @caughtexception;

        r18 = $r15;

        goto label27;

     label25:
        $r12 := @caughtexception;

        r18 = $r12;

        goto label27;

     label26:
        $r11 := @caughtexception;

        r18 = $r11;

     label27:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r18;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label07 to label08 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }

    public boolean sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        java.lang.String r1, r9;
        android.os.Bundle r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0, z1, z2;
        int $i0, $i1;
        android.location.ILocationManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label02:
        z1 = 1;

        if r2 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r5 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r7.<android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>(r9, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

     label09:
        goto label11;

     label10:
        z1 = 0;

     label11:
        $i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label12;

        virtualinvoke r2.<android.os.Bundle: void readFromParcel(android.os.Parcel)>(r4);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void setExtraLocationControllerPackage(java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.location.ILocationManager: void setExtraLocationControllerPackage(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setExtraLocationControllerPackageEnabled(boolean) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.location.ILocationManager: void setExtraLocationControllerPackageEnabled(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setLocationEnabledForUser(boolean, int) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        boolean z0, $z1;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.location.ILocationManager: void setLocationEnabledForUser(boolean,int)>(z0, i0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setTestProviderEnabled(java.lang.String, boolean, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        boolean z0, $z1;
        java.lang.String r1, r2, r9;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        android.location.ILocationManager $r6, $r7;
        java.lang.Throwable $r8;
        byte b0;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r3, r4, 0);

        if $z1 != 0 goto label6;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r6 == null goto label6;

        $r7 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.location.ILocationManager: void setTestProviderEnabled(java.lang.String,boolean,java.lang.String,java.lang.String)>(r9, z0, r1, r2);

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setTestProviderLocation(java.lang.String, android.location.Location, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.location.Location r1;
        java.lang.String r2, r3, r10;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6;
        boolean $z0;
        android.location.ILocationManager $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: android.location.Location;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r10);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.location.Location: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r6 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, r4, r5, 0);

        if $z0 != 0 goto label08;

        $r7 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r7 == null goto label08;

        $r8 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r8.<android.location.ILocationManager: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String,java.lang.String)>(r10, r1, r2, r3);

     label07:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean startGnssBatch(long, boolean, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        long l0;
        java.lang.String r1, r12;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        android.location.ILocationManager $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, r13;
        byte b1;
        int i2;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        l0 := @parameter0: long;

        z2 := @parameter1: boolean;

        r12 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

     label03:
        if z2 == 0 goto label04;

        b1 = 1;

        goto label05;

     label04:
        b1 = 0;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r12);

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label08:
        $r4 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r2, r3, 0);

        if $z1 != 0 goto label10;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r5 == null goto label10;

        $r6 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<android.location.ILocationManager: boolean startGnssBatch(long,boolean,java.lang.String,java.lang.String)>(l0, z2, r12, r1);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z3;

     label10:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label11:
        if i2 == 0 goto label12;

        z4 = 1;

        goto label13;

     label12:
        z4 = 0;

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z4;

     label14:
        $r7 := @caughtexception;

        r13 = $r7;

        goto label19;

     label15:
        $r11 := @caughtexception;

        r13 = $r11;

        goto label19;

     label16:
        $r8 := @caughtexception;

        r13 = $r8;

        goto label19;

     label17:
        $r9 := @caughtexception;

        r13 = $r9;

        goto label19;

     label18:
        $r10 := @caughtexception;

        r13 = $r10;

     label19:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r13;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
    }

    public boolean stopGnssBatch() throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.location.ILocationManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

        r6 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.location.ILocationManager: boolean stopGnssBatch()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void unregisterGnssStatusCallback(android.location.IGnssStatusListener) throws android.os.RemoteException
    {
        android.location.ILocationManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.location.ILocationManager $r4, $r5;
        java.lang.Throwable $r6;
        android.location.IGnssStatusListener r7;

        r0 := @this: android.location.ILocationManager$Stub$Proxy;

        r7 := @parameter0: android.location.IGnssStatusListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.location.ILocationManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.location.IGnssStatusListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.location.ILocationManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.location.ILocationManager: void unregisterGnssStatusCallback(android.location.IGnssStatusListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
