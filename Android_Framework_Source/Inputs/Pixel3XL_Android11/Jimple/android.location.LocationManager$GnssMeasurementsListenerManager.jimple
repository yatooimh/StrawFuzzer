class android.location.LocationManager$GnssMeasurementsListenerManager extends android.location.AbstractListenerManager
{
    private android.location.IGnssMeasurementsListener mListenerTransport;
    final android.location.LocationManager this$0;

    private void <init>(android.location.LocationManager)
    {
        android.location.LocationManager$GnssMeasurementsListenerManager r0;
        android.location.LocationManager r1;

        r0 := @this: android.location.LocationManager$GnssMeasurementsListenerManager;

        r1 := @parameter0: android.location.LocationManager;

        r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.LocationManager this$0> = r1;

        specialinvoke r0.<android.location.AbstractListenerManager: void <init>()>();

        return;
    }

    void <init>(android.location.LocationManager, android.location.LocationManager$1)
    {
        android.location.LocationManager$GnssMeasurementsListenerManager r0;
        android.location.LocationManager r1;
        android.location.LocationManager$1 r2;

        r0 := @this: android.location.LocationManager$GnssMeasurementsListenerManager;

        r1 := @parameter0: android.location.LocationManager;

        r2 := @parameter1: android.location.LocationManager$1;

        specialinvoke r0.<android.location.LocationManager$GnssMeasurementsListenerManager: void <init>(android.location.LocationManager)>(r1);

        return;
    }

    protected android.location.GnssRequest merge(java.util.List)
    {
        android.location.LocationManager$GnssMeasurementsListenerManager r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.location.GnssRequest r3, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r4, $r6;

        r0 := @this: android.location.LocationManager$GnssMeasurementsListenerManager;

        r1 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        $z1 = $z0 ^ 1;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>($z1);

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.location.GnssRequest) $r6;

        $z3 = virtualinvoke r3.<android.location.GnssRequest: boolean isFullTracking()>();

        if $z3 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.location.GnssRequest) $r4;

        return $r5;
    }

    protected volatile java.lang.Object merge(java.util.List)
    {
        android.location.LocationManager$GnssMeasurementsListenerManager r0;
        java.util.List r1;
        android.location.GnssRequest $r2;

        r0 := @this: android.location.LocationManager$GnssMeasurementsListenerManager;

        r1 := @parameter0: java.util.List;

        $r2 = virtualinvoke r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.GnssRequest merge(java.util.List)>(r1);

        return $r2;
    }

    protected boolean registerService(android.location.GnssRequest) throws android.os.RemoteException
    {
        android.location.LocationManager$GnssMeasurementsListenerManager r0;
        android.location.GnssRequest r1;
        android.location.IGnssMeasurementsListener $r3;
        android.location.LocationManager$GnssMeasurementsListenerManager$GnssMeasurementsListener $r4;
        android.location.LocationManager $r5, $r7, $r10;
        android.location.ILocationManager $r6;
        android.content.Context $r8, $r11;
        java.lang.String $r9, $r12;
        boolean $z0, z1;

        r0 := @this: android.location.LocationManager$GnssMeasurementsListenerManager;

        r1 := @parameter0: android.location.GnssRequest;

        $r3 = r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.IGnssMeasurementsListener mListenerTransport>;

        if $r3 != null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z1);

        $r4 = new android.location.LocationManager$GnssMeasurementsListenerManager$GnssMeasurementsListener;

        specialinvoke $r4.<android.location.LocationManager$GnssMeasurementsListenerManager$GnssMeasurementsListener: void <init>(android.location.LocationManager$GnssMeasurementsListenerManager,android.location.LocationManager$1)>(r0, null);

        $r5 = r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.LocationManager this$0>;

        $r6 = staticinvoke <android.location.LocationManager: android.location.ILocationManager access$000(android.location.LocationManager)>($r5);

        $r7 = r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.LocationManager this$0>;

        $r8 = staticinvoke <android.location.LocationManager: android.content.Context access$1100(android.location.LocationManager)>($r7);

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageName()>();

        $r10 = r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.LocationManager this$0>;

        $r11 = staticinvoke <android.location.LocationManager: android.content.Context access$1100(android.location.LocationManager)>($r10);

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.String getAttributionTag()>();

        $z0 = interfaceinvoke $r6.<android.location.ILocationManager: boolean addGnssMeasurementsListener(android.location.GnssRequest,android.location.IGnssMeasurementsListener,java.lang.String,java.lang.String)>(r1, $r4, $r9, $r12);

        if $z0 == 0 goto label3;

        r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.IGnssMeasurementsListener mListenerTransport> = $r4;

        return 1;

     label3:
        return 0;
    }

    protected volatile boolean registerService(java.lang.Object) throws android.os.RemoteException
    {
        android.location.LocationManager$GnssMeasurementsListenerManager r0;
        java.lang.Object r1;
        android.location.GnssRequest $r2;
        boolean $z0;

        r0 := @this: android.location.LocationManager$GnssMeasurementsListenerManager;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.location.GnssRequest) r1;

        $z0 = virtualinvoke r0.<android.location.LocationManager$GnssMeasurementsListenerManager: boolean registerService(android.location.GnssRequest)>($r2);

        return $z0;
    }

    protected void unregisterService() throws android.os.RemoteException
    {
        android.location.LocationManager$GnssMeasurementsListenerManager r0;
        android.location.IGnssMeasurementsListener $r1, $r4;
        android.location.LocationManager $r2;
        android.location.ILocationManager $r3;

        r0 := @this: android.location.LocationManager$GnssMeasurementsListenerManager;

        $r1 = r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.IGnssMeasurementsListener mListenerTransport>;

        if $r1 == null goto label1;

        $r2 = r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.LocationManager this$0>;

        $r3 = staticinvoke <android.location.LocationManager: android.location.ILocationManager access$000(android.location.LocationManager)>($r2);

        $r4 = r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.IGnssMeasurementsListener mListenerTransport>;

        interfaceinvoke $r3.<android.location.ILocationManager: void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener)>($r4);

        r0.<android.location.LocationManager$GnssMeasurementsListenerManager: android.location.IGnssMeasurementsListener mListenerTransport> = null;

     label1:
        return;
    }
}
