public final class android.location.LocationRequest extends java.lang.Object implements android.os.Parcelable
{
    public static final int ACCURACY_BLOCK;
    public static final int ACCURACY_CITY;
    public static final int ACCURACY_FINE;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final long DEFAULT_INTERVAL_MS;
    private static final double FASTEST_INTERVAL_FACTOR;
    public static final int POWER_HIGH;
    public static final int POWER_LOW;
    public static final int POWER_NONE;
    private long mExpireAt;
    private long mExpireIn;
    private boolean mExplicitFastestInterval;
    private long mFastestInterval;
    private boolean mHideFromAppOps;
    private long mInterval;
    private boolean mLocationSettingsIgnored;
    private boolean mLowPowerMode;
    private int mNumUpdates;
    private java.lang.String mProvider;
    private int mQuality;
    private float mSmallestDisplacement;
    private android.os.WorkSource mWorkSource;

    static void <clinit>()
    {
        android.location.LocationRequest$1 $r0;

        <android.location.LocationRequest: int POWER_NONE> = 200;

        <android.location.LocationRequest: int POWER_LOW> = 201;

        <android.location.LocationRequest: int POWER_HIGH> = 203;

        <android.location.LocationRequest: double FASTEST_INTERVAL_FACTOR> = 6.0;

        <android.location.LocationRequest: long DEFAULT_INTERVAL_MS> = 3600000L;

        <android.location.LocationRequest: int ACCURACY_FINE> = 100;

        <android.location.LocationRequest: int ACCURACY_CITY> = 104;

        <android.location.LocationRequest: int ACCURACY_BLOCK> = 102;

        $r0 = new android.location.LocationRequest$1;

        specialinvoke $r0.<android.location.LocationRequest$1: void <init>()>();

        <android.location.LocationRequest: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.location.LocationRequest r0;

        r0 := @this: android.location.LocationRequest;

        specialinvoke r0.<android.location.LocationRequest: void <init>(java.lang.String,int,long,long,boolean,long,long,int,float,boolean,boolean,boolean,android.os.WorkSource)>("fused", 201, 3600000L, 600000L, 0, 9223372036854775807L, 9223372036854775807L, 2147483647, 0.0F, 0, 0, 0, null);

        return;
    }

    public void <init>(android.location.LocationRequest)
    {
        android.location.LocationRequest r0, r1;
        android.os.WorkSource $r2;
        boolean $z0, $z1, $z2, $z3;
        float $f0;
        int $i0, $i5;
        long $l1, $l2, $l3, $l4;
        java.lang.String $r3;

        r0 := @this: android.location.LocationRequest;

        r1 := @parameter0: android.location.LocationRequest;

        $r3 = r1.<android.location.LocationRequest: java.lang.String mProvider>;

        $i5 = r1.<android.location.LocationRequest: int mQuality>;

        $l4 = r1.<android.location.LocationRequest: long mInterval>;

        $l3 = r1.<android.location.LocationRequest: long mFastestInterval>;

        $z3 = r1.<android.location.LocationRequest: boolean mExplicitFastestInterval>;

        $l2 = r1.<android.location.LocationRequest: long mExpireAt>;

        $l1 = r1.<android.location.LocationRequest: long mExpireIn>;

        $i0 = r1.<android.location.LocationRequest: int mNumUpdates>;

        $f0 = r1.<android.location.LocationRequest: float mSmallestDisplacement>;

        $z2 = r1.<android.location.LocationRequest: boolean mHideFromAppOps>;

        $z1 = r1.<android.location.LocationRequest: boolean mLocationSettingsIgnored>;

        $z0 = r1.<android.location.LocationRequest: boolean mLowPowerMode>;

        $r2 = r1.<android.location.LocationRequest: android.os.WorkSource mWorkSource>;

        specialinvoke r0.<android.location.LocationRequest: void <init>(java.lang.String,int,long,long,boolean,long,long,int,float,boolean,boolean,boolean,android.os.WorkSource)>($r3, $i5, $l4, $l3, $z3, $l2, $l1, $i0, $f0, $z2, $z1, $z0, $r2);

        return;
    }

    private void <init>(java.lang.String, int, long, long, boolean, long, long, int, float, boolean, boolean, boolean, android.os.WorkSource)
    {
        android.location.LocationRequest r0;
        java.lang.String r1;
        int i0, i5;
        long l1, l2, l3, l4;
        boolean z0, z1, z2, z3, z4;
        float f0, $f1;
        android.os.WorkSource r2;

        r0 := @this: android.location.LocationRequest;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        z0 := @parameter4: boolean;

        l3 := @parameter5: long;

        l4 := @parameter6: long;

        i5 := @parameter7: int;

        f0 := @parameter8: float;

        z1 := @parameter9: boolean;

        z2 := @parameter10: boolean;

        z3 := @parameter11: boolean;

        r2 := @parameter12: android.os.WorkSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z4, "invalid provider: null");

        staticinvoke <android.location.LocationRequest: void checkQuality(int)>(i0);

        r0.<android.location.LocationRequest: java.lang.String mProvider> = r1;

        r0.<android.location.LocationRequest: int mQuality> = i0;

        r0.<android.location.LocationRequest: long mInterval> = l1;

        r0.<android.location.LocationRequest: long mFastestInterval> = l2;

        r0.<android.location.LocationRequest: boolean mExplicitFastestInterval> = z0;

        r0.<android.location.LocationRequest: long mExpireAt> = l3;

        r0.<android.location.LocationRequest: long mExpireIn> = l4;

        r0.<android.location.LocationRequest: int mNumUpdates> = i5;

        $f1 = staticinvoke <com.android.internal.util.Preconditions: float checkArgumentInRange(float,float,float,java.lang.String)>(f0, 0.0F, 3.4028235E38F, "smallestDisplacementM");

        r0.<android.location.LocationRequest: float mSmallestDisplacement> = $f1;

        r0.<android.location.LocationRequest: boolean mHideFromAppOps> = z1;

        r0.<android.location.LocationRequest: boolean mLowPowerMode> = z3;

        r0.<android.location.LocationRequest: boolean mLocationSettingsIgnored> = z2;

        r0.<android.location.LocationRequest: android.os.WorkSource mWorkSource> = r2;

        return;
    }

    void <init>(java.lang.String, int, long, long, boolean, long, long, int, float, boolean, boolean, boolean, android.os.WorkSource, android.location.LocationRequest$1)
    {
        android.location.LocationRequest r0;
        java.lang.String r1;
        int i0, i5;
        long l1, l2, l3, l4;
        boolean z0, z1, z2, z3;
        float f0;
        android.os.WorkSource r2;
        android.location.LocationRequest$1 r3;

        r0 := @this: android.location.LocationRequest;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        z0 := @parameter4: boolean;

        l3 := @parameter5: long;

        l4 := @parameter6: long;

        i5 := @parameter7: int;

        f0 := @parameter8: float;

        z1 := @parameter9: boolean;

        z2 := @parameter10: boolean;

        z3 := @parameter11: boolean;

        r2 := @parameter12: android.os.WorkSource;

        r3 := @parameter13: android.location.LocationRequest$1;

        specialinvoke r0.<android.location.LocationRequest: void <init>(java.lang.String,int,long,long,boolean,long,long,int,float,boolean,boolean,boolean,android.os.WorkSource)>(r1, i0, l1, l2, z0, l3, l4, i5, f0, z1, z2, z3, r2);

        return;
    }

    private static void checkQuality(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 100 goto label2;

        if i0 == 102 goto label2;

        if i0 == 104 goto label2;

        if i0 == 203 goto label2;

        if i0 == 200 goto label2;

        if i0 != 201 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid quality: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return;
    }

    public static android.location.LocationRequest create()
    {
        android.location.LocationRequest $r0;

        $r0 = new android.location.LocationRequest;

        specialinvoke $r0.<android.location.LocationRequest: void <init>()>();

        return $r0;
    }

    public static android.location.LocationRequest createFromDeprecatedCriteria(android.location.Criteria, long, float, boolean)
    {
        long l0, l4;
        float f0, f1;
        boolean z0, z1;
        byte $b1, $b2;
        int $i3, i5;
        android.location.Criteria r1;
        short s6;
        android.location.LocationRequest $r2, $r3, $r4, $r5, r6;

        r1 := @parameter0: android.location.Criteria;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        z0 := @parameter3: boolean;

        if r1 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, "invalid null criteria");

        l4 = l0;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label3;

        l4 = 0L;

     label3:
        f1 = f0;

        $b2 = f0 cmpg 0.0F;

        if $b2 >= 0 goto label4;

        f1 = 0.0F;

     label4:
        i5 = virtualinvoke r1.<android.location.Criteria: int getAccuracy()>();

        if i5 == 1 goto label7;

        if i5 == 2 goto label6;

        $i3 = virtualinvoke r1.<android.location.Criteria: int getPowerRequirement()>();

        if $i3 != 3 goto label5;

        s6 = 203;

        goto label8;

     label5:
        s6 = 201;

        goto label8;

     label6:
        s6 = 102;

        goto label8;

     label7:
        s6 = 100;

     label8:
        $r2 = new android.location.LocationRequest;

        specialinvoke $r2.<android.location.LocationRequest: void <init>()>();

        $r3 = virtualinvoke $r2.<android.location.LocationRequest: android.location.LocationRequest setQuality(int)>(s6);

        $r4 = virtualinvoke $r3.<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>(l4);

        $r5 = virtualinvoke $r4.<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>(l4);

        r6 = virtualinvoke $r5.<android.location.LocationRequest: android.location.LocationRequest setSmallestDisplacement(float)>(f1);

        if z0 == 0 goto label9;

        virtualinvoke r6.<android.location.LocationRequest: android.location.LocationRequest setNumUpdates(int)>(1);

     label9:
        return r6;
    }

    public static android.location.LocationRequest createFromDeprecatedProvider(java.lang.String, long, float, boolean)
    {
        long l0, l3;
        float f0, f1;
        boolean z0, $z1, $z2, z3;
        byte $b1, $b2;
        java.lang.String $r0, $r1, r3;
        short s4;
        android.location.LocationRequest $r4, $r5, $r6, $r7, $r8, r9;

        r3 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        z0 := @parameter3: boolean;

        if r3 == null goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z3, "invalid null provider");

        l3 = l0;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label3;

        l3 = 0L;

     label3:
        f1 = f0;

        $b2 = f0 cmpg 0.0F;

        if $b2 >= 0 goto label4;

        f1 = 0.0F;

     label4:
        $r0 = "passive";

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label5;

        s4 = 200;

        goto label7;

     label5:
        $r1 = "gps";

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label6;

        s4 = 100;

        goto label7;

     label6:
        s4 = 201;

     label7:
        $r4 = new android.location.LocationRequest;

        specialinvoke $r4.<android.location.LocationRequest: void <init>()>();

        $r5 = virtualinvoke $r4.<android.location.LocationRequest: android.location.LocationRequest setProvider(java.lang.String)>(r3);

        $r6 = virtualinvoke $r5.<android.location.LocationRequest: android.location.LocationRequest setQuality(int)>(s4);

        $r7 = virtualinvoke $r6.<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>(l3);

        $r8 = virtualinvoke $r7.<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>(l3);

        r9 = virtualinvoke $r8.<android.location.LocationRequest: android.location.LocationRequest setSmallestDisplacement(float)>(f1);

        if z0 == 0 goto label8;

        virtualinvoke r9.<android.location.LocationRequest: android.location.LocationRequest setNumUpdates(int)>(1);

     label8:
        return r9;
    }

    public static java.lang.String qualityToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 100 goto label6;

        if i0 == 102 goto label5;

        if i0 == 104 goto label4;

        if i0 == 203 goto label3;

        if i0 == 200 goto label2;

        if i0 == 201 goto label1;

        return "???";

     label1:
        return "POWER_LOW";

     label2:
        return "POWER_NONE";

     label3:
        return "POWER_HIGH";

     label4:
        return "ACCURACY_CITY";

     label5:
        return "ACCURACY_BLOCK";

     label6:
        return "ACCURACY_FINE";
    }

    public void decrementNumUpdates()
    {
        android.location.LocationRequest r0;
        int i0, $i1, $i2;

        r0 := @this: android.location.LocationRequest;

        i0 = r0.<android.location.LocationRequest: int mNumUpdates>;

        if i0 == 2147483647 goto label1;

        $i2 = i0 - 1;

        r0.<android.location.LocationRequest: int mNumUpdates> = $i2;

     label1:
        $i1 = r0.<android.location.LocationRequest: int mNumUpdates>;

        if $i1 >= 0 goto label2;

        r0.<android.location.LocationRequest: int mNumUpdates> = 0;

     label2:
        return;
    }

    public int describeContents()
    {
        android.location.LocationRequest r0;

        r0 := @this: android.location.LocationRequest;

        return 0;
    }

    public long getExpirationRealtimeMs(long)
    {
        android.location.LocationRequest r0;
        long l0, $l1, $l3, $l4, l5, l6;
        byte $b2;

        r0 := @this: android.location.LocationRequest;

        l5 := @parameter0: long;

        l0 = r0.<android.location.LocationRequest: long mExpireIn>;

        $l1 = 9223372036854775807L - l5;

        $b2 = l0 cmp $l1;

        if $b2 <= 0 goto label1;

        l6 = 9223372036854775807L;

        goto label2;

     label1:
        l6 = l0 + l5;

     label2:
        $l3 = r0.<android.location.LocationRequest: long mExpireAt>;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>(l6, $l3);

        return $l4;
    }

    public long getExpireAt()
    {
        android.location.LocationRequest r0;
        long $l0;

        r0 := @this: android.location.LocationRequest;

        $l0 = r0.<android.location.LocationRequest: long mExpireAt>;

        return $l0;
    }

    public long getExpireIn()
    {
        android.location.LocationRequest r0;
        long $l0;

        r0 := @this: android.location.LocationRequest;

        $l0 = r0.<android.location.LocationRequest: long mExpireIn>;

        return $l0;
    }

    public long getFastestInterval()
    {
        android.location.LocationRequest r0;
        long $l0;

        r0 := @this: android.location.LocationRequest;

        $l0 = r0.<android.location.LocationRequest: long mFastestInterval>;

        return $l0;
    }

    public boolean getHideFromAppOps()
    {
        android.location.LocationRequest r0;
        boolean $z0;

        r0 := @this: android.location.LocationRequest;

        $z0 = r0.<android.location.LocationRequest: boolean mHideFromAppOps>;

        return $z0;
    }

    public long getInterval()
    {
        android.location.LocationRequest r0;
        long $l0;

        r0 := @this: android.location.LocationRequest;

        $l0 = r0.<android.location.LocationRequest: long mInterval>;

        return $l0;
    }

    public int getNumUpdates()
    {
        android.location.LocationRequest r0;
        int $i0;

        r0 := @this: android.location.LocationRequest;

        $i0 = r0.<android.location.LocationRequest: int mNumUpdates>;

        return $i0;
    }

    public java.lang.String getProvider()
    {
        android.location.LocationRequest r0;
        java.lang.String $r1;

        r0 := @this: android.location.LocationRequest;

        $r1 = r0.<android.location.LocationRequest: java.lang.String mProvider>;

        return $r1;
    }

    public int getQuality()
    {
        android.location.LocationRequest r0;
        int $i0;

        r0 := @this: android.location.LocationRequest;

        $i0 = r0.<android.location.LocationRequest: int mQuality>;

        return $i0;
    }

    public float getSmallestDisplacement()
    {
        android.location.LocationRequest r0;
        float $f0;

        r0 := @this: android.location.LocationRequest;

        $f0 = r0.<android.location.LocationRequest: float mSmallestDisplacement>;

        return $f0;
    }

    public android.os.WorkSource getWorkSource()
    {
        android.location.LocationRequest r0;
        android.os.WorkSource $r1;

        r0 := @this: android.location.LocationRequest;

        $r1 = r0.<android.location.LocationRequest: android.os.WorkSource mWorkSource>;

        return $r1;
    }

    public boolean isLocationSettingsIgnored()
    {
        android.location.LocationRequest r0;
        boolean $z0;

        r0 := @this: android.location.LocationRequest;

        $z0 = r0.<android.location.LocationRequest: boolean mLocationSettingsIgnored>;

        return $z0;
    }

    public boolean isLowPowerMode()
    {
        android.location.LocationRequest r0;
        boolean $z0;

        r0 := @this: android.location.LocationRequest;

        $z0 = r0.<android.location.LocationRequest: boolean mLowPowerMode>;

        return $z0;
    }

    public android.location.LocationRequest setExpireAt(long)
    {
        android.location.LocationRequest r0;
        long l0, $l1;

        r0 := @this: android.location.LocationRequest;

        l0 := @parameter0: long;

        $l1 = staticinvoke <java.lang.Math: long max(long,long)>(l0, 0L);

        r0.<android.location.LocationRequest: long mExpireAt> = $l1;

        return r0;
    }

    public android.location.LocationRequest setExpireIn(long)
    {
        android.location.LocationRequest r0;
        long l0;

        r0 := @this: android.location.LocationRequest;

        l0 := @parameter0: long;

        r0.<android.location.LocationRequest: long mExpireIn> = l0;

        return r0;
    }

    public android.location.LocationRequest setFastestInterval(long)
    {
        android.location.LocationRequest r0;
        long l0;
        byte $b1;
        boolean z0;

        r0 := @this: android.location.LocationRequest;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, "invalid interval: + millis");

        r0.<android.location.LocationRequest: boolean mExplicitFastestInterval> = 1;

        r0.<android.location.LocationRequest: long mFastestInterval> = l0;

        return r0;
    }

    public void setHideFromAppOps(boolean)
    {
        android.location.LocationRequest r0;
        boolean z0;

        r0 := @this: android.location.LocationRequest;

        z0 := @parameter0: boolean;

        r0.<android.location.LocationRequest: boolean mHideFromAppOps> = z0;

        return;
    }

    public android.location.LocationRequest setInterval(long)
    {
        android.location.LocationRequest r0;
        long l0, $l2;
        byte $b1;
        boolean $z0, z1;
        double $d0, $d1;

        r0 := @this: android.location.LocationRequest;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z1, "invalid interval: + millis");

        r0.<android.location.LocationRequest: long mInterval> = l0;

        $z0 = r0.<android.location.LocationRequest: boolean mExplicitFastestInterval>;

        if $z0 != 0 goto label3;

        $d0 = (double) l0;

        $d1 = $d0 / 6.0;

        $l2 = (long) $d1;

        r0.<android.location.LocationRequest: long mFastestInterval> = $l2;

     label3:
        return r0;
    }

    public android.location.LocationRequest setLocationSettingsIgnored(boolean)
    {
        android.location.LocationRequest r0;
        boolean z0;

        r0 := @this: android.location.LocationRequest;

        z0 := @parameter0: boolean;

        r0.<android.location.LocationRequest: boolean mLocationSettingsIgnored> = z0;

        return r0;
    }

    public android.location.LocationRequest setLowPowerMode(boolean)
    {
        android.location.LocationRequest r0;
        boolean z0;

        r0 := @this: android.location.LocationRequest;

        z0 := @parameter0: boolean;

        r0.<android.location.LocationRequest: boolean mLowPowerMode> = z0;

        return r0;
    }

    public android.location.LocationRequest setNumUpdates(int)
    {
        android.location.LocationRequest r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.location.LocationRequest;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        r0.<android.location.LocationRequest: int mNumUpdates> = i0;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid numUpdates: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.location.LocationRequest setProvider(java.lang.String)
    {
        android.location.LocationRequest r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: android.location.LocationRequest;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, "invalid provider: null");

        r0.<android.location.LocationRequest: java.lang.String mProvider> = r1;

        return r0;
    }

    public android.location.LocationRequest setQuality(int)
    {
        android.location.LocationRequest r0;
        int i0;

        r0 := @this: android.location.LocationRequest;

        i0 := @parameter0: int;

        staticinvoke <android.location.LocationRequest: void checkQuality(int)>(i0);

        r0.<android.location.LocationRequest: int mQuality> = i0;

        return r0;
    }

    public android.location.LocationRequest setSmallestDisplacement(float)
    {
        android.location.LocationRequest r0;
        float f0, $f1;

        r0 := @this: android.location.LocationRequest;

        f0 := @parameter0: float;

        $f1 = staticinvoke <com.android.internal.util.Preconditions: float checkArgumentInRange(float,float,float,java.lang.String)>(f0, 0.0F, 3.4028235E38F, "smallestDisplacementM");

        r0.<android.location.LocationRequest: float mSmallestDisplacement> = $f1;

        return r0;
    }

    public void setWorkSource(android.os.WorkSource)
    {
        android.location.LocationRequest r0;
        android.os.WorkSource r1;

        r0 := @this: android.location.LocationRequest;

        r1 := @parameter0: android.os.WorkSource;

        r0.<android.location.LocationRequest: android.os.WorkSource mWorkSource> = r1;

        return;
    }

    public java.lang.String toString()
    {
        android.location.LocationRequest r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i4, $i5;
        java.lang.String $r4, $r7, $r10, $r17;
        long $l2, $l6, $l7, $l8, $l9, $l10;
        byte $b3, $b11;
        boolean $z0, $z1, $z2;

        r0 := @this: android.location.LocationRequest;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request[");

        $i0 = r0.<android.location.LocationRequest: int mQuality>;

        $r4 = staticinvoke <android.location.LocationRequest: java.lang.String qualityToString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = r0.<android.location.LocationRequest: java.lang.String mProvider>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $i1 = r0.<android.location.LocationRequest: int mQuality>;

        if $i1 == 200 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" interval=");

        $l8 = r0.<android.location.LocationRequest: long mInterval>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l8, $r2);

        $z2 = r0.<android.location.LocationRequest: boolean mExplicitFastestInterval>;

        if $z2 == 0 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fastestInterval=");

        $l9 = r0.<android.location.LocationRequest: long mFastestInterval>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l9, $r2);

     label1:
        $l10 = r0.<android.location.LocationRequest: long mExpireAt>;

        $b11 = $l10 cmp 9223372036854775807L;

        if $b11 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expireAt=");

        $l7 = r0.<android.location.LocationRequest: long mExpireAt>;

        $r17 = staticinvoke <android.util.TimeUtils: java.lang.String formatRealtime(long)>($l7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label2:
        $l2 = r0.<android.location.LocationRequest: long mExpireIn>;

        $b3 = $l2 cmp 9223372036854775807L;

        if $b3 == 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expireIn=");

        $l6 = r0.<android.location.LocationRequest: long mExpireIn>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l6, $r2);

     label3:
        $i4 = r0.<android.location.LocationRequest: int mNumUpdates>;

        if $i4 == 2147483647 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num=");

        $i5 = r0.<android.location.LocationRequest: int mNumUpdates>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

     label4:
        $z0 = r0.<android.location.LocationRequest: boolean mLowPowerMode>;

        if $z0 == 0 goto label5;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lowPowerMode");

     label5:
        $z1 = r0.<android.location.LocationRequest: boolean mLocationSettingsIgnored>;

        if $z1 == 0 goto label6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" locationSettingsIgnored");

     label6:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.location.LocationRequest r0;
        android.os.Parcel r1;
        int i0, $i1, $i6;
        java.lang.String $r2;
        long $l2, $l3, $l4, $l5;
        boolean $z0, $z1, $z2, $z3;
        float $f0;
        android.os.WorkSource $r3;

        r0 := @this: android.location.LocationRequest;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.location.LocationRequest: java.lang.String mProvider>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = r0.<android.location.LocationRequest: int mQuality>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $l2 = r0.<android.location.LocationRequest: long mInterval>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l3 = r0.<android.location.LocationRequest: long mFastestInterval>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $z0 = r0.<android.location.LocationRequest: boolean mExplicitFastestInterval>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        $l4 = r0.<android.location.LocationRequest: long mExpireAt>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $l5 = r0.<android.location.LocationRequest: long mExpireIn>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        $i6 = r0.<android.location.LocationRequest: int mNumUpdates>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $f0 = r0.<android.location.LocationRequest: float mSmallestDisplacement>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $z1 = r0.<android.location.LocationRequest: boolean mHideFromAppOps>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z1);

        $z2 = r0.<android.location.LocationRequest: boolean mLocationSettingsIgnored>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $z3 = r0.<android.location.LocationRequest: boolean mLowPowerMode>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z3);

        $r3 = r0.<android.location.LocationRequest: android.os.WorkSource mWorkSource>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>($r3, 0);

        return;
    }
}
