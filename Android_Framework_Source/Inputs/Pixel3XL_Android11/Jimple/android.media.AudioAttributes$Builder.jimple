public class android.media.AudioAttributes$Builder extends java.lang.Object
{
    private static final int PRIVACY_SENSITIVE_DEFAULT;
    private static final int PRIVACY_SENSITIVE_DISABLED;
    private static final int PRIVACY_SENSITIVE_ENABLED;
    private android.os.Bundle mBundle;
    private int mContentType;
    private int mFlags;
    private boolean mMuteHapticChannels;
    private int mPrivacySensitive;
    private int mSource;
    private int mSystemUsage;
    private java.util.HashSet mTags;
    private int mUsage;

    public void <init>()
    {
        android.media.AudioAttributes$Builder r0;
        java.util.HashSet $r1;

        r0 := @this: android.media.AudioAttributes$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioAttributes$Builder: int mUsage> = -1;

        r0.<android.media.AudioAttributes$Builder: int mSystemUsage> = -1;

        r0.<android.media.AudioAttributes$Builder: int mContentType> = 0;

        r0.<android.media.AudioAttributes$Builder: int mSource> = -1;

        r0.<android.media.AudioAttributes$Builder: int mFlags> = 0;

        r0.<android.media.AudioAttributes$Builder: boolean mMuteHapticChannels> = 1;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<android.media.AudioAttributes$Builder: java.util.HashSet mTags> = $r1;

        r0.<android.media.AudioAttributes$Builder: int mPrivacySensitive> = -1;

        return;
    }

    public void <init>(android.media.AudioAttributes)
    {
        android.media.AudioAttributes$Builder r0;
        android.media.AudioAttributes r1;
        java.util.HashSet $r2, $r3, $r5;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: android.media.AudioAttributes$Builder;

        r1 := @parameter0: android.media.AudioAttributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioAttributes$Builder: int mUsage> = -1;

        r0.<android.media.AudioAttributes$Builder: int mSystemUsage> = -1;

        r0.<android.media.AudioAttributes$Builder: int mContentType> = 0;

        r0.<android.media.AudioAttributes$Builder: int mSource> = -1;

        r0.<android.media.AudioAttributes$Builder: int mFlags> = 0;

        r0.<android.media.AudioAttributes$Builder: boolean mMuteHapticChannels> = 1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<android.media.AudioAttributes$Builder: java.util.HashSet mTags> = $r2;

        r0.<android.media.AudioAttributes$Builder: int mPrivacySensitive> = -1;

        $i0 = staticinvoke <android.media.AudioAttributes: int access$000(android.media.AudioAttributes)>(r1);

        r0.<android.media.AudioAttributes$Builder: int mUsage> = $i0;

        $i1 = staticinvoke <android.media.AudioAttributes: int access$100(android.media.AudioAttributes)>(r1);

        r0.<android.media.AudioAttributes$Builder: int mContentType> = $i1;

        $i2 = virtualinvoke r1.<android.media.AudioAttributes: int getAllFlags()>();

        r0.<android.media.AudioAttributes$Builder: int mFlags> = $i2;

        $r3 = staticinvoke <android.media.AudioAttributes: java.util.HashSet access$200(android.media.AudioAttributes)>(r1);

        $r4 = virtualinvoke $r3.<java.util.HashSet: java.lang.Object clone()>();

        $r5 = (java.util.HashSet) $r4;

        r0.<android.media.AudioAttributes$Builder: java.util.HashSet mTags> = $r5;

        $z0 = virtualinvoke r1.<android.media.AudioAttributes: boolean areHapticChannelsMuted()>();

        r0.<android.media.AudioAttributes$Builder: boolean mMuteHapticChannels> = $z0;

        return;
    }

    public android.media.AudioAttributes$Builder addBundle(android.os.Bundle)
    {
        android.media.AudioAttributes$Builder r0;
        android.os.Bundle r1, r2, $r4;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.media.AudioAttributes$Builder;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label3;

        r2 = r0.<android.media.AudioAttributes$Builder: android.os.Bundle mBundle>;

        if r2 != null goto label1;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

        r0.<android.media.AudioAttributes$Builder: android.os.Bundle mBundle> = $r4;

        goto label2;

     label1:
        virtualinvoke r2.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

     label2:
        return r0;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null bundle");

        throw $r3;
    }

    public android.media.AudioAttributes$Builder addTag(java.lang.String)
    {
        android.media.AudioAttributes$Builder r0;
        java.lang.String r1;
        java.util.HashSet $r2;

        r0 := @this: android.media.AudioAttributes$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.media.AudioAttributes$Builder: java.util.HashSet mTags>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public android.media.AudioAttributes build()
    {
        android.media.AudioAttributes$Builder r0;
        android.media.AudioAttributes $r2;
        int $i0, $i2, i13, i14, $i15, $i16, i17, i18;
        java.lang.IllegalArgumentException $r3;
        android.os.Bundle $r6, $r7, $r14;
        boolean $z0;
        java.util.HashSet $r9, $r11, $r12;
        java.lang.Object $r10;
        java.lang.String $r13;

        r0 := @this: android.media.AudioAttributes$Builder;

        $r2 = new android.media.AudioAttributes;

        specialinvoke $r2.<android.media.AudioAttributes: void <init>(android.media.AudioAttributes$1)>(null);

        $i0 = r0.<android.media.AudioAttributes$Builder: int mContentType>;

        staticinvoke <android.media.AudioAttributes: int access$102(android.media.AudioAttributes,int)>($r2, $i0);

        i13 = r0.<android.media.AudioAttributes$Builder: int mUsage>;

        if i13 != -1 goto label02;

        i14 = r0.<android.media.AudioAttributes$Builder: int mSystemUsage>;

        if i14 != -1 goto label01;

        staticinvoke <android.media.AudioAttributes: int access$002(android.media.AudioAttributes,int)>($r2, 0);

        goto label03;

     label01:
        staticinvoke <android.media.AudioAttributes: int access$002(android.media.AudioAttributes,int)>($r2, i14);

        goto label03;

     label02:
        $i2 = r0.<android.media.AudioAttributes$Builder: int mSystemUsage>;

        if $i2 != -1 goto label11;

        staticinvoke <android.media.AudioAttributes: int access$002(android.media.AudioAttributes,int)>($r2, i13);

     label03:
        $i15 = r0.<android.media.AudioAttributes$Builder: int mSource>;

        staticinvoke <android.media.AudioAttributes: int access$402(android.media.AudioAttributes,int)>($r2, $i15);

        $i16 = r0.<android.media.AudioAttributes$Builder: int mFlags>;

        staticinvoke <android.media.AudioAttributes: int access$502(android.media.AudioAttributes,int)>($r2, $i16);

        $z0 = r0.<android.media.AudioAttributes$Builder: boolean mMuteHapticChannels>;

        if $z0 == 0 goto label04;

        staticinvoke <android.media.AudioAttributes: int access$576(android.media.AudioAttributes,int)>($r2, 2048);

     label04:
        i17 = r0.<android.media.AudioAttributes$Builder: int mPrivacySensitive>;

        if i17 != -1 goto label07;

        i18 = r0.<android.media.AudioAttributes$Builder: int mSource>;

        if i18 == 7 goto label06;

        if i18 != 5 goto label05;

        goto label06;

     label05:
        staticinvoke <android.media.AudioAttributes: int access$572(android.media.AudioAttributes,int)>($r2, -8193);

        goto label09;

     label06:
        staticinvoke <android.media.AudioAttributes: int access$576(android.media.AudioAttributes,int)>($r2, 8192);

        goto label09;

     label07:
        if i17 != 1 goto label08;

        staticinvoke <android.media.AudioAttributes: int access$576(android.media.AudioAttributes,int)>($r2, 8192);

        goto label09;

     label08:
        staticinvoke <android.media.AudioAttributes: int access$572(android.media.AudioAttributes,int)>($r2, -8193);

     label09:
        $r9 = r0.<android.media.AudioAttributes$Builder: java.util.HashSet mTags>;

        $r10 = virtualinvoke $r9.<java.util.HashSet: java.lang.Object clone()>();

        $r11 = (java.util.HashSet) $r10;

        staticinvoke <android.media.AudioAttributes: java.util.HashSet access$202(android.media.AudioAttributes,java.util.HashSet)>($r2, $r11);

        $r12 = r0.<android.media.AudioAttributes$Builder: java.util.HashSet mTags>;

        $r13 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(";", $r12);

        staticinvoke <android.media.AudioAttributes: java.lang.String access$602(android.media.AudioAttributes,java.lang.String)>($r2, $r13);

        $r14 = r0.<android.media.AudioAttributes$Builder: android.os.Bundle mBundle>;

        if $r14 == null goto label10;

        $r6 = new android.os.Bundle;

        $r7 = r0.<android.media.AudioAttributes$Builder: android.os.Bundle mBundle>;

        specialinvoke $r6.<android.os.Bundle: void <init>(android.os.Bundle)>($r7);

        staticinvoke <android.media.AudioAttributes: android.os.Bundle access$702(android.media.AudioAttributes,android.os.Bundle)>($r2, $r6);

     label10:
        return $r2;

     label11:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot set both usage and system usage on same builder");

        throw $r3;
    }

    public android.media.AudioAttributes$Builder replaceFlags(int)
    {
        android.media.AudioAttributes$Builder r0;
        int i0, $i1;

        r0 := @this: android.media.AudioAttributes$Builder;

        i0 := @parameter0: int;

        $i1 = i0 & 14335;

        r0.<android.media.AudioAttributes$Builder: int mFlags> = $i1;

        return r0;
    }

    public android.media.AudioAttributes$Builder setAllowedCapturePolicy(int)
    {
        android.media.AudioAttributes$Builder r0;
        int i0, $i1, $i2;

        r0 := @this: android.media.AudioAttributes$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.AudioAttributes$Builder: int mFlags>;

        $i2 = staticinvoke <android.media.AudioAttributes: int capturePolicyToFlags(int,int)>(i0, $i1);

        r0.<android.media.AudioAttributes$Builder: int mFlags> = $i2;

        return r0;
    }

    public android.media.AudioAttributes$Builder setCapturePreset(int)
    {
        android.media.AudioAttributes$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;

        r0 := @this: android.media.AudioAttributes$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        if i0 == 5 goto label1;

        if i0 == 6 goto label1;

        if i0 == 7 goto label1;

        if i0 == 9 goto label1;

        if i0 == 10 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid capture preset ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for AudioAttributes");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioAttributes", $r6);

        goto label2;

     label1:
        r0.<android.media.AudioAttributes$Builder: int mSource> = i0;

     label2:
        return r0;
    }

    public android.media.AudioAttributes$Builder setContentType(int)
    {
        android.media.AudioAttributes$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioAttributes$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 == 2 goto label2;

        if i0 == 3 goto label2;

        if i0 != 4 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid content type ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = i0;

        return r0;
    }

    public android.media.AudioAttributes$Builder setFlags(int)
    {
        android.media.AudioAttributes$Builder r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.media.AudioAttributes$Builder;

        i0 := @parameter0: int;

        $i2 = r0.<android.media.AudioAttributes$Builder: int mFlags>;

        $i1 = i0 & 465;

        $i3 = $i2 | $i1;

        r0.<android.media.AudioAttributes$Builder: int mFlags> = $i3;

        return r0;
    }

    public android.media.AudioAttributes$Builder setHapticChannelsMuted(boolean)
    {
        android.media.AudioAttributes$Builder r0;
        boolean z0;

        r0 := @this: android.media.AudioAttributes$Builder;

        z0 := @parameter0: boolean;

        r0.<android.media.AudioAttributes$Builder: boolean mMuteHapticChannels> = z0;

        return r0;
    }

    public android.media.AudioAttributes$Builder setInternalCapturePreset(int)
    {
        android.media.AudioAttributes$Builder r0;
        int i0;

        r0 := @this: android.media.AudioAttributes$Builder;

        i0 := @parameter0: int;

        if i0 == 1999 goto label2;

        if i0 == 8 goto label2;

        if i0 == 1998 goto label2;

        if i0 == 3 goto label2;

        if i0 == 2 goto label2;

        if i0 == 4 goto label2;

        if i0 != 1997 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setCapturePreset(int)>(i0);

        goto label3;

     label2:
        r0.<android.media.AudioAttributes$Builder: int mSource> = i0;

     label3:
        return r0;
    }

    public android.media.AudioAttributes$Builder setInternalLegacyStreamType(int)
    {
        android.media.AudioAttributes$Builder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        boolean $z0;
        java.util.HashSet $r7;
        android.os.Bundle $r8;
        android.media.AudioAttributes r9;

        r0 := @this: android.media.AudioAttributes$Builder;

        i0 := @parameter0: int;

        r0.<android.media.AudioAttributes$Builder: int mContentType> = 0;

        r0.<android.media.AudioAttributes$Builder: int mUsage> = 0;

        $r1 = staticinvoke <android.media.audiopolicy.AudioProductStrategy: java.util.List getAudioProductStrategies()>();

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 <= 0 goto label01;

        r9 = staticinvoke <android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes getAudioAttributesForStrategyWithLegacyStreamType(int)>(i0);

        if r9 == null goto label01;

        $i10 = staticinvoke <android.media.AudioAttributes: int access$000(android.media.AudioAttributes)>(r9);

        r0.<android.media.AudioAttributes$Builder: int mUsage> = $i10;

        $i11 = staticinvoke <android.media.AudioAttributes: int access$100(android.media.AudioAttributes)>(r9);

        r0.<android.media.AudioAttributes$Builder: int mContentType> = $i11;

        $i12 = virtualinvoke r9.<android.media.AudioAttributes: int getAllFlags()>();

        r0.<android.media.AudioAttributes$Builder: int mFlags> = $i12;

        $z0 = virtualinvoke r9.<android.media.AudioAttributes: boolean areHapticChannelsMuted()>();

        r0.<android.media.AudioAttributes$Builder: boolean mMuteHapticChannels> = $z0;

        $r7 = staticinvoke <android.media.AudioAttributes: java.util.HashSet access$200(android.media.AudioAttributes)>(r9);

        r0.<android.media.AudioAttributes$Builder: java.util.HashSet mTags> = $r7;

        $r8 = staticinvoke <android.media.AudioAttributes: android.os.Bundle access$700(android.media.AudioAttributes)>(r9);

        r0.<android.media.AudioAttributes$Builder: android.os.Bundle mBundle> = $r8;

        $i13 = staticinvoke <android.media.AudioAttributes: int access$400(android.media.AudioAttributes)>(r9);

        r0.<android.media.AudioAttributes$Builder: int mSource> = $i13;

     label01:
        $i14 = r0.<android.media.AudioAttributes$Builder: int mContentType>;

        if $i14 != 0 goto label14;

        tableswitch(i0)
        {
            case 0: goto label13;
            case 1: goto label12;
            case 2: goto label11;
            case 3: goto label10;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label06;
            case 8: goto label05;
            case 9: goto label04;
            case 10: goto label03;
            default: goto label02;
        };

     label02:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid stream type ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for AudioAttributes");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioAttributes", $r6);

        goto label14;

     label03:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = 1;

        goto label14;

     label04:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = 4;

        $i3 = r0.<android.media.AudioAttributes$Builder: int mFlags>;

        $i4 = $i3 | 8;

        r0.<android.media.AudioAttributes$Builder: int mFlags> = $i4;

        goto label14;

     label05:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = 4;

        goto label14;

     label06:
        $i5 = r0.<android.media.AudioAttributes$Builder: int mFlags>;

        $i6 = 1 | $i5;

        r0.<android.media.AudioAttributes$Builder: int mFlags> = $i6;

        goto label12;

     label07:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = 1;

        $i7 = r0.<android.media.AudioAttributes$Builder: int mFlags>;

        $i8 = $i7 | 4;

        r0.<android.media.AudioAttributes$Builder: int mFlags> = $i8;

        goto label14;

     label08:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = 4;

        goto label14;

     label09:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = 4;

        goto label14;

     label10:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = 2;

        goto label14;

     label11:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = 4;

        goto label14;

     label12:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = 4;

        goto label14;

     label13:
        r0.<android.media.AudioAttributes$Builder: int mContentType> = 1;

     label14:
        $i15 = r0.<android.media.AudioAttributes$Builder: int mUsage>;

        if $i15 != 0 goto label15;

        $i2 = staticinvoke <android.media.AudioAttributes: int access$800(int)>(i0);

        r0.<android.media.AudioAttributes$Builder: int mUsage> = $i2;

     label15:
        return r0;
    }

    public android.media.AudioAttributes$Builder setLegacyStreamType(int)
    {
        android.media.AudioAttributes$Builder r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.media.AudioAttributes$Builder;

        i0 := @parameter0: int;

        if i0 == 10 goto label1;

        virtualinvoke r0.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setInternalLegacyStreamType(int)>(i0);

        return r0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("STREAM_ACCESSIBILITY is not a legacy stream type that was used for audio playback");

        throw $r1;
    }

    public android.media.AudioAttributes$Builder setPrivacySensitive(boolean)
    {
        android.media.AudioAttributes$Builder r0;
        boolean z0;
        int i0;

        r0 := @this: android.media.AudioAttributes$Builder;

        z0 := @parameter0: boolean;

        i0 = (int) z0;

        r0.<android.media.AudioAttributes$Builder: int mPrivacySensitive> = i0;

        return r0;
    }

    public android.media.AudioAttributes$Builder setSystemUsage(int)
    {
        android.media.AudioAttributes$Builder r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioAttributes$Builder;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.media.AudioAttributes: boolean isSystemUsage(int)>(i0);

        if $z0 == 0 goto label1;

        r0.<android.media.AudioAttributes$Builder: int mSystemUsage> = i0;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid system usage ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.media.AudioAttributes$Builder setUsage(int)
    {
        android.media.AudioAttributes$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioAttributes$Builder;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label2;
            case 13: goto label2;
            case 14: goto label2;
            case 15: goto label2;
            case 16: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid usage ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        r0.<android.media.AudioAttributes$Builder: int mUsage> = i0;

        return r0;
    }

    public static void <clinit>()
    {
        <android.media.AudioAttributes$Builder: int PRIVACY_SENSITIVE_ENABLED> = 1;

        <android.media.AudioAttributes$Builder: int PRIVACY_SENSITIVE_DISABLED> = 0;

        <android.media.AudioAttributes$Builder: int PRIVACY_SENSITIVE_DEFAULT> = -1;

        return;
    }
}
