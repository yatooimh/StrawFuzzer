public final class android.media.AudioFocusRequest$Builder extends java.lang.Object
{
    private boolean mA11yForceDucking;
    private android.media.AudioAttributes mAttr;
    private boolean mDelayedFocus;
    private int mFocusGain;
    private android.media.AudioManager$OnAudioFocusChangeListener mFocusListener;
    private boolean mFocusLocked;
    private android.os.Handler mListenerHandler;
    private boolean mPausesOnDuck;

    public void <init>(int)
    {
        android.media.AudioFocusRequest$Builder r0;
        int i0;
        android.media.AudioAttributes $r1;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.media.AudioFocusRequest: android.media.AudioAttributes access$000()>();

        r0.<android.media.AudioFocusRequest$Builder: android.media.AudioAttributes mAttr> = $r1;

        r0.<android.media.AudioFocusRequest$Builder: boolean mPausesOnDuck> = 0;

        r0.<android.media.AudioFocusRequest$Builder: boolean mDelayedFocus> = 0;

        r0.<android.media.AudioFocusRequest$Builder: boolean mFocusLocked> = 0;

        r0.<android.media.AudioFocusRequest$Builder: boolean mA11yForceDucking> = 0;

        virtualinvoke r0.<android.media.AudioFocusRequest$Builder: android.media.AudioFocusRequest$Builder setFocusGain(int)>(i0);

        return;
    }

    public void <init>(android.media.AudioFocusRequest)
    {
        android.media.AudioFocusRequest$Builder r0;
        android.media.AudioFocusRequest r1;
        android.media.AudioAttributes $r2, $r4;
        java.lang.IllegalArgumentException $r3;
        android.media.AudioManager$OnAudioFocusChangeListener $r5;
        android.os.Handler $r6;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        r1 := @parameter0: android.media.AudioFocusRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.media.AudioFocusRequest: android.media.AudioAttributes access$000()>();

        r0.<android.media.AudioFocusRequest$Builder: android.media.AudioAttributes mAttr> = $r2;

        r0.<android.media.AudioFocusRequest$Builder: boolean mPausesOnDuck> = 0;

        r0.<android.media.AudioFocusRequest$Builder: boolean mDelayedFocus> = 0;

        r0.<android.media.AudioFocusRequest$Builder: boolean mFocusLocked> = 0;

        r0.<android.media.AudioFocusRequest$Builder: boolean mA11yForceDucking> = 0;

        if r1 == null goto label1;

        $r4 = staticinvoke <android.media.AudioFocusRequest: android.media.AudioAttributes access$100(android.media.AudioFocusRequest)>(r1);

        r0.<android.media.AudioFocusRequest$Builder: android.media.AudioAttributes mAttr> = $r4;

        $r5 = staticinvoke <android.media.AudioFocusRequest: android.media.AudioManager$OnAudioFocusChangeListener access$200(android.media.AudioFocusRequest)>(r1);

        r0.<android.media.AudioFocusRequest$Builder: android.media.AudioManager$OnAudioFocusChangeListener mFocusListener> = $r5;

        $r6 = staticinvoke <android.media.AudioFocusRequest: android.os.Handler access$300(android.media.AudioFocusRequest)>(r1);

        r0.<android.media.AudioFocusRequest$Builder: android.os.Handler mListenerHandler> = $r6;

        $i0 = staticinvoke <android.media.AudioFocusRequest: int access$400(android.media.AudioFocusRequest)>(r1);

        r0.<android.media.AudioFocusRequest$Builder: int mFocusGain> = $i0;

        $z0 = virtualinvoke r1.<android.media.AudioFocusRequest: boolean willPauseWhenDucked()>();

        r0.<android.media.AudioFocusRequest$Builder: boolean mPausesOnDuck> = $z0;

        $z1 = virtualinvoke r1.<android.media.AudioFocusRequest: boolean acceptsDelayedFocusGain()>();

        r0.<android.media.AudioFocusRequest$Builder: boolean mDelayedFocus> = $z1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null AudioFocusRequest");

        throw $r3;
    }

    public android.media.AudioFocusRequest build()
    {
        android.media.AudioFocusRequest$Builder r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.media.AudioManager$OnAudioFocusChangeListener $r1, $r6;
        java.lang.IllegalStateException $r2;
        android.media.AudioFocusRequest $r3;
        int $i0, $i1, $i2, i3, i4, i5;
        android.media.AudioAttributes $r4, $r7, $r9, $r11, $r13;
        android.os.Handler $r5;
        android.os.Bundle $r8, $r14, r15;
        android.media.AudioAttributes$Builder $r10, $r12;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        $z1 = r0.<android.media.AudioFocusRequest$Builder: boolean mDelayedFocus>;

        if $z1 != 0 goto label1;

        $z5 = r0.<android.media.AudioFocusRequest$Builder: boolean mPausesOnDuck>;

        if $z5 == 0 goto label2;

     label1:
        $r1 = r0.<android.media.AudioFocusRequest$Builder: android.media.AudioManager$OnAudioFocusChangeListener mFocusListener>;

        if $r1 == null goto label9;

     label2:
        $z2 = r0.<android.media.AudioFocusRequest$Builder: boolean mA11yForceDucking>;

        if $z2 == 0 goto label5;

        $r7 = r0.<android.media.AudioFocusRequest$Builder: android.media.AudioAttributes mAttr>;

        $r8 = virtualinvoke $r7.<android.media.AudioAttributes: android.os.Bundle getBundle()>();

        if $r8 != null goto label3;

        $r14 = new android.os.Bundle;

        specialinvoke $r14.<android.os.Bundle: void <init>()>();

        r15 = $r14;

        goto label4;

     label3:
        $r9 = r0.<android.media.AudioFocusRequest$Builder: android.media.AudioAttributes mAttr>;

        r15 = virtualinvoke $r9.<android.media.AudioAttributes: android.os.Bundle getBundle()>();

     label4:
        virtualinvoke r15.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("a11y_force_ducking", 1);

        $r10 = new android.media.AudioAttributes$Builder;

        $r11 = r0.<android.media.AudioFocusRequest$Builder: android.media.AudioAttributes mAttr>;

        specialinvoke $r10.<android.media.AudioAttributes$Builder: void <init>(android.media.AudioAttributes)>($r11);

        $r12 = virtualinvoke $r10.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder addBundle(android.os.Bundle)>(r15);

        $r13 = virtualinvoke $r12.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        r0.<android.media.AudioFocusRequest$Builder: android.media.AudioAttributes mAttr> = $r13;

     label5:
        z0 = r0.<android.media.AudioFocusRequest$Builder: boolean mDelayedFocus>;

        i3 = 0;

        $z6 = r0.<android.media.AudioFocusRequest$Builder: boolean mPausesOnDuck>;

        if $z6 == 0 goto label6;

        i4 = 2;

        goto label7;

     label6:
        i4 = 0;

     label7:
        $z3 = r0.<android.media.AudioFocusRequest$Builder: boolean mFocusLocked>;

        if $z3 == 0 goto label8;

        i3 = 4;

     label8:
        $r3 = new android.media.AudioFocusRequest;

        $r6 = r0.<android.media.AudioFocusRequest$Builder: android.media.AudioManager$OnAudioFocusChangeListener mFocusListener>;

        $r5 = r0.<android.media.AudioFocusRequest$Builder: android.os.Handler mListenerHandler>;

        $r4 = r0.<android.media.AudioFocusRequest$Builder: android.media.AudioAttributes mAttr>;

        $i2 = r0.<android.media.AudioFocusRequest$Builder: int mFocusGain>;

        $z4 = z0 | 0;

        i5 = (int) $z4;

        $i0 = i5 | i4;

        $i1 = $i0 | i3;

        specialinvoke $r3.<android.media.AudioFocusRequest: void <init>(android.media.AudioManager$OnAudioFocusChangeListener,android.os.Handler,android.media.AudioAttributes,int,int,android.media.AudioFocusRequest$1)>($r6, $r5, $r4, $i2, $i1, null);

        return $r3;

     label9:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t use delayed focus or pause on duck without a listener");

        throw $r2;
    }

    public android.media.AudioFocusRequest$Builder setAcceptsDelayedFocusGain(boolean)
    {
        android.media.AudioFocusRequest$Builder r0;
        boolean z0;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.media.AudioFocusRequest$Builder: boolean mDelayedFocus> = z0;

        return r0;
    }

    public android.media.AudioFocusRequest$Builder setAudioAttributes(android.media.AudioAttributes)
    {
        android.media.AudioFocusRequest$Builder r0;
        android.media.AudioAttributes r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        r1 := @parameter0: android.media.AudioAttributes;

        if r1 == null goto label1;

        r0.<android.media.AudioFocusRequest$Builder: android.media.AudioAttributes mAttr> = r1;

        return r0;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Illegal null AudioAttributes");

        throw $r2;
    }

    public android.media.AudioFocusRequest$Builder setFocusGain(int)
    {
        android.media.AudioFocusRequest$Builder r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.media.AudioFocusRequest: boolean isValidFocusGain(int)>(i0);

        if $z0 == 0 goto label1;

        r0.<android.media.AudioFocusRequest$Builder: int mFocusGain> = i0;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal audio focus gain type ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.media.AudioFocusRequest$Builder setForceDucking(boolean)
    {
        android.media.AudioFocusRequest$Builder r0;
        boolean z0;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.media.AudioFocusRequest$Builder: boolean mA11yForceDucking> = z0;

        return r0;
    }

    public android.media.AudioFocusRequest$Builder setLocksFocus(boolean)
    {
        android.media.AudioFocusRequest$Builder r0;
        boolean z0;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.media.AudioFocusRequest$Builder: boolean mFocusLocked> = z0;

        return r0;
    }

    public android.media.AudioFocusRequest$Builder setOnAudioFocusChangeListener(android.media.AudioManager$OnAudioFocusChangeListener)
    {
        android.media.AudioFocusRequest$Builder r0;
        android.media.AudioManager$OnAudioFocusChangeListener r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        r1 := @parameter0: android.media.AudioManager$OnAudioFocusChangeListener;

        if r1 == null goto label1;

        r0.<android.media.AudioFocusRequest$Builder: android.media.AudioManager$OnAudioFocusChangeListener mFocusListener> = r1;

        r0.<android.media.AudioFocusRequest$Builder: android.os.Handler mListenerHandler> = null;

        return r0;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Illegal null focus listener");

        throw $r2;
    }

    public android.media.AudioFocusRequest$Builder setOnAudioFocusChangeListener(android.media.AudioManager$OnAudioFocusChangeListener, android.os.Handler)
    {
        android.media.AudioFocusRequest$Builder r0;
        android.media.AudioManager$OnAudioFocusChangeListener r1;
        android.os.Handler r2;
        java.lang.NullPointerException $r3;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        r1 := @parameter0: android.media.AudioManager$OnAudioFocusChangeListener;

        r2 := @parameter1: android.os.Handler;

        if r1 == null goto label1;

        if r2 == null goto label1;

        r0.<android.media.AudioFocusRequest$Builder: android.media.AudioManager$OnAudioFocusChangeListener mFocusListener> = r1;

        r0.<android.media.AudioFocusRequest$Builder: android.os.Handler mListenerHandler> = r2;

        return r0;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Illegal null focus listener or handler");

        throw $r3;
    }

    android.media.AudioFocusRequest$Builder setOnAudioFocusChangeListenerInt(android.media.AudioManager$OnAudioFocusChangeListener, android.os.Handler)
    {
        android.media.AudioFocusRequest$Builder r0;
        android.media.AudioManager$OnAudioFocusChangeListener r1;
        android.os.Handler r2;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        r1 := @parameter0: android.media.AudioManager$OnAudioFocusChangeListener;

        r2 := @parameter1: android.os.Handler;

        r0.<android.media.AudioFocusRequest$Builder: android.media.AudioManager$OnAudioFocusChangeListener mFocusListener> = r1;

        r0.<android.media.AudioFocusRequest$Builder: android.os.Handler mListenerHandler> = r2;

        return r0;
    }

    public android.media.AudioFocusRequest$Builder setWillPauseWhenDucked(boolean)
    {
        android.media.AudioFocusRequest$Builder r0;
        boolean z0;

        r0 := @this: android.media.AudioFocusRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.media.AudioFocusRequest$Builder: boolean mPausesOnDuck> = z0;

        return r0;
    }
}
