public final class android.media.AudioFocusRequest extends java.lang.Object
{
    private static final android.media.AudioAttributes FOCUS_DEFAULT_ATTR;
    public static final java.lang.String KEY_ACCESSIBILITY_FORCE_FOCUS_DUCKING;
    private final android.media.AudioAttributes mAttr;
    private final int mFlags;
    private final int mFocusGain;
    private final android.media.AudioManager$OnAudioFocusChangeListener mFocusListener;
    private final android.os.Handler mListenerHandler;

    static void <clinit>()
    {
        android.media.AudioAttributes$Builder $r0, $r1;
        android.media.AudioAttributes $r2;

        <android.media.AudioFocusRequest: java.lang.String KEY_ACCESSIBILITY_FORCE_FOCUS_DUCKING> = "a11y_force_ducking";

        $r0 = new android.media.AudioAttributes$Builder;

        specialinvoke $r0.<android.media.AudioAttributes$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(1);

        $r2 = virtualinvoke $r1.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        <android.media.AudioFocusRequest: android.media.AudioAttributes FOCUS_DEFAULT_ATTR> = $r2;

        return;
    }

    private void <init>(android.media.AudioManager$OnAudioFocusChangeListener, android.os.Handler, android.media.AudioAttributes, int, int)
    {
        android.media.AudioFocusRequest r0;
        android.media.AudioManager$OnAudioFocusChangeListener r1;
        android.os.Handler r2;
        android.media.AudioAttributes r3;
        int i0, i1;

        r0 := @this: android.media.AudioFocusRequest;

        r1 := @parameter0: android.media.AudioManager$OnAudioFocusChangeListener;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.media.AudioAttributes;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioFocusRequest: android.media.AudioManager$OnAudioFocusChangeListener mFocusListener> = r1;

        r0.<android.media.AudioFocusRequest: android.os.Handler mListenerHandler> = r2;

        r0.<android.media.AudioFocusRequest: int mFocusGain> = i0;

        r0.<android.media.AudioFocusRequest: android.media.AudioAttributes mAttr> = r3;

        r0.<android.media.AudioFocusRequest: int mFlags> = i1;

        return;
    }

    void <init>(android.media.AudioManager$OnAudioFocusChangeListener, android.os.Handler, android.media.AudioAttributes, int, int, android.media.AudioFocusRequest$1)
    {
        android.media.AudioFocusRequest r0;
        android.media.AudioManager$OnAudioFocusChangeListener r1;
        android.os.Handler r2;
        android.media.AudioAttributes r3;
        int i0, i1;
        android.media.AudioFocusRequest$1 r4;

        r0 := @this: android.media.AudioFocusRequest;

        r1 := @parameter0: android.media.AudioManager$OnAudioFocusChangeListener;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.media.AudioAttributes;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: android.media.AudioFocusRequest$1;

        specialinvoke r0.<android.media.AudioFocusRequest: void <init>(android.media.AudioManager$OnAudioFocusChangeListener,android.os.Handler,android.media.AudioAttributes,int,int)>(r1, r2, r3, i0, i1);

        return;
    }

    static android.media.AudioAttributes access$000()
    {
        android.media.AudioAttributes $r0;

        $r0 = <android.media.AudioFocusRequest: android.media.AudioAttributes FOCUS_DEFAULT_ATTR>;

        return $r0;
    }

    static android.media.AudioAttributes access$100(android.media.AudioFocusRequest)
    {
        android.media.AudioFocusRequest r0;
        android.media.AudioAttributes $r1;

        r0 := @parameter0: android.media.AudioFocusRequest;

        $r1 = r0.<android.media.AudioFocusRequest: android.media.AudioAttributes mAttr>;

        return $r1;
    }

    static android.media.AudioManager$OnAudioFocusChangeListener access$200(android.media.AudioFocusRequest)
    {
        android.media.AudioFocusRequest r0;
        android.media.AudioManager$OnAudioFocusChangeListener $r1;

        r0 := @parameter0: android.media.AudioFocusRequest;

        $r1 = r0.<android.media.AudioFocusRequest: android.media.AudioManager$OnAudioFocusChangeListener mFocusListener>;

        return $r1;
    }

    static android.os.Handler access$300(android.media.AudioFocusRequest)
    {
        android.media.AudioFocusRequest r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.media.AudioFocusRequest;

        $r1 = r0.<android.media.AudioFocusRequest: android.os.Handler mListenerHandler>;

        return $r1;
    }

    static int access$400(android.media.AudioFocusRequest)
    {
        android.media.AudioFocusRequest r0;
        int $i0;

        r0 := @parameter0: android.media.AudioFocusRequest;

        $i0 = r0.<android.media.AudioFocusRequest: int mFocusGain>;

        return $i0;
    }

    static final boolean isValidFocusGain(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        if i0 == 4 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean acceptsDelayedFocusGain()
    {
        android.media.AudioFocusRequest r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.media.AudioFocusRequest;

        i0 = r0.<android.media.AudioFocusRequest: int mFlags>;

        z0 = 1;

        $i1 = i0 & 1;

        if $i1 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public android.media.AudioAttributes getAudioAttributes()
    {
        android.media.AudioFocusRequest r0;
        android.media.AudioAttributes $r1;

        r0 := @this: android.media.AudioFocusRequest;

        $r1 = r0.<android.media.AudioFocusRequest: android.media.AudioAttributes mAttr>;

        return $r1;
    }

    int getFlags()
    {
        android.media.AudioFocusRequest r0;
        int $i0;

        r0 := @this: android.media.AudioFocusRequest;

        $i0 = r0.<android.media.AudioFocusRequest: int mFlags>;

        return $i0;
    }

    public int getFocusGain()
    {
        android.media.AudioFocusRequest r0;
        int $i0;

        r0 := @this: android.media.AudioFocusRequest;

        $i0 = r0.<android.media.AudioFocusRequest: int mFocusGain>;

        return $i0;
    }

    public android.media.AudioManager$OnAudioFocusChangeListener getOnAudioFocusChangeListener()
    {
        android.media.AudioFocusRequest r0;
        android.media.AudioManager$OnAudioFocusChangeListener $r1;

        r0 := @this: android.media.AudioFocusRequest;

        $r1 = r0.<android.media.AudioFocusRequest: android.media.AudioManager$OnAudioFocusChangeListener mFocusListener>;

        return $r1;
    }

    public android.os.Handler getOnAudioFocusChangeListenerHandler()
    {
        android.media.AudioFocusRequest r0;
        android.os.Handler $r1;

        r0 := @this: android.media.AudioFocusRequest;

        $r1 = r0.<android.media.AudioFocusRequest: android.os.Handler mListenerHandler>;

        return $r1;
    }

    public boolean locksFocus()
    {
        android.media.AudioFocusRequest r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.media.AudioFocusRequest;

        $i0 = r0.<android.media.AudioFocusRequest: int mFlags>;

        $i1 = $i0 & 4;

        if $i1 != 4 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean willPauseWhenDucked()
    {
        android.media.AudioFocusRequest r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.media.AudioFocusRequest;

        $i0 = r0.<android.media.AudioFocusRequest: int mFlags>;

        $i1 = $i0 & 2;

        if $i1 != 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
