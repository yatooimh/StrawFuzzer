public class android.media.AudioFormat$Builder extends java.lang.Object
{
    private int mChannelIndexMask;
    private int mChannelMask;
    private int mEncoding;
    private int mPropertySetMask;
    private int mSampleRate;

    public void <init>()
    {
        android.media.AudioFormat$Builder r0;

        r0 := @this: android.media.AudioFormat$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioFormat$Builder: int mEncoding> = 0;

        r0.<android.media.AudioFormat$Builder: int mSampleRate> = 0;

        r0.<android.media.AudioFormat$Builder: int mChannelMask> = 0;

        r0.<android.media.AudioFormat$Builder: int mChannelIndexMask> = 0;

        r0.<android.media.AudioFormat$Builder: int mPropertySetMask> = 0;

        return;
    }

    public void <init>(android.media.AudioFormat)
    {
        android.media.AudioFormat$Builder r0;
        android.media.AudioFormat r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.media.AudioFormat$Builder;

        r1 := @parameter0: android.media.AudioFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioFormat$Builder: int mEncoding> = 0;

        r0.<android.media.AudioFormat$Builder: int mSampleRate> = 0;

        r0.<android.media.AudioFormat$Builder: int mChannelMask> = 0;

        r0.<android.media.AudioFormat$Builder: int mChannelIndexMask> = 0;

        r0.<android.media.AudioFormat$Builder: int mPropertySetMask> = 0;

        $i0 = staticinvoke <android.media.AudioFormat: int access$000(android.media.AudioFormat)>(r1);

        r0.<android.media.AudioFormat$Builder: int mEncoding> = $i0;

        $i1 = staticinvoke <android.media.AudioFormat: int access$100(android.media.AudioFormat)>(r1);

        r0.<android.media.AudioFormat$Builder: int mSampleRate> = $i1;

        $i2 = staticinvoke <android.media.AudioFormat: int access$200(android.media.AudioFormat)>(r1);

        r0.<android.media.AudioFormat$Builder: int mChannelMask> = $i2;

        $i3 = staticinvoke <android.media.AudioFormat: int access$300(android.media.AudioFormat)>(r1);

        r0.<android.media.AudioFormat$Builder: int mChannelIndexMask> = $i3;

        $i4 = staticinvoke <android.media.AudioFormat: int access$400(android.media.AudioFormat)>(r1);

        r0.<android.media.AudioFormat$Builder: int mPropertySetMask> = $i4;

        return;
    }

    public android.media.AudioFormat build()
    {
        android.media.AudioFormat$Builder r0;
        android.media.AudioFormat $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.media.AudioFormat$Builder;

        $r1 = new android.media.AudioFormat;

        $i4 = r0.<android.media.AudioFormat$Builder: int mPropertySetMask>;

        $i3 = r0.<android.media.AudioFormat$Builder: int mEncoding>;

        $i2 = r0.<android.media.AudioFormat$Builder: int mSampleRate>;

        $i1 = r0.<android.media.AudioFormat$Builder: int mChannelMask>;

        $i0 = r0.<android.media.AudioFormat$Builder: int mChannelIndexMask>;

        specialinvoke $r1.<android.media.AudioFormat: void <init>(int,int,int,int,int,android.media.AudioFormat$1)>($i4, $i3, $i2, $i1, $i0, null);

        return $r1;
    }

    public android.media.AudioFormat$Builder setChannelIndexMask(int)
    {
        android.media.AudioFormat$Builder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.IllegalArgumentException $r2, $r8;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r6, $r9;

        r0 := @this: android.media.AudioFormat$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        $i1 = r0.<android.media.AudioFormat$Builder: int mChannelMask>;

        if $i1 == 0 goto label2;

        $i4 = staticinvoke <java.lang.Integer: int bitCount(int)>(i0);

        $i5 = r0.<android.media.AudioFormat$Builder: int mChannelMask>;

        $i6 = staticinvoke <java.lang.Integer: int bitCount(int)>($i5);

        if $i4 != $i6 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mismatched channel count for index mask ");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        r0.<android.media.AudioFormat$Builder: int mChannelIndexMask> = i0;

        $i2 = r0.<android.media.AudioFormat$Builder: int mPropertySetMask>;

        $i3 = $i2 | 8;

        r0.<android.media.AudioFormat$Builder: int mPropertySetMask> = $i3;

        return r0;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid zero channel index mask");

        throw $r2;
    }

    public android.media.AudioFormat$Builder setChannelMask(int)
    {
        android.media.AudioFormat$Builder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.IllegalArgumentException $r2, $r8;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r6, $r9;

        r0 := @this: android.media.AudioFormat$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        $i1 = r0.<android.media.AudioFormat$Builder: int mChannelIndexMask>;

        if $i1 == 0 goto label2;

        $i4 = staticinvoke <java.lang.Integer: int bitCount(int)>(i0);

        $i5 = r0.<android.media.AudioFormat$Builder: int mChannelIndexMask>;

        $i6 = staticinvoke <java.lang.Integer: int bitCount(int)>($i5);

        if $i4 != $i6 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mismatched channel count for mask ");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        r0.<android.media.AudioFormat$Builder: int mChannelMask> = i0;

        $i2 = r0.<android.media.AudioFormat$Builder: int mPropertySetMask>;

        $i3 = $i2 | 4;

        r0.<android.media.AudioFormat$Builder: int mPropertySetMask> = $i3;

        return r0;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid zero channel mask");

        throw $r2;
    }

    public android.media.AudioFormat$Builder setEncoding(int) throws java.lang.IllegalArgumentException
    {
        android.media.AudioFormat$Builder r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioFormat$Builder;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label2;
            case 13: goto label2;
            case 14: goto label2;
            case 15: goto label2;
            case 16: goto label2;
            case 17: goto label2;
            case 18: goto label2;
            case 19: goto label2;
            case 20: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid encoding ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        r0.<android.media.AudioFormat$Builder: int mEncoding> = i0;

        goto label4;

     label3:
        r0.<android.media.AudioFormat$Builder: int mEncoding> = 2;

     label4:
        $i1 = r0.<android.media.AudioFormat$Builder: int mPropertySetMask>;

        $i2 = $i1 | 1;

        r0.<android.media.AudioFormat$Builder: int mPropertySetMask> = $i2;

        return r0;
    }

    public android.media.AudioFormat$Builder setSampleRate(int) throws java.lang.IllegalArgumentException
    {
        android.media.AudioFormat$Builder r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioFormat$Builder;

        i0 := @parameter0: int;

        if i0 < 4000 goto label1;

        if i0 <= 192000 goto label2;

     label1:
        if i0 != 0 goto label3;

     label2:
        r0.<android.media.AudioFormat$Builder: int mSampleRate> = i0;

        $i1 = r0.<android.media.AudioFormat$Builder: int mPropertySetMask>;

        $i2 = $i1 | 2;

        r0.<android.media.AudioFormat$Builder: int mPropertySetMask> = $i2;

        return r0;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid sample rate ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }
}
