final class android.media.AudioManager$BlockingFocusResultReceiver extends java.lang.Object
{
    private final java.lang.String mFocusClientId;
    private int mFocusRequestResult;
    private final android.media.AudioManager$SafeWaitObject mLock;
    private boolean mResultReceived;

    void <init>(java.lang.String)
    {
        android.media.AudioManager$BlockingFocusResultReceiver r0;
        java.lang.String r1;
        android.media.AudioManager$SafeWaitObject $r2;

        r0 := @this: android.media.AudioManager$BlockingFocusResultReceiver;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.media.AudioManager$SafeWaitObject;

        specialinvoke $r2.<android.media.AudioManager$SafeWaitObject: void <init>(android.media.AudioManager$1)>(null);

        r0.<android.media.AudioManager$BlockingFocusResultReceiver: android.media.AudioManager$SafeWaitObject mLock> = $r2;

        r0.<android.media.AudioManager$BlockingFocusResultReceiver: boolean mResultReceived> = 0;

        r0.<android.media.AudioManager$BlockingFocusResultReceiver: int mFocusRequestResult> = 0;

        r0.<android.media.AudioManager$BlockingFocusResultReceiver: java.lang.String mFocusClientId> = r1;

        return;
    }

    void notifyResult(int)
    {
        android.media.AudioManager$BlockingFocusResultReceiver r0;
        int i0;
        android.media.AudioManager$SafeWaitObject r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.media.AudioManager$BlockingFocusResultReceiver;

        i0 := @parameter0: int;

        r1 = r0.<android.media.AudioManager$BlockingFocusResultReceiver: android.media.AudioManager$SafeWaitObject mLock>;

        entermonitor r1;

     label1:
        r0.<android.media.AudioManager$BlockingFocusResultReceiver: boolean mResultReceived> = 1;

        r0.<android.media.AudioManager$BlockingFocusResultReceiver: int mFocusRequestResult> = i0;

        $r3 = r0.<android.media.AudioManager$BlockingFocusResultReceiver: android.media.AudioManager$SafeWaitObject mLock>;

        virtualinvoke $r3.<android.media.AudioManager$SafeWaitObject: void safeNotify()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean receivedResult()
    {
        android.media.AudioManager$BlockingFocusResultReceiver r0;
        boolean $z0;

        r0 := @this: android.media.AudioManager$BlockingFocusResultReceiver;

        $z0 = r0.<android.media.AudioManager$BlockingFocusResultReceiver: boolean mResultReceived>;

        return $z0;
    }

    int requestResult()
    {
        android.media.AudioManager$BlockingFocusResultReceiver r0;
        int $i0;

        r0 := @this: android.media.AudioManager$BlockingFocusResultReceiver;

        $i0 = r0.<android.media.AudioManager$BlockingFocusResultReceiver: int mFocusRequestResult>;

        return $i0;
    }

    public void waitForResult(long)
    {
        android.media.AudioManager$BlockingFocusResultReceiver r0;
        long l0;
        android.media.AudioManager$SafeWaitObject r1, $r2;
        boolean $z0;
        java.lang.Throwable $r3, $r4;

        r0 := @this: android.media.AudioManager$BlockingFocusResultReceiver;

        l0 := @parameter0: long;

        r1 = r0.<android.media.AudioManager$BlockingFocusResultReceiver: android.media.AudioManager$SafeWaitObject mLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.media.AudioManager$BlockingFocusResultReceiver: boolean mResultReceived>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r2 = r0.<android.media.AudioManager$BlockingFocusResultReceiver: android.media.AudioManager$SafeWaitObject mLock>;

        virtualinvoke $r2.<android.media.AudioManager$SafeWaitObject: void safeWait(long)>(l0);

     label04:
        goto label06;

     label05:
        $r4 := @caughtexception;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }
}
