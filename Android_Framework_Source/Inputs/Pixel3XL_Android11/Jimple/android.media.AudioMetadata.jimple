public final class android.media.AudioMetadata extends java.lang.Object
{
    private static final java.nio.charset.Charset AUDIO_METADATA_CHARSET;
    private static final java.util.HashMap AUDIO_METADATA_OBJ_TYPES;
    private static final int AUDIO_METADATA_OBJ_TYPE_BASEMAP;
    private static final int AUDIO_METADATA_OBJ_TYPE_DOUBLE;
    private static final int AUDIO_METADATA_OBJ_TYPE_FLOAT;
    private static final int AUDIO_METADATA_OBJ_TYPE_INT;
    private static final int AUDIO_METADATA_OBJ_TYPE_LONG;
    private static final int AUDIO_METADATA_OBJ_TYPE_NONE;
    private static final int AUDIO_METADATA_OBJ_TYPE_STRING;
    private static final java.util.HashMap DATA_PACKAGES;
    private static final android.media.AudioMetadata$ObjectPackage OBJECT_PACKAGE;
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        android.media.AudioMetadata$2 $r0;
        java.nio.charset.Charset $r1;
        android.media.AudioMetadata$3 $r2;
        android.media.AudioMetadata$ObjectPackage $r3;

        <android.media.AudioMetadata: java.lang.String TAG> = "AudioMetadata";

        <android.media.AudioMetadata: int AUDIO_METADATA_OBJ_TYPE_STRING> = 5;

        <android.media.AudioMetadata: int AUDIO_METADATA_OBJ_TYPE_NONE> = 0;

        <android.media.AudioMetadata: int AUDIO_METADATA_OBJ_TYPE_LONG> = 2;

        <android.media.AudioMetadata: int AUDIO_METADATA_OBJ_TYPE_INT> = 1;

        <android.media.AudioMetadata: int AUDIO_METADATA_OBJ_TYPE_FLOAT> = 3;

        <android.media.AudioMetadata: int AUDIO_METADATA_OBJ_TYPE_DOUBLE> = 4;

        <android.media.AudioMetadata: int AUDIO_METADATA_OBJ_TYPE_BASEMAP> = 6;

        $r0 = new android.media.AudioMetadata$2;

        specialinvoke $r0.<android.media.AudioMetadata$2: void <init>()>();

        <android.media.AudioMetadata: java.util.HashMap AUDIO_METADATA_OBJ_TYPES> = $r0;

        $r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        <android.media.AudioMetadata: java.nio.charset.Charset AUDIO_METADATA_CHARSET> = $r1;

        $r2 = new android.media.AudioMetadata$3;

        specialinvoke $r2.<android.media.AudioMetadata$3: void <init>()>();

        <android.media.AudioMetadata: java.util.HashMap DATA_PACKAGES> = $r2;

        $r3 = new android.media.AudioMetadata$ObjectPackage;

        specialinvoke $r3.<android.media.AudioMetadata$ObjectPackage: void <init>(android.media.AudioMetadata$1)>(null);

        <android.media.AudioMetadata: android.media.AudioMetadata$ObjectPackage OBJECT_PACKAGE> = $r3;

        return;
    }

    private void <init>()
    {
        android.media.AudioMetadata r0;

        r0 := @this: android.media.AudioMetadata;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.nio.charset.Charset access$000()
    {
        java.nio.charset.Charset $r0;

        $r0 = <android.media.AudioMetadata: java.nio.charset.Charset AUDIO_METADATA_CHARSET>;

        return $r0;
    }

    static java.util.HashMap access$300()
    {
        java.util.HashMap $r0;

        $r0 = <android.media.AudioMetadata: java.util.HashMap DATA_PACKAGES>;

        return $r0;
    }

    static java.util.HashMap access$400()
    {
        java.util.HashMap $r0;

        $r0 = <android.media.AudioMetadata: java.util.HashMap AUDIO_METADATA_OBJ_TYPES>;

        return $r0;
    }

    static android.media.AudioMetadata$ObjectPackage access$500()
    {
        android.media.AudioMetadata$ObjectPackage $r0;

        $r0 = <android.media.AudioMetadata: android.media.AudioMetadata$ObjectPackage OBJECT_PACKAGE>;

        return $r0;
    }

    public static android.media.AudioMetadata$Key createKey(java.lang.String, java.lang.Class)
    {
        java.lang.String r0;
        java.lang.Class r1;
        android.media.AudioMetadata$1 $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r2 = new android.media.AudioMetadata$1;

        specialinvoke $r2.<android.media.AudioMetadata$1: void <init>(java.lang.String,java.lang.Class)>(r0, r1);

        return $r2;
    }

    public static android.media.AudioMetadataMap createMap()
    {
        android.media.AudioMetadata$BaseMap $r0;

        $r0 = new android.media.AudioMetadata$BaseMap;

        specialinvoke $r0.<android.media.AudioMetadata$BaseMap: void <init>()>();

        return $r0;
    }

    public static android.media.AudioMetadata$BaseMap fromByteBuffer(java.nio.ByteBuffer)
    {
        android.media.AudioMetadata$DataPackage r0;
        java.util.HashMap $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3, $r4;
        java.lang.Throwable $r5;
        java.nio.ByteBuffer r6;
        android.media.AudioMetadata$BaseMap r7;

        r6 := @parameter0: java.nio.ByteBuffer;

        $r1 = <android.media.AudioMetadata: java.util.HashMap DATA_PACKAGES>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r0 = (android.media.AudioMetadata$DataPackage) $r3;

        if r0 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioMetadata", "Cannot find DataPackage for BaseMap");

        return null;

     label1:
        $r4 = interfaceinvoke r0.<android.media.AudioMetadata$DataPackage: java.lang.Object unpack(java.nio.ByteBuffer)>(r6);

        r7 = (android.media.AudioMetadata$BaseMap) $r4;

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioMetadata", "No enough data to unpack");

        return null;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public static java.nio.ByteBuffer toByteBuffer(android.media.AudioMetadata$BaseMap, java.nio.ByteOrder)
    {
        android.media.AudioMetadata$BaseMap r0;
        java.nio.ByteOrder r1;
        android.media.AudioMetadata$DataPackage r2;
        java.util.HashMap $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;
        android.media.AudioMetadata$AutoGrowByteBuffer $r7;
        boolean $z0;
        java.nio.ByteBuffer $r9;

        r0 := @parameter0: android.media.AudioMetadata$BaseMap;

        r1 := @parameter1: java.nio.ByteOrder;

        $r4 = <android.media.AudioMetadata: java.util.HashMap DATA_PACKAGES>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (android.media.AudioMetadata$DataPackage) $r6;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioMetadata", "Cannot find DataPackage for BaseMap");

        return null;

     label1:
        $r7 = new android.media.AudioMetadata$AutoGrowByteBuffer;

        specialinvoke $r7.<android.media.AudioMetadata$AutoGrowByteBuffer: void <init>()>();

        virtualinvoke $r7.<android.media.AudioMetadata$AutoGrowByteBuffer: android.media.AudioMetadata$AutoGrowByteBuffer order(java.nio.ByteOrder)>(r1);

        $z0 = interfaceinvoke r2.<android.media.AudioMetadata$DataPackage: boolean pack(android.media.AudioMetadata$AutoGrowByteBuffer,java.lang.Object)>($r7, r0);

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke $r7.<android.media.AudioMetadata$AutoGrowByteBuffer: java.nio.ByteBuffer getRawByteBuffer()>();

        return $r9;

     label2:
        return null;
    }
}
