public final class android.media.AudioPlaybackCaptureConfiguration extends java.lang.Object
{
    private final android.media.audiopolicy.AudioMixingRule mAudioMixingRule;
    private final android.media.projection.MediaProjection mProjection;

    private void <init>(android.media.audiopolicy.AudioMixingRule, android.media.projection.MediaProjection)
    {
        android.media.AudioPlaybackCaptureConfiguration r0;
        android.media.audiopolicy.AudioMixingRule r1;
        android.media.projection.MediaProjection r2;

        r0 := @this: android.media.AudioPlaybackCaptureConfiguration;

        r1 := @parameter0: android.media.audiopolicy.AudioMixingRule;

        r2 := @parameter1: android.media.projection.MediaProjection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioPlaybackCaptureConfiguration: android.media.audiopolicy.AudioMixingRule mAudioMixingRule> = r1;

        r0.<android.media.AudioPlaybackCaptureConfiguration: android.media.projection.MediaProjection mProjection> = r2;

        return;
    }

    void <init>(android.media.audiopolicy.AudioMixingRule, android.media.projection.MediaProjection, android.media.AudioPlaybackCaptureConfiguration$1)
    {
        android.media.AudioPlaybackCaptureConfiguration r0;
        android.media.audiopolicy.AudioMixingRule r1;
        android.media.projection.MediaProjection r2;
        android.media.AudioPlaybackCaptureConfiguration$1 r3;

        r0 := @this: android.media.AudioPlaybackCaptureConfiguration;

        r1 := @parameter0: android.media.audiopolicy.AudioMixingRule;

        r2 := @parameter1: android.media.projection.MediaProjection;

        r3 := @parameter2: android.media.AudioPlaybackCaptureConfiguration$1;

        specialinvoke r0.<android.media.AudioPlaybackCaptureConfiguration: void <init>(android.media.audiopolicy.AudioMixingRule,android.media.projection.MediaProjection)>(r1, r2);

        return;
    }

    private int[] getIntPredicates(int, java.util.function.ToIntFunction)
    {
        android.media.AudioPlaybackCaptureConfiguration r0;
        int i0;
        java.util.function.ToIntFunction r1;
        android.media.audiopolicy.AudioMixingRule $r2;
        java.util.ArrayList $r3;
        java.util.stream.Stream $r4, $r6;
        android.media._$$Lambda$AudioPlaybackCaptureConfiguration$CbJtSEmgD3swIYuOWlTCDMPxK1s $r5;
        java.util.stream.IntStream $r7;
        int[] $r8;

        r0 := @this: android.media.AudioPlaybackCaptureConfiguration;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.function.ToIntFunction;

        $r2 = r0.<android.media.AudioPlaybackCaptureConfiguration: android.media.audiopolicy.AudioMixingRule mAudioMixingRule>;

        $r3 = virtualinvoke $r2.<android.media.audiopolicy.AudioMixingRule: java.util.ArrayList getCriteria()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r5 = new android.media._$$Lambda$AudioPlaybackCaptureConfiguration$CbJtSEmgD3swIYuOWlTCDMPxK1s;

        specialinvoke $r5.<android.media._$$Lambda$AudioPlaybackCaptureConfiguration$CbJtSEmgD3swIYuOWlTCDMPxK1s: void <init>(int)>(i0);

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r1);

        $r8 = interfaceinvoke $r7.<java.util.stream.IntStream: int[] toArray()>();

        return $r8;
    }

    static int lambda$getExcludeUids$3(android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion)
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        int $i0;

        r0 := @parameter0: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        $i0 = virtualinvoke r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int getIntProp()>();

        return $i0;
    }

    static int lambda$getExcludeUsages$2(android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion)
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        android.media.AudioAttributes $r1;
        int $i0;

        r0 := @parameter0: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        $r1 = virtualinvoke r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes getAudioAttributes()>();

        $i0 = virtualinvoke $r1.<android.media.AudioAttributes: int getUsage()>();

        return $i0;
    }

    static boolean lambda$getIntPredicates$4(int, android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion)
    {
        int i0, $i1;
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        boolean z0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        $i1 = virtualinvoke r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int getRule()>();

        if $i1 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static int lambda$getMatchingUids$1(android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion)
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        int $i0;

        r0 := @parameter0: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        $i0 = virtualinvoke r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int getIntProp()>();

        return $i0;
    }

    static int lambda$getMatchingUsages$0(android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion)
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        android.media.AudioAttributes $r1;
        int $i0;

        r0 := @parameter0: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        $r1 = virtualinvoke r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes getAudioAttributes()>();

        $i0 = virtualinvoke $r1.<android.media.AudioAttributes: int getUsage()>();

        return $i0;
    }

    android.media.audiopolicy.AudioMix createAudioMix(android.media.AudioFormat)
    {
        android.media.AudioPlaybackCaptureConfiguration r0;
        android.media.AudioFormat r1;
        android.media.audiopolicy.AudioMix$Builder $r2, $r4, $r5;
        android.media.audiopolicy.AudioMixingRule $r3;
        android.media.audiopolicy.AudioMix $r6;

        r0 := @this: android.media.AudioPlaybackCaptureConfiguration;

        r1 := @parameter0: android.media.AudioFormat;

        $r2 = new android.media.audiopolicy.AudioMix$Builder;

        $r3 = r0.<android.media.AudioPlaybackCaptureConfiguration: android.media.audiopolicy.AudioMixingRule mAudioMixingRule>;

        specialinvoke $r2.<android.media.audiopolicy.AudioMix$Builder: void <init>(android.media.audiopolicy.AudioMixingRule)>($r3);

        $r4 = virtualinvoke $r2.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMix$Builder setFormat(android.media.AudioFormat)>(r1);

        $r5 = virtualinvoke $r4.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMix$Builder setRouteFlags(int)>(3);

        $r6 = virtualinvoke $r5.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMix build()>();

        return $r6;
    }

    public int[] getExcludeUids()
    {
        android.media.AudioPlaybackCaptureConfiguration r0;
        android.media.'-$$Lambda$AudioPlaybackCaptureConfiguration$OOmSH4uNi7bw-cxkUNQt_briVbM' $r1;
        int[] $r2;
        java.util.function.ToIntFunction r3;

        r0 := @this: android.media.AudioPlaybackCaptureConfiguration;

        $r1 = <android.media._$$Lambda$AudioPlaybackCaptureConfiguration$OOmSH4uNi7bw_cxkUNQt_briVbM: android.media.'-$$Lambda$AudioPlaybackCaptureConfiguration$OOmSH4uNi7bw-cxkUNQt_briVbM' INSTANCE>;

        r3 = (java.util.function.ToIntFunction) $r1;

        $r2 = specialinvoke r0.<android.media.AudioPlaybackCaptureConfiguration: int[] getIntPredicates(int,java.util.function.ToIntFunction)>(32772, r3);

        return $r2;
    }

    public int[] getExcludeUsages()
    {
        android.media.AudioPlaybackCaptureConfiguration r0;
        android.media.'-$$Lambda$AudioPlaybackCaptureConfiguration$XNNDt4F3y6GuPLTW14ozD51SjGw' $r1;
        int[] $r2;
        java.util.function.ToIntFunction r3;

        r0 := @this: android.media.AudioPlaybackCaptureConfiguration;

        $r1 = <android.media._$$Lambda$AudioPlaybackCaptureConfiguration$XNNDt4F3y6GuPLTW14ozD51SjGw: android.media.'-$$Lambda$AudioPlaybackCaptureConfiguration$XNNDt4F3y6GuPLTW14ozD51SjGw' INSTANCE>;

        r3 = (java.util.function.ToIntFunction) $r1;

        $r2 = specialinvoke r0.<android.media.AudioPlaybackCaptureConfiguration: int[] getIntPredicates(int,java.util.function.ToIntFunction)>(32769, r3);

        return $r2;
    }

    public int[] getMatchingUids()
    {
        android.media.AudioPlaybackCaptureConfiguration r0;
        android.media.'-$$Lambda$AudioPlaybackCaptureConfiguration$lExv8IaPEEDrexk0ZpgJOYug6js' $r1;
        int[] $r2;
        java.util.function.ToIntFunction r3;

        r0 := @this: android.media.AudioPlaybackCaptureConfiguration;

        $r1 = <android.media._$$Lambda$AudioPlaybackCaptureConfiguration$lExv8IaPEEDrexk0ZpgJOYug6js: android.media.'-$$Lambda$AudioPlaybackCaptureConfiguration$lExv8IaPEEDrexk0ZpgJOYug6js' INSTANCE>;

        r3 = (java.util.function.ToIntFunction) $r1;

        $r2 = specialinvoke r0.<android.media.AudioPlaybackCaptureConfiguration: int[] getIntPredicates(int,java.util.function.ToIntFunction)>(4, r3);

        return $r2;
    }

    public int[] getMatchingUsages()
    {
        android.media.AudioPlaybackCaptureConfiguration r0;
        android.media.'-$$Lambda$AudioPlaybackCaptureConfiguration$JTl6zvocylA2c1D_zvOeuHFBuXc' $r1;
        int[] $r2;
        java.util.function.ToIntFunction r3;

        r0 := @this: android.media.AudioPlaybackCaptureConfiguration;

        $r1 = <android.media._$$Lambda$AudioPlaybackCaptureConfiguration$JTl6zvocylA2c1D_zvOeuHFBuXc: android.media.'-$$Lambda$AudioPlaybackCaptureConfiguration$JTl6zvocylA2c1D_zvOeuHFBuXc' INSTANCE>;

        r3 = (java.util.function.ToIntFunction) $r1;

        $r2 = specialinvoke r0.<android.media.AudioPlaybackCaptureConfiguration: int[] getIntPredicates(int,java.util.function.ToIntFunction)>(1, r3);

        return $r2;
    }

    public android.media.projection.MediaProjection getMediaProjection()
    {
        android.media.AudioPlaybackCaptureConfiguration r0;
        android.media.projection.MediaProjection $r1;

        r0 := @this: android.media.AudioPlaybackCaptureConfiguration;

        $r1 = r0.<android.media.AudioPlaybackCaptureConfiguration: android.media.projection.MediaProjection mProjection>;

        return $r1;
    }
}
