final class android.media.AudioPlaybackConfiguration$IPlayerShell extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private volatile android.media.IPlayer mIPlayer;
    final android.media.AudioPlaybackConfiguration mMonitor;

    void <init>(android.media.AudioPlaybackConfiguration, android.media.IPlayer)
    {
        android.media.AudioPlaybackConfiguration$IPlayerShell r0;
        android.media.AudioPlaybackConfiguration r1;
        android.media.IPlayer r2;

        r0 := @this: android.media.AudioPlaybackConfiguration$IPlayerShell;

        r1 := @parameter0: android.media.AudioPlaybackConfiguration;

        r2 := @parameter1: android.media.IPlayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.AudioPlaybackConfiguration mMonitor> = r1;

        r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer mIPlayer> = r2;

        return;
    }

    public void binderDied()
    {
        android.media.AudioPlaybackConfiguration$IPlayerShell r0;
        android.media.AudioPlaybackConfiguration r1;

        r0 := @this: android.media.AudioPlaybackConfiguration$IPlayerShell;

        r1 = r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.AudioPlaybackConfiguration mMonitor>;

        if r1 == null goto label1;

        staticinvoke <android.media.AudioPlaybackConfiguration: void access$300(android.media.AudioPlaybackConfiguration)>(r1);

     label1:
        return;
    }

    android.media.IPlayer getIPlayer()
    {
        android.media.AudioPlaybackConfiguration$IPlayerShell r0;
        android.media.IPlayer $r1;

        r0 := @this: android.media.AudioPlaybackConfiguration$IPlayerShell;

        $r1 = r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer mIPlayer>;

        return $r1;
    }

    void monitorDeath()
    {
        android.media.AudioPlaybackConfiguration$IPlayerShell r0;
        java.lang.String r2, $r8, $r12;
        android.media.IPlayer $r3, r13;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;
        android.media.AudioPlaybackConfiguration $r7, $r10;
        int $i1;
        java.lang.StringBuilder r14;

        r0 := @this: android.media.AudioPlaybackConfiguration$IPlayerShell;

        entermonitor r0;

     label01:
        r13 = r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer mIPlayer>;

     label02:
        if r13 != null goto label03;

        exitmonitor r0;

        return;

     label03:
        $r3 = r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer mIPlayer>;

        $r4 = interfaceinvoke $r3.<android.media.IPlayer: android.os.IBinder asBinder()>();

        interfaceinvoke $r4.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label04:
        goto label09;

     label05:
        $r6 := @caughtexception;

     label06:
        $r7 = r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.AudioPlaybackConfiguration mMonitor>;

        if $r7 == null goto label08;

        r2 = staticinvoke <android.media.AudioPlaybackConfiguration: java.lang.String access$100()>();

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not link to client death for piid=");

        $r10 = r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.AudioPlaybackConfiguration mMonitor>;

        $i1 = staticinvoke <android.media.AudioPlaybackConfiguration: int access$200(android.media.AudioPlaybackConfiguration)>($r10);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r2, $r12, $r6);

     label07:
        goto label09;

     label08:
        $r8 = staticinvoke <android.media.AudioPlaybackConfiguration: java.lang.String access$100()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Could not link to client death", $r6);

     label09:
        exitmonitor r0;

        return;

     label10:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    void release()
    {
        android.media.AudioPlaybackConfiguration$IPlayerShell r0;
        android.media.IPlayer $r1, r4;
        android.os.IBinder $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.media.AudioPlaybackConfiguration$IPlayerShell;

        entermonitor r0;

     label1:
        r4 = r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer mIPlayer>;

     label2:
        if r4 != null goto label3;

        exitmonitor r0;

        return;

     label3:
        $r1 = r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer mIPlayer>;

        $r2 = interfaceinvoke $r1.<android.media.IPlayer: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer mIPlayer> = null;

        staticinvoke <android.os.Binder: void flushPendingCommands()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
