public final class android.media.AudioPlaybackConfiguration extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    public static final int PLAYER_PIID_INVALID;
    public static final int PLAYER_STATE_IDLE;
    public static final int PLAYER_STATE_PAUSED;
    public static final int PLAYER_STATE_RELEASED;
    public static final int PLAYER_STATE_STARTED;
    public static final int PLAYER_STATE_STOPPED;
    public static final int PLAYER_STATE_UNKNOWN;
    public static final int PLAYER_TYPE_AAUDIO;
    public static final int PLAYER_TYPE_EXTERNAL_PROXY;
    public static final int PLAYER_TYPE_HW_SOURCE;
    public static final int PLAYER_TYPE_JAM_AUDIOTRACK;
    public static final int PLAYER_TYPE_JAM_MEDIAPLAYER;
    public static final int PLAYER_TYPE_JAM_SOUNDPOOL;
    public static final int PLAYER_TYPE_SLES_AUDIOPLAYER_BUFFERQUEUE;
    public static final int PLAYER_TYPE_SLES_AUDIOPLAYER_URI_FD;
    public static final int PLAYER_TYPE_UNKNOWN;
    public static final int PLAYER_UPID_INVALID;
    private static final java.lang.String TAG;
    public static android.media.AudioPlaybackConfiguration$PlayerDeathMonitor sPlayerDeathMonitor;
    private int mClientPid;
    private int mClientUid;
    private android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell;
    private android.media.AudioAttributes mPlayerAttr;
    private final int mPlayerIId;
    private int mPlayerState;
    private int mPlayerType;

    static void <clinit>()
    {
        java.lang.String $r0;
        android.media.AudioPlaybackConfiguration$1 $r1;

        <android.media.AudioPlaybackConfiguration: int PLAYER_UPID_INVALID> = -1;

        <android.media.AudioPlaybackConfiguration: int PLAYER_TYPE_UNKNOWN> = -1;

        <android.media.AudioPlaybackConfiguration: int PLAYER_TYPE_SLES_AUDIOPLAYER_URI_FD> = 12;

        <android.media.AudioPlaybackConfiguration: int PLAYER_TYPE_SLES_AUDIOPLAYER_BUFFERQUEUE> = 11;

        <android.media.AudioPlaybackConfiguration: int PLAYER_TYPE_JAM_SOUNDPOOL> = 3;

        <android.media.AudioPlaybackConfiguration: int PLAYER_TYPE_JAM_MEDIAPLAYER> = 2;

        <android.media.AudioPlaybackConfiguration: int PLAYER_TYPE_JAM_AUDIOTRACK> = 1;

        <android.media.AudioPlaybackConfiguration: int PLAYER_TYPE_HW_SOURCE> = 14;

        <android.media.AudioPlaybackConfiguration: int PLAYER_TYPE_EXTERNAL_PROXY> = 15;

        <android.media.AudioPlaybackConfiguration: int PLAYER_TYPE_AAUDIO> = 13;

        <android.media.AudioPlaybackConfiguration: int PLAYER_STATE_UNKNOWN> = -1;

        <android.media.AudioPlaybackConfiguration: int PLAYER_STATE_STOPPED> = 4;

        <android.media.AudioPlaybackConfiguration: int PLAYER_STATE_STARTED> = 2;

        <android.media.AudioPlaybackConfiguration: int PLAYER_STATE_RELEASED> = 0;

        <android.media.AudioPlaybackConfiguration: int PLAYER_STATE_PAUSED> = 3;

        <android.media.AudioPlaybackConfiguration: int PLAYER_STATE_IDLE> = 1;

        <android.media.AudioPlaybackConfiguration: int PLAYER_PIID_INVALID> = -1;

        <android.media.AudioPlaybackConfiguration: boolean DEBUG> = 0;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>("AudioPlaybackConfiguration");

        <android.media.AudioPlaybackConfiguration: java.lang.String TAG> = $r0;

        $r1 = new android.media.AudioPlaybackConfiguration$1;

        specialinvoke $r1.<android.media.AudioPlaybackConfiguration$1: void <init>()>();

        <android.media.AudioPlaybackConfiguration: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    private void <init>(int)
    {
        android.media.AudioPlaybackConfiguration r0;
        int i0;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId> = i0;

        r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell> = null;

        return;
    }

    public void <init>(android.media.PlayerBase$PlayerIdCard, int, int, int)
    {
        android.media.AudioPlaybackConfiguration r0;
        android.media.PlayerBase$PlayerIdCard r1;
        int i0, i1, i2, $i3;
        android.media.AudioAttributes $r2;
        android.media.AudioPlaybackConfiguration$PlayerDeathMonitor $r3;
        android.media.IPlayer $r4, $r6;
        android.media.AudioPlaybackConfiguration$IPlayerShell $r5;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        r1 := @parameter0: android.media.PlayerBase$PlayerIdCard;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId> = i0;

        $i3 = r1.<android.media.PlayerBase$PlayerIdCard: int mPlayerType>;

        r0.<android.media.AudioPlaybackConfiguration: int mPlayerType> = $i3;

        r0.<android.media.AudioPlaybackConfiguration: int mClientUid> = i1;

        r0.<android.media.AudioPlaybackConfiguration: int mClientPid> = i2;

        r0.<android.media.AudioPlaybackConfiguration: int mPlayerState> = 1;

        $r2 = r1.<android.media.PlayerBase$PlayerIdCard: android.media.AudioAttributes mAttributes>;

        r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr> = $r2;

        $r3 = <android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$PlayerDeathMonitor sPlayerDeathMonitor>;

        if $r3 == null goto label1;

        $r4 = r1.<android.media.PlayerBase$PlayerIdCard: android.media.IPlayer mIPlayer>;

        if $r4 == null goto label1;

        $r5 = new android.media.AudioPlaybackConfiguration$IPlayerShell;

        $r6 = r1.<android.media.PlayerBase$PlayerIdCard: android.media.IPlayer mIPlayer>;

        specialinvoke $r5.<android.media.AudioPlaybackConfiguration$IPlayerShell: void <init>(android.media.AudioPlaybackConfiguration,android.media.IPlayer)>(r0, $r6);

        r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell> = $r5;

        goto label2;

     label1:
        r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell> = null;

     label2:
        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.media.AudioPlaybackConfiguration r0;
        android.media.IPlayer r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        android.media.AudioAttributes $r4;
        android.os.IBinder $r5;
        android.media.AudioPlaybackConfiguration$IPlayerShell $r6, r8;
        android.os.Parcel r7;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        r7 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId> = $i0;

        $i1 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        r0.<android.media.AudioPlaybackConfiguration: int mPlayerType> = $i1;

        $i2 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        r0.<android.media.AudioPlaybackConfiguration: int mClientUid> = $i2;

        $i3 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        r0.<android.media.AudioPlaybackConfiguration: int mClientPid> = $i3;

        $i4 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        r0.<android.media.AudioPlaybackConfiguration: int mPlayerState> = $i4;

        $r2 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r7);

        $r4 = (android.media.AudioAttributes) $r3;

        r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr> = $r4;

        $r5 = virtualinvoke r7.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r1 = staticinvoke <android.media.IPlayer$Stub: android.media.IPlayer asInterface(android.os.IBinder)>($r5);

        r8 = null;

        if r1 != null goto label1;

        goto label2;

     label1:
        $r6 = new android.media.AudioPlaybackConfiguration$IPlayerShell;

        specialinvoke $r6.<android.media.AudioPlaybackConfiguration$IPlayerShell: void <init>(android.media.AudioPlaybackConfiguration,android.media.IPlayer)>(null, r1);

        r8 = $r6;

     label2:
        r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell> = r8;

        return;
    }

    void <init>(android.os.Parcel, android.media.AudioPlaybackConfiguration$1)
    {
        android.media.AudioPlaybackConfiguration r0;
        android.os.Parcel r1;
        android.media.AudioPlaybackConfiguration$1 r2;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.media.AudioPlaybackConfiguration$1;

        specialinvoke r0.<android.media.AudioPlaybackConfiguration: void <init>(android.os.Parcel)>(r1);

        return;
    }

    static java.lang.String access$100()
    {
        java.lang.String $r0;

        $r0 = <android.media.AudioPlaybackConfiguration: java.lang.String TAG>;

        return $r0;
    }

    static int access$200(android.media.AudioPlaybackConfiguration)
    {
        android.media.AudioPlaybackConfiguration r0;
        int $i0;

        r0 := @parameter0: android.media.AudioPlaybackConfiguration;

        $i0 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId>;

        return $i0;
    }

    static void access$300(android.media.AudioPlaybackConfiguration)
    {
        android.media.AudioPlaybackConfiguration r0;

        r0 := @parameter0: android.media.AudioPlaybackConfiguration;

        specialinvoke r0.<android.media.AudioPlaybackConfiguration: void playerDied()>();

        return;
    }

    public static android.media.AudioPlaybackConfiguration anonymizedCopy(android.media.AudioPlaybackConfiguration)
    {
        android.media.AudioPlaybackConfiguration r0, $r3;
        android.media.AudioAttributes$Builder r2, $r4, $r6, $r8, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.media.AudioAttributes $r5, $r7, $r9, $r10, $r12;
        byte b6;

        r0 := @parameter0: android.media.AudioPlaybackConfiguration;

        $r3 = new android.media.AudioPlaybackConfiguration;

        $i1 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId>;

        specialinvoke $r3.<android.media.AudioPlaybackConfiguration: void <init>(int)>($i1);

        $i2 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerState>;

        $r3.<android.media.AudioPlaybackConfiguration: int mPlayerState> = $i2;

        $r4 = new android.media.AudioAttributes$Builder;

        specialinvoke $r4.<android.media.AudioAttributes$Builder: void <init>()>();

        $r5 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr>;

        $i3 = virtualinvoke $r5.<android.media.AudioAttributes: int getUsage()>();

        $r6 = virtualinvoke $r4.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>($i3);

        $r7 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr>;

        $i4 = virtualinvoke $r7.<android.media.AudioAttributes: int getContentType()>();

        $r8 = virtualinvoke $r6.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>($i4);

        $r9 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr>;

        $i5 = virtualinvoke $r9.<android.media.AudioAttributes: int getFlags()>();

        r2 = virtualinvoke $r8.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setFlags(int)>($i5);

        $r10 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr>;

        i0 = virtualinvoke $r10.<android.media.AudioAttributes: int getAllowedCapturePolicy()>();

        b6 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        b6 = 3;

     label2:
        $r11 = virtualinvoke r2.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setAllowedCapturePolicy(int)>(b6);

        $r12 = virtualinvoke $r11.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        $r3.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr> = $r12;

        $r3.<android.media.AudioPlaybackConfiguration: int mPlayerType> = -1;

        $r3.<android.media.AudioPlaybackConfiguration: int mClientUid> = -1;

        $r3.<android.media.AudioPlaybackConfiguration: int mClientPid> = -1;

        $r3.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell> = null;

        return $r3;
    }

    private void playerDied()
    {
        android.media.AudioPlaybackConfiguration r0;
        android.media.AudioPlaybackConfiguration$PlayerDeathMonitor r1;
        int $i0;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        r1 = <android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$PlayerDeathMonitor sPlayerDeathMonitor>;

        if r1 == null goto label1;

        $i0 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId>;

        interfaceinvoke r1.<android.media.AudioPlaybackConfiguration$PlayerDeathMonitor: void playerDeath(int)>($i0);

     label1:
        return;
    }

    public static java.lang.String toLogFriendlyPlayerState(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == -1 goto label6;

        if i0 == 0 goto label5;

        if i0 == 1 goto label4;

        if i0 == 2 goto label3;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        return "unknown player state - FIXME";

     label1:
        return "stopped";

     label2:
        return "paused";

     label3:
        return "started";

     label4:
        return "idle";

     label5:
        return "released";

     label6:
        return "unknown";
    }

    public static java.lang.String toLogFriendlyPlayerType(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == -1 goto label10;

        if i0 == 1 goto label09;

        if i0 == 2 goto label08;

        if i0 == 3 goto label07;

        tableswitch(i0)
        {
            case 11: goto label06;
            case 12: goto label05;
            case 13: goto label04;
            case 14: goto label03;
            case 15: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown player type ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - FIXME");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label02:
        return "external proxy";

     label03:
        return "hardware source";

     label04:
        return "AAudio";

     label05:
        return "OpenSL ES AudioPlayer (URI/FD)";

     label06:
        return "OpenSL ES AudioPlayer (Buffer Queue)";

     label07:
        return "android.media.SoundPool";

     label08:
        return "android.media.MediaPlayer";

     label09:
        return "android.media.AudioTrack";

     label10:
        return "unknown";
    }

    public int describeContents()
    {
        android.media.AudioPlaybackConfiguration r0;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        return 0;
    }

    public void dump(java.io.PrintWriter)
    {
        android.media.AudioPlaybackConfiguration r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        r1 := @parameter0: java.io.PrintWriter;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.media.AudioPlaybackConfiguration r0, r2;
        boolean $z0, z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object r1;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        r1 := @parameter0: java.lang.Object;

        z1 = 1;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label5;

        $z0 = r1 instanceof android.media.AudioPlaybackConfiguration;

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        r2 = (android.media.AudioPlaybackConfiguration) r1;

        $i1 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId>;

        $i0 = r2.<android.media.AudioPlaybackConfiguration: int mPlayerIId>;

        if $i1 != $i0 goto label3;

        $i3 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerType>;

        $i2 = r2.<android.media.AudioPlaybackConfiguration: int mPlayerType>;

        if $i3 != $i2 goto label3;

        $i5 = r0.<android.media.AudioPlaybackConfiguration: int mClientUid>;

        $i4 = r2.<android.media.AudioPlaybackConfiguration: int mClientUid>;

        if $i5 != $i4 goto label3;

        $i7 = r0.<android.media.AudioPlaybackConfiguration: int mClientPid>;

        $i6 = r2.<android.media.AudioPlaybackConfiguration: int mClientPid>;

        if $i7 != $i6 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 0;
    }

    public android.media.AudioAttributes getAudioAttributes()
    {
        android.media.AudioPlaybackConfiguration r0;
        android.media.AudioAttributes $r1;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        $r1 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr>;

        return $r1;
    }

    public int getClientPid()
    {
        android.media.AudioPlaybackConfiguration r0;
        int $i0;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        $i0 = r0.<android.media.AudioPlaybackConfiguration: int mClientPid>;

        return $i0;
    }

    public int getClientUid()
    {
        android.media.AudioPlaybackConfiguration r0;
        int $i0;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        $i0 = r0.<android.media.AudioPlaybackConfiguration: int mClientUid>;

        return $i0;
    }

    android.media.IPlayer getIPlayer()
    {
        android.media.AudioPlaybackConfiguration r0;
        java.lang.Throwable $r1;
        android.media.AudioPlaybackConfiguration$IPlayerShell r2;
        android.media.IPlayer r3;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        entermonitor r0;

     label1:
        r2 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell>;

        exitmonitor r0;

     label2:
        if r2 != null goto label3;

        r3 = null;

        goto label4;

     label3:
        r3 = virtualinvoke r2.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer getIPlayer()>();

     label4:
        return r3;

     label5:
        $r1 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getPlayerInterfaceId()
    {
        android.media.AudioPlaybackConfiguration r0;
        int $i0;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        $i0 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId>;

        return $i0;
    }

    public android.media.PlayerProxy getPlayerProxy()
    {
        android.media.AudioPlaybackConfiguration r0;
        android.media.PlayerProxy $r1, r4;
        java.lang.Throwable $r2;
        android.media.AudioPlaybackConfiguration$IPlayerShell r3;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        entermonitor r0;

     label1:
        r3 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell>;

        exitmonitor r0;

     label2:
        if r3 != null goto label3;

        r4 = null;

        goto label4;

     label3:
        $r1 = new android.media.PlayerProxy;

        specialinvoke $r1.<android.media.PlayerProxy: void <init>(android.media.AudioPlaybackConfiguration)>(r0);

        r4 = $r1;

     label4:
        return r4;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getPlayerState()
    {
        android.media.AudioPlaybackConfiguration r0;
        int $i0;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        $i0 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerState>;

        return $i0;
    }

    public int getPlayerType()
    {
        android.media.AudioPlaybackConfiguration r0;
        int i0;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        i0 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerType>;

        tableswitch(i0)
        {
            case 13: goto label2;
            case 14: goto label2;
            case 15: goto label2;
            default: goto label1;
        };

     label1:
        return i0;

     label2:
        return -1;
    }

    public boolean handleAudioAttributesEvent(android.media.AudioAttributes)
    {
        android.media.AudioPlaybackConfiguration r0;
        android.media.AudioAttributes r1, $r2;
        boolean z0, $z1;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        r1 := @parameter0: android.media.AudioAttributes;

        $r2 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr>;

        z0 = virtualinvoke r1.<android.media.AudioAttributes: boolean equals(java.lang.Object)>($r2);

        r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr> = r1;

        $z1 = z0 ^ 1;

        return $z1;
    }

    public boolean handleStateEvent(int)
    {
        android.media.AudioPlaybackConfiguration r0;
        int i0, $i1;
        android.media.AudioPlaybackConfiguration$IPlayerShell $r2, $r3;
        java.lang.Throwable $r4;
        boolean z0;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        $i1 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerState>;

        if $i1 == i0 goto label03;

     label02:
        z0 = 1;

        goto label04;

     label03:
        z0 = 0;

     label04:
        r0.<android.media.AudioPlaybackConfiguration: int mPlayerState> = i0;

     label05:
        if z0 == 0 goto label07;

        if i0 != 0 goto label07;

     label06:
        $r2 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell>;

        if $r2 == null goto label07;

        $r3 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell>;

        virtualinvoke $r3.<android.media.AudioPlaybackConfiguration$IPlayerShell: void release()>();

        r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell> = null;

     label07:
        exitmonitor r0;

     label08:
        return z0;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public int hashCode()
    {
        android.media.AudioPlaybackConfiguration r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r2, $r3, $r4, $r5;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        $r1 = newarray (java.lang.Object)[4];

        $i0 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $i1 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerType>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $i2 = r0.<android.media.AudioPlaybackConfiguration: int mClientUid>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r4;

        $i3 = r0.<android.media.AudioPlaybackConfiguration: int mClientPid>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[3] = $r5;

        $i4 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i4;
    }

    public void init()
    {
        android.media.AudioPlaybackConfiguration r0;
        android.media.AudioPlaybackConfiguration$IPlayerShell $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        entermonitor r0;

     label1:
        $r2 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell>;

        if $r2 == null goto label2;

        $r3 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell>;

        virtualinvoke $r3.<android.media.AudioPlaybackConfiguration$IPlayerShell: void monitorDeath()>();

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean isActive()
    {
        android.media.AudioPlaybackConfiguration r0;
        int $i0;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        $i0 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerState>;

        if $i0 == 2 goto label1;

        return 0;

     label1:
        return 1;
    }

    public java.lang.String toString()
    {
        android.media.AudioPlaybackConfiguration r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r6, $r13, $r18;
        android.media.AudioAttributes $r16;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioPlaybackConfiguration piid:");

        $i0 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type:");

        $i1 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerType>;

        $r6 = staticinvoke <android.media.AudioPlaybackConfiguration: java.lang.String toLogFriendlyPlayerType(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u/pid:");

        $i2 = r0.<android.media.AudioPlaybackConfiguration: int mClientUid>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i3 = r0.<android.media.AudioPlaybackConfiguration: int mClientPid>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state:");

        $i4 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerState>;

        $r13 = staticinvoke <android.media.AudioPlaybackConfiguration: java.lang.String toLogFriendlyPlayerState(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attr:");

        $r16 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.media.AudioPlaybackConfiguration r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.media.AudioAttributes $r1;
        java.lang.Throwable $r2;
        android.os.Parcel r3;
        android.media.AudioPlaybackConfiguration$IPlayerShell r4;
        android.media.IPlayer r5;

        r0 := @this: android.media.AudioPlaybackConfiguration;

        r3 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerIId>;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerType>;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.media.AudioPlaybackConfiguration: int mClientUid>;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.media.AudioPlaybackConfiguration: int mClientPid>;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.media.AudioPlaybackConfiguration: int mPlayerState>;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($i5);

        $r1 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioAttributes mPlayerAttr>;

        virtualinvoke $r1.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        entermonitor r0;

     label1:
        r4 = r0.<android.media.AudioPlaybackConfiguration: android.media.AudioPlaybackConfiguration$IPlayerShell mIPlayerShell>;

        exitmonitor r0;

     label2:
        if r4 != null goto label3;

        r5 = null;

        goto label4;

     label3:
        r5 = virtualinvoke r4.<android.media.AudioPlaybackConfiguration$IPlayerShell: android.media.IPlayer getIPlayer()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r5);

        return;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
