class android.media.AudioPortEventHandler extends java.lang.Object
{
    private static final int AUDIOPORT_EVENT_NEW_LISTENER;
    private static final int AUDIOPORT_EVENT_PATCH_LIST_UPDATED;
    private static final int AUDIOPORT_EVENT_PORT_LIST_UPDATED;
    private static final int AUDIOPORT_EVENT_SERVICE_DIED;
    private static final long RESCHEDULE_MESSAGE_DELAY_MS;
    private static final java.lang.String TAG;
    private android.os.Handler mHandler;
    private android.os.HandlerThread mHandlerThread;
    private long mJniCallback;
    private final java.util.ArrayList mListeners;
    private final java.lang.Object mLock;

    void <init>()
    {
        android.media.AudioPortEventHandler r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.media.AudioPortEventHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioPortEventHandler: java.lang.Object mLock> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.media.AudioPortEventHandler: java.util.ArrayList mListeners> = $r2;

        return;
    }

    static java.lang.Object access$000(android.media.AudioPortEventHandler)
    {
        android.media.AudioPortEventHandler r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.AudioPortEventHandler;

        $r1 = r0.<android.media.AudioPortEventHandler: java.lang.Object mLock>;

        return $r1;
    }

    static java.util.ArrayList access$100(android.media.AudioPortEventHandler)
    {
        android.media.AudioPortEventHandler r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.media.AudioPortEventHandler;

        $r1 = r0.<android.media.AudioPortEventHandler: java.util.ArrayList mListeners>;

        return $r1;
    }

    private native void native_finalize();

    private native void native_setup(java.lang.Object);

    private static void postEventFromNative(java.lang.Object, int, int, int, java.lang.Object)
    {
        int i0, i1, i2;
        java.lang.ref.WeakReference $r0;
        java.lang.Object $r1, r2, r3;
        android.media.AudioPortEventHandler r4;
        android.os.Handler r5;
        android.os.Message r6;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r3 := @parameter4: java.lang.Object;

        $r0 = (java.lang.ref.WeakReference) r2;

        $r1 = virtualinvoke $r0.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.media.AudioPortEventHandler) $r1;

        if r4 != null goto label1;

        return;

     label1:
        if r4 == null goto label3;

        r5 = virtualinvoke r4.<android.media.AudioPortEventHandler: android.os.Handler handler()>();

        if r5 == null goto label3;

        r6 = virtualinvoke r5.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r3);

        if i0 == 4 goto label2;

        virtualinvoke r5.<android.os.Handler: void removeMessages(int)>(i0);

     label2:
        virtualinvoke r5.<android.os.Handler: boolean sendMessage(android.os.Message)>(r6);

     label3:
        return;
    }

    protected void finalize()
    {
        android.media.AudioPortEventHandler r0;
        android.os.HandlerThread $r1, $r2;
        boolean $z0;

        r0 := @this: android.media.AudioPortEventHandler;

        specialinvoke r0.<android.media.AudioPortEventHandler: void native_finalize()>();

        $r1 = r0.<android.media.AudioPortEventHandler: android.os.HandlerThread mHandlerThread>;

        $z0 = virtualinvoke $r1.<android.os.HandlerThread: boolean isAlive()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.media.AudioPortEventHandler: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r2.<android.os.HandlerThread: boolean quit()>();

     label1:
        return;
    }

    android.os.Handler handler()
    {
        android.media.AudioPortEventHandler r0;
        android.os.Handler $r1;

        r0 := @this: android.media.AudioPortEventHandler;

        $r1 = r0.<android.media.AudioPortEventHandler: android.os.Handler mHandler>;

        return $r1;
    }

    void init()
    {
        android.media.AudioPortEventHandler r0;
        java.lang.Object r1;
        android.os.Handler $r2;
        android.os.HandlerThread $r3, $r5, r8;
        android.os.Looper $r4, $r6;
        java.lang.Throwable $r7;
        android.media.AudioPortEventHandler$1 r9;
        java.lang.ref.WeakReference r10;

        r0 := @this: android.media.AudioPortEventHandler;

        r1 = r0.<android.media.AudioPortEventHandler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.media.AudioPortEventHandler: android.os.Handler mHandler>;

        if $r2 == null goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r8 = new android.os.HandlerThread;

        specialinvoke r8.<android.os.HandlerThread: void <init>(java.lang.String)>("AudioPortEventHandler");

        r0.<android.media.AudioPortEventHandler: android.os.HandlerThread mHandlerThread> = r8;

        virtualinvoke r8.<android.os.HandlerThread: void start()>();

        $r3 = r0.<android.media.AudioPortEventHandler: android.os.HandlerThread mHandlerThread>;

        $r4 = virtualinvoke $r3.<android.os.HandlerThread: android.os.Looper getLooper()>();

        if $r4 == null goto label05;

        r9 = new android.media.AudioPortEventHandler$1;

        $r5 = r0.<android.media.AudioPortEventHandler: android.os.HandlerThread mHandlerThread>;

        $r6 = virtualinvoke $r5.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke r9.<android.media.AudioPortEventHandler$1: void <init>(android.media.AudioPortEventHandler,android.os.Looper)>(r0, $r6);

        r0.<android.media.AudioPortEventHandler: android.os.Handler mHandler> = r9;

        r10 = new java.lang.ref.WeakReference;

        specialinvoke r10.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke r0.<android.media.AudioPortEventHandler: void native_setup(java.lang.Object)>(r10);

     label04:
        goto label06;

     label05:
        r0.<android.media.AudioPortEventHandler: android.os.Handler mHandler> = null;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void registerListener(android.media.AudioManager$OnAudioPortUpdateListener)
    {
        android.media.AudioPortEventHandler r0;
        java.util.ArrayList $r1;
        android.os.Handler $r2, r6;
        java.lang.Throwable $r3;
        android.media.AudioManager$OnAudioPortUpdateListener r4;
        java.lang.Object r5;
        android.os.Message r7;

        r0 := @this: android.media.AudioPortEventHandler;

        r4 := @parameter0: android.media.AudioManager$OnAudioPortUpdateListener;

        r5 = r0.<android.media.AudioPortEventHandler: java.lang.Object mLock>;

        entermonitor r5;

     label1:
        $r1 = r0.<android.media.AudioPortEventHandler: java.util.ArrayList mListeners>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        exitmonitor r5;

     label2:
        r6 = r0.<android.media.AudioPortEventHandler: android.os.Handler mHandler>;

        if r6 == null goto label3;

        r7 = virtualinvoke r6.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(4, 0, 0, r4);

        $r2 = r0.<android.media.AudioPortEventHandler: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>(r7);

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r5;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void unregisterListener(android.media.AudioManager$OnAudioPortUpdateListener)
    {
        android.media.AudioPortEventHandler r0;
        java.lang.Object r1;
        java.util.ArrayList $r2;
        java.lang.Throwable $r3;
        android.media.AudioManager$OnAudioPortUpdateListener r4;

        r0 := @this: android.media.AudioPortEventHandler;

        r4 := @parameter0: android.media.AudioManager$OnAudioPortUpdateListener;

        r1 = r0.<android.media.AudioPortEventHandler: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.AudioPortEventHandler: java.util.ArrayList mListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <android.media.AudioPortEventHandler: java.lang.String TAG> = "AudioPortEventHandler";

        <android.media.AudioPortEventHandler: long RESCHEDULE_MESSAGE_DELAY_MS> = 100L;

        <android.media.AudioPortEventHandler: int AUDIOPORT_EVENT_SERVICE_DIED> = 3;

        <android.media.AudioPortEventHandler: int AUDIOPORT_EVENT_PORT_LIST_UPDATED> = 1;

        <android.media.AudioPortEventHandler: int AUDIOPORT_EVENT_PATCH_LIST_UPDATED> = 2;

        <android.media.AudioPortEventHandler: int AUDIOPORT_EVENT_NEW_LISTENER> = 4;

        return;
    }
}
