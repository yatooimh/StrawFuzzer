class android.media.AudioRecord$NativeEventHandler extends android.os.Handler
{
    private final android.media.AudioRecord mAudioRecord;
    final android.media.AudioRecord this$0;

    void <init>(android.media.AudioRecord, android.media.AudioRecord, android.os.Looper)
    {
        android.media.AudioRecord$NativeEventHandler r0;
        android.media.AudioRecord r1, r2;
        android.os.Looper r3;

        r0 := @this: android.media.AudioRecord$NativeEventHandler;

        r1 := @parameter0: android.media.AudioRecord;

        r2 := @parameter1: android.media.AudioRecord;

        r3 := @parameter2: android.os.Looper;

        r0.<android.media.AudioRecord$NativeEventHandler: android.media.AudioRecord this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r3);

        r0.<android.media.AudioRecord$NativeEventHandler: android.media.AudioRecord mAudioRecord> = r2;

        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.media.AudioRecord$NativeEventHandler r0;
        android.media.AudioRecord$OnRecordPositionUpdateListener r1;
        int i0, $i1;
        android.media.AudioRecord $r2, $r3, $r4, $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;
        java.lang.Throwable $r10;
        android.os.Message r11;
        java.lang.Object r12;

        r0 := @this: android.media.AudioRecord$NativeEventHandler;

        r11 := @parameter0: android.os.Message;

        $r2 = r0.<android.media.AudioRecord$NativeEventHandler: android.media.AudioRecord this$0>;

        r12 = staticinvoke <android.media.AudioRecord: java.lang.Object access$100(android.media.AudioRecord)>($r2);

        entermonitor r12;

     label1:
        $r3 = r0.<android.media.AudioRecord$NativeEventHandler: android.media.AudioRecord mAudioRecord>;

        r1 = staticinvoke <android.media.AudioRecord: android.media.AudioRecord$OnRecordPositionUpdateListener access$200(android.media.AudioRecord)>($r3);

        exitmonitor r12;

     label2:
        i0 = r11.<android.os.Message: int what>;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown native event type: ");

        $i1 = r11.<android.os.Message: int what>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.media.AudioRecord: void access$300(java.lang.String)>($r9);

        goto label5;

     label3:
        if r1 == null goto label5;

        $r5 = r0.<android.media.AudioRecord$NativeEventHandler: android.media.AudioRecord mAudioRecord>;

        interfaceinvoke r1.<android.media.AudioRecord$OnRecordPositionUpdateListener: void onPeriodicNotification(android.media.AudioRecord)>($r5);

        goto label5;

     label4:
        if r1 == null goto label5;

        $r4 = r0.<android.media.AudioRecord$NativeEventHandler: android.media.AudioRecord mAudioRecord>;

        interfaceinvoke r1.<android.media.AudioRecord$OnRecordPositionUpdateListener: void onMarkerReached(android.media.AudioRecord)>($r4);

     label5:
        return;

     label6:
        $r10 := @caughtexception;

     label7:
        exitmonitor r12;

     label8:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
