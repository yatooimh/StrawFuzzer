public class android.media.AudioTrack$Builder extends java.lang.Object
{
    private android.media.AudioAttributes mAttributes;
    private int mBufferSizeInBytes;
    private int mEncapsulationMode;
    private android.media.AudioFormat mFormat;
    private int mMode;
    private boolean mOffload;
    private int mPerformanceMode;
    private int mSessionId;
    private android.media.AudioTrack$TunerConfiguration mTunerConfiguration;

    public void <init>()
    {
        android.media.AudioTrack$Builder r0;

        r0 := @this: android.media.AudioTrack$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioTrack$Builder: int mEncapsulationMode> = 0;

        r0.<android.media.AudioTrack$Builder: int mSessionId> = 0;

        r0.<android.media.AudioTrack$Builder: int mMode> = 1;

        r0.<android.media.AudioTrack$Builder: int mPerformanceMode> = 0;

        r0.<android.media.AudioTrack$Builder: boolean mOffload> = 0;

        return;
    }

    public android.media.AudioTrack build() throws java.lang.UnsupportedOperationException
    {
        android.media.AudioTrack$Builder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        android.media.AudioAttributes $r1, $r3, $r5, $r6, $r8, $r12, $r20, $r21, $r23, $r26, $r32;
        android.media.AudioFormat $r2, $r9, $r10, $r13, $r18, $r30, $r33;
        boolean $z0, $z1, $z2, $z3;
        android.media.AudioAttributes$Builder $r7, $r22, $r25, r37, r38, r39;
        android.media.AudioFormat$Builder $r16, $r17, r40;
        java.lang.Throwable $r27;
        java.lang.String $r29;
        android.media.AudioTrack$TunerConfiguration $r34;
        java.lang.UnsupportedOperationException r41, r42, r44, r45;
        android.media.AudioTrack r43;
        java.lang.IllegalArgumentException r46;

        r0 := @this: android.media.AudioTrack$Builder;

        $r1 = r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes>;

        if $r1 != null goto label01;

        r37 = new android.media.AudioAttributes$Builder;

        specialinvoke r37.<android.media.AudioAttributes$Builder: void <init>()>();

        $r25 = virtualinvoke r37.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(1);

        $r26 = virtualinvoke $r25.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes> = $r26;

     label01:
        i0 = r0.<android.media.AudioTrack$Builder: int mPerformanceMode>;

        if i0 == 0 goto label03;

        if i0 == 1 goto label02;

        if i0 == 2 goto label04;

        goto label05;

     label02:
        r38 = new android.media.AudioAttributes$Builder;

        $r20 = r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes>;

        specialinvoke r38.<android.media.AudioAttributes$Builder: void <init>(android.media.AudioAttributes)>($r20);

        $r21 = r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes>;

        $i13 = virtualinvoke $r21.<android.media.AudioAttributes: int getAllFlags()>();

        $i14 = $i13 | 256;

        $i15 = $i14 & -513;

        $r22 = virtualinvoke r38.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder replaceFlags(int)>($i15);

        $r23 = virtualinvoke $r22.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes> = $r23;

        goto label05;

     label03:
        $r3 = r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes>;

        $r2 = r0.<android.media.AudioTrack$Builder: android.media.AudioFormat mFormat>;

        $i2 = r0.<android.media.AudioTrack$Builder: int mBufferSizeInBytes>;

        $i1 = r0.<android.media.AudioTrack$Builder: int mMode>;

        $z0 = staticinvoke <android.media.AudioTrack: boolean access$000(android.media.AudioAttributes,android.media.AudioFormat,int,int)>($r3, $r2, $i2, $i1);

        if $z0 != 0 goto label04;

        goto label05;

     label04:
        r39 = new android.media.AudioAttributes$Builder;

        $r5 = r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes>;

        specialinvoke r39.<android.media.AudioAttributes$Builder: void <init>(android.media.AudioAttributes)>($r5);

        $r6 = r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes>;

        $i3 = virtualinvoke $r6.<android.media.AudioAttributes: int getAllFlags()>();

        $i4 = $i3 | 512;

        $i5 = $i4 & -257;

        $r7 = virtualinvoke r39.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder replaceFlags(int)>($i5);

        $r8 = virtualinvoke $r7.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes> = $r8;

     label05:
        $r30 = r0.<android.media.AudioTrack$Builder: android.media.AudioFormat mFormat>;

        if $r30 != null goto label06;

        r40 = new android.media.AudioFormat$Builder;

        specialinvoke r40.<android.media.AudioFormat$Builder: void <init>()>();

        $r16 = virtualinvoke r40.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setChannelMask(int)>(12);

        $r17 = virtualinvoke $r16.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setEncoding(int)>(1);

        $r18 = virtualinvoke $r17.<android.media.AudioFormat$Builder: android.media.AudioFormat build()>();

        r0.<android.media.AudioTrack$Builder: android.media.AudioFormat mFormat> = $r18;

     label06:
        $z1 = r0.<android.media.AudioTrack$Builder: boolean mOffload>;

        if $z1 == 0 goto label09;

        $i12 = r0.<android.media.AudioTrack$Builder: int mPerformanceMode>;

        if $i12 == 1 goto label08;

        $r13 = r0.<android.media.AudioTrack$Builder: android.media.AudioFormat mFormat>;

        $r12 = r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes>;

        $z2 = staticinvoke <android.media.AudioSystem: boolean isOffloadSupported(android.media.AudioFormat,android.media.AudioAttributes)>($r13, $r12);

        if $z2 == 0 goto label07;

        goto label09;

     label07:
        r41 = new java.lang.UnsupportedOperationException;

        specialinvoke r41.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot create AudioTrack, offload format / attributes not supported");

        throw r41;

     label08:
        r42 = new java.lang.UnsupportedOperationException;

        specialinvoke r42.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Offload and low latency modes are incompatible");

        throw r42;

     label09:
        $i6 = r0.<android.media.AudioTrack$Builder: int mMode>;

        if $i6 != 1 goto label10;

        $i7 = r0.<android.media.AudioTrack$Builder: int mBufferSizeInBytes>;

        if $i7 != 0 goto label10;

        $r9 = r0.<android.media.AudioTrack$Builder: android.media.AudioFormat mFormat>;

        $i8 = virtualinvoke $r9.<android.media.AudioFormat: int getChannelCount()>();

        $r10 = r0.<android.media.AudioTrack$Builder: android.media.AudioFormat mFormat>;

        $i9 = virtualinvoke $r10.<android.media.AudioFormat: int getEncoding()>();

        $i10 = staticinvoke <android.media.AudioFormat: int getBytesPerSample(int)>($i9);

        $i11 = $i8 * $i10;

        r0.<android.media.AudioTrack$Builder: int mBufferSizeInBytes> = $i11;

     label10:
        r43 = new android.media.AudioTrack;

        $r32 = r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes>;

        $r33 = r0.<android.media.AudioTrack$Builder: android.media.AudioFormat mFormat>;

        $i16 = r0.<android.media.AudioTrack$Builder: int mBufferSizeInBytes>;

        $i17 = r0.<android.media.AudioTrack$Builder: int mMode>;

        $i18 = r0.<android.media.AudioTrack$Builder: int mSessionId>;

        $z3 = r0.<android.media.AudioTrack$Builder: boolean mOffload>;

        $i19 = r0.<android.media.AudioTrack$Builder: int mEncapsulationMode>;

        $r34 = r0.<android.media.AudioTrack$Builder: android.media.AudioTrack$TunerConfiguration mTunerConfiguration>;

        specialinvoke r43.<android.media.AudioTrack: void <init>(android.media.AudioAttributes,android.media.AudioFormat,int,int,int,boolean,int,android.media.AudioTrack$TunerConfiguration,android.media.AudioTrack$1)>($r32, $r33, $i16, $i17, $i18, $z3, $i19, $r34, null);

        $i20 = virtualinvoke r43.<android.media.AudioTrack: int getState()>();

        if $i20 == 0 goto label12;

     label11:
        return r43;

     label12:
        r44 = new java.lang.UnsupportedOperationException;

        specialinvoke r44.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot create AudioTrack");

        throw r44;

     label13:
        $r27 := @caughtexception;

        r45 = new java.lang.UnsupportedOperationException;

        r46 = (java.lang.IllegalArgumentException) $r27;

        $r29 = virtualinvoke r46.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke r45.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r29);

        throw r45;

        catch java.lang.IllegalArgumentException from label09 to label10 with label13;
        catch java.lang.IllegalArgumentException from label10 to label11 with label13;
        catch java.lang.IllegalArgumentException from label12 to label13 with label13;
    }

    public android.media.AudioTrack$Builder setAudioAttributes(android.media.AudioAttributes) throws java.lang.IllegalArgumentException
    {
        android.media.AudioTrack$Builder r0;
        android.media.AudioAttributes r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.media.AudioTrack$Builder;

        r1 := @parameter0: android.media.AudioAttributes;

        if r1 == null goto label1;

        r0.<android.media.AudioTrack$Builder: android.media.AudioAttributes mAttributes> = r1;

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null AudioAttributes argument");

        throw $r2;
    }

    public android.media.AudioTrack$Builder setAudioFormat(android.media.AudioFormat) throws java.lang.IllegalArgumentException
    {
        android.media.AudioTrack$Builder r0;
        android.media.AudioFormat r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.media.AudioTrack$Builder;

        r1 := @parameter0: android.media.AudioFormat;

        if r1 == null goto label1;

        r0.<android.media.AudioTrack$Builder: android.media.AudioFormat mFormat> = r1;

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null AudioFormat argument");

        throw $r2;
    }

    public android.media.AudioTrack$Builder setBufferSizeInBytes(int) throws java.lang.IllegalArgumentException
    {
        android.media.AudioTrack$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioTrack$Builder;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        r0.<android.media.AudioTrack$Builder: int mBufferSizeInBytes> = i0;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid buffer size ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.media.AudioTrack$Builder setEncapsulationMode(int)
    {
        android.media.AudioTrack$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioTrack$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid encapsulation mode ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        r0.<android.media.AudioTrack$Builder: int mEncapsulationMode> = i0;

        return r0;
    }

    public android.media.AudioTrack$Builder setOffloadedPlayback(boolean)
    {
        android.media.AudioTrack$Builder r0;
        boolean z0;

        r0 := @this: android.media.AudioTrack$Builder;

        z0 := @parameter0: boolean;

        r0.<android.media.AudioTrack$Builder: boolean mOffload> = z0;

        return r0;
    }

    public android.media.AudioTrack$Builder setPerformanceMode(int)
    {
        android.media.AudioTrack$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioTrack$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid performance mode ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        r0.<android.media.AudioTrack$Builder: int mPerformanceMode> = i0;

        return r0;
    }

    public android.media.AudioTrack$Builder setSessionId(int) throws java.lang.IllegalArgumentException
    {
        android.media.AudioTrack$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioTrack$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 < 1 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid audio session ID ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        r0.<android.media.AudioTrack$Builder: int mSessionId> = i0;

        return r0;
    }

    public android.media.AudioTrack$Builder setTransferMode(int) throws java.lang.IllegalArgumentException
    {
        android.media.AudioTrack$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: android.media.AudioTrack$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transfer mode ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        r0.<android.media.AudioTrack$Builder: int mMode> = i0;

        return r0;
    }

    public android.media.AudioTrack$Builder setTunerConfiguration(android.media.AudioTrack$TunerConfiguration)
    {
        android.media.AudioTrack$Builder r0;
        android.media.AudioTrack$TunerConfiguration r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.media.AudioTrack$Builder;

        r1 := @parameter0: android.media.AudioTrack$TunerConfiguration;

        if r1 == null goto label1;

        r0.<android.media.AudioTrack$Builder: android.media.AudioTrack$TunerConfiguration mTunerConfiguration> = r1;

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("tunerConfiguration is null");

        throw $r2;
    }
}
