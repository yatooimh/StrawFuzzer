class android.media.Cea608CCWidget$CCLineBox extends android.widget.TextView
{
    private static final float EDGE_OUTLINE_RATIO;
    private static final float EDGE_SHADOW_RATIO;
    private static final float FONT_PADDING_RATIO;
    private int mBgColor;
    private int mEdgeColor;
    private int mEdgeType;
    private float mOutlineWidth;
    private float mShadowOffset;
    private float mShadowRadius;
    private int mTextColor;

    void <init>(android.content.Context)
    {
        android.media.Cea608CCWidget$CCLineBox r0;
        android.graphics.Typeface $r1;
        android.content.Context $r2, r3;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2;
        android.content.res.Resources r4;

        r0 := @this: android.media.Cea608CCWidget$CCLineBox;

        r3 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context)>(r3);

        r0.<android.media.Cea608CCWidget$CCLineBox: int mTextColor> = -1;

        r0.<android.media.Cea608CCWidget$CCLineBox: int mBgColor> = -16777216;

        r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeType> = 0;

        r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeColor> = 0;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setGravity(int)>(17);

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setBackgroundColor(int)>(0);

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setTextColor(int)>(-1);

        $r1 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setTypeface(android.graphics.Typeface)>($r1);

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setVisibility(int)>(4);

        $r2 = virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: android.content.Context getContext()>();

        r4 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105486);

        $f0 = (float) $i0;

        r0.<android.media.Cea608CCWidget$CCLineBox: float mOutlineWidth> = $f0;

        $i1 = virtualinvoke r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105488);

        $f1 = (float) $i1;

        r0.<android.media.Cea608CCWidget$CCLineBox: float mShadowRadius> = $f1;

        $i2 = virtualinvoke r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105487);

        $f2 = (float) $i2;

        r0.<android.media.Cea608CCWidget$CCLineBox: float mShadowOffset> = $f2;

        return;
    }

    private void drawEdgeOutline(android.graphics.Canvas)
    {
        android.media.Cea608CCWidget$CCLineBox r0;
        android.graphics.Canvas r1;
        android.text.TextPaint r2;
        android.graphics.Paint$Style r3, $r5;
        android.graphics.Paint$Join r4, $r6;
        float f0, $f1;
        int $i0, $i1, $i2;

        r0 := @this: android.media.Cea608CCWidget$CCLineBox;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: android.text.TextPaint getPaint()>();

        r3 = virtualinvoke r2.<android.text.TextPaint: android.graphics.Paint$Style getStyle()>();

        r4 = virtualinvoke r2.<android.text.TextPaint: android.graphics.Paint$Join getStrokeJoin()>();

        f0 = virtualinvoke r2.<android.text.TextPaint: float getStrokeWidth()>();

        $i0 = r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeColor>;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setTextColor(int)>($i0);

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL_AND_STROKE>;

        virtualinvoke r2.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r6 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke r2.<android.text.TextPaint: void setStrokeJoin(android.graphics.Paint$Join)>($r6);

        $f1 = r0.<android.media.Cea608CCWidget$CCLineBox: float mOutlineWidth>;

        virtualinvoke r2.<android.text.TextPaint: void setStrokeWidth(float)>($f1);

        specialinvoke r0.<android.widget.TextView: void onDraw(android.graphics.Canvas)>(r1);

        $i1 = r0.<android.media.Cea608CCWidget$CCLineBox: int mTextColor>;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setTextColor(int)>($i1);

        virtualinvoke r2.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>(r3);

        virtualinvoke r2.<android.text.TextPaint: void setStrokeJoin(android.graphics.Paint$Join)>(r4);

        virtualinvoke r2.<android.text.TextPaint: void setStrokeWidth(float)>(f0);

        specialinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setBackgroundSpans(int)>(0);

        specialinvoke r0.<android.widget.TextView: void onDraw(android.graphics.Canvas)>(r1);

        $i2 = r0.<android.media.Cea608CCWidget$CCLineBox: int mBgColor>;

        specialinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setBackgroundSpans(int)>($i2);

        return;
    }

    private void drawEdgeRaisedOrDepressed(android.graphics.Canvas)
    {
        android.media.Cea608CCWidget$CCLineBox r0;
        android.graphics.Canvas r1;
        android.text.TextPaint r2;
        android.graphics.Paint$Style r3, $r4;
        float f0, f1, $f2, $f3, $f4;
        int $i0, $i1, i2, i3;
        boolean z0;

        r0 := @this: android.media.Cea608CCWidget$CCLineBox;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: android.text.TextPaint getPaint()>();

        r3 = virtualinvoke r2.<android.text.TextPaint: android.graphics.Paint$Style getStyle()>();

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r2.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r4);

        $i0 = r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeType>;

        if $i0 != 3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        i2 = -1;

        if z0 == 0 goto label3;

        i3 = -1;

        goto label4;

     label3:
        i3 = r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeColor>;

     label4:
        if z0 == 0 goto label5;

        i2 = r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeColor>;

     label5:
        f0 = r0.<android.media.Cea608CCWidget$CCLineBox: float mShadowRadius>;

        f1 = f0 / 2.0F;

        $f3 = neg f1;

        $f2 = neg f1;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setShadowLayer(float,float,float,int)>(f0, $f3, $f2, i3);

        specialinvoke r0.<android.widget.TextView: void onDraw(android.graphics.Canvas)>(r1);

        specialinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setBackgroundSpans(int)>(0);

        $f4 = r0.<android.media.Cea608CCWidget$CCLineBox: float mShadowRadius>;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setShadowLayer(float,float,float,int)>($f4, f1, f1, i2);

        specialinvoke r0.<android.widget.TextView: void onDraw(android.graphics.Canvas)>(r1);

        virtualinvoke r2.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>(r3);

        $i1 = r0.<android.media.Cea608CCWidget$CCLineBox: int mBgColor>;

        specialinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setBackgroundSpans(int)>($i1);

        return;
    }

    private void setBackgroundSpans(int)
    {
        android.media.Cea608CCWidget$CCLineBox r0;
        int i0, $i1, $i2, i3;
        boolean $z0;
        java.lang.Object[] $r1;
        android.media.Cea608CCParser$MutableBackgroundColorSpan $r2;
        java.lang.CharSequence r3;
        android.text.Spannable r4;
        android.media.Cea608CCParser$MutableBackgroundColorSpan[] r5;

        r0 := @this: android.media.Cea608CCWidget$CCLineBox;

        i0 := @parameter0: int;

        r3 = virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: java.lang.CharSequence getText()>();

        $z0 = r3 instanceof android.text.Spannable;

        if $z0 == 0 goto label2;

        r4 = (android.text.Spannable) r3;

        $i1 = interfaceinvoke r4.<android.text.Spannable: int length()>();

        $r1 = interfaceinvoke r4.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Landroid/media/Cea608CCParser$MutableBackgroundColorSpan;");

        r5 = (android.media.Cea608CCParser$MutableBackgroundColorSpan[]) $r1;

        i3 = 0;

     label1:
        $i2 = lengthof r5;

        if i3 >= $i2 goto label2;

        $r2 = r5[i3];

        virtualinvoke $r2.<android.media.Cea608CCParser$MutableBackgroundColorSpan: void setBackgroundColor(int)>(i0);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.media.Cea608CCWidget$CCLineBox r0;
        android.graphics.Canvas r1;
        int i0;

        r0 := @this: android.media.Cea608CCWidget$CCLineBox;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeType>;

        if i0 == -1 goto label4;

        if i0 == 0 goto label4;

        if i0 != 2 goto label1;

        goto label4;

     label1:
        if i0 != 1 goto label2;

        specialinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void drawEdgeOutline(android.graphics.Canvas)>(r1);

        goto label3;

     label2:
        specialinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void drawEdgeRaisedOrDepressed(android.graphics.Canvas)>(r1);

     label3:
        return;

     label4:
        specialinvoke r0.<android.widget.TextView: void onDraw(android.graphics.Canvas)>(r1);

        return;
    }

    protected void onMeasure(int, int)
    {
        android.media.Cea608CCWidget$CCLineBox r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, f7, f8;
        android.text.TextPaint $r1;
        java.lang.String $r2;
        android.graphics.Rect $r3, $r4;

        r0 := @this: android.media.Cea608CCWidget$CCLineBox;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $f0 = (float) $i2;

        f6 = $f0 * 0.75F;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setTextSize(int,float)>(0, f6);

        $f1 = 0.1F * f6;

        $f2 = $f1 + 1.0F;

        r0.<android.media.Cea608CCWidget$CCLineBox: float mOutlineWidth> = $f2;

        $f3 = 0.05F * f6;

        f7 = $f3 + 1.0F;

        r0.<android.media.Cea608CCWidget$CCLineBox: float mShadowRadius> = f7;

        r0.<android.media.Cea608CCWidget$CCLineBox: float mShadowOffset> = f7;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setScaleX(float)>(1.0F);

        $r1 = virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: android.text.TextPaint getPaint()>();

        $r2 = "1234567890123456789012345678901234";

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = staticinvoke <android.media.Cea608CCWidget: android.graphics.Rect access$000()>();

        virtualinvoke $r1.<android.text.TextPaint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>("1234567890123456789012345678901234", 0, $i3, $r3);

        $r4 = staticinvoke <android.media.Cea608CCWidget: android.graphics.Rect access$000()>();

        $i4 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        f8 = (float) $i4;

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $f4 = (float) $i5;

        $f5 = $f4 / f8;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setScaleX(float)>($f5);

        specialinvoke r0.<android.widget.TextView: void onMeasure(int,int)>(i0, i1);

        return;
    }

    void setCaptionStyle(android.view.accessibility.CaptioningManager$CaptionStyle)
    {
        android.media.Cea608CCWidget$CCLineBox r0;
        android.view.accessibility.CaptioningManager$CaptionStyle r1;
        float f0, f1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.media.Cea608CCWidget$CCLineBox;

        r1 := @parameter0: android.view.accessibility.CaptioningManager$CaptionStyle;

        $i0 = r1.<android.view.accessibility.CaptioningManager$CaptionStyle: int foregroundColor>;

        r0.<android.media.Cea608CCWidget$CCLineBox: int mTextColor> = $i0;

        $i1 = r1.<android.view.accessibility.CaptioningManager$CaptionStyle: int backgroundColor>;

        r0.<android.media.Cea608CCWidget$CCLineBox: int mBgColor> = $i1;

        $i2 = r1.<android.view.accessibility.CaptioningManager$CaptionStyle: int edgeType>;

        r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeType> = $i2;

        $i3 = r1.<android.view.accessibility.CaptioningManager$CaptionStyle: int edgeColor>;

        r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeColor> = $i3;

        $i4 = r0.<android.media.Cea608CCWidget$CCLineBox: int mTextColor>;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setTextColor(int)>($i4);

        $i5 = r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeType>;

        if $i5 != 2 goto label1;

        f0 = r0.<android.media.Cea608CCWidget$CCLineBox: float mShadowRadius>;

        f1 = r0.<android.media.Cea608CCWidget$CCLineBox: float mShadowOffset>;

        $i6 = r0.<android.media.Cea608CCWidget$CCLineBox: int mEdgeColor>;

        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setShadowLayer(float,float,float,int)>(f0, f1, f1, $i6);

        goto label2;

     label1:
        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void setShadowLayer(float,float,float,int)>(0.0F, 0.0F, 0.0F, 0);

     label2:
        virtualinvoke r0.<android.media.Cea608CCWidget$CCLineBox: void invalidate()>();

        return;
    }

    public static void <clinit>()
    {
        <android.media.Cea608CCWidget$CCLineBox: float FONT_PADDING_RATIO> = 0.75F;

        <android.media.Cea608CCWidget$CCLineBox: float EDGE_SHADOW_RATIO> = 0.05F;

        <android.media.Cea608CCWidget$CCLineBox: float EDGE_OUTLINE_RATIO> = 0.1F;

        return;
    }
}
