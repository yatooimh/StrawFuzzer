public class android.media.ExifInterface extends java.lang.Object
{
    private static final java.nio.charset.Charset ASCII;
    private static final int[] BITS_PER_SAMPLE_GREYSCALE_1;
    private static final int[] BITS_PER_SAMPLE_GREYSCALE_2;
    private static final int[] BITS_PER_SAMPLE_RGB;
    private static final short BYTE_ALIGN_II;
    private static final short BYTE_ALIGN_MM;
    private static final int DATA_DEFLATE_ZIP;
    private static final int DATA_HUFFMAN_COMPRESSED;
    private static final int DATA_JPEG;
    private static final int DATA_JPEG_COMPRESSED;
    private static final int DATA_LOSSY_JPEG;
    private static final int DATA_PACK_BITS_COMPRESSED;
    private static final int DATA_UNCOMPRESSED;
    private static final boolean DEBUG;
    private static final byte[] EXIF_ASCII_PREFIX;
    private static final android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS;
    private static final android.media.ExifInterface$ExifTag[][] EXIF_TAGS;
    private static final byte[] HEIF_BRAND_HEIC;
    private static final byte[] HEIF_BRAND_MIF1;
    private static final byte[] HEIF_TYPE_FTYP;
    private static final byte[] IDENTIFIER_EXIF_APP1;
    private static final byte[] IDENTIFIER_XMP_APP1;
    private static final android.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS;
    private static final int IFD_FORMAT_BYTE;
    private static final int[] IFD_FORMAT_BYTES_PER_FORMAT;
    private static final int IFD_FORMAT_DOUBLE;
    private static final int IFD_FORMAT_IFD;
    private static final java.lang.String[] IFD_FORMAT_NAMES;
    private static final int IFD_FORMAT_SBYTE;
    private static final int IFD_FORMAT_SINGLE;
    private static final int IFD_FORMAT_SLONG;
    private static final int IFD_FORMAT_SRATIONAL;
    private static final int IFD_FORMAT_SSHORT;
    private static final int IFD_FORMAT_STRING;
    private static final int IFD_FORMAT_ULONG;
    private static final int IFD_FORMAT_UNDEFINED;
    private static final int IFD_FORMAT_URATIONAL;
    private static final int IFD_FORMAT_USHORT;
    private static final android.media.ExifInterface$ExifTag[] IFD_GPS_TAGS;
    private static final android.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS;
    private static final int IFD_OFFSET;
    private static final android.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS;
    private static final android.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS;
    private static final int IFD_TYPE_EXIF;
    private static final int IFD_TYPE_GPS;
    private static final int IFD_TYPE_INTEROPERABILITY;
    private static final int IFD_TYPE_ORF_CAMERA_SETTINGS;
    private static final int IFD_TYPE_ORF_IMAGE_PROCESSING;
    private static final int IFD_TYPE_ORF_MAKER_NOTE;
    private static final int IFD_TYPE_PEF;
    private static final int IFD_TYPE_PREVIEW;
    private static final int IFD_TYPE_PRIMARY;
    private static final int IFD_TYPE_THUMBNAIL;
    private static final int IMAGE_TYPE_ARW;
    private static final int IMAGE_TYPE_CR2;
    private static final int IMAGE_TYPE_DNG;
    private static final int IMAGE_TYPE_HEIF;
    private static final int IMAGE_TYPE_JPEG;
    private static final int IMAGE_TYPE_NEF;
    private static final int IMAGE_TYPE_NRW;
    private static final int IMAGE_TYPE_ORF;
    private static final int IMAGE_TYPE_PEF;
    private static final int IMAGE_TYPE_PNG;
    private static final int IMAGE_TYPE_RAF;
    private static final int IMAGE_TYPE_RW2;
    private static final int IMAGE_TYPE_SRW;
    private static final int IMAGE_TYPE_UNKNOWN;
    private static final int IMAGE_TYPE_WEBP;
    private static final android.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG;
    private static final android.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG;
    private static final byte[] JPEG_SIGNATURE;
    private static final byte MARKER;
    private static final byte MARKER_APP1;
    private static final byte MARKER_COM;
    private static final byte MARKER_EOI;
    private static final byte MARKER_SOF0;
    private static final byte MARKER_SOF1;
    private static final byte MARKER_SOF10;
    private static final byte MARKER_SOF11;
    private static final byte MARKER_SOF13;
    private static final byte MARKER_SOF14;
    private static final byte MARKER_SOF15;
    private static final byte MARKER_SOF2;
    private static final byte MARKER_SOF3;
    private static final byte MARKER_SOF5;
    private static final byte MARKER_SOF6;
    private static final byte MARKER_SOF7;
    private static final byte MARKER_SOF9;
    private static final byte MARKER_SOI;
    private static final byte MARKER_SOS;
    private static final int MAX_THUMBNAIL_SIZE;
    private static final android.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS;
    private static final android.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS;
    private static final byte[] ORF_MAKER_NOTE_HEADER_1;
    private static final int ORF_MAKER_NOTE_HEADER_1_SIZE;
    private static final byte[] ORF_MAKER_NOTE_HEADER_2;
    private static final int ORF_MAKER_NOTE_HEADER_2_SIZE;
    private static final android.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS;
    private static final short ORF_SIGNATURE_1;
    private static final short ORF_SIGNATURE_2;
    public static final int ORIENTATION_FLIP_HORIZONTAL;
    public static final int ORIENTATION_FLIP_VERTICAL;
    public static final int ORIENTATION_NORMAL;
    public static final int ORIENTATION_ROTATE_180;
    public static final int ORIENTATION_ROTATE_270;
    public static final int ORIENTATION_ROTATE_90;
    public static final int ORIENTATION_TRANSPOSE;
    public static final int ORIENTATION_TRANSVERSE;
    public static final int ORIENTATION_UNDEFINED;
    private static final int ORIGINAL_RESOLUTION_IMAGE;
    private static final int PEF_MAKER_NOTE_SKIP_SIZE;
    private static final java.lang.String PEF_SIGNATURE;
    private static final android.media.ExifInterface$ExifTag[] PEF_TAGS;
    private static final int PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO;
    private static final int PHOTOMETRIC_INTERPRETATION_RGB;
    private static final int PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO;
    private static final int PHOTOMETRIC_INTERPRETATION_YCBCR;
    private static final int PNG_CHUNK_CRC_BYTE_LENGTH;
    private static final int PNG_CHUNK_TYPE_BYTE_LENGTH;
    private static final byte[] PNG_CHUNK_TYPE_EXIF;
    private static final byte[] PNG_CHUNK_TYPE_IEND;
    private static final byte[] PNG_CHUNK_TYPE_IHDR;
    private static final byte[] PNG_SIGNATURE;
    private static final int RAF_INFO_SIZE;
    private static final int RAF_JPEG_LENGTH_VALUE_SIZE;
    private static final int RAF_OFFSET_TO_JPEG_IMAGE_OFFSET;
    private static final java.lang.String RAF_SIGNATURE;
    private static final int REDUCED_RESOLUTION_IMAGE;
    private static final short RW2_SIGNATURE;
    private static final int SIGNATURE_CHECK_SIZE;
    private static final byte START_CODE;
    public static final int STREAM_TYPE_EXIF_DATA_ONLY;
    public static final int STREAM_TYPE_FULL_IMAGE_DATA;
    private static final java.lang.String TAG;
    public static final java.lang.String TAG_APERTURE;
    public static final java.lang.String TAG_APERTURE_VALUE;
    public static final java.lang.String TAG_ARTIST;
    public static final java.lang.String TAG_BITS_PER_SAMPLE;
    public static final java.lang.String TAG_BRIGHTNESS_VALUE;
    public static final java.lang.String TAG_CFA_PATTERN;
    public static final java.lang.String TAG_COLOR_SPACE;
    public static final java.lang.String TAG_COMPONENTS_CONFIGURATION;
    public static final java.lang.String TAG_COMPRESSED_BITS_PER_PIXEL;
    public static final java.lang.String TAG_COMPRESSION;
    public static final java.lang.String TAG_CONTRAST;
    public static final java.lang.String TAG_COPYRIGHT;
    public static final java.lang.String TAG_CUSTOM_RENDERED;
    public static final java.lang.String TAG_DATETIME;
    public static final java.lang.String TAG_DATETIME_DIGITIZED;
    public static final java.lang.String TAG_DATETIME_ORIGINAL;
    public static final java.lang.String TAG_DEFAULT_CROP_SIZE;
    public static final java.lang.String TAG_DEVICE_SETTING_DESCRIPTION;
    public static final java.lang.String TAG_DIGITAL_ZOOM_RATIO;
    public static final java.lang.String TAG_DNG_VERSION;
    private static final java.lang.String TAG_EXIF_IFD_POINTER;
    public static final java.lang.String TAG_EXIF_VERSION;
    public static final java.lang.String TAG_EXPOSURE_BIAS_VALUE;
    public static final java.lang.String TAG_EXPOSURE_INDEX;
    public static final java.lang.String TAG_EXPOSURE_MODE;
    public static final java.lang.String TAG_EXPOSURE_PROGRAM;
    public static final java.lang.String TAG_EXPOSURE_TIME;
    public static final java.lang.String TAG_FILE_SOURCE;
    public static final java.lang.String TAG_FLASH;
    public static final java.lang.String TAG_FLASHPIX_VERSION;
    public static final java.lang.String TAG_FLASH_ENERGY;
    public static final java.lang.String TAG_FOCAL_LENGTH;
    public static final java.lang.String TAG_FOCAL_LENGTH_IN_35MM_FILM;
    public static final java.lang.String TAG_FOCAL_PLANE_RESOLUTION_UNIT;
    public static final java.lang.String TAG_FOCAL_PLANE_X_RESOLUTION;
    public static final java.lang.String TAG_FOCAL_PLANE_Y_RESOLUTION;
    public static final java.lang.String TAG_F_NUMBER;
    public static final java.lang.String TAG_GAIN_CONTROL;
    public static final java.lang.String TAG_GPS_ALTITUDE;
    public static final java.lang.String TAG_GPS_ALTITUDE_REF;
    public static final java.lang.String TAG_GPS_AREA_INFORMATION;
    public static final java.lang.String TAG_GPS_DATESTAMP;
    public static final java.lang.String TAG_GPS_DEST_BEARING;
    public static final java.lang.String TAG_GPS_DEST_BEARING_REF;
    public static final java.lang.String TAG_GPS_DEST_DISTANCE;
    public static final java.lang.String TAG_GPS_DEST_DISTANCE_REF;
    public static final java.lang.String TAG_GPS_DEST_LATITUDE;
    public static final java.lang.String TAG_GPS_DEST_LATITUDE_REF;
    public static final java.lang.String TAG_GPS_DEST_LONGITUDE;
    public static final java.lang.String TAG_GPS_DEST_LONGITUDE_REF;
    public static final java.lang.String TAG_GPS_DIFFERENTIAL;
    public static final java.lang.String TAG_GPS_DOP;
    public static final java.lang.String TAG_GPS_IMG_DIRECTION;
    public static final java.lang.String TAG_GPS_IMG_DIRECTION_REF;
    private static final java.lang.String TAG_GPS_INFO_IFD_POINTER;
    public static final java.lang.String TAG_GPS_LATITUDE;
    public static final java.lang.String TAG_GPS_LATITUDE_REF;
    public static final java.lang.String TAG_GPS_LONGITUDE;
    public static final java.lang.String TAG_GPS_LONGITUDE_REF;
    public static final java.lang.String TAG_GPS_MAP_DATUM;
    public static final java.lang.String TAG_GPS_MEASURE_MODE;
    public static final java.lang.String TAG_GPS_PROCESSING_METHOD;
    public static final java.lang.String TAG_GPS_SATELLITES;
    public static final java.lang.String TAG_GPS_SPEED;
    public static final java.lang.String TAG_GPS_SPEED_REF;
    public static final java.lang.String TAG_GPS_STATUS;
    public static final java.lang.String TAG_GPS_TIMESTAMP;
    public static final java.lang.String TAG_GPS_TRACK;
    public static final java.lang.String TAG_GPS_TRACK_REF;
    public static final java.lang.String TAG_GPS_VERSION_ID;
    private static final java.lang.String TAG_HAS_THUMBNAIL;
    public static final java.lang.String TAG_IMAGE_DESCRIPTION;
    public static final java.lang.String TAG_IMAGE_LENGTH;
    public static final java.lang.String TAG_IMAGE_UNIQUE_ID;
    public static final java.lang.String TAG_IMAGE_WIDTH;
    private static final java.lang.String TAG_INTEROPERABILITY_IFD_POINTER;
    public static final java.lang.String TAG_INTEROPERABILITY_INDEX;
    public static final java.lang.String TAG_ISO;
    public static final java.lang.String TAG_ISO_SPEED_RATINGS;
    public static final java.lang.String TAG_JPEG_INTERCHANGE_FORMAT;
    public static final java.lang.String TAG_JPEG_INTERCHANGE_FORMAT_LENGTH;
    public static final java.lang.String TAG_LIGHT_SOURCE;
    public static final java.lang.String TAG_MAKE;
    public static final java.lang.String TAG_MAKER_NOTE;
    public static final java.lang.String TAG_MAX_APERTURE_VALUE;
    public static final java.lang.String TAG_METERING_MODE;
    public static final java.lang.String TAG_MODEL;
    public static final java.lang.String TAG_NEW_SUBFILE_TYPE;
    public static final java.lang.String TAG_OECF;
    public static final java.lang.String TAG_OFFSET_TIME;
    public static final java.lang.String TAG_OFFSET_TIME_DIGITIZED;
    public static final java.lang.String TAG_OFFSET_TIME_ORIGINAL;
    public static final java.lang.String TAG_ORF_ASPECT_FRAME;
    private static final java.lang.String TAG_ORF_CAMERA_SETTINGS_IFD_POINTER;
    private static final java.lang.String TAG_ORF_IMAGE_PROCESSING_IFD_POINTER;
    public static final java.lang.String TAG_ORF_PREVIEW_IMAGE_LENGTH;
    public static final java.lang.String TAG_ORF_PREVIEW_IMAGE_START;
    public static final java.lang.String TAG_ORF_THUMBNAIL_IMAGE;
    public static final java.lang.String TAG_ORIENTATION;
    public static final java.lang.String TAG_PHOTOMETRIC_INTERPRETATION;
    public static final java.lang.String TAG_PIXEL_X_DIMENSION;
    public static final java.lang.String TAG_PIXEL_Y_DIMENSION;
    public static final java.lang.String TAG_PLANAR_CONFIGURATION;
    public static final java.lang.String TAG_PRIMARY_CHROMATICITIES;
    private static final android.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE;
    public static final java.lang.String TAG_REFERENCE_BLACK_WHITE;
    public static final java.lang.String TAG_RELATED_SOUND_FILE;
    public static final java.lang.String TAG_RESOLUTION_UNIT;
    public static final java.lang.String TAG_ROWS_PER_STRIP;
    public static final java.lang.String TAG_RW2_ISO;
    public static final java.lang.String TAG_RW2_JPG_FROM_RAW;
    public static final java.lang.String TAG_RW2_SENSOR_BOTTOM_BORDER;
    public static final java.lang.String TAG_RW2_SENSOR_LEFT_BORDER;
    public static final java.lang.String TAG_RW2_SENSOR_RIGHT_BORDER;
    public static final java.lang.String TAG_RW2_SENSOR_TOP_BORDER;
    public static final java.lang.String TAG_SAMPLES_PER_PIXEL;
    public static final java.lang.String TAG_SATURATION;
    public static final java.lang.String TAG_SCENE_CAPTURE_TYPE;
    public static final java.lang.String TAG_SCENE_TYPE;
    public static final java.lang.String TAG_SENSING_METHOD;
    public static final java.lang.String TAG_SHARPNESS;
    public static final java.lang.String TAG_SHUTTER_SPEED_VALUE;
    public static final java.lang.String TAG_SOFTWARE;
    public static final java.lang.String TAG_SPATIAL_FREQUENCY_RESPONSE;
    public static final java.lang.String TAG_SPECTRAL_SENSITIVITY;
    public static final java.lang.String TAG_STRIP_BYTE_COUNTS;
    public static final java.lang.String TAG_STRIP_OFFSETS;
    public static final java.lang.String TAG_SUBFILE_TYPE;
    public static final java.lang.String TAG_SUBJECT_AREA;
    public static final java.lang.String TAG_SUBJECT_DISTANCE;
    public static final java.lang.String TAG_SUBJECT_DISTANCE_RANGE;
    public static final java.lang.String TAG_SUBJECT_LOCATION;
    public static final java.lang.String TAG_SUBSEC_TIME;
    public static final java.lang.String TAG_SUBSEC_TIME_DIG;
    public static final java.lang.String TAG_SUBSEC_TIME_DIGITIZED;
    public static final java.lang.String TAG_SUBSEC_TIME_ORIG;
    public static final java.lang.String TAG_SUBSEC_TIME_ORIGINAL;
    private static final java.lang.String TAG_SUB_IFD_POINTER;
    private static final java.lang.String TAG_THUMBNAIL_DATA;
    public static final java.lang.String TAG_THUMBNAIL_IMAGE_LENGTH;
    public static final java.lang.String TAG_THUMBNAIL_IMAGE_WIDTH;
    private static final java.lang.String TAG_THUMBNAIL_LENGTH;
    private static final java.lang.String TAG_THUMBNAIL_OFFSET;
    public static final java.lang.String TAG_THUMBNAIL_ORIENTATION;
    public static final java.lang.String TAG_TRANSFER_FUNCTION;
    public static final java.lang.String TAG_USER_COMMENT;
    public static final java.lang.String TAG_WHITE_BALANCE;
    public static final java.lang.String TAG_WHITE_POINT;
    public static final java.lang.String TAG_XMP;
    public static final java.lang.String TAG_X_RESOLUTION;
    public static final java.lang.String TAG_Y_CB_CR_COEFFICIENTS;
    public static final java.lang.String TAG_Y_CB_CR_POSITIONING;
    public static final java.lang.String TAG_Y_CB_CR_SUB_SAMPLING;
    public static final java.lang.String TAG_Y_RESOLUTION;
    private static final int WEBP_CHUNK_SIZE_BYTE_LENGTH;
    private static final int WEBP_CHUNK_TYPE_BYTE_LENGTH;
    private static final byte[] WEBP_CHUNK_TYPE_EXIF;
    private static final int WEBP_FILE_SIZE_BYTE_LENGTH;
    private static final byte[] WEBP_SIGNATURE_1;
    private static final byte[] WEBP_SIGNATURE_2;
    public static final int WHITEBALANCE_AUTO;
    public static final int WHITEBALANCE_MANUAL;
    private static final java.util.HashMap sExifPointerTagMap;
    private static final java.util.HashMap[] sExifTagMapsForReading;
    private static final java.util.HashMap[] sExifTagMapsForWriting;
    private static java.text.SimpleDateFormat sFormatter;
    private static java.text.SimpleDateFormat sFormatterTz;
    private static final java.util.regex.Pattern sGpsTimestampPattern;
    private static final java.util.regex.Pattern sNonZeroTimePattern;
    private static final java.util.HashSet sTagSetForCompatibility;
    private boolean mAreThumbnailStripsConsecutive;
    private android.content.res.AssetManager$AssetInputStream mAssetInputStream;
    private final java.util.HashMap[] mAttributes;
    private java.nio.ByteOrder mExifByteOrder;
    private int mExifOffset;
    private java.lang.String mFilename;
    private java.util.Set mHandledIfdOffsets;
    private boolean mHasThumbnail;
    private boolean mHasThumbnailStrips;
    private boolean mIsExifDataOnly;
    private boolean mIsInputStream;
    private boolean mIsSupportedFile;
    private int mMimeType;
    private boolean mModified;
    private int mOrfMakerNoteOffset;
    private int mOrfThumbnailLength;
    private int mOrfThumbnailOffset;
    private int mRw2JpgFromRawOffset;
    private java.io.FileDescriptor mSeekableFileDescriptor;
    private byte[] mThumbnailBytes;
    private int mThumbnailCompression;
    private int mThumbnailLength;
    private int mThumbnailOffset;
    private boolean mXmpIsFromSeparateMarker;

    static void <clinit>()
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        boolean $z0;
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r232, $r235;
        java.lang.String[] $r13, $r228;
        int[] $r14, $r16, $r17, $r18;
        android.media.ExifInterface$ExifTag[] $r19, $r62, $r125, $r157, $r159, $r198, $r202, $r205, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r241, $r247, $r253, $r259, $r265, $r271, r292, r293, r298;
        android.media.ExifInterface$ExifTag $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r158, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r195, $r196, $r197, $r199, $r200, $r201, $r203, $r204, $r206, $r207, $r217, $r218, $r219, $r220, $r221, $r222, $r223, $r224, $r242, $r248, $r254, $r260, $r266, $r272, r299;
        android.media.ExifInterface$ExifTag[][] $r208, $r240, $r283, r294;
        java.util.HashMap[] $r225, $r226, $r280, $r282, $r284, $r288;
        java.util.HashSet $r227;
        java.util.List $r229;
        java.util.HashMap $r230, $r243, $r249, $r255, $r261, $r267, $r273, $r279, $r281, $r285, $r290;
        java.lang.String $r231, $r234, $r289;
        java.nio.charset.Charset $r233, r295;
        java.text.SimpleDateFormat $r236, $r238;
        java.util.TimeZone $r237, $r239;
        java.lang.Integer $r244, $r245, $r250, $r251, $r256, $r257, $r262, $r263, $r268, $r269, $r274, $r275, $r286;
        java.util.regex.Pattern $r277, $r278;

        <android.media.ExifInterface: int WHITEBALANCE_MANUAL> = 1;

        <android.media.ExifInterface: int WHITEBALANCE_AUTO> = 0;

        <android.media.ExifInterface: int WEBP_FILE_SIZE_BYTE_LENGTH> = 4;

        <android.media.ExifInterface: int WEBP_CHUNK_TYPE_BYTE_LENGTH> = 4;

        <android.media.ExifInterface: int WEBP_CHUNK_SIZE_BYTE_LENGTH> = 4;

        <android.media.ExifInterface: java.lang.String TAG_Y_RESOLUTION> = "YResolution";

        <android.media.ExifInterface: java.lang.String TAG_Y_CB_CR_SUB_SAMPLING> = "YCbCrSubSampling";

        <android.media.ExifInterface: java.lang.String TAG_Y_CB_CR_POSITIONING> = "YCbCrPositioning";

        <android.media.ExifInterface: java.lang.String TAG_Y_CB_CR_COEFFICIENTS> = "YCbCrCoefficients";

        <android.media.ExifInterface: java.lang.String TAG_X_RESOLUTION> = "XResolution";

        <android.media.ExifInterface: java.lang.String TAG_XMP> = "Xmp";

        <android.media.ExifInterface: java.lang.String TAG_WHITE_POINT> = "WhitePoint";

        <android.media.ExifInterface: java.lang.String TAG_WHITE_BALANCE> = "WhiteBalance";

        <android.media.ExifInterface: java.lang.String TAG_USER_COMMENT> = "UserComment";

        <android.media.ExifInterface: java.lang.String TAG_TRANSFER_FUNCTION> = "TransferFunction";

        <android.media.ExifInterface: java.lang.String TAG_THUMBNAIL_ORIENTATION> = "ThumbnailOrientation";

        <android.media.ExifInterface: java.lang.String TAG_THUMBNAIL_OFFSET> = "ThumbnailOffset";

        <android.media.ExifInterface: java.lang.String TAG_THUMBNAIL_LENGTH> = "ThumbnailLength";

        <android.media.ExifInterface: java.lang.String TAG_THUMBNAIL_IMAGE_WIDTH> = "ThumbnailImageWidth";

        <android.media.ExifInterface: java.lang.String TAG_THUMBNAIL_IMAGE_LENGTH> = "ThumbnailImageLength";

        <android.media.ExifInterface: java.lang.String TAG_THUMBNAIL_DATA> = "ThumbnailData";

        <android.media.ExifInterface: java.lang.String TAG_SUB_IFD_POINTER> = "SubIFDPointer";

        <android.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME_ORIGINAL> = "SubSecTimeOriginal";

        <android.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME_ORIG> = "SubSecTimeOriginal";

        <android.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME_DIGITIZED> = "SubSecTimeDigitized";

        <android.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME_DIG> = "SubSecTimeDigitized";

        <android.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME> = "SubSecTime";

        <android.media.ExifInterface: java.lang.String TAG_SUBJECT_LOCATION> = "SubjectLocation";

        <android.media.ExifInterface: java.lang.String TAG_SUBJECT_DISTANCE_RANGE> = "SubjectDistanceRange";

        <android.media.ExifInterface: java.lang.String TAG_SUBJECT_DISTANCE> = "SubjectDistance";

        <android.media.ExifInterface: java.lang.String TAG_SUBJECT_AREA> = "SubjectArea";

        <android.media.ExifInterface: java.lang.String TAG_SUBFILE_TYPE> = "SubfileType";

        <android.media.ExifInterface: java.lang.String TAG_STRIP_OFFSETS> = "StripOffsets";

        <android.media.ExifInterface: java.lang.String TAG_STRIP_BYTE_COUNTS> = "StripByteCounts";

        <android.media.ExifInterface: java.lang.String TAG_SPECTRAL_SENSITIVITY> = "SpectralSensitivity";

        <android.media.ExifInterface: java.lang.String TAG_SPATIAL_FREQUENCY_RESPONSE> = "SpatialFrequencyResponse";

        <android.media.ExifInterface: java.lang.String TAG_SOFTWARE> = "Software";

        <android.media.ExifInterface: java.lang.String TAG_SHUTTER_SPEED_VALUE> = "ShutterSpeedValue";

        <android.media.ExifInterface: java.lang.String TAG_SHARPNESS> = "Sharpness";

        <android.media.ExifInterface: java.lang.String TAG_SENSING_METHOD> = "SensingMethod";

        <android.media.ExifInterface: java.lang.String TAG_SCENE_TYPE> = "SceneType";

        <android.media.ExifInterface: java.lang.String TAG_SCENE_CAPTURE_TYPE> = "SceneCaptureType";

        <android.media.ExifInterface: java.lang.String TAG_SATURATION> = "Saturation";

        <android.media.ExifInterface: java.lang.String TAG_SAMPLES_PER_PIXEL> = "SamplesPerPixel";

        <android.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_TOP_BORDER> = "SensorTopBorder";

        <android.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_RIGHT_BORDER> = "SensorRightBorder";

        <android.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_LEFT_BORDER> = "SensorLeftBorder";

        <android.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_BOTTOM_BORDER> = "SensorBottomBorder";

        <android.media.ExifInterface: java.lang.String TAG_RW2_JPG_FROM_RAW> = "JpgFromRaw";

        <android.media.ExifInterface: java.lang.String TAG_RW2_ISO> = "ISO";

        <android.media.ExifInterface: java.lang.String TAG_ROWS_PER_STRIP> = "RowsPerStrip";

        <android.media.ExifInterface: java.lang.String TAG_RESOLUTION_UNIT> = "ResolutionUnit";

        <android.media.ExifInterface: java.lang.String TAG_RELATED_SOUND_FILE> = "RelatedSoundFile";

        <android.media.ExifInterface: java.lang.String TAG_REFERENCE_BLACK_WHITE> = "ReferenceBlackWhite";

        <android.media.ExifInterface: java.lang.String TAG_PRIMARY_CHROMATICITIES> = "PrimaryChromaticities";

        <android.media.ExifInterface: java.lang.String TAG_PLANAR_CONFIGURATION> = "PlanarConfiguration";

        <android.media.ExifInterface: java.lang.String TAG_PIXEL_Y_DIMENSION> = "PixelYDimension";

        <android.media.ExifInterface: java.lang.String TAG_PIXEL_X_DIMENSION> = "PixelXDimension";

        <android.media.ExifInterface: java.lang.String TAG_PHOTOMETRIC_INTERPRETATION> = "PhotometricInterpretation";

        <android.media.ExifInterface: java.lang.String TAG_ORIENTATION> = "Orientation";

        <android.media.ExifInterface: java.lang.String TAG_ORF_THUMBNAIL_IMAGE> = "ThumbnailImage";

        <android.media.ExifInterface: java.lang.String TAG_ORF_PREVIEW_IMAGE_START> = "PreviewImageStart";

        <android.media.ExifInterface: java.lang.String TAG_ORF_PREVIEW_IMAGE_LENGTH> = "PreviewImageLength";

        <android.media.ExifInterface: java.lang.String TAG_ORF_IMAGE_PROCESSING_IFD_POINTER> = "ImageProcessingIFDPointer";

        <android.media.ExifInterface: java.lang.String TAG_ORF_CAMERA_SETTINGS_IFD_POINTER> = "CameraSettingsIFDPointer";

        <android.media.ExifInterface: java.lang.String TAG_ORF_ASPECT_FRAME> = "AspectFrame";

        <android.media.ExifInterface: java.lang.String TAG_OFFSET_TIME_ORIGINAL> = "OffsetTimeOriginal";

        <android.media.ExifInterface: java.lang.String TAG_OFFSET_TIME_DIGITIZED> = "OffsetTimeDigitized";

        <android.media.ExifInterface: java.lang.String TAG_OFFSET_TIME> = "OffsetTime";

        <android.media.ExifInterface: java.lang.String TAG_OECF> = "OECF";

        <android.media.ExifInterface: java.lang.String TAG_NEW_SUBFILE_TYPE> = "NewSubfileType";

        <android.media.ExifInterface: java.lang.String TAG_MODEL> = "Model";

        <android.media.ExifInterface: java.lang.String TAG_METERING_MODE> = "MeteringMode";

        <android.media.ExifInterface: java.lang.String TAG_MAX_APERTURE_VALUE> = "MaxApertureValue";

        <android.media.ExifInterface: java.lang.String TAG_MAKER_NOTE> = "MakerNote";

        <android.media.ExifInterface: java.lang.String TAG_MAKE> = "Make";

        <android.media.ExifInterface: java.lang.String TAG_LIGHT_SOURCE> = "LightSource";

        <android.media.ExifInterface: java.lang.String TAG_JPEG_INTERCHANGE_FORMAT_LENGTH> = "JPEGInterchangeFormatLength";

        <android.media.ExifInterface: java.lang.String TAG_JPEG_INTERCHANGE_FORMAT> = "JPEGInterchangeFormat";

        <android.media.ExifInterface: java.lang.String TAG_ISO_SPEED_RATINGS> = "ISOSpeedRatings";

        <android.media.ExifInterface: java.lang.String TAG_ISO> = "ISOSpeedRatings";

        <android.media.ExifInterface: java.lang.String TAG_INTEROPERABILITY_INDEX> = "InteroperabilityIndex";

        <android.media.ExifInterface: java.lang.String TAG_INTEROPERABILITY_IFD_POINTER> = "InteroperabilityIFDPointer";

        <android.media.ExifInterface: java.lang.String TAG_IMAGE_WIDTH> = "ImageWidth";

        <android.media.ExifInterface: java.lang.String TAG_IMAGE_UNIQUE_ID> = "ImageUniqueID";

        <android.media.ExifInterface: java.lang.String TAG_IMAGE_LENGTH> = "ImageLength";

        <android.media.ExifInterface: java.lang.String TAG_IMAGE_DESCRIPTION> = "ImageDescription";

        <android.media.ExifInterface: java.lang.String TAG_HAS_THUMBNAIL> = "HasThumbnail";

        <android.media.ExifInterface: java.lang.String TAG_GPS_VERSION_ID> = "GPSVersionID";

        <android.media.ExifInterface: java.lang.String TAG_GPS_TRACK_REF> = "GPSTrackRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_TRACK> = "GPSTrack";

        <android.media.ExifInterface: java.lang.String TAG_GPS_TIMESTAMP> = "GPSTimeStamp";

        <android.media.ExifInterface: java.lang.String TAG_GPS_STATUS> = "GPSStatus";

        <android.media.ExifInterface: java.lang.String TAG_GPS_SPEED_REF> = "GPSSpeedRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_SPEED> = "GPSSpeed";

        <android.media.ExifInterface: java.lang.String TAG_GPS_SATELLITES> = "GPSSatellites";

        <android.media.ExifInterface: java.lang.String TAG_GPS_PROCESSING_METHOD> = "GPSProcessingMethod";

        <android.media.ExifInterface: java.lang.String TAG_GPS_MEASURE_MODE> = "GPSMeasureMode";

        <android.media.ExifInterface: java.lang.String TAG_GPS_MAP_DATUM> = "GPSMapDatum";

        <android.media.ExifInterface: java.lang.String TAG_GPS_LONGITUDE_REF> = "GPSLongitudeRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_LONGITUDE> = "GPSLongitude";

        <android.media.ExifInterface: java.lang.String TAG_GPS_LATITUDE_REF> = "GPSLatitudeRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_LATITUDE> = "GPSLatitude";

        <android.media.ExifInterface: java.lang.String TAG_GPS_INFO_IFD_POINTER> = "GPSInfoIFDPointer";

        <android.media.ExifInterface: java.lang.String TAG_GPS_IMG_DIRECTION_REF> = "GPSImgDirectionRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_IMG_DIRECTION> = "GPSImgDirection";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DOP> = "GPSDOP";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DIFFERENTIAL> = "GPSDifferential";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DEST_LONGITUDE_REF> = "GPSDestLongitudeRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DEST_LONGITUDE> = "GPSDestLongitude";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DEST_LATITUDE_REF> = "GPSDestLatitudeRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DEST_LATITUDE> = "GPSDestLatitude";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DEST_DISTANCE_REF> = "GPSDestDistanceRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DEST_DISTANCE> = "GPSDestDistance";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DEST_BEARING_REF> = "GPSDestBearingRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DEST_BEARING> = "GPSDestBearing";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DATESTAMP> = "GPSDateStamp";

        <android.media.ExifInterface: java.lang.String TAG_GPS_AREA_INFORMATION> = "GPSAreaInformation";

        <android.media.ExifInterface: java.lang.String TAG_GPS_ALTITUDE_REF> = "GPSAltitudeRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_ALTITUDE> = "GPSAltitude";

        <android.media.ExifInterface: java.lang.String TAG_GAIN_CONTROL> = "GainControl";

        <android.media.ExifInterface: java.lang.String TAG_F_NUMBER> = "FNumber";

        <android.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_Y_RESOLUTION> = "FocalPlaneYResolution";

        <android.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_X_RESOLUTION> = "FocalPlaneXResolution";

        <android.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_RESOLUTION_UNIT> = "FocalPlaneResolutionUnit";

        <android.media.ExifInterface: java.lang.String TAG_FOCAL_LENGTH_IN_35MM_FILM> = "FocalLengthIn35mmFilm";

        <android.media.ExifInterface: java.lang.String TAG_FOCAL_LENGTH> = "FocalLength";

        <android.media.ExifInterface: java.lang.String TAG_FLASH_ENERGY> = "FlashEnergy";

        <android.media.ExifInterface: java.lang.String TAG_FLASHPIX_VERSION> = "FlashpixVersion";

        <android.media.ExifInterface: java.lang.String TAG_FLASH> = "Flash";

        <android.media.ExifInterface: java.lang.String TAG_FILE_SOURCE> = "FileSource";

        <android.media.ExifInterface: java.lang.String TAG_EXPOSURE_TIME> = "ExposureTime";

        <android.media.ExifInterface: java.lang.String TAG_EXPOSURE_PROGRAM> = "ExposureProgram";

        <android.media.ExifInterface: java.lang.String TAG_EXPOSURE_MODE> = "ExposureMode";

        <android.media.ExifInterface: java.lang.String TAG_EXPOSURE_INDEX> = "ExposureIndex";

        <android.media.ExifInterface: java.lang.String TAG_EXPOSURE_BIAS_VALUE> = "ExposureBiasValue";

        <android.media.ExifInterface: java.lang.String TAG_EXIF_VERSION> = "ExifVersion";

        <android.media.ExifInterface: java.lang.String TAG_EXIF_IFD_POINTER> = "ExifIFDPointer";

        <android.media.ExifInterface: java.lang.String TAG_DNG_VERSION> = "DNGVersion";

        <android.media.ExifInterface: java.lang.String TAG_DIGITAL_ZOOM_RATIO> = "DigitalZoomRatio";

        <android.media.ExifInterface: java.lang.String TAG_DEVICE_SETTING_DESCRIPTION> = "DeviceSettingDescription";

        <android.media.ExifInterface: java.lang.String TAG_DEFAULT_CROP_SIZE> = "DefaultCropSize";

        <android.media.ExifInterface: java.lang.String TAG_DATETIME_ORIGINAL> = "DateTimeOriginal";

        <android.media.ExifInterface: java.lang.String TAG_DATETIME_DIGITIZED> = "DateTimeDigitized";

        <android.media.ExifInterface: java.lang.String TAG_DATETIME> = "DateTime";

        <android.media.ExifInterface: java.lang.String TAG_CUSTOM_RENDERED> = "CustomRendered";

        <android.media.ExifInterface: java.lang.String TAG_COPYRIGHT> = "Copyright";

        <android.media.ExifInterface: java.lang.String TAG_CONTRAST> = "Contrast";

        <android.media.ExifInterface: java.lang.String TAG_COMPRESSION> = "Compression";

        <android.media.ExifInterface: java.lang.String TAG_COMPRESSED_BITS_PER_PIXEL> = "CompressedBitsPerPixel";

        <android.media.ExifInterface: java.lang.String TAG_COMPONENTS_CONFIGURATION> = "ComponentsConfiguration";

        <android.media.ExifInterface: java.lang.String TAG_COLOR_SPACE> = "ColorSpace";

        <android.media.ExifInterface: java.lang.String TAG_CFA_PATTERN> = "CFAPattern";

        <android.media.ExifInterface: java.lang.String TAG_BRIGHTNESS_VALUE> = "BrightnessValue";

        <android.media.ExifInterface: java.lang.String TAG_BITS_PER_SAMPLE> = "BitsPerSample";

        <android.media.ExifInterface: java.lang.String TAG_ARTIST> = "Artist";

        <android.media.ExifInterface: java.lang.String TAG_APERTURE_VALUE> = "ApertureValue";

        <android.media.ExifInterface: java.lang.String TAG_APERTURE> = "FNumber";

        <android.media.ExifInterface: java.lang.String TAG> = "ExifInterface";

        <android.media.ExifInterface: int STREAM_TYPE_FULL_IMAGE_DATA> = 0;

        <android.media.ExifInterface: int STREAM_TYPE_EXIF_DATA_ONLY> = 1;

        <android.media.ExifInterface: byte START_CODE> = 42;

        <android.media.ExifInterface: int SIGNATURE_CHECK_SIZE> = 5000;

        <android.media.ExifInterface: short RW2_SIGNATURE> = 85;

        <android.media.ExifInterface: int REDUCED_RESOLUTION_IMAGE> = 1;

        <android.media.ExifInterface: java.lang.String RAF_SIGNATURE> = "FUJIFILMCCD-RAW";

        <android.media.ExifInterface: int RAF_OFFSET_TO_JPEG_IMAGE_OFFSET> = 84;

        <android.media.ExifInterface: int RAF_JPEG_LENGTH_VALUE_SIZE> = 4;

        <android.media.ExifInterface: int RAF_INFO_SIZE> = 160;

        <android.media.ExifInterface: int PNG_CHUNK_TYPE_BYTE_LENGTH> = 4;

        <android.media.ExifInterface: int PNG_CHUNK_CRC_BYTE_LENGTH> = 4;

        <android.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_YCBCR> = 6;

        <android.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO> = 0;

        <android.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_RGB> = 2;

        <android.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO> = 1;

        <android.media.ExifInterface: java.lang.String PEF_SIGNATURE> = "PENTAX";

        <android.media.ExifInterface: int PEF_MAKER_NOTE_SKIP_SIZE> = 6;

        <android.media.ExifInterface: int ORIGINAL_RESOLUTION_IMAGE> = 0;

        <android.media.ExifInterface: int ORIENTATION_UNDEFINED> = 0;

        <android.media.ExifInterface: int ORIENTATION_TRANSVERSE> = 7;

        <android.media.ExifInterface: int ORIENTATION_TRANSPOSE> = 5;

        <android.media.ExifInterface: int ORIENTATION_ROTATE_90> = 6;

        <android.media.ExifInterface: int ORIENTATION_ROTATE_270> = 8;

        <android.media.ExifInterface: int ORIENTATION_ROTATE_180> = 3;

        <android.media.ExifInterface: int ORIENTATION_NORMAL> = 1;

        <android.media.ExifInterface: int ORIENTATION_FLIP_VERTICAL> = 4;

        <android.media.ExifInterface: int ORIENTATION_FLIP_HORIZONTAL> = 2;

        <android.media.ExifInterface: short ORF_SIGNATURE_2> = 21330;

        <android.media.ExifInterface: short ORF_SIGNATURE_1> = 20306;

        <android.media.ExifInterface: int ORF_MAKER_NOTE_HEADER_2_SIZE> = 12;

        <android.media.ExifInterface: int ORF_MAKER_NOTE_HEADER_1_SIZE> = 8;

        <android.media.ExifInterface: int MAX_THUMBNAIL_SIZE> = 512;

        <android.media.ExifInterface: byte MARKER_SOS> = -38;

        <android.media.ExifInterface: byte MARKER_SOI> = -40;

        <android.media.ExifInterface: byte MARKER_SOF9> = -55;

        <android.media.ExifInterface: byte MARKER_SOF7> = -57;

        <android.media.ExifInterface: byte MARKER_SOF6> = -58;

        <android.media.ExifInterface: byte MARKER_SOF5> = -59;

        <android.media.ExifInterface: byte MARKER_SOF3> = -61;

        <android.media.ExifInterface: byte MARKER_SOF2> = -62;

        <android.media.ExifInterface: byte MARKER_SOF15> = -49;

        <android.media.ExifInterface: byte MARKER_SOF14> = -50;

        <android.media.ExifInterface: byte MARKER_SOF13> = -51;

        <android.media.ExifInterface: byte MARKER_SOF11> = -53;

        <android.media.ExifInterface: byte MARKER_SOF10> = -54;

        <android.media.ExifInterface: byte MARKER_SOF1> = -63;

        <android.media.ExifInterface: byte MARKER_SOF0> = -64;

        <android.media.ExifInterface: byte MARKER_EOI> = -39;

        <android.media.ExifInterface: byte MARKER_COM> = -2;

        <android.media.ExifInterface: byte MARKER_APP1> = -31;

        <android.media.ExifInterface: byte MARKER> = -1;

        <android.media.ExifInterface: int IMAGE_TYPE_WEBP> = 14;

        <android.media.ExifInterface: int IMAGE_TYPE_UNKNOWN> = 0;

        <android.media.ExifInterface: int IMAGE_TYPE_SRW> = 11;

        <android.media.ExifInterface: int IMAGE_TYPE_RW2> = 10;

        <android.media.ExifInterface: int IMAGE_TYPE_RAF> = 9;

        <android.media.ExifInterface: int IMAGE_TYPE_PNG> = 13;

        <android.media.ExifInterface: int IMAGE_TYPE_PEF> = 8;

        <android.media.ExifInterface: int IMAGE_TYPE_ORF> = 7;

        <android.media.ExifInterface: int IMAGE_TYPE_NRW> = 6;

        <android.media.ExifInterface: int IMAGE_TYPE_NEF> = 5;

        <android.media.ExifInterface: int IMAGE_TYPE_JPEG> = 4;

        <android.media.ExifInterface: int IMAGE_TYPE_HEIF> = 12;

        <android.media.ExifInterface: int IMAGE_TYPE_DNG> = 3;

        <android.media.ExifInterface: int IMAGE_TYPE_CR2> = 2;

        <android.media.ExifInterface: int IMAGE_TYPE_ARW> = 1;

        <android.media.ExifInterface: int IFD_TYPE_THUMBNAIL> = 4;

        <android.media.ExifInterface: int IFD_TYPE_PRIMARY> = 0;

        <android.media.ExifInterface: int IFD_TYPE_PREVIEW> = 5;

        <android.media.ExifInterface: int IFD_TYPE_PEF> = 9;

        <android.media.ExifInterface: int IFD_TYPE_ORF_MAKER_NOTE> = 6;

        <android.media.ExifInterface: int IFD_TYPE_ORF_IMAGE_PROCESSING> = 8;

        <android.media.ExifInterface: int IFD_TYPE_ORF_CAMERA_SETTINGS> = 7;

        <android.media.ExifInterface: int IFD_TYPE_INTEROPERABILITY> = 3;

        <android.media.ExifInterface: int IFD_TYPE_GPS> = 2;

        <android.media.ExifInterface: int IFD_TYPE_EXIF> = 1;

        <android.media.ExifInterface: int IFD_OFFSET> = 8;

        <android.media.ExifInterface: int IFD_FORMAT_USHORT> = 3;

        <android.media.ExifInterface: int IFD_FORMAT_URATIONAL> = 5;

        <android.media.ExifInterface: int IFD_FORMAT_UNDEFINED> = 7;

        <android.media.ExifInterface: int IFD_FORMAT_ULONG> = 4;

        <android.media.ExifInterface: int IFD_FORMAT_STRING> = 2;

        <android.media.ExifInterface: int IFD_FORMAT_SSHORT> = 8;

        <android.media.ExifInterface: int IFD_FORMAT_SRATIONAL> = 10;

        <android.media.ExifInterface: int IFD_FORMAT_SLONG> = 9;

        <android.media.ExifInterface: int IFD_FORMAT_SINGLE> = 11;

        <android.media.ExifInterface: int IFD_FORMAT_SBYTE> = 6;

        <android.media.ExifInterface: int IFD_FORMAT_IFD> = 13;

        <android.media.ExifInterface: int IFD_FORMAT_DOUBLE> = 12;

        <android.media.ExifInterface: int IFD_FORMAT_BYTE> = 1;

        <android.media.ExifInterface: int DATA_UNCOMPRESSED> = 1;

        <android.media.ExifInterface: int DATA_PACK_BITS_COMPRESSED> = 32773;

        <android.media.ExifInterface: int DATA_LOSSY_JPEG> = 34892;

        <android.media.ExifInterface: int DATA_JPEG_COMPRESSED> = 7;

        <android.media.ExifInterface: int DATA_JPEG> = 6;

        <android.media.ExifInterface: int DATA_HUFFMAN_COMPRESSED> = 2;

        <android.media.ExifInterface: int DATA_DEFLATE_ZIP> = 8;

        <android.media.ExifInterface: short BYTE_ALIGN_MM> = 19789;

        <android.media.ExifInterface: short BYTE_ALIGN_II> = 18761;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ExifInterface", 3);

        <android.media.ExifInterface: boolean DEBUG> = $z0;

        $r0 = newarray (byte)[3];

        $r0[0] = -1;

        $r0[1] = -40;

        $r0[2] = -1;

        <android.media.ExifInterface: byte[] JPEG_SIGNATURE> = $r0;

        $r1 = newarray (byte)[4];

        $r1[0] = 102;

        $r1[1] = 116;

        $r1[2] = 121;

        $r1[3] = 112;

        <android.media.ExifInterface: byte[] HEIF_TYPE_FTYP> = $r1;

        $r2 = newarray (byte)[4];

        $r2[0] = 109;

        $r2[1] = 105;

        $r2[2] = 102;

        $r2[3] = 49;

        <android.media.ExifInterface: byte[] HEIF_BRAND_MIF1> = $r2;

        $r3 = newarray (byte)[4];

        $r3[0] = 104;

        $r3[1] = 101;

        $r3[2] = 105;

        $r3[3] = 99;

        <android.media.ExifInterface: byte[] HEIF_BRAND_HEIC> = $r3;

        $r4 = newarray (byte)[6];

        $r4[0] = 79;

        $r4[1] = 76;

        $r4[2] = 89;

        $r4[3] = 77;

        $r4[4] = 80;

        $r4[5] = 0;

        <android.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1> = $r4;

        $r5 = newarray (byte)[10];

        $r5[0] = 79;

        $r5[1] = 76;

        $r5[2] = 89;

        $r5[3] = 77;

        $r5[4] = 80;

        $r5[5] = 85;

        $r5[6] = 83;

        $r5[7] = 0;

        $r5[8] = 73;

        $r5[9] = 73;

        <android.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2> = $r5;

        $r6 = newarray (byte)[8];

        $r6[0] = -119;

        $r6[1] = 80;

        $r6[2] = 78;

        $r6[3] = 71;

        $r6[4] = 13;

        $r6[5] = 10;

        $r6[6] = 26;

        $r6[7] = 10;

        <android.media.ExifInterface: byte[] PNG_SIGNATURE> = $r6;

        $r7 = newarray (byte)[4];

        $r7[0] = 101;

        $r7[1] = 88;

        $r7[2] = 73;

        $r7[3] = 102;

        <android.media.ExifInterface: byte[] PNG_CHUNK_TYPE_EXIF> = $r7;

        $r8 = newarray (byte)[4];

        $r8[0] = 73;

        $r8[1] = 72;

        $r8[2] = 68;

        $r8[3] = 82;

        <android.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IHDR> = $r8;

        $r9 = newarray (byte)[4];

        $r9[0] = 73;

        $r9[1] = 69;

        $r9[2] = 78;

        $r9[3] = 68;

        <android.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IEND> = $r9;

        $r10 = newarray (byte)[4];

        $r10[0] = 82;

        $r10[1] = 73;

        $r10[2] = 70;

        $r10[3] = 70;

        <android.media.ExifInterface: byte[] WEBP_SIGNATURE_1> = $r10;

        $r11 = newarray (byte)[4];

        $r11[0] = 87;

        $r11[1] = 69;

        $r11[2] = 66;

        $r11[3] = 80;

        <android.media.ExifInterface: byte[] WEBP_SIGNATURE_2> = $r11;

        $r12 = newarray (byte)[4];

        $r12[0] = 69;

        $r12[1] = 88;

        $r12[2] = 73;

        $r12[3] = 70;

        <android.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_EXIF> = $r12;

        $r13 = newarray (java.lang.String)[14];

        $r13[0] = "";

        $r13[1] = "BYTE";

        $r13[2] = "STRING";

        $r13[3] = "USHORT";

        $r13[4] = "ULONG";

        $r13[5] = "URATIONAL";

        $r13[6] = "SBYTE";

        $r13[7] = "UNDEFINED";

        $r13[8] = "SSHORT";

        $r13[9] = "SLONG";

        $r13[10] = "SRATIONAL";

        $r13[11] = "SINGLE";

        $r13[12] = "DOUBLE";

        $r13[13] = "IFD";

        <android.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES> = $r13;

        $r14 = newarray (int)[14];

        $r14[0] = 0;

        $r14[1] = 1;

        $r14[2] = 1;

        $r14[3] = 2;

        $r14[4] = 4;

        $r14[5] = 8;

        $r14[6] = 1;

        $r14[7] = 1;

        $r14[8] = 2;

        $r14[9] = 4;

        $r14[10] = 8;

        $r14[11] = 4;

        $r14[12] = 8;

        $r14[13] = 1;

        <android.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT> = $r14;

        $r15 = newarray (byte)[8];

        $r15[0] = 65;

        $r15[1] = 83;

        $r15[2] = 67;

        $r15[3] = 73;

        $r15[4] = 73;

        $r15[5] = 0;

        $r15[6] = 0;

        $r15[7] = 0;

        <android.media.ExifInterface: byte[] EXIF_ASCII_PREFIX> = $r15;

        $r16 = newarray (int)[3];

        $r16[0] = 8;

        $r16[1] = 8;

        $r16[2] = 8;

        <android.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB> = $r16;

        $r17 = newarray (int)[1];

        $r17[0] = 4;

        <android.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_1> = $r17;

        $r18 = newarray (int)[1];

        $r18[0] = 8;

        <android.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2> = $r18;

        $r19 = newarray (android.media.ExifInterface$ExifTag)[42];

        $r20 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r20.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("NewSubfileType", 254, 4, null);

        $r19[0] = $r20;

        $r21 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r21.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubfileType", 255, 4, null);

        $r19[1] = $r21;

        $r22 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r22.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("ImageWidth", 256, 3, 4, null);

        $r19[2] = $r22;

        $r23 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r23.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("ImageLength", 257, 3, 4, null);

        $r19[3] = $r23;

        $r24 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r24.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("BitsPerSample", 258, 3, null);

        $r19[4] = $r24;

        $r25 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r25.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Compression", 259, 3, null);

        $r19[5] = $r25;

        $r26 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r26.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("PhotometricInterpretation", 262, 3, null);

        $r19[6] = $r26;

        $r27 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r27.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ImageDescription", 270, 2, null);

        $r19[7] = $r27;

        $r28 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r28.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Make", 271, 2, null);

        $r19[8] = $r28;

        $r29 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r29.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Model", 272, 2, null);

        $r19[9] = $r29;

        $r30 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r30.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("StripOffsets", 273, 3, 4, null);

        $r19[10] = $r30;

        $r31 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r31.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Orientation", 274, 3, null);

        $r19[11] = $r31;

        $r32 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r32.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SamplesPerPixel", 277, 3, null);

        $r19[12] = $r32;

        $r33 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r33.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("RowsPerStrip", 278, 3, 4, null);

        $r19[13] = $r33;

        $r34 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r34.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("StripByteCounts", 279, 3, 4, null);

        $r19[14] = $r34;

        $r35 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r35.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("XResolution", 282, 5, null);

        $r19[15] = $r35;

        $r36 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r36.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("YResolution", 283, 5, null);

        $r19[16] = $r36;

        $r37 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r37.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("PlanarConfiguration", 284, 3, null);

        $r19[17] = $r37;

        $r38 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r38.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ResolutionUnit", 296, 3, null);

        $r19[18] = $r38;

        $r39 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r39.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("TransferFunction", 301, 3, null);

        $r19[19] = $r39;

        $r40 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r40.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Software", 305, 2, null);

        $r19[20] = $r40;

        $r41 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r41.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("DateTime", 306, 2, null);

        $r19[21] = $r41;

        $r42 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r42.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Artist", 315, 2, null);

        $r19[22] = $r42;

        $r43 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r43.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("WhitePoint", 318, 5, null);

        $r19[23] = $r43;

        $r44 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r44.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("PrimaryChromaticities", 319, 5, null);

        $r19[24] = $r44;

        $r45 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r45.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubIFDPointer", 330, 4, null);

        $r19[25] = $r45;

        $r46 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r46.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("JPEGInterchangeFormat", 513, 4, null);

        $r19[26] = $r46;

        $r47 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r47.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("JPEGInterchangeFormatLength", 514, 4, null);

        $r19[27] = $r47;

        $r48 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r48.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("YCbCrCoefficients", 529, 5, null);

        $r19[28] = $r48;

        $r49 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r49.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("YCbCrSubSampling", 530, 3, null);

        $r19[29] = $r49;

        $r50 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r50.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("YCbCrPositioning", 531, 3, null);

        $r19[30] = $r50;

        $r51 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r51.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ReferenceBlackWhite", 532, 5, null);

        $r19[31] = $r51;

        $r52 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r52.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Copyright", 33432, 2, null);

        $r19[32] = $r52;

        $r53 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r53.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ExifIFDPointer", 34665, 4, null);

        $r19[33] = $r53;

        $r54 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r54.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSInfoIFDPointer", 34853, 4, null);

        $r19[34] = $r54;

        $r55 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r55.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SensorTopBorder", 4, 4, null);

        $r19[35] = $r55;

        $r56 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r56.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SensorLeftBorder", 5, 4, null);

        $r19[36] = $r56;

        $r57 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r57.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SensorBottomBorder", 6, 4, null);

        $r19[37] = $r57;

        $r58 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r58.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SensorRightBorder", 7, 4, null);

        $r19[38] = $r58;

        $r59 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r59.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ISO", 23, 3, null);

        $r19[39] = $r59;

        $r60 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r60.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("JpgFromRaw", 46, 7, null);

        $r19[40] = $r60;

        $r61 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r61.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Xmp", 700, 1, null);

        $r19[41] = $r61;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS> = $r19;

        $r62 = newarray (android.media.ExifInterface$ExifTag)[62];

        $r63 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r63.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ExposureTime", 33434, 5, null);

        $r62[0] = $r63;

        $r64 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r64.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("FNumber", 33437, 5, null);

        $r62[1] = $r64;

        $r65 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r65.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ExposureProgram", 34850, 3, null);

        $r62[2] = $r65;

        $r66 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r66.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SpectralSensitivity", 34852, 2, null);

        $r62[3] = $r66;

        $r67 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r67.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ISOSpeedRatings", 34855, 3, null);

        $r62[4] = $r67;

        $r68 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r68.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("OECF", 34856, 7, null);

        $r62[5] = $r68;

        $r69 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r69.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ExifVersion", 36864, 2, null);

        $r62[6] = $r69;

        $r70 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r70.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("DateTimeOriginal", 36867, 2, null);

        $r62[7] = $r70;

        $r71 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r71.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("DateTimeDigitized", 36868, 2, null);

        $r62[8] = $r71;

        $r72 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r72.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("OffsetTime", 36880, 2, null);

        $r62[9] = $r72;

        $r73 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r73.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("OffsetTimeOriginal", 36881, 2, null);

        $r62[10] = $r73;

        $r74 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r74.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("OffsetTimeDigitized", 36882, 2, null);

        $r62[11] = $r74;

        $r75 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r75.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ComponentsConfiguration", 37121, 7, null);

        $r62[12] = $r75;

        $r76 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r76.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("CompressedBitsPerPixel", 37122, 5, null);

        $r62[13] = $r76;

        $r77 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r77.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ShutterSpeedValue", 37377, 10, null);

        $r62[14] = $r77;

        $r78 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r78.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ApertureValue", 37378, 5, null);

        $r62[15] = $r78;

        $r79 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r79.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("BrightnessValue", 37379, 10, null);

        $r62[16] = $r79;

        $r80 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r80.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ExposureBiasValue", 37380, 10, null);

        $r62[17] = $r80;

        $r81 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r81.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("MaxApertureValue", 37381, 5, null);

        $r62[18] = $r81;

        $r82 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r82.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubjectDistance", 37382, 5, null);

        $r62[19] = $r82;

        $r83 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r83.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("MeteringMode", 37383, 3, null);

        $r62[20] = $r83;

        $r84 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r84.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("LightSource", 37384, 3, null);

        $r62[21] = $r84;

        $r85 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r85.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Flash", 37385, 3, null);

        $r62[22] = $r85;

        $r86 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r86.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("FocalLength", 37386, 5, null);

        $r62[23] = $r86;

        $r87 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r87.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubjectArea", 37396, 3, null);

        $r62[24] = $r87;

        $r88 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r88.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("MakerNote", 37500, 7, null);

        $r62[25] = $r88;

        $r89 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r89.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("UserComment", 37510, 7, null);

        $r62[26] = $r89;

        $r90 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r90.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubSecTime", 37520, 2, null);

        $r62[27] = $r90;

        $r91 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r91.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubSecTimeOriginal", 37521, 2, null);

        $r62[28] = $r91;

        $r92 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r92.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubSecTimeDigitized", 37522, 2, null);

        $r62[29] = $r92;

        $r93 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r93.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("FlashpixVersion", 40960, 7, null);

        $r62[30] = $r93;

        $r94 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r94.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ColorSpace", 40961, 3, null);

        $r62[31] = $r94;

        $r95 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r95.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("PixelXDimension", 40962, 3, 4, null);

        $r62[32] = $r95;

        $r96 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r96.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("PixelYDimension", 40963, 3, 4, null);

        $r62[33] = $r96;

        $r97 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r97.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("RelatedSoundFile", 40964, 2, null);

        $r62[34] = $r97;

        $r98 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r98.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("InteroperabilityIFDPointer", 40965, 4, null);

        $r62[35] = $r98;

        $r99 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r99.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("FlashEnergy", 41483, 5, null);

        $r62[36] = $r99;

        $r100 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r100.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SpatialFrequencyResponse", 41484, 7, null);

        $r62[37] = $r100;

        $r101 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r101.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("FocalPlaneXResolution", 41486, 5, null);

        $r62[38] = $r101;

        $r102 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r102.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("FocalPlaneYResolution", 41487, 5, null);

        $r62[39] = $r102;

        $r103 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r103.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("FocalPlaneResolutionUnit", 41488, 3, null);

        $r62[40] = $r103;

        $r104 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r104.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubjectLocation", 41492, 3, null);

        $r62[41] = $r104;

        $r105 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r105.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ExposureIndex", 41493, 5, null);

        $r62[42] = $r105;

        $r106 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r106.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SensingMethod", 41495, 3, null);

        $r62[43] = $r106;

        $r107 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r107.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("FileSource", 41728, 7, null);

        $r62[44] = $r107;

        $r108 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r108.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SceneType", 41729, 7, null);

        $r62[45] = $r108;

        $r109 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r109.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("CFAPattern", 41730, 7, null);

        $r62[46] = $r109;

        $r110 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r110.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("CustomRendered", 41985, 3, null);

        $r62[47] = $r110;

        $r111 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r111.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ExposureMode", 41986, 3, null);

        $r62[48] = $r111;

        $r112 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r112.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("WhiteBalance", 41987, 3, null);

        $r62[49] = $r112;

        $r113 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r113.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("DigitalZoomRatio", 41988, 5, null);

        $r62[50] = $r113;

        $r114 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r114.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("FocalLengthIn35mmFilm", 41989, 3, null);

        $r62[51] = $r114;

        $r115 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r115.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SceneCaptureType", 41990, 3, null);

        $r62[52] = $r115;

        $r116 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r116.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GainControl", 41991, 3, null);

        $r62[53] = $r116;

        $r117 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r117.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Contrast", 41992, 3, null);

        $r62[54] = $r117;

        $r118 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r118.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Saturation", 41993, 3, null);

        $r62[55] = $r118;

        $r119 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r119.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Sharpness", 41994, 3, null);

        $r62[56] = $r119;

        $r120 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r120.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("DeviceSettingDescription", 41995, 7, null);

        $r62[57] = $r120;

        $r121 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r121.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubjectDistanceRange", 41996, 3, null);

        $r62[58] = $r121;

        $r122 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r122.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ImageUniqueID", 42016, 2, null);

        $r62[59] = $r122;

        $r123 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r123.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("DNGVersion", 50706, 1, null);

        $r62[60] = $r123;

        $r124 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r124.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("DefaultCropSize", 50720, 3, 4, null);

        $r62[61] = $r124;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS> = $r62;

        $r125 = newarray (android.media.ExifInterface$ExifTag)[31];

        $r126 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r126.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSVersionID", 0, 1, null);

        $r125[0] = $r126;

        $r127 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r127.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSLatitudeRef", 1, 2, null);

        $r125[1] = $r127;

        $r128 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r128.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSLatitude", 2, 5, null);

        $r125[2] = $r128;

        $r129 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r129.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSLongitudeRef", 3, 2, null);

        $r125[3] = $r129;

        $r130 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r130.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSLongitude", 4, 5, null);

        $r125[4] = $r130;

        $r131 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r131.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSAltitudeRef", 5, 1, null);

        $r125[5] = $r131;

        $r132 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r132.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSAltitude", 6, 5, null);

        $r125[6] = $r132;

        $r133 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r133.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSTimeStamp", 7, 5, null);

        $r125[7] = $r133;

        $r134 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r134.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSSatellites", 8, 2, null);

        $r125[8] = $r134;

        $r135 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r135.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSStatus", 9, 2, null);

        $r125[9] = $r135;

        $r136 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r136.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSMeasureMode", 10, 2, null);

        $r125[10] = $r136;

        $r137 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r137.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDOP", 11, 5, null);

        $r125[11] = $r137;

        $r138 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r138.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSSpeedRef", 12, 2, null);

        $r125[12] = $r138;

        $r139 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r139.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSSpeed", 13, 5, null);

        $r125[13] = $r139;

        $r140 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r140.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSTrackRef", 14, 2, null);

        $r125[14] = $r140;

        $r141 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r141.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSTrack", 15, 5, null);

        $r125[15] = $r141;

        $r142 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r142.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSImgDirectionRef", 16, 2, null);

        $r125[16] = $r142;

        $r143 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r143.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSImgDirection", 17, 5, null);

        $r125[17] = $r143;

        $r144 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r144.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSMapDatum", 18, 2, null);

        $r125[18] = $r144;

        $r145 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r145.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDestLatitudeRef", 19, 2, null);

        $r125[19] = $r145;

        $r146 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r146.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDestLatitude", 20, 5, null);

        $r125[20] = $r146;

        $r147 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r147.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDestLongitudeRef", 21, 2, null);

        $r125[21] = $r147;

        $r148 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r148.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDestLongitude", 22, 5, null);

        $r125[22] = $r148;

        $r149 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r149.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDestBearingRef", 23, 2, null);

        $r125[23] = $r149;

        $r150 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r150.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDestBearing", 24, 5, null);

        $r125[24] = $r150;

        $r151 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r151.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDestDistanceRef", 25, 2, null);

        $r125[25] = $r151;

        $r152 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r152.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDestDistance", 26, 5, null);

        $r125[26] = $r152;

        $r153 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r153.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSProcessingMethod", 27, 7, null);

        $r125[27] = $r153;

        $r154 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r154.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSAreaInformation", 28, 7, null);

        $r125[28] = $r154;

        $r155 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r155.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDateStamp", 29, 2, null);

        $r125[29] = $r155;

        $r156 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r156.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSDifferential", 30, 3, null);

        $r125[30] = $r156;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] IFD_GPS_TAGS> = $r125;

        $r157 = newarray (android.media.ExifInterface$ExifTag)[1];

        $r158 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r158.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("InteroperabilityIndex", 1, 2, null);

        $r157[0] = $r158;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS> = $r157;

        $r159 = newarray (android.media.ExifInterface$ExifTag)[37];

        $r160 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r160.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("NewSubfileType", 254, 4, null);

        $r159[0] = $r160;

        $r161 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r161.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubfileType", 255, 4, null);

        $r159[1] = $r161;

        $r162 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r162.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("ThumbnailImageWidth", 256, 3, 4, null);

        $r159[2] = $r162;

        $r163 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r163.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("ThumbnailImageLength", 257, 3, 4, null);

        $r159[3] = $r163;

        $r164 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r164.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("BitsPerSample", 258, 3, null);

        $r159[4] = $r164;

        $r165 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r165.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Compression", 259, 3, null);

        $r159[5] = $r165;

        $r166 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r166.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("PhotometricInterpretation", 262, 3, null);

        $r159[6] = $r166;

        $r167 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r167.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ImageDescription", 270, 2, null);

        $r159[7] = $r167;

        $r168 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r168.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Make", 271, 2, null);

        $r159[8] = $r168;

        $r169 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r169.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Model", 272, 2, null);

        $r159[9] = $r169;

        $r170 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r170.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("StripOffsets", 273, 3, 4, null);

        $r159[10] = $r170;

        $r171 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r171.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ThumbnailOrientation", 274, 3, null);

        $r159[11] = $r171;

        $r172 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r172.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SamplesPerPixel", 277, 3, null);

        $r159[12] = $r172;

        $r173 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r173.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("RowsPerStrip", 278, 3, 4, null);

        $r159[13] = $r173;

        $r174 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r174.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("StripByteCounts", 279, 3, 4, null);

        $r159[14] = $r174;

        $r175 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r175.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("XResolution", 282, 5, null);

        $r159[15] = $r175;

        $r176 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r176.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("YResolution", 283, 5, null);

        $r159[16] = $r176;

        $r177 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r177.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("PlanarConfiguration", 284, 3, null);

        $r159[17] = $r177;

        $r178 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r178.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ResolutionUnit", 296, 3, null);

        $r159[18] = $r178;

        $r179 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r179.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("TransferFunction", 301, 3, null);

        $r159[19] = $r179;

        $r180 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r180.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Software", 305, 2, null);

        $r159[20] = $r180;

        $r181 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r181.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("DateTime", 306, 2, null);

        $r159[21] = $r181;

        $r182 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r182.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Artist", 315, 2, null);

        $r159[22] = $r182;

        $r183 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r183.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("WhitePoint", 318, 5, null);

        $r159[23] = $r183;

        $r184 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r184.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("PrimaryChromaticities", 319, 5, null);

        $r159[24] = $r184;

        $r185 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r185.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubIFDPointer", 330, 4, null);

        $r159[25] = $r185;

        $r186 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r186.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("JPEGInterchangeFormat", 513, 4, null);

        $r159[26] = $r186;

        $r187 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r187.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("JPEGInterchangeFormatLength", 514, 4, null);

        $r159[27] = $r187;

        $r188 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r188.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("YCbCrCoefficients", 529, 5, null);

        $r159[28] = $r188;

        $r189 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r189.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("YCbCrSubSampling", 530, 3, null);

        $r159[29] = $r189;

        $r190 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r190.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("YCbCrPositioning", 531, 3, null);

        $r159[30] = $r190;

        $r191 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r191.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ReferenceBlackWhite", 532, 5, null);

        $r159[31] = $r191;

        $r192 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r192.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("Copyright", 33432, 2, null);

        $r159[32] = $r192;

        $r193 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r193.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ExifIFDPointer", 34665, 4, null);

        $r159[33] = $r193;

        $r194 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r194.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSInfoIFDPointer", 34853, 4, null);

        $r159[34] = $r194;

        $r195 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r195.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("DNGVersion", 50706, 1, null);

        $r159[35] = $r195;

        $r196 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r196.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int,android.media.ExifInterface$1)>("DefaultCropSize", 50720, 3, 4, null);

        $r159[36] = $r196;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS> = $r159;

        $r197 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r197.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("StripOffsets", 273, 3, null);

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE> = $r197;

        $r198 = newarray (android.media.ExifInterface$ExifTag)[3];

        $r199 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r199.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ThumbnailImage", 256, 7, null);

        $r198[0] = $r199;

        $r200 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r200.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("CameraSettingsIFDPointer", 8224, 4, null);

        $r198[1] = $r200;

        $r201 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r201.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ImageProcessingIFDPointer", 8256, 4, null);

        $r198[2] = $r201;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS> = $r198;

        $r202 = newarray (android.media.ExifInterface$ExifTag)[2];

        $r203 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r203.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("PreviewImageStart", 257, 4, null);

        $r202[0] = $r203;

        $r204 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r204.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("PreviewImageLength", 258, 4, null);

        $r202[1] = $r204;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS> = $r202;

        $r205 = newarray (android.media.ExifInterface$ExifTag)[1];

        $r206 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r206.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("AspectFrame", 4371, 3, null);

        $r205[0] = $r206;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS> = $r205;

        r292 = newarray (android.media.ExifInterface$ExifTag)[1];

        $r207 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r207.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ColorSpace", 55, 3, null);

        r292[0] = $r207;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] PEF_TAGS> = r292;

        r293 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS>;

        $r208 = newarray (android.media.ExifInterface$ExifTag[])[10];

        $r208[0] = r293;

        $r209 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS>;

        $r208[1] = $r209;

        $r210 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] IFD_GPS_TAGS>;

        $r208[2] = $r210;

        $r211 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS>;

        $r208[3] = $r211;

        $r212 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS>;

        $r208[4] = $r212;

        $r208[5] = r293;

        $r213 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS>;

        $r208[6] = $r213;

        $r214 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS>;

        $r208[7] = $r214;

        $r215 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS>;

        $r208[8] = $r215;

        $r208[9] = r292;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS> = $r208;

        $r216 = newarray (android.media.ExifInterface$ExifTag)[6];

        $r217 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r217.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("SubIFDPointer", 330, 4, null);

        $r216[0] = $r217;

        $r218 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r218.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ExifIFDPointer", 34665, 4, null);

        $r216[1] = $r218;

        $r219 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r219.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("GPSInfoIFDPointer", 34853, 4, null);

        $r216[2] = $r219;

        $r220 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r220.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("InteroperabilityIFDPointer", 40965, 4, null);

        $r216[3] = $r220;

        $r221 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r221.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("CameraSettingsIFDPointer", 8224, 1, null);

        $r216[4] = $r221;

        $r222 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r222.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("ImageProcessingIFDPointer", 8256, 1, null);

        $r216[5] = $r222;

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS> = $r216;

        $r223 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r223.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("JPEGInterchangeFormat", 513, 4, null);

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG> = $r223;

        $r224 = new android.media.ExifInterface$ExifTag;

        specialinvoke $r224.<android.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,android.media.ExifInterface$1)>("JPEGInterchangeFormatLength", 514, 4, null);

        <android.media.ExifInterface: android.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG> = $r224;

        r294 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof r294;

        $r225 = newarray (java.util.HashMap)[$i1];

        <android.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading> = $r225;

        $i2 = lengthof r294;

        $r226 = newarray (java.util.HashMap)[$i2];

        <android.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting> = $r226;

        $r227 = new java.util.HashSet;

        $r228 = newarray (java.lang.String)[5];

        $r228[0] = "FNumber";

        $r228[1] = "DigitalZoomRatio";

        $r228[2] = "ExposureTime";

        $r228[3] = "SubjectDistance";

        $r228[4] = "GPSTimeStamp";

        $r229 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r228);

        specialinvoke $r227.<java.util.HashSet: void <init>(java.util.Collection)>($r229);

        <android.media.ExifInterface: java.util.HashSet sTagSetForCompatibility> = $r227;

        $r230 = new java.util.HashMap;

        specialinvoke $r230.<java.util.HashMap: void <init>()>();

        <android.media.ExifInterface: java.util.HashMap sExifPointerTagMap> = $r230;

        r295 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <android.media.ExifInterface: java.nio.charset.Charset ASCII> = r295;

        $r231 = "Exif\u0000\u0000";

        $r232 = virtualinvoke $r231.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(r295);

        <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1> = $r232;

        $r234 = "http://ns.adobe.com/xap/1.0/\u0000";

        $r233 = <android.media.ExifInterface: java.nio.charset.Charset ASCII>;

        $r235 = virtualinvoke $r234.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r233);

        <android.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1> = $r235;

        $r236 = new java.text.SimpleDateFormat;

        specialinvoke $r236.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy:MM:dd HH:mm:ss");

        <android.media.ExifInterface: java.text.SimpleDateFormat sFormatter> = $r236;

        $r237 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r236.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r237);

        $r238 = new java.text.SimpleDateFormat;

        specialinvoke $r238.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy:MM:dd HH:mm:ss XXX");

        <android.media.ExifInterface: java.text.SimpleDateFormat sFormatterTz> = $r238;

        $r239 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r238.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r239);

        i11 = 0;

     label1:
        $r240 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i3 = lengthof $r240;

        if i11 >= $i3 goto label4;

        $r280 = <android.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>;

        $r279 = new java.util.HashMap;

        specialinvoke $r279.<java.util.HashMap: void <init>()>();

        $r280[i11] = $r279;

        $r282 = <android.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r281 = new java.util.HashMap;

        specialinvoke $r281.<java.util.HashMap: void <init>()>();

        $r282[i11] = $r281;

        $r283 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        r298 = $r283[i11];

        i0 = lengthof r298;

        i12 = 0;

     label2:
        if i12 >= i0 goto label3;

        r299 = r298[i12];

        $r284 = <android.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>;

        $r285 = $r284[i11];

        $i10 = r299.<android.media.ExifInterface$ExifTag: int number>;

        $r286 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        virtualinvoke $r285.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r286, r299);

        $r288 = <android.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r290 = $r288[i11];

        $r289 = r299.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        virtualinvoke $r290.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r289, r299);

        i12 = i12 + 1;

        goto label2;

     label3:
        i11 = i11 + 1;

        goto label1;

     label4:
        $r243 = <android.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r241 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r242 = $r241[0];

        $i4 = $r242.<android.media.ExifInterface$ExifTag: int number>;

        $r244 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r245 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        virtualinvoke $r243.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r244, $r245);

        $r249 = <android.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r247 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r248 = $r247[1];

        $i5 = $r248.<android.media.ExifInterface$ExifTag: int number>;

        $r250 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r251 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r249.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r250, $r251);

        $r255 = <android.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r253 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r254 = $r253[2];

        $i6 = $r254.<android.media.ExifInterface$ExifTag: int number>;

        $r256 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r257 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r255.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r256, $r257);

        $r261 = <android.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r259 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r260 = $r259[3];

        $i7 = $r260.<android.media.ExifInterface$ExifTag: int number>;

        $r262 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r263 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r261.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r262, $r263);

        $r267 = <android.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r265 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r266 = $r265[4];

        $i8 = $r266.<android.media.ExifInterface$ExifTag: int number>;

        $r268 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r269 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        virtualinvoke $r267.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r268, $r269);

        $r273 = <android.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r271 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r272 = $r271[5];

        $i9 = $r272.<android.media.ExifInterface$ExifTag: int number>;

        $r274 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r275 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        virtualinvoke $r273.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r274, $r275);

        $r277 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(".*[1-9].*");

        <android.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern> = $r277;

        $r278 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^([0-9][0-9]):([0-9][0-9]):([0-9][0-9])$");

        <android.media.ExifInterface: java.util.regex.Pattern sGpsTimestampPattern> = $r278;

        return;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.io.File r1;
        android.media.ExifInterface$ExifTag[][] $r2, $r5;
        int $i0, $i1;
        java.util.HashMap[] $r3;
        java.util.HashSet $r4;
        java.nio.ByteOrder $r6;
        java.lang.NullPointerException $r7;
        java.lang.String $r8;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        $r3 = newarray (java.util.HashMap)[$i0];

        r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes> = $r3;

        $r4 = new java.util.HashSet;

        $r5 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r5;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i1);

        r0.<android.media.ExifInterface: java.util.Set mHandledIfdOffsets> = $r4;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r6;

        if r1 == null goto label1;

        $r8 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke r0.<android.media.ExifInterface: void initForFilename(java.lang.String)>($r8);

        return;

     label1:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("file cannot be null");

        throw $r7;
    }

    public void <init>(java.io.FileDescriptor) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ExifTag[][] $r2, $r5;
        int $i0, $i1;
        java.util.HashMap[] $r3;
        java.nio.ByteOrder $r6;
        boolean $z0, z1;
        java.lang.Throwable $r8, $r9;
        java.io.IOException $r10;
        java.io.FileDescriptor r11, r12;
        java.io.FileInputStream r14, r18;
        java.util.HashSet r17;
        java.lang.NullPointerException r19;
        android.system.ErrnoException r20;

        r0 := @this: android.media.ExifInterface;

        r11 := @parameter0: java.io.FileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        $r3 = newarray (java.util.HashMap)[$i0];

        r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes> = $r3;

        r17 = new java.util.HashSet;

        $r5 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r5;

        specialinvoke r17.<java.util.HashSet: void <init>(int)>($i1);

        r0.<android.media.ExifInterface: java.util.Set mHandledIfdOffsets> = r17;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r6;

        if r11 == null goto label13;

        r0.<android.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        r0.<android.media.ExifInterface: java.lang.String mFilename> = null;

        z1 = 0;

        $z0 = staticinvoke <android.media.ExifInterface: boolean isSeekableFD(java.io.FileDescriptor)>(r11);

        if $z0 == 0 goto label04;

        r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = r11;

     label01:
        r12 = staticinvoke <android.system.Os: java.io.FileDescriptor dup(java.io.FileDescriptor)>(r11);

     label02:
        z1 = 1;

        goto label05;

     label03:
        $r9 := @caughtexception;

        r20 = (android.system.ErrnoException) $r9;

        $r10 = virtualinvoke r20.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r10;

     label04:
        r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = null;

        r12 = r11;

     label05:
        r0.<android.media.ExifInterface: boolean mIsInputStream> = 0;

        r14 = null;

     label06:
        r18 = new java.io.FileInputStream;

     label07:
        r14 = null;

     label08:
        specialinvoke r18.<java.io.FileInputStream: void <init>(java.io.FileDescriptor,boolean)>(r12, z1);

     label09:
        r14 = r18;

     label10:
        specialinvoke r0.<android.media.ExifInterface: void loadAttributes(java.io.InputStream)>(r18);

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r18);

        return;

     label12:
        $r8 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r14);

        throw $r8;

     label13:
        r19 = new java.lang.NullPointerException;

        specialinvoke r19.<java.lang.NullPointerException: void <init>(java.lang.String)>("fileDescriptor cannot be null");

        throw r19;

        catch android.system.ErrnoException from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.io.InputStream r1;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<android.media.ExifInterface: void <init>(java.io.InputStream,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.io.InputStream, int) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.io.InputStream r1;
        int i0;
        boolean z0;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        specialinvoke r0.<android.media.ExifInterface: void <init>(java.io.InputStream,boolean)>(r1, z0);

        return;
    }

    private void <init>(java.io.InputStream, boolean) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.media.ExifInterface$ExifTag[][] $r1, $r4;
        int $i0, $i1;
        java.util.HashMap[] $r2;
        java.nio.ByteOrder $r5;
        java.io.FileInputStream $r7, $r9;
        java.io.FileDescriptor $r8, $r10;
        android.content.res.AssetManager$AssetInputStream $r11;
        java.io.BufferedInputStream $r13, r16;
        java.lang.Object r14;
        java.util.HashSet r15;
        java.lang.NullPointerException r17;
        java.io.InputStream r18, r19;

        r0 := @this: android.media.ExifInterface;

        r14 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r1;

        $r2 = newarray (java.util.HashMap)[$i0];

        r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes> = $r2;

        r15 = new java.util.HashSet;

        $r4 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r4;

        specialinvoke r15.<java.util.HashSet: void <init>(int)>($i1);

        r0.<android.media.ExifInterface: java.util.Set mHandledIfdOffsets> = r15;

        $r5 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r5;

        if r14 == null goto label6;

        r0.<android.media.ExifInterface: java.lang.String mFilename> = null;

        if z0 == 0 goto label2;

        r16 = new java.io.BufferedInputStream;

        r18 = (java.io.InputStream) r14;

        specialinvoke r16.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r18, 5000);

        r14 = r16;

        $r13 = (java.io.BufferedInputStream) r16;

        $z4 = staticinvoke <android.media.ExifInterface: boolean isExifDataOnly(java.io.BufferedInputStream)>($r13);

        if $z4 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", "Given data does not follow the structure of an Exif-only data.");

        return;

     label1:
        r0.<android.media.ExifInterface: boolean mIsExifDataOnly> = 1;

        r0.<android.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = null;

        goto label5;

     label2:
        $z1 = r14 instanceof android.content.res.AssetManager$AssetInputStream;

        if $z1 == 0 goto label3;

        $r11 = (android.content.res.AssetManager$AssetInputStream) r14;

        r0.<android.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = $r11;

        r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = null;

        goto label5;

     label3:
        $z2 = r14 instanceof java.io.FileInputStream;

        if $z2 == 0 goto label4;

        $r7 = (java.io.FileInputStream) r14;

        $r8 = virtualinvoke $r7.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        $z3 = staticinvoke <android.media.ExifInterface: boolean isSeekableFD(java.io.FileDescriptor)>($r8);

        if $z3 == 0 goto label4;

        r0.<android.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        $r9 = (java.io.FileInputStream) r14;

        $r10 = virtualinvoke $r9.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = $r10;

        goto label5;

     label4:
        r0.<android.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = null;

     label5:
        r19 = (java.io.InputStream) r14;

        specialinvoke r0.<android.media.ExifInterface: void loadAttributes(java.io.InputStream)>(r19);

        return;

     label6:
        r17 = new java.lang.NullPointerException;

        specialinvoke r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("inputStream cannot be null");

        throw r17;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.lang.String r1;
        android.media.ExifInterface$ExifTag[][] $r2, $r5;
        int $i0, $i1;
        java.util.HashMap[] $r3;
        java.util.HashSet $r4;
        java.nio.ByteOrder $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        $r3 = newarray (java.util.HashMap)[$i0];

        r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes> = $r3;

        $r4 = new java.util.HashSet;

        $r5 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r5;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i1);

        r0.<android.media.ExifInterface: java.util.Set mHandledIfdOffsets> = $r4;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r6;

        if r1 == null goto label1;

        specialinvoke r0.<android.media.ExifInterface: void initForFilename(java.lang.String)>(r1);

        return;

     label1:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("filename cannot be null");

        throw $r7;
    }

    static int[] access$000()
    {
        int[] $r0;

        $r0 = <android.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        return $r0;
    }

    static java.nio.charset.Charset access$100()
    {
        java.nio.charset.Charset $r0;

        $r0 = <android.media.ExifInterface: java.nio.charset.Charset ASCII>;

        return $r0;
    }

    static java.lang.String[] access$200()
    {
        java.lang.String[] $r0;

        $r0 = <android.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        return $r0;
    }

    static byte[] access$300()
    {
        byte[] $r0;

        $r0 = <android.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>;

        return $r0;
    }

    private void addDefaultValuesForCompatibility()
    {
        android.media.ExifInterface r0;
        java.lang.String r1, $r2, $r3, $r4, $r25, $r30;
        java.util.HashMap[] $r5, $r10, $r15, $r20, $r26;
        java.nio.ByteOrder $r6, $r11, $r16, $r21;
        java.util.HashMap $r7, $r12, $r17, $r22, $r27;
        android.media.ExifInterface$ExifAttribute $r8, $r13, $r18, $r23, $r28;

        r0 := @this: android.media.ExifInterface;

        r1 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTimeOriginal");

        if r1 == null goto label1;

        $r25 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTime");

        if $r25 != null goto label1;

        $r26 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r27 = $r26[0];

        $r28 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createString(java.lang.String)>(r1);

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("DateTime", $r28);

     label1:
        $r30 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("ImageWidth");

        if $r30 != null goto label2;

        $r20 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r22 = $r20[0];

        $r21 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r23 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r21);

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", $r23);

     label2:
        $r2 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("ImageLength");

        if $r2 != null goto label3;

        $r15 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r15[0];

        $r16 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r18 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r16);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", $r18);

     label3:
        $r3 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("Orientation");

        if $r3 != null goto label4;

        $r10 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r10[0];

        $r11 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r13 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(0, $r11);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Orientation", $r13);

     label4:
        $r4 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("LightSource");

        if $r4 != null goto label5;

        $r5 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r7 = $r5[1];

        $r6 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r8 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r6);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("LightSource", $r8);

     label5:
        return;
    }

    private static java.lang.String byteArrayToHexString(byte[])
    {
        byte[] r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, i4;
        java.lang.String $r3, $r6;
        java.lang.Object[] $r4;
        byte $b3;
        java.lang.Byte $r5;

        r0 := @parameter0: byte[];

        $r2 = new java.lang.StringBuilder;

        $i0 = lengthof r0;

        $i1 = $i0 * 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);

        i4 = 0;

     label1:
        $i2 = lengthof r0;

        if i4 >= $i2 goto label2;

        $r4 = newarray (java.lang.Object)[1];

        $b3 = r0[i4];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x", $r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private boolean containsMatch(byte[], byte[])
    {
        android.media.ExifInterface r0;
        byte[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, i9, i10;
        byte $b5, $b6;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i9 = 0;

     label1:
        $i1 = lengthof r1;

        $i0 = lengthof r2;

        $i2 = $i1 - $i0;

        if i9 >= $i2 goto label6;

        i10 = 0;

     label2:
        $i3 = lengthof r2;

        if i10 >= $i3 goto label5;

        $i4 = i9 + i10;

        $b6 = r1[$i4];

        $b5 = r2[i10];

        if $b6 == $b5 goto label3;

        goto label5;

     label3:
        $i7 = lengthof r2;

        $i8 = $i7 - 1;

        if i10 != $i8 goto label4;

        return 1;

     label4:
        i10 = i10 + 1;

        goto label2;

     label5:
        i9 = i9 + 1;

        goto label1;

     label6:
        return 0;
    }

    public static float convertRationalLatLonToFloat(java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, r18;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13;
        boolean z0, $z1;
        float $f0, $f1;
        java.lang.Throwable $r16;
        java.lang.IllegalArgumentException $r17;
        java.lang.String[] r19, r20, r21, r22;

        r18 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

     label1:
        r19 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r1 = r19[0];

        r20 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r2 = r20[0];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        $r4 = r20[1];

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r5);

        d12 = $d2 / $d3;

        $r6 = r19[1];

        r21 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r7 = r21[0];

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r8);

        $r9 = r21[1];

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r10);

        d0 = $d4 / $d5;

        $r11 = r19[2];

        r22 = virtualinvoke $r11.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r12 = r22[0];

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        $d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r13);

        $r14 = r22[1];

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        $d7 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);

        d1 = $d6 / $d7;

     label2:
        $d8 = d0 / 60.0;

        $d10 = $d8 + d12;

        $d9 = d1 / 3600.0;

        d13 = $d10 + $d9;

     label3:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("S");

        if $z1 != 0 goto label6;

        z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("W");

     label4:
        if z0 == 0 goto label5;

        goto label6;

     label5:
        $f1 = (float) d13;

        return $f1;

     label6:
        $d11 = neg d13;

        $f0 = (float) $d11;

        return $f0;

     label7:
        $r16 := @caughtexception;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r17;

        catch java.lang.NumberFormatException from label1 to label2 with label7;
        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label7;
        catch java.lang.NumberFormatException from label3 to label4 with label7;
        catch java.lang.ArrayIndexOutOfBoundsException from label3 to label4 with label7;
    }

    private static long[] convertToLongArray(java.lang.Object)
    {
        int[] r0;
        boolean $z0, $z1;
        long[] $r1, r3;
        int $i0, $i1, $i2, i4;
        long $l3;
        java.lang.Object r2;

        r2 := @parameter0: java.lang.Object;

        $z0 = r2 instanceof int[];

        if $z0 == 0 goto label3;

        r0 = (int[]) r2;

        $i0 = lengthof r0;

        r3 = newarray (long)[$i0];

        i4 = 0;

     label1:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label2;

        $i2 = r0[i4];

        $l3 = (long) $i2;

        r3[i4] = $l3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r3;

     label3:
        $z1 = r2 instanceof long[];

        if $z1 == 0 goto label4;

        $r1 = (long[]) r2;

        return $r1;

     label4:
        return null;
    }

    private static void copy(java.io.InputStream, java.io.OutputStream, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.io.OutputStream r1;
        byte[] r2;
        int i0, i1, i2;
        java.io.IOException $r3;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        i2 := @parameter2: int;

        r2 = newarray (byte)[8192];

     label1:
        if i2 <= 0 goto label3;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i2, 8192);

        i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, i0);

        if i1 != i0 goto label2;

        i2 = i2 - i1;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, i1);

        goto label1;

     label2:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Failed to copy the given amount of bytes from the inputstream to the output stream.");

        throw $r3;

     label3:
        return;
    }

    private android.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)
    {
        android.media.ExifInterface r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.NullPointerException $r3;
        android.media.ExifInterface$ExifTag[][] $r4;
        int $i0, i1;
        java.util.HashMap[] $r5;
        java.util.HashMap $r6;
        android.media.ExifInterface$ExifAttribute $r7;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label4;

        i1 = 0;

     label1:
        $r4 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r4;

        if i1 >= $i0 goto label3;

        $r5 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r6 = $r5[i1];

        r2 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label2;

        $r7 = (android.media.ExifInterface$ExifAttribute) r2;

        return $r7;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;

     label4:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r3;
    }

    private void getHeifAttributes(android.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.lang.String r2, r3, r4, $r6, $r7, $r14, r32, r33, r34, r35;
        long l0;
        int i1, $i3, $i4, $i5, $i6, i8, i9, i10, i11;
        android.media.MediaMetadataRetriever $r5;
        boolean $z0, $z1, $z2, $z3;
        byte[] $r15, r40, r41;
        java.util.HashMap[] $r17, $r22, $r36;
        java.util.HashMap $r18, $r23, $r37;
        java.nio.ByteOrder $r19, $r24, $r38;
        android.media.ExifInterface$ExifAttribute $r20, $r25, $r39;
        java.lang.Throwable $r27, $r28, $r29, r45;
        android.media.ExifInterface$ByteOrderedDataInputStream r30;
        android.media.ExifInterface$1 r31;
        byte b7;
        java.io.IOException r42, r43, r44, r46;
        java.lang.StringBuilder r47;

        r0 := @this: android.media.ExifInterface;

        r30 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        $r5 = new android.media.MediaMetadataRetriever;

        specialinvoke $r5.<android.media.MediaMetadataRetriever: void <init>()>();

     label01:
        r31 = new android.media.ExifInterface$1;

        specialinvoke r31.<android.media.ExifInterface$1: void <init>(android.media.ExifInterface,android.media.ExifInterface$ByteOrderedDataInputStream)>(r0, r30);

        virtualinvoke $r5.<android.media.MediaMetadataRetriever: void setDataSource(android.media.MediaDataSource)>(r31);

        r32 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(33);

        r2 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(34);

        r3 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(26);

        r4 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(17);

     label02:
        r33 = null;

        r34 = null;

        r35 = null;

     label03:
        $r6 = "yes";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label05;

        r33 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(29);

        r34 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(30);

        r35 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(31);

     label04:
        goto label06;

     label05:
        $r7 = "yes";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label06;

        r33 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(18);

        r34 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(19);

        r35 = virtualinvoke $r5.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(24);

     label06:
        if r33 == null goto label08;

     label07:
        $r22 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r23 = $r22[0];

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r33);

        $r24 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r25 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i6, $r24);

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", $r25);

     label08:
        if r34 == null goto label10;

     label09:
        $r17 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r18 = $r17[0];

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r34);

        $r19 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r20 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i5, $r19);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", $r20);

     label10:
        if r35 == null goto label17;

        b7 = 1;

     label11:
        i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r35);

     label12:
        if i8 == 90 goto label15;

        if i8 == 180 goto label14;

        if i8 == 270 goto label13;

        goto label16;

     label13:
        b7 = 8;

        goto label16;

     label14:
        b7 = 3;

        goto label16;

     label15:
        b7 = 6;

     label16:
        $r36 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r37 = $r36[0];

        $r38 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r39 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(b7, $r38);

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Orientation", $r39);

     label17:
        if r32 == null goto label31;

        if r2 == null goto label31;

     label18:
        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r32);

        i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label19:
        if i10 <= 6 goto label30;

        l0 = (long) i9;

     label20:
        virtualinvoke r30.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l0);

        r40 = newarray (byte)[6];

        $i3 = virtualinvoke r30.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r40);

        if $i3 != 6 goto label28;

     label21:
        i11 = i10 + -6;

     label22:
        $r15 = <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r40, $r15);

        if $z2 == 0 goto label27;

        r41 = newarray (byte)[i11];

        i1 = virtualinvoke r30.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r41);

     label23:
        if i1 != i11 goto label26;

     label24:
        $i4 = i9 + 6;

        r0.<android.media.ExifInterface: int mExifOffset> = $i4;

        specialinvoke r0.<android.media.ExifInterface: void readExifSegment(byte[],int)>(r41, 0);

     label25:
        goto label31;

     label26:
        r42 = new java.io.IOException;

        specialinvoke r42.<java.io.IOException: void <init>(java.lang.String)>("Can\'t read exif");

        throw r42;

     label27:
        r43 = new java.io.IOException;

        specialinvoke r43.<java.io.IOException: void <init>(java.lang.String)>("Invalid identifier");

        throw r43;

     label28:
        r44 = new java.io.IOException;

        specialinvoke r44.<java.io.IOException: void <init>(java.lang.String)>("Can\'t read identifier");

        throw r44;

     label29:
        $r28 := @caughtexception;

        r45 = $r28;

        goto label35;

     label30:
        r46 = new java.io.IOException;

        specialinvoke r46.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif length");

        throw r46;

     label31:
        $z3 = <android.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label32;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Heif meta: ");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rotation ");

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r14 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r14);

     label32:
        virtualinvoke $r5.<android.media.MediaMetadataRetriever: void release()>();

        return;

     label33:
        $r27 := @caughtexception;

        r45 = $r27;

        goto label35;

     label34:
        $r29 := @caughtexception;

        r45 = $r29;

     label35:
        virtualinvoke $r5.<android.media.MediaMetadataRetriever: void release()>();

        throw r45;

        catch java.lang.Throwable from label01 to label02 with label34;
        catch java.lang.Throwable from label03 to label04 with label34;
        catch java.lang.Throwable from label05 to label06 with label34;
        catch java.lang.Throwable from label07 to label08 with label34;
        catch java.lang.Throwable from label09 to label10 with label34;
        catch java.lang.Throwable from label11 to label12 with label34;
        catch java.lang.Throwable from label16 to label17 with label34;
        catch java.lang.Throwable from label18 to label19 with label34;
        catch java.lang.Throwable from label20 to label21 with label29;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.lang.Throwable from label26 to label27 with label33;
        catch java.lang.Throwable from label27 to label28 with label33;
        catch java.lang.Throwable from label28 to label29 with label33;
        catch java.lang.Throwable from label30 to label31 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
    }

    private void getJpegAttributes(android.media.ExifInterface$ByteOrderedDataInputStream, int, int) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        int i0, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i29, i34, i37, i39, i41, i42, i43, $i44, i45;
        byte b2, $b5, b35, b40;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.nio.ByteOrder $r1, $r20, $r42, $r47;
        long $l3, $l25, $l27, l46, l47;
        java.lang.StringBuilder $r2, $r8, $r14, $r50, $r58, $r63;
        short $s4, $s6, $s8, $s28, $s31;
        java.lang.String $r4, $r7, $r10, $r13, $r16, $r19, $r26, $r32, $r34, $r52, $r57, $r60, $r62, $r66;
        java.io.IOException $r6, $r12, $r18, $r21, $r24, $r25, $r31, $r39;
        byte[] $r22, $r23, r71, r72, r73, r74, r75, r76;
        java.util.HashMap[] $r27, $r33, $r40, $r45;
        android.media.ExifInterface$ExifAttribute $r28, $r37, $r43, $r48;
        java.util.HashMap $r29, $r36, $r41, $r46;
        java.nio.charset.Charset $r35;
        android.media.ExifInterface$ByteOrderedDataInputStream r67;

        r0 := @this: android.media.ExifInterface;

        r67 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        i34 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = <android.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getJpegAttributes starting with: ");

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r67);

        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r66);

     label01:
        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r1);

        $l3 = (long) i34;

        virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l3);

        b35 = virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if b35 != -1 goto label26;

        $b5 = virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if $b5 != -40 goto label25;

        $i7 = i34 + 1;

        i37 = $i7 + 1;

        i39 = i37;

     label02:
        b40 = virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if b40 != -1 goto label24;

        b2 = virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        $z1 = <android.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label03;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found JPEG segment indicator: ");

        $s31 = b2 & 255;

        $r60 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s31);

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r62);

     label03:
        if b2 == -39 goto label23;

        if b2 != -38 goto label04;

        goto label23;

     label04:
        $i9 = virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i41 = $i9 - 2;

        $i10 = i39 + 1;

        $i11 = $i10 + 1;

        i42 = $i11 + 2;

        $z2 = <android.media.ExifInterface: boolean DEBUG>;

        if $z2 == 0 goto label05;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JPEG segment: ");

        $s28 = b2 & 255;

        $r52 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s28);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (length: ");

        $i29 = i41 + 2;

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r57 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r57);

     label05:
        if i41 < 0 goto label22;

        if b2 == -31 goto label15;

        if b2 == -2 goto label12;

        tableswitch(b2)
        {
            case -64: goto label10;
            case -63: goto label10;
            case -62: goto label10;
            case -61: goto label10;
            default: goto label06;
        };

     label06:
        tableswitch(b2)
        {
            case -59: goto label10;
            case -58: goto label10;
            case -57: goto label10;
            default: goto label07;
        };

     label07:
        tableswitch(b2)
        {
            case -55: goto label10;
            case -54: goto label10;
            case -53: goto label10;
            default: goto label08;
        };

     label08:
        tableswitch(b2)
        {
            case -51: goto label10;
            case -50: goto label10;
            case -49: goto label10;
            default: goto label09;
        };

     label09:
        i43 = i41;

        goto label19;

     label10:
        $i44 = virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(1);

        if $i44 != 1 goto label11;

        $r40 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r41 = $r40[i0];

        $i24 = virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $l25 = (long) $i24;

        $r42 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r43 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l25, $r42);

        virtualinvoke $r41.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", $r43);

        $r45 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r46 = $r45[i0];

        $i26 = virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $l27 = (long) $i26;

        $r47 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r48 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l27, $r47);

        virtualinvoke $r46.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", $r48);

        i43 = i41 - 5;

        goto label19;

     label11:
        $r39 = new java.io.IOException;

        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>("Invalid SOFx");

        throw $r39;

     label12:
        r71 = newarray (byte)[i41];

        $i23 = virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r71);

        if $i23 != i41 goto label14;

        i43 = 0;

        $r32 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("UserComment");

        if $r32 != null goto label13;

        $r33 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r36 = $r33[1];

        $r34 = new java.lang.String;

        $r35 = <android.media.ExifInterface: java.nio.charset.Charset ASCII>;

        specialinvoke $r34.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r71, $r35);

        $r37 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createString(java.lang.String)>($r34);

        virtualinvoke $r36.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("UserComment", $r37);

     label13:
        goto label19;

     label14:
        $r31 = new java.io.IOException;

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif");

        throw $r31;

     label15:
        r72 = newarray (byte)[i41];

        virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r72);

        i45 = i42 + i41;

        i43 = 0;

        $r22 = <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $z3 = staticinvoke <com.android.internal.util.ArrayUtils: boolean startsWith(byte[],byte[])>(r72, $r22);

        if $z3 == 0 goto label16;

        r73 = <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i18 = lengthof r73;

        $i19 = $i18 + i42;

        l46 = (long) $i19;

        $i21 = lengthof r73;

        $i20 = lengthof r72;

        r74 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r72, $i21, $i20);

        $i22 = (int) l46;

        r0.<android.media.ExifInterface: int mExifOffset> = $i22;

        specialinvoke r0.<android.media.ExifInterface: void readExifSegment(byte[],int)>(r74, i0);

        i42 = i45;

        goto label19;

     label16:
        $r23 = <android.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1>;

        $z4 = staticinvoke <com.android.internal.util.ArrayUtils: boolean startsWith(byte[],byte[])>(r72, $r23);

        if $z4 == 0 goto label18;

        r75 = <android.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1>;

        $i13 = lengthof r75;

        $i14 = $i13 + i42;

        l47 = (long) $i14;

        $i16 = lengthof r75;

        $i15 = lengthof r72;

        r76 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r72, $i16, $i15);

        $r26 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("Xmp");

        if $r26 != null goto label17;

        $r27 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r29 = $r27[0];

        $r28 = new android.media.ExifInterface$ExifAttribute;

        $i17 = lengthof r76;

        specialinvoke $r28.<android.media.ExifInterface$ExifAttribute: void <init>(int,int,long,byte[],android.media.ExifInterface$1)>(1, $i17, l47, r76, null);

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Xmp", $r28);

        r0.<android.media.ExifInterface: boolean mXmpIsFromSeparateMarker> = 1;

        goto label17;

     label17:
        i42 = i45;

        goto label19;

     label18:
        i42 = i45;

     label19:
        if i43 < 0 goto label21;

        $i12 = virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(i43);

        if $i12 != i43 goto label20;

        i39 = i42 + i43;

        goto label02;

     label20:
        $r25 = new java.io.IOException;

        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>("Invalid JPEG segment");

        throw $r25;

     label21:
        $r24 = new java.io.IOException;

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw $r24;

     label22:
        $r21 = new java.io.IOException;

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw $r21;

     label23:
        $r20 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r67.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r20);

        return;

     label24:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid marker:");

        $s8 = b40 & 255;

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s8);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = new java.io.IOException;

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label25:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid marker: ");

        $s6 = b35 & 255;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s6);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = new java.io.IOException;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label26:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid marker: ");

        $s4 = b35 & 255;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.io.IOException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private int getMimeType(java.io.BufferedInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.io.BufferedInputStream r1;
        byte[] r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.io.BufferedInputStream;

        virtualinvoke r1.<java.io.BufferedInputStream: void mark(int)>(5000);

        r2 = newarray (byte)[5000];

        virtualinvoke r1.<java.io.BufferedInputStream: int read(byte[])>(r2);

        virtualinvoke r1.<java.io.BufferedInputStream: void reset()>();

        $z0 = staticinvoke <android.media.ExifInterface: boolean isJpegFormat(byte[])>(r2);

        if $z0 == 0 goto label1;

        return 4;

     label1:
        $z1 = specialinvoke r0.<android.media.ExifInterface: boolean isRafFormat(byte[])>(r2);

        if $z1 == 0 goto label2;

        return 9;

     label2:
        $z2 = specialinvoke r0.<android.media.ExifInterface: boolean isHeifFormat(byte[])>(r2);

        if $z2 == 0 goto label3;

        return 12;

     label3:
        $z3 = specialinvoke r0.<android.media.ExifInterface: boolean isOrfFormat(byte[])>(r2);

        if $z3 == 0 goto label4;

        return 7;

     label4:
        $z4 = specialinvoke r0.<android.media.ExifInterface: boolean isRw2Format(byte[])>(r2);

        if $z4 == 0 goto label5;

        return 10;

     label5:
        $z5 = specialinvoke r0.<android.media.ExifInterface: boolean isPngFormat(byte[])>(r2);

        if $z5 == 0 goto label6;

        return 13;

     label6:
        $z6 = specialinvoke r0.<android.media.ExifInterface: boolean isWebpFormat(byte[])>(r2);

        if $z6 == 0 goto label7;

        return 14;

     label7:
        return 0;
    }

    private void getOrfAttributes(android.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        java.util.HashMap[] $r2, $r16, $r19, $r22, $r25, $r32, $r36, $r40;
        java.util.HashMap $r3, $r17, $r20, $r23, $r26, $r33, $r37, $r41;
        java.lang.Object $r4, $r13, $r34, $r38, $r42;
        android.media.ExifInterface$ByteOrderedDataInputStream $r5, r28;
        byte[] $r6, $r8, $r9, $r10, $r11, r30, r31;
        java.nio.ByteOrder $r7, $r12, $r14, $r15;
        boolean $z0, $z1;
        android.media.ExifInterface$ExifAttribute r29, r35, r39, r43, r46, r47;
        int[] r44, r45;

        r0 := @this: android.media.ExifInterface;

        r28 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke r0.<android.media.ExifInterface: void getRawAttributes(android.media.ExifInterface$ByteOrderedDataInputStream)>(r28);

        $r2 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r3 = $r2[1];

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("MakerNote");

        r29 = (android.media.ExifInterface$ExifAttribute) $r4;

        if r29 == null goto label5;

        $r5 = new android.media.ExifInterface$ByteOrderedDataInputStream;

        $r6 = r29.<android.media.ExifInterface$ExifAttribute: byte[] bytes>;

        specialinvoke $r5.<android.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>($r6);

        $r7 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke $r5.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r7);

        $r8 = <android.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1>;

        $i2 = lengthof $r8;

        r30 = newarray (byte)[$i2];

        virtualinvoke $r5.<android.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r30);

        virtualinvoke $r5.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(0L);

        $r9 = <android.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2>;

        $i3 = lengthof $r9;

        r31 = newarray (byte)[$i3];

        virtualinvoke $r5.<android.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r31);

        $r10 = <android.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r30, $r10);

        if $z0 == 0 goto label1;

        virtualinvoke $r5.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(8L);

        goto label2;

     label1:
        $r11 = <android.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r31, $r11);

        if $z1 == 0 goto label2;

        virtualinvoke $r5.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(12L);

     label2:
        specialinvoke r0.<android.media.ExifInterface: void readImageFileDirectory(android.media.ExifInterface$ByteOrderedDataInputStream,int)>($r5, 6);

        $r32 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r33 = $r32[7];

        $r34 = virtualinvoke $r33.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PreviewImageStart");

        r35 = (android.media.ExifInterface$ExifAttribute) $r34;

        $r36 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r37 = $r36[7];

        $r38 = virtualinvoke $r37.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PreviewImageLength");

        r39 = (android.media.ExifInterface$ExifAttribute) $r38;

        if r35 == null goto label3;

        if r39 == null goto label3;

        $r22 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r23 = $r22[5];

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormat", r35);

        $r25 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r26 = $r25[5];

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormatLength", r39);

     label3:
        $r40 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r41 = $r40[8];

        $r42 = virtualinvoke $r41.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("AspectFrame");

        r43 = (android.media.ExifInterface$ExifAttribute) $r42;

        if r43 == null goto label5;

        r44 = newarray (int)[4];

        $r12 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r13 = staticinvoke <android.media.ExifInterface$ExifAttribute: java.lang.Object access$700(android.media.ExifInterface$ExifAttribute,java.nio.ByteOrder)>(r43, $r12);

        r45 = (int[]) $r13;

        $i5 = r45[2];

        $i4 = r45[0];

        if $i5 <= $i4 goto label5;

        $i7 = r45[3];

        $i6 = r45[1];

        if $i7 <= $i6 goto label5;

        $i9 = r45[2];

        $i8 = r45[0];

        $i10 = $i9 - $i8;

        i0 = $i10 + 1;

        $i12 = r45[3];

        $i11 = r45[1];

        $i13 = $i12 - $i11;

        i1 = $i13 + 1;

        i14 = i0;

        i15 = i1;

        if i0 >= i1 goto label4;

        i16 = i0 + i1;

        i15 = i16 - i1;

        i14 = i16 - i15;

     label4:
        $r14 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r46 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i14, $r14);

        $r15 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r47 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i15, $r15);

        $r16 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[0];

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r46);

        $r19 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r20 = $r19[0];

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r47);

     label5:
        return;
    }

    private void getPngAttributes(android.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        boolean $z0, $z1, $z2, $z3;
        java.nio.ByteOrder $r1;
        byte[] $r2, $r3, $r4, $r5, $r15, r24, r26;
        int $i0, $i2, $i3, $i4, $i6, $i7, $i9, i12, i13, $i14, $i15, i16, i17;
        java.lang.String $r7, $r9, $r14, $r19;
        long $l8, $l10;
        java.lang.StringBuilder $r16, r29, r31;
        java.lang.Throwable $r20;
        java.io.IOException $r21, r25, r28, r30, r32;
        android.media.ExifInterface$ByteOrderedDataInputStream r22;
        java.util.zip.CRC32 r27;

        r0 := @this: android.media.ExifInterface;

        r22 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        $z0 = <android.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getPngAttributes starting with: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r19);

     label01:
        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r22.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r1);

        $r2 = <android.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $i0 = lengthof $r2;

        virtualinvoke r22.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>($i0);

        $r3 = <android.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $i2 = lengthof $r3;

        i12 = 0 + $i2;

     label02:
        i13 = virtualinvoke r22.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        r24 = newarray (byte)[4];

        $i14 = virtualinvoke r22.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r24);

        $i15 = lengthof r24;

        if $i14 != $i15 goto label15;

     label03:
        $i3 = i12 + 4;

        i16 = $i3 + 4;

        if i16 != 16 goto label07;

     label04:
        $r15 = <android.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IHDR>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r24, $r15);

        if $z3 == 0 goto label06;

     label05:
        goto label07;

     label06:
        r25 = new java.io.IOException;

        specialinvoke r25.<java.io.IOException: void <init>(java.lang.String)>("Encountered invalid PNG file--IHDR chunk should appearas the first chunk");

        throw r25;

     label07:
        $r4 = <android.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IEND>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r24, $r4);

        if $z1 == 0 goto label09;

     label08:
        goto label10;

     label09:
        $r5 = <android.media.ExifInterface: byte[] PNG_CHUNK_TYPE_EXIF>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r24, $r5);

        if $z2 == 0 goto label13;

        r26 = newarray (byte)[i13];

        $i7 = virtualinvoke r22.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r26);

        if $i7 != i13 goto label12;

        i17 = virtualinvoke r22.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        r27 = new java.util.zip.CRC32;

        specialinvoke r27.<java.util.zip.CRC32: void <init>()>();

        virtualinvoke r27.<java.util.zip.CRC32: void update(byte[])>(r24);

        virtualinvoke r27.<java.util.zip.CRC32: void update(byte[])>(r26);

        $l8 = virtualinvoke r27.<java.util.zip.CRC32: long getValue()>();

        $i9 = (int) $l8;

        if $i9 != i17 goto label11;

        r0.<android.media.ExifInterface: int mExifOffset> = i16;

        specialinvoke r0.<android.media.ExifInterface: void readExifSegment(byte[],int)>(r26, 0);

        specialinvoke r0.<android.media.ExifInterface: void validateImages()>();

     label10:
        return;

     label11:
        r28 = new java.io.IOException;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encountered invalid CRC value for PNG-EXIF chunk.\n recorded CRC value: ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", calculated CRC value: ");

        $l10 = virtualinvoke r27.<java.util.zip.CRC32: long getValue()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r14 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw r28;

     label12:
        r30 = new java.io.IOException;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read given length for given PNG chunk type: ");

        $r7 = staticinvoke <android.media.ExifInterface: java.lang.String byteArrayToHexString(byte[])>(r24);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw r30;

     label13:
        $i4 = i13 + 4;

        virtualinvoke r22.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>($i4);

     label14:
        $i6 = i13 + 4;

        i12 = i16 + $i6;

        goto label02;

     label15:
        r32 = new java.io.IOException;

        specialinvoke r32.<java.io.IOException: void <init>(java.lang.String)>("Encountered invalid length while parsing PNG chunktype");

        throw r32;

     label16:
        $r20 := @caughtexception;

        $r21 = new java.io.IOException;

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>("Encountered corrupt PNG file.");

        throw $r21;

        catch java.io.EOFException from label02 to label03 with label16;
        catch java.io.EOFException from label04 to label05 with label16;
        catch java.io.EOFException from label06 to label07 with label16;
        catch java.io.EOFException from label07 to label08 with label16;
        catch java.io.EOFException from label09 to label10 with label16;
        catch java.io.EOFException from label11 to label12 with label16;
        catch java.io.EOFException from label12 to label13 with label16;
        catch java.io.EOFException from label13 to label14 with label16;
        catch java.io.EOFException from label15 to label16 with label16;
    }

    private void getRafAttributes(android.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        byte[] r1, r25;
        int i0, i1, $i7, i11, i12, i13, i14;
        java.nio.ByteBuffer $r2, $r3;
        long $l6;
        java.nio.ByteOrder $r4, $r6, $r7;
        boolean $z0, $z1;
        android.media.ExifInterface$ExifTag $r5;
        java.util.HashMap[] $r8, $r11;
        java.util.HashMap $r9, $r12;
        java.lang.StringBuilder $r14, $r20;
        java.lang.String $r19, $r23;
        android.media.ExifInterface$ByteOrderedDataInputStream r24;
        short s15, s16;
        android.media.ExifInterface$ExifAttribute r27, r28;

        r0 := @this: android.media.ExifInterface;

        r24 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(84);

        r25 = newarray (byte)[4];

        r1 = newarray (byte)[4];

        virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r25);

        virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(4);

        virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r1);

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r25);

        i11 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt()>();

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        i12 = virtualinvoke $r3.<java.nio.ByteBuffer: int getInt()>();

        specialinvoke r0.<android.media.ExifInterface: void getJpegAttributes(android.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r24, i11, 5);

        $l6 = (long) i12;

        virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l6);

        $r4 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r4);

        i13 = virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $z0 = <android.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numberOfDirectoryEntry: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r23);

     label1:
        i14 = 0;

     label2:
        if i14 >= i13 goto label5;

        i0 = virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i1 = virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $r5 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE>;

        $i7 = $r5.<android.media.ExifInterface$ExifTag: int number>;

        if i0 != $i7 goto label4;

        s15 = virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        s16 = virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        $r6 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r27 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(s15, $r6);

        $r7 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r28 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(s16, $r7);

        $r8 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r9 = $r8[0];

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r27);

        $r11 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r11[0];

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r28);

        $z1 = <android.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updated to length: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s15);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", width: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s16);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r19);

     label3:
        return;

     label4:
        virtualinvoke r24.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(i1);

        i14 = i14 + 1;

        goto label2;

     label5:
        return;
    }

    private void getRawAttributes(android.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        int $i0, $i1;
        java.util.HashMap[] $r1, $r7, $r10;
        java.util.HashMap $r2, $r8, $r11;
        java.lang.Object $r3, $r9;
        android.media.ExifInterface$ByteOrderedDataInputStream $r4, r13;
        byte[] $r5;
        java.nio.ByteOrder $r6;
        android.media.ExifInterface$ExifAttribute r14, r16;

        r0 := @this: android.media.ExifInterface;

        r13 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = virtualinvoke r13.<android.media.ExifInterface$ByteOrderedDataInputStream: int available()>();

        specialinvoke r0.<android.media.ExifInterface: void parseTiffHeaders(android.media.ExifInterface$ByteOrderedDataInputStream,int)>(r13, $i0);

        specialinvoke r0.<android.media.ExifInterface: void readImageFileDirectory(android.media.ExifInterface$ByteOrderedDataInputStream,int)>(r13, 0);

        specialinvoke r0.<android.media.ExifInterface: void updateImageSizeValues(android.media.ExifInterface$ByteOrderedDataInputStream,int)>(r13, 0);

        specialinvoke r0.<android.media.ExifInterface: void updateImageSizeValues(android.media.ExifInterface$ByteOrderedDataInputStream,int)>(r13, 5);

        specialinvoke r0.<android.media.ExifInterface: void updateImageSizeValues(android.media.ExifInterface$ByteOrderedDataInputStream,int)>(r13, 4);

        specialinvoke r0.<android.media.ExifInterface: void validateImages()>();

        $i1 = r0.<android.media.ExifInterface: int mMimeType>;

        if $i1 != 8 goto label1;

        $r1 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r2 = $r1[1];

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("MakerNote");

        r14 = (android.media.ExifInterface$ExifAttribute) $r3;

        if r14 == null goto label1;

        $r4 = new android.media.ExifInterface$ByteOrderedDataInputStream;

        $r5 = r14.<android.media.ExifInterface$ExifAttribute: byte[] bytes>;

        specialinvoke $r4.<android.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>($r5);

        $r6 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke $r4.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r6);

        virtualinvoke $r4.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(6L);

        specialinvoke r0.<android.media.ExifInterface: void readImageFileDirectory(android.media.ExifInterface$ByteOrderedDataInputStream,int)>($r4, 9);

        $r7 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r8 = $r7[9];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ColorSpace");

        r16 = (android.media.ExifInterface$ExifAttribute) $r9;

        if r16 == null goto label1;

        $r10 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r10[1];

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ColorSpace", r16);

     label1:
        return;
    }

    private void getRw2Attributes(android.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ExifAttribute r1, $r5, r16;
        java.util.HashMap[] $r2, $r6, $r9, $r12;
        java.util.HashMap $r3, $r7, $r10, $r13;
        java.lang.Object $r4, $r8, $r11;
        int $i0;
        android.media.ExifInterface$ByteOrderedDataInputStream r15;

        r0 := @this: android.media.ExifInterface;

        r15 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke r0.<android.media.ExifInterface: void getRawAttributes(android.media.ExifInterface$ByteOrderedDataInputStream)>(r15);

        $r2 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r3 = $r2[0];

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JpgFromRaw");

        $r5 = (android.media.ExifInterface$ExifAttribute) $r4;

        if $r5 == null goto label1;

        $i0 = r0.<android.media.ExifInterface: int mRw2JpgFromRawOffset>;

        specialinvoke r0.<android.media.ExifInterface: void getJpegAttributes(android.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r15, $i0, 5);

     label1:
        $r6 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r7 = $r6[0];

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ISO");

        r1 = (android.media.ExifInterface$ExifAttribute) $r8;

        $r9 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[1];

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ISOSpeedRatings");

        r16 = (android.media.ExifInterface$ExifAttribute) $r11;

        if r1 == null goto label2;

        if r16 != null goto label2;

        $r12 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r13 = $r12[1];

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISOSpeedRatings", r1);

     label2:
        return;
    }

    private void getStandaloneAttributes(android.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ByteOrderedDataInputStream r1;
        byte[] r2, $r3, $r4;
        int $i0, $i2, $i3;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        $r3 = <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i0 = lengthof $r3;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>($i0);

        $i2 = virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataInputStream: int available()>();

        r2 = newarray (byte)[$i2];

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r2);

        $r4 = <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i3 = lengthof $r4;

        r0.<android.media.ExifInterface: int mExifOffset> = $i3;

        specialinvoke r0.<android.media.ExifInterface: void readExifSegment(byte[],int)>(r2, 0);

        return;
    }

    private void getWebpAttributes(android.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i13, $i14, $i15, i16, i17, i18;
        boolean $z0, $z1;
        java.nio.ByteOrder $r1;
        byte[] $r2, $r3, $r4, r17, r18;
        java.lang.String $r6, $r8, $r12;
        java.lang.StringBuilder $r9, r20;
        java.lang.Throwable $r13;
        java.io.IOException $r14, r19, r21, r22, r23;
        android.media.ExifInterface$ByteOrderedDataInputStream r15;

        r0 := @this: android.media.ExifInterface;

        r15 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        $z0 = <android.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getWebpAttributes starting with: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r12);

     label01:
        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r1);

        $r2 = <android.media.ExifInterface: byte[] WEBP_SIGNATURE_1>;

        $i2 = lengthof $r2;

        virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>($i2);

        $i4 = virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        i0 = $i4 + 8;

        $r3 = <android.media.ExifInterface: byte[] WEBP_SIGNATURE_2>;

        $i5 = lengthof $r3;

        $i6 = virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>($i5);

        i13 = 8 + $i6;

     label02:
        r17 = newarray (byte)[4];

        $i14 = virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r17);

        $i15 = lengthof r17;

        if $i14 != $i15 goto label16;

        i16 = virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

     label03:
        $i7 = i13 + 4;

        i1 = $i7 + 4;

     label04:
        $r4 = <android.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_EXIF>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, r17);

        if $z1 == 0 goto label07;

        r18 = newarray (byte)[i16];

        $i11 = virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r18);

        if $i11 != i16 goto label06;

        r0.<android.media.ExifInterface: int mExifOffset> = i1;

        specialinvoke r0.<android.media.ExifInterface: void readExifSegment(byte[],int)>(r18, 0);

     label05:
        goto label10;

     label06:
        r19 = new java.io.IOException;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read given length for given PNG chunk type: ");

        $r6 = staticinvoke <android.media.ExifInterface: java.lang.String byteArrayToHexString(byte[])>(r17);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw r19;

     label07:
        $i8 = i16 % 2;

        if $i8 != 1 goto label08;

        i17 = i16 + 1;

        goto label09;

     label08:
        i17 = i16;

     label09:
        $i9 = i1 + i17;

        if $i9 != i0 goto label11;

     label10:
        return;

     label11:
        $i10 = i1 + i17;

        if $i10 > i0 goto label15;

     label12:
        i18 = virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(i17);

     label13:
        if i18 != i17 goto label14;

        i13 = i1 + i18;

        goto label02;

     label14:
        r21 = new java.io.IOException;

        specialinvoke r21.<java.io.IOException: void <init>(java.lang.String)>("Encountered WebP file with invalid chunk size");

        throw r21;

     label15:
        r22 = new java.io.IOException;

        specialinvoke r22.<java.io.IOException: void <init>(java.lang.String)>("Encountered WebP file with invalid chunk size");

        throw r22;

     label16:
        r23 = new java.io.IOException;

        specialinvoke r23.<java.io.IOException: void <init>(java.lang.String)>("Encountered invalid length while parsing WebP chunktype");

        throw r23;

     label17:
        $r13 := @caughtexception;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Encountered corrupt WebP file.");

        throw $r14;

        catch java.io.EOFException from label02 to label03 with label17;
        catch java.io.EOFException from label04 to label05 with label17;
        catch java.io.EOFException from label06 to label07 with label17;
        catch java.io.EOFException from label12 to label13 with label17;
        catch java.io.EOFException from label14 to label15 with label17;
        catch java.io.EOFException from label15 to label16 with label17;
        catch java.io.EOFException from label16 to label17 with label17;
    }

    private static android.util.Pair guessDataFormat(java.lang.String)
    {
        boolean z0, $z1;
        java.lang.Integer r0, r1, $r4, $r6, $r8, $r9, $r14, $r16, $r18, $r19, $r22, $r27, $r29, $r31, $r36, $r43, $r51;
        android.util.Pair r2, $r3, $r5, $r7, $r10, $r13, $r15, $r17, $r28, $r30, $r32, $r42, $r46, r49;
        long l1, l2, $l3, $l4, $l6, $l8;
        byte $b5, $b7, $b9, $b11, $b12, $b13, $b14;
        int $i10, $i15, $i16, i17, i18, i19, $i20;
        java.lang.String $r11, $r12, $r20, $r23, r47;
        double $d0, $d1;
        java.lang.Object $r21, $r24, $r25, $r26, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r50;
        java.lang.Throwable $r41, $r44, $r45;
        java.lang.String[] r48, r52;
        java.lang.Long r55;

        r47 := @parameter0: java.lang.String;

        z0 = virtualinvoke r47.<java.lang.String: boolean contains(java.lang.CharSequence)>(",");

        r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        if z0 == 0 goto label11;

        r48 = virtualinvoke r47.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r20 = r48[0];

        r49 = staticinvoke <android.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)>($r20);

        $r21 = r49.<android.util.Pair: java.lang.Object first>;

        $r22 = (java.lang.Integer) $r21;

        $i15 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        if $i15 != 2 goto label01;

        return r49;

     label01:
        i17 = 1;

     label02:
        $i16 = lengthof r48;

        if i17 >= $i16 goto label10;

        $r23 = r48[i17];

        r2 = staticinvoke <android.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)>($r23);

        i18 = -1;

        $r25 = r2.<android.util.Pair: java.lang.Object first>;

        $r24 = r49.<android.util.Pair: java.lang.Object first>;

        if $r25 == $r24 goto label03;

        $r40 = r2.<android.util.Pair: java.lang.Object second>;

        $r39 = r49.<android.util.Pair: java.lang.Object first>;

        if $r40 != $r39 goto label04;

     label03:
        $r26 = r49.<android.util.Pair: java.lang.Object first>;

        $r27 = (java.lang.Integer) $r26;

        i18 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

     label04:
        i19 = -1;

        $r50 = r49.<android.util.Pair: java.lang.Object second>;

        $r51 = (java.lang.Integer) $r50;

        $i20 = virtualinvoke $r51.<java.lang.Integer: int intValue()>();

        if $i20 == -1 goto label06;

        $r34 = r2.<android.util.Pair: java.lang.Object first>;

        $r33 = r49.<android.util.Pair: java.lang.Object second>;

        if $r34 == $r33 goto label05;

        i19 = -1;

        $r38 = r2.<android.util.Pair: java.lang.Object second>;

        $r37 = r49.<android.util.Pair: java.lang.Object second>;

        if $r38 != $r37 goto label06;

     label05:
        $r35 = r49.<android.util.Pair: java.lang.Object second>;

        $r36 = (java.lang.Integer) $r35;

        i19 = virtualinvoke $r36.<java.lang.Integer: int intValue()>();

     label06:
        if i18 != -1 goto label07;

        if i19 != -1 goto label07;

        $r32 = new android.util.Pair;

        specialinvoke $r32.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r32;

     label07:
        if i18 != -1 goto label08;

        $r30 = new android.util.Pair;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i19);

        specialinvoke $r30.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r31, r1);

        r49 = $r30;

        goto label09;

     label08:
        if i19 != -1 goto label09;

        $r28 = new android.util.Pair;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18);

        specialinvoke $r28.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r29, r1);

        r49 = $r28;

     label09:
        i17 = i17 + 1;

        goto label02;

     label10:
        return r49;

     label11:
        $z1 = virtualinvoke r47.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z1 == 0 goto label21;

        r52 = virtualinvoke r47.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $i10 = lengthof r52;

        if $i10 != 2 goto label20;

     label12:
        $r11 = r52[0];

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r11);

        l1 = (long) $d0;

        $r12 = r52[1];

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);

        l2 = (long) $d1;

     label13:
        $b11 = l1 cmp 0L;

        if $b11 < 0 goto label17;

        $b12 = l2 cmp 0L;

        if $b12 >= 0 goto label14;

        goto label17;

     label14:
        $b13 = l1 cmp 2147483647L;

        if $b13 > 0 goto label16;

        $b14 = l2 cmp 2147483647L;

        if $b14 <= 0 goto label15;

        goto label16;

     label15:
        $r17 = new android.util.Pair;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        specialinvoke $r17.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r18, $r19);

        return $r17;

     label16:
        $r15 = new android.util.Pair;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        specialinvoke $r15.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r16, r1);

        return $r15;

     label17:
        $r13 = new android.util.Pair;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        specialinvoke $r13.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r14, r1);

     label18:
        return $r13;

     label19:
        $r44 := @caughtexception;

     label20:
        $r10 = new android.util.Pair;

        specialinvoke $r10.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r10;

     label21:
        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r47);

        r55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $l4 = virtualinvoke r55.<java.lang.Long: long longValue()>();

        $b5 = $l4 cmp 0L;

        if $b5 < 0 goto label22;

        $l8 = virtualinvoke r55.<java.lang.Long: long longValue()>();

        $b9 = $l8 cmp 65535L;

        if $b9 > 0 goto label22;

        $r7 = new android.util.Pair;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        specialinvoke $r7.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r8, $r9);

        return $r7;

     label22:
        $l6 = virtualinvoke r55.<java.lang.Long: long longValue()>();

        $b7 = $l6 cmp 0L;

        if $b7 >= 0 goto label23;

        $r5 = new android.util.Pair;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        specialinvoke $r5.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, r1);

        return $r5;

     label23:
        $r3 = new android.util.Pair;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, r1);

     label24:
        return $r3;

     label25:
        $r41 := @caughtexception;

     label26:
        staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r47);

        $r42 = new android.util.Pair;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        specialinvoke $r42.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r43, r1);

     label27:
        return $r42;

     label28:
        $r45 := @caughtexception;

        $r46 = new android.util.Pair;

        specialinvoke $r46.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r46;

        catch java.lang.NumberFormatException from label12 to label13 with label19;
        catch java.lang.NumberFormatException from label15 to label16 with label19;
        catch java.lang.NumberFormatException from label16 to label17 with label19;
        catch java.lang.NumberFormatException from label17 to label18 with label19;
        catch java.lang.NumberFormatException from label21 to label22 with label25;
        catch java.lang.NumberFormatException from label22 to label23 with label25;
        catch java.lang.NumberFormatException from label23 to label24 with label25;
        catch java.lang.NumberFormatException from label26 to label27 with label28;
    }

    private void handleThumbnailFromJfif(android.media.ExifInterface$ByteOrderedDataInputStream, java.util.HashMap) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ExifAttribute r1, r17;
        java.lang.Object $r2, $r3;
        java.nio.ByteOrder $r4, $r5;
        int $i0, $i1, $i2, $i4, $i6, i7, i8, i9, i10, i11;
        java.lang.StringBuilder $r6;
        java.lang.String $r11, $r12;
        android.content.res.AssetManager$AssetInputStream $r13;
        java.io.FileDescriptor $r14;
        long $l5;
        android.media.ExifInterface$ByteOrderedDataInputStream r15;
        java.util.HashMap r16;
        byte[] r18;
        boolean $z0;

        r0 := @this: android.media.ExifInterface;

        r15 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        r16 := @parameter1: java.util.HashMap;

        $r2 = virtualinvoke r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JPEGInterchangeFormat");

        r1 = (android.media.ExifInterface$ExifAttribute) $r2;

        $r3 = virtualinvoke r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JPEGInterchangeFormatLength");

        r17 = (android.media.ExifInterface$ExifAttribute) $r3;

        if r1 == null goto label3;

        if r17 == null goto label3;

        $r4 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i7 = virtualinvoke r1.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r4);

        $r5 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i8 = virtualinvoke r17.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r5);

        i9 = i7;

        $i0 = r0.<android.media.ExifInterface: int mMimeType>;

        if $i0 != 7 goto label1;

        $i6 = r0.<android.media.ExifInterface: int mOrfMakerNoteOffset>;

        i9 = i7 + $i6;

     label1:
        $i1 = virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: int getLength()>();

        $i2 = $i1 - i9;

        i10 = staticinvoke <java.lang.Math: int min(int,int)>(i8, $i2);

        if i9 <= 0 goto label2;

        if i10 <= 0 goto label2;

        r0.<android.media.ExifInterface: boolean mHasThumbnail> = 1;

        $i4 = r0.<android.media.ExifInterface: int mExifOffset>;

        i11 = $i4 + i9;

        r0.<android.media.ExifInterface: int mThumbnailOffset> = i11;

        r0.<android.media.ExifInterface: int mThumbnailLength> = i10;

        r0.<android.media.ExifInterface: int mThumbnailCompression> = 6;

        $r12 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        if $r12 != null goto label2;

        $r13 = r0.<android.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

        if $r13 != null goto label2;

        $r14 = r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        if $r14 != null goto label2;

        r18 = newarray (byte)[i10];

        $l5 = (long) i11;

        virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l5);

        virtualinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r18);

        r0.<android.media.ExifInterface: byte[] mThumbnailBytes> = r18;

     label2:
        $z0 = <android.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting thumbnail attributes with offset: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", length: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r11);

     label3:
        return;
    }

    private void handleThumbnailFromStrips(android.media.ExifInterface$ByteOrderedDataInputStream, java.util.HashMap) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ByteOrderedDataInputStream r1;
        long[] r2, r3;
        byte[] r4, r16;
        int i0, $i2, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i13, $i14, $i17, $i18, $i21, $i22, $i23, $i25, $i26, i31, i32, i33, i34, i35;
        java.lang.Object $r5, $r6, $r8, $r10;
        java.nio.ByteOrder $r7, $r9;
        java.util.stream.LongStream $r11;
        long $l7, $l10, $l15, $l16, $l19, $l27, $l28;
        boolean $z0;
        byte $b29;
        java.util.HashMap r12;
        android.media.ExifInterface$ExifAttribute r13, r14;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        r12 := @parameter1: java.util.HashMap;

        $r5 = virtualinvoke r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("StripOffsets");

        r13 = (android.media.ExifInterface$ExifAttribute) $r5;

        $r6 = virtualinvoke r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("StripByteCounts");

        r14 = (android.media.ExifInterface$ExifAttribute) $r6;

        if r13 == null goto label10;

        if r14 == null goto label10;

        $r7 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r8 = staticinvoke <android.media.ExifInterface$ExifAttribute: java.lang.Object access$700(android.media.ExifInterface$ExifAttribute,java.nio.ByteOrder)>(r13, $r7);

        r2 = staticinvoke <android.media.ExifInterface: long[] convertToLongArray(java.lang.Object)>($r8);

        $r9 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r10 = staticinvoke <android.media.ExifInterface$ExifAttribute: java.lang.Object access$700(android.media.ExifInterface$ExifAttribute,java.nio.ByteOrder)>(r14, $r9);

        r3 = staticinvoke <android.media.ExifInterface: long[] convertToLongArray(java.lang.Object)>($r10);

        if r2 == null goto label09;

        $i2 = lengthof r2;

        if $i2 != 0 goto label01;

        goto label09;

     label01:
        if r3 == null goto label08;

        $i4 = lengthof r3;

        if $i4 != 0 goto label02;

        goto label08;

     label02:
        $i6 = lengthof r2;

        $i5 = lengthof r3;

        if $i6 == $i5 goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", "stripOffsets and stripByteCounts should have same length.");

        return;

     label03:
        $r11 = staticinvoke <java.util.Arrays: java.util.stream.LongStream stream(long[])>(r3);

        $l7 = interfaceinvoke $r11.<java.util.stream.LongStream: long sum()>();

        $i8 = (int) $l7;

        r4 = newarray (byte)[$i8];

        i31 = 0;

        i32 = 0;

        r0.<android.media.ExifInterface: boolean mAreThumbnailStripsConsecutive> = 1;

        r0.<android.media.ExifInterface: boolean mHasThumbnailStrips> = 1;

        r0.<android.media.ExifInterface: boolean mHasThumbnail> = 1;

        i33 = 0;

     label04:
        $i9 = lengthof r2;

        if i33 >= $i9 goto label07;

        $l15 = r2[i33];

        i34 = (int) $l15;

        $l16 = r3[i33];

        i0 = (int) $l16;

        $i17 = lengthof r2;

        $i18 = $i17 - 1;

        if i33 >= $i18 goto label05;

        $i25 = i34 + i0;

        $l28 = (long) $i25;

        $i26 = i33 + 1;

        $l27 = r2[$i26];

        $b29 = $l28 cmp $l27;

        if $b29 == 0 goto label05;

        r0.<android.media.ExifInterface: boolean mAreThumbnailStripsConsecutive> = 0;

        goto label05;

     label05:
        i35 = i34 - i31;

        if i35 >= 0 goto label06;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Invalid strip offset value");

     label06:
        $l19 = (long) i35;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l19);

        r16 = newarray (byte)[i0];

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r16);

        $i21 = i31 + i35;

        i31 = $i21 + i0;

        $i22 = lengthof r16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r16, 0, r4, i32, $i22);

        $i23 = lengthof r16;

        i32 = i32 + $i23;

        i33 = i33 + 1;

        goto label04;

     label07:
        r0.<android.media.ExifInterface: byte[] mThumbnailBytes> = r4;

        $z0 = r0.<android.media.ExifInterface: boolean mAreThumbnailStripsConsecutive>;

        if $z0 == 0 goto label10;

        $l10 = r2[0];

        $i12 = (int) $l10;

        $i11 = r0.<android.media.ExifInterface: int mExifOffset>;

        $i13 = $i12 + $i11;

        r0.<android.media.ExifInterface: int mThumbnailOffset> = $i13;

        $i14 = lengthof r4;

        r0.<android.media.ExifInterface: int mThumbnailLength> = $i14;

        goto label10;

     label08:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", "stripByteCounts should not be null or have zero length.");

        return;

     label09:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", "stripOffsets should not be null or have zero length.");

        return;

     label10:
        return;
    }

    private void initForFilename(java.lang.String) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.io.FileInputStream r1, r6;
        java.io.FileDescriptor $r2, $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: android.media.ExifInterface;

        r5 := @parameter0: java.lang.String;

        r0.<android.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        r0.<android.media.ExifInterface: java.lang.String mFilename> = r5;

        r0.<android.media.ExifInterface: boolean mIsInputStream> = 0;

        r6 = null;

     label01:
        r1 = new java.io.FileInputStream;

     label02:
        r6 = null;

     label03:
        specialinvoke r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r5);

     label04:
        r6 = r1;

     label05:
        $r2 = virtualinvoke r1.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        $z0 = staticinvoke <android.media.ExifInterface: boolean isSeekableFD(java.io.FileDescriptor)>($r2);

        if $z0 == 0 goto label09;

     label06:
        r6 = r1;

     label07:
        $r3 = virtualinvoke r1.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = $r3;

     label08:
        goto label11;

     label09:
        r6 = r1;

     label10:
        r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = null;

     label11:
        r6 = r1;

     label12:
        specialinvoke r0.<android.media.ExifInterface: void loadAttributes(java.io.InputStream)>(r1);

     label13:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        return;

     label14:
        $r4 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    private static boolean isExifDataOnly(java.io.BufferedInputStream) throws java.io.IOException
    {
        byte[] r0, $r1, $r2, r4;
        int $i0, $i1, $i3, i6;
        byte $b4, $b5;
        java.io.BufferedInputStream r3;

        r3 := @parameter0: java.io.BufferedInputStream;

        $r1 = <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i0 = lengthof $r1;

        virtualinvoke r3.<java.io.BufferedInputStream: void mark(int)>($i0);

        $r2 = <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i1 = lengthof $r2;

        r0 = newarray (byte)[$i1];

        virtualinvoke r3.<java.io.BufferedInputStream: int read(byte[])>(r0);

        virtualinvoke r3.<java.io.BufferedInputStream: void reset()>();

        i6 = 0;

     label1:
        r4 = <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i3 = lengthof r4;

        if i6 >= $i3 goto label3;

        $b5 = r0[i6];

        $b4 = r4[i6];

        if $b5 == $b4 goto label2;

        return 0;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isHeifFormat(byte[]) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.nio.ByteOrder $r1;
        int $i0, $i2, i14, i17, i18;
        byte[] $r2, $r3, $r4, r7, r12, r13;
        byte $b1, $b4, $b5, $b7, $b8, $b9;
        long $l3, $l6, l10, l11, l12, l13, l15, l16;
        boolean $z0, $z1, z2, z3, z4, z5, z6, z7;
        java.lang.Throwable $r5;
        java.lang.Exception $r6;
        android.media.ExifInterface$ByteOrderedDataInputStream r8, r9, r10;

        r0 := @this: android.media.ExifInterface;

        r7 := @parameter0: byte[];

        r8 = null;

        r9 = null;

     label01:
        r10 = new android.media.ExifInterface$ByteOrderedDataInputStream;

     label02:
        r8 = null;

        r9 = null;

     label03:
        specialinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r7);

     label04:
        r8 = r10;

        r9 = r10;

     label05:
        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r1);

     label06:
        r8 = r10;

        r9 = r10;

     label07:
        $i0 = virtualinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        l10 = (long) $i0;

     label08:
        r8 = r10;

        r9 = r10;

     label09:
        r12 = newarray (byte)[4];

     label10:
        r8 = r10;

        r9 = r10;

     label11:
        virtualinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r12);

     label12:
        r8 = r10;

        r9 = r10;

     label13:
        $r2 = <android.media.ExifInterface: byte[] HEIF_TYPE_FTYP>;

        z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r12, $r2);

     label14:
        if z2 != 0 goto label15;

        virtualinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        return 0;

     label15:
        l11 = 8L;

        l12 = l10;

        $b1 = l10 cmp 1L;

        if $b1 != 0 goto label19;

        r8 = r10;

        r9 = r10;

     label16:
        l12 = virtualinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: long readLong()>();

     label17:
        $b9 = l12 cmp 16L;

        if $b9 >= 0 goto label18;

        virtualinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        return 0;

     label18:
        l11 = 16L;

     label19:
        l13 = l12;

        r8 = r10;

        r9 = r10;

     label20:
        $i2 = lengthof r7;

        $l3 = (long) $i2;

        $b4 = l12 cmp $l3;

        if $b4 <= 0 goto label24;

     label21:
        r8 = r10;

        r9 = r10;

     label22:
        i14 = lengthof r7;

     label23:
        l13 = (long) i14;

     label24:
        l15 = l13 - l11;

        $b5 = l15 cmp 8L;

        if $b5 >= 0 goto label25;

        virtualinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        return 0;

     label25:
        r8 = r10;

        r9 = r10;

     label26:
        r13 = newarray (byte)[4];

     label27:
        z3 = 0;

        z4 = 0;

        l16 = 0L;

     label28:
        r8 = r10;

        r9 = r10;

     label29:
        $l6 = l15 / 4L;

        $b7 = l16 cmp $l6;

        if $b7 >= 0 goto label44;

     label30:
        r8 = r10;

        r9 = r10;

     label31:
        i17 = virtualinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r13);

     label32:
        r8 = r10;

        r9 = r10;

     label33:
        i18 = lengthof r13;

     label34:
        if i17 == i18 goto label35;

        virtualinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        return 0;

     label35:
        $b8 = l16 cmp 1L;

        if $b8 != 0 goto label36;

        z5 = z4;

        goto label43;

     label36:
        r8 = r10;

        r9 = r10;

     label37:
        $r3 = <android.media.ExifInterface: byte[] HEIF_BRAND_MIF1>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r13, $r3);

        if $z0 == 0 goto label39;

     label38:
        z6 = 1;

        goto label42;

     label39:
        r8 = r10;

        r9 = r10;

     label40:
        $r4 = <android.media.ExifInterface: byte[] HEIF_BRAND_HEIC>;

        z7 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r13, $r4);

     label41:
        z6 = z3;

        if z7 == 0 goto label42;

        z4 = 1;

        z6 = z3;

     label42:
        z3 = z6;

        z5 = z4;

        if z6 == 0 goto label43;

        z3 = z6;

        z5 = z4;

        if z4 == 0 goto label43;

        virtualinvoke r10.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        return 1;

     label43:
        l16 = l16 + 1L;

        z4 = z5;

        goto label28;

     label44:
        r9 = r10;

        goto label51;

     label45:
        $r5 := @caughtexception;

        goto label53;

     label46:
        $r6 := @caughtexception;

        r8 = r9;

     label47:
        $z1 = <android.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label50;

     label48:
        r8 = r9;

     label49:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "Exception parsing HEIF file type box.", $r6);

     label50:
        if r9 == null goto label52;

     label51:
        virtualinvoke r9.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        goto label52;

     label52:
        return 0;

     label53:
        if r8 == null goto label54;

        virtualinvoke r8.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label54:
        throw $r5;

        catch java.lang.Exception from label01 to label02 with label46;
        catch java.lang.Throwable from label01 to label02 with label45;
        catch java.lang.Exception from label03 to label04 with label46;
        catch java.lang.Throwable from label03 to label04 with label45;
        catch java.lang.Exception from label05 to label06 with label46;
        catch java.lang.Throwable from label05 to label06 with label45;
        catch java.lang.Exception from label07 to label08 with label46;
        catch java.lang.Throwable from label07 to label08 with label45;
        catch java.lang.Exception from label09 to label10 with label46;
        catch java.lang.Throwable from label09 to label10 with label45;
        catch java.lang.Exception from label11 to label12 with label46;
        catch java.lang.Throwable from label11 to label12 with label45;
        catch java.lang.Exception from label13 to label14 with label46;
        catch java.lang.Throwable from label13 to label14 with label45;
        catch java.lang.Exception from label16 to label17 with label46;
        catch java.lang.Throwable from label16 to label17 with label45;
        catch java.lang.Exception from label20 to label21 with label46;
        catch java.lang.Throwable from label20 to label21 with label45;
        catch java.lang.Exception from label22 to label23 with label46;
        catch java.lang.Throwable from label22 to label23 with label45;
        catch java.lang.Exception from label26 to label27 with label46;
        catch java.lang.Throwable from label26 to label27 with label45;
        catch java.lang.Exception from label29 to label30 with label46;
        catch java.lang.Throwable from label29 to label30 with label45;
        catch java.lang.Exception from label31 to label32 with label46;
        catch java.lang.Throwable from label31 to label32 with label45;
        catch java.lang.Exception from label33 to label34 with label46;
        catch java.lang.Throwable from label33 to label34 with label45;
        catch java.lang.Exception from label37 to label38 with label46;
        catch java.lang.Throwable from label37 to label38 with label45;
        catch java.lang.Exception from label40 to label41 with label46;
        catch java.lang.Throwable from label40 to label41 with label45;
        catch java.lang.Throwable from label47 to label48 with label45;
        catch java.lang.Throwable from label49 to label50 with label45;
    }

    private static boolean isJpegFormat(byte[]) throws java.io.IOException
    {
        byte[] r0, r1;
        int $i0, i3;
        byte $b1, $b2;

        r0 := @parameter0: byte[];

        i3 = 0;

     label1:
        r1 = <android.media.ExifInterface: byte[] JPEG_SIGNATURE>;

        $i0 = lengthof r1;

        if i3 >= $i0 goto label3;

        $b2 = r0[i3];

        $b1 = r1[i3];

        if $b2 == $b1 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isOrfFormat(byte[]) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        short s0;
        java.lang.Exception $r1;
        java.lang.Throwable $r2;
        byte[] r3;
        boolean z0;
        android.media.ExifInterface$ByteOrderedDataInputStream r4, r5, r6;
        java.nio.ByteOrder r8;

        r0 := @this: android.media.ExifInterface;

        r3 := @parameter0: byte[];

        z0 = 0;

        r4 = null;

        r5 = null;

     label01:
        r6 = new android.media.ExifInterface$ByteOrderedDataInputStream;

     label02:
        r4 = null;

        r5 = null;

     label03:
        specialinvoke r6.<android.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r3);

     label04:
        r4 = r6;

        r5 = r6;

     label05:
        r8 = specialinvoke r0.<android.media.ExifInterface: java.nio.ByteOrder readByteOrder(android.media.ExifInterface$ByteOrderedDataInputStream)>(r6);

     label06:
        r4 = r6;

        r5 = r6;

     label07:
        r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = r8;

     label08:
        r4 = r6;

        r5 = r6;

     label09:
        virtualinvoke r6.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>(r8);

     label10:
        r4 = r6;

        r5 = r6;

     label11:
        s0 = virtualinvoke r6.<android.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

     label12:
        if s0 == 20306 goto label13;

        if s0 != 21330 goto label14;

     label13:
        z0 = 1;

     label14:
        virtualinvoke r6.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        return z0;

     label15:
        $r2 := @caughtexception;

        if r4 == null goto label16;

        virtualinvoke r4.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label16:
        throw $r2;

     label17:
        $r1 := @caughtexception;

        if r5 == null goto label18;

        virtualinvoke r5.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label18:
        return 0;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Throwable from label11 to label12 with label15;
    }

    private boolean isPngFormat(byte[]) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        byte[] r1, r2;
        int $i0, i3;
        byte $b1, $b2;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: byte[];

        i3 = 0;

     label1:
        r2 = <android.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $i0 = lengthof r2;

        if i3 >= $i0 goto label3;

        $b2 = r1[i3];

        $b1 = r2[i3];

        if $b2 == $b1 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isRafFormat(byte[]) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        byte[] r1, r2;
        java.lang.String $r3;
        int $i0, i3;
        byte $b1, $b2;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: byte[];

        $r3 = "FUJIFILMCCD-RAW";

        r2 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        i3 = 0;

     label1:
        $i0 = lengthof r2;

        if i3 >= $i0 goto label3;

        $b2 = r1[i3];

        $b1 = r2[i3];

        if $b2 == $b1 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isRw2Format(byte[]) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        short s0;
        java.lang.Exception $r1;
        java.lang.Throwable $r2;
        byte[] r3;
        boolean z0;
        android.media.ExifInterface$ByteOrderedDataInputStream r4, r5, r6;
        java.nio.ByteOrder r8;

        r0 := @this: android.media.ExifInterface;

        r3 := @parameter0: byte[];

        z0 = 0;

        r4 = null;

        r5 = null;

     label01:
        r6 = new android.media.ExifInterface$ByteOrderedDataInputStream;

     label02:
        r4 = null;

        r5 = null;

     label03:
        specialinvoke r6.<android.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r3);

     label04:
        r4 = r6;

        r5 = r6;

     label05:
        r8 = specialinvoke r0.<android.media.ExifInterface: java.nio.ByteOrder readByteOrder(android.media.ExifInterface$ByteOrderedDataInputStream)>(r6);

     label06:
        r4 = r6;

        r5 = r6;

     label07:
        r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = r8;

     label08:
        r4 = r6;

        r5 = r6;

     label09:
        virtualinvoke r6.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>(r8);

     label10:
        r4 = r6;

        r5 = r6;

     label11:
        s0 = virtualinvoke r6.<android.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

     label12:
        r4 = r6;

        r5 = r6;

     label13:
        virtualinvoke r6.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label14:
        if s0 != 85 goto label15;

        z0 = 1;

     label15:
        virtualinvoke r6.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        return z0;

     label16:
        $r2 := @caughtexception;

        if r4 == null goto label17;

        virtualinvoke r4.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label17:
        throw $r2;

     label18:
        $r1 := @caughtexception;

        if r5 == null goto label19;

        virtualinvoke r5.<android.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label19:
        return 0;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label18;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Exception from label11 to label12 with label18;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Throwable from label13 to label14 with label16;
    }

    private static boolean isSeekableFD(java.io.FileDescriptor)
    {
        int $i0;
        java.lang.Throwable $r0;
        boolean $z0;
        java.io.FileDescriptor r1;

        r1 := @parameter0: java.io.FileDescriptor;

     label1:
        $i0 = <android.system.OsConstants: int SEEK_CUR>;

        staticinvoke <android.system.Os: long lseek(java.io.FileDescriptor,long,int)>(r1, 0L, $i0);

     label2:
        return 1;

     label3:
        $r0 := @caughtexception;

        $z0 = <android.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "The file descriptor for the given input is not seekable");

     label4:
        return 0;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    private boolean isSupportedDataType(java.util.HashMap) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        int i0, $i2;
        java.lang.Object $r1, $r3, $r5;
        java.nio.ByteOrder $r2, $r6;
        int[] $r4, $r7, $r8, r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.HashMap r9;
        android.media.ExifInterface$ExifAttribute r10, r12;

        r0 := @this: android.media.ExifInterface;

        r9 := @parameter0: java.util.HashMap;

        $r1 = virtualinvoke r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("BitsPerSample");

        r10 = (android.media.ExifInterface$ExifAttribute) $r1;

        if r10 == null goto label4;

        $r2 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r3 = staticinvoke <android.media.ExifInterface$ExifAttribute: java.lang.Object access$700(android.media.ExifInterface$ExifAttribute,java.nio.ByteOrder)>(r10, $r2);

        r11 = (int[]) $r3;

        $r4 = <android.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r4, r11);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i2 = r0.<android.media.ExifInterface: int mMimeType>;

        if $i2 != 3 goto label4;

        $r5 = virtualinvoke r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PhotometricInterpretation");

        r12 = (android.media.ExifInterface$ExifAttribute) $r5;

        if r12 == null goto label4;

        $r6 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i0 = virtualinvoke r12.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r6);

        if i0 != 1 goto label2;

        $r8 = <android.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r11, $r8);

        if $z2 != 0 goto label3;

     label2:
        if i0 != 6 goto label4;

        $r7 = <android.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r11, $r7);

        if $z1 == 0 goto label4;

     label3:
        return 1;

     label4:
        $z3 = <android.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label5;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Unsupported data type value");

     label5:
        return 0;
    }

    public static boolean isSupportedMimeType(java.lang.String)
    {
        java.lang.NullPointerException $r0;
        java.util.Locale $r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String r2, r3;
        byte b1;

        r2 := @parameter0: java.lang.String;

        if r2 == null goto label18;

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        b1 = -1;

        $i0 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1875291391: goto label14;
            case -1635437028: goto label13;
            case -1594371159: goto label12;
            case -1487464693: goto label11;
            case -1487464690: goto label10;
            case -1487394660: goto label09;
            case -1423313290: goto label08;
            case -985160897: goto label07;
            case -332763809: goto label06;
            case 1378106698: goto label05;
            case 2099152104: goto label04;
            case 2099152524: goto label03;
            case 2111234748: goto label02;
            default: goto label01;
        };

     label01:
        goto label15;

     label02:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/x-canon-cr2");

        if $z0 == 0 goto label01;

        b1 = 2;

        goto label15;

     label03:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/x-nikon-nrw");

        if $z1 == 0 goto label01;

        b1 = 4;

        goto label15;

     label04:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/x-nikon-nef");

        if $z2 == 0 goto label01;

        b1 = 3;

        goto label15;

     label05:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/x-olympus-orf");

        if $z3 == 0 goto label01;

        b1 = 7;

        goto label15;

     label06:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/x-pentax-pef");

        if $z4 == 0 goto label01;

        b1 = 8;

        goto label15;

     label07:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/x-panasonic-rw2");

        if $z5 == 0 goto label01;

        b1 = 6;

        goto label15;

     label08:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/x-adobe-dng");

        if $z6 == 0 goto label01;

        b1 = 1;

        goto label15;

     label09:
        $z7 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/jpeg");

        if $z7 == 0 goto label01;

        b1 = 0;

        goto label15;

     label10:
        $z8 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/heif");

        if $z8 == 0 goto label01;

        b1 = 12;

        goto label15;

     label11:
        $z9 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/heic");

        if $z9 == 0 goto label01;

        b1 = 11;

        goto label15;

     label12:
        $z10 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/x-sony-arw");

        if $z10 == 0 goto label01;

        b1 = 5;

        goto label15;

     label13:
        $z11 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/x-samsung-srw");

        if $z11 == 0 goto label01;

        b1 = 9;

        goto label15;

     label14:
        $z12 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("image/x-fuji-raf");

        if $z12 == 0 goto label01;

        b1 = 10;

     label15:
        tableswitch(b1)
        {
            case 0: goto label17;
            case 1: goto label17;
            case 2: goto label17;
            case 3: goto label17;
            case 4: goto label17;
            case 5: goto label17;
            case 6: goto label17;
            case 7: goto label17;
            case 8: goto label17;
            case 9: goto label17;
            case 10: goto label17;
            case 11: goto label17;
            case 12: goto label17;
            default: goto label16;
        };

     label16:
        return 0;

     label17:
        return 1;

     label18:
        $r0 = new java.lang.NullPointerException;

        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("mimeType shouldn\'t be null");

        throw $r0;
    }

    private boolean isThumbnail(java.util.HashMap) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ExifAttribute r1, r7;
        int i0, i1;
        java.lang.Object $r2, $r3;
        java.nio.ByteOrder $r4, $r5;
        java.util.HashMap r6;

        r0 := @this: android.media.ExifInterface;

        r6 := @parameter0: java.util.HashMap;

        $r2 = virtualinvoke r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r1 = (android.media.ExifInterface$ExifAttribute) $r2;

        $r3 = virtualinvoke r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r7 = (android.media.ExifInterface$ExifAttribute) $r3;

        if r1 == null goto label1;

        if r7 == null goto label1;

        $r4 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i0 = virtualinvoke r1.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r4);

        $r5 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r7.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r5);

        if i0 > 512 goto label1;

        if i1 > 512 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isWebpFormat(byte[]) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        byte[] r1, $r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, i9, i10;
        byte $b5, $b6, $b7, $b8;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: byte[];

        i9 = 0;

     label1:
        r3 = <android.media.ExifInterface: byte[] WEBP_SIGNATURE_1>;

        $i0 = lengthof r3;

        if i9 >= $i0 goto label3;

        $b8 = r1[i9];

        $b7 = r3[i9];

        if $b8 == $b7 goto label2;

        return 0;

     label2:
        i9 = i9 + 1;

        goto label1;

     label3:
        i10 = 0;

     label4:
        r4 = <android.media.ExifInterface: byte[] WEBP_SIGNATURE_2>;

        $i1 = lengthof r4;

        if i10 >= $i1 goto label6;

        $r2 = <android.media.ExifInterface: byte[] WEBP_SIGNATURE_1>;

        $i2 = lengthof $r2;

        $i3 = $i2 + i10;

        $i4 = $i3 + 4;

        $b6 = r1[$i4];

        $b5 = r4[i10];

        if $b6 == $b5 goto label5;

        return 0;

     label5:
        i10 = i10 + 1;

        goto label4;

     label6:
        return 1;
    }

    private void loadAttributes(java.io.InputStream)
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ExifTag[][] $r2;
        int $i0, $i1, $i2, i4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.BufferedInputStream $r3, r14;
        java.util.HashMap[] $r5;
        java.lang.Throwable $r6, $r7;
        java.io.InputStream r8, r17;
        java.lang.Object r9;
        java.util.HashMap r13;
        android.media.ExifInterface$ByteOrderedDataInputStream r15;
        java.lang.NullPointerException r16;

        r0 := @this: android.media.ExifInterface;

        r8 := @parameter0: java.io.InputStream;

        if r8 == null goto label35;

        i4 = 0;

     label01:
        $r2 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        if i4 >= $i0 goto label03;

        $r5 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        r13 = new java.util.HashMap;

        specialinvoke r13.<java.util.HashMap: void <init>()>();

        $r5[i4] = r13;

     label02:
        i4 = i4 + 1;

        goto label01;

     label03:
        r9 = r8;

     label04:
        $z0 = r0.<android.media.ExifInterface: boolean mIsExifDataOnly>;

        if $z0 != 0 goto label06;

        r14 = new java.io.BufferedInputStream;

        r9 = r14;

        specialinvoke r14.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r8, 5000);

     label05:
        $r3 = (java.io.BufferedInputStream) r14;

        $i2 = specialinvoke r0.<android.media.ExifInterface: int getMimeType(java.io.BufferedInputStream)>($r3);

        r0.<android.media.ExifInterface: int mMimeType> = $i2;

     label06:
        r15 = new android.media.ExifInterface$ByteOrderedDataInputStream;

        r17 = (java.io.InputStream) r9;

        specialinvoke r15.<android.media.ExifInterface$ByteOrderedDataInputStream: void <init>(java.io.InputStream)>(r17);

        $z1 = r0.<android.media.ExifInterface: boolean mIsExifDataOnly>;

        if $z1 != 0 goto label24;

        $i1 = r0.<android.media.ExifInterface: int mMimeType>;

        tableswitch($i1)
        {
            case 0: goto label22;
            case 1: goto label22;
            case 2: goto label22;
            case 3: goto label22;
            case 4: goto label20;
            case 5: goto label22;
            case 6: goto label22;
            case 7: goto label18;
            case 8: goto label22;
            case 9: goto label16;
            case 10: goto label14;
            case 11: goto label22;
            case 12: goto label12;
            case 13: goto label10;
            case 14: goto label08;
            default: goto label07;
        };

     label07:
        goto label25;

     label08:
        specialinvoke r0.<android.media.ExifInterface: void getWebpAttributes(android.media.ExifInterface$ByteOrderedDataInputStream)>(r15);

     label09:
        goto label25;

     label10:
        specialinvoke r0.<android.media.ExifInterface: void getPngAttributes(android.media.ExifInterface$ByteOrderedDataInputStream)>(r15);

     label11:
        goto label25;

     label12:
        specialinvoke r0.<android.media.ExifInterface: void getHeifAttributes(android.media.ExifInterface$ByteOrderedDataInputStream)>(r15);

     label13:
        goto label25;

     label14:
        specialinvoke r0.<android.media.ExifInterface: void getRw2Attributes(android.media.ExifInterface$ByteOrderedDataInputStream)>(r15);

     label15:
        goto label25;

     label16:
        specialinvoke r0.<android.media.ExifInterface: void getRafAttributes(android.media.ExifInterface$ByteOrderedDataInputStream)>(r15);

     label17:
        goto label25;

     label18:
        specialinvoke r0.<android.media.ExifInterface: void getOrfAttributes(android.media.ExifInterface$ByteOrderedDataInputStream)>(r15);

     label19:
        goto label25;

     label20:
        specialinvoke r0.<android.media.ExifInterface: void getJpegAttributes(android.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r15, 0, 0);

     label21:
        goto label25;

     label22:
        specialinvoke r0.<android.media.ExifInterface: void getRawAttributes(android.media.ExifInterface$ByteOrderedDataInputStream)>(r15);

     label23:
        goto label25;

     label24:
        specialinvoke r0.<android.media.ExifInterface: void getStandaloneAttributes(android.media.ExifInterface$ByteOrderedDataInputStream)>(r15);

     label25:
        specialinvoke r0.<android.media.ExifInterface: void setThumbnailData(android.media.ExifInterface$ByteOrderedDataInputStream)>(r15);

        r0.<android.media.ExifInterface: boolean mIsSupportedFile> = 1;

     label26:
        specialinvoke r0.<android.media.ExifInterface: void addDefaultValuesForCompatibility()>();

        $z4 = <android.media.ExifInterface: boolean DEBUG>;

        if $z4 == 0 goto label32;

     label27:
        specialinvoke r0.<android.media.ExifInterface: void printAttributes()>();

        goto label32;

     label28:
        $r6 := @caughtexception;

        goto label33;

     label29:
        $r7 := @caughtexception;

     label30:
        r0.<android.media.ExifInterface: boolean mIsSupportedFile> = 0;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "Invalid image: ExifInterface got an unsupported image format file(ExifInterface supports JPEG and some RAW image formats only) or a corrupted JPEG file to ExifInterface.", $r7);

     label31:
        specialinvoke r0.<android.media.ExifInterface: void addDefaultValuesForCompatibility()>();

        $z3 = <android.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label32;

        goto label27;

     label32:
        return;

     label33:
        specialinvoke r0.<android.media.ExifInterface: void addDefaultValuesForCompatibility()>();

        $z2 = <android.media.ExifInterface: boolean DEBUG>;

        if $z2 == 0 goto label34;

        specialinvoke r0.<android.media.ExifInterface: void printAttributes()>();

     label34:
        throw $r6;

     label35:
        r16 = new java.lang.NullPointerException;

        specialinvoke r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("inputstream shouldn\'t be null");

        throw r16;

        catch java.io.IOException from label01 to label02 with label29;
        catch java.lang.OutOfMemoryError from label01 to label02 with label29;
        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.io.IOException from label04 to label05 with label29;
        catch java.lang.OutOfMemoryError from label04 to label05 with label29;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.io.IOException from label05 to label06 with label29;
        catch java.lang.OutOfMemoryError from label05 to label06 with label29;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.io.IOException from label06 to label07 with label29;
        catch java.lang.OutOfMemoryError from label06 to label07 with label29;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.io.IOException from label08 to label09 with label29;
        catch java.lang.OutOfMemoryError from label08 to label09 with label29;
        catch java.lang.Throwable from label08 to label09 with label28;
        catch java.io.IOException from label10 to label11 with label29;
        catch java.lang.OutOfMemoryError from label10 to label11 with label29;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.io.IOException from label12 to label13 with label29;
        catch java.lang.OutOfMemoryError from label12 to label13 with label29;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.io.IOException from label14 to label15 with label29;
        catch java.lang.OutOfMemoryError from label14 to label15 with label29;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.io.IOException from label16 to label17 with label29;
        catch java.lang.OutOfMemoryError from label16 to label17 with label29;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.io.IOException from label18 to label19 with label29;
        catch java.lang.OutOfMemoryError from label18 to label19 with label29;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.io.IOException from label20 to label21 with label29;
        catch java.lang.OutOfMemoryError from label20 to label21 with label29;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.io.IOException from label22 to label23 with label29;
        catch java.lang.OutOfMemoryError from label22 to label23 with label29;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.io.IOException from label24 to label25 with label29;
        catch java.lang.OutOfMemoryError from label24 to label25 with label29;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.io.IOException from label25 to label26 with label29;
        catch java.lang.OutOfMemoryError from label25 to label26 with label29;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch java.lang.Throwable from label30 to label31 with label28;
    }

    private static long parseDateTime(java.lang.String, java.lang.String, java.lang.String)
    {
        java.text.SimpleDateFormat r0, $r4, $r8, r21;
        long l0, l2, l3;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;
        java.text.ParsePosition $r3, r20;
        byte $b1;
        java.lang.Throwable $r9, $r10, $r11, $r12;
        java.lang.String r13, r14, r15, r19;
        java.util.Date r17;
        java.lang.StringBuilder r18;

        r13 := @parameter0: java.lang.String;

        r14 := @parameter1: java.lang.String;

        r15 := @parameter2: java.lang.String;

        if r13 == null goto label25;

        $r1 = <android.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r13);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label01;

        goto label25;

     label01:
        $r3 = new java.text.ParsePosition;

        specialinvoke $r3.<java.text.ParsePosition: void <init>(int)>(0);

     label02:
        r0 = <android.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        entermonitor r0;

     label03:
        $r4 = <android.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        r17 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r13, $r3);

        exitmonitor r0;

     label04:
        if r15 == null goto label11;

     label05:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        r19 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r20 = new java.text.ParsePosition;

        specialinvoke r20.<java.text.ParsePosition: void <init>(int)>(0);

        r21 = <android.media.ExifInterface: java.text.SimpleDateFormat sFormatterTz>;

        entermonitor r21;

     label06:
        $r8 = <android.media.ExifInterface: java.text.SimpleDateFormat sFormatterTz>;

        r17 = virtualinvoke $r8.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r19, r20);

        exitmonitor r21;

     label07:
        goto label11;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r21;

     label10:
        throw $r9;

     label11:
        if r17 != null goto label12;

        return -1L;

     label12:
        l0 = virtualinvoke r17.<java.util.Date: long getTime()>();

     label13:
        l2 = l0;

        if r14 == null goto label20;

     label14:
        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r14);

     label15:
        $b1 = l3 cmp 1000L;

        if $b1 <= 0 goto label18;

     label16:
        l3 = l3 / 10L;

     label17:
        goto label15;

     label18:
        l2 = l0 + l3;

        goto label20;

     label19:
        $r11 := @caughtexception;

        l2 = l0;

     label20:
        return l2;

     label21:
        $r12 := @caughtexception;

     label22:
        exitmonitor r0;

     label23:
        throw $r12;

     label24:
        $r10 := @caughtexception;

        return -1L;

     label25:
        return -1L;

        catch java.lang.IllegalArgumentException from label02 to label03 with label24;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.IllegalArgumentException from label05 to label06 with label24;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.IllegalArgumentException from label10 to label11 with label24;
        catch java.lang.IllegalArgumentException from label12 to label13 with label24;
        catch java.lang.NumberFormatException from label14 to label15 with label19;
        catch java.lang.IllegalArgumentException from label14 to label15 with label24;
        catch java.lang.NumberFormatException from label16 to label17 with label19;
        catch java.lang.IllegalArgumentException from label16 to label17 with label24;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.IllegalArgumentException from label23 to label24 with label24;
    }

    private void parseTiffHeaders(android.media.ExifInterface$ByteOrderedDataInputStream, int) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.nio.ByteOrder r1;
        int i0, $i1, i2, i3, i4, i5;
        java.lang.StringBuilder $r2, $r7, $r12;
        java.io.IOException $r5, $r10, $r16;
        java.lang.String $r6, $r11, $r14, $r17;
        android.media.ExifInterface$ByteOrderedDataInputStream r18;

        r0 := @this: android.media.ExifInterface;

        r18 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        i2 := @parameter1: int;

        r1 = specialinvoke r0.<android.media.ExifInterface: java.nio.ByteOrder readByteOrder(android.media.ExifInterface$ByteOrderedDataInputStream)>(r18);

        r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = r1;

        virtualinvoke r18.<android.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>(r1);

        i3 = virtualinvoke r18.<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i0 = r0.<android.media.ExifInterface: int mMimeType>;

        if i0 == 7 goto label2;

        if i0 == 10 goto label2;

        if i3 != 42 goto label1;

        goto label2;

     label1:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid start code: ");

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = new java.io.IOException;

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label2:
        i4 = virtualinvoke r18.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        if i4 < 8 goto label5;

        if i4 >= i2 goto label5;

        i5 = i4 - 8;

        if i5 <= 0 goto label4;

        $i1 = virtualinvoke r18.<android.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)>(i5);

        if $i1 != i5 goto label3;

        goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t jump to first Ifd: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r10 = new java.io.IOException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label4:
        return;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid first Ifd offset: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    private void printAttributes()
    {
        android.media.ExifInterface r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        java.util.HashMap[] $r4, $r9, $r13;
        int $i0, $i1, i4;
        java.lang.StringBuilder $r5, $r18;
        java.util.HashMap $r10, $r14;
        java.lang.String $r12, $r23, $r27, $r30;
        java.util.Set $r15;
        boolean $z0;
        java.lang.Object $r16, $r17, $r20;
        java.nio.ByteOrder $r26;
        android.media.ExifInterface$ExifAttribute r32;

        r0 := @this: android.media.ExifInterface;

        i4 = 0;

     label1:
        $r4 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $i0 = lengthof $r4;

        if i4 >= $i0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The size of tag group[");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r9 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[i4];

        $i1 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r12);

        $r13 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r14 = $r13[i4];

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r16 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r16;

        $r17 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r32 = (android.media.ExifInterface$ExifAttribute) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagName: ");

        $r20 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tagType: ");

        $r23 = virtualinvoke r32.<android.media.ExifInterface$ExifAttribute: java.lang.String toString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tagValue: \'");

        $r26 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r27 = virtualinvoke r32.<android.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>($r26);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r30 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r30);

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return;
    }

    private java.nio.ByteOrder readByteOrder(android.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        short s0;
        boolean $z0, $z1;
        java.nio.ByteOrder $r1, $r8;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;
        java.io.IOException $r6;
        android.media.ExifInterface$ByteOrderedDataInputStream r9;

        r0 := @this: android.media.ExifInterface;

        r9 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        s0 = virtualinvoke r9.<android.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        if s0 == 18761 goto label3;

        if s0 != 19789 goto label2;

        $z1 = <android.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "readExifSegment: Byte Align MM");

     label1:
        $r8 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        return $r8;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(s0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.io.IOException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        $z0 = <android.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "readExifSegment: Byte Align II");

     label4:
        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        return $r1;
    }

    private void readExifSegment(byte[], int) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        byte[] r1;
        int i0, $i1;
        android.media.ExifInterface$ByteOrderedDataInputStream $r3;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r3 = new android.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r3.<android.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r1);

        $i1 = lengthof r1;

        specialinvoke r0.<android.media.ExifInterface: void parseTiffHeaders(android.media.ExifInterface$ByteOrderedDataInputStream,int)>($r3, $i1);

        specialinvoke r0.<android.media.ExifInterface: void readImageFileDirectory(android.media.ExifInterface$ByteOrderedDataInputStream,int)>($r3, i0);

        return;
    }

    private void readImageFileDirectory(android.media.ExifInterface$ByteOrderedDataInputStream, int) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        short s0, $s41, s63;
        int i1, i2, i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i20, $i24, $i25, $i27, $i28, $i30, $i31, $i34, $i37, $i39, $i42, $i46, $i48, $i52, $i53, i62, i66, $i69, i73, i74, $i75, $i78, i79;
        long l4, $l17, $l22, $l29, $l35, $l45, $l47, $l49, $l54, $l55, l65, $l67, $l68, $l70, l72, $l76;
        android.media.ExifInterface$ExifAttribute r1, $r28, r117, r118;
        java.util.Set $r2, $r8, $r44;
        java.lang.Integer $r3, $r9, $r19, $r23, $r26, $r45, $r99, $r100, $r101, $r102, r120;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, z19, $z20;
        byte $b18, $b26, $b32, $b36, $b56, $b58, $b71, $b77;
        java.lang.StringBuilder $r4, $r10, $r40, $r46, $r57, $r63, $r82, $r86, $r90, $r94, $r104;
        java.lang.String $r7, $r13, $r20, $r30, $r33, $r34, $r36, $r37, $r39, $r43, $r52, $r55, $r56, $r62, $r66, $r67, $r68, $r69, $r85, $r89, $r93, $r97, $r103, $r107, r111;
        java.util.HashMap[] $r14, $r16, $r21, $r29, $r73, $r76, $r79;
        java.util.HashMap $r15, $r17, $r22, $r25, $r31, $r74, $r77, $r80;
        java.lang.Object[] $r18, $r53, $r98;
        java.lang.Object $r24, $r27;
        java.nio.ByteOrder $r35, $r38, $r70, $r71, $r72;
        java.lang.Long $r54;
        android.media.ExifInterface$ByteOrderedDataInputStream r108;
        android.media.ExifInterface$ExifTag r110;
        int[] r113;
        byte[] r124;

        r0 := @this: android.media.ExifInterface;

        r108 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        i62 := @parameter1: int;

        $r2 = r0.<android.media.ExifInterface: java.util.Set mHandledIfdOffsets>;

        $i6 = staticinvoke <android.media.ExifInterface$ByteOrderedDataInputStream: int access$900(android.media.ExifInterface$ByteOrderedDataInputStream)>(r108);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $i7 = staticinvoke <android.media.ExifInterface$ByteOrderedDataInputStream: int access$900(android.media.ExifInterface$ByteOrderedDataInputStream)>(r108);

        $i8 = $i7 + 2;

        $i9 = staticinvoke <android.media.ExifInterface$ByteOrderedDataInputStream: int access$1000(android.media.ExifInterface$ByteOrderedDataInputStream)>(r108);

        if $i8 <= $i9 goto label01;

        return;

     label01:
        s0 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        $i10 = staticinvoke <android.media.ExifInterface$ByteOrderedDataInputStream: int access$900(android.media.ExifInterface$ByteOrderedDataInputStream)>(r108);

        $i11 = s0 * 12;

        $i12 = $i10 + $i11;

        $i13 = staticinvoke <android.media.ExifInterface$ByteOrderedDataInputStream: int access$1000(android.media.ExifInterface$ByteOrderedDataInputStream)>(r108);

        if $i12 > $i13 goto label49;

        if s0 > 0 goto label02;

        goto label49;

     label02:
        $z1 = <android.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label03;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numberOfDirectoryEntry: ");

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s0);

        $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r107);

     label03:
        s63 = 0;

     label04:
        if s63 >= s0 goto label43;

        i1 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i2 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i3 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $i24 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int peek()>();

        $i25 = $i24 + 4;

        l4 = (long) $i25;

        $r21 = <android.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>;

        $r22 = $r21[i62];

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r24 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23);

        r110 = (android.media.ExifInterface$ExifTag) $r24;

        $z8 = <android.media.ExifInterface: boolean DEBUG>;

        if $z8 == 0 goto label07;

        if r110 == null goto label05;

        r111 = r110.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        goto label06;

     label05:
        r111 = null;

     label06:
        $r98 = newarray (java.lang.Object)[5];

        $r99 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i62);

        $r98[0] = $r99;

        $r100 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r98[1] = $r100;

        $r98[2] = r111;

        $r101 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r98[3] = $r101;

        $r102 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r98[4] = $r102;

        $r103 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ifdType: %d, tagNumber: %d, tagName: %s, dataFormat: %d, numberOfComponents: %d", $r98);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r103);

     label07:
        if r110 != null goto label09;

        $z18 = <android.media.ExifInterface: boolean DEBUG>;

        if $z18 == 0 goto label08;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since tag number is not defined: ");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r97 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r97);

        goto label15;

     label08:
        goto label15;

     label09:
        if i2 <= 0 goto label14;

        r113 = <android.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i52 = lengthof r113;

        if i2 < $i52 goto label10;

        goto label14;

     label10:
        $l55 = (long) i3;

        $i53 = r113[i2];

        $l54 = (long) $i53;

        l65 = $l55 * $l54;

        $b56 = l65 cmp 0L;

        if $b56 < 0 goto label12;

        $b58 = l65 cmp 2147483647L;

        if $b58 <= 0 goto label11;

        goto label12;

     label11:
        z19 = 1;

        goto label16;

     label12:
        $z17 = <android.media.ExifInterface: boolean DEBUG>;

        if $z17 == 0 goto label13;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since the number of components is invalid: ");

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r93 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r93);

     label13:
        z19 = 0;

        goto label16;

     label14:
        $z9 = <android.media.ExifInterface: boolean DEBUG>;

        if $z9 == 0 goto label15;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since data format is invalid: ");

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r89 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r89);

     label15:
        l65 = 0L;

        z19 = 0;

     label16:
        if z19 != 0 goto label17;

        virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l4);

        goto label42;

     label17:
        $b26 = l65 cmp 4L;

        if $b26 <= 0 goto label25;

        i5 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $z15 = <android.media.ExifInterface: boolean DEBUG>;

        if $z15 == 0 goto label18;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seek to data offset: ");

        virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r85 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r85);

        goto label18;

     label18:
        i66 = r0.<android.media.ExifInterface: int mMimeType>;

        if i66 != 7 goto label21;

        $r68 = r110.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        if $r68 != "MakerNote" goto label19;

        r0.<android.media.ExifInterface: int mOrfMakerNoteOffset> = i5;

        goto label22;

     label19:
        if i62 != 6 goto label20;

        $r69 = r110.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        if $r69 != "ThumbnailImage" goto label20;

        r0.<android.media.ExifInterface: int mOrfThumbnailOffset> = i5;

        r0.<android.media.ExifInterface: int mOrfThumbnailLength> = i3;

        $r70 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r1 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(6, $r70);

        $i46 = r0.<android.media.ExifInterface: int mOrfThumbnailOffset>;

        $l47 = (long) $i46;

        $r71 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r117 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l47, $r71);

        $i48 = r0.<android.media.ExifInterface: int mOrfThumbnailLength>;

        $l49 = (long) $i48;

        $r72 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r118 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l49, $r72);

        $r73 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r74 = $r73[4];

        virtualinvoke $r74.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Compression", r1);

        $r76 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r77 = $r76[4];

        virtualinvoke $r77.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormat", r117);

        $r79 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r80 = $r79[4];

        virtualinvoke $r80.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormatLength", r118);

        goto label22;

     label20:
        goto label22;

     label21:
        if i66 != 10 goto label22;

        $r67 = r110.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        if $r67 != "JpgFromRaw" goto label22;

        r0.<android.media.ExifInterface: int mRw2JpgFromRawOffset> = i5;

     label22:
        $l67 = (long) i5;

        $l68 = $l67 + l65;

        $i69 = staticinvoke <android.media.ExifInterface$ByteOrderedDataInputStream: int access$1000(android.media.ExifInterface$ByteOrderedDataInputStream)>(r108);

        $l70 = (long) $i69;

        $b71 = $l68 cmp $l70;

        if $b71 > 0 goto label23;

        $l45 = (long) i5;

        virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l45);

        goto label25;

     label23:
        $z16 = <android.media.ExifInterface: boolean DEBUG>;

        if $z16 == 0 goto label24;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since data offset is invalid: ");

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r66);

     label24:
        virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l4);

        goto label42;

     label25:
        $r25 = <android.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r27 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r26);

        r120 = (java.lang.Integer) $r27;

        $z10 = <android.media.ExifInterface: boolean DEBUG>;

        if $z10 == 0 goto label26;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nextIfdType: ");

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r120);

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" byteCount: ");

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l65);

        $r62 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r62);

     label26:
        if r120 == null goto label36;

        l72 = -1L;

        if i2 == 3 goto label30;

        if i2 == 4 goto label29;

        if i2 == 8 goto label28;

        if i2 == 9 goto label27;

        if i2 == 13 goto label27;

        goto label31;

     label27:
        $i42 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        l72 = (long) $i42;

        goto label31;

     label28:
        $s41 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        l72 = (long) $s41;

        goto label31;

     label29:
        l72 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()>();

        goto label31;

     label30:
        $i31 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        l72 = (long) $i31;

     label31:
        $z20 = <android.media.ExifInterface: boolean DEBUG>;

        if $z20 == 0 goto label32;

        $r53 = newarray (java.lang.Object)[2];

        $r54 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l72);

        $r53[0] = $r54;

        $r55 = r110.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        $r53[1] = $r55;

        $r56 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Offset: %d, tagName: %s", $r53);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r56);

        goto label32;

     label32:
        $b32 = l72 cmp 0L;

        if $b32 <= 0 goto label34;

        $i34 = staticinvoke <android.media.ExifInterface$ByteOrderedDataInputStream: int access$1000(android.media.ExifInterface$ByteOrderedDataInputStream)>(r108);

        $l35 = (long) $i34;

        $b36 = l72 cmp $l35;

        if $b36 >= 0 goto label34;

        $r44 = r0.<android.media.ExifInterface: java.util.Set mHandledIfdOffsets>;

        $i37 = (int) l72;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i37);

        $z13 = interfaceinvoke $r44.<java.util.Set: boolean contains(java.lang.Object)>($r45);

        if $z13 != 0 goto label33;

        virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l72);

        $i39 = virtualinvoke r120.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<android.media.ExifInterface: void readImageFileDirectory(android.media.ExifInterface$ByteOrderedDataInputStream,int)>(r108, $i39);

        goto label35;

     label33:
        $z14 = <android.media.ExifInterface: boolean DEBUG>;

        if $z14 == 0 goto label35;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip jump into the IFD since it has already been read: IfdType ");

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r120);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (at ");

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l72);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r52 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r52);

        goto label35;

     label34:
        $z12 = <android.media.ExifInterface: boolean DEBUG>;

        if $z12 == 0 goto label35;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip jump into the IFD since its offset is invalid: ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l72);

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r43);

     label35:
        virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l4);

        goto label42;

     label36:
        i73 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int peek()>();

        i74 = r0.<android.media.ExifInterface: int mExifOffset>;

        $i27 = (int) l65;

        r124 = newarray (byte)[$i27];

        virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r124);

        $r28 = new android.media.ExifInterface$ExifAttribute;

        $i28 = i73 + i74;

        $l29 = (long) $i28;

        specialinvoke $r28.<android.media.ExifInterface$ExifAttribute: void <init>(int,int,long,byte[],android.media.ExifInterface$1)>(i2, i3, $l29, r124, null);

        $r29 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r31 = $r29[i62];

        $r30 = r110.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        virtualinvoke $r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r28);

        $r33 = r110.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        if $r33 != "DNGVersion" goto label37;

        r0.<android.media.ExifInterface: int mMimeType> = 3;

     label37:
        $r34 = r110.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        if $r34 == "Make" goto label38;

        $r39 = r110.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        if $r39 != "Model" goto label39;

     label38:
        $r35 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r36 = virtualinvoke $r28.<android.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>($r35);

        $z11 = virtualinvoke $r36.<java.lang.String: boolean contains(java.lang.CharSequence)>("PENTAX");

        if $z11 != 0 goto label40;

     label39:
        $r37 = r110.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        if $r37 != "Compression" goto label41;

        $r38 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $i30 = virtualinvoke $r28.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r38);

        if $i30 != 65535 goto label41;

     label40:
        r0.<android.media.ExifInterface: int mMimeType> = 8;

     label41:
        $i75 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int peek()>();

        $l76 = (long) $i75;

        $b77 = $l76 cmp l4;

        if $b77 == 0 goto label42;

        virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>(l4);

     label42:
        $i78 = s63 + 1;

        s63 = (short) $i78;

        goto label04;

     label43:
        $i14 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int peek()>();

        $i15 = $i14 + 4;

        $i16 = staticinvoke <android.media.ExifInterface$ByteOrderedDataInputStream: int access$1000(android.media.ExifInterface$ByteOrderedDataInputStream)>(r108);

        if $i15 > $i16 goto label48;

        i79 = virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $z2 = <android.media.ExifInterface: boolean DEBUG>;

        if $z2 == 0 goto label44;

        $r18 = newarray (java.lang.Object)[1];

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i79);

        $r18[0] = $r19;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("nextIfdOffset: %d", $r18);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r20);

     label44:
        $l17 = (long) i79;

        $b18 = $l17 cmp 0L;

        if $b18 <= 0 goto label47;

        $i20 = staticinvoke <android.media.ExifInterface$ByteOrderedDataInputStream: int access$1000(android.media.ExifInterface$ByteOrderedDataInputStream)>(r108);

        if i79 >= $i20 goto label47;

        $r8 = r0.<android.media.ExifInterface: java.util.Set mHandledIfdOffsets>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i79);

        $z4 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z4 != 0 goto label46;

        $l22 = (long) i79;

        virtualinvoke r108.<android.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)>($l22);

        $r14 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = $r14[4];

        $z6 = virtualinvoke $r15.<java.util.HashMap: boolean isEmpty()>();

        if $z6 == 0 goto label45;

        specialinvoke r0.<android.media.ExifInterface: void readImageFileDirectory(android.media.ExifInterface$ByteOrderedDataInputStream,int)>(r108, 4);

        goto label48;

     label45:
        $r16 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[5];

        $z7 = virtualinvoke $r17.<java.util.HashMap: boolean isEmpty()>();

        if $z7 == 0 goto label48;

        specialinvoke r0.<android.media.ExifInterface: void readImageFileDirectory(android.media.ExifInterface$ByteOrderedDataInputStream,int)>(r108, 5);

        goto label48;

     label46:
        $z5 = <android.media.ExifInterface: boolean DEBUG>;

        if $z5 == 0 goto label48;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stop reading file since re-reading an IFD may cause an infinite loop: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i79);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r13);

        goto label48;

     label47:
        $z3 = <android.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label48;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stop reading file since a wrong offset may cause an infinite loop: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i79);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r7);

     label48:
        return;

     label49:
        return;
    }

    private void removeAttribute(java.lang.String)
    {
        android.media.ExifInterface r0;
        java.lang.String r1;
        android.media.ExifInterface$ExifTag[][] $r2;
        int $i0, i1;
        java.util.HashMap[] $r3;
        java.util.HashMap $r4;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r2 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r4 = $r3[i1];

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void retrieveJpegImageSize(android.media.ExifInterface$ByteOrderedDataInputStream, int) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ByteOrderedDataInputStream r1;
        int i0, $i1;
        android.media.ExifInterface$ExifAttribute r2, r13, r14;
        java.util.HashMap[] $r3, $r6, $r9;
        java.util.HashMap $r4, $r7, $r10;
        java.lang.Object $r5, $r8, $r11;
        java.nio.ByteOrder $r12;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter1: int;

        $r3 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r4 = $r3[i0];

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r2 = (android.media.ExifInterface$ExifAttribute) $r5;

        $r6 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r7 = $r6[i0];

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r13 = (android.media.ExifInterface$ExifAttribute) $r8;

        if r2 == null goto label1;

        if r13 != null goto label2;

     label1:
        $r9 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[i0];

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JPEGInterchangeFormat");

        r14 = (android.media.ExifInterface$ExifAttribute) $r11;

        if r14 == null goto label2;

        $r12 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $i1 = virtualinvoke r14.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r12);

        specialinvoke r0.<android.media.ExifInterface: void getJpegAttributes(android.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r1, $i1, i0);

     label2:
        return;
    }

    private void saveJpegAttributes(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        boolean $z0, $z1, $z2;
        java.io.DataInputStream $r2;
        android.media.ExifInterface$ByteOrderedDataOutputStream $r3;
        java.nio.ByteOrder $r4;
        byte $b0, $b1, $b12, b13;
        java.io.IOException $r5, $r6, $r8, $r9, $r10, $r12, $r13;
        java.lang.String $r7, $r20;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i14, i15, i16, i17, i18, i19;
        byte[] $r11, r26, r27;
        java.util.HashMap[] $r14, $r16;
        java.util.HashMap $r15, $r17;
        java.lang.Object $r18;
        java.lang.StringBuilder $r19;
        java.io.InputStream r21;
        java.io.OutputStream r22;
        android.media.ExifInterface$ExifAttribute r25;

        r0 := @this: android.media.ExifInterface;

        r21 := @parameter0: java.io.InputStream;

        r22 := @parameter1: java.io.OutputStream;

        $z0 = <android.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveJpegAttributes starting with (inputStream: ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", outputStream: ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r20);

     label01:
        $r2 = new java.io.DataInputStream;

        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r21);

        $r3 = new android.media.ExifInterface$ByteOrderedDataOutputStream;

        $r4 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        specialinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void <init>(java.io.OutputStream,java.nio.ByteOrder)>(r22, $r4);

        $b0 = virtualinvoke $r2.<java.io.DataInputStream: byte readByte()>();

        if $b0 != -1 goto label17;

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        $b1 = virtualinvoke $r2.<java.io.DataInputStream: byte readByte()>();

        if $b1 != -40 goto label16;

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-40);

        r25 = null;

        $r7 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("Xmp");

        if $r7 == null goto label02;

        r25 = null;

        $z2 = r0.<android.media.ExifInterface: boolean mXmpIsFromSeparateMarker>;

        if $z2 == 0 goto label02;

        $r16 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[0];

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>("Xmp");

        r25 = (android.media.ExifInterface$ExifAttribute) $r18;

     label02:
        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-31);

        specialinvoke r0.<android.media.ExifInterface: int writeExifSegment(android.media.ExifInterface$ByteOrderedDataOutputStream)>($r3);

        if r25 == null goto label03;

        $r14 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = $r14[0];

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Xmp", r25);

     label03:
        r26 = newarray (byte)[4096];

     label04:
        $b12 = virtualinvoke $r2.<java.io.DataInputStream: byte readByte()>();

        if $b12 != -1 goto label15;

        b13 = virtualinvoke $r2.<java.io.DataInputStream: byte readByte()>();

        if b13 == -39 goto label14;

        if b13 == -38 goto label14;

        if b13 == -31 goto label07;

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(b13);

        i14 = virtualinvoke $r2.<java.io.DataInputStream: int readUnsignedShort()>();

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(i14);

        i15 = i14 + -2;

        if i15 < 0 goto label06;

     label05:
        if i15 <= 0 goto label12;

        $i10 = lengthof r26;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>(i15, $i10);

        i16 = virtualinvoke $r2.<java.io.DataInputStream: int read(byte[],int,int)>(r26, 0, $i11);

        if i16 < 0 goto label12;

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)>(r26, 0, i16);

        i15 = i15 - i16;

        goto label05;

     label06:
        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw $r13;

     label07:
        $i2 = virtualinvoke $r2.<java.io.DataInputStream: int readUnsignedShort()>();

        i17 = $i2 - 2;

        if i17 < 0 goto label13;

        r27 = newarray (byte)[6];

        if i17 < 6 goto label10;

        $i6 = virtualinvoke $r2.<java.io.DataInputStream: int read(byte[])>(r27);

        if $i6 != 6 goto label09;

        $r11 = <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r27, $r11);

        if $z1 == 0 goto label10;

        $i7 = i17 - 6;

        $i8 = virtualinvoke $r2.<java.io.DataInputStream: int skipBytes(int)>($i7);

        $i9 = i17 - 6;

        if $i8 != $i9 goto label08;

        goto label12;

     label08:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw $r12;

     label09:
        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif");

        throw $r10;

     label10:
        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(b13);

        $i3 = i17 + 2;

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>($i3);

        i18 = i17;

        if i17 < 6 goto label11;

        i18 = i17 - 6;

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>(r27);

     label11:
        if i18 <= 0 goto label12;

        $i4 = lengthof r26;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i18, $i4);

        i19 = virtualinvoke $r2.<java.io.DataInputStream: int read(byte[],int,int)>(r26, 0, $i5);

        if i19 < 0 goto label12;

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)>(r26, 0, i19);

        i18 = i18 - i19;

        goto label11;

     label12:
        goto label04;

     label13:
        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw $r9;

     label14:
        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(b13);

        staticinvoke <libcore.io.Streams: int copy(java.io.InputStream,java.io.OutputStream)>($r2, $r3);

        return;

     label15:
        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Invalid marker");

        throw $r8;

     label16:
        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Invalid marker");

        throw $r6;

     label17:
        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Invalid marker");

        throw $r5;
    }

    private void savePngAttributes(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.util.zip.CRC32 r1;
        boolean $z0;
        java.io.DataInputStream $r2;
        android.media.ExifInterface$ByteOrderedDataOutputStream $r3, r26;
        java.nio.ByteOrder $r4, $r8;
        byte[] $r5, $r6, r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i13, $i15, $i16, i18, i19;
        java.io.ByteArrayOutputStream $r7, $r10;
        java.io.OutputStream $r9, r21;
        long $l12;
        java.lang.StringBuilder $r11;
        java.lang.String $r17;
        java.lang.Throwable $r18, $r19;
        java.io.InputStream r20;

        r0 := @this: android.media.ExifInterface;

        r20 := @parameter0: java.io.InputStream;

        r21 := @parameter1: java.io.OutputStream;

        $z0 = <android.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("savePngAttributes starting with (inputStream: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", outputStream: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r17);

     label01:
        $r2 = new java.io.DataInputStream;

        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r20);

        $r3 = new android.media.ExifInterface$ByteOrderedDataOutputStream;

        $r4 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        specialinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void <init>(java.io.OutputStream,java.nio.ByteOrder)>(r21, $r4);

        $r5 = <android.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $i0 = lengthof $r5;

        staticinvoke <android.media.ExifInterface: void copy(java.io.InputStream,java.io.OutputStream,int)>($r2, $r3, $i0);

        i18 = r0.<android.media.ExifInterface: int mExifOffset>;

        if i18 != 0 goto label02;

        i19 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(i19);

        $i15 = i19 + 4;

        $i16 = $i15 + 4;

        staticinvoke <android.media.ExifInterface: void copy(java.io.InputStream,java.io.OutputStream,int)>($r2, $r3, $i16);

        goto label03;

     label02:
        $r6 = <android.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $i1 = lengthof $r6;

        $i2 = i18 - $i1;

        $i3 = $i2 - 4;

        $i4 = $i3 - 4;

        staticinvoke <android.media.ExifInterface: void copy(java.io.InputStream,java.io.OutputStream,int)>($r2, $r3, $i4);

        $i5 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

        $i6 = $i5 + 4;

        $i7 = $i6 + 4;

        virtualinvoke $r2.<java.io.DataInputStream: int skipBytes(int)>($i7);

     label03:
        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        r26 = new android.media.ExifInterface$ByteOrderedDataOutputStream;

        $r8 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        specialinvoke r26.<android.media.ExifInterface$ByteOrderedDataOutputStream: void <init>(java.io.OutputStream,java.nio.ByteOrder)>($r7, $r8);

        specialinvoke r0.<android.media.ExifInterface: int writeExifSegment(android.media.ExifInterface$ByteOrderedDataOutputStream)>(r26);

        $r9 = r26.<android.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $r10 = (java.io.ByteArrayOutputStream) $r9;

        r27 = virtualinvoke $r10.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>(r27);

        r1 = new java.util.zip.CRC32;

        specialinvoke r1.<java.util.zip.CRC32: void <init>()>();

        $i10 = lengthof r27;

        $i11 = $i10 - 4;

        virtualinvoke r1.<java.util.zip.CRC32: void update(byte[],int,int)>(r27, 4, $i11);

        $l12 = virtualinvoke r1.<java.util.zip.CRC32: long getValue()>();

        $i13 = (int) $l12;

        virtualinvoke $r3.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>($i13);

     label05:
        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void close()>();

        staticinvoke <libcore.io.Streams: int copy(java.io.InputStream,java.io.OutputStream)>($r2, $r3);

        return;

     label06:
        $r18 := @caughtexception;

     label07:
        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void close()>();

     label08:
        goto label10;

     label09:
        $r19 := @caughtexception;

        virtualinvoke $r18.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r19);

     label10:
        throw $r18;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    private void setThumbnailData(android.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ByteOrderedDataInputStream r1;
        java.util.HashMap r2;
        android.media.ExifInterface$ExifAttribute r3;
        int i0;
        java.util.HashMap[] $r4;
        java.lang.Object $r5;
        java.nio.ByteOrder $r6;
        boolean $z0;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        $r4 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        r2 = $r4[4];

        $r5 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Compression");

        r3 = (android.media.ExifInterface$ExifAttribute) $r5;

        if r3 == null goto label4;

        $r6 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i0 = virtualinvoke r3.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r6);

        r0.<android.media.ExifInterface: int mThumbnailCompression> = i0;

        if i0 == 1 goto label2;

        if i0 == 6 goto label1;

        if i0 == 7 goto label2;

        goto label3;

     label1:
        specialinvoke r0.<android.media.ExifInterface: void handleThumbnailFromJfif(android.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)>(r1, r2);

        goto label3;

     label2:
        $z0 = specialinvoke r0.<android.media.ExifInterface: boolean isSupportedDataType(java.util.HashMap)>(r2);

        if $z0 == 0 goto label3;

        specialinvoke r0.<android.media.ExifInterface: void handleThumbnailFromStrips(android.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)>(r1, r2);

     label3:
        goto label5;

     label4:
        specialinvoke r0.<android.media.ExifInterface: void handleThumbnailFromJfif(android.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)>(r1, r2);

     label5:
        return;
    }

    private void swapBasedOnImageSize(int, int) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        int i0, i1, i2, i3, i4, i5;
        android.media.ExifInterface$ExifAttribute r1, r2, r24, r25;
        java.util.HashMap[] $r3, $r5, $r7, $r10, $r13, $r16, r26;
        java.util.HashMap $r4, $r6, $r8, $r11, $r14, $r17, $r23, r27;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r9, $r12, $r15, $r18;
        java.nio.ByteOrder $r19, $r20, $r21, $r22;

        r0 := @this: android.media.ExifInterface;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r4 = $r3[i0];

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $r5 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r6 = $r5[i1];

        $z2 = virtualinvoke $r6.<java.util.HashMap: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        goto label7;

     label1:
        $r7 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r8 = $r7[i0];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r1 = (android.media.ExifInterface$ExifAttribute) $r9;

        $r10 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r10[i0];

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r24 = (android.media.ExifInterface$ExifAttribute) $r12;

        $r13 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r14 = $r13[i1];

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r25 = (android.media.ExifInterface$ExifAttribute) $r15;

        $r16 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[i1];

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r2 = (android.media.ExifInterface$ExifAttribute) $r18;

        if r1 == null goto label5;

        if r24 != null goto label2;

        goto label5;

     label2:
        if r25 == null goto label4;

        if r2 != null goto label3;

        goto label4;

     label3:
        $r19 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i2 = virtualinvoke r1.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r19);

        $r20 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i3 = virtualinvoke r24.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r20);

        $r21 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i4 = virtualinvoke r25.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r21);

        $r22 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i5 = virtualinvoke r2.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r22);

        if i2 >= i4 goto label6;

        if i3 >= i5 goto label6;

        r26 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        r27 = r26[i0];

        $r23 = r26[i1];

        r26[i0] = $r23;

        r26[i1] = r27;

        goto label6;

     label4:
        $z4 = <android.media.ExifInterface: boolean DEBUG>;

        if $z4 == 0 goto label6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Second image does not contain valid size information");

        goto label6;

     label5:
        $z3 = <android.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "First image does not contain valid size information");

     label6:
        return;

     label7:
        $z1 = <android.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label8;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Cannot perform swap since only one image data exists");

     label8:
        return;
    }

    private boolean updateAttribute(java.lang.String, android.media.ExifInterface$ExifAttribute)
    {
        android.media.ExifInterface r0;
        java.lang.String r1;
        android.media.ExifInterface$ExifAttribute r2;
        android.media.ExifInterface$ExifTag[][] $r3;
        int $i0, i1;
        java.util.HashMap[] $r4, $r6;
        java.util.HashMap $r5, $r7;
        boolean $z0, z1;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.media.ExifInterface$ExifAttribute;

        z1 = 0;

        i1 = 0;

     label1:
        $r3 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label3;

        $r4 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r5 = $r4[i1];

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r6 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r7 = $r6[i1];

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        z1 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z1;
    }

    private void updateImageSizeValues(android.media.ExifInterface$ByteOrderedDataInputStream, int) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        android.media.ExifInterface$ExifAttribute r1, r2, r3, r4, r49, r51, r52, r54, r55;
        java.util.HashMap[] $r5, $r8, $r11, $r14, $r17, $r26, $r29, $r36, $r39;
        java.util.HashMap $r6, $r9, $r12, $r15, $r18, $r27, $r30, $r37, $r40;
        java.lang.Object $r7, $r10, $r13, $r16, $r19, $r33, $r43;
        java.nio.ByteOrder $r20, $r21, $r22, $r23, $r24, $r25, $r32, $r34, $r35, $r42, $r44, $r46;
        android.media.ExifInterface$Rational $r45, $r47;
        android.media.ExifInterface$ByteOrderedDataInputStream r48;
        android.media.ExifInterface$Rational[] r50;
        int[] r53;

        r0 := @this: android.media.ExifInterface;

        r48 := @parameter0: android.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter1: int;

        $r5 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r6 = $r5[i0];

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("DefaultCropSize");

        r1 = (android.media.ExifInterface$ExifAttribute) $r7;

        $r8 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r9 = $r8[i0];

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorTopBorder");

        r2 = (android.media.ExifInterface$ExifAttribute) $r10;

        $r11 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r11[i0];

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorLeftBorder");

        r3 = (android.media.ExifInterface$ExifAttribute) $r13;

        $r14 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = $r14[i0];

        $r16 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorBottomBorder");

        r49 = (android.media.ExifInterface$ExifAttribute) $r16;

        $r17 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r18 = $r17[i0];

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorRightBorder");

        r4 = (android.media.ExifInterface$ExifAttribute) $r19;

        if r1 == null goto label3;

        $i7 = r1.<android.media.ExifInterface$ExifAttribute: int format>;

        if $i7 != 5 goto label1;

        $r42 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r43 = staticinvoke <android.media.ExifInterface$ExifAttribute: java.lang.Object access$700(android.media.ExifInterface$ExifAttribute,java.nio.ByteOrder)>(r1, $r42);

        r50 = (android.media.ExifInterface$Rational[]) $r43;

        $r45 = r50[0];

        $r44 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r51 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createURational(android.media.ExifInterface$Rational,java.nio.ByteOrder)>($r45, $r44);

        $r47 = r50[1];

        $r46 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r52 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createURational(android.media.ExifInterface$Rational,java.nio.ByteOrder)>($r47, $r46);

        goto label2;

     label1:
        $r32 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r33 = staticinvoke <android.media.ExifInterface$ExifAttribute: java.lang.Object access$700(android.media.ExifInterface$ExifAttribute,java.nio.ByteOrder)>(r1, $r32);

        r53 = (int[]) $r33;

        $i8 = r53[0];

        $r34 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r51 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i8, $r34);

        $i9 = r53[1];

        $r35 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r52 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i9, $r35);

     label2:
        $r36 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r37 = $r36[i0];

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r51);

        $r39 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r40 = $r39[i0];

        virtualinvoke $r40.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r52);

        goto label6;

     label3:
        if r2 == null goto label5;

        if r3 == null goto label5;

        if r49 == null goto label5;

        if r4 == null goto label5;

        $r20 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r2.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r20);

        $r21 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i2 = virtualinvoke r49.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r21);

        $r22 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i3 = virtualinvoke r4.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r22);

        $r23 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i4 = virtualinvoke r3.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r23);

        if i2 <= i1 goto label4;

        if i3 <= i4 goto label4;

        $i5 = i2 - i1;

        $r24 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r54 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i5, $r24);

        $i6 = i3 - i4;

        $r25 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r55 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i6, $r25);

        $r26 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r27 = $r26[i0];

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r54);

        $r29 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r30 = $r29[i0];

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r55);

        goto label4;

     label4:
        goto label6;

     label5:
        specialinvoke r0.<android.media.ExifInterface: void retrieveJpegImageSize(android.media.ExifInterface$ByteOrderedDataInputStream,int)>(r48, i0);

     label6:
        return;
    }

    private void validateImages() throws java.io.IOException
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ExifAttribute r1, r18;
        java.util.HashMap[] $r2, $r5, $r8, $r12, $r15, $r19, r21, $r22;
        java.util.HashMap $r3, $r6, $r9, $r10, $r11, $r13, $r16, $r20, $r23;
        java.lang.Object $r4, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: android.media.ExifInterface;

        specialinvoke r0.<android.media.ExifInterface: void swapBasedOnImageSize(int,int)>(0, 5);

        specialinvoke r0.<android.media.ExifInterface: void swapBasedOnImageSize(int,int)>(0, 4);

        specialinvoke r0.<android.media.ExifInterface: void swapBasedOnImageSize(int,int)>(5, 4);

        $r2 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r3 = $r2[1];

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PixelXDimension");

        r1 = (android.media.ExifInterface$ExifAttribute) $r4;

        $r5 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r6 = $r5[1];

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PixelYDimension");

        r18 = (android.media.ExifInterface$ExifAttribute) $r7;

        if r1 == null goto label1;

        if r18 == null goto label1;

        $r12 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r13 = $r12[0];

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r1);

        $r15 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r16 = $r15[0];

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r18);

     label1:
        $r19 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r20 = $r19[4];

        $z1 = virtualinvoke $r20.<java.util.HashMap: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r8 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r9 = $r8[5];

        $z0 = specialinvoke r0.<android.media.ExifInterface: boolean isThumbnail(java.util.HashMap)>($r9);

        if $z0 == 0 goto label2;

        r21 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = r21[5];

        r21[4] = $r10;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r21[5] = $r11;

     label2:
        $r22 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r23 = $r22[4];

        $z2 = specialinvoke r0.<android.media.ExifInterface: boolean isThumbnail(java.util.HashMap)>($r23);

        if $z2 != 0 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "No image meets the size requirements of a thumbnail image.");

     label3:
        return;
    }

    private int writeExifSegment(android.media.ExifInterface$ByteOrderedDataOutputStream) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ByteOrderedDataOutputStream r1;
        int[] r2, r154;
        java.lang.Object[] r3, $r77;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i18, $i20, $i22, $i24, $i25, $i26, $i27, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, i43, i44, i45, i46, i47, i48, $i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i63, $i64, i65, i66, i67, i68;
        android.media.ExifInterface$ExifTag $r4, $r6, $r47, $r54, $r62, $r70, $r87, $r105, $r112, $r120, $r128, $r136, $r151;
        java.lang.String $r5, $r7, $r57, $r65, $r73, $r85, $r90, $r108, $r115, $r123, $r131, $r139, $r152;
        android.media.ExifInterface$ExifTag[][] $r8, $r15, $r76, r153, $r157, $r161;
        java.util.HashMap[] $r9, $r11, $r13, $r16, $r18, $r20, $r25, $r27, $r29, $r31, $r40, $r43, $r52, $r60, $r68, $r80, $r86, $r93, $r95, $r97, $r104, $r111, $r118, $r126, $r134, $r142, $r147, $r165;
        java.util.HashMap $r10, $r12, $r14, $r17, $r19, $r21, $r26, $r28, $r30, $r32, $r41, $r44, $r56, $r64, $r72, $r81, $r89, $r94, $r96, $r98, $r107, $r114, $r122, $r130, $r138, $r143, $r148, $r166;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.nio.ByteOrder $r22, $r23, $r55, $r63, $r71, $r88, $r106, $r113, $r121, $r129, $r137, $r159, $r160;
        byte[] $r24, $r37, $r38, $r39, $r49, $r50, $r51;
        java.util.Set $r33, $r99, $r144, $r167;
        java.lang.Object $r34, $r36, $r42, $r45, $r46, $r48, $r100, $r102, $r145, $r146, $r149;
        java.util.Map$Entry $r35, $r101, r156, r163;
        long $l14, $l17, $l19, $l21, $l23, $l29, $l42;
        android.media.ExifInterface$ExifTag[] $r53, $r61, $r69, $r119, $r127, $r135, r155;
        android.media.ExifInterface$ExifAttribute $r58, $r66, $r74, $r91, $r103, $r109, $r116, $r124, $r132, $r140, r164, r169;
        java.lang.Integer $r78, $r79, $r82, $r83, $r84;
        java.util.Iterator r158, r162, r168;
        short s61;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: android.media.ExifInterface$ByteOrderedDataOutputStream;

        r153 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof r153;

        r2 = newarray (int)[$i0];

        $i1 = lengthof r153;

        r154 = newarray (int)[$i1];

        r155 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        i43 = lengthof r155;

        i44 = 0;

     label01:
        if i44 >= i43 goto label02;

        $r151 = r155[i44];

        $r152 = $r151.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        specialinvoke r0.<android.media.ExifInterface: void removeAttribute(java.lang.String)>($r152);

        i44 = i44 + 1;

        goto label01;

     label02:
        $r4 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG>;

        $r5 = $r4.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        specialinvoke r0.<android.media.ExifInterface: void removeAttribute(java.lang.String)>($r5);

        $r6 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG>;

        $r7 = $r6.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        specialinvoke r0.<android.media.ExifInterface: void removeAttribute(java.lang.String)>($r7);

        i45 = 0;

     label03:
        $r8 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i2 = lengthof $r8;

        if i45 >= $i2 goto label07;

        $r142 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r143 = $r142[i45];

        $r144 = virtualinvoke $r143.<java.util.HashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r144.<java.util.Set: java.lang.Object[] toArray()>();

        i46 = lengthof r3;

        i47 = 0;

     label04:
        if i47 >= i46 goto label06;

        $r145 = r3[i47];

        r156 = (java.util.Map$Entry) $r145;

        $r146 = interfaceinvoke r156.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r146 != null goto label05;

        $r147 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r148 = $r147[i45];

        $r149 = interfaceinvoke r156.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r148.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r149);

     label05:
        i47 = i47 + 1;

        goto label04;

     label06:
        i45 = i45 + 1;

        goto label03;

     label07:
        $r9 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[1];

        $z0 = virtualinvoke $r10.<java.util.HashMap: boolean isEmpty()>();

        if $z0 != 0 goto label08;

        $r134 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r138 = $r134[0];

        $r135 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r136 = $r135[1];

        $r139 = $r136.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        $r137 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r140 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r137);

        virtualinvoke $r138.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r139, $r140);

     label08:
        $r11 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r11[2];

        $z1 = virtualinvoke $r12.<java.util.HashMap: boolean isEmpty()>();

        if $z1 != 0 goto label09;

        $r126 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r130 = $r126[0];

        $r127 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r128 = $r127[2];

        $r131 = $r128.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        $r129 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r132 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r129);

        virtualinvoke $r130.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r131, $r132);

     label09:
        $r13 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r14 = $r13[3];

        $z2 = virtualinvoke $r14.<java.util.HashMap: boolean isEmpty()>();

        if $z2 != 0 goto label10;

        $r118 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r122 = $r118[1];

        $r119 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r120 = $r119[3];

        $r123 = $r120.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        $r121 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r124 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r121);

        virtualinvoke $r122.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r123, $r124);

     label10:
        $z3 = r0.<android.media.ExifInterface: boolean mHasThumbnail>;

        if $z3 == 0 goto label11;

        $r104 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r107 = $r104[4];

        $r105 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG>;

        $r108 = $r105.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        $r106 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r109 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r106);

        virtualinvoke $r107.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r108, $r109);

        $r111 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r114 = $r111[4];

        $r112 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG>;

        $r115 = $r112.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        $i41 = r0.<android.media.ExifInterface: int mThumbnailLength>;

        $l42 = (long) $i41;

        $r113 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r116 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l42, $r113);

        virtualinvoke $r114.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r115, $r116);

     label11:
        i48 = 0;

     label12:
        $r157 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i49 = lengthof $r157;

        if i48 >= $i49 goto label16;

        i50 = 0;

        $r97 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r98 = $r97[i48];

        $r99 = virtualinvoke $r98.<java.util.HashMap: java.util.Set entrySet()>();

        r158 = interfaceinvoke $r99.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z14 = interfaceinvoke r158.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label15;

        $r100 = interfaceinvoke r158.<java.util.Iterator: java.lang.Object next()>();

        $r101 = (java.util.Map$Entry) $r100;

        $r102 = interfaceinvoke $r101.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r103 = (android.media.ExifInterface$ExifAttribute) $r102;

        i51 = virtualinvoke $r103.<android.media.ExifInterface$ExifAttribute: int size()>();

        i52 = i50;

        if i51 <= 4 goto label14;

        i52 = i50 + i51;

     label14:
        i50 = i52;

        goto label13;

     label15:
        $i39 = r154[i48];

        $i40 = $i39 + i50;

        r154[i48] = $i40;

        i48 = i48 + 1;

        goto label12;

     label16:
        i53 = 8;

        i54 = 0;

     label17:
        $r15 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i3 = lengthof $r15;

        if i54 >= $i3 goto label19;

        i55 = i53;

        $r93 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r94 = $r93[i54];

        $z13 = virtualinvoke $r94.<java.util.HashMap: boolean isEmpty()>();

        if $z13 != 0 goto label18;

        r2[i54] = i53;

        $r95 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r96 = $r95[i54];

        $i33 = virtualinvoke $r96.<java.util.HashMap: int size()>();

        $i34 = $i33 * 12;

        $i35 = $i34 + 2;

        $i37 = $i35 + 4;

        $i36 = r154[i54];

        $i38 = $i37 + $i36;

        i55 = i53 + $i38;

     label18:
        i54 = i54 + 1;

        i53 = i55;

        goto label17;

     label19:
        i56 = i53;

        $z4 = r0.<android.media.ExifInterface: boolean mHasThumbnail>;

        if $z4 == 0 goto label20;

        $r86 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r89 = $r86[4];

        $r87 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG>;

        $r90 = $r87.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        $l29 = (long) i53;

        $r88 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r91 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l29, $r88);

        virtualinvoke $r89.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r90, $r91);

        $i30 = r0.<android.media.ExifInterface: int mExifOffset>;

        $i31 = $i30 + i53;

        r0.<android.media.ExifInterface: int mThumbnailOffset> = $i31;

        $i32 = r0.<android.media.ExifInterface: int mThumbnailLength>;

        i56 = i53 + $i32;

     label20:
        i57 = i56;

        $i4 = r0.<android.media.ExifInterface: int mMimeType>;

        if $i4 != 4 goto label21;

        i57 = i56 + 8;

     label21:
        $z5 = <android.media.ExifInterface: boolean DEBUG>;

        if $z5 == 0 goto label23;

        i58 = 0;

     label22:
        $r76 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i24 = lengthof $r76;

        if i58 >= $i24 goto label23;

        $r77 = newarray (java.lang.Object)[5];

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i58);

        $r77[0] = $r78;

        $i25 = r2[i58];

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        $r77[1] = $r79;

        $r80 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r81 = $r80[i58];

        $i26 = virtualinvoke $r81.<java.util.HashMap: int size()>();

        $r82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i26);

        $r77[2] = $r82;

        $i27 = r154[i58];

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        $r77[3] = $r83;

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i57);

        $r77[4] = $r84;

        $r85 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("index: %d, offsets: %d, tag count: %d, data sizes: %d, total size: %d", $r77);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r85);

        i58 = i58 + 1;

        goto label22;

     label23:
        $r16 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[1];

        $z6 = virtualinvoke $r17.<java.util.HashMap: boolean isEmpty()>();

        if $z6 != 0 goto label24;

        $r68 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r72 = $r68[0];

        $r69 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r70 = $r69[1];

        $r73 = $r70.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        $i22 = r2[1];

        $l23 = (long) $i22;

        $r71 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r74 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l23, $r71);

        virtualinvoke $r72.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r73, $r74);

     label24:
        $r18 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r19 = $r18[2];

        $z7 = virtualinvoke $r19.<java.util.HashMap: boolean isEmpty()>();

        if $z7 != 0 goto label25;

        $r60 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r64 = $r60[0];

        $r61 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r62 = $r61[2];

        $r65 = $r62.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        $i20 = r2[2];

        $l21 = (long) $i20;

        $r63 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r66 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l21, $r63);

        virtualinvoke $r64.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r65, $r66);

     label25:
        $r20 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r21 = $r20[3];

        $z8 = virtualinvoke $r21.<java.util.HashMap: boolean isEmpty()>();

        if $z8 != 0 goto label26;

        $r52 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r56 = $r52[1];

        $r53 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r54 = $r53[3];

        $r57 = $r54.<android.media.ExifInterface$ExifTag: java.lang.String name>;

        $i18 = r2[3];

        $l19 = (long) $i18;

        $r55 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r58 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l19, $r55);

        virtualinvoke $r56.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, $r58);

     label26:
        i59 = r0.<android.media.ExifInterface: int mMimeType>;

        if i59 != 4 goto label27;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(i57);

        $r51 = <android.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r51);

        goto label28;

     label27:
        if i59 != 13 goto label28;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(i57);

        $r50 = <android.media.ExifInterface: byte[] PNG_CHUNK_TYPE_EXIF>;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r50);

     label28:
        $r159 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r160 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        if $r159 != $r160 goto label29;

        s61 = 19789;

        goto label30;

     label29:
        s61 = 18761;

     label30:
        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeShort(short)>(s61);

        $r22 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void setByteOrder(java.nio.ByteOrder)>($r22);

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(42);

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>(8L);

        i63 = 0;

     label31:
        $r161 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i64 = lengthof $r161;

        if i63 >= $i64 goto label43;

        $r25 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r26 = $r25[i63];

        $z10 = virtualinvoke $r26.<java.util.HashMap: boolean isEmpty()>();

        if $z10 != 0 goto label42;

        $r27 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r28 = $r27[i63];

        $i5 = virtualinvoke $r28.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>($i5);

        $i6 = r2[i63];

        $i7 = $i6 + 2;

        $r29 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r30 = $r29[i63];

        $i8 = virtualinvoke $r30.<java.util.HashMap: int size()>();

        $i9 = $i8 * 12;

        $i10 = $i7 + $i9;

        i65 = $i10 + 4;

        $r31 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r32 = $r31[i63];

        $r33 = virtualinvoke $r32.<java.util.HashMap: java.util.Set entrySet()>();

        r162 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>();

     label32:
        $z11 = interfaceinvoke r162.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label36;

        $r42 = interfaceinvoke r162.<java.util.Iterator: java.lang.Object next()>();

        r163 = (java.util.Map$Entry) $r42;

        $r43 = <android.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r44 = $r43[i63];

        $r45 = interfaceinvoke r163.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r46 = virtualinvoke $r44.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r45);

        $r47 = (android.media.ExifInterface$ExifTag) $r46;

        i66 = $r47.<android.media.ExifInterface$ExifTag: int number>;

        $r48 = interfaceinvoke r163.<java.util.Map$Entry: java.lang.Object getValue()>();

        r164 = (android.media.ExifInterface$ExifAttribute) $r48;

        i67 = virtualinvoke r164.<android.media.ExifInterface$ExifAttribute: int size()>();

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(i66);

        $i15 = r164.<android.media.ExifInterface$ExifAttribute: int format>;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>($i15);

        $i16 = r164.<android.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>($i16);

        if i67 <= 4 goto label33;

        $l17 = (long) i65;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>($l17);

        i68 = i65 + i67;

        goto label35;

     label33:
        $r49 = r164.<android.media.ExifInterface$ExifAttribute: byte[] bytes>;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r49);

        i68 = i65;

        if i67 >= 4 goto label35;

     label34:
        i68 = i65;

        if i67 >= 4 goto label35;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(0);

        i67 = i67 + 1;

        goto label34;

     label35:
        i65 = i68;

        goto label32;

     label36:
        if i63 != 0 goto label37;

        $r40 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r41 = $r40[4];

        $z12 = virtualinvoke $r41.<java.util.HashMap: boolean isEmpty()>();

        if $z12 != 0 goto label37;

        $i13 = r2[4];

        $l14 = (long) $i13;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>($l14);

        goto label38;

     label37:
        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>(0L);

     label38:
        $r165 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r166 = $r165[i63];

        $r167 = virtualinvoke $r166.<java.util.HashMap: java.util.Set entrySet()>();

        r168 = interfaceinvoke $r167.<java.util.Set: java.util.Iterator iterator()>();

     label39:
        $z15 = interfaceinvoke r168.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label41;

        $r34 = interfaceinvoke r168.<java.util.Iterator: java.lang.Object next()>();

        $r35 = (java.util.Map$Entry) $r34;

        $r36 = interfaceinvoke $r35.<java.util.Map$Entry: java.lang.Object getValue()>();

        r169 = (android.media.ExifInterface$ExifAttribute) $r36;

        $r37 = r169.<android.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i11 = lengthof $r37;

        if $i11 <= 4 goto label40;

        $r39 = r169.<android.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $r38 = r169.<android.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i12 = lengthof $r38;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)>($r39, 0, $i12);

        goto label40;

     label40:
        goto label39;

     label41:
        goto label42;

     label42:
        i63 = i63 + 1;

        goto label31;

     label43:
        $z9 = r0.<android.media.ExifInterface: boolean mHasThumbnail>;

        if $z9 == 0 goto label44;

        $r24 = virtualinvoke r0.<android.media.ExifInterface: byte[] getThumbnailBytes()>();

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r24);

     label44:
        $r23 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<android.media.ExifInterface$ByteOrderedDataOutputStream: void setByteOrder(java.nio.ByteOrder)>($r23);

        return i57;
    }

    public double getAltitude(double)
    {
        android.media.ExifInterface r0;
        double d0, d1, $d2, $d3;
        int i0;
        byte $b1, b2;

        r0 := @this: android.media.ExifInterface;

        d0 := @parameter0: double;

        d1 = virtualinvoke r0.<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>("GPSAltitude", -1.0);

        b2 = -1;

        i0 = virtualinvoke r0.<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("GPSAltitudeRef", -1);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label3;

        if i0 < 0 goto label3;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        b2 = 1;

     label2:
        $d2 = (double) b2;

        $d3 = $d2 * d1;

        return $d3;

     label3:
        return d0;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        android.media.ExifInterface r0;
        android.media.ExifInterface$ExifAttribute r1;
        java.lang.NullPointerException $r2;
        java.util.HashSet $r3;
        boolean $z0, $z1;
        java.nio.ByteOrder $r4, $r5, $r18;
        double $d0;
        int $i0, $i1, $i4, $i7, $i10, $i11;
        java.lang.Object $r6;
        java.lang.Object[] $r7;
        android.media.ExifInterface$Rational $r8, $r9, $r11, $r12, $r14, $r15;
        long $l2, $l3, $l5, $l6, $l8, $l9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        java.lang.Integer $r10, $r13, $r16;
        java.lang.String $r17, $r19, r21, r23;
        java.lang.Throwable $r20;
        android.media.ExifInterface$Rational[] r22;

        r0 := @this: android.media.ExifInterface;

        r21 := @parameter0: java.lang.String;

        if r21 == null goto label8;

        r1 = specialinvoke r0.<android.media.ExifInterface: android.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r21);

        if r1 == null goto label7;

        $r3 = <android.media.ExifInterface: java.util.HashSet sTagSetForCompatibility>;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>(r21);

        if $z0 != 0 goto label1;

        $r18 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r19 = virtualinvoke r1.<android.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>($r18);

        return $r19;

     label1:
        $z1 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>("GPSTimeStamp");

        if $z1 == 0 goto label4;

        $i0 = r1.<android.media.ExifInterface$ExifAttribute: int format>;

        if $i0 == 5 goto label2;

        $i11 = r1.<android.media.ExifInterface$ExifAttribute: int format>;

        if $i11 == 10 goto label2;

        return null;

     label2:
        $r5 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r6 = staticinvoke <android.media.ExifInterface$ExifAttribute: java.lang.Object access$700(android.media.ExifInterface$ExifAttribute,java.nio.ByteOrder)>(r1, $r5);

        r22 = (android.media.ExifInterface$Rational[]) $r6;

        $i1 = lengthof r22;

        if $i1 == 3 goto label3;

        return null;

     label3:
        $r7 = newarray (java.lang.Object)[3];

        $r8 = r22[0];

        $l2 = $r8.<android.media.ExifInterface$Rational: long numerator>;

        $f1 = (float) $l2;

        $r9 = r22[0];

        $l3 = $r9.<android.media.ExifInterface$Rational: long denominator>;

        $f0 = (float) $l3;

        $f2 = $f1 / $f0;

        $i4 = (int) $f2;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r7[0] = $r10;

        $r11 = r22[1];

        $l5 = $r11.<android.media.ExifInterface$Rational: long numerator>;

        $f4 = (float) $l5;

        $r12 = r22[1];

        $l6 = $r12.<android.media.ExifInterface$Rational: long denominator>;

        $f3 = (float) $l6;

        $f5 = $f4 / $f3;

        $i7 = (int) $f5;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r7[1] = $r13;

        $r14 = r22[2];

        $l8 = $r14.<android.media.ExifInterface$Rational: long numerator>;

        $f7 = (float) $l8;

        $r15 = r22[2];

        $l9 = $r15.<android.media.ExifInterface$Rational: long denominator>;

        $f6 = (float) $l9;

        $f8 = $f7 / $f6;

        $i10 = (int) $f8;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r7[2] = $r16;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d:%02d:%02d", $r7);

        return $r17;

     label4:
        $r4 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $d0 = virtualinvoke r1.<android.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)>($r4);

        r23 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

     label5:
        return r23;

     label6:
        $r20 := @caughtexception;

        return null;

     label7:
        return null;

     label8:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r2;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public byte[] getAttributeBytes(java.lang.String)
    {
        android.media.ExifInterface r0;
        java.lang.NullPointerException $r1;
        byte[] $r2;
        java.lang.String r3;
        android.media.ExifInterface$ExifAttribute r4;

        r0 := @this: android.media.ExifInterface;

        r3 := @parameter0: java.lang.String;

        if r3 == null goto label2;

        r4 = specialinvoke r0.<android.media.ExifInterface: android.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r3);

        if r4 == null goto label1;

        $r2 = r4.<android.media.ExifInterface$ExifAttribute: byte[] bytes>;

        return $r2;

     label1:
        return null;

     label2:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r1;
    }

    public double getAttributeDouble(java.lang.String, double)
    {
        android.media.ExifInterface r0;
        double d0, d1;
        java.lang.NullPointerException $r1;
        java.nio.ByteOrder $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        android.media.ExifInterface$ExifAttribute r5;

        r0 := @this: android.media.ExifInterface;

        r4 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        if r4 == null goto label4;

        r5 = specialinvoke r0.<android.media.ExifInterface: android.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r4);

        if r5 != null goto label1;

        return d0;

     label1:
        $r2 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        d1 = virtualinvoke r5.<android.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)>($r2);

     label2:
        return d1;

     label3:
        $r3 := @caughtexception;

        return d0;

     label4:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public int getAttributeInt(java.lang.String, int)
    {
        android.media.ExifInterface r0;
        int i0, i1;
        java.lang.NullPointerException $r1;
        java.nio.ByteOrder $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        android.media.ExifInterface$ExifAttribute r5;

        r0 := @this: android.media.ExifInterface;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r4 == null goto label4;

        r5 = specialinvoke r0.<android.media.ExifInterface: android.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r4);

        if r5 != null goto label1;

        return i0;

     label1:
        $r2 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r5.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r2);

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        return i0;

     label4:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public long[] getAttributeRange(java.lang.String)
    {
        android.media.ExifInterface r0;
        java.lang.NullPointerException $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        long[] $r3;
        long $l0, $l2;
        byte[] $r4;
        int $i1;
        java.lang.String r5;
        android.media.ExifInterface$ExifAttribute r6;

        r0 := @this: android.media.ExifInterface;

        r5 := @parameter0: java.lang.String;

        if r5 == null goto label3;

        $z0 = r0.<android.media.ExifInterface: boolean mModified>;

        if $z0 != 0 goto label2;

        r6 = specialinvoke r0.<android.media.ExifInterface: android.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r5);

        if r6 == null goto label1;

        $r3 = newarray (long)[2];

        $l0 = r6.<android.media.ExifInterface$ExifAttribute: long bytesOffset>;

        $r3[0] = $l0;

        $r4 = r6.<android.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i1 = lengthof $r4;

        $l2 = (long) $i1;

        $r3[1] = $l2;

        return $r3;

     label1:
        return null;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The underlying file has been modified since being parsed");

        throw $r2;

     label3:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r1;
    }

    public long getDateTime()
    {
        android.media.ExifInterface r0;
        java.lang.String $r1, $r2, $r3;
        long $l0;

        r0 := @this: android.media.ExifInterface;

        $r1 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTime");

        $r2 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("SubSecTime");

        $r3 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("OffsetTime");

        $l0 = staticinvoke <android.media.ExifInterface: long parseDateTime(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $l0;
    }

    public long getDateTimeDigitized()
    {
        android.media.ExifInterface r0;
        java.lang.String $r1, $r2, $r3;
        long $l0;

        r0 := @this: android.media.ExifInterface;

        $r1 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTimeDigitized");

        $r2 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("SubSecTimeDigitized");

        $r3 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("OffsetTimeDigitized");

        $l0 = staticinvoke <android.media.ExifInterface: long parseDateTime(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $l0;
    }

    public long getDateTimeOriginal()
    {
        android.media.ExifInterface r0;
        java.lang.String $r1, $r2, $r3;
        long $l0;

        r0 := @this: android.media.ExifInterface;

        $r1 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTimeOriginal");

        $r2 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("SubSecTimeOriginal");

        $r3 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("OffsetTimeOriginal");

        $l0 = staticinvoke <android.media.ExifInterface: long parseDateTime(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $l0;
    }

    public long getGpsDateTime()
    {
        android.media.ExifInterface r0;
        long l0;
        java.util.regex.Pattern $r1, $r9;
        java.util.regex.Matcher $r2, $r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.text.ParsePosition $r7;
        java.text.SimpleDateFormat $r8, r18;
        java.lang.Throwable $r11, $r12;
        java.lang.String r13, r14, r16;
        java.util.Date r19;

        r0 := @this: android.media.ExifInterface;

        r13 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSDateStamp");

        r14 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSTimeStamp");

        if r13 == null goto label11;

        if r14 == null goto label11;

        $r1 = <android.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r13);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label01;

        $r9 = <android.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern>;

        $r10 = virtualinvoke $r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r14);

        $z1 = virtualinvoke $r10.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label01;

        goto label11;

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        r16 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.text.ParsePosition;

        specialinvoke $r7.<java.text.ParsePosition: void <init>(int)>(0);

     label02:
        r18 = <android.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        entermonitor r18;

     label03:
        $r8 = <android.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        r19 = virtualinvoke $r8.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r16, $r7);

        exitmonitor r18;

     label04:
        if r19 != null goto label05;

        return -1L;

     label05:
        l0 = virtualinvoke r19.<java.util.Date: long getTime()>();

     label06:
        return l0;

     label07:
        $r11 := @caughtexception;

     label08:
        exitmonitor r18;

     label09:
        throw $r11;

     label10:
        $r12 := @caughtexception;

        return -1L;

     label11:
        return -1L;

        catch java.lang.IllegalArgumentException from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.IllegalArgumentException from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.IllegalArgumentException from label09 to label10 with label10;
    }

    public boolean getLatLong(float[])
    {
        android.media.ExifInterface r0;
        java.lang.String r1, r2, r3, r4;
        float $f0, $f1;
        java.lang.Throwable $r5;
        float[] r6;

        r0 := @this: android.media.ExifInterface;

        r6 := @parameter0: float[];

        r1 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLatitude");

        r2 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLatitudeRef");

        r3 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLongitude");

        r4 = virtualinvoke r0.<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLongitudeRef");

        if r1 == null goto label4;

        if r2 == null goto label4;

        if r3 == null goto label4;

        if r4 == null goto label4;

     label1:
        $f0 = staticinvoke <android.media.ExifInterface: float convertRationalLatLonToFloat(java.lang.String,java.lang.String)>(r1, r2);

        r6[0] = $f0;

        $f1 = staticinvoke <android.media.ExifInterface: float convertRationalLatLonToFloat(java.lang.String,java.lang.String)>(r3, r4);

        r6[1] = $f1;

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

     label4:
        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public byte[] getThumbnail()
    {
        android.media.ExifInterface r0;
        int i0;
        byte[] $r1;

        r0 := @this: android.media.ExifInterface;

        i0 = r0.<android.media.ExifInterface: int mThumbnailCompression>;

        if i0 == 6 goto label2;

        if i0 != 7 goto label1;

        goto label2;

     label1:
        return null;

     label2:
        $r1 = virtualinvoke r0.<android.media.ExifInterface: byte[] getThumbnailBytes()>();

        return $r1;
    }

    public android.graphics.Bitmap getThumbnailBitmap()
    {
        android.media.ExifInterface r0;
        int[] r1;
        android.media.ExifInterface$ExifAttribute r2, r19;
        boolean $z0;
        byte[] $r3, $r4, $r6, $r17, r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i17, i18, i19, i20;
        android.graphics.Bitmap $r5, $r16;
        java.util.HashMap[] $r7, $r10;
        java.util.HashMap $r8, $r11;
        java.lang.Object $r9, $r12;
        java.nio.ByteOrder $r13, $r14;
        android.graphics.Bitmap$Config $r15;
        byte $b6, $b10, $b15;

        r0 := @this: android.media.ExifInterface;

        $z0 = r0.<android.media.ExifInterface: boolean mHasThumbnail>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<android.media.ExifInterface: byte[] mThumbnailBytes>;

        if $r3 != null goto label2;

        $r17 = virtualinvoke r0.<android.media.ExifInterface: byte[] getThumbnailBytes()>();

        r0.<android.media.ExifInterface: byte[] mThumbnailBytes> = $r17;

     label2:
        i18 = r0.<android.media.ExifInterface: int mThumbnailCompression>;

        if i18 == 6 goto label7;

        if i18 != 7 goto label3;

        goto label7;

     label3:
        if i18 != 1 goto label6;

        $r6 = r0.<android.media.ExifInterface: byte[] mThumbnailBytes>;

        $i1 = lengthof $r6;

        $i2 = $i1 / 3;

        r1 = newarray (int)[$i2];

        i19 = 0;

     label4:
        $i3 = lengthof r1;

        if i19 >= $i3 goto label5;

        r18 = r0.<android.media.ExifInterface: byte[] mThumbnailBytes>;

        $i5 = i19 * 3;

        $b6 = r18[$i5];

        $i7 = $b6 << 16;

        $i12 = $i7 + 0;

        $i8 = i19 * 3;

        $i9 = $i8 + 1;

        $b10 = r18[$i9];

        $i11 = $b10 << 8;

        $i16 = $i12 + $i11;

        $i13 = i19 * 3;

        $i14 = $i13 + 2;

        $b15 = r18[$i14];

        $i17 = $i16 + $b15;

        r1[i19] = $i17;

        i19 = i19 + 1;

        goto label4;

     label5:
        $r7 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r8 = $r7[4];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r19 = (android.media.ExifInterface$ExifAttribute) $r9;

        $r10 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r10[4];

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r2 = (android.media.ExifInterface$ExifAttribute) $r12;

        if r19 == null goto label6;

        if r2 == null goto label6;

        $r13 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i20 = virtualinvoke r19.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r13);

        $r14 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $i4 = virtualinvoke r2.<android.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r14);

        $r15 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r16 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r1, $i4, i20, $r15);

        return $r16;

     label6:
        return null;

     label7:
        $r4 = r0.<android.media.ExifInterface: byte[] mThumbnailBytes>;

        $i0 = r0.<android.media.ExifInterface: int mThumbnailLength>;

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r4, 0, $i0);

        return $r5;
    }

    public byte[] getThumbnailBytes()
    {
        android.media.ExifInterface r0;
        long l0, $l3, $l4;
        int i1, $i2, $i6, $i7, $i8, $i9;
        boolean $z0, $z1;
        android.content.res.AssetManager$AssetInputStream $r1;
        java.lang.String $r2, $r7;
        java.io.FileDescriptor $r3, $r4, r14;
        byte $b5;
        java.lang.Throwable $r8, $r9;
        byte[] r10, r15;
        java.lang.Object r11, r12, r13;
        java.io.FileInputStream r21, r22;
        java.io.IOException r23, r24;
        java.io.FileNotFoundException r25;
        java.io.InputStream r26, r27, r29, r30;
        java.lang.AutoCloseable r28, r31, r32, r33;

        r0 := @this: android.media.ExifInterface;

        $z0 = r0.<android.media.ExifInterface: boolean mHasThumbnail>;

        if $z0 != 0 goto label01;

        return null;

     label01:
        r10 = r0.<android.media.ExifInterface: byte[] mThumbnailBytes>;

        if r10 == null goto label02;

        return r10;

     label02:
        r11 = null;

        r12 = null;

        r13 = null;

     label03:
        $r1 = r0.<android.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

        if $r1 == null goto label14;

     label04:
        r12 = null;

        r13 = null;

     label05:
        r11 = r0.<android.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

     label06:
        r12 = r11;

        r13 = r11;

     label07:
        r26 = (java.io.InputStream) r11;

        $z1 = virtualinvoke r26.<java.io.InputStream: boolean markSupported()>();

        if $z1 == 0 goto label11;

     label08:
        r12 = r11;

        r13 = r11;

     label09:
        r27 = (java.io.InputStream) r11;

        virtualinvoke r27.<java.io.InputStream: void reset()>();

     label10:
        goto label27;

     label11:
        r12 = r11;

        r13 = r11;

     label12:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Cannot read thumbnail from inputstream without mark/reset support");

     label13:
        r28 = (java.lang.AutoCloseable) r11;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r28);

        return null;

     label14:
        r12 = null;

        r13 = null;

     label15:
        $r2 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        if $r2 == null goto label19;

     label16:
        r12 = null;

        r13 = null;

     label17:
        r21 = new java.io.FileInputStream;

        $r7 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke r21.<java.io.FileInputStream: void <init>(java.lang.String)>($r7);

        r11 = r21;

     label18:
        goto label27;

     label19:
        r12 = null;

        r13 = null;

     label20:
        $r3 = r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        if $r3 == null goto label27;

     label21:
        r12 = null;

        r13 = null;

     label22:
        $r4 = r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        r14 = staticinvoke <android.system.Os: java.io.FileDescriptor dup(java.io.FileDescriptor)>($r4);

     label23:
        r12 = null;

        r13 = null;

     label24:
        $i9 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <android.system.Os: long lseek(java.io.FileDescriptor,long,int)>(r14, 0L, $i9);

     label25:
        r12 = null;

        r13 = null;

     label26:
        r22 = new java.io.FileInputStream;

        specialinvoke r22.<java.io.FileInputStream: void <init>(java.io.FileDescriptor,boolean)>(r14, 1);

        r11 = r22;

     label27:
        if r11 == null goto label50;

        r12 = r11;

        r13 = r11;

     label28:
        $i2 = r0.<android.media.ExifInterface: int mThumbnailOffset>;

        $l3 = (long) $i2;

        r29 = (java.io.InputStream) r11;

        l0 = virtualinvoke r29.<java.io.InputStream: long skip(long)>($l3);

     label29:
        r12 = r11;

        r13 = r11;

     label30:
        i1 = r0.<android.media.ExifInterface: int mThumbnailOffset>;

     label31:
        $l4 = (long) i1;

        $b5 = l0 cmp $l4;

        if $b5 != 0 goto label44;

        r12 = r11;

        r13 = r11;

     label32:
        $i6 = r0.<android.media.ExifInterface: int mThumbnailLength>;

        r15 = newarray (byte)[$i6];

     label33:
        r12 = r11;

        r13 = r11;

     label34:
        r30 = (java.io.InputStream) r11;

        $i7 = virtualinvoke r30.<java.io.InputStream: int read(byte[])>(r15);

        $i8 = r0.<android.media.ExifInterface: int mThumbnailLength>;

        if $i7 != $i8 goto label38;

     label35:
        r12 = r11;

        r13 = r11;

     label36:
        r0.<android.media.ExifInterface: byte[] mThumbnailBytes> = r15;

     label37:
        r31 = (java.lang.AutoCloseable) r11;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r31);

        return r15;

     label38:
        r12 = r11;

        r13 = r11;

     label39:
        r23 = new java.io.IOException;

     label40:
        r12 = r11;

        r13 = r11;

     label41:
        specialinvoke r23.<java.io.IOException: void <init>(java.lang.String)>("Corrupted image");

     label42:
        r12 = r11;

        r13 = r11;

     label43:
        throw r23;

     label44:
        r12 = r11;

        r13 = r11;

     label45:
        r24 = new java.io.IOException;

     label46:
        r12 = r11;

        r13 = r11;

     label47:
        specialinvoke r24.<java.io.IOException: void <init>(java.lang.String)>("Corrupted image");

     label48:
        r12 = r11;

        r13 = r11;

     label49:
        throw r24;

     label50:
        r12 = r11;

        r13 = r11;

     label51:
        r25 = new java.io.FileNotFoundException;

     label52:
        r12 = r11;

        r13 = r11;

     label53:
        specialinvoke r25.<java.io.FileNotFoundException: void <init>()>();

     label54:
        r12 = r11;

        r13 = r11;

     label55:
        throw r25;

     label56:
        $r9 := @caughtexception;

        goto label60;

     label57:
        $r8 := @caughtexception;

        r12 = r13;

     label58:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "Encountered exception while getting thumbnail", $r8);

     label59:
        r32 = (java.lang.AutoCloseable) r13;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r32);

        return null;

     label60:
        r33 = (java.lang.AutoCloseable) r12;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r33);

        throw $r9;

        catch java.io.IOException from label03 to label04 with label57;
        catch android.system.ErrnoException from label03 to label04 with label57;
        catch java.lang.Throwable from label03 to label04 with label56;
        catch java.io.IOException from label05 to label06 with label57;
        catch android.system.ErrnoException from label05 to label06 with label57;
        catch java.lang.Throwable from label05 to label06 with label56;
        catch java.io.IOException from label07 to label08 with label57;
        catch android.system.ErrnoException from label07 to label08 with label57;
        catch java.lang.Throwable from label07 to label08 with label56;
        catch java.io.IOException from label09 to label10 with label57;
        catch android.system.ErrnoException from label09 to label10 with label57;
        catch java.lang.Throwable from label09 to label10 with label56;
        catch java.io.IOException from label12 to label13 with label57;
        catch android.system.ErrnoException from label12 to label13 with label57;
        catch java.lang.Throwable from label12 to label13 with label56;
        catch java.io.IOException from label15 to label16 with label57;
        catch android.system.ErrnoException from label15 to label16 with label57;
        catch java.lang.Throwable from label15 to label16 with label56;
        catch java.io.IOException from label17 to label18 with label57;
        catch android.system.ErrnoException from label17 to label18 with label57;
        catch java.lang.Throwable from label17 to label18 with label56;
        catch java.io.IOException from label20 to label21 with label57;
        catch android.system.ErrnoException from label20 to label21 with label57;
        catch java.lang.Throwable from label20 to label21 with label56;
        catch java.io.IOException from label22 to label23 with label57;
        catch android.system.ErrnoException from label22 to label23 with label57;
        catch java.lang.Throwable from label22 to label23 with label56;
        catch java.io.IOException from label24 to label25 with label57;
        catch android.system.ErrnoException from label24 to label25 with label57;
        catch java.lang.Throwable from label24 to label25 with label56;
        catch java.io.IOException from label26 to label27 with label57;
        catch android.system.ErrnoException from label26 to label27 with label57;
        catch java.lang.Throwable from label26 to label27 with label56;
        catch java.io.IOException from label28 to label29 with label57;
        catch android.system.ErrnoException from label28 to label29 with label57;
        catch java.lang.Throwable from label28 to label29 with label56;
        catch java.io.IOException from label30 to label31 with label57;
        catch android.system.ErrnoException from label30 to label31 with label57;
        catch java.lang.Throwable from label30 to label31 with label56;
        catch java.io.IOException from label32 to label33 with label57;
        catch android.system.ErrnoException from label32 to label33 with label57;
        catch java.lang.Throwable from label32 to label33 with label56;
        catch java.io.IOException from label34 to label35 with label57;
        catch android.system.ErrnoException from label34 to label35 with label57;
        catch java.lang.Throwable from label34 to label35 with label56;
        catch java.io.IOException from label36 to label37 with label57;
        catch android.system.ErrnoException from label36 to label37 with label57;
        catch java.lang.Throwable from label36 to label37 with label56;
        catch java.io.IOException from label39 to label40 with label57;
        catch android.system.ErrnoException from label39 to label40 with label57;
        catch java.lang.Throwable from label39 to label40 with label56;
        catch java.io.IOException from label41 to label42 with label57;
        catch android.system.ErrnoException from label41 to label42 with label57;
        catch java.lang.Throwable from label41 to label42 with label56;
        catch java.io.IOException from label43 to label44 with label57;
        catch android.system.ErrnoException from label43 to label44 with label57;
        catch java.lang.Throwable from label43 to label44 with label56;
        catch java.io.IOException from label45 to label46 with label57;
        catch android.system.ErrnoException from label45 to label46 with label57;
        catch java.lang.Throwable from label45 to label46 with label56;
        catch java.io.IOException from label47 to label48 with label57;
        catch android.system.ErrnoException from label47 to label48 with label57;
        catch java.lang.Throwable from label47 to label48 with label56;
        catch java.io.IOException from label49 to label50 with label57;
        catch android.system.ErrnoException from label49 to label50 with label57;
        catch java.lang.Throwable from label49 to label50 with label56;
        catch java.io.IOException from label51 to label52 with label57;
        catch android.system.ErrnoException from label51 to label52 with label57;
        catch java.lang.Throwable from label51 to label52 with label56;
        catch java.io.IOException from label53 to label54 with label57;
        catch android.system.ErrnoException from label53 to label54 with label57;
        catch java.lang.Throwable from label53 to label54 with label56;
        catch java.io.IOException from label55 to label56 with label57;
        catch android.system.ErrnoException from label55 to label56 with label57;
        catch java.lang.Throwable from label55 to label56 with label56;
        catch java.lang.Throwable from label58 to label59 with label56;
    }

    public long[] getThumbnailRange()
    {
        android.media.ExifInterface r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalStateException $r1;
        long[] $r2;
        int $i0, $i2;
        long $l1, $l3;

        r0 := @this: android.media.ExifInterface;

        $z0 = r0.<android.media.ExifInterface: boolean mModified>;

        if $z0 != 0 goto label3;

        $z1 = r0.<android.media.ExifInterface: boolean mHasThumbnail>;

        if $z1 == 0 goto label2;

        $z2 = r0.<android.media.ExifInterface: boolean mHasThumbnailStrips>;

        if $z2 == 0 goto label1;

        $z3 = r0.<android.media.ExifInterface: boolean mAreThumbnailStripsConsecutive>;

        if $z3 != 0 goto label1;

        return null;

     label1:
        $r2 = newarray (long)[2];

        $i0 = r0.<android.media.ExifInterface: int mThumbnailOffset>;

        $l1 = (long) $i0;

        $r2[0] = $l1;

        $i2 = r0.<android.media.ExifInterface: int mThumbnailLength>;

        $l3 = (long) $i2;

        $r2[1] = $l3;

        return $r2;

     label2:
        return null;

     label3:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The underlying file has been modified since being parsed");

        throw $r1;
    }

    public boolean hasAttribute(java.lang.String)
    {
        android.media.ExifInterface r0;
        java.lang.String r1;
        android.media.ExifInterface$ExifAttribute $r2;
        boolean z0;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<android.media.ExifInterface: android.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean hasThumbnail()
    {
        android.media.ExifInterface r0;
        boolean $z0;

        r0 := @this: android.media.ExifInterface;

        $z0 = r0.<android.media.ExifInterface: boolean mHasThumbnail>;

        return $z0;
    }

    public boolean isThumbnailCompressed()
    {
        android.media.ExifInterface r0;
        int i0;
        boolean $z0;

        r0 := @this: android.media.ExifInterface;

        $z0 = r0.<android.media.ExifInterface: boolean mHasThumbnail>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = r0.<android.media.ExifInterface: int mThumbnailCompression>;

        if i0 == 6 goto label3;

        if i0 != 7 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public void saveAttributes() throws java.io.IOException
    {
        android.media.ExifInterface r0;
        boolean $z0, $z1, $z2, $z3;
        java.io.IOException $r1, $r2, r41, r61, r63, r66;
        java.io.FileDescriptor $r3, $r7, $r8, $r9, $r11, $r43, $r44;
        byte[] $r4;
        java.lang.String $r5, $r6, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r28, $r29, $r30, $r52;
        int $i0, $i1, $i2, i3, i4, $i5, $i6;
        java.io.FileOutputStream $r10, r32, r37, r39, r45, r47, r49;
        java.io.File $r17, r33, r34, r35;
        java.lang.Throwable $r20, $r22, $r23, $r24, $r25, $r26;
        java.lang.Exception $r21, $r27;
        java.io.FileInputStream r31, r36, r38, r46, r48, r50;
        java.lang.StringBuilder r40, r42, r62;
        java.io.BufferedInputStream r53;
        java.io.BufferedOutputStream r54;

        r0 := @this: android.media.ExifInterface;

        $z0 = r0.<android.media.ExifInterface: boolean mIsSupportedFile>;

        if $z0 == 0 goto label135;

        i3 = r0.<android.media.ExifInterface: int mMimeType>;

        if i3 == 4 goto label001;

        if i3 != 13 goto label135;

     label001:
        $z1 = r0.<android.media.ExifInterface: boolean mIsInputStream>;

        if $z1 != 0 goto label134;

        $r3 = r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        if $r3 != null goto label002;

        $r19 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        if $r19 == null goto label134;

     label002:
        r0.<android.media.ExifInterface: boolean mModified> = 1;

        $r4 = virtualinvoke r0.<android.media.ExifInterface: byte[] getThumbnail()>();

        r0.<android.media.ExifInterface: byte[] mThumbnailBytes> = $r4;

        r31 = null;

        r32 = null;

        r33 = null;

        $r5 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        if $r5 == null goto label003;

        $r17 = new java.io.File;

        $r18 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r18);

        r33 = $r17;

     label003:
        r34 = null;

        r35 = null;

        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label004:
        $r6 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        if $r6 == null goto label034;

     label005:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label006:
        r34 = new java.io.File;

     label007:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label008:
        r40 = new java.lang.StringBuilder;

     label009:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label010:
        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

     label011:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label012:
        $r13 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label013:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label014:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

     label015:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label016:
        $r14 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r34.<java.io.File: void <init>(java.lang.String)>($r14);

     label017:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label018:
        $z2 = virtualinvoke r33.<java.io.File: boolean renameTo(java.io.File)>(r34);

        if $z2 == 0 goto label020;

     label019:
        goto label058;

     label020:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label021:
        r41 = new java.io.IOException;

     label022:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label023:
        r42 = new java.lang.StringBuilder;

     label024:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label025:
        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

     label026:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label027:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t rename to ");

     label028:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label029:
        $r15 = virtualinvoke r34.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label030:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label031:
        $r16 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r41.<java.io.IOException: void <init>(java.lang.String)>($r16);

     label032:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label033:
        throw r41;

     label034:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label035:
        $r7 = r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        if $r7 == null goto label058;

     label036:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label037:
        i4 = r0.<android.media.ExifInterface: int mMimeType>;

     label038:
        if i4 != 4 goto label041;

        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label039:
        r35 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("temp", "jpg");

     label040:
        goto label045;

     label041:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label042:
        $i2 = r0.<android.media.ExifInterface: int mMimeType>;

        if $i2 != 13 goto label045;

     label043:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label044:
        r35 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("temp", "png");

     label045:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label046:
        $r43 = r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        $i5 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <android.system.Os: long lseek(java.io.FileDescriptor,long,int)>($r43, 0L, $i5);

     label047:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label048:
        r31 = new java.io.FileInputStream;

     label049:
        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

     label050:
        $r44 = r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        specialinvoke r31.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r44);

     label051:
        r36 = r31;

        r37 = null;

        r38 = r31;

        r39 = null;

     label052:
        r32 = new java.io.FileOutputStream;

     label053:
        r36 = r31;

        r37 = null;

        r38 = r31;

        r39 = null;

     label054:
        specialinvoke r32.<java.io.FileOutputStream: void <init>(java.io.File)>(r35);

     label055:
        r36 = r31;

        r37 = r32;

        r38 = r31;

        r39 = r32;

     label056:
        staticinvoke <libcore.io.Streams: int copy(java.io.InputStream,java.io.OutputStream)>(r31, r32);

     label057:
        r34 = r35;

     label058:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r31);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r32);

        r45 = null;

        r46 = null;

        r47 = null;

        r48 = null;

        r49 = null;

     label059:
        r50 = new java.io.FileInputStream;

     label060:
        r46 = null;

        r47 = null;

        r48 = null;

        r49 = null;

     label061:
        specialinvoke r50.<java.io.FileInputStream: void <init>(java.io.File)>(r34);

     label062:
        r46 = r50;

        r47 = null;

        r48 = r50;

        r49 = null;

     label063:
        $r52 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        if $r52 == null goto label069;

     label064:
        r46 = r50;

        r47 = null;

        r48 = r50;

        r49 = null;

     label065:
        r45 = new java.io.FileOutputStream;

     label066:
        r46 = r50;

        r47 = null;

        r48 = r50;

        r49 = null;

     label067:
        $r12 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke r45.<java.io.FileOutputStream: void <init>(java.lang.String)>($r12);

     label068:
        goto label075;

     label069:
        r46 = r50;

        r47 = null;

        r48 = r50;

        r49 = null;

     label070:
        $r8 = r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        if $r8 == null goto label075;

     label071:
        r46 = r50;

        r47 = null;

        r48 = r50;

        r49 = null;

     label072:
        $r9 = r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        $i1 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <android.system.Os: long lseek(java.io.FileDescriptor,long,int)>($r9, 0L, $i1);

     label073:
        r46 = r50;

        r47 = null;

        r48 = r50;

        r49 = null;

     label074:
        $r10 = new java.io.FileOutputStream;

        $r11 = r0.<android.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r11);

        r45 = $r10;

     label075:
        r46 = r50;

        r47 = r45;

        r48 = r50;

        r49 = r45;

     label076:
        r53 = new java.io.BufferedInputStream;

     label077:
        r46 = r50;

        r47 = r45;

        r48 = r50;

        r49 = r45;

     label078:
        specialinvoke r53.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r50);

     label079:
        r54 = new java.io.BufferedOutputStream;

        specialinvoke r54.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r45);

     label080:
        $i6 = r0.<android.media.ExifInterface: int mMimeType>;

        if $i6 != 4 goto label082;

        specialinvoke r0.<android.media.ExifInterface: void saveJpegAttributes(java.io.InputStream,java.io.OutputStream)>(r53, r54);

     label081:
        goto label083;

     label082:
        $i0 = r0.<android.media.ExifInterface: int mMimeType>;

        if $i0 != 13 goto label083;

        specialinvoke r0.<android.media.ExifInterface: void savePngAttributes(java.io.InputStream,java.io.OutputStream)>(r53, r54);

     label083:
        virtualinvoke r54.<java.io.BufferedOutputStream: void close()>();

     label084:
        r46 = r50;

        r47 = r45;

        r48 = r50;

        r49 = r45;

     label085:
        virtualinvoke r53.<java.io.BufferedInputStream: void close()>();

     label086:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r50);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r45);

        virtualinvoke r34.<java.io.File: boolean delete()>();

        r0.<android.media.ExifInterface: byte[] mThumbnailBytes> = null;

        return;

     label087:
        $r23 := @caughtexception;

     label088:
        virtualinvoke r54.<java.io.BufferedOutputStream: void close()>();

     label089:
        goto label092;

     label090:
        $r25 := @caughtexception;

     label091:
        virtualinvoke $r23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r25);

     label092:
        throw $r23;

     label093:
        $r22 := @caughtexception;

     label094:
        virtualinvoke r53.<java.io.BufferedInputStream: void close()>();

     label095:
        goto label098;

     label096:
        $r24 := @caughtexception;

        r46 = r50;

        r47 = r45;

        r48 = r50;

        r49 = r45;

     label097:
        virtualinvoke $r22.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r24);

     label098:
        r46 = r50;

        r47 = r45;

        r48 = r50;

        r49 = r45;

     label099:
        throw $r22;

     label100:
        $r26 := @caughtexception;

        goto label125;

     label101:
        $r27 := @caughtexception;

        r46 = r48;

        r47 = r49;

     label102:
        $r28 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        if $r28 == null goto label119;

     label103:
        r46 = r48;

        r47 = r49;

     label104:
        $z3 = virtualinvoke r34.<java.io.File: boolean renameTo(java.io.File)>(r33);

        if $z3 != 0 goto label119;

     label105:
        r46 = r48;

        r47 = r49;

     label106:
        r61 = new java.io.IOException;

     label107:
        r46 = r48;

        r47 = r49;

     label108:
        r62 = new java.lang.StringBuilder;

     label109:
        r46 = r48;

        r47 = r49;

     label110:
        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

     label111:
        r46 = r48;

        r47 = r49;

     label112:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t restore original file: ");

     label113:
        r46 = r48;

        r47 = r49;

     label114:
        $r29 = virtualinvoke r33.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

     label115:
        r46 = r48;

        r47 = r49;

     label116:
        $r30 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r61.<java.io.IOException: void <init>(java.lang.String)>($r30);

     label117:
        r46 = r48;

        r47 = r49;

     label118:
        throw r61;

     label119:
        r46 = r48;

        r47 = r49;

     label120:
        r63 = new java.io.IOException;

     label121:
        r46 = r48;

        r47 = r49;

     label122:
        specialinvoke r63.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to save new file", $r27);

     label123:
        r46 = r48;

        r47 = r49;

     label124:
        throw r63;

     label125:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r46);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r47);

        virtualinvoke r34.<java.io.File: boolean delete()>();

        throw $r26;

     label126:
        $r20 := @caughtexception;

        goto label133;

     label127:
        $r21 := @caughtexception;

        r36 = r38;

        r37 = r39;

     label128:
        r66 = new java.io.IOException;

     label129:
        r36 = r38;

        r37 = r39;

     label130:
        specialinvoke r66.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to copy original file to temp file", $r21);

     label131:
        r36 = r38;

        r37 = r39;

     label132:
        throw r66;

     label133:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r36);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r37);

        throw $r20;

     label134:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("ExifInterface does not support saving attributes for the current input.");

        throw $r2;

     label135:
        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("ExifInterface only supports saving attributes on JPEG or PNG formats.");

        throw $r1;

        catch java.lang.Exception from label004 to label005 with label127;
        catch java.lang.Throwable from label004 to label005 with label126;
        catch java.lang.Exception from label006 to label007 with label127;
        catch java.lang.Throwable from label006 to label007 with label126;
        catch java.lang.Exception from label008 to label009 with label127;
        catch java.lang.Throwable from label008 to label009 with label126;
        catch java.lang.Exception from label010 to label011 with label127;
        catch java.lang.Throwable from label010 to label011 with label126;
        catch java.lang.Exception from label012 to label013 with label127;
        catch java.lang.Throwable from label012 to label013 with label126;
        catch java.lang.Exception from label014 to label015 with label127;
        catch java.lang.Throwable from label014 to label015 with label126;
        catch java.lang.Exception from label016 to label017 with label127;
        catch java.lang.Throwable from label016 to label017 with label126;
        catch java.lang.Exception from label018 to label019 with label127;
        catch java.lang.Throwable from label018 to label019 with label126;
        catch java.lang.Exception from label021 to label022 with label127;
        catch java.lang.Throwable from label021 to label022 with label126;
        catch java.lang.Exception from label023 to label024 with label127;
        catch java.lang.Throwable from label023 to label024 with label126;
        catch java.lang.Exception from label025 to label026 with label127;
        catch java.lang.Throwable from label025 to label026 with label126;
        catch java.lang.Exception from label027 to label028 with label127;
        catch java.lang.Throwable from label027 to label028 with label126;
        catch java.lang.Exception from label029 to label030 with label127;
        catch java.lang.Throwable from label029 to label030 with label126;
        catch java.lang.Exception from label031 to label032 with label127;
        catch java.lang.Throwable from label031 to label032 with label126;
        catch java.lang.Exception from label033 to label034 with label127;
        catch java.lang.Throwable from label033 to label034 with label126;
        catch java.lang.Exception from label035 to label036 with label127;
        catch java.lang.Throwable from label035 to label036 with label126;
        catch java.lang.Exception from label037 to label038 with label127;
        catch java.lang.Throwable from label037 to label038 with label126;
        catch java.lang.Exception from label039 to label040 with label127;
        catch java.lang.Throwable from label039 to label040 with label126;
        catch java.lang.Exception from label042 to label043 with label127;
        catch java.lang.Throwable from label042 to label043 with label126;
        catch java.lang.Exception from label044 to label045 with label127;
        catch java.lang.Throwable from label044 to label045 with label126;
        catch java.lang.Exception from label046 to label047 with label127;
        catch java.lang.Throwable from label046 to label047 with label126;
        catch java.lang.Exception from label048 to label049 with label127;
        catch java.lang.Throwable from label048 to label049 with label126;
        catch java.lang.Exception from label050 to label051 with label127;
        catch java.lang.Throwable from label050 to label051 with label126;
        catch java.lang.Exception from label052 to label053 with label127;
        catch java.lang.Throwable from label052 to label053 with label126;
        catch java.lang.Exception from label054 to label055 with label127;
        catch java.lang.Throwable from label054 to label055 with label126;
        catch java.lang.Exception from label056 to label057 with label127;
        catch java.lang.Throwable from label056 to label057 with label126;
        catch java.lang.Exception from label059 to label060 with label101;
        catch java.lang.Throwable from label059 to label060 with label100;
        catch java.lang.Exception from label061 to label062 with label101;
        catch java.lang.Throwable from label061 to label062 with label100;
        catch java.lang.Exception from label063 to label064 with label101;
        catch java.lang.Throwable from label063 to label064 with label100;
        catch java.lang.Exception from label065 to label066 with label101;
        catch java.lang.Throwable from label065 to label066 with label100;
        catch java.lang.Exception from label067 to label068 with label101;
        catch java.lang.Throwable from label067 to label068 with label100;
        catch java.lang.Exception from label070 to label071 with label101;
        catch java.lang.Throwable from label070 to label071 with label100;
        catch java.lang.Exception from label072 to label073 with label101;
        catch java.lang.Throwable from label072 to label073 with label100;
        catch java.lang.Exception from label074 to label075 with label101;
        catch java.lang.Throwable from label074 to label075 with label100;
        catch java.lang.Exception from label076 to label077 with label101;
        catch java.lang.Throwable from label076 to label077 with label100;
        catch java.lang.Exception from label078 to label079 with label101;
        catch java.lang.Throwable from label078 to label079 with label100;
        catch java.lang.Throwable from label079 to label080 with label093;
        catch java.lang.Throwable from label080 to label081 with label087;
        catch java.lang.Throwable from label082 to label083 with label087;
        catch java.lang.Throwable from label083 to label084 with label093;
        catch java.lang.Exception from label085 to label086 with label101;
        catch java.lang.Throwable from label085 to label086 with label100;
        catch java.lang.Throwable from label088 to label089 with label090;
        catch java.lang.Throwable from label091 to label092 with label093;
        catch java.lang.Throwable from label092 to label093 with label093;
        catch java.lang.Throwable from label094 to label095 with label096;
        catch java.lang.Exception from label097 to label098 with label101;
        catch java.lang.Throwable from label097 to label098 with label100;
        catch java.lang.Exception from label099 to label100 with label101;
        catch java.lang.Throwable from label099 to label100 with label100;
        catch java.lang.Throwable from label102 to label103 with label100;
        catch java.lang.Throwable from label104 to label105 with label100;
        catch java.lang.Throwable from label106 to label107 with label100;
        catch java.lang.Throwable from label108 to label109 with label100;
        catch java.lang.Throwable from label110 to label111 with label100;
        catch java.lang.Throwable from label112 to label113 with label100;
        catch java.lang.Throwable from label114 to label115 with label100;
        catch java.lang.Throwable from label116 to label117 with label100;
        catch java.lang.Throwable from label118 to label119 with label100;
        catch java.lang.Throwable from label120 to label121 with label100;
        catch java.lang.Throwable from label122 to label123 with label100;
        catch java.lang.Throwable from label124 to label125 with label100;
        catch java.lang.Throwable from label128 to label129 with label126;
        catch java.lang.Throwable from label130 to label131 with label126;
        catch java.lang.Throwable from label132 to label133 with label126;
    }

    public void setAttribute(java.lang.String, java.lang.String)
    {
        android.media.ExifInterface r0, r138, r140;
        java.lang.String r1, $r12, $r18, $r20, $r21, $r27, $r33, $r35, $r36, $r42, $r48, $r60, $r68, $r73, $r80, $r89, $r93, $r106, $r109, $r112, $r120, $r127, r128, r131, r146, r148;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        java.lang.NullPointerException $r2;
        java.util.HashMap[] $r3, $r7, $r13, $r22, $r28, $r37, $r43, $r49, $r53, $r98;
        java.util.HashMap $r4, $r9, $r15, $r24, $r30, $r39, $r45, $r50, $r54, $r99;
        java.lang.Object $r5, $r61, $r77, $r82, $r86, $r94, $r96, r141;
        java.lang.Integer $r6, $r62, $r78, $r83, $r87, $r95, $r97;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i17, $i18, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i38, $i39, $i41, $i42, $i43, i47, $i48, i50, i53, i54, i57, i59, i60, i61, i62, i63, i65, i69;
        java.nio.ByteOrder $r8, $r14, $r23, $r29, $r38, $r44;
        android.media.ExifInterface$ExifAttribute $r10, $r16, $r25, $r31, $r40, $r46, $r51, $r55;
        android.media.ExifInterface$Rational $r19, $r34;
        long $l8, $l9, $l15, $l16, $l19, $l40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r57, $r63, $r70, $r84, $r105, $r115, $r122, r135;
        java.lang.String[] $r67, $r72, $r79, $r88, r151, r153, r155, r156, r158, r160, r161, r163;
        java.util.HashSet $r101;
        java.util.regex.Pattern $r104;
        java.lang.Throwable $r121;
        byte b46, b51, b64;
        java.util.regex.Matcher r132;
        android.media.ExifInterface$ExifTag[][] $r139;
        android.media.ExifInterface$ExifTag r142;
        android.util.Pair r143;
        double[] r152;
        android.media.ExifInterface$Rational[] r154, r159;
        int[] r157, r164;
        long[] r162;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        r128 := @parameter1: java.lang.String;

        if r1 == null goto label45;

        b46 = 1;

        r131 = r128;

        if r128 == null goto label05;

        r131 = r128;

        $r101 = <android.media.ExifInterface: java.util.HashSet sTagSetForCompatibility>;

        $z3 = virtualinvoke $r101.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z3 == 0 goto label05;

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("GPSTimeStamp");

        if $z4 == 0 goto label02;

        $r104 = <android.media.ExifInterface: java.util.regex.Pattern sGpsTimestampPattern>;

        r132 = virtualinvoke $r104.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r128);

        $z5 = virtualinvoke r132.<java.util.regex.Matcher: boolean find()>();

        if $z5 != 0 goto label01;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for ");

        virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r128);

        $r120 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r120);

        return;

     label01:
        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r106 = virtualinvoke r132.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i41 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r106);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1,");

        $r109 = virtualinvoke r132.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $i42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r109);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1,");

        $r112 = virtualinvoke r132.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $i43 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r112);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1");

        r131 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;

     label02:
        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r128);

        r135 = new java.lang.StringBuilder;

        specialinvoke r135.<java.lang.StringBuilder: void <init>()>();

        $d6 = 10000.0 * d0;

        $l40 = (long) $d6;

        virtualinvoke r135.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l40);

        virtualinvoke r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/10000");

        r131 = virtualinvoke r135.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        goto label05;

     label04:
        $r121 := @caughtexception;

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for ");

        virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r128);

        $r127 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r127);

        return;

     label05:
        i47 = 0;

        r138 = r0;

     label06:
        $r139 = <android.media.ExifInterface: android.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i48 = lengthof $r139;

        if i47 >= $i48 goto label44;

        if i47 != 4 goto label07;

        $z2 = r138.<android.media.ExifInterface: boolean mHasThumbnail>;

        if $z2 != 0 goto label07;

        i50 = i47;

        r140 = r138;

        b51 = b46;

        goto label43;

     label07:
        $r3 = <android.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r4 = $r3[i47];

        r141 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r141 == null goto label42;

        if r131 != null goto label08;

        $r98 = r138.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r99 = $r98[i47];

        virtualinvoke $r99.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r140 = r138;

        b51 = b46;

        i50 = i47;

        goto label43;

     label08:
        r142 = (android.media.ExifInterface$ExifTag) r141;

        r143 = staticinvoke <android.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)>(r131);

        $i2 = r142.<android.media.ExifInterface$ExifTag: int primaryFormat>;

        $r5 = r143.<android.util.Pair: java.lang.Object first>;

        $r6 = (java.lang.Integer) $r5;

        $i3 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if $i2 == $i3 goto label19;

        $i24 = r142.<android.media.ExifInterface$ExifTag: int primaryFormat>;

        $r61 = r143.<android.util.Pair: java.lang.Object second>;

        $r62 = (java.lang.Integer) $r61;

        $i25 = virtualinvoke $r62.<java.lang.Integer: int intValue()>();

        if $i24 != $i25 goto label09;

        goto label19;

     label09:
        $i26 = r142.<android.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i26 == -1 goto label11;

        $i36 = r142.<android.media.ExifInterface$ExifTag: int secondaryFormat>;

        $r94 = r143.<android.util.Pair: java.lang.Object first>;

        $r95 = (java.lang.Integer) $r94;

        $i37 = virtualinvoke $r95.<java.lang.Integer: int intValue()>();

        if $i36 == $i37 goto label10;

        $i38 = r142.<android.media.ExifInterface$ExifTag: int secondaryFormat>;

        $r96 = r143.<android.util.Pair: java.lang.Object second>;

        $r97 = (java.lang.Integer) $r96;

        $i39 = virtualinvoke $r97.<java.lang.Integer: int intValue()>();

        if $i38 != $i39 goto label11;

     label10:
        i53 = r142.<android.media.ExifInterface$ExifTag: int secondaryFormat>;

        goto label20;

     label11:
        $i27 = r142.<android.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i27 == b46 goto label18;

        $i28 = r142.<android.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i28 == 7 goto label18;

        $i29 = r142.<android.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i29 != 2 goto label12;

        goto label18;

     label12:
        $z1 = <android.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label17;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given tag (");

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") value didn\'t match with one of expected formats: ");

        $r67 = <android.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $i30 = r142.<android.media.ExifInterface$ExifTag: int primaryFormat>;

        $r68 = $r67[$i30];

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        i54 = r142.<android.media.ExifInterface$ExifTag: int secondaryFormat>;

        if i54 != -1 goto label13;

        r146 = "";

        goto label14;

     label13:
        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r72 = <android.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $i31 = r142.<android.media.ExifInterface$ExifTag: int secondaryFormat>;

        $r73 = $r72[$i31];

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        r146 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r146);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (guess: ");

        $r79 = <android.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $r77 = r143.<android.util.Pair: java.lang.Object first>;

        $r78 = (java.lang.Integer) $r77;

        $i32 = virtualinvoke $r78.<java.lang.Integer: int intValue()>();

        $r80 = $r79[$i32];

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r82 = r143.<android.util.Pair: java.lang.Object second>;

        $r83 = (java.lang.Integer) $r82;

        $i33 = virtualinvoke $r83.<java.lang.Integer: int intValue()>();

        if $i33 != -1 goto label15;

        r148 = "";

        goto label16;

     label15:
        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r88 = <android.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $r86 = r143.<android.util.Pair: java.lang.Object second>;

        $r87 = (java.lang.Integer) $r86;

        $i34 = virtualinvoke $r87.<java.lang.Integer: int intValue()>();

        $r89 = $r88[$i34];

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        r148 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r148);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r93 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r93);

        r140 = r138;

        b51 = b46;

        i50 = i47;

        goto label43;

     label17:
        r140 = r138;

        b51 = b46;

        i50 = i47;

        goto label43;

     label18:
        i53 = r142.<android.media.ExifInterface$ExifTag: int primaryFormat>;

        goto label20;

     label19:
        i53 = r142.<android.media.ExifInterface$ExifTag: int primaryFormat>;

     label20:
        tableswitch(i53)
        {
            case 1: goto label41;
            case 2: goto label40;
            case 3: goto label37;
            case 4: goto label34;
            case 5: goto label31;
            case 6: goto label21;
            case 7: goto label40;
            case 8: goto label21;
            case 9: goto label28;
            case 10: goto label25;
            case 11: goto label21;
            case 12: goto label22;
            default: goto label21;
        };

     label21:
        r140 = r138;

        b51 = b46;

        i50 = i47;

        $z0 = <android.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label43;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data format isn\'t one of expected formats: ");

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i53);

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r60);

        r140 = r138;

        b51 = b46;

        i50 = i47;

        goto label43;

     label22:
        r151 = virtualinvoke r131.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i4 = lengthof r151;

        r152 = newarray (double)[$i4];

        i57 = 0;

     label23:
        $i5 = lengthof r151;

        if i57 >= $i5 goto label24;

        $r12 = r151[i57];

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);

        r152[i57] = $d1;

        i57 = i57 + 1;

        goto label23;

     label24:
        $r7 = r138.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r9 = $r7[i47];

        $r8 = r138.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r10 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createDouble(double[],java.nio.ByteOrder)>(r152, $r8);

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

        i50 = i47;

        r140 = r138;

        b51 = b46;

        goto label43;

     label25:
        r153 = virtualinvoke r131.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i6 = lengthof r153;

        r154 = newarray (android.media.ExifInterface$Rational)[$i6];

        i59 = 0;

     label26:
        $i7 = lengthof r153;

        if i59 >= $i7 goto label27;

        $r18 = r153[i59];

        r155 = virtualinvoke $r18.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r19 = new android.media.ExifInterface$Rational;

        $r20 = r155[0];

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r20);

        $l8 = (long) $d2;

        $r21 = r155[b46];

        $d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r21);

        $l9 = (long) $d3;

        specialinvoke $r19.<android.media.ExifInterface$Rational: void <init>(long,long,android.media.ExifInterface$1)>($l8, $l9, null);

        r154[i59] = $r19;

        i59 = i59 + 1;

        b46 = 1;

        goto label26;

     label27:
        i50 = i47;

        r140 = r0;

        $r13 = r0.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = $r13[i47];

        $r14 = r0.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r16 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createSRational(android.media.ExifInterface$Rational[],java.nio.ByteOrder)>(r154, $r14);

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r16);

        b51 = 1;

        goto label43;

     label28:
        i50 = i47;

        r156 = virtualinvoke r131.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i10 = lengthof r156;

        r157 = newarray (int)[$i10];

        i60 = 0;

     label29:
        $i11 = lengthof r156;

        if i60 >= $i11 goto label30;

        $r27 = r156[i60];

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        r157[i60] = $i12;

        i60 = i60 + 1;

        goto label29;

     label30:
        $r22 = r138.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r24 = $r22[i50];

        $r23 = r138.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r25 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createSLong(int[],java.nio.ByteOrder)>(r157, $r23);

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r25);

        b51 = 1;

        r140 = r138;

        goto label43;

     label31:
        i50 = i47;

        r158 = virtualinvoke r131.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i13 = lengthof r158;

        r159 = newarray (android.media.ExifInterface$Rational)[$i13];

        i61 = 0;

     label32:
        $i14 = lengthof r158;

        if i61 >= $i14 goto label33;

        $r33 = r158[i61];

        r160 = virtualinvoke $r33.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r34 = new android.media.ExifInterface$Rational;

        $r35 = r160[0];

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r35);

        $l15 = (long) $d4;

        $r36 = r160[1];

        $d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r36);

        $l16 = (long) $d5;

        specialinvoke $r34.<android.media.ExifInterface$Rational: void <init>(long,long,android.media.ExifInterface$1)>($l15, $l16, null);

        r159[i61] = $r34;

        i61 = i61 + 1;

        goto label32;

     label33:
        b51 = 1;

        $r28 = r138.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r30 = $r28[i50];

        $r29 = r138.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r31 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createURational(android.media.ExifInterface$Rational[],java.nio.ByteOrder)>(r159, $r29);

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r31);

        r140 = r138;

        goto label43;

     label34:
        i62 = i47;

        r161 = virtualinvoke r131.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i17 = lengthof r161;

        r162 = newarray (long)[$i17];

        i63 = 0;

     label35:
        $i18 = lengthof r161;

        if i63 >= $i18 goto label36;

        $r42 = r161[i63];

        $l19 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r42);

        r162[i63] = $l19;

        i63 = i63 + 1;

        goto label35;

     label36:
        $r37 = r138.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r39 = $r37[i62];

        $r38 = r138.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r40 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder)>(r162, $r38);

        virtualinvoke $r39.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r40);

        r140 = r138;

        b51 = b46;

        i50 = i62;

        goto label43;

     label37:
        b64 = b46;

        i50 = i47;

        r163 = virtualinvoke r131.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i20 = lengthof r163;

        r164 = newarray (int)[$i20];

        i65 = 0;

     label38:
        $i21 = lengthof r163;

        if i65 >= $i21 goto label39;

        $r48 = r163[i65];

        $i22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r48);

        r164[i65] = $i22;

        i65 = i65 + 1;

        goto label38;

     label39:
        $r43 = r138.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r45 = $r43[i50];

        $r44 = r138.<android.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r46 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder)>(r164, $r44);

        virtualinvoke $r45.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r46);

        r140 = r138;

        b51 = b64;

        goto label43;

     label40:
        $r49 = r138.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r50 = $r49[i47];

        $r51 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createString(java.lang.String)>(r131);

        virtualinvoke $r50.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r51);

        r140 = r138;

        b51 = b46;

        i50 = i47;

        goto label43;

     label41:
        i50 = i47;

        $r53 = r138.<android.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r54 = $r53[i47];

        $r55 = staticinvoke <android.media.ExifInterface$ExifAttribute: android.media.ExifInterface$ExifAttribute createByte(java.lang.String)>(r131);

        virtualinvoke $r54.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r55);

        r140 = r138;

        b51 = b46;

        goto label43;

     label42:
        i50 = i47;

        b51 = b46;

        r140 = r138;

     label43:
        i69 = i50 + 1;

        r138 = r140;

        b46 = b51;

        i47 = i69;

        goto label06;

     label44:
        return;

     label45:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r2;

        catch java.lang.NumberFormatException from label02 to label03 with label04;
    }
}
