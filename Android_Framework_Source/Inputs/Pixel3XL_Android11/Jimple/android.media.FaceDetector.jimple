public class android.media.FaceDetector extends java.lang.Object
{
    private static boolean sInitialized;
    private byte[] mBWBuffer;
    private long mDCR;
    private long mFD;
    private int mHeight;
    private int mMaxFaces;
    private long mSDK;
    private int mWidth;

    static void <clinit>()
    {
        java.lang.UnsatisfiedLinkError $r1;

        <android.media.FaceDetector: boolean sInitialized> = 0;

     label1:
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("FFTEm");

        staticinvoke <android.media.FaceDetector: void nativeClassInit()>();

        <android.media.FaceDetector: boolean sInitialized> = 1;

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FFTEm", "face detection library not found!");

     label4:
        return;

        catch java.lang.UnsatisfiedLinkError from label1 to label2 with label3;
    }

    public void <init>(int, int, int)
    {
        android.media.FaceDetector r0;
        int i0, i1, i2, $i4;
        boolean $z0;
        byte[] $r1;

        r0 := @this: android.media.FaceDetector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <android.media.FaceDetector: boolean sInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.media.FaceDetector: int fft_initialize(int,int,int)>(i0, i1, i2);

        r0.<android.media.FaceDetector: int mWidth> = i0;

        r0.<android.media.FaceDetector: int mHeight> = i1;

        r0.<android.media.FaceDetector: int mMaxFaces> = i2;

        $i4 = i0 * i1;

        $r1 = newarray (byte)[$i4];

        r0.<android.media.FaceDetector: byte[] mBWBuffer> = $r1;

        return;
    }

    private native void fft_destroy();

    private native int fft_detect(android.graphics.Bitmap);

    private native void fft_get_face(android.media.FaceDetector$Face, int);

    private native int fft_initialize(int, int, int);

    private static native void nativeClassInit();

    protected void finalize() throws java.lang.Throwable
    {
        android.media.FaceDetector r0;

        r0 := @this: android.media.FaceDetector;

        specialinvoke r0.<android.media.FaceDetector: void fft_destroy()>();

        return;
    }

    public int findFaces(android.graphics.Bitmap, android.media.FaceDetector$Face[])
    {
        android.media.FaceDetector r0;
        android.graphics.Bitmap r1;
        android.media.FaceDetector$Face[] r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        java.lang.IllegalArgumentException $r3, $r4;
        android.media.FaceDetector$Face $r5, $r6, $r7;

        r0 := @this: android.media.FaceDetector;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.media.FaceDetector$Face[];

        $z0 = <android.media.FaceDetector: boolean sInitialized>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = r0.<android.media.FaceDetector: int mWidth>;

        if $i0 != $i1 goto label7;

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $i3 = r0.<android.media.FaceDetector: int mHeight>;

        if $i2 != $i3 goto label7;

        $i5 = lengthof r2;

        $i4 = r0.<android.media.FaceDetector: int mMaxFaces>;

        if $i5 < $i4 goto label6;

        i7 = specialinvoke r0.<android.media.FaceDetector: int fft_detect(android.graphics.Bitmap)>(r1);

        i8 = i7;

        $i6 = r0.<android.media.FaceDetector: int mMaxFaces>;

        if i7 < $i6 goto label2;

        i8 = r0.<android.media.FaceDetector: int mMaxFaces>;

     label2:
        i9 = 0;

     label3:
        if i9 >= i8 goto label5;

        $r5 = r2[i9];

        if $r5 != null goto label4;

        $r7 = new android.media.FaceDetector$Face;

        specialinvoke $r7.<android.media.FaceDetector$Face: void <init>(android.media.FaceDetector,android.media.FaceDetector$1)>(r0, null);

        r2[i9] = $r7;

     label4:
        $r6 = r2[i9];

        specialinvoke r0.<android.media.FaceDetector: void fft_get_face(android.media.FaceDetector$Face,int)>($r6, i9);

        i9 = i9 + 1;

        goto label3;

     label5:
        return i8;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("faces[] smaller than maxFaces");

        throw $r4;

     label7:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bitmap size doesn\'t match initialization");

        throw $r3;
    }
}
