class android.media.IAudioService$Stub$Proxy extends java.lang.Object implements android.media.IAudioService
{
    public static android.media.IAudioService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public int abandonAudioFocus(android.media.IAudioFocusDispatcher, java.lang.String, android.media.AudioAttributes, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        java.lang.String r1, r3;
        android.media.AudioAttributes r2;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r11;
        boolean $z0;
        android.media.IAudioService $r7, $r8;
        java.lang.Throwable $r9;
        android.media.IAudioFocusDispatcher r10;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r10 := @parameter0: android.media.IAudioFocusDispatcher;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.media.AudioAttributes;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r10 == null goto label05;

     label03:
        r11 = interfaceinvoke r10.<android.media.IAudioFocusDispatcher: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r11 = null;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(54, r4, r5, 0);

        if $z0 != 0 goto label13;

        $r7 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r7 == null goto label13;

        $r8 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r8.<android.media.IAudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>(r10, r1, r2, r3);

     label12:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i0;

     label13:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label14:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i1;

     label15:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig, android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.media.audiopolicy.IAudioPolicyCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        android.media.audiopolicy.AudioPolicyConfig r8;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r8 := @parameter0: android.media.audiopolicy.AudioPolicyConfig;

        r1 := @parameter1: android.media.audiopolicy.IAudioPolicyCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.media.audiopolicy.AudioPolicyConfig: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r9 = interfaceinvoke r1.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r9 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(78, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.media.IAudioService: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>(r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void adjustStreamVolume(int, int, int, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r7 := @parameter3: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void adjustStreamVolume(int,int,int,java.lang.String)>(i0, i1, i2, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void adjustSuggestedStreamVolume(int, int, int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, i1, i2;
        java.lang.String r1, r7;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r7 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void adjustSuggestedStreamVolume(int,int,int,java.lang.String,java.lang.String)>(i0, i1, i2, r7, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public android.os.IBinder asBinder()
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        $r1 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void avrcpSupportsAbsoluteVolume(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        byte b0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r2 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r1, null, 1);

        if $z1 != 0 goto label6;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label6;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.IAudioService: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>(r6, z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void disableRingtoneSync(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(89, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IAudioService: void disableRingtoneSync(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void disableSafeMediaVolume(java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(72, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void disableSafeMediaVolume(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int dispatchFocusChange(android.media.AudioFocusInfo, int, android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.media.audiopolicy.IAudioPolicyCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        android.media.AudioFocusInfo r8;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r8 := @parameter0: android.media.AudioFocusInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: android.media.audiopolicy.IAudioPolicyCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.media.AudioFocusInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        r9 = interfaceinvoke r1.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label09:
        goto label11;

     label10:
        r9 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(91, r2, r3, 0);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.media.IAudioService: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>(r8, i0, r1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void forceRemoteSubmixFullVolume(boolean, android.os.IBinder) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r7 := @parameter1: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>(z0, r7);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void forceVolumeControlStream(int, android.os.IBinder) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(60, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void forceVolumeControlStream(int,android.os.IBinder)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getActivePlaybackConfigurations() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(88, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.media.IAudioService: java.util.List getActivePlaybackConfigurations()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.media.AudioPlaybackConfiguration: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getActiveRecordingConfigurations() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(85, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.media.IAudioService: java.util.List getActiveRecordingConfigurations()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.media.AudioRecordingConfiguration: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getAllowedCapturePolicy() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(110, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.media.IAudioService: int getAllowedCapturePolicy()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getAudioProductStrategies() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.media.IAudioService: java.util.List getAudioProductStrategies()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.media.audiopolicy.AudioProductStrategy: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getAudioVolumeGroups() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        java.util.List r8;
        java.util.ArrayList r9;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.media.IAudioService: java.util.List getAudioVolumeGroups()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.media.audiopolicy.AudioVolumeGroup: android.os.Parcelable$Creator CREATOR>;

        r9 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getCurrentAudioFocus() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(56, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.media.IAudioService: int getCurrentAudioFocus()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getDeviceVolumeBehavior(android.media.AudioDeviceAttributes) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.AudioDeviceAttributes r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.AudioDeviceAttributes;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.AudioDeviceAttributes: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(115, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.media.IAudioService: int getDeviceVolumeBehavior(android.media.AudioDeviceAttributes)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.util.List getDevicesForAttributes(android.media.AudioAttributes) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        android.media.AudioAttributes r8;
        java.util.List r9;
        java.util.ArrayList r10;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r8 := @parameter0: android.media.AudioAttributes;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(108, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.media.IAudioService: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>(r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.media.AudioDeviceAttributes: android.os.Parcelable$Creator CREATOR>;

        r10 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int getFocusRampTimeMs(int, android.media.AudioAttributes) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        android.media.AudioAttributes r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.media.AudioAttributes;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(90, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.media.IAudioService: int getFocusRampTimeMs(int,android.media.AudioAttributes)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.IAudioService$Stub$Proxy r0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        return "android.media.IAudioService";
    }

    public int getLastAudibleStreamVolume(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.media.IAudioService: int getLastAudibleStreamVolume(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getMaxVolumeIndexForAttributes(android.media.AudioAttributes) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.AudioAttributes r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.AudioAttributes;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.media.IAudioService: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int getMinVolumeIndexForAttributes(android.media.AudioAttributes) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.AudioAttributes r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.AudioAttributes;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.media.IAudioService: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int getMode() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.media.IAudioService: int getMode()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.media.AudioDeviceAttributes getPreferredDeviceForStrategy(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.media.IAudioService $r6, $r7;
        java.lang.Throwable $r8;
        android.media.AudioDeviceAttributes r9, r10;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(107, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.media.IAudioService: android.media.AudioDeviceAttributes getPreferredDeviceForStrategy(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.media.AudioDeviceAttributes: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.media.AudioDeviceAttributes) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getRingerModeExternal() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.media.IAudioService: int getRingerModeExternal()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getRingerModeInternal() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.media.IAudioService: int getRingerModeInternal()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.media.IRingtonePlayer getRingtonePlayer() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        android.media.IRingtonePlayer r8, r9;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(62, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.media.IAudioService: android.media.IRingtonePlayer getRingtonePlayer()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <android.media.IRingtonePlayer$Stub: android.media.IRingtonePlayer asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getStreamMaxVolume(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.media.IAudioService: int getStreamMaxVolume(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getStreamMinVolume(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.media.IAudioService: int getStreamMinVolume(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getStreamVolume(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.media.IAudioService: int getStreamVolume(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int[] getSupportedSystemUsages() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.media.IAudioService: int[] getSupportedSystemUsages()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getUiSoundsStreamType() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(63, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.media.IAudioService: int getUiSoundsStreamType()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getVibrateSetting(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.media.IAudioService: int getVibrateSetting(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getVolumeIndexForAttributes(android.media.AudioAttributes) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.AudioAttributes r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.AudioAttributes;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.media.IAudioService: int getVolumeIndexForAttributes(android.media.AudioAttributes)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void handleBluetoothA2dpDeviceConfigChange(android.bluetooth.BluetoothDevice) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.bluetooth.BluetoothDevice r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(65, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void handleBluetoothA2dpDeviceConfigChange(android.bluetooth.BluetoothDevice)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void handleVolumeKey(android.view.KeyEvent, boolean, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        java.lang.String r1, r2;
        android.os.Parcel r3;
        android.os.IBinder $r4;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        android.view.KeyEvent r8;
        byte b0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r8 := @parameter0: android.view.KeyEvent;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        b0 = 0;

        if r8 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        b0 = 1;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r3, null, 1);

        if $z1 != 0 goto label09;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label09;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IAudioService: void handleVolumeKey(android.view.KeyEvent,boolean,java.lang.String,java.lang.String)>(r8, z0, r1, r2);

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }

    public boolean hasHapticChannels(android.net.Uri) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Uri r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.net.Uri;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(103, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.media.IAudioService: boolean hasHapticChannels(android.net.Uri)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public boolean hasRegisteredDynamicPolicy() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(82, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean hasRegisteredDynamicPolicy()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isAudioServerRunning() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(98, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isAudioServerRunning()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isBluetoothA2dpOn() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(52, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isBluetoothA2dpOn()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isBluetoothScoOn() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isBluetoothScoOn()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isCallScreeningModeSupported() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(104, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isCallScreeningModeSupported()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isCameraSoundForced() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(67, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isCameraSoundForced()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isHdmiSystemAudioSupported() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(74, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isHdmiSystemAudioSupported()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isMasterMute() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isMasterMute()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isMicrophoneMuted() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isMicrophoneMuted()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isSpeakerphoneOn() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isSpeakerphoneOn()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isStreamAffectedByMute(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(71, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isStreamAffectedByMute(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isStreamAffectedByRingerMode(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(70, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isStreamAffectedByRingerMode(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isStreamMute(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isStreamMute(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isValidRingerMode(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean isValidRingerMode(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean loadSoundEffects() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean loadSoundEffects()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void notifyVolumeControllerVisible(android.media.IVolumeController, boolean) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.IVolumeController r7;
        byte b0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.IVolumeController;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.IVolumeController: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

     label07:
        if z0 == 0 goto label08;

        b0 = 1;

        goto label09;

     label08:
        b0 = 0;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(69, r1, r2, 0);

        if $z1 != 0 goto label11;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label11;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>(r7, z0);

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void playSoundEffect(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void playSoundEffect(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void playSoundEffectVolume(int, float) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        float f0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void playSoundEffectVolume(int,float)>(i0, f0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void playerAttributes(int, android.media.AudioAttributes) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.media.AudioAttributes r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: android.media.AudioAttributes;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.IAudioService: void playerAttributes(int,android.media.AudioAttributes)>(i0, r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void playerEvent(int, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void playerEvent(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void playerHasOpPlayAudio(int, boolean) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        byte b1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(92, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void playerHasOpPlayAudio(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void recorderEvent(int, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void recorderEvent(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig, android.media.audiopolicy.IAudioPolicyCallback, boolean, boolean, boolean, boolean, android.media.projection.IMediaProjection) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.media.audiopolicy.IAudioPolicyCallback r1;
        boolean z0, z1, z2, z3, $z4;
        android.media.projection.IMediaProjection r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r11, r12;
        android.media.IAudioService $r6, $r7;
        java.lang.Throwable $r8, $r9, r15;
        android.media.audiopolicy.AudioPolicyConfig r10;
        byte b0, b1, b2, b3;
        java.lang.String r13, r14;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r10 := @parameter0: android.media.audiopolicy.AudioPolicyConfig;

        r1 := @parameter1: android.media.audiopolicy.IAudioPolicyCallback;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r2 := @parameter6: android.media.projection.IMediaProjection;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r10 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.media.audiopolicy.AudioPolicyConfig: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r11 = interfaceinvoke r1.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r11 = null;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r11);

     label11:
        if z0 == 0 goto label12;

        b0 = 1;

        goto label13;

     label12:
        b0 = 0;

     label13:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

     label14:
        if z1 == 0 goto label15;

        b1 = 1;

        goto label16;

     label15:
        b1 = 0;

     label16:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b1);

     label17:
        if z2 == 0 goto label18;

        b2 = 1;

        goto label19;

     label18:
        b2 = 0;

     label19:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b2);

     label20:
        if z3 == 0 goto label21;

        b3 = 1;

        goto label22;

     label21:
        b3 = 0;

     label22:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b3);

     label23:
        r12 = null;

        if r2 == null goto label25;

     label24:
        r12 = interfaceinvoke r2.<android.media.projection.IMediaProjection: android.os.IBinder asBinder()>();

     label25:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r12);

     label26:
        $r5 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z4 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(75, r3, r4, 0);

        if $z4 != 0 goto label28;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r6 == null goto label28;

        $r7 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        r13 = interfaceinvoke $r7.<android.media.IAudioService: java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean,boolean,boolean,boolean,android.media.projection.IMediaProjection)>(r10, r1, z0, z1, z2, z3, r2);

     label27:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r13;

     label28:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        r14 = virtualinvoke r4.<android.os.Parcel: java.lang.String readString()>();

     label29:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r14;

     label30:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label32;

     label31:
        $r8 := @caughtexception;

        r15 = $r8;

     label32:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label31;
        catch java.lang.Throwable from label03 to label04 with label31;
        catch java.lang.Throwable from label05 to label06 with label31;
        catch java.lang.Throwable from label07 to label08 with label31;
        catch java.lang.Throwable from label10 to label11 with label31;
        catch java.lang.Throwable from label13 to label14 with label31;
        catch java.lang.Throwable from label16 to label17 with label31;
        catch java.lang.Throwable from label19 to label20 with label31;
        catch java.lang.Throwable from label22 to label23 with label31;
        catch java.lang.Throwable from label24 to label25 with label31;
        catch java.lang.Throwable from label25 to label26 with label31;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
    }

    public void registerAudioServerStateDispatcher(android.media.IAudioServerStateDispatcher) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.IAudioServerStateDispatcher r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.IAudioServerStateDispatcher;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.IAudioServerStateDispatcher: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(96, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void registerAudioServerStateDispatcher(android.media.IAudioServerStateDispatcher)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerPlaybackCallback(android.media.IPlaybackConfigDispatcher) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.IPlaybackConfigDispatcher r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.IPlaybackConfigDispatcher;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.IPlaybackConfigDispatcher: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(86, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void registerPlaybackCallback(android.media.IPlaybackConfigDispatcher)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerRecordingCallback(android.media.IRecordingConfigDispatcher) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.IRecordingConfigDispatcher r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.IRecordingConfigDispatcher;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.IRecordingConfigDispatcher: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(83, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void registerRecordingCallback(android.media.IRecordingConfigDispatcher)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.IStrategyPreferredDeviceDispatcher r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.IStrategyPreferredDeviceDispatcher;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.IStrategyPreferredDeviceDispatcher: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(111, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void registerStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void releasePlayer(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void releasePlayer(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void releaseRecorder(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void releaseRecorder(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void reloadAudioSettings() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void reloadAudioSettings()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig, android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.media.audiopolicy.IAudioPolicyCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        android.media.audiopolicy.AudioPolicyConfig r8;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r8 := @parameter0: android.media.audiopolicy.AudioPolicyConfig;

        r1 := @parameter1: android.media.audiopolicy.IAudioPolicyCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.media.audiopolicy.AudioPolicyConfig: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r9 = interfaceinvoke r1.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r9 = null;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(79, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.media.IAudioService: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>(r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public int removePreferredDeviceForStrategy(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(106, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.media.IAudioService: int removePreferredDeviceForStrategy(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int removeUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.audiopolicy.IAudioPolicyCallback r7;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.audiopolicy.IAudioPolicyCallback;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(100, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.media.IAudioService: int removeUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int removeUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.audiopolicy.IAudioPolicyCallback r7;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.audiopolicy.IAudioPolicyCallback;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(102, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.media.IAudioService: int removeUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int requestAudioFocus(android.media.AudioAttributes, int, android.os.IBinder, android.media.IAudioFocusDispatcher, java.lang.String, java.lang.String, int, android.media.audiopolicy.IAudioPolicyCallback, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.IBinder r1, $r8, r15, r16;
        android.media.IAudioFocusDispatcher r2;
        java.lang.String r3, r4;
        int i0, i1, i2, i3, i4;
        android.media.audiopolicy.IAudioPolicyCallback r5;
        android.os.Parcel r6, r7;
        boolean $z0;
        android.media.IAudioService $r9, $r10;
        java.lang.Throwable $r11, $r12, $r13, r17;
        android.media.AudioAttributes r14;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r14 := @parameter0: android.media.AudioAttributes;

        i2 := @parameter1: int;

        r1 := @parameter2: android.os.IBinder;

        r2 := @parameter3: android.media.IAudioFocusDispatcher;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        r5 := @parameter7: android.media.audiopolicy.IAudioPolicyCallback;

        i1 := @parameter8: int;

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r14 == null goto label05;

     label03:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r14.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(i2);

     label07:
        virtualinvoke r6.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

     label08:
        if r2 == null goto label11;

     label09:
        r15 = interfaceinvoke r2.<android.media.IAudioFocusDispatcher: android.os.IBinder asBinder()>();

     label10:
        goto label12;

     label11:
        r15 = null;

     label12:
        virtualinvoke r6.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r15);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(i0);

     label13:
        r16 = null;

        if r5 == null goto label15;

     label14:
        r16 = interfaceinvoke r5.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label15:
        virtualinvoke r6.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r16);

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(i1);

        $r8 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(53, r6, r7, 0);

        if $z0 != 0 goto label17;

        $r9 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r9 == null goto label17;

        $r10 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i3 = interfaceinvoke $r10.<android.media.IAudioService: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>(r14, i2, r1, r2, r3, r4, i0, r5, i1);

     label16:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return i3;

     label17:
        virtualinvoke r7.<android.os.Parcel: void readException()>();

        i4 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

     label18:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return i4;

     label19:
        $r13 := @caughtexception;

        r17 = $r13;

        goto label22;

     label20:
        $r11 := @caughtexception;

        r17 = $r11;

        goto label22;

     label21:
        $r12 := @caughtexception;

        r17 = $r12;

     label22:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r17;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    public int setAllowedCapturePolicy(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(109, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.media.IAudioService: int setAllowedCapturePolicy(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(android.bluetooth.BluetoothDevice, int, int, boolean, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, i1, i2;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.bluetooth.BluetoothDevice r7;
        byte b3;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        b3 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label07:
        if z0 == 0 goto label08;

        goto label09;

     label08:
        b3 = 0;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(94, r1, r2, 0);

        if $z1 != 0 goto label11;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label11;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(android.bluetooth.BluetoothDevice,int,int,boolean,int)>(r7, i0, i1, z0, i2);

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void setBluetoothA2dpOn(boolean) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(51, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IAudioService: void setBluetoothA2dpOn(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setBluetoothHearingAidDeviceConnectionState(android.bluetooth.BluetoothDevice, int, boolean, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.bluetooth.BluetoothDevice r7;
        byte b2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        b2 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if z0 == 0 goto label08;

        goto label09;

     label08:
        b2 = 0;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(93, r1, r2, 0);

        if $z1 != 0 goto label11;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label11;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setBluetoothHearingAidDeviceConnectionState(android.bluetooth.BluetoothDevice,int,boolean,int)>(r7, i0, z0, i1);

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void setBluetoothScoOn(boolean) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IAudioService: void setBluetoothScoOn(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setDeviceVolumeBehavior(android.media.AudioDeviceAttributes, int, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        android.media.AudioDeviceAttributes r8;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r8 := @parameter0: android.media.AudioDeviceAttributes;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.media.AudioDeviceAttributes: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(114, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IAudioService: void setDeviceVolumeBehavior(android.media.AudioDeviceAttributes,int,java.lang.String)>(r8, i0, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int setFocusPropertiesForPolicy(int, android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        android.media.audiopolicy.IAudioPolicyCallback r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.media.audiopolicy.IAudioPolicyCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(80, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.media.IAudioService: int setFocusPropertiesForPolicy(int,android.media.audiopolicy.IAudioPolicyCallback)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo, int, android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        android.media.audiopolicy.IAudioPolicyCallback r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.AudioFocusInfo r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.AudioFocusInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: android.media.audiopolicy.IAudioPolicyCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.AudioFocusInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        r8 = interfaceinvoke r1.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label09:
        goto label11;

     label10:
        r8 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(95, r2, null, 1);

        if $z0 != 0 goto label13;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label13;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>(r7, i0, r1);

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }

    public int setHdmiSystemAudioSupported(boolean) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;
        int i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(73, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.media.IAudioService: int setHdmiSystemAudioSupported(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setMasterMute(boolean, int, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setMasterMute(boolean,int,java.lang.String,int)>(z0, i0, r7, i1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setMicrophoneMute(boolean, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r7 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setMicrophoneMute(boolean,java.lang.String,int)>(z0, r7, i0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setMicrophoneMuteFromSwitch(boolean) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setMicrophoneMuteFromSwitch(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setMode(int, android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.os.IBinder;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IAudioService: void setMode(int,android.os.IBinder,java.lang.String)>(i0, r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setMultiAudioFocusEnabled(boolean) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(116, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setMultiAudioFocusEnabled(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public int setPreferredDeviceForStrategy(int, android.media.AudioDeviceAttributes) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        android.media.AudioDeviceAttributes r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.media.AudioDeviceAttributes;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.AudioDeviceAttributes: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(105, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.media.IAudioService: int setPreferredDeviceForStrategy(int,android.media.AudioDeviceAttributes)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setRingerModeExternal(int, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setRingerModeExternal(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setRingerModeInternal(int, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setRingerModeInternal(int,java.lang.String)>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setRingtonePlayer(android.media.IRingtonePlayer) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.IRingtonePlayer r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.IRingtonePlayer;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.IRingtonePlayer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(61, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setRingtonePlayer(android.media.IRingtonePlayer)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setRttEnabled(boolean) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(113, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setRttEnabled(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setSpeakerphoneOn(android.os.IBinder, boolean) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setSpeakerphoneOn(android.os.IBinder,boolean)>(r7, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setStreamVolume(int, int, int, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r7 := @parameter3: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setStreamVolume(int,int,int,java.lang.String)>(i0, i1, i2, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setSupportedSystemUsages(int[]) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setSupportedSystemUsages(int[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int setUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback, int, int[], java.lang.String[]) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int[] r1;
        java.lang.String[] r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10;
        boolean $z0;
        android.media.IAudioService $r6, $r7;
        java.lang.Throwable $r8;
        android.media.audiopolicy.IAudioPolicyCallback r9;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r9 := @parameter0: android.media.audiopolicy.IAudioPolicyCallback;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: java.lang.String[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeIntArray(int[])>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

        $r5 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(99, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r7.<android.media.IAudioService: int setUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int,int[],java.lang.String[])>(r9, i0, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int setUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback, int, int[], java.lang.String[]) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int[] r1;
        java.lang.String[] r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10;
        boolean $z0;
        android.media.IAudioService $r6, $r7;
        java.lang.Throwable $r8;
        android.media.audiopolicy.IAudioPolicyCallback r9;
        int i0, i1, i2;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r9 := @parameter0: android.media.audiopolicy.IAudioPolicyCallback;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: java.lang.String[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeIntArray(int[])>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

        $r5 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(101, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i1 = interfaceinvoke $r7.<android.media.IAudioService: int setUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int,int[],java.lang.String[])>(r9, i0, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setVibrateSetting(int, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IAudioService: void setVibrateSetting(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setVolumeController(android.media.IVolumeController) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.IVolumeController r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.IVolumeController;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.IVolumeController: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(68, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setVolumeController(android.media.IVolumeController)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setVolumeIndexForAttributes(android.media.AudioAttributes, int, int, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IAudioService $r5, $r6;
        java.lang.Throwable $r7;
        android.media.AudioAttributes r8;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r8 := @parameter0: android.media.AudioAttributes;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IAudioService: void setVolumeIndexForAttributes(android.media.AudioAttributes,int,int,java.lang.String)>(r8, i0, i1, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setVolumePolicy(android.media.VolumePolicy) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.VolumePolicy r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.VolumePolicy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.VolumePolicy: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(81, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void setVolumePolicy(android.media.VolumePolicy)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setWiredDeviceConnectionState(int, int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1, r2, r9;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.media.IAudioService $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r9 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(64, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r7.<android.media.IAudioService: void setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)>(i0, i1, r9, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean shouldVibrate(int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.IAudioService: boolean shouldVibrate(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void startBluetoothSco(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(57, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void startBluetoothSco(android.os.IBinder,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void startBluetoothScoVirtualCall(android.os.IBinder) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(58, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void startBluetoothScoVirtualCall(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r10;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.media.IAudioService $r6, $r7;
        java.lang.Throwable $r8;
        android.media.IAudioRoutesObserver r9;
        android.media.AudioRoutesInfo r11, r12;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r9 := @parameter0: android.media.IAudioRoutesObserver;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.media.IAudioRoutesObserver: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(66, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        r11 = interfaceinvoke $r7.<android.media.IAudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>(r9);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r4 = <android.media.AudioRoutesInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r12 = (android.media.AudioRoutesInfo) $r5;

     label09:
        goto label11;

     label10:
        r12 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r12;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public void stopBluetoothSco(android.os.IBinder) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(59, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void stopBluetoothSco(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int trackPlayer(android.media.PlayerBase$PlayerIdCard) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.PlayerBase$PlayerIdCard r7;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.PlayerBase$PlayerIdCard;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.PlayerBase$PlayerIdCard: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.media.IAudioService: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int trackRecorder(android.os.IBinder) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.media.IAudioService: int trackRecorder(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unloadSoundEffects() throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void unloadSoundEffects()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void unregisterAudioFocusClient(java.lang.String) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(55, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void unregisterAudioFocusClient(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unregisterAudioPolicy(android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.IAudioService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.audiopolicy.IAudioPolicyCallback r7;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r7 := @parameter0: android.media.audiopolicy.IAudioPolicyCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(77, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IAudioService: void unregisterAudioPolicy(android.media.audiopolicy.IAudioPolicyCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterAudioPolicyAsync(android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.media.audiopolicy.IAudioPolicyCallback r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r6 := @parameter0: android.media.audiopolicy.IAudioPolicyCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.media.audiopolicy.IAudioPolicyCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(76, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.IAudioService: void unregisterAudioPolicyAsync(android.media.audiopolicy.IAudioPolicyCallback)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void unregisterAudioServerStateDispatcher(android.media.IAudioServerStateDispatcher) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.media.IAudioServerStateDispatcher r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r6 := @parameter0: android.media.IAudioServerStateDispatcher;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.media.IAudioServerStateDispatcher: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(97, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.IAudioService: void unregisterAudioServerStateDispatcher(android.media.IAudioServerStateDispatcher)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void unregisterPlaybackCallback(android.media.IPlaybackConfigDispatcher) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.media.IPlaybackConfigDispatcher r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r6 := @parameter0: android.media.IPlaybackConfigDispatcher;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.media.IPlaybackConfigDispatcher: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(87, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.IAudioService: void unregisterPlaybackCallback(android.media.IPlaybackConfigDispatcher)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void unregisterRecordingCallback(android.media.IRecordingConfigDispatcher) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.media.IRecordingConfigDispatcher r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r6 := @parameter0: android.media.IRecordingConfigDispatcher;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.media.IRecordingConfigDispatcher: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(84, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.IAudioService: void unregisterRecordingCallback(android.media.IRecordingConfigDispatcher)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void unregisterStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.media.IAudioService $r3, $r4;
        java.lang.Throwable $r5;
        android.media.IStrategyPreferredDeviceDispatcher r6;

        r0 := @this: android.media.IAudioService$Stub$Proxy;

        r6 := @parameter0: android.media.IStrategyPreferredDeviceDispatcher;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IAudioService");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.media.IStrategyPreferredDeviceDispatcher: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.media.IAudioService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(112, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.IAudioService: void unregisterStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }
}
