public abstract class android.media.IAudioService$Stub extends android.os.Binder implements android.media.IAudioService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_abandonAudioFocus;
    static final int TRANSACTION_addMixForPolicy;
    static final int TRANSACTION_adjustStreamVolume;
    static final int TRANSACTION_adjustSuggestedStreamVolume;
    static final int TRANSACTION_avrcpSupportsAbsoluteVolume;
    static final int TRANSACTION_disableRingtoneSync;
    static final int TRANSACTION_disableSafeMediaVolume;
    static final int TRANSACTION_dispatchFocusChange;
    static final int TRANSACTION_forceRemoteSubmixFullVolume;
    static final int TRANSACTION_forceVolumeControlStream;
    static final int TRANSACTION_getActivePlaybackConfigurations;
    static final int TRANSACTION_getActiveRecordingConfigurations;
    static final int TRANSACTION_getAllowedCapturePolicy;
    static final int TRANSACTION_getAudioProductStrategies;
    static final int TRANSACTION_getAudioVolumeGroups;
    static final int TRANSACTION_getCurrentAudioFocus;
    static final int TRANSACTION_getDeviceVolumeBehavior;
    static final int TRANSACTION_getDevicesForAttributes;
    static final int TRANSACTION_getFocusRampTimeMs;
    static final int TRANSACTION_getLastAudibleStreamVolume;
    static final int TRANSACTION_getMaxVolumeIndexForAttributes;
    static final int TRANSACTION_getMinVolumeIndexForAttributes;
    static final int TRANSACTION_getMode;
    static final int TRANSACTION_getPreferredDeviceForStrategy;
    static final int TRANSACTION_getRingerModeExternal;
    static final int TRANSACTION_getRingerModeInternal;
    static final int TRANSACTION_getRingtonePlayer;
    static final int TRANSACTION_getStreamMaxVolume;
    static final int TRANSACTION_getStreamMinVolume;
    static final int TRANSACTION_getStreamVolume;
    static final int TRANSACTION_getSupportedSystemUsages;
    static final int TRANSACTION_getUiSoundsStreamType;
    static final int TRANSACTION_getVibrateSetting;
    static final int TRANSACTION_getVolumeIndexForAttributes;
    static final int TRANSACTION_handleBluetoothA2dpDeviceConfigChange;
    static final int TRANSACTION_handleVolumeKey;
    static final int TRANSACTION_hasHapticChannels;
    static final int TRANSACTION_hasRegisteredDynamicPolicy;
    static final int TRANSACTION_isAudioServerRunning;
    static final int TRANSACTION_isBluetoothA2dpOn;
    static final int TRANSACTION_isBluetoothScoOn;
    static final int TRANSACTION_isCallScreeningModeSupported;
    static final int TRANSACTION_isCameraSoundForced;
    static final int TRANSACTION_isHdmiSystemAudioSupported;
    static final int TRANSACTION_isMasterMute;
    static final int TRANSACTION_isMicrophoneMuted;
    static final int TRANSACTION_isSpeakerphoneOn;
    static final int TRANSACTION_isStreamAffectedByMute;
    static final int TRANSACTION_isStreamAffectedByRingerMode;
    static final int TRANSACTION_isStreamMute;
    static final int TRANSACTION_isValidRingerMode;
    static final int TRANSACTION_loadSoundEffects;
    static final int TRANSACTION_notifyVolumeControllerVisible;
    static final int TRANSACTION_playSoundEffect;
    static final int TRANSACTION_playSoundEffectVolume;
    static final int TRANSACTION_playerAttributes;
    static final int TRANSACTION_playerEvent;
    static final int TRANSACTION_playerHasOpPlayAudio;
    static final int TRANSACTION_recorderEvent;
    static final int TRANSACTION_registerAudioPolicy;
    static final int TRANSACTION_registerAudioServerStateDispatcher;
    static final int TRANSACTION_registerPlaybackCallback;
    static final int TRANSACTION_registerRecordingCallback;
    static final int TRANSACTION_registerStrategyPreferredDeviceDispatcher;
    static final int TRANSACTION_releasePlayer;
    static final int TRANSACTION_releaseRecorder;
    static final int TRANSACTION_reloadAudioSettings;
    static final int TRANSACTION_removeMixForPolicy;
    static final int TRANSACTION_removePreferredDeviceForStrategy;
    static final int TRANSACTION_removeUidDeviceAffinity;
    static final int TRANSACTION_removeUserIdDeviceAffinity;
    static final int TRANSACTION_requestAudioFocus;
    static final int TRANSACTION_setAllowedCapturePolicy;
    static final int TRANSACTION_setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent;
    static final int TRANSACTION_setBluetoothA2dpOn;
    static final int TRANSACTION_setBluetoothHearingAidDeviceConnectionState;
    static final int TRANSACTION_setBluetoothScoOn;
    static final int TRANSACTION_setDeviceVolumeBehavior;
    static final int TRANSACTION_setFocusPropertiesForPolicy;
    static final int TRANSACTION_setFocusRequestResultFromExtPolicy;
    static final int TRANSACTION_setHdmiSystemAudioSupported;
    static final int TRANSACTION_setMasterMute;
    static final int TRANSACTION_setMicrophoneMute;
    static final int TRANSACTION_setMicrophoneMuteFromSwitch;
    static final int TRANSACTION_setMode;
    static final int TRANSACTION_setMultiAudioFocusEnabled;
    static final int TRANSACTION_setPreferredDeviceForStrategy;
    static final int TRANSACTION_setRingerModeExternal;
    static final int TRANSACTION_setRingerModeInternal;
    static final int TRANSACTION_setRingtonePlayer;
    static final int TRANSACTION_setRttEnabled;
    static final int TRANSACTION_setSpeakerphoneOn;
    static final int TRANSACTION_setStreamVolume;
    static final int TRANSACTION_setSupportedSystemUsages;
    static final int TRANSACTION_setUidDeviceAffinity;
    static final int TRANSACTION_setUserIdDeviceAffinity;
    static final int TRANSACTION_setVibrateSetting;
    static final int TRANSACTION_setVolumeController;
    static final int TRANSACTION_setVolumeIndexForAttributes;
    static final int TRANSACTION_setVolumePolicy;
    static final int TRANSACTION_setWiredDeviceConnectionState;
    static final int TRANSACTION_shouldVibrate;
    static final int TRANSACTION_startBluetoothSco;
    static final int TRANSACTION_startBluetoothScoVirtualCall;
    static final int TRANSACTION_startWatchingRoutes;
    static final int TRANSACTION_stopBluetoothSco;
    static final int TRANSACTION_trackPlayer;
    static final int TRANSACTION_trackRecorder;
    static final int TRANSACTION_unloadSoundEffects;
    static final int TRANSACTION_unregisterAudioFocusClient;
    static final int TRANSACTION_unregisterAudioPolicy;
    static final int TRANSACTION_unregisterAudioPolicyAsync;
    static final int TRANSACTION_unregisterAudioServerStateDispatcher;
    static final int TRANSACTION_unregisterPlaybackCallback;
    static final int TRANSACTION_unregisterRecordingCallback;
    static final int TRANSACTION_unregisterStrategyPreferredDeviceDispatcher;

    public void <init>()
    {
        android.media.IAudioService$Stub r0;

        r0 := @this: android.media.IAudioService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.media.IAudioService");

        return;
    }

    public static android.media.IAudioService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.media.IAudioService$Stub$Proxy $r2;
        boolean $z0;
        android.media.IAudioService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.media.IAudioService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.media.IAudioService;

        if $z0 == 0 goto label2;

        $r3 = (android.media.IAudioService) r1;

        return $r3;

     label2:
        $r2 = new android.media.IAudioService$Stub$Proxy;

        specialinvoke $r2.<android.media.IAudioService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.media.IAudioService getDefaultImpl()
    {
        android.media.IAudioService $r0;

        $r0 = <android.media.IAudioService$Stub$Proxy: android.media.IAudioService sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label117;
            case 2: goto label116;
            case 3: goto label115;
            case 4: goto label114;
            case 5: goto label113;
            case 6: goto label112;
            case 7: goto label111;
            case 8: goto label110;
            case 9: goto label109;
            case 10: goto label108;
            case 11: goto label107;
            case 12: goto label106;
            case 13: goto label105;
            case 14: goto label104;
            case 15: goto label103;
            case 16: goto label102;
            case 17: goto label101;
            case 18: goto label100;
            case 19: goto label099;
            case 20: goto label098;
            case 21: goto label097;
            case 22: goto label096;
            case 23: goto label095;
            case 24: goto label094;
            case 25: goto label093;
            case 26: goto label092;
            case 27: goto label091;
            case 28: goto label090;
            case 29: goto label089;
            case 30: goto label088;
            case 31: goto label087;
            case 32: goto label086;
            case 33: goto label085;
            case 34: goto label084;
            case 35: goto label083;
            case 36: goto label082;
            case 37: goto label081;
            case 38: goto label080;
            case 39: goto label079;
            case 40: goto label078;
            case 41: goto label077;
            case 42: goto label076;
            case 43: goto label075;
            case 44: goto label074;
            case 45: goto label073;
            case 46: goto label072;
            case 47: goto label071;
            case 48: goto label070;
            case 49: goto label069;
            case 50: goto label068;
            case 51: goto label067;
            case 52: goto label066;
            case 53: goto label065;
            case 54: goto label064;
            case 55: goto label063;
            case 56: goto label062;
            case 57: goto label061;
            case 58: goto label060;
            case 59: goto label059;
            case 60: goto label058;
            case 61: goto label057;
            case 62: goto label056;
            case 63: goto label055;
            case 64: goto label054;
            case 65: goto label053;
            case 66: goto label052;
            case 67: goto label051;
            case 68: goto label050;
            case 69: goto label049;
            case 70: goto label048;
            case 71: goto label047;
            case 72: goto label046;
            case 73: goto label045;
            case 74: goto label044;
            case 75: goto label043;
            case 76: goto label042;
            case 77: goto label041;
            case 78: goto label040;
            case 79: goto label039;
            case 80: goto label038;
            case 81: goto label037;
            case 82: goto label036;
            case 83: goto label035;
            case 84: goto label034;
            case 85: goto label033;
            case 86: goto label032;
            case 87: goto label031;
            case 88: goto label030;
            case 89: goto label029;
            case 90: goto label028;
            case 91: goto label027;
            case 92: goto label026;
            case 93: goto label025;
            case 94: goto label024;
            case 95: goto label023;
            case 96: goto label022;
            case 97: goto label021;
            case 98: goto label020;
            case 99: goto label019;
            case 100: goto label018;
            case 101: goto label017;
            case 102: goto label016;
            case 103: goto label015;
            case 104: goto label014;
            case 105: goto label013;
            case 106: goto label012;
            case 107: goto label011;
            case 108: goto label010;
            case 109: goto label009;
            case 110: goto label008;
            case 111: goto label007;
            case 112: goto label006;
            case 113: goto label005;
            case 114: goto label004;
            case 115: goto label003;
            case 116: goto label002;
            default: goto label001;
        };

     label001:
        return null;

     label002:
        return "setMultiAudioFocusEnabled";

     label003:
        return "getDeviceVolumeBehavior";

     label004:
        return "setDeviceVolumeBehavior";

     label005:
        return "setRttEnabled";

     label006:
        return "unregisterStrategyPreferredDeviceDispatcher";

     label007:
        return "registerStrategyPreferredDeviceDispatcher";

     label008:
        return "getAllowedCapturePolicy";

     label009:
        return "setAllowedCapturePolicy";

     label010:
        return "getDevicesForAttributes";

     label011:
        return "getPreferredDeviceForStrategy";

     label012:
        return "removePreferredDeviceForStrategy";

     label013:
        return "setPreferredDeviceForStrategy";

     label014:
        return "isCallScreeningModeSupported";

     label015:
        return "hasHapticChannels";

     label016:
        return "removeUserIdDeviceAffinity";

     label017:
        return "setUserIdDeviceAffinity";

     label018:
        return "removeUidDeviceAffinity";

     label019:
        return "setUidDeviceAffinity";

     label020:
        return "isAudioServerRunning";

     label021:
        return "unregisterAudioServerStateDispatcher";

     label022:
        return "registerAudioServerStateDispatcher";

     label023:
        return "setFocusRequestResultFromExtPolicy";

     label024:
        return "setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent";

     label025:
        return "setBluetoothHearingAidDeviceConnectionState";

     label026:
        return "playerHasOpPlayAudio";

     label027:
        return "dispatchFocusChange";

     label028:
        return "getFocusRampTimeMs";

     label029:
        return "disableRingtoneSync";

     label030:
        return "getActivePlaybackConfigurations";

     label031:
        return "unregisterPlaybackCallback";

     label032:
        return "registerPlaybackCallback";

     label033:
        return "getActiveRecordingConfigurations";

     label034:
        return "unregisterRecordingCallback";

     label035:
        return "registerRecordingCallback";

     label036:
        return "hasRegisteredDynamicPolicy";

     label037:
        return "setVolumePolicy";

     label038:
        return "setFocusPropertiesForPolicy";

     label039:
        return "removeMixForPolicy";

     label040:
        return "addMixForPolicy";

     label041:
        return "unregisterAudioPolicy";

     label042:
        return "unregisterAudioPolicyAsync";

     label043:
        return "registerAudioPolicy";

     label044:
        return "isHdmiSystemAudioSupported";

     label045:
        return "setHdmiSystemAudioSupported";

     label046:
        return "disableSafeMediaVolume";

     label047:
        return "isStreamAffectedByMute";

     label048:
        return "isStreamAffectedByRingerMode";

     label049:
        return "notifyVolumeControllerVisible";

     label050:
        return "setVolumeController";

     label051:
        return "isCameraSoundForced";

     label052:
        return "startWatchingRoutes";

     label053:
        return "handleBluetoothA2dpDeviceConfigChange";

     label054:
        return "setWiredDeviceConnectionState";

     label055:
        return "getUiSoundsStreamType";

     label056:
        return "getRingtonePlayer";

     label057:
        return "setRingtonePlayer";

     label058:
        return "forceVolumeControlStream";

     label059:
        return "stopBluetoothSco";

     label060:
        return "startBluetoothScoVirtualCall";

     label061:
        return "startBluetoothSco";

     label062:
        return "getCurrentAudioFocus";

     label063:
        return "unregisterAudioFocusClient";

     label064:
        return "abandonAudioFocus";

     label065:
        return "requestAudioFocus";

     label066:
        return "isBluetoothA2dpOn";

     label067:
        return "setBluetoothA2dpOn";

     label068:
        return "isBluetoothScoOn";

     label069:
        return "setBluetoothScoOn";

     label070:
        return "isSpeakerphoneOn";

     label071:
        return "setSpeakerphoneOn";

     label072:
        return "avrcpSupportsAbsoluteVolume";

     label073:
        return "reloadAudioSettings";

     label074:
        return "unloadSoundEffects";

     label075:
        return "loadSoundEffects";

     label076:
        return "playSoundEffectVolume";

     label077:
        return "playSoundEffect";

     label078:
        return "getMode";

     label079:
        return "setMode";

     label080:
        return "shouldVibrate";

     label081:
        return "getVibrateSetting";

     label082:
        return "setVibrateSetting";

     label083:
        return "isValidRingerMode";

     label084:
        return "getRingerModeInternal";

     label085:
        return "getRingerModeExternal";

     label086:
        return "setRingerModeInternal";

     label087:
        return "setRingerModeExternal";

     label088:
        return "setMicrophoneMuteFromSwitch";

     label089:
        return "setMicrophoneMute";

     label090:
        return "isMicrophoneMuted";

     label091:
        return "getAudioProductStrategies";

     label092:
        return "getSupportedSystemUsages";

     label093:
        return "setSupportedSystemUsages";

     label094:
        return "getLastAudibleStreamVolume";

     label095:
        return "getMinVolumeIndexForAttributes";

     label096:
        return "getMaxVolumeIndexForAttributes";

     label097:
        return "getVolumeIndexForAttributes";

     label098:
        return "setVolumeIndexForAttributes";

     label099:
        return "getAudioVolumeGroups";

     label100:
        return "getStreamMaxVolume";

     label101:
        return "getStreamMinVolume";

     label102:
        return "getStreamVolume";

     label103:
        return "setMasterMute";

     label104:
        return "isMasterMute";

     label105:
        return "forceRemoteSubmixFullVolume";

     label106:
        return "isStreamMute";

     label107:
        return "handleVolumeKey";

     label108:
        return "setStreamVolume";

     label109:
        return "adjustStreamVolume";

     label110:
        return "adjustSuggestedStreamVolume";

     label111:
        return "releaseRecorder";

     label112:
        return "recorderEvent";

     label113:
        return "trackRecorder";

     label114:
        return "releasePlayer";

     label115:
        return "playerEvent";

     label116:
        return "playerAttributes";

     label117:
        return "trackPlayer";
    }

    public static boolean setDefaultImpl(android.media.IAudioService)
    {
        android.media.IAudioService r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.media.IAudioService;

        $r1 = <android.media.IAudioService$Stub$Proxy: android.media.IAudioService sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.media.IAudioService$Stub$Proxy: android.media.IAudioService sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.media.IAudioService$Stub r0;

        r0 := @this: android.media.IAudioService$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.media.IAudioService$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.media.IAudioService$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.media.IAudioService$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.media.IAudioService$Stub r0;
        android.media.IAudioFocusDispatcher r1, $r100;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139, i140, i141, i142, i143, i144, i145, i146, i147, i148, i149, i150, i151, i152, i153, i154, i155, i156, i157, i158, i159;
        android.os.Parcelable$Creator $r2, $r5, $r11, $r13, $r15, $r35, $r37, $r39, $r43, $r45, $r55, $r61, $r65, $r74, $r82, $r96, $r105, $r113, $r115, $r117, $r120, $r126, $r133, $r135;
        java.lang.Object $r3, $r6, $r12, $r14, $r16, $r36, $r38, $r40, $r44, $r46, $r56, $r62, $r66, $r75, $r83, $r97, $r106, $r114, $r116, $r118, $r121, $r127, $r134, $r136;
        java.lang.String $r4, $r76, $r84, $r85, $r86, $r93, $r95, $r101, $r102, $r108, $r109, $r110, $r111, $r119, $r122, $r124, $r125, $r128, $r129, $r130, $r131, r158, r164, r168;
        android.os.IBinder $r7, $r9, $r17, $r19, $r23, $r25, $r29, $r31, $r33, $r41, $r47, $r49, $r51, $r53, $r57, $r59, $r63, $r67, $r69, $r71, $r72, $r77, $r78, $r80, $r87, $r89, $r90, $r91, $r92, $r94, $r98, $r99, $r103, $r107, $r123, $r132, r163, r167;
        android.media.IStrategyPreferredDeviceDispatcher $r8, $r10;
        android.media.audiopolicy.IAudioPolicyCallback $r18, $r20, $r24, $r26, $r34, $r42, $r58, $r60, $r64, $r68, $r70, $r104, r157;
        int[] $r21, $r27, $r112, r170;
        java.lang.String[] $r22, $r28;
        android.media.IAudioServerStateDispatcher $r30, $r32;
        android.media.IPlaybackConfigDispatcher $r48, $r50;
        android.media.IRecordingConfigDispatcher $r52, $r54;
        android.media.projection.IMediaProjection $r73;
        android.media.IVolumeController $r79, r159;
        android.media.IAudioRoutesObserver $r81;
        android.media.IRingtonePlayer $r88, r162;
        float $f0;
        boolean $z11, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51;
        android.os.Parcel r137, r138;
        android.media.AudioDeviceAttributes r139, r140, r143, r144;
        android.media.AudioAttributes r141, r150, r165, r166, r171, r172, r173, r174, r177;
        java.util.List r142, r151, r152, r169, r175;
        android.net.Uri r145;
        android.media.AudioFocusInfo r146, r149;
        android.bluetooth.BluetoothDevice r147, r148, r161;
        android.media.VolumePolicy r153;
        android.media.audiopolicy.AudioPolicyConfig r154, r155, r156;
        android.media.AudioRoutesInfo r160;
        android.view.KeyEvent r176;
        android.media.PlayerBase$PlayerIdCard r178;

        r0 := @this: android.media.IAudioService$Stub;

        i102 := @parameter0: int;

        r137 := @parameter1: android.os.Parcel;

        r138 := @parameter2: android.os.Parcel;

        i103 := @parameter3: int;

        if i102 == 1598968902 goto label197;

        z15 = 0;

        tableswitch(i102)
        {
            case 1: goto label194;
            case 2: goto label191;
            case 3: goto label190;
            case 4: goto label189;
            case 5: goto label188;
            case 6: goto label187;
            case 7: goto label186;
            case 8: goto label185;
            case 9: goto label184;
            case 10: goto label183;
            case 11: goto label179;
            case 12: goto label178;
            case 13: goto label176;
            case 14: goto label175;
            case 15: goto label173;
            case 16: goto label172;
            case 17: goto label171;
            case 18: goto label170;
            case 19: goto label169;
            case 20: goto label166;
            case 21: goto label163;
            case 22: goto label160;
            case 23: goto label157;
            case 24: goto label156;
            case 25: goto label155;
            case 26: goto label154;
            case 27: goto label153;
            case 28: goto label152;
            case 29: goto label150;
            case 30: goto label148;
            case 31: goto label147;
            case 32: goto label146;
            case 33: goto label145;
            case 34: goto label144;
            case 35: goto label143;
            case 36: goto label142;
            case 37: goto label141;
            case 38: goto label140;
            case 39: goto label139;
            case 40: goto label138;
            case 41: goto label137;
            case 42: goto label136;
            case 43: goto label135;
            case 44: goto label134;
            case 45: goto label133;
            case 46: goto label131;
            case 47: goto label129;
            case 48: goto label128;
            case 49: goto label126;
            case 50: goto label125;
            case 51: goto label123;
            case 52: goto label122;
            case 53: goto label119;
            case 54: goto label116;
            case 55: goto label115;
            case 56: goto label114;
            case 57: goto label113;
            case 58: goto label112;
            case 59: goto label111;
            case 60: goto label110;
            case 61: goto label109;
            case 62: goto label106;
            case 63: goto label105;
            case 64: goto label104;
            case 65: goto label101;
            case 66: goto label098;
            case 67: goto label097;
            case 68: goto label096;
            case 69: goto label094;
            case 70: goto label093;
            case 71: goto label092;
            case 72: goto label091;
            case 73: goto label089;
            case 74: goto label088;
            case 75: goto label077;
            case 76: goto label076;
            case 77: goto label075;
            case 78: goto label072;
            case 79: goto label069;
            case 80: goto label068;
            case 81: goto label065;
            case 82: goto label064;
            case 83: goto label063;
            case 84: goto label062;
            case 85: goto label061;
            case 86: goto label060;
            case 87: goto label059;
            case 88: goto label058;
            case 89: goto label057;
            case 90: goto label054;
            case 91: goto label051;
            case 92: goto label049;
            case 93: goto label045;
            case 94: goto label040;
            case 95: goto label037;
            case 96: goto label036;
            case 97: goto label035;
            case 98: goto label034;
            case 99: goto label033;
            case 100: goto label032;
            case 101: goto label031;
            case 102: goto label030;
            case 103: goto label027;
            case 104: goto label026;
            case 105: goto label023;
            case 106: goto label022;
            case 107: goto label019;
            case 108: goto label016;
            case 109: goto label015;
            case 110: goto label014;
            case 111: goto label013;
            case 112: goto label012;
            case 113: goto label010;
            case 114: goto label007;
            case 115: goto label004;
            case 116: goto label002;
            default: goto label001;
        };

     label001:
        $z11 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i102, r137, r138, i103);

        return $z11;

     label002:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i0 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label003;

        z15 = 1;

     label003:
        virtualinvoke r0.<android.media.IAudioService$Stub: void setMultiAudioFocusEnabled(boolean)>(z15);

        return 1;

     label004:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i1 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label005;

        $r2 = <android.media.AudioDeviceAttributes: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r139 = (android.media.AudioDeviceAttributes) $r3;

        goto label006;

     label005:
        r139 = null;

     label006:
        i104 = virtualinvoke r0.<android.media.IAudioService$Stub: int getDeviceVolumeBehavior(android.media.AudioDeviceAttributes)>(r139);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i104);

        return 1;

     label007:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i2 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label008;

        $r5 = <android.media.AudioDeviceAttributes: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r140 = (android.media.AudioDeviceAttributes) $r6;

        goto label009;

     label008:
        r140 = null;

     label009:
        $i3 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r4 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setDeviceVolumeBehavior(android.media.AudioDeviceAttributes,int,java.lang.String)>(r140, $i3, $r4);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label010:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z16 = 0;

        $i4 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label011;

        z16 = 1;

     label011:
        virtualinvoke r0.<android.media.IAudioService$Stub: void setRttEnabled(boolean)>(z16);

        return 1;

     label012:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r7 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r8 = staticinvoke <android.media.IStrategyPreferredDeviceDispatcher$Stub: android.media.IStrategyPreferredDeviceDispatcher asInterface(android.os.IBinder)>($r7);

        virtualinvoke r0.<android.media.IAudioService$Stub: void unregisterStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher)>($r8);

        return 1;

     label013:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r9 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r10 = staticinvoke <android.media.IStrategyPreferredDeviceDispatcher$Stub: android.media.IStrategyPreferredDeviceDispatcher asInterface(android.os.IBinder)>($r9);

        virtualinvoke r0.<android.media.IAudioService$Stub: void registerStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher)>($r10);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label014:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        i105 = virtualinvoke r0.<android.media.IAudioService$Stub: int getAllowedCapturePolicy()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i105);

        return 1;

     label015:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i5 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i106 = virtualinvoke r0.<android.media.IAudioService$Stub: int setAllowedCapturePolicy(int)>($i5);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i106);

        return 1;

     label016:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i6 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label017;

        $r11 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r141 = (android.media.AudioAttributes) $r12;

        goto label018;

     label017:
        r141 = null;

     label018:
        r142 = virtualinvoke r0.<android.media.IAudioService$Stub: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>(r141);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeTypedList(java.util.List)>(r142);

        return 1;

     label019:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i7 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        r143 = virtualinvoke r0.<android.media.IAudioService$Stub: android.media.AudioDeviceAttributes getPreferredDeviceForStrategy(int)>($i7);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        if r143 == null goto label020;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r143.<android.media.AudioDeviceAttributes: void writeToParcel(android.os.Parcel,int)>(r138, 1);

        goto label021;

     label020:
        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(0);

     label021:
        return 1;

     label022:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i8 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i107 = virtualinvoke r0.<android.media.IAudioService$Stub: int removePreferredDeviceForStrategy(int)>($i8);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i107);

        return 1;

     label023:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        i108 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i9 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i9 == 0 goto label024;

        $r13 = <android.media.AudioDeviceAttributes: android.os.Parcelable$Creator CREATOR>;

        $r14 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r144 = (android.media.AudioDeviceAttributes) $r14;

        goto label025;

     label024:
        r144 = null;

     label025:
        i109 = virtualinvoke r0.<android.media.IAudioService$Stub: int setPreferredDeviceForStrategy(int,android.media.AudioDeviceAttributes)>(i108, r144);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i109);

        return 1;

     label026:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z17 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isCallScreeningModeSupported()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i143 = (int) z17;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i143);

        return 1;

     label027:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i10 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i10 == 0 goto label028;

        $r15 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r16 = interfaceinvoke $r15.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r145 = (android.net.Uri) $r16;

        goto label029;

     label028:
        r145 = null;

     label029:
        z18 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean hasHapticChannels(android.net.Uri)>(r145);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i144 = (int) z18;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i144);

        return 1;

     label030:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r17 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r18 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r17);

        $i11 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i110 = virtualinvoke r0.<android.media.IAudioService$Stub: int removeUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int)>($r18, $i11);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i110);

        return 1;

     label031:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r19 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r20 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r19);

        $i12 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r21 = virtualinvoke r137.<android.os.Parcel: int[] createIntArray()>();

        $r22 = virtualinvoke r137.<android.os.Parcel: java.lang.String[] createStringArray()>();

        i111 = virtualinvoke r0.<android.media.IAudioService$Stub: int setUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int,int[],java.lang.String[])>($r20, $i12, $r21, $r22);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i111);

        return 1;

     label032:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r23 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r24 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r23);

        $i13 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i112 = virtualinvoke r0.<android.media.IAudioService$Stub: int removeUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int)>($r24, $i13);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i112);

        return 1;

     label033:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r25 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r26 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r25);

        $i14 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r27 = virtualinvoke r137.<android.os.Parcel: int[] createIntArray()>();

        $r28 = virtualinvoke r137.<android.os.Parcel: java.lang.String[] createStringArray()>();

        i113 = virtualinvoke r0.<android.media.IAudioService$Stub: int setUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int,int[],java.lang.String[])>($r26, $i14, $r27, $r28);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i113);

        return 1;

     label034:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z19 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isAudioServerRunning()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i145 = (int) z19;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i145);

        return 1;

     label035:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r29 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r30 = staticinvoke <android.media.IAudioServerStateDispatcher$Stub: android.media.IAudioServerStateDispatcher asInterface(android.os.IBinder)>($r29);

        virtualinvoke r0.<android.media.IAudioService$Stub: void unregisterAudioServerStateDispatcher(android.media.IAudioServerStateDispatcher)>($r30);

        return 1;

     label036:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r31 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r32 = staticinvoke <android.media.IAudioServerStateDispatcher$Stub: android.media.IAudioServerStateDispatcher asInterface(android.os.IBinder)>($r31);

        virtualinvoke r0.<android.media.IAudioService$Stub: void registerAudioServerStateDispatcher(android.media.IAudioServerStateDispatcher)>($r32);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label037:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i15 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i15 == 0 goto label038;

        $r35 = <android.media.AudioFocusInfo: android.os.Parcelable$Creator CREATOR>;

        $r36 = interfaceinvoke $r35.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r146 = (android.media.AudioFocusInfo) $r36;

        goto label039;

     label038:
        r146 = null;

     label039:
        $i16 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r33 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r34 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r33);

        virtualinvoke r0.<android.media.IAudioService$Stub: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>(r146, $i16, $r34);

        return 1;

     label040:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i17 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i17 == 0 goto label041;

        $r37 = <android.bluetooth.BluetoothDevice: android.os.Parcelable$Creator CREATOR>;

        $r38 = interfaceinvoke $r37.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r147 = (android.bluetooth.BluetoothDevice) $r38;

        goto label042;

     label041:
        r147 = null;

     label042:
        i114 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i115 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i18 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i18 == 0 goto label043;

        z20 = 1;

        goto label044;

     label043:
        z20 = 0;

     label044:
        $i19 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(android.bluetooth.BluetoothDevice,int,int,boolean,int)>(r147, i114, i115, z20, $i19);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label045:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i20 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i20 == 0 goto label046;

        $r39 = <android.bluetooth.BluetoothDevice: android.os.Parcelable$Creator CREATOR>;

        $r40 = interfaceinvoke $r39.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r148 = (android.bluetooth.BluetoothDevice) $r40;

        goto label047;

     label046:
        r148 = null;

     label047:
        i116 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        z21 = 0;

        $i21 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i21 == 0 goto label048;

        z21 = 1;

     label048:
        $i22 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setBluetoothHearingAidDeviceConnectionState(android.bluetooth.BluetoothDevice,int,boolean,int)>(r148, i116, z21, $i22);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label049:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        i117 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        z22 = 0;

        $i23 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i23 == 0 goto label050;

        z22 = 1;

     label050:
        virtualinvoke r0.<android.media.IAudioService$Stub: void playerHasOpPlayAudio(int,boolean)>(i117, z22);

        return 1;

     label051:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i24 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i24 == 0 goto label052;

        $r43 = <android.media.AudioFocusInfo: android.os.Parcelable$Creator CREATOR>;

        $r44 = interfaceinvoke $r43.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r149 = (android.media.AudioFocusInfo) $r44;

        goto label053;

     label052:
        r149 = null;

     label053:
        $i25 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r41 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r42 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r41);

        i118 = virtualinvoke r0.<android.media.IAudioService$Stub: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>(r149, $i25, $r42);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i118);

        return 1;

     label054:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        i119 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i26 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i26 == 0 goto label055;

        $r45 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r46 = interfaceinvoke $r45.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r150 = (android.media.AudioAttributes) $r46;

        goto label056;

     label055:
        r150 = null;

     label056:
        i120 = virtualinvoke r0.<android.media.IAudioService$Stub: int getFocusRampTimeMs(int,android.media.AudioAttributes)>(i119, r150);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i120);

        return 1;

     label057:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i27 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void disableRingtoneSync(int)>($i27);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label058:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        r151 = virtualinvoke r0.<android.media.IAudioService$Stub: java.util.List getActivePlaybackConfigurations()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeTypedList(java.util.List)>(r151);

        return 1;

     label059:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r47 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r48 = staticinvoke <android.media.IPlaybackConfigDispatcher$Stub: android.media.IPlaybackConfigDispatcher asInterface(android.os.IBinder)>($r47);

        virtualinvoke r0.<android.media.IAudioService$Stub: void unregisterPlaybackCallback(android.media.IPlaybackConfigDispatcher)>($r48);

        return 1;

     label060:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r49 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r50 = staticinvoke <android.media.IPlaybackConfigDispatcher$Stub: android.media.IPlaybackConfigDispatcher asInterface(android.os.IBinder)>($r49);

        virtualinvoke r0.<android.media.IAudioService$Stub: void registerPlaybackCallback(android.media.IPlaybackConfigDispatcher)>($r50);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label061:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        r152 = virtualinvoke r0.<android.media.IAudioService$Stub: java.util.List getActiveRecordingConfigurations()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeTypedList(java.util.List)>(r152);

        return 1;

     label062:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r51 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r52 = staticinvoke <android.media.IRecordingConfigDispatcher$Stub: android.media.IRecordingConfigDispatcher asInterface(android.os.IBinder)>($r51);

        virtualinvoke r0.<android.media.IAudioService$Stub: void unregisterRecordingCallback(android.media.IRecordingConfigDispatcher)>($r52);

        return 1;

     label063:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r53 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r54 = staticinvoke <android.media.IRecordingConfigDispatcher$Stub: android.media.IRecordingConfigDispatcher asInterface(android.os.IBinder)>($r53);

        virtualinvoke r0.<android.media.IAudioService$Stub: void registerRecordingCallback(android.media.IRecordingConfigDispatcher)>($r54);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label064:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z23 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean hasRegisteredDynamicPolicy()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i146 = (int) z23;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i146);

        return 1;

     label065:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i28 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i28 == 0 goto label066;

        $r55 = <android.media.VolumePolicy: android.os.Parcelable$Creator CREATOR>;

        $r56 = interfaceinvoke $r55.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r153 = (android.media.VolumePolicy) $r56;

        goto label067;

     label066:
        r153 = null;

     label067:
        virtualinvoke r0.<android.media.IAudioService$Stub: void setVolumePolicy(android.media.VolumePolicy)>(r153);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label068:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i29 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r57 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r58 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r57);

        i121 = virtualinvoke r0.<android.media.IAudioService$Stub: int setFocusPropertiesForPolicy(int,android.media.audiopolicy.IAudioPolicyCallback)>($i29, $r58);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i121);

        return 1;

     label069:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i30 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i30 == 0 goto label070;

        $r61 = <android.media.audiopolicy.AudioPolicyConfig: android.os.Parcelable$Creator CREATOR>;

        $r62 = interfaceinvoke $r61.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r154 = (android.media.audiopolicy.AudioPolicyConfig) $r62;

        goto label071;

     label070:
        r154 = null;

     label071:
        $r59 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r60 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r59);

        i122 = virtualinvoke r0.<android.media.IAudioService$Stub: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>(r154, $r60);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i122);

        return 1;

     label072:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i31 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i31 == 0 goto label073;

        $r65 = <android.media.audiopolicy.AudioPolicyConfig: android.os.Parcelable$Creator CREATOR>;

        $r66 = interfaceinvoke $r65.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r155 = (android.media.audiopolicy.AudioPolicyConfig) $r66;

        goto label074;

     label073:
        r155 = null;

     label074:
        $r63 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r64 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r63);

        i123 = virtualinvoke r0.<android.media.IAudioService$Stub: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>(r155, $r64);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i123);

        return 1;

     label075:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r67 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r68 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r67);

        virtualinvoke r0.<android.media.IAudioService$Stub: void unregisterAudioPolicy(android.media.audiopolicy.IAudioPolicyCallback)>($r68);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label076:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r69 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r70 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r69);

        virtualinvoke r0.<android.media.IAudioService$Stub: void unregisterAudioPolicyAsync(android.media.audiopolicy.IAudioPolicyCallback)>($r70);

        return 1;

     label077:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i32 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i32 == 0 goto label078;

        $r74 = <android.media.audiopolicy.AudioPolicyConfig: android.os.Parcelable$Creator CREATOR>;

        $r75 = interfaceinvoke $r74.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r156 = (android.media.audiopolicy.AudioPolicyConfig) $r75;

        goto label079;

     label078:
        r156 = null;

     label079:
        $r71 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r157 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r71);

        $i33 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i33 == 0 goto label080;

        z24 = 1;

        goto label081;

     label080:
        z24 = 0;

     label081:
        $i34 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i34 == 0 goto label082;

        z25 = 1;

        goto label083;

     label082:
        z25 = 0;

     label083:
        $i35 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i35 == 0 goto label084;

        z26 = 1;

        goto label085;

     label084:
        z26 = 0;

     label085:
        $i36 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i36 == 0 goto label086;

        z27 = 1;

        goto label087;

     label086:
        z27 = 0;

     label087:
        $r72 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r73 = staticinvoke <android.media.projection.IMediaProjection$Stub: android.media.projection.IMediaProjection asInterface(android.os.IBinder)>($r72);

        r158 = virtualinvoke r0.<android.media.IAudioService$Stub: java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean,boolean,boolean,boolean,android.media.projection.IMediaProjection)>(r156, r157, z24, z25, z26, z27, $r73);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeString(java.lang.String)>(r158);

        return 1;

     label088:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z28 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isHdmiSystemAudioSupported()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i147 = (int) z28;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i147);

        return 1;

     label089:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z29 = 0;

        $i37 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i37 == 0 goto label090;

        z29 = 1;

     label090:
        i124 = virtualinvoke r0.<android.media.IAudioService$Stub: int setHdmiSystemAudioSupported(boolean)>(z29);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i124);

        return 1;

     label091:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r76 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void disableSafeMediaVolume(java.lang.String)>($r76);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label092:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i38 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        z30 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isStreamAffectedByMute(int)>($i38);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i148 = (int) z30;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i148);

        return 1;

     label093:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i39 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        z31 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isStreamAffectedByRingerMode(int)>($i39);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i149 = (int) z31;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i149);

        return 1;

     label094:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r77 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r159 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController asInterface(android.os.IBinder)>($r77);

        z32 = 0;

        $i40 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i40 == 0 goto label095;

        z32 = 1;

     label095:
        virtualinvoke r0.<android.media.IAudioService$Stub: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>(r159, z32);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label096:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r78 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r79 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController asInterface(android.os.IBinder)>($r78);

        virtualinvoke r0.<android.media.IAudioService$Stub: void setVolumeController(android.media.IVolumeController)>($r79);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label097:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z33 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isCameraSoundForced()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i150 = (int) z33;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i150);

        return 1;

     label098:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r80 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r81 = staticinvoke <android.media.IAudioRoutesObserver$Stub: android.media.IAudioRoutesObserver asInterface(android.os.IBinder)>($r80);

        r160 = virtualinvoke r0.<android.media.IAudioService$Stub: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>($r81);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        if r160 == null goto label099;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r160.<android.media.AudioRoutesInfo: void writeToParcel(android.os.Parcel,int)>(r138, 1);

        goto label100;

     label099:
        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(0);

     label100:
        return 1;

     label101:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i41 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i41 == 0 goto label102;

        $r82 = <android.bluetooth.BluetoothDevice: android.os.Parcelable$Creator CREATOR>;

        $r83 = interfaceinvoke $r82.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r161 = (android.bluetooth.BluetoothDevice) $r83;

        goto label103;

     label102:
        r161 = null;

     label103:
        virtualinvoke r0.<android.media.IAudioService$Stub: void handleBluetoothA2dpDeviceConfigChange(android.bluetooth.BluetoothDevice)>(r161);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label104:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i42 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i43 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r84 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        $r85 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        $r86 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)>($i42, $i43, $r84, $r85, $r86);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label105:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        i125 = virtualinvoke r0.<android.media.IAudioService$Stub: int getUiSoundsStreamType()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i125);

        return 1;

     label106:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        r162 = virtualinvoke r0.<android.media.IAudioService$Stub: android.media.IRingtonePlayer getRingtonePlayer()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        if r162 == null goto label107;

        r163 = interfaceinvoke r162.<android.media.IRingtonePlayer: android.os.IBinder asBinder()>();

        goto label108;

     label107:
        r163 = null;

     label108:
        virtualinvoke r138.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r163);

        return 1;

     label109:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r87 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r88 = staticinvoke <android.media.IRingtonePlayer$Stub: android.media.IRingtonePlayer asInterface(android.os.IBinder)>($r87);

        virtualinvoke r0.<android.media.IAudioService$Stub: void setRingtonePlayer(android.media.IRingtonePlayer)>($r88);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label110:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i44 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r89 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void forceVolumeControlStream(int,android.os.IBinder)>($i44, $r89);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label111:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r90 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void stopBluetoothSco(android.os.IBinder)>($r90);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label112:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r91 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void startBluetoothScoVirtualCall(android.os.IBinder)>($r91);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label113:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r92 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i45 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void startBluetoothSco(android.os.IBinder,int)>($r92, $i45);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label114:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        i126 = virtualinvoke r0.<android.media.IAudioService$Stub: int getCurrentAudioFocus()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i126);

        return 1;

     label115:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r93 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void unregisterAudioFocusClient(java.lang.String)>($r93);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label116:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r94 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r1 = staticinvoke <android.media.IAudioFocusDispatcher$Stub: android.media.IAudioFocusDispatcher asInterface(android.os.IBinder)>($r94);

        r164 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        $i46 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i46 == 0 goto label117;

        $r96 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r97 = interfaceinvoke $r96.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r165 = (android.media.AudioAttributes) $r97;

        goto label118;

     label117:
        r165 = null;

     label118:
        $r95 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        i127 = virtualinvoke r0.<android.media.IAudioService$Stub: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>(r1, r164, r165, $r95);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i127);

        return 1;

     label119:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i47 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i47 == 0 goto label120;

        $r105 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r106 = interfaceinvoke $r105.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r166 = (android.media.AudioAttributes) $r106;

        goto label121;

     label120:
        r166 = null;

     label121:
        $i48 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r98 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r99 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r100 = staticinvoke <android.media.IAudioFocusDispatcher$Stub: android.media.IAudioFocusDispatcher asInterface(android.os.IBinder)>($r99);

        $r101 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        $r102 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        $i49 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r103 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r104 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)>($r103);

        $i50 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i128 = virtualinvoke r0.<android.media.IAudioService$Stub: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>(r166, $i48, $r98, $r100, $r101, $r102, $i49, $r104, $i50);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i128);

        return 1;

     label122:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z34 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isBluetoothA2dpOn()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i151 = (int) z34;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i151);

        return 1;

     label123:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z35 = 0;

        $i51 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i51 == 0 goto label124;

        z35 = 1;

     label124:
        virtualinvoke r0.<android.media.IAudioService$Stub: void setBluetoothA2dpOn(boolean)>(z35);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label125:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z36 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isBluetoothScoOn()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i152 = (int) z36;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i152);

        return 1;

     label126:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z37 = 0;

        $i52 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i52 == 0 goto label127;

        z37 = 1;

     label127:
        virtualinvoke r0.<android.media.IAudioService$Stub: void setBluetoothScoOn(boolean)>(z37);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label128:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z38 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isSpeakerphoneOn()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i153 = (int) z38;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i153);

        return 1;

     label129:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        r167 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        z39 = 0;

        $i53 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i53 == 0 goto label130;

        z39 = 1;

     label130:
        virtualinvoke r0.<android.media.IAudioService$Stub: void setSpeakerphoneOn(android.os.IBinder,boolean)>(r167, z39);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label131:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        r168 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        z40 = 0;

        $i54 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i54 == 0 goto label132;

        z40 = 1;

     label132:
        virtualinvoke r0.<android.media.IAudioService$Stub: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>(r168, z40);

        return 1;

     label133:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r0.<android.media.IAudioService$Stub: void reloadAudioSettings()>();

        return 1;

     label134:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        virtualinvoke r0.<android.media.IAudioService$Stub: void unloadSoundEffects()>();

        return 1;

     label135:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z41 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean loadSoundEffects()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i154 = (int) z41;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i154);

        return 1;

     label136:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i55 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $f0 = virtualinvoke r137.<android.os.Parcel: float readFloat()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void playSoundEffectVolume(int,float)>($i55, $f0);

        return 1;

     label137:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i56 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void playSoundEffect(int)>($i56);

        return 1;

     label138:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        i129 = virtualinvoke r0.<android.media.IAudioService$Stub: int getMode()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i129);

        return 1;

     label139:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i57 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r107 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r108 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setMode(int,android.os.IBinder,java.lang.String)>($i57, $r107, $r108);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label140:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i58 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        z42 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean shouldVibrate(int)>($i58);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i155 = (int) z42;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i155);

        return 1;

     label141:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i59 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i130 = virtualinvoke r0.<android.media.IAudioService$Stub: int getVibrateSetting(int)>($i59);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i130);

        return 1;

     label142:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i60 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i61 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setVibrateSetting(int,int)>($i60, $i61);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label143:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i62 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        z43 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isValidRingerMode(int)>($i62);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i156 = (int) z43;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i156);

        return 1;

     label144:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        i131 = virtualinvoke r0.<android.media.IAudioService$Stub: int getRingerModeInternal()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i131);

        return 1;

     label145:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        i132 = virtualinvoke r0.<android.media.IAudioService$Stub: int getRingerModeExternal()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i132);

        return 1;

     label146:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i63 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r109 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setRingerModeInternal(int,java.lang.String)>($i63, $r109);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label147:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i64 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r110 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setRingerModeExternal(int,java.lang.String)>($i64, $r110);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label148:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z44 = 0;

        $i65 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i65 == 0 goto label149;

        z44 = 1;

     label149:
        virtualinvoke r0.<android.media.IAudioService$Stub: void setMicrophoneMuteFromSwitch(boolean)>(z44);

        return 1;

     label150:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z45 = 0;

        $i66 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i66 == 0 goto label151;

        z45 = 1;

     label151:
        $r111 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        $i67 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setMicrophoneMute(boolean,java.lang.String,int)>(z45, $r111, $i67);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label152:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z46 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isMicrophoneMuted()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i157 = (int) z46;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i157);

        return 1;

     label153:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        r169 = virtualinvoke r0.<android.media.IAudioService$Stub: java.util.List getAudioProductStrategies()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeTypedList(java.util.List)>(r169);

        return 1;

     label154:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        r170 = virtualinvoke r0.<android.media.IAudioService$Stub: int[] getSupportedSystemUsages()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeIntArray(int[])>(r170);

        return 1;

     label155:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r112 = virtualinvoke r137.<android.os.Parcel: int[] createIntArray()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setSupportedSystemUsages(int[])>($r112);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label156:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i68 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i133 = virtualinvoke r0.<android.media.IAudioService$Stub: int getLastAudibleStreamVolume(int)>($i68);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i133);

        return 1;

     label157:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i69 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i69 == 0 goto label158;

        $r113 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r114 = interfaceinvoke $r113.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r171 = (android.media.AudioAttributes) $r114;

        goto label159;

     label158:
        r171 = null;

     label159:
        i134 = virtualinvoke r0.<android.media.IAudioService$Stub: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>(r171);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i134);

        return 1;

     label160:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i70 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i70 == 0 goto label161;

        $r115 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r116 = interfaceinvoke $r115.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r172 = (android.media.AudioAttributes) $r116;

        goto label162;

     label161:
        r172 = null;

     label162:
        i135 = virtualinvoke r0.<android.media.IAudioService$Stub: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>(r172);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i135);

        return 1;

     label163:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i71 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i71 == 0 goto label164;

        $r117 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r118 = interfaceinvoke $r117.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r173 = (android.media.AudioAttributes) $r118;

        goto label165;

     label164:
        r173 = null;

     label165:
        i136 = virtualinvoke r0.<android.media.IAudioService$Stub: int getVolumeIndexForAttributes(android.media.AudioAttributes)>(r173);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i136);

        return 1;

     label166:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i72 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i72 == 0 goto label167;

        $r120 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r121 = interfaceinvoke $r120.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r174 = (android.media.AudioAttributes) $r121;

        goto label168;

     label167:
        r174 = null;

     label168:
        $i73 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i74 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r119 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setVolumeIndexForAttributes(android.media.AudioAttributes,int,int,java.lang.String)>(r174, $i73, $i74, $r119);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label169:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        r175 = virtualinvoke r0.<android.media.IAudioService$Stub: java.util.List getAudioVolumeGroups()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeTypedList(java.util.List)>(r175);

        return 1;

     label170:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i75 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i137 = virtualinvoke r0.<android.media.IAudioService$Stub: int getStreamMaxVolume(int)>($i75);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i137);

        return 1;

     label171:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i76 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i138 = virtualinvoke r0.<android.media.IAudioService$Stub: int getStreamMinVolume(int)>($i76);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i138);

        return 1;

     label172:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i77 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        i139 = virtualinvoke r0.<android.media.IAudioService$Stub: int getStreamVolume(int)>($i77);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i139);

        return 1;

     label173:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z47 = 0;

        $i78 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i78 == 0 goto label174;

        z47 = 1;

     label174:
        $i79 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r122 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        $i80 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setMasterMute(boolean,int,java.lang.String,int)>(z47, $i79, $r122, $i80);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label175:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z48 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isMasterMute()>();

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i158 = (int) z48;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i158);

        return 1;

     label176:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        z49 = 0;

        $i81 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i81 == 0 goto label177;

        z49 = 1;

     label177:
        $r123 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>(z49, $r123);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label178:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i82 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        z50 = virtualinvoke r0.<android.media.IAudioService$Stub: boolean isStreamMute(int)>($i82);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        i159 = (int) z50;

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i159);

        return 1;

     label179:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i83 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i83 == 0 goto label180;

        $r126 = <android.view.KeyEvent: android.os.Parcelable$Creator CREATOR>;

        $r127 = interfaceinvoke $r126.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r176 = (android.view.KeyEvent) $r127;

        goto label181;

     label180:
        r176 = null;

     label181:
        z51 = 0;

        $i84 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i84 == 0 goto label182;

        z51 = 1;

     label182:
        $r124 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        $r125 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void handleVolumeKey(android.view.KeyEvent,boolean,java.lang.String,java.lang.String)>(r176, z51, $r124, $r125);

        return 1;

     label183:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i85 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i86 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i87 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r128 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void setStreamVolume(int,int,int,java.lang.String)>($i85, $i86, $i87, $r128);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label184:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i88 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i89 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i90 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r129 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void adjustStreamVolume(int,int,int,java.lang.String)>($i88, $i89, $i90, $r129);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        return 1;

     label185:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i91 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i92 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i93 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $r130 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        $r131 = virtualinvoke r137.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void adjustSuggestedStreamVolume(int,int,int,java.lang.String,java.lang.String)>($i91, $i92, $i93, $r130, $r131);

        return 1;

     label186:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i94 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void releaseRecorder(int)>($i94);

        return 1;

     label187:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i95 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i96 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void recorderEvent(int,int)>($i95, $i96);

        return 1;

     label188:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $r132 = virtualinvoke r137.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        i140 = virtualinvoke r0.<android.media.IAudioService$Stub: int trackRecorder(android.os.IBinder)>($r132);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i140);

        return 1;

     label189:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i97 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void releasePlayer(int)>($i97);

        return 1;

     label190:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i98 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i99 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IAudioService$Stub: void playerEvent(int,int)>($i98, $i99);

        return 1;

     label191:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        i141 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        $i100 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i100 == 0 goto label192;

        $r133 = <android.media.AudioAttributes: android.os.Parcelable$Creator CREATOR>;

        $r134 = interfaceinvoke $r133.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r177 = (android.media.AudioAttributes) $r134;

        goto label193;

     label192:
        r177 = null;

     label193:
        virtualinvoke r0.<android.media.IAudioService$Stub: void playerAttributes(int,android.media.AudioAttributes)>(i141, r177);

        return 1;

     label194:
        virtualinvoke r137.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IAudioService");

        $i101 = virtualinvoke r137.<android.os.Parcel: int readInt()>();

        if $i101 == 0 goto label195;

        $r135 = <android.media.PlayerBase$PlayerIdCard: android.os.Parcelable$Creator CREATOR>;

        $r136 = interfaceinvoke $r135.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r137);

        r178 = (android.media.PlayerBase$PlayerIdCard) $r136;

        goto label196;

     label195:
        r178 = null;

     label196:
        i142 = virtualinvoke r0.<android.media.IAudioService$Stub: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>(r178);

        virtualinvoke r138.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r138.<android.os.Parcel: void writeInt(int)>(i142);

        return 1;

     label197:
        virtualinvoke r138.<android.os.Parcel: void writeString(java.lang.String)>("android.media.IAudioService");

        return 1;
    }

    public static void <clinit>()
    {
        <android.media.IAudioService$Stub: int TRANSACTION_unregisterStrategyPreferredDeviceDispatcher> = 112;

        <android.media.IAudioService$Stub: int TRANSACTION_unregisterRecordingCallback> = 84;

        <android.media.IAudioService$Stub: int TRANSACTION_unregisterPlaybackCallback> = 87;

        <android.media.IAudioService$Stub: int TRANSACTION_unregisterAudioServerStateDispatcher> = 97;

        <android.media.IAudioService$Stub: int TRANSACTION_unregisterAudioPolicyAsync> = 76;

        <android.media.IAudioService$Stub: int TRANSACTION_unregisterAudioPolicy> = 77;

        <android.media.IAudioService$Stub: int TRANSACTION_unregisterAudioFocusClient> = 55;

        <android.media.IAudioService$Stub: int TRANSACTION_unloadSoundEffects> = 44;

        <android.media.IAudioService$Stub: int TRANSACTION_trackRecorder> = 5;

        <android.media.IAudioService$Stub: int TRANSACTION_trackPlayer> = 1;

        <android.media.IAudioService$Stub: int TRANSACTION_stopBluetoothSco> = 59;

        <android.media.IAudioService$Stub: int TRANSACTION_startWatchingRoutes> = 66;

        <android.media.IAudioService$Stub: int TRANSACTION_startBluetoothScoVirtualCall> = 58;

        <android.media.IAudioService$Stub: int TRANSACTION_startBluetoothSco> = 57;

        <android.media.IAudioService$Stub: int TRANSACTION_shouldVibrate> = 38;

        <android.media.IAudioService$Stub: int TRANSACTION_setWiredDeviceConnectionState> = 64;

        <android.media.IAudioService$Stub: int TRANSACTION_setVolumePolicy> = 81;

        <android.media.IAudioService$Stub: int TRANSACTION_setVolumeIndexForAttributes> = 20;

        <android.media.IAudioService$Stub: int TRANSACTION_setVolumeController> = 68;

        <android.media.IAudioService$Stub: int TRANSACTION_setVibrateSetting> = 36;

        <android.media.IAudioService$Stub: int TRANSACTION_setUserIdDeviceAffinity> = 101;

        <android.media.IAudioService$Stub: int TRANSACTION_setUidDeviceAffinity> = 99;

        <android.media.IAudioService$Stub: int TRANSACTION_setSupportedSystemUsages> = 25;

        <android.media.IAudioService$Stub: int TRANSACTION_setStreamVolume> = 10;

        <android.media.IAudioService$Stub: int TRANSACTION_setSpeakerphoneOn> = 47;

        <android.media.IAudioService$Stub: int TRANSACTION_setRttEnabled> = 113;

        <android.media.IAudioService$Stub: int TRANSACTION_setRingtonePlayer> = 61;

        <android.media.IAudioService$Stub: int TRANSACTION_setRingerModeInternal> = 32;

        <android.media.IAudioService$Stub: int TRANSACTION_setRingerModeExternal> = 31;

        <android.media.IAudioService$Stub: int TRANSACTION_setPreferredDeviceForStrategy> = 105;

        <android.media.IAudioService$Stub: int TRANSACTION_setMultiAudioFocusEnabled> = 116;

        <android.media.IAudioService$Stub: int TRANSACTION_setMode> = 39;

        <android.media.IAudioService$Stub: int TRANSACTION_setMicrophoneMuteFromSwitch> = 30;

        <android.media.IAudioService$Stub: int TRANSACTION_setMicrophoneMute> = 29;

        <android.media.IAudioService$Stub: int TRANSACTION_setMasterMute> = 15;

        <android.media.IAudioService$Stub: int TRANSACTION_setHdmiSystemAudioSupported> = 73;

        <android.media.IAudioService$Stub: int TRANSACTION_setFocusRequestResultFromExtPolicy> = 95;

        <android.media.IAudioService$Stub: int TRANSACTION_setFocusPropertiesForPolicy> = 80;

        <android.media.IAudioService$Stub: int TRANSACTION_setDeviceVolumeBehavior> = 114;

        <android.media.IAudioService$Stub: int TRANSACTION_setBluetoothScoOn> = 49;

        <android.media.IAudioService$Stub: int TRANSACTION_setBluetoothHearingAidDeviceConnectionState> = 93;

        <android.media.IAudioService$Stub: int TRANSACTION_setBluetoothA2dpOn> = 51;

        <android.media.IAudioService$Stub: int TRANSACTION_setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent> = 94;

        <android.media.IAudioService$Stub: int TRANSACTION_setAllowedCapturePolicy> = 109;

        <android.media.IAudioService$Stub: int TRANSACTION_requestAudioFocus> = 53;

        <android.media.IAudioService$Stub: int TRANSACTION_removeUserIdDeviceAffinity> = 102;

        <android.media.IAudioService$Stub: int TRANSACTION_removeUidDeviceAffinity> = 100;

        <android.media.IAudioService$Stub: int TRANSACTION_removePreferredDeviceForStrategy> = 106;

        <android.media.IAudioService$Stub: int TRANSACTION_removeMixForPolicy> = 79;

        <android.media.IAudioService$Stub: int TRANSACTION_reloadAudioSettings> = 45;

        <android.media.IAudioService$Stub: int TRANSACTION_releaseRecorder> = 7;

        <android.media.IAudioService$Stub: int TRANSACTION_releasePlayer> = 4;

        <android.media.IAudioService$Stub: int TRANSACTION_registerStrategyPreferredDeviceDispatcher> = 111;

        <android.media.IAudioService$Stub: int TRANSACTION_registerRecordingCallback> = 83;

        <android.media.IAudioService$Stub: int TRANSACTION_registerPlaybackCallback> = 86;

        <android.media.IAudioService$Stub: int TRANSACTION_registerAudioServerStateDispatcher> = 96;

        <android.media.IAudioService$Stub: int TRANSACTION_registerAudioPolicy> = 75;

        <android.media.IAudioService$Stub: int TRANSACTION_recorderEvent> = 6;

        <android.media.IAudioService$Stub: int TRANSACTION_playerHasOpPlayAudio> = 92;

        <android.media.IAudioService$Stub: int TRANSACTION_playerEvent> = 3;

        <android.media.IAudioService$Stub: int TRANSACTION_playerAttributes> = 2;

        <android.media.IAudioService$Stub: int TRANSACTION_playSoundEffectVolume> = 42;

        <android.media.IAudioService$Stub: int TRANSACTION_playSoundEffect> = 41;

        <android.media.IAudioService$Stub: int TRANSACTION_notifyVolumeControllerVisible> = 69;

        <android.media.IAudioService$Stub: int TRANSACTION_loadSoundEffects> = 43;

        <android.media.IAudioService$Stub: int TRANSACTION_isValidRingerMode> = 35;

        <android.media.IAudioService$Stub: int TRANSACTION_isStreamMute> = 12;

        <android.media.IAudioService$Stub: int TRANSACTION_isStreamAffectedByRingerMode> = 70;

        <android.media.IAudioService$Stub: int TRANSACTION_isStreamAffectedByMute> = 71;

        <android.media.IAudioService$Stub: int TRANSACTION_isSpeakerphoneOn> = 48;

        <android.media.IAudioService$Stub: int TRANSACTION_isMicrophoneMuted> = 28;

        <android.media.IAudioService$Stub: int TRANSACTION_isMasterMute> = 14;

        <android.media.IAudioService$Stub: int TRANSACTION_isHdmiSystemAudioSupported> = 74;

        <android.media.IAudioService$Stub: int TRANSACTION_isCameraSoundForced> = 67;

        <android.media.IAudioService$Stub: int TRANSACTION_isCallScreeningModeSupported> = 104;

        <android.media.IAudioService$Stub: int TRANSACTION_isBluetoothScoOn> = 50;

        <android.media.IAudioService$Stub: int TRANSACTION_isBluetoothA2dpOn> = 52;

        <android.media.IAudioService$Stub: int TRANSACTION_isAudioServerRunning> = 98;

        <android.media.IAudioService$Stub: int TRANSACTION_hasRegisteredDynamicPolicy> = 82;

        <android.media.IAudioService$Stub: int TRANSACTION_hasHapticChannels> = 103;

        <android.media.IAudioService$Stub: int TRANSACTION_handleVolumeKey> = 11;

        <android.media.IAudioService$Stub: int TRANSACTION_handleBluetoothA2dpDeviceConfigChange> = 65;

        <android.media.IAudioService$Stub: int TRANSACTION_getVolumeIndexForAttributes> = 21;

        <android.media.IAudioService$Stub: int TRANSACTION_getVibrateSetting> = 37;

        <android.media.IAudioService$Stub: int TRANSACTION_getUiSoundsStreamType> = 63;

        <android.media.IAudioService$Stub: int TRANSACTION_getSupportedSystemUsages> = 26;

        <android.media.IAudioService$Stub: int TRANSACTION_getStreamVolume> = 16;

        <android.media.IAudioService$Stub: int TRANSACTION_getStreamMinVolume> = 17;

        <android.media.IAudioService$Stub: int TRANSACTION_getStreamMaxVolume> = 18;

        <android.media.IAudioService$Stub: int TRANSACTION_getRingtonePlayer> = 62;

        <android.media.IAudioService$Stub: int TRANSACTION_getRingerModeInternal> = 34;

        <android.media.IAudioService$Stub: int TRANSACTION_getRingerModeExternal> = 33;

        <android.media.IAudioService$Stub: int TRANSACTION_getPreferredDeviceForStrategy> = 107;

        <android.media.IAudioService$Stub: int TRANSACTION_getMode> = 40;

        <android.media.IAudioService$Stub: int TRANSACTION_getMinVolumeIndexForAttributes> = 23;

        <android.media.IAudioService$Stub: int TRANSACTION_getMaxVolumeIndexForAttributes> = 22;

        <android.media.IAudioService$Stub: int TRANSACTION_getLastAudibleStreamVolume> = 24;

        <android.media.IAudioService$Stub: int TRANSACTION_getFocusRampTimeMs> = 90;

        <android.media.IAudioService$Stub: int TRANSACTION_getDevicesForAttributes> = 108;

        <android.media.IAudioService$Stub: int TRANSACTION_getDeviceVolumeBehavior> = 115;

        <android.media.IAudioService$Stub: int TRANSACTION_getCurrentAudioFocus> = 56;

        <android.media.IAudioService$Stub: int TRANSACTION_getAudioVolumeGroups> = 19;

        <android.media.IAudioService$Stub: int TRANSACTION_getAudioProductStrategies> = 27;

        <android.media.IAudioService$Stub: int TRANSACTION_getAllowedCapturePolicy> = 110;

        <android.media.IAudioService$Stub: int TRANSACTION_getActiveRecordingConfigurations> = 85;

        <android.media.IAudioService$Stub: int TRANSACTION_getActivePlaybackConfigurations> = 88;

        <android.media.IAudioService$Stub: int TRANSACTION_forceVolumeControlStream> = 60;

        <android.media.IAudioService$Stub: int TRANSACTION_forceRemoteSubmixFullVolume> = 13;

        <android.media.IAudioService$Stub: int TRANSACTION_dispatchFocusChange> = 91;

        <android.media.IAudioService$Stub: int TRANSACTION_disableSafeMediaVolume> = 72;

        <android.media.IAudioService$Stub: int TRANSACTION_disableRingtoneSync> = 89;

        <android.media.IAudioService$Stub: int TRANSACTION_avrcpSupportsAbsoluteVolume> = 46;

        <android.media.IAudioService$Stub: int TRANSACTION_adjustSuggestedStreamVolume> = 8;

        <android.media.IAudioService$Stub: int TRANSACTION_adjustStreamVolume> = 9;

        <android.media.IAudioService$Stub: int TRANSACTION_addMixForPolicy> = 78;

        <android.media.IAudioService$Stub: int TRANSACTION_abandonAudioFocus> = 54;

        <android.media.IAudioService$Stub: java.lang.String DESCRIPTOR> = "android.media.IAudioService";

        return;
    }
}
