public interface  android.media.IAudioService extends java.lang.Object implements android.os.IInterface
{

    public abstract int abandonAudioFocus(android.media.IAudioFocusDispatcher, java.lang.String, android.media.AudioAttributes, java.lang.String) throws android.os.RemoteException;

    public abstract int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig, android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException;

    public abstract void adjustStreamVolume(int, int, int, java.lang.String) throws android.os.RemoteException;

    public abstract void adjustSuggestedStreamVolume(int, int, int, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void avrcpSupportsAbsoluteVolume(java.lang.String, boolean) throws android.os.RemoteException;

    public abstract void disableRingtoneSync(int) throws android.os.RemoteException;

    public abstract void disableSafeMediaVolume(java.lang.String) throws android.os.RemoteException;

    public abstract int dispatchFocusChange(android.media.AudioFocusInfo, int, android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException;

    public abstract void forceRemoteSubmixFullVolume(boolean, android.os.IBinder) throws android.os.RemoteException;

    public abstract void forceVolumeControlStream(int, android.os.IBinder) throws android.os.RemoteException;

    public abstract java.util.List getActivePlaybackConfigurations() throws android.os.RemoteException;

    public abstract java.util.List getActiveRecordingConfigurations() throws android.os.RemoteException;

    public abstract int getAllowedCapturePolicy() throws android.os.RemoteException;

    public abstract java.util.List getAudioProductStrategies() throws android.os.RemoteException;

    public abstract java.util.List getAudioVolumeGroups() throws android.os.RemoteException;

    public abstract int getCurrentAudioFocus() throws android.os.RemoteException;

    public abstract int getDeviceVolumeBehavior(android.media.AudioDeviceAttributes) throws android.os.RemoteException;

    public abstract java.util.List getDevicesForAttributes(android.media.AudioAttributes) throws android.os.RemoteException;

    public abstract int getFocusRampTimeMs(int, android.media.AudioAttributes) throws android.os.RemoteException;

    public abstract int getLastAudibleStreamVolume(int) throws android.os.RemoteException;

    public abstract int getMaxVolumeIndexForAttributes(android.media.AudioAttributes) throws android.os.RemoteException;

    public abstract int getMinVolumeIndexForAttributes(android.media.AudioAttributes) throws android.os.RemoteException;

    public abstract int getMode() throws android.os.RemoteException;

    public abstract android.media.AudioDeviceAttributes getPreferredDeviceForStrategy(int) throws android.os.RemoteException;

    public abstract int getRingerModeExternal() throws android.os.RemoteException;

    public abstract int getRingerModeInternal() throws android.os.RemoteException;

    public abstract android.media.IRingtonePlayer getRingtonePlayer() throws android.os.RemoteException;

    public abstract int getStreamMaxVolume(int) throws android.os.RemoteException;

    public abstract int getStreamMinVolume(int) throws android.os.RemoteException;

    public abstract int getStreamVolume(int) throws android.os.RemoteException;

    public abstract int[] getSupportedSystemUsages() throws android.os.RemoteException;

    public abstract int getUiSoundsStreamType() throws android.os.RemoteException;

    public abstract int getVibrateSetting(int) throws android.os.RemoteException;

    public abstract int getVolumeIndexForAttributes(android.media.AudioAttributes) throws android.os.RemoteException;

    public abstract void handleBluetoothA2dpDeviceConfigChange(android.bluetooth.BluetoothDevice) throws android.os.RemoteException;

    public abstract void handleVolumeKey(android.view.KeyEvent, boolean, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract boolean hasHapticChannels(android.net.Uri) throws android.os.RemoteException;

    public abstract boolean hasRegisteredDynamicPolicy() throws android.os.RemoteException;

    public abstract boolean isAudioServerRunning() throws android.os.RemoteException;

    public abstract boolean isBluetoothA2dpOn() throws android.os.RemoteException;

    public abstract boolean isBluetoothScoOn() throws android.os.RemoteException;

    public abstract boolean isCallScreeningModeSupported() throws android.os.RemoteException;

    public abstract boolean isCameraSoundForced() throws android.os.RemoteException;

    public abstract boolean isHdmiSystemAudioSupported() throws android.os.RemoteException;

    public abstract boolean isMasterMute() throws android.os.RemoteException;

    public abstract boolean isMicrophoneMuted() throws android.os.RemoteException;

    public abstract boolean isSpeakerphoneOn() throws android.os.RemoteException;

    public abstract boolean isStreamAffectedByMute(int) throws android.os.RemoteException;

    public abstract boolean isStreamAffectedByRingerMode(int) throws android.os.RemoteException;

    public abstract boolean isStreamMute(int) throws android.os.RemoteException;

    public abstract boolean isValidRingerMode(int) throws android.os.RemoteException;

    public abstract boolean loadSoundEffects() throws android.os.RemoteException;

    public abstract void notifyVolumeControllerVisible(android.media.IVolumeController, boolean) throws android.os.RemoteException;

    public abstract void playSoundEffect(int) throws android.os.RemoteException;

    public abstract void playSoundEffectVolume(int, float) throws android.os.RemoteException;

    public abstract void playerAttributes(int, android.media.AudioAttributes) throws android.os.RemoteException;

    public abstract void playerEvent(int, int) throws android.os.RemoteException;

    public abstract void playerHasOpPlayAudio(int, boolean) throws android.os.RemoteException;

    public abstract void recorderEvent(int, int) throws android.os.RemoteException;

    public abstract java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig, android.media.audiopolicy.IAudioPolicyCallback, boolean, boolean, boolean, boolean, android.media.projection.IMediaProjection) throws android.os.RemoteException;

    public abstract void registerAudioServerStateDispatcher(android.media.IAudioServerStateDispatcher) throws android.os.RemoteException;

    public abstract void registerPlaybackCallback(android.media.IPlaybackConfigDispatcher) throws android.os.RemoteException;

    public abstract void registerRecordingCallback(android.media.IRecordingConfigDispatcher) throws android.os.RemoteException;

    public abstract void registerStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher) throws android.os.RemoteException;

    public abstract void releasePlayer(int) throws android.os.RemoteException;

    public abstract void releaseRecorder(int) throws android.os.RemoteException;

    public abstract void reloadAudioSettings() throws android.os.RemoteException;

    public abstract int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig, android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException;

    public abstract int removePreferredDeviceForStrategy(int) throws android.os.RemoteException;

    public abstract int removeUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback, int) throws android.os.RemoteException;

    public abstract int removeUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback, int) throws android.os.RemoteException;

    public abstract int requestAudioFocus(android.media.AudioAttributes, int, android.os.IBinder, android.media.IAudioFocusDispatcher, java.lang.String, java.lang.String, int, android.media.audiopolicy.IAudioPolicyCallback, int) throws android.os.RemoteException;

    public abstract int setAllowedCapturePolicy(int) throws android.os.RemoteException;

    public abstract void setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(android.bluetooth.BluetoothDevice, int, int, boolean, int) throws android.os.RemoteException;

    public abstract void setBluetoothA2dpOn(boolean) throws android.os.RemoteException;

    public abstract void setBluetoothHearingAidDeviceConnectionState(android.bluetooth.BluetoothDevice, int, boolean, int) throws android.os.RemoteException;

    public abstract void setBluetoothScoOn(boolean) throws android.os.RemoteException;

    public abstract void setDeviceVolumeBehavior(android.media.AudioDeviceAttributes, int, java.lang.String) throws android.os.RemoteException;

    public abstract int setFocusPropertiesForPolicy(int, android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException;

    public abstract void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo, int, android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException;

    public abstract int setHdmiSystemAudioSupported(boolean) throws android.os.RemoteException;

    public abstract void setMasterMute(boolean, int, java.lang.String, int) throws android.os.RemoteException;

    public abstract void setMicrophoneMute(boolean, java.lang.String, int) throws android.os.RemoteException;

    public abstract void setMicrophoneMuteFromSwitch(boolean) throws android.os.RemoteException;

    public abstract void setMode(int, android.os.IBinder, java.lang.String) throws android.os.RemoteException;

    public abstract void setMultiAudioFocusEnabled(boolean) throws android.os.RemoteException;

    public abstract int setPreferredDeviceForStrategy(int, android.media.AudioDeviceAttributes) throws android.os.RemoteException;

    public abstract void setRingerModeExternal(int, java.lang.String) throws android.os.RemoteException;

    public abstract void setRingerModeInternal(int, java.lang.String) throws android.os.RemoteException;

    public abstract void setRingtonePlayer(android.media.IRingtonePlayer) throws android.os.RemoteException;

    public abstract void setRttEnabled(boolean) throws android.os.RemoteException;

    public abstract void setSpeakerphoneOn(android.os.IBinder, boolean) throws android.os.RemoteException;

    public abstract void setStreamVolume(int, int, int, java.lang.String) throws android.os.RemoteException;

    public abstract void setSupportedSystemUsages(int[]) throws android.os.RemoteException;

    public abstract int setUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback, int, int[], java.lang.String[]) throws android.os.RemoteException;

    public abstract int setUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback, int, int[], java.lang.String[]) throws android.os.RemoteException;

    public abstract void setVibrateSetting(int, int) throws android.os.RemoteException;

    public abstract void setVolumeController(android.media.IVolumeController) throws android.os.RemoteException;

    public abstract void setVolumeIndexForAttributes(android.media.AudioAttributes, int, int, java.lang.String) throws android.os.RemoteException;

    public abstract void setVolumePolicy(android.media.VolumePolicy) throws android.os.RemoteException;

    public abstract void setWiredDeviceConnectionState(int, int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract boolean shouldVibrate(int) throws android.os.RemoteException;

    public abstract void startBluetoothSco(android.os.IBinder, int) throws android.os.RemoteException;

    public abstract void startBluetoothScoVirtualCall(android.os.IBinder) throws android.os.RemoteException;

    public abstract android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver) throws android.os.RemoteException;

    public abstract void stopBluetoothSco(android.os.IBinder) throws android.os.RemoteException;

    public abstract int trackPlayer(android.media.PlayerBase$PlayerIdCard) throws android.os.RemoteException;

    public abstract int trackRecorder(android.os.IBinder) throws android.os.RemoteException;

    public abstract void unloadSoundEffects() throws android.os.RemoteException;

    public abstract void unregisterAudioFocusClient(java.lang.String) throws android.os.RemoteException;

    public abstract void unregisterAudioPolicy(android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException;

    public abstract void unregisterAudioPolicyAsync(android.media.audiopolicy.IAudioPolicyCallback) throws android.os.RemoteException;

    public abstract void unregisterAudioServerStateDispatcher(android.media.IAudioServerStateDispatcher) throws android.os.RemoteException;

    public abstract void unregisterPlaybackCallback(android.media.IPlaybackConfigDispatcher) throws android.os.RemoteException;

    public abstract void unregisterRecordingCallback(android.media.IRecordingConfigDispatcher) throws android.os.RemoteException;

    public abstract void unregisterStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher) throws android.os.RemoteException;
}
