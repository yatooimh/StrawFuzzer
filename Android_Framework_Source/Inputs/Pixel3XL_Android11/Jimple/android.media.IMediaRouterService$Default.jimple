public class android.media.IMediaRouterService$Default extends java.lang.Object implements android.media.IMediaRouterService
{

    public void <init>()
    {
        android.media.IMediaRouterService$Default r0;

        r0 := @this: android.media.IMediaRouterService$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.IMediaRouterService$Default r0;

        r0 := @this: android.media.IMediaRouterService$Default;

        return null;
    }

    public void deselectRouteWithManager(android.media.IMediaRouter2Manager, int, java.lang.String, android.media.MediaRoute2Info) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2Manager r1;
        int i0;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.media.MediaRoute2Info;

        return;
    }

    public void deselectRouteWithRouter2(android.media.IMediaRouter2, java.lang.String, android.media.MediaRoute2Info) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.media.MediaRoute2Info;

        return;
    }

    public java.util.List getActiveSessions(android.media.IMediaRouter2Manager) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2Manager r1;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        return null;
    }

    public android.media.MediaRouterClientState getState(android.media.IMediaRouterClient) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouterClient r1;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouterClient;

        return null;
    }

    public java.util.List getSystemRoutes() throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;

        r0 := @this: android.media.IMediaRouterService$Default;

        return null;
    }

    public android.media.RoutingSessionInfo getSystemSessionInfo() throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;

        r0 := @this: android.media.IMediaRouterService$Default;

        return null;
    }

    public boolean isPlaybackActive(android.media.IMediaRouterClient) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouterClient r1;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouterClient;

        return 0;
    }

    public void registerClientAsUser(android.media.IMediaRouterClient, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return;
    }

    public void registerClientGroupId(android.media.IMediaRouterClient, java.lang.String) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void registerManager(android.media.IMediaRouter2Manager, java.lang.String) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2Manager r1;
        java.lang.String r2;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void registerRouter2(android.media.IMediaRouter2, java.lang.String) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void releaseSessionWithManager(android.media.IMediaRouter2Manager, int, java.lang.String) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2Manager r1;
        int i0;
        java.lang.String r2;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        return;
    }

    public void releaseSessionWithRouter2(android.media.IMediaRouter2, java.lang.String) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void requestCreateSessionWithManager(android.media.IMediaRouter2Manager, int, android.media.RoutingSessionInfo, android.media.MediaRoute2Info) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2Manager r1;
        int i0;
        android.media.RoutingSessionInfo r2;
        android.media.MediaRoute2Info r3;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: android.media.RoutingSessionInfo;

        r3 := @parameter3: android.media.MediaRoute2Info;

        return;
    }

    public void requestCreateSessionWithRouter2(android.media.IMediaRouter2, int, long, android.media.RoutingSessionInfo, android.media.MediaRoute2Info, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2 r1;
        int i0;
        long l1;
        android.media.RoutingSessionInfo r2;
        android.media.MediaRoute2Info r3;
        android.os.Bundle r4;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r2 := @parameter3: android.media.RoutingSessionInfo;

        r3 := @parameter4: android.media.MediaRoute2Info;

        r4 := @parameter5: android.os.Bundle;

        return;
    }

    public void requestSetVolume(android.media.IMediaRouterClient, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return;
    }

    public void requestUpdateVolume(android.media.IMediaRouterClient, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return;
    }

    public void selectRouteWithManager(android.media.IMediaRouter2Manager, int, java.lang.String, android.media.MediaRoute2Info) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2Manager r1;
        int i0;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.media.MediaRoute2Info;

        return;
    }

    public void selectRouteWithRouter2(android.media.IMediaRouter2, java.lang.String, android.media.MediaRoute2Info) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.media.MediaRoute2Info;

        return;
    }

    public void setDiscoveryRequest(android.media.IMediaRouterClient, int, boolean) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouterClient r1;
        int i0;
        boolean z0;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouterClient;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        return;
    }

    public void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2, android.media.RouteDiscoveryPreference) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2 r1;
        android.media.RouteDiscoveryPreference r2;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: android.media.RouteDiscoveryPreference;

        return;
    }

    public void setRouteVolumeWithManager(android.media.IMediaRouter2Manager, int, android.media.MediaRoute2Info, int) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2Manager r1;
        int i0, i1;
        android.media.MediaRoute2Info r2;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: android.media.MediaRoute2Info;

        i1 := @parameter3: int;

        return;
    }

    public void setRouteVolumeWithRouter2(android.media.IMediaRouter2, android.media.MediaRoute2Info, int) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2 r1;
        android.media.MediaRoute2Info r2;
        int i0;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: android.media.MediaRoute2Info;

        i0 := @parameter2: int;

        return;
    }

    public void setSelectedRoute(android.media.IMediaRouterClient, java.lang.String, boolean) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        boolean z0;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return;
    }

    public void setSessionVolumeWithManager(android.media.IMediaRouter2Manager, int, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2Manager r1;
        int i0, i1;
        java.lang.String r2;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        return;
    }

    public void setSessionVolumeWithRouter2(android.media.IMediaRouter2, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;
        int i0;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return;
    }

    public void transferToRouteWithManager(android.media.IMediaRouter2Manager, int, java.lang.String, android.media.MediaRoute2Info) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2Manager r1;
        int i0;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.media.MediaRoute2Info;

        return;
    }

    public void transferToRouteWithRouter2(android.media.IMediaRouter2, java.lang.String, android.media.MediaRoute2Info) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2 r1;
        java.lang.String r2;
        android.media.MediaRoute2Info r3;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.media.MediaRoute2Info;

        return;
    }

    public void unregisterClient(android.media.IMediaRouterClient) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouterClient r1;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouterClient;

        return;
    }

    public void unregisterManager(android.media.IMediaRouter2Manager) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2Manager r1;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2Manager;

        return;
    }

    public void unregisterRouter2(android.media.IMediaRouter2) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Default r0;
        android.media.IMediaRouter2 r1;

        r0 := @this: android.media.IMediaRouterService$Default;

        r1 := @parameter0: android.media.IMediaRouter2;

        return;
    }
}
