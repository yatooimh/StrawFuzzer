class android.media.IMediaScannerService$Stub$Proxy extends java.lang.Object implements android.media.IMediaScannerService
{
    public static android.media.IMediaScannerService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.IMediaScannerService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.IMediaScannerService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.IMediaScannerService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.IMediaScannerService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.IMediaScannerService$Stub$Proxy;

        $r1 = r0.<android.media.IMediaScannerService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.IMediaScannerService$Stub$Proxy r0;

        r0 := @this: android.media.IMediaScannerService$Stub$Proxy;

        return "android.media.IMediaScannerService";
    }

    public void requestScanFile(java.lang.String, java.lang.String, android.media.IMediaScannerListener) throws android.os.RemoteException
    {
        android.media.IMediaScannerService$Stub$Proxy r0;
        java.lang.String r1, r9;
        android.media.IMediaScannerListener r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10;
        boolean $z0;
        android.media.IMediaScannerService $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.media.IMediaScannerService$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.media.IMediaScannerListener;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IMediaScannerService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label02:
        if r2 == null goto label05;

     label03:
        r10 = interfaceinvoke r2.<android.media.IMediaScannerListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r5 = r0.<android.media.IMediaScannerService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, r4, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.media.IMediaScannerService$Stub: android.media.IMediaScannerService getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.media.IMediaScannerService$Stub: android.media.IMediaScannerService getDefaultImpl()>();

        interfaceinvoke $r7.<android.media.IMediaScannerService: void requestScanFile(java.lang.String,java.lang.String,android.media.IMediaScannerListener)>(r9, r1, r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void scanFile(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.media.IMediaScannerService$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IMediaScannerService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.IMediaScannerService$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IMediaScannerService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.media.IMediaScannerService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IMediaScannerService$Stub: android.media.IMediaScannerService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IMediaScannerService$Stub: android.media.IMediaScannerService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IMediaScannerService: void scanFile(java.lang.String,java.lang.String)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
