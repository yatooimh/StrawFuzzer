class android.media.IResourceManagerService$Stub$Proxy extends java.lang.Object implements android.media.IResourceManagerService
{
    public static android.media.IResourceManagerService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.IResourceManagerService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.IResourceManagerService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.IResourceManagerService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addResource(int, int, long, android.media.IResourceManagerClient, android.media.MediaResourceParcel[]) throws android.os.RemoteException
    {
        android.media.IResourceManagerService$Stub$Proxy r0;
        int i0, i1;
        long l2;
        android.media.MediaResourceParcel[] r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r14;
        boolean $z0;
        android.media.IResourceManagerService $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, $r12, r15;
        android.media.IResourceManagerClient r13;

        r0 := @this: android.media.IResourceManagerService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r13 := @parameter3: android.media.IResourceManagerClient;

        r1 := @parameter4: android.media.MediaResourceParcel[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IResourceManagerService");

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l2);

     label05:
        if r13 == null goto label08;

     label06:
        r14 = interfaceinvoke r13.<android.media.IResourceManagerClient: android.os.IBinder asBinder()>();

     label07:
        goto label09;

     label08:
        r14 = null;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r14);

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r1, 0);

     label11:
        $r4 = r0.<android.media.IResourceManagerService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IResourceManagerService: void addResource(int,int,long,android.media.IResourceManagerClient,android.media.MediaResourceParcel[])>(i0, i1, l2, r13, r1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label21;

     label16:
        $r7 := @caughtexception;

        r15 = $r7;

        goto label21;

     label17:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label21;

     label18:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label21;

     label19:
        $r10 := @caughtexception;

        r15 = $r10;

        goto label21;

     label20:
        $r12 := @caughtexception;

        r15 = $r12;

     label21:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public android.os.IBinder asBinder()
    {
        android.media.IResourceManagerService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.IResourceManagerService$Stub$Proxy;

        $r1 = r0.<android.media.IResourceManagerService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void config(android.media.MediaResourcePolicyParcel[]) throws android.os.RemoteException
    {
        android.media.IResourceManagerService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IResourceManagerService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.MediaResourcePolicyParcel[] r7;

        r0 := @this: android.media.IResourceManagerService$Stub$Proxy;

        r7 := @parameter0: android.media.MediaResourcePolicyParcel[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IResourceManagerService");

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r7, 0);

        $r3 = r0.<android.media.IResourceManagerService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IResourceManagerService: void config(android.media.MediaResourcePolicyParcel[])>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.IResourceManagerService$Stub$Proxy r0;

        r0 := @this: android.media.IResourceManagerService$Stub$Proxy;

        return "android.media.IResourceManagerService";
    }

    public void markClientForPendingRemoval(int, long) throws android.os.RemoteException
    {
        android.media.IResourceManagerService$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IResourceManagerService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.IResourceManagerService$Stub$Proxy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IResourceManagerService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r4 = r0.<android.media.IResourceManagerService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IResourceManagerService: void markClientForPendingRemoval(int,long)>(i0, l1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void overridePid(int, int) throws android.os.RemoteException
    {
        android.media.IResourceManagerService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IResourceManagerService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.IResourceManagerService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IResourceManagerService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.media.IResourceManagerService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IResourceManagerService: void overridePid(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean reclaimResource(int, android.media.MediaResourceParcel[]) throws android.os.RemoteException
    {
        android.media.IResourceManagerService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.media.IResourceManagerService $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        android.media.MediaResourceParcel[] r7;

        r0 := @this: android.media.IResourceManagerService$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.media.MediaResourceParcel[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IResourceManagerService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        z1 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r7, 0);

        $r3 = r0.<android.media.IResourceManagerService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.media.IResourceManagerService: boolean reclaimResource(int,android.media.MediaResourceParcel[])>(i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void removeClient(int, long) throws android.os.RemoteException
    {
        android.media.IResourceManagerService$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.IResourceManagerService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.IResourceManagerService$Stub$Proxy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IResourceManagerService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r4 = r0.<android.media.IResourceManagerService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.IResourceManagerService: void removeClient(int,long)>(i0, l1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void removeResource(int, long, android.media.MediaResourceParcel[]) throws android.os.RemoteException
    {
        android.media.IResourceManagerService$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IResourceManagerService $r4, $r5;
        java.lang.Throwable $r6;
        android.media.MediaResourceParcel[] r7;

        r0 := @this: android.media.IResourceManagerService$Stub$Proxy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r7 := @parameter2: android.media.MediaResourceParcel[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IResourceManagerService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r7, 0);

        $r3 = r0.<android.media.IResourceManagerService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IResourceManagerService$Stub: android.media.IResourceManagerService getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IResourceManagerService: void removeResource(int,long,android.media.MediaResourceParcel[])>(i0, l1, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
