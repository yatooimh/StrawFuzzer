public abstract class android.media.IResourceManagerService$Stub extends android.os.Binder implements android.media.IResourceManagerService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addResource;
    static final int TRANSACTION_config;
    static final int TRANSACTION_markClientForPendingRemoval;
    static final int TRANSACTION_overridePid;
    static final int TRANSACTION_reclaimResource;
    static final int TRANSACTION_removeClient;
    static final int TRANSACTION_removeResource;

    public void <init>()
    {
        android.media.IResourceManagerService$Stub r0;

        r0 := @this: android.media.IResourceManagerService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.media.IResourceManagerService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.media.IResourceManagerService");

        return;
    }

    public static android.media.IResourceManagerService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.media.IResourceManagerService$Stub$Proxy $r2;
        boolean $z0;
        android.media.IResourceManagerService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.media.IResourceManagerService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.media.IResourceManagerService;

        if $z0 == 0 goto label2;

        $r3 = (android.media.IResourceManagerService) r1;

        return $r3;

     label2:
        $r2 = new android.media.IResourceManagerService$Stub$Proxy;

        specialinvoke $r2.<android.media.IResourceManagerService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.media.IResourceManagerService getDefaultImpl()
    {
        android.media.IResourceManagerService $r0;

        $r0 = <android.media.IResourceManagerService$Stub$Proxy: android.media.IResourceManagerService sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "markClientForPendingRemoval";

     label3:
        return "overridePid";

     label4:
        return "reclaimResource";

     label5:
        return "removeClient";

     label6:
        return "removeResource";

     label7:
        return "addResource";

     label8:
        return "config";
    }

    public static boolean setDefaultImpl(android.media.IResourceManagerService)
    {
        android.media.IResourceManagerService r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.media.IResourceManagerService;

        $r1 = <android.media.IResourceManagerService$Stub$Proxy: android.media.IResourceManagerService sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.media.IResourceManagerService$Stub$Proxy: android.media.IResourceManagerService sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.media.IResourceManagerService$Stub r0;

        r0 := @this: android.media.IResourceManagerService$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.media.IResourceManagerService$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.media.IResourceManagerService$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.media.IResourceManagerService$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.media.IResourceManagerService$Stub r0;
        android.os.Parcel r1, r2;
        int i0, $i1, $i3, $i4, $i5, $i6, $i8, $i10, $i11, i13, i14;
        long $l2, $l7, $l9, $l12;
        android.os.Parcelable$Creator $r3, $r6, $r11, $r14;
        java.lang.Object[] $r4, $r7, $r12, $r15;
        android.media.MediaResourceParcel[] $r5, $r8, $r13;
        android.os.IBinder $r9;
        android.media.IResourceManagerClient $r10;
        android.media.MediaResourcePolicyParcel[] $r16;
        boolean $z0, z1;

        r0 := @this: android.media.IResourceManagerService$Stub;

        i13 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i13 == 1598968902 goto label9;

        tableswitch(i13)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i13, r1, r2, i0);

        return $z0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IResourceManagerService");

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $l2 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.media.IResourceManagerService$Stub: void markClientForPendingRemoval(int,long)>($i1, $l2);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label3:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IResourceManagerService");

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.IResourceManagerService$Stub: void overridePid(int,int)>($i3, $i4);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label4:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IResourceManagerService");

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = <android.media.MediaResourceParcel: android.os.Parcelable$Creator CREATOR>;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r3);

        $r5 = (android.media.MediaResourceParcel[]) $r4;

        z1 = virtualinvoke r0.<android.media.IResourceManagerService$Stub: boolean reclaimResource(int,android.media.MediaResourceParcel[])>($i5, $r5);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        i14 = (int) z1;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i14);

        return 1;

     label5:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IResourceManagerService");

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $l7 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.media.IResourceManagerService$Stub: void removeClient(int,long)>($i6, $l7);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label6:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IResourceManagerService");

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $l9 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        $r6 = <android.media.MediaResourceParcel: android.os.Parcelable$Creator CREATOR>;

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r6);

        $r8 = (android.media.MediaResourceParcel[]) $r7;

        virtualinvoke r0.<android.media.IResourceManagerService$Stub: void removeResource(int,long,android.media.MediaResourceParcel[])>($i8, $l9, $r8);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label7:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IResourceManagerService");

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $l12 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r10 = staticinvoke <android.media.IResourceManagerClient$Stub: android.media.IResourceManagerClient asInterface(android.os.IBinder)>($r9);

        $r11 = <android.media.MediaResourceParcel: android.os.Parcelable$Creator CREATOR>;

        $r12 = virtualinvoke r1.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r11);

        $r13 = (android.media.MediaResourceParcel[]) $r12;

        virtualinvoke r0.<android.media.IResourceManagerService$Stub: void addResource(int,int,long,android.media.IResourceManagerClient,android.media.MediaResourceParcel[])>($i10, $i11, $l12, $r10, $r13);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label8:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.IResourceManagerService");

        $r14 = <android.media.MediaResourcePolicyParcel: android.os.Parcelable$Creator CREATOR>;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r14);

        $r16 = (android.media.MediaResourcePolicyParcel[]) $r15;

        virtualinvoke r0.<android.media.IResourceManagerService$Stub: void config(android.media.MediaResourcePolicyParcel[])>($r16);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label9:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.media.IResourceManagerService");

        return 1;
    }

    public static void <clinit>()
    {
        <android.media.IResourceManagerService$Stub: int TRANSACTION_removeResource> = 3;

        <android.media.IResourceManagerService$Stub: int TRANSACTION_removeClient> = 4;

        <android.media.IResourceManagerService$Stub: int TRANSACTION_reclaimResource> = 5;

        <android.media.IResourceManagerService$Stub: int TRANSACTION_overridePid> = 6;

        <android.media.IResourceManagerService$Stub: int TRANSACTION_markClientForPendingRemoval> = 7;

        <android.media.IResourceManagerService$Stub: int TRANSACTION_config> = 1;

        <android.media.IResourceManagerService$Stub: int TRANSACTION_addResource> = 2;

        <android.media.IResourceManagerService$Stub: java.lang.String DESCRIPTOR> = "android.media.IResourceManagerService";

        return;
    }
}
