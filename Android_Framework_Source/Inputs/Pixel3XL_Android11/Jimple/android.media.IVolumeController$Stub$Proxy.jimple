class android.media.IVolumeController$Stub$Proxy extends java.lang.Object implements android.media.IVolumeController
{
    public static android.media.IVolumeController sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.IVolumeController$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.IVolumeController$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.IVolumeController$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.IVolumeController$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.IVolumeController$Stub$Proxy;

        $r1 = r0.<android.media.IVolumeController$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void dismiss() throws android.os.RemoteException
    {
        android.media.IVolumeController$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IVolumeController $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IVolumeController$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IVolumeController");

        $r3 = r0.<android.media.IVolumeController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IVolumeController: void dismiss()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void displaySafeVolumeWarning(int) throws android.os.RemoteException
    {
        android.media.IVolumeController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IVolumeController $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IVolumeController$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IVolumeController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IVolumeController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IVolumeController: void displaySafeVolumeWarning(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.IVolumeController$Stub$Proxy r0;

        r0 := @this: android.media.IVolumeController$Stub$Proxy;

        return "android.media.IVolumeController";
    }

    public void masterMuteChanged(int) throws android.os.RemoteException
    {
        android.media.IVolumeController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IVolumeController $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IVolumeController$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IVolumeController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IVolumeController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IVolumeController: void masterMuteChanged(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setA11yMode(int) throws android.os.RemoteException
    {
        android.media.IVolumeController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IVolumeController $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IVolumeController$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IVolumeController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IVolumeController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IVolumeController: void setA11yMode(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setLayoutDirection(int) throws android.os.RemoteException
    {
        android.media.IVolumeController$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IVolumeController $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IVolumeController$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IVolumeController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IVolumeController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IVolumeController: void setLayoutDirection(int)>(i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void volumeChanged(int, int) throws android.os.RemoteException
    {
        android.media.IVolumeController$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.IVolumeController $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.IVolumeController$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IVolumeController");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.media.IVolumeController$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.IVolumeController$Stub: android.media.IVolumeController getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.IVolumeController: void volumeChanged(int,int)>(i0, i1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
