public abstract class android.media.Image extends java.lang.Object implements java.lang.AutoCloseable
{
    private android.graphics.Rect mCropRect;
    protected boolean mIsImageValid;

    protected void <init>()
    {
        android.media.Image r0;

        r0 := @this: android.media.Image;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.Image: boolean mIsImageValid> = 0;

        return;
    }

    public abstract void close();

    public android.graphics.Rect getCropRect()
    {
        android.media.Image r0;
        android.graphics.Rect $r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.media.Image;

        virtualinvoke r0.<android.media.Image: void throwISEIfImageIsInvalid()>();

        $r1 = r0.<android.media.Image: android.graphics.Rect mCropRect>;

        if $r1 != null goto label1;

        $r4 = new android.graphics.Rect;

        $i0 = virtualinvoke r0.<android.media.Image: int getWidth()>();

        $i1 = virtualinvoke r0.<android.media.Image: int getHeight()>();

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        return $r4;

     label1:
        $r2 = new android.graphics.Rect;

        $r3 = r0.<android.media.Image: android.graphics.Rect mCropRect>;

        specialinvoke $r2.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r3);

        return $r2;
    }

    public abstract int getFormat();

    public android.hardware.HardwareBuffer getHardwareBuffer()
    {
        android.media.Image r0;

        r0 := @this: android.media.Image;

        virtualinvoke r0.<android.media.Image: void throwISEIfImageIsInvalid()>();

        return null;
    }

    public abstract int getHeight();

    long getNativeContext()
    {
        android.media.Image r0;

        r0 := @this: android.media.Image;

        virtualinvoke r0.<android.media.Image: void throwISEIfImageIsInvalid()>();

        return 0L;
    }

    java.lang.Object getOwner()
    {
        android.media.Image r0;

        r0 := @this: android.media.Image;

        virtualinvoke r0.<android.media.Image: void throwISEIfImageIsInvalid()>();

        return null;
    }

    public abstract android.media.Image$Plane[] getPlanes();

    public abstract int getScalingMode();

    public abstract long getTimestamp();

    public abstract int getTransform();

    public abstract int getWidth();

    boolean isAttachable()
    {
        android.media.Image r0;

        r0 := @this: android.media.Image;

        virtualinvoke r0.<android.media.Image: void throwISEIfImageIsInvalid()>();

        return 0;
    }

    public void setCropRect(android.graphics.Rect)
    {
        android.media.Image r0;
        android.graphics.Rect $r1, r2, r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.media.Image;

        r2 := @parameter0: android.graphics.Rect;

        virtualinvoke r0.<android.media.Image: void throwISEIfImageIsInvalid()>();

        r3 = r2;

        if r2 == null goto label1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r2);

        r3 = $r1;

        $i0 = virtualinvoke r0.<android.media.Image: int getWidth()>();

        $i1 = virtualinvoke r0.<android.media.Image: int getHeight()>();

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean intersect(int,int,int,int)>(0, 0, $i0, $i1);

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<android.graphics.Rect: void setEmpty()>();

        r3 = $r1;

     label1:
        r0.<android.media.Image: android.graphics.Rect mCropRect> = r3;

        return;
    }

    public void setTimestamp(long)
    {
        android.media.Image r0;
        long l0;

        r0 := @this: android.media.Image;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.media.Image: void throwISEIfImageIsInvalid()>();

        return;
    }

    protected void throwISEIfImageIsInvalid()
    {
        android.media.Image r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.Image;

        $z0 = r0.<android.media.Image: boolean mIsImageValid>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Image is already closed");

        throw $r1;
    }
}
