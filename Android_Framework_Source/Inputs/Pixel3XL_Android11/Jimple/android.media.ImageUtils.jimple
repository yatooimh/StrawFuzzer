class android.media.ImageUtils extends java.lang.Object
{

    void <init>()
    {
        android.media.ImageUtils r0;

        r0 := @this: android.media.ImageUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void directByteBufferCopy(java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, int)
    {
        java.nio.ByteBuffer r0, r1;
        int i0, i1, i2;
        long $l3;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        r1 := @parameter2: java.nio.ByteBuffer;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $l3 = (long) i2;

        staticinvoke <libcore.io.Memory: void memmove(java.lang.Object,int,java.lang.Object,int,long)>(r1, i1, r0, i0, $l3);

        return;
    }

    private static android.util.Size getEffectivePlaneSizeForImage(android.media.Image, int)
    {
        android.media.Image r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.util.Size $r1, $r2, $r3, $r4, $r5, $r10;
        java.lang.UnsupportedOperationException $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        java.lang.String $r9;

        r0 := @parameter0: android.media.Image;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<android.media.Image: int getFormat()>();

        if i1 == 1 goto label7;

        if i1 == 2 goto label7;

        if i1 == 3 goto label7;

        if i1 == 4 goto label7;

        if i1 == 16 goto label5;

        if i1 == 17 goto label3;

        if i1 == 34 goto label2;

        if i1 == 35 goto label3;

        if i1 == 37 goto label7;

        if i1 == 38 goto label7;

        lookupswitch(i1)
        {
            case 20: goto label7;
            case 32: goto label7;
            case 256: goto label7;
            case 4098: goto label7;
            case 538982489: goto label7;
            case 540422489: goto label7;
            case 842094169: goto label3;
            case 1212500294: goto label7;
            default: goto label1;
        };

     label1:
        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = newarray (java.lang.Object)[1];

        $i13 = virtualinvoke r0.<android.media.Image: int getFormat()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid image format %d", $r7);

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label2:
        $r5 = new android.util.Size;

        specialinvoke $r5.<android.util.Size: void <init>(int,int)>(0, 0);

        return $r5;

     label3:
        if i0 != 0 goto label4;

        $r4 = new android.util.Size;

        $i11 = virtualinvoke r0.<android.media.Image: int getWidth()>();

        $i12 = virtualinvoke r0.<android.media.Image: int getHeight()>();

        specialinvoke $r4.<android.util.Size: void <init>(int,int)>($i11, $i12);

        return $r4;

     label4:
        $r3 = new android.util.Size;

        $i7 = virtualinvoke r0.<android.media.Image: int getWidth()>();

        $i8 = $i7 / 2;

        $i9 = virtualinvoke r0.<android.media.Image: int getHeight()>();

        $i10 = $i9 / 2;

        specialinvoke $r3.<android.util.Size: void <init>(int,int)>($i8, $i10);

        return $r3;

     label5:
        if i0 != 0 goto label6;

        $r2 = new android.util.Size;

        $i5 = virtualinvoke r0.<android.media.Image: int getWidth()>();

        $i6 = virtualinvoke r0.<android.media.Image: int getHeight()>();

        specialinvoke $r2.<android.util.Size: void <init>(int,int)>($i5, $i6);

        return $r2;

     label6:
        $r1 = new android.util.Size;

        $i2 = virtualinvoke r0.<android.media.Image: int getWidth()>();

        $i3 = virtualinvoke r0.<android.media.Image: int getHeight()>();

        $i4 = $i3 / 2;

        specialinvoke $r1.<android.util.Size: void <init>(int,int)>($i2, $i4);

        return $r1;

     label7:
        $r10 = new android.util.Size;

        $i14 = virtualinvoke r0.<android.media.Image: int getWidth()>();

        $i15 = virtualinvoke r0.<android.media.Image: int getHeight()>();

        specialinvoke $r10.<android.util.Size: void <init>(int,int)>($i14, $i15);

        return $r10;
    }

    public static int getEstimatedNativeAllocBytes(int, int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;
        double d0, $d1, $d2, $d3, $d4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        if i2 == 1 goto label09;

        if i2 == 2 goto label09;

        if i2 == 3 goto label08;

        if i2 == 4 goto label07;

        if i2 == 16 goto label07;

        if i2 == 17 goto label06;

        if i2 == 256 goto label05;

        if i2 == 257 goto label05;

        lookupswitch(i2)
        {
            case 20: goto label07;
            case 32: goto label07;
            case 4098: goto label07;
            case 538982489: goto label04;
            case 540422489: goto label07;
            case 842094169: goto label06;
            case 1144402265: goto label07;
            case 1212500294: goto label05;
            case 1768253795: goto label05;
            default: goto label01;
        };

     label01:
        tableswitch(i2)
        {
            case 34: goto label06;
            case 35: goto label06;
            case 36: goto label07;
            case 37: goto label03;
            case 38: goto label06;
            default: goto label02;
        };

     label02:
        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid format specified %d", $r1);

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3);

        throw $r0;

     label03:
        d0 = 1.25;

        goto label10;

     label04:
        d0 = 1.0;

        goto label10;

     label05:
        d0 = 0.3;

        goto label10;

     label06:
        d0 = 1.5;

        goto label10;

     label07:
        d0 = 2.0;

        goto label10;

     label08:
        d0 = 3.0;

        goto label10;

     label09:
        d0 = 4.0;

     label10:
        $i4 = i0 * i1;

        $d1 = (double) $i4;

        $d2 = $d1 * d0;

        $d3 = (double) i3;

        $d4 = $d2 * $d3;

        $i5 = (int) $d4;

        return $i5;
    }

    public static int getNumPlanesForFormat(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        if i0 == 1 goto label6;

        if i0 == 2 goto label6;

        if i0 == 3 goto label6;

        if i0 == 4 goto label6;

        if i0 == 16 goto label5;

        if i0 == 17 goto label4;

        if i0 == 256 goto label6;

        if i0 == 257 goto label6;

        lookupswitch(i0)
        {
            case 20: goto label6;
            case 32: goto label6;
            case 4098: goto label6;
            case 538982489: goto label6;
            case 540422489: goto label6;
            case 842094169: goto label4;
            case 1144402265: goto label6;
            case 1212500294: goto label6;
            case 1768253795: goto label6;
            default: goto label1;
        };

     label1:
        tableswitch(i0)
        {
            case 34: goto label3;
            case 35: goto label4;
            case 36: goto label6;
            case 37: goto label6;
            case 38: goto label6;
            default: goto label2;
        };

     label2:
        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid format specified %d", $r1);

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3);

        throw $r0;

     label3:
        return 0;

     label4:
        return 3;

     label5:
        return 2;

     label6:
        return 1;
    }

    public static void imageCopy(android.media.Image, android.media.Image)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29, i30;
        java.nio.ByteBuffer r0, r46;
        android.util.Size r1, $r9, $r10;
        java.lang.IllegalArgumentException $r2, $r3, $r4, $r5, $r6, $r8, $r16, $r22, $r32;
        java.lang.Object $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r11, $r25;
        java.lang.String $r17, $r33;
        android.media.Image$Plane $r18, $r19, $r20, $r21, $r23, $r24, $r27, $r30, $r36;
        android.media.Image r40, r41;
        android.media.Image$Plane[] r44, r45;

        r40 := @parameter0: android.media.Image;

        r41 := @parameter1: android.media.Image;

        if r40 == null goto label15;

        if r41 == null goto label15;

        $i4 = virtualinvoke r40.<android.media.Image: int getFormat()>();

        $i5 = virtualinvoke r41.<android.media.Image: int getFormat()>();

        if $i4 != $i5 goto label14;

        $i6 = virtualinvoke r40.<android.media.Image: int getFormat()>();

        if $i6 == 34 goto label13;

        $i7 = virtualinvoke r41.<android.media.Image: int getFormat()>();

        if $i7 == 34 goto label13;

        $i8 = virtualinvoke r40.<android.media.Image: int getFormat()>();

        if $i8 == 36 goto label12;

        $i9 = virtualinvoke r40.<android.media.Image: int getFormat()>();

        if $i9 == 4098 goto label11;

        $r7 = virtualinvoke r41.<android.media.Image: java.lang.Object getOwner()>();

        $z0 = $r7 instanceof android.media.ImageWriter;

        if $z0 == 0 goto label10;

        $r9 = new android.util.Size;

        $i10 = virtualinvoke r40.<android.media.Image: int getWidth()>();

        $i11 = virtualinvoke r40.<android.media.Image: int getHeight()>();

        specialinvoke $r9.<android.util.Size: void <init>(int,int)>($i10, $i11);

        $r10 = new android.util.Size;

        $i12 = virtualinvoke r41.<android.media.Image: int getWidth()>();

        $i13 = virtualinvoke r41.<android.media.Image: int getHeight()>();

        specialinvoke $r10.<android.util.Size: void <init>(int,int)>($i12, $i13);

        $z1 = virtualinvoke $r9.<android.util.Size: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label09;

        r44 = virtualinvoke r40.<android.media.Image: android.media.Image$Plane[] getPlanes()>();

        r45 = virtualinvoke r41.<android.media.Image: android.media.Image$Plane[] getPlanes()>();

        i25 = 0;

     label01:
        $i14 = lengthof r44;

        if i25 >= $i14 goto label08;

        $r18 = r44[i25];

        i0 = virtualinvoke $r18.<android.media.Image$Plane: int getRowStride()>();

        $r19 = r45[i25];

        i1 = virtualinvoke $r19.<android.media.Image$Plane: int getRowStride()>();

        $r20 = r44[i25];

        r0 = virtualinvoke $r20.<android.media.Image$Plane: java.nio.ByteBuffer getBuffer()>();

        $r21 = r45[i25];

        r46 = virtualinvoke $r21.<android.media.Image$Plane: java.nio.ByteBuffer getBuffer()>();

        $z2 = virtualinvoke r0.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z2 == 0 goto label07;

        $z3 = virtualinvoke r46.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z3 == 0 goto label07;

        $r23 = r44[i25];

        $i15 = virtualinvoke $r23.<android.media.Image$Plane: int getPixelStride()>();

        $r24 = r45[i25];

        $i16 = virtualinvoke $r24.<android.media.Image$Plane: int getPixelStride()>();

        if $i15 != $i16 goto label06;

        i2 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke r46.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        if i0 != i1 goto label02;

        virtualinvoke r46.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(r0);

        goto label05;

     label02:
        i26 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        i27 = virtualinvoke r46.<java.nio.ByteBuffer: int position()>();

        r1 = staticinvoke <android.media.ImageUtils: android.util.Size getEffectivePlaneSizeForImage(android.media.Image,int)>(r40, i25);

        $i19 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $r36 = r44[i25];

        $i20 = virtualinvoke $r36.<android.media.Image$Plane: int getPixelStride()>();

        i28 = $i19 * $i20;

        i29 = 0;

     label03:
        $i21 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        if i29 >= $i21 goto label05;

        i30 = i28;

        $i22 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i23 = $i22 - 1;

        if i29 != $i23 goto label04;

        $i24 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        i3 = $i24 - i26;

        i30 = i28;

        if i28 <= i3 goto label04;

        i30 = i3;

     label04:
        staticinvoke <android.media.ImageUtils: void directByteBufferCopy(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int)>(r0, i26, r46, i27, i30);

        i26 = i26 + i0;

        i27 = i27 + i1;

        i29 = i29 + 1;

        i28 = i30;

        goto label03;

     label05:
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i2);

        virtualinvoke r46.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        i25 = i25 + 1;

        goto label01;

     label06:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Source plane image pixel stride ");

        $r27 = r44[i25];

        $i17 = virtualinvoke $r27.<android.media.Image$Plane: int getPixelStride()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be same as destination image pixel stride ");

        $r30 = r45[i25];

        $i18 = virtualinvoke $r30.<android.media.Image$Plane: int getPixelStride()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r32 = new java.lang.IllegalArgumentException;

        $r33 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33);

        throw $r32;

     label07:
        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Source and destination ByteBuffers must be direct byteBuffer!");

        throw $r22;

     label08:
        return;

     label09:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("source image size ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is different with destination image size ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label10:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Destination image is not from ImageWriter. Only the images from ImageWriter are writable");

        throw $r8;

     label11:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Copy of RAW_DEPTH format has not been implemented");

        throw $r6;

     label12:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Copy of RAW_OPAQUE format has not been implemented");

        throw $r5;

     label13:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PRIVATE format images are not copyable");

        throw $r4;

     label14:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Src and dst images should have the same format");

        throw $r3;

     label15:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Images should be non-null");

        throw $r2;
    }
}
