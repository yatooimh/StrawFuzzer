public class android.media.JetPlayer extends java.lang.Object
{
    private static final int JET_EVENT;
    private static final int JET_EVENT_CHAN_MASK;
    private static final int JET_EVENT_CHAN_SHIFT;
    private static final int JET_EVENT_CTRL_MASK;
    private static final int JET_EVENT_CTRL_SHIFT;
    private static final int JET_EVENT_SEG_MASK;
    private static final int JET_EVENT_SEG_SHIFT;
    private static final int JET_EVENT_TRACK_MASK;
    private static final int JET_EVENT_TRACK_SHIFT;
    private static final int JET_EVENT_VAL_MASK;
    private static final int JET_NUMQUEUEDSEGMENT_UPDATE;
    private static final int JET_OUTPUT_CHANNEL_CONFIG;
    private static final int JET_OUTPUT_RATE;
    private static final int JET_PAUSE_UPDATE;
    private static final int JET_USERID_UPDATE;
    private static int MAXTRACKS;
    private static final java.lang.String TAG;
    private static android.media.JetPlayer singletonRef;
    private android.media.JetPlayer$NativeEventHandler mEventHandler;
    private final java.lang.Object mEventListenerLock;
    private android.os.Looper mInitializationLooper;
    private android.media.JetPlayer$OnJetEventListener mJetEventListener;
    private long mNativePlayerInJavaObj;

    static void <clinit>()
    {
        <android.media.JetPlayer: java.lang.String TAG> = "JetPlayer-J";

        <android.media.JetPlayer: int JET_USERID_UPDATE> = 2;

        <android.media.JetPlayer: int JET_PAUSE_UPDATE> = 4;

        <android.media.JetPlayer: int JET_OUTPUT_RATE> = 22050;

        <android.media.JetPlayer: int JET_OUTPUT_CHANNEL_CONFIG> = 12;

        <android.media.JetPlayer: int JET_NUMQUEUEDSEGMENT_UPDATE> = 3;

        <android.media.JetPlayer: int JET_EVENT_VAL_MASK> = 127;

        <android.media.JetPlayer: int JET_EVENT_TRACK_SHIFT> = 18;

        <android.media.JetPlayer: int JET_EVENT_TRACK_MASK> = 16515072;

        <android.media.JetPlayer: int JET_EVENT_SEG_SHIFT> = 24;

        <android.media.JetPlayer: int JET_EVENT_SEG_MASK> = -16777216;

        <android.media.JetPlayer: int JET_EVENT_CTRL_SHIFT> = 7;

        <android.media.JetPlayer: int JET_EVENT_CTRL_MASK> = 16256;

        <android.media.JetPlayer: int JET_EVENT_CHAN_SHIFT> = 14;

        <android.media.JetPlayer: int JET_EVENT_CHAN_MASK> = 245760;

        <android.media.JetPlayer: int JET_EVENT> = 1;

        <android.media.JetPlayer: int MAXTRACKS> = 32;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        return;
    }

    private void <init>()
    {
        android.media.JetPlayer r0;
        android.os.Looper r1, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r3;

        r0 := @this: android.media.JetPlayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.JetPlayer: android.media.JetPlayer$NativeEventHandler mEventHandler> = null;

        r0.<android.media.JetPlayer: android.os.Looper mInitializationLooper> = null;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.media.JetPlayer: java.lang.Object mEventListenerLock> = $r2;

        r0.<android.media.JetPlayer: android.media.JetPlayer$OnJetEventListener mJetEventListener> = null;

        r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r0.<android.media.JetPlayer: android.os.Looper mInitializationLooper> = r1;

        if r1 != null goto label1;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        r0.<android.media.JetPlayer: android.os.Looper mInitializationLooper> = $r4;

     label1:
        i0 = staticinvoke <android.media.AudioTrack: int getMinBufferSize(int,int,int)>(22050, 12, 2);

        if i0 == -1 goto label2;

        if i0 == -2 goto label2;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        $i1 = staticinvoke <android.media.JetPlayer: int getMaxTracks()>();

        $i2 = staticinvoke <android.media.AudioFormat: int getBytesPerSample(int)>(2);

        $i3 = $i2 * 2;

        $i4 = i0 / $i3;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(1200, $i4);

        specialinvoke r0.<android.media.JetPlayer: boolean native_setup(java.lang.Object,int,int)>($r3, $i1, $i5);

     label2:
        return;
    }

    static java.lang.Object access$000(android.media.JetPlayer)
    {
        android.media.JetPlayer r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.JetPlayer;

        $r1 = r0.<android.media.JetPlayer: java.lang.Object mEventListenerLock>;

        return $r1;
    }

    static android.media.JetPlayer$OnJetEventListener access$100(android.media.JetPlayer)
    {
        android.media.JetPlayer r0;
        android.media.JetPlayer$OnJetEventListener $r1;

        r0 := @parameter0: android.media.JetPlayer;

        $r1 = r0.<android.media.JetPlayer: android.media.JetPlayer$OnJetEventListener mJetEventListener>;

        return $r1;
    }

    static void access$200(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.media.JetPlayer: void loge(java.lang.String)>(r0);

        return;
    }

    public static android.media.JetPlayer getJetPlayer()
    {
        android.media.JetPlayer $r0, $r1, $r2;

        $r0 = <android.media.JetPlayer: android.media.JetPlayer singletonRef>;

        if $r0 != null goto label1;

        $r2 = new android.media.JetPlayer;

        specialinvoke $r2.<android.media.JetPlayer: void <init>()>();

        <android.media.JetPlayer: android.media.JetPlayer singletonRef> = $r2;

     label1:
        $r1 = <android.media.JetPlayer: android.media.JetPlayer singletonRef>;

        return $r1;
    }

    public static int getMaxTracks()
    {
        int $i0;

        $i0 = <android.media.JetPlayer: int MAXTRACKS>;

        return $i0;
    }

    private static void logd(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ android.media.JetPlayer ] ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("JetPlayer-J", $r5);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ android.media.JetPlayer ] ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("JetPlayer-J", $r5);

        return;
    }

    private final native boolean native_clearQueue();

    private final native boolean native_closeJetFile();

    private final native void native_finalize();

    private final native boolean native_loadJetFromFile(java.lang.String);

    private final native boolean native_loadJetFromFileD(java.io.FileDescriptor, long, long);

    private final native boolean native_pauseJet();

    private final native boolean native_playJet();

    private final native boolean native_queueJetSegment(int, int, int, int, int, byte);

    private final native boolean native_queueJetSegmentMuteArray(int, int, int, int, boolean[], byte);

    private final native void native_release();

    private final native boolean native_setMuteArray(boolean[], boolean);

    private final native boolean native_setMuteFlag(int, boolean, boolean);

    private final native boolean native_setMuteFlags(int, boolean);

    private final native boolean native_setup(java.lang.Object, int, int);

    private final native boolean native_triggerClip(int);

    private static void postEventFromNative(java.lang.Object, int, int, int)
    {
        int i0, i1, i2;
        java.lang.ref.WeakReference $r0;
        java.lang.Object $r1, r3;
        android.media.JetPlayer$NativeEventHandler $r2, r5;
        android.media.JetPlayer r4;
        android.os.Message r6;

        r3 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r0 = (java.lang.ref.WeakReference) r3;

        $r1 = virtualinvoke $r0.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.media.JetPlayer) $r1;

        if r4 == null goto label1;

        r5 = r4.<android.media.JetPlayer: android.media.JetPlayer$NativeEventHandler mEventHandler>;

        if r5 == null goto label1;

        r6 = virtualinvoke r5.<android.media.JetPlayer$NativeEventHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, null);

        $r2 = r4.<android.media.JetPlayer: android.media.JetPlayer$NativeEventHandler mEventHandler>;

        virtualinvoke $r2.<android.media.JetPlayer$NativeEventHandler: boolean sendMessage(android.os.Message)>(r6);

     label1:
        return;
    }

    public boolean clearQueue()
    {
        android.media.JetPlayer r0;
        boolean $z0;

        r0 := @this: android.media.JetPlayer;

        $z0 = specialinvoke r0.<android.media.JetPlayer: boolean native_clearQueue()>();

        return $z0;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.media.JetPlayer r0;
        java.lang.CloneNotSupportedException $r1;

        r0 := @this: android.media.JetPlayer;

        $r1 = new java.lang.CloneNotSupportedException;

        specialinvoke $r1.<java.lang.CloneNotSupportedException: void <init>()>();

        throw $r1;
    }

    public boolean closeJetFile()
    {
        android.media.JetPlayer r0;
        boolean $z0;

        r0 := @this: android.media.JetPlayer;

        $z0 = specialinvoke r0.<android.media.JetPlayer: boolean native_closeJetFile()>();

        return $z0;
    }

    protected void finalize()
    {
        android.media.JetPlayer r0;

        r0 := @this: android.media.JetPlayer;

        specialinvoke r0.<android.media.JetPlayer: void native_finalize()>();

        return;
    }

    public boolean loadJetFile(android.content.res.AssetFileDescriptor)
    {
        android.media.JetPlayer r0;
        android.content.res.AssetFileDescriptor r1;
        long l0, $l2;
        byte $b1;
        android.util.AndroidRuntimeException $r2;
        java.io.FileDescriptor $r3;
        boolean $z0;

        r0 := @this: android.media.JetPlayer;

        r1 := @parameter0: android.content.res.AssetFileDescriptor;

        l0 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getLength()>();

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $r3 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l2 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $z0 = specialinvoke r0.<android.media.JetPlayer: boolean native_loadJetFromFileD(java.io.FileDescriptor,long,long)>($r3, $l2, l0);

        return $z0;

     label1:
        $r2 = new android.util.AndroidRuntimeException;

        specialinvoke $r2.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("no length for fd");

        throw $r2;
    }

    public boolean loadJetFile(java.lang.String)
    {
        android.media.JetPlayer r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.media.JetPlayer;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<android.media.JetPlayer: boolean native_loadJetFromFile(java.lang.String)>(r1);

        return $z0;
    }

    public boolean pause()
    {
        android.media.JetPlayer r0;
        boolean $z0;

        r0 := @this: android.media.JetPlayer;

        $z0 = specialinvoke r0.<android.media.JetPlayer: boolean native_pauseJet()>();

        return $z0;
    }

    public boolean play()
    {
        android.media.JetPlayer r0;
        boolean $z0;

        r0 := @this: android.media.JetPlayer;

        $z0 = specialinvoke r0.<android.media.JetPlayer: boolean native_playJet()>();

        return $z0;
    }

    public boolean queueJetSegment(int, int, int, int, int, byte)
    {
        android.media.JetPlayer r0;
        int i0, i1, i2, i3, i4;
        byte b5;
        boolean $z0;

        r0 := @this: android.media.JetPlayer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        b5 := @parameter5: byte;

        $z0 = specialinvoke r0.<android.media.JetPlayer: boolean native_queueJetSegment(int,int,int,int,int,byte)>(i0, i1, i2, i3, i4, b5);

        return $z0;
    }

    public boolean queueJetSegmentMuteArray(int, int, int, int, boolean[], byte)
    {
        android.media.JetPlayer r0;
        int i0, i1, i2, i3, $i5, $i6;
        boolean[] r1;
        byte b4;
        boolean $z0;

        r0 := @this: android.media.JetPlayer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: boolean[];

        b4 := @parameter5: byte;

        $i5 = lengthof r1;

        $i6 = staticinvoke <android.media.JetPlayer: int getMaxTracks()>();

        if $i5 == $i6 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<android.media.JetPlayer: boolean native_queueJetSegmentMuteArray(int,int,int,int,boolean[],byte)>(i0, i1, i2, i3, r1, b4);

        return $z0;
    }

    public void release()
    {
        android.media.JetPlayer r0;

        r0 := @this: android.media.JetPlayer;

        specialinvoke r0.<android.media.JetPlayer: void native_release()>();

        <android.media.JetPlayer: android.media.JetPlayer singletonRef> = null;

        return;
    }

    public void setEventListener(android.media.JetPlayer$OnJetEventListener)
    {
        android.media.JetPlayer r0;
        android.media.JetPlayer$OnJetEventListener r1;

        r0 := @this: android.media.JetPlayer;

        r1 := @parameter0: android.media.JetPlayer$OnJetEventListener;

        virtualinvoke r0.<android.media.JetPlayer: void setEventListener(android.media.JetPlayer$OnJetEventListener,android.os.Handler)>(r1, null);

        return;
    }

    public void setEventListener(android.media.JetPlayer$OnJetEventListener, android.os.Handler)
    {
        android.media.JetPlayer r0;
        android.os.Handler r1;
        java.lang.Object r2;
        android.os.Looper $r3, $r4;
        java.lang.Throwable $r5;
        android.media.JetPlayer$OnJetEventListener r6;
        android.media.JetPlayer$NativeEventHandler r7, r8;

        r0 := @this: android.media.JetPlayer;

        r6 := @parameter0: android.media.JetPlayer$OnJetEventListener;

        r1 := @parameter1: android.os.Handler;

        r2 = r0.<android.media.JetPlayer: java.lang.Object mEventListenerLock>;

        entermonitor r2;

     label01:
        r0.<android.media.JetPlayer: android.media.JetPlayer$OnJetEventListener mJetEventListener> = r6;

     label02:
        if r6 == null goto label07;

        if r1 == null goto label05;

     label03:
        r7 = new android.media.JetPlayer$NativeEventHandler;

        $r4 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r7.<android.media.JetPlayer$NativeEventHandler: void <init>(android.media.JetPlayer,android.media.JetPlayer,android.os.Looper)>(r0, r0, $r4);

        r0.<android.media.JetPlayer: android.media.JetPlayer$NativeEventHandler mEventHandler> = r7;

     label04:
        goto label08;

     label05:
        r8 = new android.media.JetPlayer$NativeEventHandler;

        $r3 = r0.<android.media.JetPlayer: android.os.Looper mInitializationLooper>;

        specialinvoke r8.<android.media.JetPlayer$NativeEventHandler: void <init>(android.media.JetPlayer,android.media.JetPlayer,android.os.Looper)>(r0, r0, $r3);

        r0.<android.media.JetPlayer: android.media.JetPlayer$NativeEventHandler mEventHandler> = r8;

     label06:
        goto label08;

     label07:
        r0.<android.media.JetPlayer: android.media.JetPlayer$NativeEventHandler mEventHandler> = null;

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public boolean setMuteArray(boolean[], boolean)
    {
        android.media.JetPlayer r0;
        boolean[] r1;
        boolean z0, $z1;
        int $i0, $i1;

        r0 := @this: android.media.JetPlayer;

        r1 := @parameter0: boolean[];

        z0 := @parameter1: boolean;

        $i0 = lengthof r1;

        $i1 = staticinvoke <android.media.JetPlayer: int getMaxTracks()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<android.media.JetPlayer: boolean native_setMuteArray(boolean[],boolean)>(r1, z0);

        return $z1;
    }

    public boolean setMuteFlag(int, boolean, boolean)
    {
        android.media.JetPlayer r0;
        int i0;
        boolean z0, z1, $z2;

        r0 := @this: android.media.JetPlayer;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = specialinvoke r0.<android.media.JetPlayer: boolean native_setMuteFlag(int,boolean,boolean)>(i0, z0, z1);

        return $z2;
    }

    public boolean setMuteFlags(int, boolean)
    {
        android.media.JetPlayer r0;
        int i0;
        boolean z0, $z1;

        r0 := @this: android.media.JetPlayer;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<android.media.JetPlayer: boolean native_setMuteFlags(int,boolean)>(i0, z0);

        return $z1;
    }

    public boolean triggerClip(int)
    {
        android.media.JetPlayer r0;
        int i0;
        boolean $z0;

        r0 := @this: android.media.JetPlayer;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.media.JetPlayer: boolean native_triggerClip(int)>(i0);

        return $z0;
    }
}
