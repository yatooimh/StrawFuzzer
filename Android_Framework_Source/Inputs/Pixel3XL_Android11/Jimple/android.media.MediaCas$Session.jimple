public final class android.media.MediaCas$Session extends java.lang.Object implements java.lang.AutoCloseable
{
    boolean mIsClosed;
    final java.util.ArrayList mSessionId;
    final android.media.MediaCas this$0;

    void <init>(android.media.MediaCas, java.util.ArrayList)
    {
        android.media.MediaCas$Session r0;
        android.media.MediaCas r1;
        java.util.ArrayList r2, $r3;

        r0 := @this: android.media.MediaCas$Session;

        r1 := @parameter0: android.media.MediaCas;

        r2 := @parameter1: java.util.ArrayList;

        r0.<android.media.MediaCas$Session: android.media.MediaCas this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaCas$Session: boolean mIsClosed> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<android.media.MediaCas$Session: java.util.ArrayList mSessionId> = $r3;

        return;
    }

    private void validateSessionInternalStates()
    {
        android.media.MediaCas$Session r0;
        android.media.MediaCas $r1;
        android.hardware.cas.V1_0.ICas $r2;
        java.lang.IllegalStateException $r3;
        boolean $z0;

        r0 := @this: android.media.MediaCas$Session;

        $r1 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        $r2 = staticinvoke <android.media.MediaCas: android.hardware.cas.V1_0.ICas access$700(android.media.MediaCas)>($r1);

        if $r2 == null goto label2;

        $z0 = r0.<android.media.MediaCas$Session: boolean mIsClosed>;

        if $z0 == 0 goto label1;

        staticinvoke <android.media.MediaCasStateException: void throwExceptionIfNeeded(int)>(3);

     label1:
        return;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;
    }

    public void close()
    {
        android.media.MediaCas$Session r0;
        android.media.MediaCas $r2, $r5, $r7;
        android.hardware.cas.V1_0.ICas $r3;
        java.util.ArrayList $r4;
        int $i0;
        android.os.RemoteException $r6;

        r0 := @this: android.media.MediaCas$Session;

        specialinvoke r0.<android.media.MediaCas$Session: void validateSessionInternalStates()>();

     label1:
        $r2 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        $r3 = staticinvoke <android.media.MediaCas: android.hardware.cas.V1_0.ICas access$700(android.media.MediaCas)>($r2);

        $r4 = r0.<android.media.MediaCas$Session: java.util.ArrayList mSessionId>;

        $i0 = interfaceinvoke $r3.<android.hardware.cas.V1_0.ICas: int closeSession(java.util.ArrayList)>($r4);

        staticinvoke <android.media.MediaCasStateException: void throwExceptionIfNeeded(int)>($i0);

        r0.<android.media.MediaCas$Session: boolean mIsClosed> = 1;

        $r5 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        staticinvoke <android.media.MediaCas: void access$1100(android.media.MediaCas,android.media.MediaCas$Session)>($r5, r0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        staticinvoke <android.media.MediaCas: void access$900(android.media.MediaCas)>($r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        android.media.MediaCas$Session r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.ArrayList $r3, $r4;

        r0 := @this: android.media.MediaCas$Session;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.media.MediaCas$Session;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.media.MediaCas$Session: java.util.ArrayList mSessionId>;

        $r2 = (android.media.MediaCas$Session) r1;

        $r3 = $r2.<android.media.MediaCas$Session: java.util.ArrayList mSessionId>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label1:
        return 0;
    }

    public byte[] getSessionId()
    {
        android.media.MediaCas$Session r0;
        java.util.ArrayList $r1;
        android.media.MediaCas $r2;
        byte[] $r3;

        r0 := @this: android.media.MediaCas$Session;

        specialinvoke r0.<android.media.MediaCas$Session: void validateSessionInternalStates()>();

        $r2 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        $r1 = r0.<android.media.MediaCas$Session: java.util.ArrayList mSessionId>;

        $r3 = staticinvoke <android.media.MediaCas: byte[] access$000(android.media.MediaCas,java.util.ArrayList)>($r2, $r1);

        return $r3;
    }

    public void processEcm(byte[]) throws android.media.MediaCasException
    {
        android.media.MediaCas$Session r0;
        byte[] r1;
        int $i0;

        r0 := @this: android.media.MediaCas$Session;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<android.media.MediaCas$Session: void processEcm(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void processEcm(byte[], int, int) throws android.media.MediaCasException
    {
        android.media.MediaCas$Session r0;
        int i0, i1, $i2;
        android.media.MediaCas $r1, $r3, $r7;
        android.hardware.cas.V1_0.ICas $r2;
        java.util.ArrayList $r4, $r5;
        android.os.RemoteException $r6;
        byte[] r8;

        r0 := @this: android.media.MediaCas$Session;

        r8 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.media.MediaCas$Session: void validateSessionInternalStates()>();

     label1:
        $r1 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        $r2 = staticinvoke <android.media.MediaCas: android.hardware.cas.V1_0.ICas access$700(android.media.MediaCas)>($r1);

        $r4 = r0.<android.media.MediaCas$Session: java.util.ArrayList mSessionId>;

        $r3 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        $r5 = staticinvoke <android.media.MediaCas: java.util.ArrayList access$800(android.media.MediaCas,byte[],int,int)>($r3, r8, i0, i1);

        $i2 = interfaceinvoke $r2.<android.hardware.cas.V1_0.ICas: int processEcm(java.util.ArrayList,java.util.ArrayList)>($r4, $r5);

        staticinvoke <android.media.MediaCasException: void throwExceptionIfNeeded(int)>($i2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        staticinvoke <android.media.MediaCas: void access$900(android.media.MediaCas)>($r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendSessionEvent(int, int, byte[]) throws android.media.MediaCasException
    {
        android.media.MediaCas$Session r0;
        int i0, i1, $i3;
        android.media.MediaCas $r1, $r4, $r6, $r10;
        android.hardware.cas.V1_1.ICas $r2, $r5;
        android.media.MediaCasException$UnsupportedCasException $r3;
        java.util.ArrayList $r7, $r8;
        android.os.RemoteException $r9;
        byte[] r11;

        r0 := @this: android.media.MediaCas$Session;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r11 := @parameter2: byte[];

        specialinvoke r0.<android.media.MediaCas$Session: void validateSessionInternalStates()>();

        $r1 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        $r2 = staticinvoke <android.media.MediaCas: android.hardware.cas.V1_1.ICas access$1000(android.media.MediaCas)>($r1);

        if $r2 == null goto label5;

     label1:
        $r4 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        $r5 = staticinvoke <android.media.MediaCas: android.hardware.cas.V1_1.ICas access$1000(android.media.MediaCas)>($r4);

        $r7 = r0.<android.media.MediaCas$Session: java.util.ArrayList mSessionId>;

        $r6 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        $r8 = staticinvoke <android.media.MediaCas: java.util.ArrayList access$200(android.media.MediaCas,byte[])>($r6, r11);

        $i3 = interfaceinvoke $r5.<android.hardware.cas.V1_1.ICas: int sendSessionEvent(java.util.ArrayList,int,int,java.util.ArrayList)>($r7, i0, i1, $r8);

        staticinvoke <android.media.MediaCasException: void throwExceptionIfNeeded(int)>($i3);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        staticinvoke <android.media.MediaCas: void access$900(android.media.MediaCas)>($r10);

     label4:
        return;

     label5:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaCas", "Send Session Event isn\'t supported by cas@1.0 interface");

        $r3 = new android.media.MediaCasException$UnsupportedCasException;

        specialinvoke $r3.<android.media.MediaCasException$UnsupportedCasException: void <init>(java.lang.String)>("Send Session Event is not supported");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setPrivateData(byte[]) throws android.media.MediaCasException
    {
        android.media.MediaCas$Session r0;
        android.media.MediaCas $r1, $r3, $r7;
        android.hardware.cas.V1_0.ICas $r2;
        int $i0, $i1;
        java.util.ArrayList $r4, $r5;
        android.os.RemoteException $r6;
        byte[] r8;

        r0 := @this: android.media.MediaCas$Session;

        r8 := @parameter0: byte[];

        specialinvoke r0.<android.media.MediaCas$Session: void validateSessionInternalStates()>();

     label1:
        $r1 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        $r2 = staticinvoke <android.media.MediaCas: android.hardware.cas.V1_0.ICas access$700(android.media.MediaCas)>($r1);

        $r4 = r0.<android.media.MediaCas$Session: java.util.ArrayList mSessionId>;

        $r3 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        $i0 = lengthof r8;

        $r5 = staticinvoke <android.media.MediaCas: java.util.ArrayList access$800(android.media.MediaCas,byte[],int,int)>($r3, r8, 0, $i0);

        $i1 = interfaceinvoke $r2.<android.hardware.cas.V1_0.ICas: int setSessionPrivateData(java.util.ArrayList,java.util.ArrayList)>($r4, $r5);

        staticinvoke <android.media.MediaCasException: void throwExceptionIfNeeded(int)>($i1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = r0.<android.media.MediaCas$Session: android.media.MediaCas this$0>;

        staticinvoke <android.media.MediaCas: void access$900(android.media.MediaCas)>($r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
