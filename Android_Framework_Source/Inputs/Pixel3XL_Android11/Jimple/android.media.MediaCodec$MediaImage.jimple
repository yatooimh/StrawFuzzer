public class android.media.MediaCodec$MediaImage extends android.media.Image
{
    private static final int TYPE_YUV;
    private final java.nio.ByteBuffer mBuffer;
    private final long mBufferContext;
    private final int mFormat;
    private final int mHeight;
    private final java.nio.ByteBuffer mInfo;
    private final boolean mIsReadOnly;
    private final android.media.Image$Plane[] mPlanes;
    private final int mScalingMode;
    private long mTimestamp;
    private final int mTransform;
    private final int mWidth;
    private final int mXOffset;
    private final int mYOffset;

    public void <init>(java.nio.ByteBuffer, java.nio.ByteBuffer, boolean, long, int, int, android.graphics.Rect)
    {
        android.media.MediaCodec$MediaImage r0;
        java.nio.ByteBuffer r1, $r3, $r57, $r62, r63;
        boolean z0, $z1;
        long l0;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i41, i42, i43, i44;
        java.lang.StringBuilder $r4, $r9, $r14, $r19, $r26, $r31, $r38, $r47;
        java.lang.UnsupportedOperationException $r7, $r12, $r24, $r29, $r34, $r45, $r54;
        java.lang.String $r8, $r13, $r18, $r25, $r30, $r35, $r46, $r55;
        java.lang.RuntimeException $r17;
        android.media.MediaCodec$MediaImage$MediaPlane[] $r36;
        android.graphics.Rect $r37, r64;
        android.media.MediaCodec$MediaImage$MediaPlane $r60;
        android.media.Image$Plane[] $r61;
        byte b45;

        r0 := @this: android.media.MediaCodec$MediaImage;

        r63 := @parameter0: java.nio.ByteBuffer;

        r1 := @parameter1: java.nio.ByteBuffer;

        z0 := @parameter2: boolean;

        l0 := @parameter3: long;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r64 := @parameter6: android.graphics.Rect;

        specialinvoke r0.<android.media.Image: void <init>()>();

        r0.<android.media.MediaCodec$MediaImage: int mTransform> = 0;

        r0.<android.media.MediaCodec$MediaImage: int mScalingMode> = 0;

        r0.<android.media.MediaCodec$MediaImage: int mFormat> = 35;

        r0.<android.media.MediaCodec$MediaImage: long mTimestamp> = l0;

        r0.<android.media.MediaCodec$MediaImage: boolean mIsImageValid> = 1;

        $z1 = virtualinvoke r63.<java.nio.ByteBuffer: boolean isReadOnly()>();

        r0.<android.media.MediaCodec$MediaImage: boolean mIsReadOnly> = $z1;

        $r3 = virtualinvoke r63.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        r0.<android.media.MediaCodec$MediaImage: java.nio.ByteBuffer mBuffer> = $r3;

        r0.<android.media.MediaCodec$MediaImage: int mXOffset> = i1;

        r0.<android.media.MediaCodec$MediaImage: int mYOffset> = i2;

        r0.<android.media.MediaCodec$MediaImage: java.nio.ByteBuffer mInfo> = r1;

        r0.<android.media.MediaCodec$MediaImage: long mBufferContext> = 0L;

        $i10 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        if $i10 != 104 goto label13;

        i41 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        if i41 != 1 goto label12;

        i3 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        if i3 != 3 goto label11;

        $i12 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        r0.<android.media.MediaCodec$MediaImage: int mWidth> = $i12;

        i42 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        r0.<android.media.MediaCodec$MediaImage: int mHeight> = i42;

        $i13 = r0.<android.media.MediaCodec$MediaImage: int mWidth>;

        if $i13 < 1 goto label10;

        if i42 < 1 goto label10;

        i4 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        if i4 != 8 goto label09;

        i43 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        if i43 != 8 goto label08;

        $r36 = newarray (android.media.MediaCodec$MediaImage$MediaPlane)[i3];

        r0.<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] mPlanes> = $r36;

        i44 = 0;

     label01:
        if i44 >= i3 goto label06;

        i5 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        i6 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        i7 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        i8 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        i9 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        if i8 != i9 goto label05;

        if i44 != 0 goto label02;

        b45 = 1;

        goto label03;

     label02:
        b45 = 2;

     label03:
        if i8 != b45 goto label05;

        if i6 < 1 goto label04;

        if i7 < 1 goto label04;

        virtualinvoke r63.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r57 = r0.<android.media.MediaCodec$MediaImage: java.nio.ByteBuffer mBuffer>;

        $i20 = virtualinvoke $r57.<java.nio.ByteBuffer: int position()>();

        $i23 = $i20 + i5;

        $i21 = i1 / i8;

        $i22 = $i21 * i6;

        $i26 = $i23 + $i22;

        $i24 = i2 / i9;

        $i25 = $i24 * i7;

        $i27 = $i26 + $i25;

        virtualinvoke r63.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i27);

        $i28 = virtualinvoke r63.<java.nio.ByteBuffer: int position()>();

        $i29 = staticinvoke <android.media.Utils: int divUp(int,int)>(i4, 8);

        $i34 = $i28 + $i29;

        $i30 = r0.<android.media.MediaCodec$MediaImage: int mHeight>;

        $i31 = $i30 / i9;

        $i32 = $i31 - 1;

        $i33 = $i32 * i7;

        $i39 = $i34 + $i33;

        $i35 = r0.<android.media.MediaCodec$MediaImage: int mWidth>;

        $i36 = $i35 / i8;

        $i37 = $i36 - 1;

        $i38 = $i37 * i6;

        $i40 = $i39 + $i38;

        virtualinvoke r63.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i40);

        $r61 = r0.<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] mPlanes>;

        $r60 = new android.media.MediaCodec$MediaImage$MediaPlane;

        $r62 = virtualinvoke r63.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        specialinvoke $r60.<android.media.MediaCodec$MediaImage$MediaPlane: void <init>(android.media.MediaCodec$MediaImage,java.nio.ByteBuffer,int,int)>(r0, $r62, i7, i6);

        $r61[i44] = $r60;

        i44 = i44 + 1;

        goto label01;

     label04:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected strides: ");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pixel, ");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" row on plane ");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i44);

        $r54 = new java.lang.UnsupportedOperationException;

        $r55 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r55);

        throw $r54;

     label05:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected subsampling: ");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on plane ");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i44);

        $r45 = new java.lang.UnsupportedOperationException;

        $r46 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r46);

        throw $r45;

     label06:
        if r64 != null goto label07;

        $r37 = new android.graphics.Rect;

        $i19 = r0.<android.media.MediaCodec$MediaImage: int mWidth>;

        $i18 = r0.<android.media.MediaCodec$MediaImage: int mHeight>;

        specialinvoke $r37.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i19, $i18);

        r64 = $r37;

        goto label07;

     label07:
        $i17 = neg i1;

        $i16 = neg i2;

        virtualinvoke r64.<android.graphics.Rect: void offset(int,int)>($i17, $i16);

        specialinvoke r0.<android.media.Image: void setCropRect(android.graphics.Rect)>(r64);

        return;

     label08:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported allocated bit depth: ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i43);

        $r34 = new java.lang.UnsupportedOperationException;

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r35);

        throw $r34;

     label09:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported bit depth: ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r29 = new java.lang.UnsupportedOperationException;

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r30);

        throw $r29;

     label10:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported size: ");

        $i14 = r0.<android.media.MediaCodec$MediaImage: int mWidth>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i15 = r0.<android.media.MediaCodec$MediaImage: int mHeight>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r24 = new java.lang.UnsupportedOperationException;

        $r25 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label11:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected number of planes: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r17 = new java.lang.RuntimeException;

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label12:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported type: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i41);

        $r12 = new java.lang.UnsupportedOperationException;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label13:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported info length: ");

        $i11 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r7 = new java.lang.UnsupportedOperationException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public void <init>(java.nio.ByteBuffer[], int[], int[], int, int, int, boolean, long, int, int, android.graphics.Rect, long)
    {
        android.media.MediaCodec$MediaImage r0;
        int[] r1, r2;
        int i0, i1, i3, i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19;
        boolean z0;
        long l2, l5;
        android.graphics.Rect r3, $r6, r13;
        java.lang.IllegalArgumentException $r4;
        android.media.MediaCodec$MediaImage$MediaPlane[] $r5;
        android.media.MediaCodec$MediaImage$MediaPlane $r7;
        java.nio.ByteBuffer $r8;
        android.media.Image$Plane[] $r9;
        java.nio.ByteBuffer[] r10;

        r0 := @this: android.media.MediaCodec$MediaImage;

        r10 := @parameter0: java.nio.ByteBuffer[];

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        i18 := @parameter3: int;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        z0 := @parameter6: boolean;

        l2 := @parameter7: long;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        r3 := @parameter10: android.graphics.Rect;

        l5 := @parameter11: long;

        specialinvoke r0.<android.media.Image: void <init>()>();

        r0.<android.media.MediaCodec$MediaImage: int mTransform> = 0;

        r0.<android.media.MediaCodec$MediaImage: int mScalingMode> = 0;

        $i7 = lengthof r10;

        $i6 = lengthof r1;

        if $i7 != $i6 goto label5;

        $i9 = lengthof r10;

        $i8 = lengthof r2;

        if $i9 != $i8 goto label5;

        r0.<android.media.MediaCodec$MediaImage: int mWidth> = i18;

        r0.<android.media.MediaCodec$MediaImage: int mHeight> = i0;

        r0.<android.media.MediaCodec$MediaImage: int mFormat> = i1;

        r0.<android.media.MediaCodec$MediaImage: long mTimestamp> = l2;

        r0.<android.media.MediaCodec$MediaImage: boolean mIsImageValid> = 1;

        r0.<android.media.MediaCodec$MediaImage: boolean mIsReadOnly> = z0;

        r0.<android.media.MediaCodec$MediaImage: java.nio.ByteBuffer mBuffer> = null;

        r0.<android.media.MediaCodec$MediaImage: java.nio.ByteBuffer mInfo> = null;

        $i10 = lengthof r10;

        $r5 = newarray (android.media.MediaCodec$MediaImage$MediaPlane)[$i10];

        r0.<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] mPlanes> = $r5;

        i19 = 0;

     label1:
        $i11 = lengthof r10;

        if i19 >= $i11 goto label2;

        $r9 = r0.<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] mPlanes>;

        $r7 = new android.media.MediaCodec$MediaImage$MediaPlane;

        $r8 = r10[i19];

        $i17 = r1[i19];

        $i16 = r2[i19];

        specialinvoke $r7.<android.media.MediaCodec$MediaImage$MediaPlane: void <init>(android.media.MediaCodec$MediaImage,java.nio.ByteBuffer,int,int)>(r0, $r8, $i17, $i16);

        $r9[i19] = $r7;

        i19 = i19 + 1;

        goto label1;

     label2:
        r0.<android.media.MediaCodec$MediaImage: int mXOffset> = i3;

        r0.<android.media.MediaCodec$MediaImage: int mYOffset> = i4;

        if r3 != null goto label3;

        $r6 = new android.graphics.Rect;

        $i15 = r0.<android.media.MediaCodec$MediaImage: int mWidth>;

        $i14 = r0.<android.media.MediaCodec$MediaImage: int mHeight>;

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i15, $i14);

        r13 = $r6;

        goto label4;

     label3:
        r13 = r3;

     label4:
        $i13 = neg i3;

        $i12 = neg i4;

        virtualinvoke r13.<android.graphics.Rect: void offset(int,int)>($i13, $i12);

        specialinvoke r0.<android.media.Image: void setCropRect(android.graphics.Rect)>(r13);

        r0.<android.media.MediaCodec$MediaImage: long mBufferContext> = l5;

        return;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("buffers, rowStrides and pixelStrides should have the same length");

        throw $r4;
    }

    public void close()
    {
        android.media.MediaCodec$MediaImage r0;
        java.nio.ByteBuffer r1;
        long l0;
        boolean $z0;
        byte $b1;

        r0 := @this: android.media.MediaCodec$MediaImage;

        $z0 = r0.<android.media.MediaCodec$MediaImage: boolean mIsImageValid>;

        if $z0 == 0 goto label3;

        r1 = r0.<android.media.MediaCodec$MediaImage: java.nio.ByteBuffer mBuffer>;

        if r1 == null goto label1;

        staticinvoke <java.nio.NioUtils: void freeDirectBuffer(java.nio.ByteBuffer)>(r1);

     label1:
        l0 = r0.<android.media.MediaCodec$MediaImage: long mBufferContext>;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label2;

        staticinvoke <android.media.MediaCodec: void access$1900(long)>(l0);

     label2:
        r0.<android.media.MediaCodec$MediaImage: boolean mIsImageValid> = 0;

     label3:
        return;
    }

    public int getFormat()
    {
        android.media.MediaCodec$MediaImage r0;
        int $i0;

        r0 := @this: android.media.MediaCodec$MediaImage;

        virtualinvoke r0.<android.media.MediaCodec$MediaImage: void throwISEIfImageIsInvalid()>();

        $i0 = r0.<android.media.MediaCodec$MediaImage: int mFormat>;

        return $i0;
    }

    public int getHeight()
    {
        android.media.MediaCodec$MediaImage r0;
        int $i0;

        r0 := @this: android.media.MediaCodec$MediaImage;

        virtualinvoke r0.<android.media.MediaCodec$MediaImage: void throwISEIfImageIsInvalid()>();

        $i0 = r0.<android.media.MediaCodec$MediaImage: int mHeight>;

        return $i0;
    }

    public android.media.Image$Plane[] getPlanes()
    {
        android.media.MediaCodec$MediaImage r0;
        android.media.Image$Plane[] r1, $r3;
        int $i0;
        java.lang.Object[] $r2;

        r0 := @this: android.media.MediaCodec$MediaImage;

        virtualinvoke r0.<android.media.MediaCodec$MediaImage: void throwISEIfImageIsInvalid()>();

        r1 = r0.<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] mPlanes>;

        $i0 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, $i0);

        $r3 = (android.media.Image$Plane[]) $r2;

        return $r3;
    }

    public int getScalingMode()
    {
        android.media.MediaCodec$MediaImage r0;

        r0 := @this: android.media.MediaCodec$MediaImage;

        virtualinvoke r0.<android.media.MediaCodec$MediaImage: void throwISEIfImageIsInvalid()>();

        return 0;
    }

    public long getTimestamp()
    {
        android.media.MediaCodec$MediaImage r0;
        long $l0;

        r0 := @this: android.media.MediaCodec$MediaImage;

        virtualinvoke r0.<android.media.MediaCodec$MediaImage: void throwISEIfImageIsInvalid()>();

        $l0 = r0.<android.media.MediaCodec$MediaImage: long mTimestamp>;

        return $l0;
    }

    public int getTransform()
    {
        android.media.MediaCodec$MediaImage r0;

        r0 := @this: android.media.MediaCodec$MediaImage;

        virtualinvoke r0.<android.media.MediaCodec$MediaImage: void throwISEIfImageIsInvalid()>();

        return 0;
    }

    public int getWidth()
    {
        android.media.MediaCodec$MediaImage r0;
        int $i0;

        r0 := @this: android.media.MediaCodec$MediaImage;

        virtualinvoke r0.<android.media.MediaCodec$MediaImage: void throwISEIfImageIsInvalid()>();

        $i0 = r0.<android.media.MediaCodec$MediaImage: int mWidth>;

        return $i0;
    }

    public void setCropRect(android.graphics.Rect)
    {
        android.media.MediaCodec$MediaImage r0;
        android.graphics.Rect r1;
        boolean $z0;
        java.nio.ReadOnlyBufferException $r2;

        r0 := @this: android.media.MediaCodec$MediaImage;

        r1 := @parameter0: android.graphics.Rect;

        $z0 = r0.<android.media.MediaCodec$MediaImage: boolean mIsReadOnly>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.media.Image: void setCropRect(android.graphics.Rect)>(r1);

        return;

     label1:
        $r2 = new java.nio.ReadOnlyBufferException;

        specialinvoke $r2.<java.nio.ReadOnlyBufferException: void <init>()>();

        throw $r2;
    }

    public static void <clinit>()
    {
        <android.media.MediaCodec$MediaImage: int TYPE_YUV> = 1;

        return;
    }
}
