public final class android.media.MediaCodec$OutputFrame extends java.lang.Object
{
    private boolean mAccessible;
    private final java.util.ArrayList mChangedKeys;
    private int mFlags;
    private android.media.MediaFormat mFormat;
    private android.hardware.HardwareBuffer mHardwareBuffer;
    private final int mIndex;
    private final java.util.Set mKeySet;
    private android.media.MediaCodec$LinearBlock mLinearBlock;
    private boolean mLoaded;
    private long mPresentationTimeUs;

    void <init>(int)
    {
        android.media.MediaCodec$OutputFrame r0;
        int i0;
        java.util.ArrayList $r1;
        java.util.HashSet $r2;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaCodec$OutputFrame: android.media.MediaCodec$LinearBlock mLinearBlock> = null;

        r0.<android.media.MediaCodec$OutputFrame: android.hardware.HardwareBuffer mHardwareBuffer> = null;

        r0.<android.media.MediaCodec$OutputFrame: long mPresentationTimeUs> = 0L;

        r0.<android.media.MediaCodec$OutputFrame: int mFlags> = 0;

        r0.<android.media.MediaCodec$OutputFrame: android.media.MediaFormat mFormat> = null;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.media.MediaCodec$OutputFrame: java.util.ArrayList mChangedKeys> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<android.media.MediaCodec$OutputFrame: java.util.Set mKeySet> = $r2;

        r0.<android.media.MediaCodec$OutputFrame: boolean mAccessible> = 0;

        r0.<android.media.MediaCodec$OutputFrame: boolean mLoaded> = 0;

        r0.<android.media.MediaCodec$OutputFrame: int mIndex> = i0;

        return;
    }

    void clear()
    {
        android.media.MediaCodec$OutputFrame r0;
        java.util.ArrayList $r1;
        java.util.Set $r2;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        r0.<android.media.MediaCodec$OutputFrame: android.media.MediaCodec$LinearBlock mLinearBlock> = null;

        r0.<android.media.MediaCodec$OutputFrame: android.hardware.HardwareBuffer mHardwareBuffer> = null;

        r0.<android.media.MediaCodec$OutputFrame: android.media.MediaFormat mFormat> = null;

        $r1 = r0.<android.media.MediaCodec$OutputFrame: java.util.ArrayList mChangedKeys>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<android.media.MediaCodec$OutputFrame: java.util.Set mKeySet>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        r0.<android.media.MediaCodec$OutputFrame: boolean mLoaded> = 0;

        return;
    }

    public java.util.Set getChangedKeys()
    {
        android.media.MediaCodec$OutputFrame r0;
        java.util.Set $r1, $r4, $r5, $r6;
        boolean $z0, $z1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        $r1 = r0.<android.media.MediaCodec$OutputFrame: java.util.Set mKeySet>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.media.MediaCodec$OutputFrame: java.util.ArrayList mChangedKeys>;

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r4 = r0.<android.media.MediaCodec$OutputFrame: java.util.Set mKeySet>;

        $r3 = r0.<android.media.MediaCodec$OutputFrame: java.util.ArrayList mChangedKeys>;

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>($r3);

     label1:
        $r5 = r0.<android.media.MediaCodec$OutputFrame: java.util.Set mKeySet>;

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r5);

        return $r6;
    }

    public int getFlags()
    {
        android.media.MediaCodec$OutputFrame r0;
        int $i0;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        $i0 = r0.<android.media.MediaCodec$OutputFrame: int mFlags>;

        return $i0;
    }

    public android.media.MediaFormat getFormat()
    {
        android.media.MediaCodec$OutputFrame r0;
        android.media.MediaFormat $r1;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        $r1 = r0.<android.media.MediaCodec$OutputFrame: android.media.MediaFormat mFormat>;

        return $r1;
    }

    public android.hardware.HardwareBuffer getHardwareBuffer()
    {
        android.media.MediaCodec$OutputFrame r0;
        android.media.MediaCodec$LinearBlock $r1;
        java.lang.IllegalStateException $r2;
        android.hardware.HardwareBuffer $r3;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        $r1 = r0.<android.media.MediaCodec$OutputFrame: android.media.MediaCodec$LinearBlock mLinearBlock>;

        if $r1 != null goto label1;

        $r3 = r0.<android.media.MediaCodec$OutputFrame: android.hardware.HardwareBuffer mHardwareBuffer>;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This output frame is not graphic");

        throw $r2;
    }

    public android.media.MediaCodec$LinearBlock getLinearBlock()
    {
        android.media.MediaCodec$OutputFrame r0;
        android.hardware.HardwareBuffer $r1;
        java.lang.IllegalStateException $r2;
        android.media.MediaCodec$LinearBlock $r3;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        $r1 = r0.<android.media.MediaCodec$OutputFrame: android.hardware.HardwareBuffer mHardwareBuffer>;

        if $r1 != null goto label1;

        $r3 = r0.<android.media.MediaCodec$OutputFrame: android.media.MediaCodec$LinearBlock mLinearBlock>;

        return $r3;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This output frame is not linear");

        throw $r2;
    }

    public long getPresentationTimeUs()
    {
        android.media.MediaCodec$OutputFrame r0;
        long $l0;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        $l0 = r0.<android.media.MediaCodec$OutputFrame: long mPresentationTimeUs>;

        return $l0;
    }

    boolean isAccessible()
    {
        android.media.MediaCodec$OutputFrame r0;
        boolean $z0;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        $z0 = r0.<android.media.MediaCodec$OutputFrame: boolean mAccessible>;

        return $z0;
    }

    boolean isLoaded()
    {
        android.media.MediaCodec$OutputFrame r0;
        boolean $z0;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        $z0 = r0.<android.media.MediaCodec$OutputFrame: boolean mLoaded>;

        return $z0;
    }

    void setAccessible(boolean)
    {
        android.media.MediaCodec$OutputFrame r0;
        boolean z0;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        z0 := @parameter0: boolean;

        r0.<android.media.MediaCodec$OutputFrame: boolean mAccessible> = z0;

        return;
    }

    void setBufferInfo(android.media.MediaCodec$BufferInfo)
    {
        android.media.MediaCodec$OutputFrame r0;
        android.media.MediaCodec$BufferInfo r1;
        long $l0;
        int $i1;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        r1 := @parameter0: android.media.MediaCodec$BufferInfo;

        $l0 = r1.<android.media.MediaCodec$BufferInfo: long presentationTimeUs>;

        r0.<android.media.MediaCodec$OutputFrame: long mPresentationTimeUs> = $l0;

        $i1 = r1.<android.media.MediaCodec$BufferInfo: int flags>;

        r0.<android.media.MediaCodec$OutputFrame: int mFlags> = $i1;

        return;
    }

    void setLoaded(boolean)
    {
        android.media.MediaCodec$OutputFrame r0;
        boolean z0;

        r0 := @this: android.media.MediaCodec$OutputFrame;

        z0 := @parameter0: boolean;

        r0.<android.media.MediaCodec$OutputFrame: boolean mLoaded> = z0;

        return;
    }
}
