public final class android.media.MediaCodec$QueueRequest extends java.lang.Object
{
    private boolean mAccessible;
    private final android.media.MediaCodec mCodec;
    private android.media.MediaCodec$CryptoInfo mCryptoInfo;
    private int mFlags;
    private android.hardware.HardwareBuffer mHardwareBuffer;
    private final int mIndex;
    private android.media.MediaCodec$LinearBlock mLinearBlock;
    private int mOffset;
    private long mPresentationTimeUs;
    private int mSize;
    private final java.util.ArrayList mTuningKeys;
    private final java.util.ArrayList mTuningValues;
    final android.media.MediaCodec this$0;

    private void <init>(android.media.MediaCodec, android.media.MediaCodec, int)
    {
        android.media.MediaCodec$QueueRequest r0;
        android.media.MediaCodec r1, r2;
        int i0;
        java.util.ArrayList $r3, $r4;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r1 := @parameter0: android.media.MediaCodec;

        r2 := @parameter1: android.media.MediaCodec;

        i0 := @parameter2: int;

        r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$LinearBlock mLinearBlock> = null;

        r0.<android.media.MediaCodec$QueueRequest: int mOffset> = 0;

        r0.<android.media.MediaCodec$QueueRequest: int mSize> = 0;

        r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$CryptoInfo mCryptoInfo> = null;

        r0.<android.media.MediaCodec$QueueRequest: android.hardware.HardwareBuffer mHardwareBuffer> = null;

        r0.<android.media.MediaCodec$QueueRequest: long mPresentationTimeUs> = 0L;

        r0.<android.media.MediaCodec$QueueRequest: int mFlags> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningKeys> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningValues> = $r4;

        r0.<android.media.MediaCodec$QueueRequest: boolean mAccessible> = 0;

        r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec mCodec> = r2;

        r0.<android.media.MediaCodec$QueueRequest: int mIndex> = i0;

        return;
    }

    void <init>(android.media.MediaCodec, android.media.MediaCodec, int, android.media.MediaCodec$1)
    {
        android.media.MediaCodec$QueueRequest r0;
        android.media.MediaCodec r1, r2;
        int i0;
        android.media.MediaCodec$1 r3;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r1 := @parameter0: android.media.MediaCodec;

        r2 := @parameter1: android.media.MediaCodec;

        i0 := @parameter2: int;

        r3 := @parameter3: android.media.MediaCodec$1;

        specialinvoke r0.<android.media.MediaCodec$QueueRequest: void <init>(android.media.MediaCodec,android.media.MediaCodec,int)>(r1, r2, i0);

        return;
    }

    android.media.MediaCodec$QueueRequest clear()
    {
        android.media.MediaCodec$QueueRequest r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$LinearBlock mLinearBlock> = null;

        r0.<android.media.MediaCodec$QueueRequest: int mOffset> = 0;

        r0.<android.media.MediaCodec$QueueRequest: int mSize> = 0;

        r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$CryptoInfo mCryptoInfo> = null;

        r0.<android.media.MediaCodec$QueueRequest: android.hardware.HardwareBuffer mHardwareBuffer> = null;

        r0.<android.media.MediaCodec$QueueRequest: long mPresentationTimeUs> = 0L;

        r0.<android.media.MediaCodec$QueueRequest: int mFlags> = 0;

        $r1 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningKeys>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningValues>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return r0;
    }

    boolean isAccessible()
    {
        android.media.MediaCodec$QueueRequest r0;
        boolean $z0;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        $z0 = r0.<android.media.MediaCodec$QueueRequest: boolean mAccessible>;

        return $z0;
    }

    public void queue()
    {
        android.media.MediaCodec$QueueRequest r0;
        boolean $z0;
        java.lang.IllegalStateException $r1, $r13;
        android.media.MediaCodec$LinearBlock $r2, r14;
        java.util.ArrayList $r5, $r6, $r8, $r9;
        int $i0, $i2, $i3, $i5, $i6, $i7;
        long $l1, $l4;
        android.media.MediaCodec $r7, $r11;
        android.media.MediaCodec$CryptoInfo $r10;
        android.hardware.HardwareBuffer $r12, r15;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label5;

        $r2 = r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$LinearBlock mLinearBlock>;

        if $r2 != null goto label2;

        $r12 = r0.<android.media.MediaCodec$QueueRequest: android.hardware.HardwareBuffer mHardwareBuffer>;

        if $r12 == null goto label1;

        goto label2;

     label1:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No block is set");

        throw $r13;

     label2:
        virtualinvoke r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$QueueRequest setAccessible(boolean)>(0);

        r14 = r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$LinearBlock mLinearBlock>;

        if r14 == null goto label3;

        $r11 = r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec mCodec>;

        $i7 = r0.<android.media.MediaCodec$QueueRequest: int mIndex>;

        $i6 = r0.<android.media.MediaCodec$QueueRequest: int mOffset>;

        $i5 = r0.<android.media.MediaCodec$QueueRequest: int mSize>;

        $r10 = r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$CryptoInfo mCryptoInfo>;

        $l4 = r0.<android.media.MediaCodec$QueueRequest: long mPresentationTimeUs>;

        $i3 = r0.<android.media.MediaCodec$QueueRequest: int mFlags>;

        $r9 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningKeys>;

        $r8 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningValues>;

        staticinvoke <android.media.MediaCodec: void access$1500(android.media.MediaCodec,int,android.media.MediaCodec$LinearBlock,int,int,android.media.MediaCodec$CryptoInfo,long,int,java.util.ArrayList,java.util.ArrayList)>($r11, $i7, r14, $i6, $i5, $r10, $l4, $i3, $r9, $r8);

        goto label4;

     label3:
        r15 = r0.<android.media.MediaCodec$QueueRequest: android.hardware.HardwareBuffer mHardwareBuffer>;

        if r15 == null goto label4;

        $r7 = r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec mCodec>;

        $i2 = r0.<android.media.MediaCodec$QueueRequest: int mIndex>;

        $l1 = r0.<android.media.MediaCodec$QueueRequest: long mPresentationTimeUs>;

        $i0 = r0.<android.media.MediaCodec$QueueRequest: int mFlags>;

        $r6 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningKeys>;

        $r5 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningValues>;

        staticinvoke <android.media.MediaCodec: void access$1600(android.media.MediaCodec,int,android.hardware.HardwareBuffer,long,int,java.util.ArrayList,java.util.ArrayList)>($r7, $i2, r15, $l1, $i0, $r6, $r5);

     label4:
        virtualinvoke r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$QueueRequest clear()>();

        return;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r1;
    }

    android.media.MediaCodec$QueueRequest setAccessible(boolean)
    {
        android.media.MediaCodec$QueueRequest r0;
        boolean z0;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        z0 := @parameter0: boolean;

        r0.<android.media.MediaCodec$QueueRequest: boolean mAccessible> = z0;

        return r0;
    }

    public android.media.MediaCodec$QueueRequest setByteBufferParameter(java.lang.String, java.nio.ByteBuffer)
    {
        android.media.MediaCodec$QueueRequest r0;
        java.lang.String r1;
        java.nio.ByteBuffer r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.util.ArrayList $r4, $r5;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.nio.ByteBuffer;

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningKeys>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r5 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningValues>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return r0;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r3;
    }

    public android.media.MediaCodec$QueueRequest setEncryptedLinearBlock(android.media.MediaCodec$LinearBlock, int, int, android.media.MediaCodec$CryptoInfo)
    {
        android.media.MediaCodec$QueueRequest r0;
        android.media.MediaCodec$LinearBlock r1, $r5;
        int i0, i1;
        android.media.MediaCodec$CryptoInfo r2;
        boolean $z0;
        java.lang.IllegalStateException $r4, $r6;
        android.hardware.HardwareBuffer $r7;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r1 := @parameter0: android.media.MediaCodec$LinearBlock;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.media.MediaCodec$CryptoInfo;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$LinearBlock mLinearBlock>;

        if $r5 != null goto label1;

        $r7 = r0.<android.media.MediaCodec$QueueRequest: android.hardware.HardwareBuffer mHardwareBuffer>;

        if $r7 != null goto label1;

        r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$LinearBlock mLinearBlock> = r1;

        r0.<android.media.MediaCodec$QueueRequest: int mOffset> = i0;

        r0.<android.media.MediaCodec$QueueRequest: int mSize> = i1;

        r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$CryptoInfo mCryptoInfo> = r2;

        return r0;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set block twice");

        throw $r6;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r4;
    }

    public android.media.MediaCodec$QueueRequest setFlags(int)
    {
        android.media.MediaCodec$QueueRequest r0;
        int i0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label1;

        r0.<android.media.MediaCodec$QueueRequest: int mFlags> = i0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r1;
    }

    public android.media.MediaCodec$QueueRequest setFloatParameter(java.lang.String, float)
    {
        android.media.MediaCodec$QueueRequest r0;
        java.lang.String r1;
        float f0;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Float $r5;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningKeys>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningValues>;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        return r0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r2;
    }

    public android.media.MediaCodec$QueueRequest setHardwareBuffer(android.hardware.HardwareBuffer)
    {
        android.media.MediaCodec$QueueRequest r0;
        android.hardware.HardwareBuffer r1, $r5;
        boolean $z0;
        java.lang.IllegalStateException $r2, $r4;
        android.media.MediaCodec$LinearBlock $r3;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r1 := @parameter0: android.hardware.HardwareBuffer;

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$LinearBlock mLinearBlock>;

        if $r3 != null goto label1;

        $r5 = r0.<android.media.MediaCodec$QueueRequest: android.hardware.HardwareBuffer mHardwareBuffer>;

        if $r5 != null goto label1;

        r0.<android.media.MediaCodec$QueueRequest: android.hardware.HardwareBuffer mHardwareBuffer> = r1;

        return r0;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set block twice");

        throw $r4;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r2;
    }

    public android.media.MediaCodec$QueueRequest setIntegerParameter(java.lang.String, int)
    {
        android.media.MediaCodec$QueueRequest r0;
        java.lang.String r1;
        int i0;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Integer $r5;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningKeys>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningValues>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        return r0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r2;
    }

    public android.media.MediaCodec$QueueRequest setLinearBlock(android.media.MediaCodec$LinearBlock, int, int)
    {
        android.media.MediaCodec$QueueRequest r0;
        android.media.MediaCodec$LinearBlock r1, $r3;
        int i0, i1;
        boolean $z0;
        java.lang.IllegalStateException $r2, $r4;
        android.hardware.HardwareBuffer $r5;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r1 := @parameter0: android.media.MediaCodec$LinearBlock;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$LinearBlock mLinearBlock>;

        if $r3 != null goto label1;

        $r5 = r0.<android.media.MediaCodec$QueueRequest: android.hardware.HardwareBuffer mHardwareBuffer>;

        if $r5 != null goto label1;

        r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$LinearBlock mLinearBlock> = r1;

        r0.<android.media.MediaCodec$QueueRequest: int mOffset> = i0;

        r0.<android.media.MediaCodec$QueueRequest: int mSize> = i1;

        r0.<android.media.MediaCodec$QueueRequest: android.media.MediaCodec$CryptoInfo mCryptoInfo> = null;

        return r0;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set block twice");

        throw $r4;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r2;
    }

    public android.media.MediaCodec$QueueRequest setLongParameter(java.lang.String, long)
    {
        android.media.MediaCodec$QueueRequest r0;
        java.lang.String r1;
        long l0;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Long $r5;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningKeys>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningValues>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        return r0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r2;
    }

    public android.media.MediaCodec$QueueRequest setPresentationTimeUs(long)
    {
        android.media.MediaCodec$QueueRequest r0;
        long l0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label1;

        r0.<android.media.MediaCodec$QueueRequest: long mPresentationTimeUs> = l0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r1;
    }

    public android.media.MediaCodec$QueueRequest setStringParameter(java.lang.String, java.lang.String)
    {
        android.media.MediaCodec$QueueRequest r0;
        java.lang.String r1, r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.util.ArrayList $r4, $r5;

        r0 := @this: android.media.MediaCodec$QueueRequest;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<android.media.MediaCodec$QueueRequest: boolean isAccessible()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningKeys>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r5 = r0.<android.media.MediaCodec$QueueRequest: java.util.ArrayList mTuningValues>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return r0;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The request is stale");

        throw $r3;
    }
}
