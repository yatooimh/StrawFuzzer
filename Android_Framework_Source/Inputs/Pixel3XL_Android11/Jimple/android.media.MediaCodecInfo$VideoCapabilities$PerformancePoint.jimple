public final class android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint extends java.lang.Object
{
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_100;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_120;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_200;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_24;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_240;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_25;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_30;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_50;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_60;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_100;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_120;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_200;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_24;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_240;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_25;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_30;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_50;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_60;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_24;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_25;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_30;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_48;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_50;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_60;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_100;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_120;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_200;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_24;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_240;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_25;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_30;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_50;
    public static final android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_60;
    private android.util.Size mBlockSize;
    private int mHeight;
    private int mMaxFrameRate;
    private long mMaxMacroBlockRate;
    private int mWidth;

    static void <clinit>()
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;

        $r0 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(720, 480, 24);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_24> = $r0;

        $r1 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(720, 576, 25);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_25> = $r1;

        $r2 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r2.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(720, 480, 30);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_30> = $r2;

        $r3 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r3.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(720, 480, 48);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_48> = $r3;

        $r4 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r4.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(720, 576, 50);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_50> = $r4;

        $r5 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r5.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(720, 480, 60);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint SD_60> = $r5;

        $r6 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r6.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1280, 720, 24);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_24> = $r6;

        $r7 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r7.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1280, 720, 25);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_25> = $r7;

        $r8 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r8.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1280, 720, 30);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_30> = $r8;

        $r9 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r9.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1280, 720, 50);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_50> = $r9;

        $r10 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r10.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1280, 720, 60);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_60> = $r10;

        $r11 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r11.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1280, 720, 100);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_100> = $r11;

        $r12 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r12.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1280, 720, 120);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_120> = $r12;

        $r13 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r13.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1280, 720, 200);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_200> = $r13;

        $r14 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r14.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1280, 720, 240);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint HD_240> = $r14;

        $r15 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r15.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1920, 1080, 24);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_24> = $r15;

        $r16 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r16.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1920, 1080, 25);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_25> = $r16;

        $r17 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r17.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1920, 1080, 30);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_30> = $r17;

        $r18 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r18.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1920, 1080, 50);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_50> = $r18;

        $r19 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r19.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1920, 1080, 60);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_60> = $r19;

        $r20 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r20.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1920, 1080, 100);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_100> = $r20;

        $r21 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r21.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1920, 1080, 120);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_120> = $r21;

        $r22 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r22.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1920, 1080, 200);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_200> = $r22;

        $r23 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r23.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(1920, 1080, 240);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint FHD_240> = $r23;

        $r24 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r24.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(3840, 2160, 24);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_24> = $r24;

        $r25 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r25.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(3840, 2160, 25);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_25> = $r25;

        $r26 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r26.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(3840, 2160, 30);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_30> = $r26;

        $r27 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r27.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(3840, 2160, 50);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_50> = $r27;

        $r28 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r28.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(3840, 2160, 60);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_60> = $r28;

        $r29 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r29.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(3840, 2160, 100);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_100> = $r29;

        $r30 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r30.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(3840, 2160, 120);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_120> = $r30;

        $r31 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r31.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(3840, 2160, 200);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_200> = $r31;

        $r32 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r32.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>(3840, 2160, 240);

        <android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint UHD_240> = $r32;

        return;
    }

    public void <init>(int, int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0;
        int i0, i1, i2;
        android.util.Size $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = new android.util.Size;

        specialinvoke $r1.<android.util.Size: void <init>(int,int)>(16, 16);

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int,int,android.util.Size)>(i0, i1, i2, i2, $r1);

        return;
    }

    public void <init>(int, int, int, int, android.util.Size)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0;
        int i0, i1, i2, i3, $i4, $i6, $i8, $i9, $i10, $i11, $i14, $i15, $i18, $i21, $i24, $i25, $i28, $i31, $i32, $i33, $i34, $i35, $i36;
        android.util.Size r1, $r2, $r3, $r4;
        long $l12, $l13, $l16, $l17, $l19, $l20, $l22, $l23, $l26, $l27, $l29, $l30, $l37;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: android.util.Size;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i4 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        staticinvoke <android.media.MediaCodecInfo: int access$200(int,java.lang.String)>($i4, "block width");

        $i6 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        staticinvoke <android.media.MediaCodecInfo: int access$200(int,java.lang.String)>($i6, "block height");

        $r2 = new android.util.Size;

        $i8 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i9 = staticinvoke <android.media.Utils: int divUp(int,int)>($i8, 16);

        $i10 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i11 = staticinvoke <android.media.Utils: int divUp(int,int)>($i10, 16);

        specialinvoke $r2.<android.util.Size: void <init>(int,int)>($i9, $i11);

        r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize> = $r2;

        $l12 = (long) i0;

        $l13 = staticinvoke <java.lang.Math: long max(long,long)>(1L, $l12);

        $i14 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i15 = staticinvoke <java.lang.Math: int max(int,int)>($i14, 16);

        $l16 = (long) $i15;

        $l17 = staticinvoke <android.media.Utils: long divUp(long,long)>($l13, $l16);

        $r3 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize>;

        $i18 = virtualinvoke $r3.<android.util.Size: int getWidth()>();

        $l19 = (long) $i18;

        $l20 = $l17 * $l19;

        $i21 = (int) $l20;

        r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mWidth> = $i21;

        $l22 = (long) i1;

        $l23 = staticinvoke <java.lang.Math: long max(long,long)>(1L, $l22);

        $i24 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i25 = staticinvoke <java.lang.Math: int max(int,int)>($i24, 16);

        $l26 = (long) $i25;

        $l27 = staticinvoke <android.media.Utils: long divUp(long,long)>($l23, $l26);

        $r4 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize>;

        $i28 = virtualinvoke $r4.<android.util.Size: int getHeight()>();

        $l29 = (long) $i28;

        $l30 = $l27 * $l29;

        $i31 = (int) $l30;

        r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mHeight> = $i31;

        $i32 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i3);

        $i33 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i32);

        r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mMaxFrameRate> = $i33;

        $i34 = staticinvoke <java.lang.Math: int max(int,int)>(1, i2);

        $i35 = virtualinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        $i36 = $i34 * $i35;

        $l37 = (long) $i36;

        r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long mMaxMacroBlockRate> = $l37;

        return;
    }

    public void <init>(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint, android.util.Size)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0, r1;
        android.util.Size r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        long $l4, $l6, $l7;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        r1 := @parameter0: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        r2 := @parameter1: android.util.Size;

        $i0 = r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mWidth>;

        $i2 = $i0 * 16;

        $i1 = r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mHeight>;

        $i3 = $i1 * 16;

        $l4 = r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long mMaxMacroBlockRate>;

        $i5 = virtualinvoke r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        $l6 = (long) $i5;

        $l7 = staticinvoke <android.media.Utils: long divUp(long,long)>($l4, $l6);

        $i8 = (int) $l7;

        $i9 = r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mMaxFrameRate>;

        $r3 = new android.util.Size;

        $i10 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        $r4 = r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize>;

        $i11 = virtualinvoke $r4.<android.util.Size: int getWidth()>();

        $i12 = $i11 * 16;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i12);

        $i14 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        $r5 = r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize>;

        $i15 = virtualinvoke $r5.<android.util.Size: int getHeight()>();

        $i16 = $i15 * 16;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i16);

        specialinvoke $r3.<android.util.Size: void <init>(int,int)>($i13, $i17);

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int,int,android.util.Size)>($i2, $i3, $i8, $i9, $r3);

        return;
    }

    private int align(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0;
        int i0, i1, $i2, $i3;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.media.Utils: int divUp(int,int)>(i0, i1);

        $i3 = $i2 * i1;

        return $i3;
    }

    private void checkPowerOfTwo2(int, java.lang.String)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if i0 == 0 goto label1;

        $i1 = i0 - 1;

        $i2 = $i1 & i0;

        if $i2 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must be a power of 2");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private android.util.Size getCommonBlockSize(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0, r1;
        android.util.Size $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        r1 := @parameter0: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        $r2 = new android.util.Size;

        $r3 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize>;

        $i0 = virtualinvoke $r3.<android.util.Size: int getWidth()>();

        $r4 = r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize>;

        $i1 = virtualinvoke $r4.<android.util.Size: int getWidth()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i3 = $i2 * 16;

        $r5 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize>;

        $i4 = virtualinvoke $r5.<android.util.Size: int getHeight()>();

        $r6 = r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize>;

        $i5 = virtualinvoke $r6.<android.util.Size: int getHeight()>();

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        $i7 = $i6 * 16;

        specialinvoke $r2.<android.util.Size: void <init>(int,int)>($i3, $i7);

        return $r2;
    }

    private int saturateLongToInt(long)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0;
        long l0;
        byte $b1, $b2;
        int $i3;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        l0 := @parameter0: long;

        $b1 = l0 cmp -2147483648L;

        if $b1 >= 0 goto label1;

        return -2147483648;

     label1:
        $b2 = l0 cmp 2147483647L;

        if $b2 <= 0 goto label2;

        return 2147483647;

     label2:
        $i3 = (int) l0;

        return $i3;
    }

    public boolean covers(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0, $r3, $r4, r5;
        android.util.Size r1;
        int $i0, $i1, $i2, $i3;
        long $l4, $l5;
        byte $b6;
        boolean z0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        r5 := @parameter0: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        r1 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size getCommonBlockSize(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint)>(r5);

        $r3 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r3.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint,android.util.Size)>(r0, r1);

        $r4 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r4.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint,android.util.Size)>(r5, r1);

        $i0 = virtualinvoke $r3.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        $i1 = virtualinvoke $r4.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        if $i0 < $i1 goto label1;

        $i3 = $r3.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mMaxFrameRate>;

        $i2 = $r4.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mMaxFrameRate>;

        if $i3 < $i2 goto label1;

        $l5 = $r3.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long mMaxMacroBlockRate>;

        $l4 = $r4.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long mMaxMacroBlockRate>;

        $b6 = $l5 cmp $l4;

        if $b6 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean covers(android.media.MediaFormat)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0, $r2;
        android.media.MediaFormat r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        float $f0;
        boolean $z0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        r1 := @parameter0: android.media.MediaFormat;

        $r2 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        $i0 = virtualinvoke r1.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("width", 0);

        $i1 = virtualinvoke r1.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("height", 0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r4 = virtualinvoke r1.<android.media.MediaFormat: java.lang.Number getNumber(java.lang.String,java.lang.Number)>("frame-rate", $r3);

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f0 = (float) $d1;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        specialinvoke $r2.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int)>($i0, $i1, $i2);

        $z0 = virtualinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: boolean covers(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint)>($r2);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0, $r2, $r3, r5;
        android.util.Size r1;
        int $i0, $i1, $i2, $i3;
        long $l4, $l5;
        byte $b6;
        java.lang.Object r4;
        boolean z1, z2;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        r4 := @parameter0: java.lang.Object;

        z1 = r4 instanceof android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        if z1 == 0 goto label2;

        r5 = (android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint) r4;

        r1 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size getCommonBlockSize(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint)>(r5);

        $r2 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r2.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint,android.util.Size)>(r0, r1);

        $r3 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        specialinvoke $r3.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint,android.util.Size)>(r5, r1);

        z2 = 0;

        $i0 = virtualinvoke $r2.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        $i1 = virtualinvoke $r3.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        if $i0 != $i1 goto label1;

        z2 = 0;

        $i3 = $r2.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mMaxFrameRate>;

        $i2 = $r3.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mMaxFrameRate>;

        if $i3 != $i2 goto label1;

        z2 = 0;

        $l5 = $r2.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long mMaxMacroBlockRate>;

        $l4 = $r3.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long mMaxMacroBlockRate>;

        $b6 = $l5 cmp $l4;

        if $b6 != 0 goto label1;

        z2 = 1;

     label1:
        return z2;

     label2:
        return 0;
    }

    public int getMaxFrameRate()
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0;
        int $i0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mMaxFrameRate>;

        return $i0;
    }

    public long getMaxMacroBlockRate()
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0;
        long $l0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        $l0 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long mMaxMacroBlockRate>;

        return $l0;
    }

    public int getMaxMacroBlocks()
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0;
        int $i0, $i1, $i5;
        long $l2, $l3, $l4;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mWidth>;

        $l3 = (long) $i0;

        $i1 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mHeight>;

        $l2 = (long) $i1;

        $l4 = $l3 * $l2;

        $i5 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int saturateLongToInt(long)>($l4);

        return $i5;
    }

    public int hashCode()
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0;
        int $i0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mMaxFrameRate>;

        return $i0;
    }

    public java.lang.String toString()
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0;
        int i0, i1, i2, $i3, $i4, $i6, $i9, $i10, $i11, $i12, $i13, $i14;
        android.util.Size $r1, $r2;
        long $l5, $l7, $l8;
        java.lang.StringBuilder $r3, $r9, $r19, $r30;
        java.lang.String r25, r26, r28, $r32;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize>;

        $i3 = virtualinvoke $r1.<android.util.Size: int getWidth()>();

        i0 = $i3 * 16;

        $r2 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: android.util.Size mBlockSize>;

        $i4 = virtualinvoke $r2.<android.util.Size: int getHeight()>();

        i1 = $i4 * 16;

        $l5 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long mMaxMacroBlockRate>;

        $i6 = virtualinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        $l7 = (long) $i6;

        $l8 = staticinvoke <android.media.Utils: long divUp(long,long)>($l5, $l7);

        i2 = (int) $l8;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i9 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mWidth>;

        $i10 = $i9 * 16;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i11 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mHeight>;

        $i12 = $i11 * 16;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        r25 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = r25;

        $i13 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mMaxFrameRate>;

        if i2 >= $i13 goto label1;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max ");

        $i14 = r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int mMaxFrameRate>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fps");

        r26 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if i0 > 16 goto label2;

        r28 = r26;

        if i1 <= 16 goto label3;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blocks");

        r28 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PerformancePoint(");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r32;
    }
}
