public final class android.media.MediaCodecInfo$VideoCapabilities extends java.lang.Object
{
    private static final java.lang.String TAG;
    private boolean mAllowMbOverride;
    private android.util.Range mAspectRatioRange;
    private android.util.Range mBitrateRange;
    private android.util.Range mBlockAspectRatioRange;
    private android.util.Range mBlockCountRange;
    private int mBlockHeight;
    private int mBlockWidth;
    private android.util.Range mBlocksPerSecondRange;
    private android.util.Range mFrameRateRange;
    private int mHeightAlignment;
    private android.util.Range mHeightRange;
    private android.util.Range mHorizontalBlockRange;
    private java.util.Map mMeasuredFrameRates;
    private android.media.MediaCodecInfo$CodecCapabilities mParent;
    private java.util.List mPerformancePoints;
    private int mSmallerDimensionUpperLimit;
    private android.util.Range mVerticalBlockRange;
    private int mWidthAlignment;
    private android.util.Range mWidthRange;

    private void <init>()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void applyAlignment(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.util.Range $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <android.media.MediaCodecInfo: int access$200(int,java.lang.String)>(i0, "widthAlignment must be a power of two");

        staticinvoke <android.media.MediaCodecInfo: int access$200(int,java.lang.String)>(i1, "heightAlignment must be a power of two");

        $i4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        if i0 > $i4 goto label1;

        $i9 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        if i1 <= $i9 goto label2;

     label1:
        $i5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i5);

        $i7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i7);

        $r1 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$000()>();

        $r2 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$600()>();

        $r3 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$700()>();

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyBlockLimits(int,int,android.util.Range,android.util.Range,android.util.Range)>($i6, $i8, $r1, $r2, $r3);

     label2:
        $i10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i10);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment> = $i11;

        $i12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i12);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment> = $i13;

        $r4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $i14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $r5 = staticinvoke <android.media.Utils: android.util.Range alignRange(android.util.Range,int)>($r4, $i14);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r5;

        $r6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $i15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $r7 = staticinvoke <android.media.Utils: android.util.Range alignRange(android.util.Range,int)>($r6, $i15);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r7;

        return;
    }

    private void applyBlockLimits(int, int, android.util.Range, android.util.Range, android.util.Range)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27;
        android.util.Range r1, r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, r20, r21, r22;
        long $l14, $l17;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.util.Range;

        r2 := @parameter3: android.util.Range;

        r3 := @parameter4: android.util.Range;

        staticinvoke <android.media.MediaCodecInfo: int access$200(int,java.lang.String)>(i0, "blockWidth must be a power of two");

        staticinvoke <android.media.MediaCodecInfo: int access$200(int,java.lang.String)>(i1, "blockHeight must be a power of two");

        $i6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i6);

        $i7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i7);

        $i9 = i2 * i3;

        $i8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i11 = $i9 / $i8;

        $i10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        i26 = $i11 / $i10;

        if i26 == 1 goto label1;

        $r10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r11 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>($r10, i26);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r11;

        $r12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $l17 = (long) i26;

        $r13 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,long)>($r12, $l17);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r13;

        $r14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $i18 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i21 = i3 / $i18;

        $i19 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i20 = i2 / $i19;

        $r15 = staticinvoke <android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>($r14, $i21, $i20);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r15;

        $r16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $i22 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i23 = i2 / $i22;

        $r17 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>($r16, $i23);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange> = $r17;

        $r18 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $i24 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i25 = i3 / $i24;

        $r19 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>($r18, $i25);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange> = $r19;

     label1:
        $i12 = i2 * i3;

        $i13 = $i12 / i0;

        i27 = $i13 / i1;

        r20 = r1;

        r21 = r2;

        r22 = r3;

        if i27 == 1 goto label2;

        r20 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>(r1, i27);

        $l14 = (long) i27;

        r21 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,long)>(r2, $l14);

        $i16 = i3 / i1;

        $i15 = i2 / i0;

        r22 = staticinvoke <android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>(r3, $i16, $i15);

     label2:
        $r4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r5 = virtualinvoke $r4.<android.util.Range: android.util.Range intersect(android.util.Range)>(r20);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r5;

        $r6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r7 = virtualinvoke $r6.<android.util.Range: android.util.Range intersect(android.util.Range)>(r21);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r7;

        $r8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r9 = virtualinvoke $r8.<android.util.Range: android.util.Range intersect(android.util.Range)>(r22);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r9;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth> = i2;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight> = i3;

        return;
    }

    private void applyLevelLimits()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        java.lang.Integer r2, $r57, $r77, $r78, $r109, $r110, r167, $r225;
        int i0, $i2, $i4, $i6, $i8, $i9, $i10, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i43, $i44, $i45, $i46, $i47, $i49, $i51, $i52, $i54, $i56, $i58, $i59, $i60, $i62, $i63, $i66, $i68, $i71, $i73, i75, i76, i77, i79, i81, i82, i83, i84, i85, i86, i87, i89, $i90, i92, i93, i95, i96, i98, i99, i100, i101, i102, i104, i105, i107, $i111, i112, i114, i116, i118, i119, i120, i121, i122, i123, i125, i130, i131, i133, i134, i135, i136, i137, i139, i141, i142, i143, i144, i145, i146, i148, i150, i151, i152, i153, i157, i158, i160, i161, i162, $i163, i165, i166, i167, i168, i170, i171, i172, i175, i176, $i177, i178, i180, i181, i182, i183, i185, i186, i187, i188, i189, $i190, $i192, i193, i195, i196, i197, i199, i200, i201, i202, i204, i206, $i207, i208, $i209, $i210;
        android.media.MediaCodecInfo$CodecCapabilities $r3, $r4, r227;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z10, z11, z12, z13, z14, z15, z16;
        java.lang.StringBuilder $r5, $r9, $r15, $r21, $r27, $r33, $r39, $r45, $r51, $r62, $r68, $r80, $r88, $r94, $r102, $r112, $r120, $r132, $r142, $r148, $r164, $r176;
        java.lang.String $r8, $r14, $r20, $r26, $r32, $r38, $r44, $r50, $r56, $r67, $r75, $r87, $r93, $r101, $r107, $r119, $r127, $r137, $r147, $r153, r155, $r166, $r178;
        long $l3, $l15, $l25, $l42, $l57, $l69, l80, l103, l115, l147, l164, l174, l179, $l191, l194, l205;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8;
        android.util.Range $r58, $r61, $r76, $r79, $r108, $r111, $r226;
        android.util.Rational $r59, $r60;
        android.media.MediaCodecInfo$CodecProfileLevel[] r154;
        byte b78, b88, b91, b94, b97, b108, b109, b110, b113, b117, b124, b126, b129, b132, b138, b140, b154, b155, b156, b169, b184, b198;
        android.media.MediaCodecInfo$CodecProfileLevel r161, r174, r191, r202, r207, r211, r214, r221;
        short s106, s127, s128, s149, s173, s203;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r3 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent>;

        r154 = $r3.<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaCodecInfo$CodecProfileLevel[] profileLevels>;

        $r4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent>;

        r155 = virtualinvoke $r4.<android.media.MediaCodecInfo$CodecCapabilities: java.lang.String getMimeType()>();

        z7 = virtualinvoke r155.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/avc");

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        if z7 == 0 goto label031;

        i75 = lengthof r154;

        i76 = 99;

        i77 = 64000;

        b78 = 4;

        i79 = 396;

        l80 = 1485L;

        i81 = 0;

     label001:
        if i81 >= i75 goto label030;

        r161 = r154[i81];

        i82 = r161.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        if i82 == 1 goto label022;

        if i82 == 2 goto label021;

        lookupswitch(i82)
        {
            case 4: goto label020;
            case 8: goto label019;
            case 16: goto label018;
            case 32: goto label017;
            case 64: goto label016;
            case 128: goto label015;
            case 256: goto label014;
            case 512: goto label013;
            case 1024: goto label012;
            case 2048: goto label011;
            case 4096: goto label010;
            case 8192: goto label009;
            case 16384: goto label008;
            case 32768: goto label007;
            case 65536: goto label006;
            case 131072: goto label005;
            case 262144: goto label004;
            case 524288: goto label003;
            default: goto label002;
        };

     label002:
        $r148 = new java.lang.StringBuilder;

        specialinvoke $r148.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized level ");

        $i73 = r161.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i73);

        virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r153 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r153);

        b78 = b78 | 1;

        i83 = 0;

        i84 = 0;

        i85 = 0;

        i86 = 0;

        goto label023;

     label003:
        i83 = 16711680;

        i84 = 139264;

        i85 = 800000;

        i86 = 696320;

        goto label023;

     label004:
        i83 = 8355840;

        i84 = 139264;

        i85 = 480000;

        i86 = 696320;

        goto label023;

     label005:
        i83 = 4177920;

        i84 = 139264;

        i85 = 240000;

        i86 = 696320;

        goto label023;

     label006:
        i83 = 2073600;

        i84 = 36864;

        i85 = 240000;

        i86 = 184320;

        goto label023;

     label007:
        i83 = 983040;

        i84 = 36864;

        i85 = 240000;

        i86 = 184320;

        goto label023;

     label008:
        i83 = 589824;

        i84 = 22080;

        i85 = 135000;

        i86 = 110400;

        goto label023;

     label009:
        i83 = 522240;

        i84 = 8704;

        i85 = 50000;

        i86 = 34816;

        goto label023;

     label010:
        i83 = 245760;

        i84 = 8192;

        i85 = 50000;

        i86 = 32768;

        goto label023;

     label011:
        i83 = 245760;

        i84 = 8192;

        i85 = 20000;

        i86 = 32768;

        goto label023;

     label012:
        i83 = 216000;

        i84 = 5120;

        i85 = 20000;

        i86 = 20480;

        goto label023;

     label013:
        i83 = 108000;

        i84 = 3600;

        i85 = 14000;

        i86 = 18000;

        goto label023;

     label014:
        i83 = 40500;

        i84 = 1620;

        i85 = 10000;

        i86 = 8100;

        goto label023;

     label015:
        i83 = 20250;

        i84 = 1620;

        i85 = 4000;

        i86 = 8100;

        goto label023;

     label016:
        i83 = 19800;

        i84 = 792;

        i85 = 4000;

        i86 = 4752;

        goto label023;

     label017:
        i83 = 11880;

        i84 = 396;

        i85 = 2000;

        i86 = 2376;

        goto label023;

     label018:
        i83 = 11880;

        i84 = 396;

        i85 = 768;

        i86 = 2376;

        goto label023;

     label019:
        i83 = 6000;

        i84 = 396;

        i85 = 384;

        i86 = 2376;

        goto label023;

     label020:
        i83 = 3000;

        i84 = 396;

        i85 = 192;

        i86 = 900;

        goto label023;

     label021:
        i83 = 1485;

        i84 = 99;

        i85 = 128;

        i86 = 396;

        goto label023;

     label022:
        i83 = 1485;

        i84 = 99;

        i85 = 64;

        i86 = 396;

     label023:
        i87 = r161.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        b88 = b78;

        z10 = 1;

        if i87 == 1 goto label027;

        b88 = b78;

        z10 = 1;

        if i87 == 2 goto label027;

        if i87 == 4 goto label026;

        if i87 == 8 goto label025;

        if i87 == 16 goto label024;

        if i87 == 32 goto label026;

        if i87 == 64 goto label026;

        b88 = b78;

        z10 = 1;

        if i87 == 65536 goto label027;

        if i87 == 524288 goto label025;

        $r142 = new java.lang.StringBuilder;

        specialinvoke $r142.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i71 = r161.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i71);

        virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r147 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r147);

        b78 = b78 | 1;

        i89 = i85 * 1000;

        z10 = 1;

        goto label028;

     label024:
        i89 = i85 * 3000;

        z10 = 1;

        goto label028;

     label025:
        i89 = i85 * 1250;

        z10 = 1;

        goto label028;

     label026:
        $r164 = new java.lang.StringBuilder;

        specialinvoke $r164.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported profile ");

        $i90 = r161.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i90);

        virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r166 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r166);

        b88 = b78 | 2;

        z10 = 0;

     label027:
        i89 = i85 * 1000;

        b78 = b88;

     label028:
        b91 = b78;

        if z10 == 0 goto label029;

        b91 = b78 & -5;

     label029:
        $l69 = (long) i83;

        l80 = staticinvoke <java.lang.Math: long max(long,long)>($l69, l80);

        i76 = staticinvoke <java.lang.Math: int max(int,int)>(i84, i76);

        i77 = staticinvoke <java.lang.Math: int max(int,int)>(i89, i77);

        i79 = staticinvoke <java.lang.Math: int max(int,int)>(i79, i86);

        i81 = i81 + 1;

        b78 = b91;

        goto label001;

     label030:
        $i68 = i76 * 8;

        $d4 = (double) $i68;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        i92 = (int) $d5;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(i92, i92, i76, l80, 16, 16, 1, 1);

        i93 = i77;

        r167 = r2;

        b94 = b78;

        goto label163;

     label031:
        z11 = virtualinvoke r155.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/mpeg2");

        if z11 == 0 goto label045;

        i95 = lengthof r154;

        i96 = 0;

        b97 = 4;

        i98 = 99;

        i99 = 9;

        i100 = 64000;

        i101 = 11;

        i102 = 15;

        l103 = 1485L;

     label032:
        if i96 >= i95 goto label044;

        r174 = r154[i96];

        z12 = 1;

        i104 = r174.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        if i104 == 0 goto label040;

        if i104 == 1 goto label034;

        if i104 == 2 goto label033;

        if i104 == 3 goto label033;

        if i104 == 4 goto label033;

        if i104 == 5 goto label033;

        $r132 = new java.lang.StringBuilder;

        specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i66 = r174.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i66);

        virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r137 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r137);

        b97 = b97 | 1;

        i105 = 0;

        s106 = 0;

        i107 = 0;

        b108 = 0;

        b109 = 0;

        b110 = 0;

        goto label042;

     label033:
        $r176 = new java.lang.StringBuilder;

        specialinvoke $r176.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported profile ");

        $i111 = r174.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i111);

        virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r178 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VideoCapabilities", $r178);

        b97 = b97 | 2;

        z12 = 0;

        i105 = 0;

        s106 = 0;

        i107 = 0;

        b108 = 0;

        b109 = 0;

        b110 = 0;

        goto label042;

     label034:
        i112 = r174.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        if i112 == 0 goto label039;

        if i112 == 1 goto label038;

        if i112 == 2 goto label037;

        if i112 == 3 goto label036;

        if i112 == 4 goto label035;

        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile/level ");

        $i62 = r174.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i62);

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i63 = r174.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i63);

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r127 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r127);

        b97 = b97 | 1;

        i105 = 0;

        s106 = 0;

        i107 = 0;

        b108 = 0;

        b109 = 0;

        b110 = 0;

        goto label042;

     label035:
        i105 = 489600;

        s106 = 8160;

        i107 = 80000;

        b108 = 60;

        b109 = 120;

        b110 = 68;

        goto label042;

     label036:
        i105 = 244800;

        s106 = 8160;

        i107 = 80000;

        b108 = 60;

        b109 = 120;

        b110 = 68;

        goto label042;

     label037:
        i105 = 183600;

        s106 = 6120;

        i107 = 60000;

        b108 = 60;

        b109 = 90;

        b110 = 68;

        goto label042;

     label038:
        i105 = 40500;

        s106 = 1620;

        i107 = 15000;

        b108 = 30;

        b109 = 45;

        b110 = 36;

        goto label042;

     label039:
        i105 = 11880;

        s106 = 396;

        i107 = 4000;

        b108 = 30;

        b109 = 22;

        b110 = 18;

        goto label042;

     label040:
        $i56 = r174.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        if $i56 == 1 goto label041;

        $r112 = new java.lang.StringBuilder;

        specialinvoke $r112.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile/level ");

        $i59 = r174.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i59);

        virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i60 = r174.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i60);

        virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r119 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r119);

        b97 = b97 | 1;

        i105 = 0;

        s106 = 0;

        i107 = 0;

        b108 = 0;

        b109 = 0;

        b110 = 0;

        goto label042;

     label041:
        i105 = 40500;

        s106 = 1620;

        i107 = 15000;

        b108 = 30;

        b109 = 45;

        b110 = 36;

     label042:
        b113 = b97;

        if z12 == 0 goto label043;

        b113 = b97 & -5;

     label043:
        $l57 = (long) i105;

        l103 = staticinvoke <java.lang.Math: long max(long,long)>($l57, l103);

        i98 = staticinvoke <java.lang.Math: int max(int,int)>(s106, i98);

        $i58 = i107 * 1000;

        i100 = staticinvoke <java.lang.Math: int max(int,int)>($i58, i100);

        i101 = staticinvoke <java.lang.Math: int max(int,int)>(b109, i101);

        i99 = staticinvoke <java.lang.Math: int max(int,int)>(b110, i99);

        i102 = staticinvoke <java.lang.Math: int max(int,int)>(b108, i102);

        i96 = i96 + 1;

        b97 = b113;

        goto label032;

     label044:
        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(i101, i99, i98, l103, 16, 16, 1, 1);

        $r108 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r110 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i102);

        $r111 = virtualinvoke $r108.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r109, $r110);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r111;

        i93 = i100;

        r167 = r2;

        b94 = b97;

        goto label163;

     label045:
        $z0 = virtualinvoke r155.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/mp4v-es");

        if $z0 == 0 goto label070;

        i114 = lengthof r154;

        l115 = 1485L;

        i116 = 0;

        b117 = 4;

        i118 = 11;

        i119 = 9;

        i120 = 64000;

        i121 = 15;

        i122 = 99;

     label046:
        if i116 >= i114 goto label069;

        r191 = r154[i116];

        z13 = 0;

        z14 = 1;

        i123 = r191.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        if i123 == 1 goto label056;

        if i123 == 2 goto label055;

        lookupswitch(i123)
        {
            case 4: goto label055;
            case 8: goto label055;
            case 16: goto label055;
            case 32: goto label055;
            case 64: goto label055;
            case 128: goto label055;
            case 256: goto label055;
            case 512: goto label055;
            case 1024: goto label055;
            case 2048: goto label055;
            case 4096: goto label055;
            case 8192: goto label055;
            case 16384: goto label055;
            case 32768: goto label048;
            default: goto label047;
        };

     label047:
        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i54 = r191.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i54);

        virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r107 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r107);

        b117 = b117 | 1;

        b124 = 0;

        i125 = 0;

        b126 = 0;

        s127 = 0;

        s128 = 0;

        b129 = 0;

        goto label065;

     label048:
        i130 = r191.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        if i130 == 1 goto label054;

        if i130 == 4 goto label054;

        if i130 == 8 goto label053;

        if i130 == 16 goto label052;

        if i130 == 24 goto label051;

        if i130 == 32 goto label050;

        if i130 == 128 goto label049;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile/level ");

        $i51 = r191.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i52 = r191.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i52);

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r101 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r101);

        b117 = b117 | 1;

        s127 = 0;

        b124 = 0;

        i125 = 0;

        s128 = 0;

        b126 = 0;

        b129 = 0;

        goto label065;

     label049:
        i125 = 48600;

        s127 = 1620;

        b124 = 30;

        s128 = 8000;

        b126 = 36;

        b129 = 45;

        goto label065;

     label050:
        i125 = 23760;

        s127 = 792;

        b124 = 30;

        s128 = 3000;

        b126 = 36;

        b129 = 44;

        goto label065;

     label051:
        i125 = 11880;

        s127 = 396;

        b124 = 30;

        s128 = 1500;

        b126 = 18;

        b129 = 22;

        goto label065;

     label052:
        i125 = 11880;

        s127 = 396;

        b124 = 30;

        s128 = 768;

        b126 = 18;

        b129 = 22;

        goto label065;

     label053:
        i125 = 5940;

        s127 = 396;

        b124 = 30;

        s128 = 384;

        b126 = 18;

        b129 = 22;

        goto label065;

     label054:
        i125 = 2970;

        s127 = 99;

        b124 = 30;

        s128 = 128;

        b126 = 9;

        b129 = 11;

        goto label065;

     label055:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported profile ");

        $i49 = r191.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i49);

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r93 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VideoCapabilities", $r93);

        b117 = b117 | 2;

        z14 = 0;

        s127 = 0;

        b124 = 0;

        i125 = 0;

        s128 = 0;

        b126 = 0;

        b129 = 0;

        goto label065;

     label056:
        i131 = r191.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        if i131 == 1 goto label064;

        if i131 == 2 goto label063;

        if i131 == 4 goto label062;

        if i131 == 8 goto label061;

        if i131 == 16 goto label060;

        if i131 == 64 goto label059;

        if i131 == 128 goto label058;

        if i131 == 256 goto label057;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile/level ");

        $i46 = r191.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i46);

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i47 = r191.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i47);

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r87 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r87);

        b117 = b117 | 1;

        s127 = 0;

        b124 = 0;

        i125 = 0;

        s128 = 0;

        b126 = 0;

        b129 = 0;

        goto label065;

     label057:
        i125 = 108000;

        s127 = 3600;

        b124 = 30;

        s128 = 12000;

        b126 = 45;

        b129 = 80;

        goto label065;

     label058:
        i125 = 40500;

        s127 = 1620;

        b124 = 30;

        s128 = 8000;

        b126 = 36;

        b129 = 45;

        goto label065;

     label059:
        i125 = 36000;

        s127 = 1200;

        b124 = 30;

        s128 = 4000;

        b126 = 30;

        b129 = 40;

        goto label065;

     label060:
        i125 = 11880;

        s127 = 396;

        b124 = 30;

        s128 = 384;

        b126 = 18;

        b129 = 22;

        goto label065;

     label061:
        i125 = 5940;

        s127 = 396;

        b124 = 30;

        s128 = 128;

        b126 = 18;

        b129 = 22;

        goto label065;

     label062:
        i125 = 1485;

        s127 = 99;

        b124 = 30;

        s128 = 64;

        b126 = 9;

        b129 = 11;

        goto label065;

     label063:
        z13 = 1;

        i125 = 1485;

        s127 = 99;

        b124 = 15;

        s128 = 128;

        b126 = 9;

        b129 = 11;

        goto label065;

     label064:
        z13 = 1;

        i125 = 1485;

        s127 = 99;

        b124 = 15;

        s128 = 64;

        b126 = 9;

        b129 = 11;

     label065:
        b132 = b117;

        if z14 == 0 goto label066;

        b132 = b117 & -5;

     label066:
        $l42 = (long) i125;

        l115 = staticinvoke <java.lang.Math: long max(long,long)>($l42, l115);

        i122 = staticinvoke <java.lang.Math: int max(int,int)>(s127, i122);

        $i43 = s128 * 1000;

        i120 = staticinvoke <java.lang.Math: int max(int,int)>($i43, i120);

        if z13 == 0 goto label067;

        i133 = staticinvoke <java.lang.Math: int max(int,int)>(b129, i118);

        i134 = staticinvoke <java.lang.Math: int max(int,int)>(b126, i119);

        i135 = staticinvoke <java.lang.Math: int max(int,int)>(b124, i121);

        goto label068;

     label067:
        $i44 = s127 * 2;

        $d2 = (double) $i44;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        i136 = (int) $d3;

        i133 = staticinvoke <java.lang.Math: int max(int,int)>(i136, i118);

        i134 = staticinvoke <java.lang.Math: int max(int,int)>(i136, i119);

        $i45 = staticinvoke <java.lang.Math: int max(int,int)>(b124, 60);

        i135 = staticinvoke <java.lang.Math: int max(int,int)>($i45, i121);

     label068:
        i116 = i116 + 1;

        i121 = i135;

        i118 = i133;

        i119 = i134;

        b117 = b132;

        goto label046;

     label069:
        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(i118, i119, i122, l115, 16, 16, 1, 1);

        $r76 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r77 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i121);

        $r79 = virtualinvoke $r76.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r77, $r78);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r79;

        i93 = i120;

        r167 = r2;

        b94 = b117;

        goto label163;

     label070:
        $z1 = virtualinvoke r155.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/3gpp");

        if $z1 == 0 goto label090;

        i137 = lengthof r154;

        b138 = 4;

        i139 = 15;

        b140 = 16;

        i141 = 11;

        i142 = 9;

        i143 = 64000;

        i144 = 11;

        i145 = 99;

        i146 = 9;

        l147 = 1485L;

        i148 = 0;

     label071:
        if i148 >= i137 goto label088;

        r202 = r154[i148];

        s149 = 0;

        i150 = i144;

        i151 = i146;

        z15 = 0;

        i152 = r202.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        if i152 == 1 goto label083;

        if i152 == 2 goto label082;

        if i152 == 4 goto label081;

        if i152 == 8 goto label080;

        if i152 == 16 goto label075;

        if i152 == 32 goto label074;

        if i152 == 64 goto label073;

        if i152 == 128 goto label072;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile/level ");

        $i39 = r202.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i40 = r202.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i40);

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r75 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r75);

        b138 = b138 | 1;

        i153 = 0;

        b154 = 0;

        b155 = 0;

        b156 = 0;

        goto label084;

     label072:
        i150 = 1;

        i151 = 1;

        s149 = 256;

        b140 = 4;

        $i38 = 45 * 36;

        i153 = $i38 * 50;

        b154 = 60;

        b155 = 45;

        b156 = 36;

        goto label084;

     label073:
        i150 = 1;

        i151 = 1;

        s149 = 128;

        b140 = 4;

        $i37 = 45 * 18;

        i153 = $i37 * 50;

        b154 = 60;

        b155 = 45;

        b156 = 18;

        goto label084;

     label074:
        i150 = 1;

        i151 = 1;

        s149 = 64;

        b140 = 4;

        $i36 = 22 * 18;

        i153 = $i36 * 50;

        b154 = 60;

        b155 = 22;

        b156 = 18;

        goto label084;

     label075:
        $i33 = r202.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        if $i33 == 1 goto label077;

        $i35 = r202.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        if $i35 != 4 goto label076;

        goto label077;

     label076:
        z16 = 0;

        goto label078;

     label077:
        z16 = 1;

     label078:
        z15 = z16;

        if z16 != 0 goto label079;

        i150 = 1;

        i151 = 1;

        b140 = 4;

     label079:
        s149 = 2;

        $i34 = 11 * 9;

        i153 = $i34 * 15;

        b154 = 15;

        b155 = 11;

        b156 = 9;

        goto label084;

     label080:
        z15 = 1;

        s149 = 32;

        $i32 = 22 * 18;

        i153 = $i32 * 30;

        b154 = 30;

        b155 = 22;

        b156 = 18;

        goto label084;

     label081:
        z15 = 1;

        s149 = 6;

        $i31 = 22 * 18;

        i153 = $i31 * 30;

        b154 = 30;

        b155 = 22;

        b156 = 18;

        goto label084;

     label082:
        z15 = 1;

        s149 = 2;

        $i30 = 22 * 18;

        i153 = $i30 * 15;

        b154 = 30;

        b155 = 22;

        b156 = 18;

        goto label084;

     label083:
        z15 = 1;

        s149 = 1;

        $i24 = 11 * 9;

        i153 = $i24 * 15;

        b154 = 15;

        b155 = 11;

        b156 = 9;

     label084:
        i0 = r202.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        if i0 == 1 goto label085;

        if i0 == 2 goto label085;

        if i0 == 4 goto label085;

        if i0 == 8 goto label085;

        if i0 == 16 goto label085;

        if i0 == 32 goto label085;

        if i0 == 64 goto label085;

        if i0 == 128 goto label085;

        if i0 == 256 goto label085;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i28 = r202.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r67 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r67);

        b138 = b138 | 1;

        goto label085;

     label085:
        if z15 == 0 goto label086;

        i157 = 11;

        i158 = 9;

        goto label087;

     label086:
        r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean mAllowMbOverride> = 1;

        i158 = i151;

        i157 = i150;

     label087:
        b138 = b138 & -5;

        $l25 = (long) i153;

        l147 = staticinvoke <java.lang.Math: long max(long,long)>($l25, l147);

        $i26 = b155 * b156;

        i145 = staticinvoke <java.lang.Math: int max(int,int)>($i26, i145);

        $i27 = 64000 * s149;

        i143 = staticinvoke <java.lang.Math: int max(int,int)>($i27, i143);

        i141 = staticinvoke <java.lang.Math: int max(int,int)>(b155, i141);

        i142 = staticinvoke <java.lang.Math: int max(int,int)>(b156, i142);

        i139 = staticinvoke <java.lang.Math: int max(int,int)>(b154, i139);

        i144 = staticinvoke <java.lang.Math: int min(int,int)>(i157, i144);

        i146 = staticinvoke <java.lang.Math: int min(int,int)>(i158, i146);

        i148 = i148 + 1;

        goto label071;

     label088:
        $z6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean mAllowMbOverride>;

        if $z6 != 0 goto label089;

        $r59 = new android.util.Rational;

        specialinvoke $r59.<android.util.Rational: void <init>(int,int)>(11, 9);

        $r60 = new android.util.Rational;

        specialinvoke $r60.<android.util.Rational: void <init>(int,int)>(11, 9);

        $r61 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r59, $r60);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r61;

     label089:
        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,int,int,long,int,int,int,int)>(i144, i146, i141, i142, i145, l147, 16, 16, b140, b140);

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i139);

        $r58 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>(r2, $r57);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r58;

        i93 = i143;

        b94 = b138;

        r167 = r2;

        goto label163;

     label090:
        $z2 = virtualinvoke r155.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/x-vnd.on2.vp8");

        if $z2 == 0 goto label095;

        i160 = lengthof r154;

        i161 = 0;

        b94 = 4;

     label091:
        if i161 >= i160 goto label094;

        r207 = r154[i161];

        i162 = r207.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        if i162 == 1 goto label092;

        if i162 == 2 goto label092;

        if i162 == 4 goto label092;

        if i162 == 8 goto label092;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized level ");

        $i22 = r207.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r56);

        b94 = b94 | 1;

        goto label092;

     label092:
        $i163 = r207.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        if $i163 == 1 goto label093;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i20 = r207.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r50);

        b94 = b94 | 1;

        goto label093;

     label093:
        b94 = b94 & -5;

        i161 = i161 + 1;

        goto label091;

     label094:
        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(32767, 32767, 2147483647, 2147483647L, 16, 16, 1, 1);

        i93 = 100000000;

        r167 = r2;

        goto label163;

     label095:
        $z3 = virtualinvoke r155.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/x-vnd.on2.vp9");

        if $z3 == 0 goto label115;

        l164 = 829440L;

        i165 = 36864;

        i166 = lengthof r154;

        i167 = 200000;

        i168 = 0;

        b169 = 4;

        i170 = 512;

     label096:
        if i168 >= i166 goto label114;

        r211 = r154[i168];

        i171 = r211.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        if i171 == 1 goto label111;

        if i171 == 2 goto label110;

        lookupswitch(i171)
        {
            case 4: goto label109;
            case 8: goto label108;
            case 16: goto label107;
            case 32: goto label106;
            case 64: goto label105;
            case 128: goto label104;
            case 256: goto label103;
            case 512: goto label102;
            case 1024: goto label101;
            case 2048: goto label100;
            case 4096: goto label099;
            case 8192: goto label098;
            default: goto label097;
        };

     label097:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized level ");

        $i18 = r211.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r44);

        b169 = b169 | 1;

        i172 = 0;

        s173 = 0;

        l174 = 0L;

        i175 = 0;

        goto label112;

     label098:
        i172 = 35651584;

        s173 = 16832;

        l174 = 4706009088L;

        i175 = 480000;

        goto label112;

     label099:
        i172 = 35651584;

        s173 = 16832;

        l174 = 2353004544L;

        i175 = 240000;

        goto label112;

     label100:
        i172 = 35651584;

        s173 = 16832;

        l174 = 1176502272L;

        i175 = 180000;

        goto label112;

     label101:
        i172 = 8912896;

        s173 = 8384;

        l174 = 1176502272L;

        i175 = 180000;

        goto label112;

     label102:
        i172 = 8912896;

        s173 = 8384;

        l174 = 588251136L;

        i175 = 120000;

        goto label112;

     label103:
        i172 = 8912896;

        s173 = 8384;

        l174 = 311951360L;

        i175 = 60000;

        goto label112;

     label104:
        i172 = 2228224;

        s173 = 4160;

        l174 = 160432128L;

        i175 = 30000;

        goto label112;

     label105:
        i172 = 2228224;

        s173 = 4160;

        l174 = 83558400L;

        i175 = 18000;

        goto label112;

     label106:
        i172 = 983040;

        s173 = 2752;

        l174 = 36864000L;

        i175 = 12000;

        goto label112;

     label107:
        i172 = 552960;

        s173 = 2048;

        l174 = 20736000L;

        i175 = 7200;

        goto label112;

     label108:
        i172 = 245760;

        s173 = 1344;

        l174 = 9216000L;

        i175 = 3600;

        goto label112;

     label109:
        i172 = 122880;

        s173 = 960;

        l174 = 4608000L;

        i175 = 1800;

        goto label112;

     label110:
        i172 = 73728;

        s173 = 768;

        l174 = 2764800L;

        i175 = 800;

        goto label112;

     label111:
        i172 = 36864;

        s173 = 512;

        l174 = 829440L;

        i175 = 200;

     label112:
        i176 = r211.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        if i176 == 1 goto label113;

        if i176 == 2 goto label113;

        if i176 == 4 goto label113;

        if i176 == 8 goto label113;

        if i176 == 4096 goto label113;

        if i176 == 8192 goto label113;

        if i176 == 16384 goto label113;

        if i176 == 32768 goto label113;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i16 = r211.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r38);

        b169 = b169 | 1;

        goto label113;

     label113:
        b169 = b169 & -5;

        l164 = staticinvoke <java.lang.Math: long max(long,long)>(l174, l164);

        i165 = staticinvoke <java.lang.Math: int max(int,int)>(i172, i165);

        $i177 = i175 * 1000;

        i167 = staticinvoke <java.lang.Math: int max(int,int)>($i177, i167);

        i170 = staticinvoke <java.lang.Math: int max(int,int)>(s173, i170);

        i168 = i168 + 1;

        goto label096;

     label114:
        r167 = r2;

        i178 = staticinvoke <android.media.Utils: int divUp(int,int)>(i170, 8);

        $i14 = staticinvoke <android.media.Utils: int divUp(int,int)>(i165, 64);

        $l15 = staticinvoke <android.media.Utils: long divUp(long,long)>(l164, 64L);

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(i178, i178, $i14, $l15, 8, 8, 1, 1);

        i93 = i167;

        b94 = b169;

        goto label163;

     label115:
        $z4 = virtualinvoke r155.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/hevc");

        if $z4 == 0 goto label142;

        $i8 = 576 * 15;

        l179 = (long) $i8;

        i180 = lengthof r154;

        i181 = 576;

        i182 = 128000;

        i183 = 0;

        b184 = 4;

     label116:
        if i183 >= i180 goto label141;

        r214 = r154[i183];

        i185 = 0;

        i186 = 0;

        i187 = r214.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        if i187 == 1 goto label138;

        if i187 == 2 goto label138;

        lookupswitch(i187)
        {
            case 4: goto label137;
            case 8: goto label137;
            case 16: goto label136;
            case 32: goto label136;
            case 64: goto label135;
            case 128: goto label135;
            case 256: goto label134;
            case 512: goto label134;
            case 1024: goto label133;
            case 2048: goto label132;
            case 4096: goto label131;
            case 8192: goto label130;
            case 16384: goto label129;
            case 32768: goto label128;
            case 65536: goto label127;
            case 131072: goto label126;
            case 262144: goto label125;
            case 524288: goto label124;
            case 1048576: goto label123;
            case 2097152: goto label122;
            case 4194304: goto label121;
            case 8388608: goto label120;
            case 16777216: goto label119;
            case 33554432: goto label118;
            default: goto label117;
        };

     label117:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized level ");

        $i12 = r214.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r32);

        b184 = b184 | 1;

        d6 = 0.0;

        goto label139;

     label118:
        d6 = 120.0;

        i185 = 35651584;

        i186 = 800000;

        goto label139;

     label119:
        d6 = 120.0;

        i185 = 35651584;

        i186 = 240000;

        goto label139;

     label120:
        d6 = 60.0;

        i185 = 35651584;

        i186 = 480000;

        goto label139;

     label121:
        d6 = 60.0;

        i185 = 35651584;

        i186 = 120000;

        goto label139;

     label122:
        d6 = 30.0;

        i185 = 35651584;

        i186 = 240000;

        goto label139;

     label123:
        d6 = 30.0;

        i185 = 35651584;

        i186 = 60000;

        goto label139;

     label124:
        d6 = 120.0;

        i185 = 8912896;

        i186 = 240000;

        goto label139;

     label125:
        d6 = 120.0;

        i185 = 8912896;

        i186 = 60000;

        goto label139;

     label126:
        d6 = 60.0;

        i185 = 8912896;

        i186 = 160000;

        goto label139;

     label127:
        d6 = 60.0;

        i185 = 8912896;

        i186 = 40000;

        goto label139;

     label128:
        d6 = 30.0;

        i185 = 8912896;

        i186 = 100000;

        goto label139;

     label129:
        d6 = 30.0;

        i185 = 8912896;

        i186 = 25000;

        goto label139;

     label130:
        d6 = 60.0;

        i185 = 2228224;

        i186 = 50000;

        goto label139;

     label131:
        d6 = 60.0;

        i185 = 2228224;

        i186 = 20000;

        goto label139;

     label132:
        d6 = 30.0;

        i185 = 2228224;

        i186 = 30000;

        goto label139;

     label133:
        d6 = 30.0;

        i185 = 2228224;

        i186 = 12000;

        goto label139;

     label134:
        d6 = 33.75;

        i185 = 983040;

        i186 = 10000;

        goto label139;

     label135:
        d6 = 30.0;

        i185 = 552960;

        i186 = 6000;

        goto label139;

     label136:
        d6 = 30.0;

        i185 = 245760;

        i186 = 3000;

        goto label139;

     label137:
        d6 = 30.0;

        i185 = 122880;

        i186 = 1500;

        goto label139;

     label138:
        d6 = 15.0;

        i185 = 36864;

        i186 = 128;

     label139:
        i188 = r214.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        if i188 == 1 goto label140;

        if i188 == 2 goto label140;

        if i188 == 4 goto label140;

        if i188 == 4096 goto label140;

        if i188 == 8192 goto label140;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i10 = r214.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r26);

        b184 = b184 | 1;

        goto label140;

     label140:
        i189 = i185 >> 6;

        b184 = b184 & -5;

        $d7 = (double) i189;

        $d8 = $d7 * d6;

        $i190 = (int) $d8;

        $l191 = (long) $i190;

        l179 = staticinvoke <java.lang.Math: long max(long,long)>($l191, l179);

        i181 = staticinvoke <java.lang.Math: int max(int,int)>(i189, i181);

        $i192 = i186 * 1000;

        i182 = staticinvoke <java.lang.Math: int max(int,int)>($i192, i182);

        i183 = i183 + 1;

        goto label116;

     label141:
        $i9 = i181 * 8;

        $d0 = (double) $i9;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        i193 = (int) $d1;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(i193, i193, i181, l179, 8, 8, 1, 1);

        i93 = i182;

        b94 = b184;

        r167 = r2;

        goto label163;

     label142:
        $z5 = virtualinvoke r155.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/av01");

        if $z5 == 0 goto label162;

        l194 = 829440L;

        i195 = 36864;

        i196 = lengthof r154;

        i197 = 200000;

        b198 = 4;

        i199 = 512;

        i200 = 0;

     label143:
        if i200 >= i196 goto label161;

        r221 = r154[i200];

        i201 = r221.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        if i201 == 1 goto label158;

        if i201 == 2 goto label157;

        lookupswitch(i201)
        {
            case 4: goto label157;
            case 8: goto label157;
            case 16: goto label156;
            case 32: goto label155;
            case 64: goto label155;
            case 128: goto label155;
            case 256: goto label154;
            case 512: goto label153;
            case 1024: goto label153;
            case 2048: goto label153;
            case 4096: goto label152;
            case 8192: goto label151;
            case 16384: goto label150;
            case 32768: goto label149;
            case 65536: goto label148;
            case 131072: goto label147;
            case 262144: goto label146;
            case 524288: goto label145;
            default: goto label144;
        };

     label144:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized level ");

        $i6 = r221.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r20);

        b198 = b198 | 1;

        i202 = 0;

        s203 = 0;

        i204 = 0;

        l205 = 0L;

        goto label159;

     label145:
        i202 = 35651584;

        s203 = 16384;

        i204 = 160000;

        l205 = 4706009088L;

        goto label159;

     label146:
        i202 = 35651584;

        s203 = 16384;

        i204 = 160000;

        l205 = 4379443200L;

        goto label159;

     label147:
        i202 = 35651584;

        s203 = 16384;

        i204 = 100000;

        l205 = 2189721600L;

        goto label159;

     label148:
        i202 = 35651584;

        s203 = 16384;

        i204 = 60000;

        l205 = 1176502272L;

        goto label159;

     label149:
        i202 = 8912896;

        s203 = 8192;

        i204 = 60000;

        l205 = 1176502272L;

        goto label159;

     label150:
        i202 = 8912896;

        s203 = 8192;

        i204 = 60000;

        l205 = 1094860800L;

        goto label159;

     label151:
        i202 = 8912896;

        s203 = 8192;

        i204 = 40000;

        l205 = 547430400L;

        goto label159;

     label152:
        i202 = 8912896;

        s203 = 8192;

        i204 = 30000;

        l205 = 273715200L;

        goto label159;

     label153:
        i202 = 2359296;

        s203 = 6144;

        i204 = 20000;

        l205 = 155713536L;

        goto label159;

     label154:
        i202 = 2359296;

        s203 = 6144;

        i204 = 12000;

        l205 = 77856768L;

        goto label159;

     label155:
        i202 = 1065024;

        s203 = 5504;

        i204 = 10000;

        l205 = 39938400L;

        goto label159;

     label156:
        i202 = 665856;

        s203 = 4352;

        i204 = 6000;

        l205 = 24969600L;

        goto label159;

     label157:
        i202 = 278784;

        s203 = 2816;

        i204 = 3000;

        l205 = 10454400L;

        goto label159;

     label158:
        i202 = 147456;

        s203 = 2048;

        i204 = 1500;

        l205 = 5529600L;

     label159:
        i206 = r221.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        if i206 == 1 goto label160;

        if i206 == 2 goto label160;

        if i206 == 4096 goto label160;

        if i206 == 8192 goto label160;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i4 = r221.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r14);

        b198 = b198 | 1;

        goto label160;

     label160:
        b198 = b198 & -5;

        l194 = staticinvoke <java.lang.Math: long max(long,long)>(l205, l194);

        i195 = staticinvoke <java.lang.Math: int max(int,int)>(i202, i195);

        $i207 = i204 * 1000;

        i197 = staticinvoke <java.lang.Math: int max(int,int)>($i207, i197);

        i199 = staticinvoke <java.lang.Math: int max(int,int)>(s203, i199);

        i200 = i200 + 1;

        goto label143;

     label161:
        i208 = staticinvoke <android.media.Utils: int divUp(int,int)>(i199, 8);

        $i2 = staticinvoke <android.media.Utils: int divUp(int,int)>(i195, 64);

        $l3 = staticinvoke <android.media.Utils: long divUp(long,long)>(l194, 64L);

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(i208, i208, $i2, $l3, 8, 8, 1, 1);

        i93 = i197;

        b94 = b198;

        r167 = r2;

        goto label163;

     label162:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported mime ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r8);

        b94 = 4 | 2;

        i93 = 64000;

        r167 = r2;

     label163:
        $r225 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i93);

        $r226 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>(r167, $r225);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange> = $r226;

        r227 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent>;

        $i209 = r227.<android.media.MediaCodecInfo$CodecCapabilities: int mError>;

        $i210 = $i209 | b94;

        r227.<android.media.MediaCodecInfo$CodecCapabilities: int mError> = $i210;

        return;
    }

    private void applyMacroBlockLimits(int, int, int, int, int, long, int, int, int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, i2, i3, i4, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        long l5;
        java.lang.Integer $r1, $r2, $r11, $r12, $r15, $r16;
        android.util.Range $r3, $r6, $r9, $r10, $r13, $r14, $r17;
        java.lang.Long $r4, $r5;
        android.util.Rational $r7, $r8;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        l5 := @parameter5: long;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyAlignment(int,int)>(i8, i9);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r3 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r1, $r2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $r6 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r4, $r5);

        $r7 = new android.util.Rational;

        specialinvoke $r7.<android.util.Rational: void <init>(int,int)>(1, i3);

        $r8 = new android.util.Rational;

        specialinvoke $r8.<android.util.Rational: void <init>(int,int)>(i2, 1);

        $r9 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r7, $r8);

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyBlockLimits(int,int,android.util.Range,android.util.Range,android.util.Range)>(i6, i7, $r3, $r6, $r9);

        $r10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $i10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i11 = $i10 / i6;

        $i12 = staticinvoke <android.media.Utils: int divUp(int,int)>(i0, $i11);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $i13 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i14 = $i13 / i6;

        $i15 = i2 / $i14;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        $r13 = virtualinvoke $r10.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r11, $r12);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange> = $r13;

        $r14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $i16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i17 = $i16 / i7;

        $i18 = staticinvoke <android.media.Utils: int divUp(int,int)>(i1, $i17);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $i19 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i20 = $i19 / i7;

        $i21 = i3 / $i20;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        $r17 = virtualinvoke $r14.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r15, $r16);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange> = $r17;

        return;
    }

    private void applyMacroBlockLimits(int, int, int, long, int, int, int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, i2, i4, i5, i6, i7;
        long l3;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,int,int,long,int,int,int,int)>(1, 1, i0, i1, i2, l3, i4, i5, i6, i7);

        return;
    }

    public static android.media.MediaCodecInfo$VideoCapabilities create(android.media.MediaFormat, android.media.MediaCodecInfo$CodecCapabilities)
    {
        android.media.MediaFormat r0;
        android.media.MediaCodecInfo$CodecCapabilities r1;
        android.media.MediaCodecInfo$VideoCapabilities $r3;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: android.media.MediaCodecInfo$CodecCapabilities;

        $r3 = new android.media.MediaCodecInfo$VideoCapabilities;

        specialinvoke $r3.<android.media.MediaCodecInfo$VideoCapabilities: void <init>()>();

        specialinvoke $r3.<android.media.MediaCodecInfo$VideoCapabilities: void init(android.media.MediaFormat,android.media.MediaCodecInfo$CodecCapabilities)>(r0, r1);

        return $r3;
    }

    public static int equivalentVP9Level(android.media.MediaFormat)
    {
        java.lang.Object $r0, $r2, $r5, $r8, $r9, $r13, $r17;
        android.util.Size $r1, r22;
        int $i0, $i1, $i2, $i5, $i6, $i7, i9, i10, i11, i13;
        java.lang.Comparable $r3, $r6, $r11, $r15, $r18;
        java.lang.Integer $r4, $r12, $r16, $r19;
        long $l3, $l4, l12;
        java.lang.Long $r7;
        android.util.Range $r10, $r14, r23, r24, r26;
        byte $b8, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26;
        android.media.MediaFormat r20;
        java.util.Map r21;
        android.util.Pair r25;

        r20 := @parameter0: android.media.MediaFormat;

        r21 = virtualinvoke r20.<android.media.MediaFormat: java.util.Map getMap()>();

        $r0 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("block-size");

        $r1 = new android.util.Size;

        specialinvoke $r1.<android.util.Size: void <init>(int,int)>(8, 8);

        r22 = staticinvoke <android.media.Utils: android.util.Size parseSize(java.lang.Object,android.util.Size)>($r0, $r1);

        $i0 = virtualinvoke r22.<android.util.Size: int getWidth()>();

        $i1 = virtualinvoke r22.<android.util.Size: int getHeight()>();

        i9 = $i0 * $i1;

        $r2 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("block-count-range");

        r23 = staticinvoke <android.media.Utils: android.util.Range parseIntRange(java.lang.Object,android.util.Range)>($r2, null);

        i10 = 0;

        if r23 != null goto label01;

        i11 = 0;

        goto label02;

     label01:
        $r3 = virtualinvoke r23.<android.util.Range: java.lang.Comparable getUpper()>();

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        i11 = $i2 * i9;

     label02:
        $r5 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("blocks-per-second-range");

        r24 = staticinvoke <android.media.Utils: android.util.Range parseLongRange(java.lang.Object,android.util.Range)>($r5, null);

        if r24 != null goto label03;

        l12 = 0L;

        goto label04;

     label03:
        $l3 = (long) i9;

        $r6 = virtualinvoke r24.<android.util.Range: java.lang.Comparable getUpper()>();

        $r7 = (java.lang.Long) $r6;

        $l4 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        l12 = $l3 * $l4;

     label04:
        $r8 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("size-range");

        r25 = staticinvoke <android.media.MediaCodecInfo$VideoCapabilities: android.util.Pair parseWidthHeightRanges(java.lang.Object)>($r8);

        if r25 != null goto label05;

        i13 = 0;

        goto label06;

     label05:
        $r9 = r25.<android.util.Pair: java.lang.Object first>;

        $r10 = (android.util.Range) $r9;

        $r11 = virtualinvoke $r10.<android.util.Range: java.lang.Comparable getUpper()>();

        $r12 = (java.lang.Integer) $r11;

        $i5 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = r25.<android.util.Pair: java.lang.Object second>;

        $r14 = (android.util.Range) $r13;

        $r15 = virtualinvoke $r14.<android.util.Range: java.lang.Comparable getUpper()>();

        $r16 = (java.lang.Integer) $r15;

        $i6 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        i13 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

     label06:
        $r17 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("bitrate-range");

        r26 = staticinvoke <android.media.Utils: android.util.Range parseIntRange(java.lang.Object,android.util.Range)>($r17, null);

        if r26 != null goto label07;

        goto label08;

     label07:
        $r18 = virtualinvoke r26.<android.util.Range: java.lang.Comparable getUpper()>();

        $r19 = (java.lang.Integer) $r18;

        $i7 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        i10 = staticinvoke <android.media.Utils: int divUp(int,int)>($i7, 1000);

     label08:
        $b8 = l12 cmp 829440L;

        if $b8 > 0 goto label09;

        if i11 > 36864 goto label09;

        if i10 > 200 goto label09;

        if i13 > 512 goto label09;

        return 1;

     label09:
        $b14 = l12 cmp 2764800L;

        if $b14 > 0 goto label10;

        if i11 > 73728 goto label10;

        if i10 > 800 goto label10;

        if i13 > 768 goto label10;

        return 2;

     label10:
        $b15 = l12 cmp 4608000L;

        if $b15 > 0 goto label11;

        if i11 > 122880 goto label11;

        if i10 > 1800 goto label11;

        if i13 > 960 goto label11;

        return 4;

     label11:
        $b16 = l12 cmp 9216000L;

        if $b16 > 0 goto label12;

        if i11 > 245760 goto label12;

        if i10 > 3600 goto label12;

        if i13 > 1344 goto label12;

        return 8;

     label12:
        $b17 = l12 cmp 20736000L;

        if $b17 > 0 goto label13;

        if i11 > 552960 goto label13;

        if i10 > 7200 goto label13;

        if i13 > 2048 goto label13;

        return 16;

     label13:
        $b18 = l12 cmp 36864000L;

        if $b18 > 0 goto label14;

        if i11 > 983040 goto label14;

        if i10 > 12000 goto label14;

        if i13 > 2752 goto label14;

        return 32;

     label14:
        $b19 = l12 cmp 83558400L;

        if $b19 > 0 goto label15;

        if i11 > 2228224 goto label15;

        if i10 > 18000 goto label15;

        if i13 > 4160 goto label15;

        return 64;

     label15:
        $b20 = l12 cmp 160432128L;

        if $b20 > 0 goto label16;

        if i11 > 2228224 goto label16;

        if i10 > 30000 goto label16;

        if i13 > 4160 goto label16;

        return 128;

     label16:
        $b21 = l12 cmp 311951360L;

        if $b21 > 0 goto label17;

        if i11 > 8912896 goto label17;

        if i10 > 60000 goto label17;

        if i13 > 8384 goto label17;

        return 256;

     label17:
        $b22 = l12 cmp 588251136L;

        if $b22 > 0 goto label18;

        if i11 > 8912896 goto label18;

        if i10 > 120000 goto label18;

        if i13 > 8384 goto label18;

        return 512;

     label18:
        $b23 = l12 cmp 1176502272L;

        if $b23 > 0 goto label19;

        if i11 > 8912896 goto label19;

        if i10 > 180000 goto label19;

        if i13 > 8384 goto label19;

        return 1024;

     label19:
        $b24 = l12 cmp 1176502272L;

        if $b24 > 0 goto label20;

        if i11 > 35651584 goto label20;

        if i10 > 180000 goto label20;

        if i13 > 16832 goto label20;

        return 2048;

     label20:
        $b25 = l12 cmp 2353004544L;

        if $b25 > 0 goto label21;

        if i11 > 35651584 goto label21;

        if i10 > 240000 goto label21;

        if i13 > 16832 goto label21;

        return 4096;

     label21:
        $b26 = l12 cmp 4706009088L;

        if $b26 > 0 goto label22;

        if i11 > 35651584 goto label22;

        if i10 > 480000 goto label22;

        if i13 > 16832 goto label22;

        return 8192;

     label22:
        return 8192;
    }

    private android.util.Range estimateFrameRatesFor(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.util.Range r1, $r10;
        java.util.Map $r2;
        java.lang.Object $r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        java.lang.Comparable $r4, $r7;
        java.lang.Long $r5, $r8;
        long $l7, $l8;
        java.lang.Double $r6, $r9, r12;
        android.util.Size r11;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r11 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Size findClosestSize(int,int)>(i0, i1);

        $r2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: java.util.Map mMeasuredFrameRates>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        r1 = (android.util.Range) $r3;

        $i2 = virtualinvoke r11.<android.util.Size: int getWidth()>();

        $i3 = virtualinvoke r11.<android.util.Size: int getHeight()>();

        $i4 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: int getBlockCount(int,int)>($i2, $i3);

        $d0 = (double) $i4;

        $i5 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: int getBlockCount(int,int)>(i0, i1);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 1);

        $d1 = (double) $i6;

        $d2 = $d0 / $d1;

        r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r4 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getLower()>();

        $r5 = (java.lang.Long) $r4;

        $l7 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $d3 = (double) $l7;

        $d4 = virtualinvoke r12.<java.lang.Double: double doubleValue()>();

        $d5 = $d3 * $d4;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r7 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getUpper()>();

        $r8 = (java.lang.Long) $r7;

        $l8 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        $d6 = (double) $l8;

        $d7 = virtualinvoke r12.<java.lang.Double: double doubleValue()>();

        $d8 = $d6 * $d7;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        $r10 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r6, $r9);

        return $r10;
    }

    private android.util.Size findClosestSize(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        java.util.Iterator r1;
        android.util.Size r2, r6;
        java.util.Map $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i6 := @parameter0: int;

        i7 := @parameter1: int;

        i0 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: int getBlockCount(int,int)>(i6, i7);

        r6 = null;

        i8 = 2147483647;

        $r3 = r0.<android.media.MediaCodecInfo$VideoCapabilities: java.util.Map mMeasuredFrameRates>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Size) $r5;

        $i2 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        $i3 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        $i4 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: int getBlockCount(int,int)>($i2, $i3);

        $i5 = i0 - $i4;

        i1 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        i9 = i8;

        if i1 >= i8 goto label2;

        i9 = i1;

        r6 = r2;

     label2:
        i8 = i9;

        goto label1;

     label3:
        return r6;
    }

    private int getBlockCount(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i3 = staticinvoke <android.media.Utils: int divUp(int,int)>(i0, $i2);

        $i4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i5 = staticinvoke <android.media.Utils: int divUp(int,int)>(i1, $i4);

        $i6 = $i3 * $i5;

        return $i6;
    }

    private java.util.Map getMeasuredFrameRates(java.util.Map)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        java.util.Map r1;
        java.util.Iterator r3;
        java.util.HashMap $r4;
        java.util.Set $r5;
        java.lang.Object $r6, $r10;
        boolean $z0, $z1;
        java.lang.String $r7, $r9, r16;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Comparable $r11, $r13;
        java.lang.Long $r12, $r14;
        long $l5, $l7;
        byte $b6, $b8;
        java.lang.String[] r17;
        android.util.Size r18;
        android.util.Range r19;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        r1 := @parameter0: java.util.Map;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r6;

        $z0 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("measured-frame-rate-");

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $r7 = "measured-frame-rate-";

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>($i0);

        r17 = virtualinvoke r16.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        $i1 = lengthof r17;

        if $i1 == 5 goto label3;

        goto label1;

     label3:
        $r9 = r17[3];

        r18 = staticinvoke <android.media.Utils: android.util.Size parseSize(java.lang.Object,android.util.Size)>($r9, null);

        if r18 == null goto label1;

        $i2 = virtualinvoke r18.<android.util.Size: int getWidth()>();

        $i3 = virtualinvoke r18.<android.util.Size: int getHeight()>();

        $i4 = $i2 * $i3;

        if $i4 > 0 goto label4;

        goto label1;

     label4:
        $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        r19 = staticinvoke <android.media.Utils: android.util.Range parseLongRange(java.lang.Object,android.util.Range)>($r10, null);

        if r19 == null goto label1;

        $r11 = virtualinvoke r19.<android.util.Range: java.lang.Comparable getLower()>();

        $r12 = (java.lang.Long) $r11;

        $l5 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $b6 = $l5 cmp 0L;

        if $b6 < 0 goto label1;

        $r13 = virtualinvoke r19.<android.util.Range: java.lang.Comparable getUpper()>();

        $r14 = (java.lang.Long) $r13;

        $l7 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $b8 = $l7 cmp 0L;

        if $b8 >= 0 goto label5;

        goto label1;

     label5:
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, r19);

        goto label1;

     label6:
        return $r4;
    }

    private java.util.List getPerformancePoints(java.util.Map)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        java.util.Map r1;
        java.util.Set r4;
        java.util.Iterator r5;
        android.util.Range r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        android.media.'-$$Lambda$MediaCodecInfo$VideoCapabilities$DpgwEn-gVFZT9EtP3qcxpiA2G0M' $r8;
        java.util.List $r9, $r31;
        java.lang.Object $r10, $r14;
        boolean $z0, $z1, $z3, $z5;
        java.lang.String $r11, $r12, $r13, r32;
        java.lang.Comparable $r15, $r17, $r20, $r22, $r26, $r28;
        java.lang.Long $r16, $r18, $r21, $r23, $r27, $r29;
        long $l6, $l8;
        byte $b7, $b9;
        java.lang.String[] r33;
        android.util.Size r34, r38, r40;
        java.util.Vector r37;
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r39, r41;
        java.util.Comparator r42;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        r1 := @parameter0: java.util.Map;

        r37 = new java.util.Vector;

        specialinvoke r37.<java.util.Vector: void <init>()>();

        r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label10;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.lang.String) $r10;

        $z0 = virtualinvoke r32.<java.lang.String: boolean startsWith(java.lang.String)>("performance-point-");

        if $z0 != 0 goto label02;

        goto label01;

     label02:
        $r11 = "performance-point-";

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        $r12 = virtualinvoke r32.<java.lang.String: java.lang.String substring(int)>($i1);

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("none");

        if $z1 == 0 goto label03;

        $i22 = virtualinvoke r37.<java.util.Vector: int size()>();

        if $i22 != 0 goto label03;

        $r31 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r37);

        return $r31;

     label03:
        r33 = virtualinvoke r32.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        $i2 = lengthof r33;

        if $i2 == 4 goto label04;

        goto label01;

     label04:
        $r13 = r33[2];

        r34 = staticinvoke <android.media.Utils: android.util.Size parseSize(java.lang.Object,android.util.Size)>($r13, null);

        if r34 == null goto label09;

        $i3 = virtualinvoke r34.<android.util.Size: int getWidth()>();

        $i4 = virtualinvoke r34.<android.util.Size: int getHeight()>();

        $i5 = $i3 * $i4;

        if $i5 > 0 goto label05;

        goto label01;

     label05:
        $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32);

        r6 = staticinvoke <android.media.Utils: android.util.Range parseLongRange(java.lang.Object,android.util.Range)>($r14, null);

        if r6 == null goto label08;

        $r15 = virtualinvoke r6.<android.util.Range: java.lang.Comparable getLower()>();

        $r16 = (java.lang.Long) $r15;

        $l6 = virtualinvoke $r16.<java.lang.Long: long longValue()>();

        $b7 = $l6 cmp 0L;

        if $b7 < 0 goto label08;

        $r17 = virtualinvoke r6.<android.util.Range: java.lang.Comparable getUpper()>();

        $r18 = (java.lang.Long) $r17;

        $l8 = virtualinvoke $r18.<java.lang.Long: long longValue()>();

        $b9 = $l8 cmp 0L;

        if $b9 >= 0 goto label06;

        goto label01;

     label06:
        r39 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        $i10 = virtualinvoke r34.<android.util.Size: int getWidth()>();

        $i11 = virtualinvoke r34.<android.util.Size: int getHeight()>();

        $r20 = virtualinvoke r6.<android.util.Range: java.lang.Comparable getLower()>();

        $r21 = (java.lang.Long) $r20;

        $i12 = virtualinvoke $r21.<java.lang.Long: int intValue()>();

        $r22 = virtualinvoke r6.<android.util.Range: java.lang.Comparable getUpper()>();

        $r23 = (java.lang.Long) $r22;

        $i13 = virtualinvoke $r23.<java.lang.Long: int intValue()>();

        r38 = new android.util.Size;

        $i15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        specialinvoke r38.<android.util.Size: void <init>(int,int)>($i15, $i14);

        specialinvoke r39.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int,int,android.util.Size)>($i10, $i11, $i12, $i13, r38);

        r41 = new android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        $i16 = virtualinvoke r34.<android.util.Size: int getHeight()>();

        $i17 = virtualinvoke r34.<android.util.Size: int getWidth()>();

        $r26 = virtualinvoke r6.<android.util.Range: java.lang.Comparable getLower()>();

        $r27 = (java.lang.Long) $r26;

        $i18 = virtualinvoke $r27.<java.lang.Long: int intValue()>();

        $r28 = virtualinvoke r6.<android.util.Range: java.lang.Comparable getUpper()>();

        $r29 = (java.lang.Long) $r28;

        $i19 = virtualinvoke $r29.<java.lang.Long: int intValue()>();

        r40 = new android.util.Size;

        $i21 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i20 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        specialinvoke r40.<android.util.Size: void <init>(int,int)>($i21, $i20);

        specialinvoke r41.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: void <init>(int,int,int,int,android.util.Size)>($i16, $i17, $i18, $i19, r40);

        virtualinvoke r37.<java.util.Vector: boolean add(java.lang.Object)>(r39);

        $z3 = virtualinvoke r39.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: boolean covers(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint)>(r41);

        if $z3 != 0 goto label07;

        virtualinvoke r37.<java.util.Vector: boolean add(java.lang.Object)>(r41);

     label07:
        goto label01;

     label08:
        goto label01;

     label09:
        goto label01;

     label10:
        $i0 = virtualinvoke r37.<java.util.Vector: int size()>();

        if $i0 != 0 goto label11;

        return null;

     label11:
        $r8 = <android.media._$$Lambda$MediaCodecInfo$VideoCapabilities$DpgwEn_gVFZT9EtP3qcxpiA2G0M: android.media.'-$$Lambda$MediaCodecInfo$VideoCapabilities$DpgwEn-gVFZT9EtP3qcxpiA2G0M' INSTANCE>;

        r42 = (java.util.Comparator) $r8;

        virtualinvoke r37.<java.util.Vector: void sort(java.util.Comparator)>(r42);

        $r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r37);

        return $r9;
    }

    private void init(android.media.MediaFormat, android.media.MediaCodecInfo$CodecCapabilities)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.media.MediaFormat r1;
        android.media.MediaCodecInfo$CodecCapabilities r2;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        r1 := @parameter0: android.media.MediaFormat;

        r2 := @parameter1: android.media.MediaCodecInfo$CodecCapabilities;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent> = r2;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void initWithPlatformLimits()>();

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyLevelLimits()>();

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void parseFromInfo(android.media.MediaFormat)>(r1);

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void updateLimits()>();

        return;
    }

    private void initWithPlatformLimits()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.Comparable $r12;
        java.lang.Integer $r13;
        int $i0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$300()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange> = $r1;

        $r2 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r2;

        $r3 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r3;

        $r4 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$500()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r4;

        $r5 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange> = $r5;

        $r6 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange> = $r6;

        $r7 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$000()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r7;

        $r8 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$600()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r8;

        $r9 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$700()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r9;

        $r10 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$700()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange> = $r10;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment> = 2;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment> = 2;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth> = 2;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight> = 2;

        $r11 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        $r12 = virtualinvoke $r11.<android.util.Range: java.lang.Comparable getUpper()>();

        $r13 = (java.lang.Integer) $r12;

        $i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit> = $i0;

        return;
    }

    static int lambda$getPerformancePoints$0(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint, android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint)
    {
        android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint r0, r1;
        int i0, i1, $i5, $i6, $i7, $i8, $i12, $i13;
        long $l2, $l3, $l9, $l10;
        byte $b4, $b11, b14, $b15;

        r0 := @parameter0: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        r1 := @parameter1: android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint;

        i0 = virtualinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        i1 = virtualinvoke r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        b14 = -1;

        if i0 == i1 goto label2;

        $i12 = virtualinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        $i13 = virtualinvoke r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxMacroBlocks()>();

        if $i12 >= $i13 goto label1;

        goto label7;

     label1:
        b14 = 1;

        goto label7;

     label2:
        $l2 = virtualinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long getMaxMacroBlockRate()>();

        $l3 = virtualinvoke r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long getMaxMacroBlockRate()>();

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label4;

        $l9 = virtualinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long getMaxMacroBlockRate()>();

        $l10 = virtualinvoke r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: long getMaxMacroBlockRate()>();

        $b11 = $l9 cmp $l10;

        if $b11 >= 0 goto label3;

        goto label7;

     label3:
        b14 = 1;

        goto label7;

     label4:
        $i5 = virtualinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxFrameRate()>();

        $i6 = virtualinvoke r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxFrameRate()>();

        if $i5 == $i6 goto label6;

        $i7 = virtualinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxFrameRate()>();

        $i8 = virtualinvoke r1.<android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint: int getMaxFrameRate()>();

        if $i7 >= $i8 goto label5;

        goto label7;

     label5:
        b14 = 1;

        goto label7;

     label6:
        b14 = 0;

     label7:
        $b15 = neg b14;

        return $b15;
    }

    private void parseFromInfo(android.media.MediaFormat)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Size r1, r2, $r7, $r8;
        android.util.Range r3, r4, r5, r6, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r62, $r65, $r66, $r78, $r86, r93, r94, r96, r97, r98, r102, r103, r106, r108, r109;
        int $i0, $i1, $i2, $i3, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i53, $i54, $i55, $i56, $i57, $i58, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70;
        java.lang.Object $r9, $r10, $r11, $r12, $r15, $r71, $r72, $r99, $r100, $r101, $r107;
        java.util.Map $r13, r90;
        java.util.List $r14;
        boolean $z0, $z1;
        android.media.MediaCodecInfo$CodecCapabilities $r16, $r112;
        long $l23, $l44;
        java.lang.Comparable $r60, $r63, $r67, $r69;
        java.lang.Integer $r61, $r64, $r68, $r70;
        java.lang.Throwable $r73, $r81;
        java.lang.StringBuilder $r74, $r82;
        java.lang.String $r80, $r88;
        android.media.MediaFormat r89;
        android.util.Pair r95;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        r89 := @parameter0: android.media.MediaFormat;

        r90 = virtualinvoke r89.<android.media.MediaFormat: java.util.Map getMap()>();

        $r7 = new android.util.Size;

        $i1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        specialinvoke $r7.<android.util.Size: void <init>(int,int)>($i1, $i0);

        $r8 = new android.util.Size;

        $i3 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        specialinvoke $r8.<android.util.Size: void <init>(int,int)>($i3, $i2);

        r93 = null;

        r94 = null;

        $r9 = interfaceinvoke r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("block-size");

        r1 = staticinvoke <android.media.Utils: android.util.Size parseSize(java.lang.Object,android.util.Size)>($r9, $r7);

        $r10 = interfaceinvoke r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("alignment");

        r2 = staticinvoke <android.media.Utils: android.util.Size parseSize(java.lang.Object,android.util.Size)>($r10, $r8);

        $r11 = interfaceinvoke r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("block-count-range");

        r3 = staticinvoke <android.media.Utils: android.util.Range parseIntRange(java.lang.Object,android.util.Range)>($r11, null);

        $r12 = interfaceinvoke r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("blocks-per-second-range");

        r4 = staticinvoke <android.media.Utils: android.util.Range parseLongRange(java.lang.Object,android.util.Range)>($r12, null);

        $r13 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: java.util.Map getMeasuredFrameRates(java.util.Map)>(r90);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: java.util.Map mMeasuredFrameRates> = $r13;

        $r14 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: java.util.List getPerformancePoints(java.util.Map)>(r90);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: java.util.List mPerformancePoints> = $r14;

        $r15 = interfaceinvoke r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("size-range");

        r95 = staticinvoke <android.media.MediaCodecInfo$VideoCapabilities: android.util.Pair parseWidthHeightRanges(java.lang.Object)>($r15);

        if r95 == null goto label01;

        $r71 = r95.<android.util.Pair: java.lang.Object first>;

        r93 = (android.util.Range) $r71;

        $r72 = r95.<android.util.Pair: java.lang.Object second>;

        r94 = (android.util.Range) $r72;

     label01:
        $z0 = interfaceinvoke r90.<java.util.Map: boolean containsKey(java.lang.Object)>("feature-can-swap-width-height");

        if $z0 == 0 goto label03;

        if r93 == null goto label02;

        $r67 = virtualinvoke r93.<android.util.Range: java.lang.Comparable getUpper()>();

        $r68 = (java.lang.Integer) $r67;

        $i56 = virtualinvoke $r68.<java.lang.Integer: int intValue()>();

        $r69 = virtualinvoke r94.<android.util.Range: java.lang.Comparable getUpper()>();

        $r70 = (java.lang.Integer) $r69;

        $i57 = virtualinvoke $r70.<java.lang.Integer: int intValue()>();

        $i58 = staticinvoke <java.lang.Math: int min(int,int)>($i56, $i57);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit> = $i58;

        r96 = virtualinvoke r93.<android.util.Range: android.util.Range extend(android.util.Range)>(r94);

        r93 = r96;

        r97 = r96;

        goto label04;

     label02:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", "feature can-swap-width-height is best used with size-range");

        $r59 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r60 = virtualinvoke $r59.<android.util.Range: java.lang.Comparable getUpper()>();

        $r61 = (java.lang.Integer) $r60;

        $i53 = virtualinvoke $r61.<java.lang.Integer: int intValue()>();

        $r62 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r63 = virtualinvoke $r62.<android.util.Range: java.lang.Comparable getUpper()>();

        $r64 = (java.lang.Integer) $r63;

        $i54 = virtualinvoke $r64.<java.lang.Integer: int intValue()>();

        $i55 = staticinvoke <java.lang.Math: int min(int,int)>($i53, $i54);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit> = $i55;

        $r66 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r65 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        r98 = virtualinvoke $r66.<android.util.Range: android.util.Range extend(android.util.Range)>($r65);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = r98;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = r98;

     label03:
        r97 = r94;

     label04:
        $r99 = interfaceinvoke r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("block-aspect-ratio-range");

        r5 = staticinvoke <android.media.Utils: android.util.Range parseRationalRange(java.lang.Object,android.util.Range)>($r99, null);

        $r100 = interfaceinvoke r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("pixel-aspect-ratio-range");

        r6 = staticinvoke <android.media.Utils: android.util.Range parseRationalRange(java.lang.Object,android.util.Range)>($r100, null);

        $r101 = interfaceinvoke r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("frame-rate-range");

        r102 = staticinvoke <android.media.Utils: android.util.Range parseIntRange(java.lang.Object,android.util.Range)>($r101, null);

        if r102 == null goto label08;

     label05:
        $r58 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$500()>();

        r103 = virtualinvoke r102.<android.util.Range: android.util.Range intersect(android.util.Range)>($r58);

     label06:
        r102 = r103;

        goto label08;

     label07:
        $r73 := @caughtexception;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("frame rate range (");

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r102);

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of limits: ");

        $r78 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$500()>();

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r78);

        $r80 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r80);

        r102 = null;

        goto label08;

     label08:
        r106 = r97;

        $r107 = interfaceinvoke r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("bitrate-range");

        r108 = staticinvoke <android.media.Utils: android.util.Range parseIntRange(java.lang.Object,android.util.Range)>($r107, null);

        if r108 == null goto label12;

     label09:
        $r57 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$300()>();

        r109 = virtualinvoke r108.<android.util.Range: android.util.Range intersect(android.util.Range)>($r57);

     label10:
        r108 = r109;

        goto label12;

     label11:
        $r81 := @caughtexception;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitrate range (");

        virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r108);

        virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of limits: ");

        $r86 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$300()>();

        virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r86);

        $r88 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r88);

        r108 = null;

        goto label12;

     label12:
        $i61 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        staticinvoke <android.media.MediaCodecInfo: int access$200(int,java.lang.String)>($i61, "block-size width must be power of two");

        $i62 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        staticinvoke <android.media.MediaCodecInfo: int access$200(int,java.lang.String)>($i62, "block-size height must be power of two");

        $i63 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        staticinvoke <android.media.MediaCodecInfo: int access$200(int,java.lang.String)>($i63, "alignment width must be power of two");

        $i64 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        staticinvoke <android.media.MediaCodecInfo: int access$200(int,java.lang.String)>($i64, "alignment height must be power of two");

        $i65 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i66 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i67 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        $i68 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(2147483647, 2147483647, 2147483647, 9223372036854775807L, $i65, $i66, $i67, $i68);

        $r112 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent>;

        $i69 = $r112.<android.media.MediaCodecInfo$CodecCapabilities: int mError>;

        $i70 = $i69 & 2;

        if $i70 != 0 goto label21;

        $z1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean mAllowMbOverride>;

        if $z1 == 0 goto label13;

        goto label21;

     label13:
        if r93 == null goto label14;

        $r55 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r56 = virtualinvoke $r55.<android.util.Range: android.util.Range intersect(android.util.Range)>(r93);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r56;

     label14:
        if r106 == null goto label15;

        $r53 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r54 = virtualinvoke $r53.<android.util.Range: android.util.Range intersect(android.util.Range)>(r106);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r54;

     label15:
        if r3 == null goto label16;

        $r50 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $i46 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i45 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i47 = $i46 * $i45;

        $i48 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i49 = $i47 / $i48;

        $i50 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i51 = $i49 / $i50;

        $r51 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>(r3, $i51);

        $r52 = virtualinvoke $r50.<android.util.Range: android.util.Range intersect(android.util.Range)>($r51);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r52;

     label16:
        if r4 == null goto label17;

        $r47 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $i38 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i37 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i39 = $i38 * $i37;

        $i40 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i41 = $i39 / $i40;

        $i42 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i43 = $i41 / $i42;

        $l44 = (long) $i43;

        $r48 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,long)>(r4, $l44);

        $r49 = virtualinvoke $r47.<android.util.Range: android.util.Range intersect(android.util.Range)>($r48);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r49;

     label17:
        if r6 == null goto label18;

        $r44 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $i31 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i32 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i33 = $i31 / $i32;

        $i34 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i35 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i36 = $i34 / $i35;

        $r45 = staticinvoke <android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>(r6, $i33, $i36);

        $r46 = virtualinvoke $r44.<android.util.Range: android.util.Range intersect(android.util.Range)>($r45);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r46;

     label18:
        if r5 == null goto label19;

        $r42 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r43 = virtualinvoke $r42.<android.util.Range: android.util.Range intersect(android.util.Range)>(r5);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange> = $r43;

     label19:
        if r102 == null goto label20;

        $r40 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r41 = virtualinvoke $r40.<android.util.Range: android.util.Range intersect(android.util.Range)>(r102);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r41;

     label20:
        if r108 == null goto label30;

        $r38 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange>;

        $r39 = virtualinvoke $r38.<android.util.Range: android.util.Range intersect(android.util.Range)>(r108);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange> = $r39;

        goto label30;

     label21:
        if r93 == null goto label22;

        $r36 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        $r37 = virtualinvoke $r36.<android.util.Range: android.util.Range intersect(android.util.Range)>(r93);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r37;

     label22:
        if r106 == null goto label23;

        $r34 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        $r35 = virtualinvoke $r34.<android.util.Range: android.util.Range intersect(android.util.Range)>(r106);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r35;

     label23:
        if r3 == null goto label24;

        $r31 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$000()>();

        $i25 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i24 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i26 = $i25 * $i24;

        $i27 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i28 = $i26 / $i27;

        $i29 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i30 = $i28 / $i29;

        $r32 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>(r3, $i30);

        $r33 = virtualinvoke $r31.<android.util.Range: android.util.Range intersect(android.util.Range)>($r32);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r33;

     label24:
        if r4 == null goto label25;

        $r28 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$600()>();

        $i17 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i18 = $i17 * $i16;

        $i19 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i20 = $i18 / $i19;

        $i21 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i22 = $i20 / $i21;

        $l23 = (long) $i22;

        $r29 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,long)>(r4, $l23);

        $r30 = virtualinvoke $r28.<android.util.Range: android.util.Range intersect(android.util.Range)>($r29);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r30;

     label25:
        if r6 == null goto label26;

        $r25 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$700()>();

        $i10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i11 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i12 = $i10 / $i11;

        $i13 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i14 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i15 = $i13 / $i14;

        $r26 = staticinvoke <android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>(r6, $i12, $i15);

        $r27 = virtualinvoke $r25.<android.util.Range: android.util.Range intersect(android.util.Range)>($r26);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r27;

     label26:
        if r5 == null goto label27;

        $r23 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$700()>();

        $r24 = virtualinvoke $r23.<android.util.Range: android.util.Range intersect(android.util.Range)>(r5);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange> = $r24;

     label27:
        if r102 == null goto label28;

        $r21 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$500()>();

        $r22 = virtualinvoke $r21.<android.util.Range: android.util.Range intersect(android.util.Range)>(r102);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r22;

     label28:
        if r108 == null goto label30;

        $r16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent>;

        $i8 = $r16.<android.media.MediaCodecInfo$CodecCapabilities: int mError>;

        $i9 = $i8 & 2;

        if $i9 == 0 goto label29;

        $r19 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$300()>();

        $r20 = virtualinvoke $r19.<android.util.Range: android.util.Range intersect(android.util.Range)>(r108);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange> = $r20;

        goto label30;

     label29:
        $r17 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange>;

        $r18 = virtualinvoke $r17.<android.util.Range: android.util.Range intersect(android.util.Range)>(r108);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange> = $r18;

     label30:
        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void updateLimits()>();

        return;

        catch java.lang.IllegalArgumentException from label05 to label06 with label07;
        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
    }

    private static android.util.Pair parseWidthHeightRanges(java.lang.Object)
    {
        java.lang.Object r0, $r1, $r4, $r8, $r11;
        android.util.Size $r2, $r5, $r9, $r12;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3, $r6, $r10, $r13;
        android.util.Range $r7, $r14;
        java.lang.Throwable $r15;
        java.lang.StringBuilder $r16;
        java.lang.String $r20;
        android.util.Pair r21, r22;

        r0 := @parameter0: java.lang.Object;

        r21 = staticinvoke <android.media.Utils: android.util.Pair parseSizeRange(java.lang.Object)>(r0);

        if r21 == null goto label4;

     label1:
        $r1 = r21.<android.util.Pair: java.lang.Object first>;

        $r2 = (android.util.Size) $r1;

        $i0 = virtualinvoke $r2.<android.util.Size: int getWidth()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = r21.<android.util.Pair: java.lang.Object second>;

        $r5 = (android.util.Size) $r4;

        $i1 = virtualinvoke $r5.<android.util.Size: int getWidth()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r3, $r6);

        $r8 = r21.<android.util.Pair: java.lang.Object first>;

        $r9 = (android.util.Size) $r8;

        $i2 = virtualinvoke $r9.<android.util.Size: int getHeight()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r11 = r21.<android.util.Pair: java.lang.Object second>;

        $r12 = (android.util.Size) $r11;

        $i3 = virtualinvoke $r12.<android.util.Size: int getHeight()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r14 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r10, $r13);

        r22 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r7, $r14);

     label2:
        return r22;

     label3:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not parse size range \'");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r20);

     label4:
        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private boolean supports(java.lang.Integer, java.lang.Integer, java.lang.Number)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        java.lang.Integer r1, r2, $r7;
        java.lang.Number r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        double d0, d1, $d2, $d3;
        android.util.Range $r4, $r5, $r6, $r9, $r11, $r12, $r13, $r14, $r15;
        boolean $z1, $z2, $z3, $z4, $z5, z7, z8, z9, z10, z11, z12, z13;
        android.util.Rational $r8, $r10;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Number;

        z7 = 1;

        if r1 == null goto label03;

        $r15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $z5 = virtualinvoke $r15.<android.util.Range: boolean contains(java.lang.Comparable)>(r1);

        if $z5 == 0 goto label01;

        $i16 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i17 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i18 = $i16 % $i17;

        if $i18 != 0 goto label01;

        z8 = 1;

        goto label02;

     label01:
        z8 = 0;

     label02:
        z7 = z8;

     label03:
        z9 = z7;

        if z7 == 0 goto label05;

        z9 = z7;

        if r2 == null goto label05;

        $r14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $z4 = virtualinvoke $r14.<android.util.Range: boolean contains(java.lang.Comparable)>(r2);

        if $z4 == 0 goto label04;

        $i13 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $i15 = $i13 % $i14;

        if $i15 != 0 goto label04;

        z9 = 1;

        goto label05;

     label04:
        z9 = 0;

     label05:
        z10 = z9;

        if z9 == 0 goto label06;

        z10 = z9;

        if r3 == null goto label06;

        $r12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $d3 = virtualinvoke r3.<java.lang.Number: double doubleValue()>();

        $r13 = staticinvoke <android.media.Utils: android.util.Range intRangeFor(double)>($d3);

        z10 = virtualinvoke $r12.<android.util.Range: boolean contains(android.util.Range)>($r13);

     label06:
        z11 = z10;

        if z10 == 0 goto label11;

        z11 = z10;

        if r2 == null goto label11;

        z11 = z10;

        if r1 == null goto label11;

        $i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        $i6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        if $i5 > $i6 goto label07;

        z12 = 1;

        goto label08;

     label07:
        z12 = 0;

     label08:
        $i7 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        i0 = staticinvoke <android.media.Utils: int divUp(int,int)>($i7, $i8);

        $i9 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        i1 = staticinvoke <android.media.Utils: int divUp(int,int)>($i9, $i10);

        i2 = i0 * i1;

        if z12 == 0 goto label09;

        $r6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $z1 = virtualinvoke $r6.<android.util.Range: boolean contains(java.lang.Comparable)>($r7);

        if $z1 == 0 goto label09;

        $r9 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r8 = new android.util.Rational;

        specialinvoke $r8.<android.util.Rational: void <init>(int,int)>(i0, i1);

        $z2 = virtualinvoke $r9.<android.util.Range: boolean contains(java.lang.Comparable)>($r8);

        if $z2 == 0 goto label09;

        $r11 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r10 = new android.util.Rational;

        $i11 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i12 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        specialinvoke $r10.<android.util.Rational: void <init>(int,int)>($i11, $i12);

        $z3 = virtualinvoke $r11.<android.util.Range: boolean contains(java.lang.Comparable)>($r10);

        if $z3 == 0 goto label09;

        z13 = 1;

        goto label10;

     label09:
        z13 = 0;

     label10:
        z11 = z13;

        if z13 == 0 goto label11;

        z11 = z13;

        if r3 == null goto label11;

        d0 = (double) i2;

        d1 = virtualinvoke r3.<java.lang.Number: double doubleValue()>();

        $r4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $d2 = d0 * d1;

        $r5 = staticinvoke <android.media.Utils: android.util.Range longRangeFor(double)>($d2);

        z11 = virtualinvoke $r4.<android.util.Range: boolean contains(android.util.Range)>($r5);

     label11:
        return z11;
    }

    private void updateLimits()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i53, $i56, $i58, $i62, $i65, $i67, $i68;
        android.util.Range $r1, $r2, $r3, $r4, $r7, $r11, $r14, $r18, $r19, $r20, $r21, $r22, $r23, $r26, $r30, $r33, $r37, $r38, $r39, $r40, $r43, $r47, $r50, $r54, $r55, $r57, $r58, $r61, $r65, $r68, $r71, $r72, $r73, $r77, $r81, $r82, $r83, $r87, $r91, $r93, $r94, $r97, $r101, $r104, $r107, $r108, $r111, $r114, $r115, $r118, $r122, $r125, $r129, $r132, $r136, $r139, $r143, r144, r145, r146;
        java.lang.Comparable $r5, $r8, $r12, $r15, $r24, $r27, $r31, $r34, $r41, $r44, $r48, $r51, $r59, $r62, $r66, $r69, $r74, $r78, $r84, $r88, $r95, $r98, $r102, $r105, $r109, $r112, $r116, $r119, $r123, $r126, $r130, $r133, $r137, $r140;
        java.lang.Integer $r6, $r9, $r10, $r13, $r16, $r17, $r25, $r28, $r29, $r32, $r35, $r36, $r42, $r45, $r46, $r49, $r52, $r53, $r60, $r63, $r67, $r70, $r75, $r76, $r79, $r80, $r85, $r86, $r89, $r90, $r96, $r99, $r103, $r106, $r110, $r113, $r117, $r120, $r124, $r127, $r134, $r135, $r141, $r142;
        android.util.Rational $r56, $r64, $r92, $r100;
        long $l52, $l54, $l55, $l57, $l59, $l60, $l61, $l63, $l64, $l66;
        java.lang.Long $r121, $r128, $r131, $r138;
        double $d0, $d1, $d2;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $r3 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>($r1, $i0);

        r144 = virtualinvoke $r2.<android.util.Range: android.util.Range intersect(android.util.Range)>($r3);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange> = r144;

        $r4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r5 = virtualinvoke $r4.<android.util.Range: java.lang.Comparable getLower()>();

        $r6 = (java.lang.Integer) $r5;

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r8 = virtualinvoke $r7.<android.util.Range: java.lang.Comparable getUpper()>();

        $r9 = (java.lang.Integer) $r8;

        $i2 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $i3 = $i1 / $i2;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r11 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r12 = virtualinvoke $r11.<android.util.Range: java.lang.Comparable getUpper()>();

        $r13 = (java.lang.Integer) $r12;

        $i4 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r15 = virtualinvoke $r14.<android.util.Range: java.lang.Comparable getLower()>();

        $r16 = (java.lang.Integer) $r15;

        $i5 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $i6 = $i4 / $i5;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r18 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r10, $r17);

        $r19 = virtualinvoke r144.<android.util.Range: android.util.Range intersect(android.util.Range)>($r18);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange> = $r19;

        $r21 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r20 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $i7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $r22 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>($r20, $i7);

        r145 = virtualinvoke $r21.<android.util.Range: android.util.Range intersect(android.util.Range)>($r22);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange> = r145;

        $r23 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r24 = virtualinvoke $r23.<android.util.Range: java.lang.Comparable getLower()>();

        $r25 = (java.lang.Integer) $r24;

        $i8 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        $r26 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r27 = virtualinvoke $r26.<android.util.Range: java.lang.Comparable getUpper()>();

        $r28 = (java.lang.Integer) $r27;

        $i9 = virtualinvoke $r28.<java.lang.Integer: int intValue()>();

        $i10 = $i8 / $i9;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r30 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r31 = virtualinvoke $r30.<android.util.Range: java.lang.Comparable getUpper()>();

        $r32 = (java.lang.Integer) $r31;

        $i11 = virtualinvoke $r32.<java.lang.Integer: int intValue()>();

        $r33 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r34 = virtualinvoke $r33.<android.util.Range: java.lang.Comparable getLower()>();

        $r35 = (java.lang.Integer) $r34;

        $i12 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();

        $i13 = $i11 / $i12;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r37 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r29, $r36);

        $r38 = virtualinvoke r145.<android.util.Range: android.util.Range intersect(android.util.Range)>($r37);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange> = $r38;

        $r40 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r39 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r41 = virtualinvoke $r39.<android.util.Range: java.lang.Comparable getLower()>();

        $r42 = (java.lang.Integer) $r41;

        $i14 = virtualinvoke $r42.<java.lang.Integer: int intValue()>();

        $r43 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r44 = virtualinvoke $r43.<android.util.Range: java.lang.Comparable getLower()>();

        $r45 = (java.lang.Integer) $r44;

        $i15 = virtualinvoke $r45.<java.lang.Integer: int intValue()>();

        $i16 = $i14 * $i15;

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r47 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r48 = virtualinvoke $r47.<android.util.Range: java.lang.Comparable getUpper()>();

        $r49 = (java.lang.Integer) $r48;

        $i17 = virtualinvoke $r49.<java.lang.Integer: int intValue()>();

        $r50 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r51 = virtualinvoke $r50.<android.util.Range: java.lang.Comparable getUpper()>();

        $r52 = (java.lang.Integer) $r51;

        $i18 = virtualinvoke $r52.<java.lang.Integer: int intValue()>();

        $i19 = $i17 * $i18;

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r54 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r46, $r53);

        $r55 = virtualinvoke $r40.<android.util.Range: android.util.Range intersect(android.util.Range)>($r54);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r55;

        $r58 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r56 = new android.util.Rational;

        $r57 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r59 = virtualinvoke $r57.<android.util.Range: java.lang.Comparable getLower()>();

        $r60 = (java.lang.Integer) $r59;

        $i20 = virtualinvoke $r60.<java.lang.Integer: int intValue()>();

        $r61 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r62 = virtualinvoke $r61.<android.util.Range: java.lang.Comparable getUpper()>();

        $r63 = (java.lang.Integer) $r62;

        $i21 = virtualinvoke $r63.<java.lang.Integer: int intValue()>();

        specialinvoke $r56.<android.util.Rational: void <init>(int,int)>($i20, $i21);

        $r64 = new android.util.Rational;

        $r65 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r66 = virtualinvoke $r65.<android.util.Range: java.lang.Comparable getUpper()>();

        $r67 = (java.lang.Integer) $r66;

        $i22 = virtualinvoke $r67.<java.lang.Integer: int intValue()>();

        $r68 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r69 = virtualinvoke $r68.<android.util.Range: java.lang.Comparable getLower()>();

        $r70 = (java.lang.Integer) $r69;

        $i23 = virtualinvoke $r70.<java.lang.Integer: int intValue()>();

        specialinvoke $r64.<android.util.Rational: void <init>(int,int)>($i22, $i23);

        $r71 = virtualinvoke $r58.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r56, $r64);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r71;

        $r73 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r72 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r74 = virtualinvoke $r72.<android.util.Range: java.lang.Comparable getLower()>();

        $r75 = (java.lang.Integer) $r74;

        $i24 = virtualinvoke $r75.<java.lang.Integer: int intValue()>();

        $i26 = $i24 - 1;

        $i25 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i28 = $i26 * $i25;

        $i27 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i29 = $i28 + $i27;

        $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i29);

        $r77 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r78 = virtualinvoke $r77.<android.util.Range: java.lang.Comparable getUpper()>();

        $r79 = (java.lang.Integer) $r78;

        $i30 = virtualinvoke $r79.<java.lang.Integer: int intValue()>();

        $i31 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i32 = $i30 * $i31;

        $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i32);

        $r81 = virtualinvoke $r73.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r76, $r80);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r81;

        $r83 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r82 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r84 = virtualinvoke $r82.<android.util.Range: java.lang.Comparable getLower()>();

        $r85 = (java.lang.Integer) $r84;

        $i33 = virtualinvoke $r85.<java.lang.Integer: int intValue()>();

        $i35 = $i33 - 1;

        $i34 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i37 = $i35 * $i34;

        $i36 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $i38 = $i37 + $i36;

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i38);

        $r87 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r88 = virtualinvoke $r87.<android.util.Range: java.lang.Comparable getUpper()>();

        $r89 = (java.lang.Integer) $r88;

        $i39 = virtualinvoke $r89.<java.lang.Integer: int intValue()>();

        $i40 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i41 = $i39 * $i40;

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i41);

        $r91 = virtualinvoke $r83.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r86, $r90);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r91;

        $r94 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r92 = new android.util.Rational;

        $r93 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r95 = virtualinvoke $r93.<android.util.Range: java.lang.Comparable getLower()>();

        $r96 = (java.lang.Integer) $r95;

        $i42 = virtualinvoke $r96.<java.lang.Integer: int intValue()>();

        $r97 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r98 = virtualinvoke $r97.<android.util.Range: java.lang.Comparable getUpper()>();

        $r99 = (java.lang.Integer) $r98;

        $i43 = virtualinvoke $r99.<java.lang.Integer: int intValue()>();

        specialinvoke $r92.<android.util.Rational: void <init>(int,int)>($i42, $i43);

        $r100 = new android.util.Rational;

        $r101 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r102 = virtualinvoke $r101.<android.util.Range: java.lang.Comparable getUpper()>();

        $r103 = (java.lang.Integer) $r102;

        $i44 = virtualinvoke $r103.<java.lang.Integer: int intValue()>();

        $r104 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r105 = virtualinvoke $r104.<android.util.Range: java.lang.Comparable getLower()>();

        $r106 = (java.lang.Integer) $r105;

        $i45 = virtualinvoke $r106.<java.lang.Integer: int intValue()>();

        specialinvoke $r100.<android.util.Rational: void <init>(int,int)>($i44, $i45);

        $r107 = virtualinvoke $r94.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r92, $r100);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange> = $r107;

        $i46 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        $r108 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r109 = virtualinvoke $r108.<android.util.Range: java.lang.Comparable getUpper()>();

        $r110 = (java.lang.Integer) $r109;

        $i47 = virtualinvoke $r110.<java.lang.Integer: int intValue()>();

        $r111 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r112 = virtualinvoke $r111.<android.util.Range: java.lang.Comparable getUpper()>();

        $r113 = (java.lang.Integer) $r112;

        $i48 = virtualinvoke $r113.<java.lang.Integer: int intValue()>();

        $i49 = staticinvoke <java.lang.Math: int min(int,int)>($i47, $i48);

        $i50 = staticinvoke <java.lang.Math: int min(int,int)>($i46, $i49);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit> = $i50;

        $r115 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r114 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r116 = virtualinvoke $r114.<android.util.Range: java.lang.Comparable getLower()>();

        $r117 = (java.lang.Integer) $r116;

        $i51 = virtualinvoke $r117.<java.lang.Integer: int intValue()>();

        $l52 = (long) $i51;

        $r118 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r119 = virtualinvoke $r118.<android.util.Range: java.lang.Comparable getLower()>();

        $r120 = (java.lang.Integer) $r119;

        $i53 = virtualinvoke $r120.<java.lang.Integer: int intValue()>();

        $l54 = (long) $i53;

        $l55 = $l52 * $l54;

        $r121 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l55);

        $r122 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r123 = virtualinvoke $r122.<android.util.Range: java.lang.Comparable getUpper()>();

        $r124 = (java.lang.Integer) $r123;

        $i56 = virtualinvoke $r124.<java.lang.Integer: int intValue()>();

        $l57 = (long) $i56;

        $r125 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r126 = virtualinvoke $r125.<android.util.Range: java.lang.Comparable getUpper()>();

        $r127 = (java.lang.Integer) $r126;

        $i58 = virtualinvoke $r127.<java.lang.Integer: int intValue()>();

        $l59 = (long) $i58;

        $l60 = $l57 * $l59;

        $r128 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l60);

        r146 = virtualinvoke $r115.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r121, $r128);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = r146;

        $r129 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r130 = virtualinvoke r146.<android.util.Range: java.lang.Comparable getLower()>();

        $r131 = (java.lang.Long) $r130;

        $l61 = virtualinvoke $r131.<java.lang.Long: long longValue()>();

        $r132 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r133 = virtualinvoke $r132.<android.util.Range: java.lang.Comparable getUpper()>();

        $r134 = (java.lang.Integer) $r133;

        $i62 = virtualinvoke $r134.<java.lang.Integer: int intValue()>();

        $l63 = (long) $i62;

        $l64 = $l61 / $l63;

        $i65 = (int) $l64;

        $r135 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i65);

        $r136 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r137 = virtualinvoke $r136.<android.util.Range: java.lang.Comparable getUpper()>();

        $r138 = (java.lang.Long) $r137;

        $l66 = virtualinvoke $r138.<java.lang.Long: long longValue()>();

        $d0 = (double) $l66;

        $r139 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r140 = virtualinvoke $r139.<android.util.Range: java.lang.Comparable getLower()>();

        $r141 = (java.lang.Integer) $r140;

        $i67 = virtualinvoke $r141.<java.lang.Integer: int intValue()>();

        $d1 = (double) $i67;

        $d2 = $d0 / $d1;

        $i68 = (int) $d2;

        $r142 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i68);

        $r143 = virtualinvoke $r129.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r135, $r142);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r143;

        return;
    }

    public boolean areSizeAndRateSupported(int, int, double)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1;
        double d0;
        java.lang.Integer $r1, $r2;
        java.lang.Double $r3;
        boolean $z0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $z0 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Number)>($r1, $r2, $r3);

        return $z0;
    }

    public android.util.Range getAchievableFrameRatesFor(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, $i3;
        java.util.Map r1;
        java.lang.Integer $r2, $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        android.util.Range $r5;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Number)>($r2, $r3, null);

        if $z0 == 0 goto label3;

        r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: java.util.Map mMeasuredFrameRates>;

        if r1 == null goto label2;

        $i3 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i3 > 0 goto label1;

        goto label2;

     label1:
        $r5 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range estimateFrameRatesFor(int,int)>(i0, i1);

        return $r5;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", "Codec did not publish any measurement data.");

        return null;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported size");

        throw $r4;
    }

    public android.util.Range getAspectRatioRange(boolean)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        boolean z0;
        android.util.Range r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        goto label2;

     label1:
        r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

     label2:
        return r1;
    }

    public android.util.Range getBitrateRange()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange>;

        return $r1;
    }

    public android.util.Range getBlockCountRange()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        return $r1;
    }

    public android.util.Size getBlockSize()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Size $r1;
        int $i0, $i1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = new android.util.Size;

        $i1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        specialinvoke $r1.<android.util.Size: void <init>(int,int)>($i1, $i0);

        return $r1;
    }

    public android.util.Range getBlocksPerSecondRange()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        return $r1;
    }

    public int getHeightAlignment()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int $i0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        return $i0;
    }

    public int getSmallerDimensionUpperLimit()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int $i0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        return $i0;
    }

    public android.util.Range getSupportedFrameRates()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        return $r1;
    }

    public android.util.Range getSupportedFrameRatesFor(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8, i9, i10;
        java.lang.Integer $r2, $r3, $r10, $r17;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        android.util.Range $r5, $r8, $r12, $r15, $r19;
        java.lang.Comparable $r6, $r9, $r13, $r16;
        java.lang.Long $r7, $r14;
        long $l5, $l7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.lang.Double $r11, $r18;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i9 := @parameter0: int;

        i0 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Number)>($r2, $r3, null);

        if $z0 == 0 goto label1;

        $i1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i2 = staticinvoke <android.media.Utils: int divUp(int,int)>(i9, $i1);

        $i3 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i4 = staticinvoke <android.media.Utils: int divUp(int,int)>(i0, $i3);

        i10 = $i2 * $i4;

        $r5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r6 = virtualinvoke $r5.<android.util.Range: java.lang.Comparable getLower()>();

        $r7 = (java.lang.Long) $r6;

        $l5 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $d1 = (double) $l5;

        $d0 = (double) i10;

        $d2 = $d1 / $d0;

        $r8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r9 = virtualinvoke $r8.<android.util.Range: java.lang.Comparable getLower()>();

        $r10 = (java.lang.Integer) $r9;

        $i6 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $d3 = (double) $i6;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>($d2, $d3);

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r13 = virtualinvoke $r12.<android.util.Range: java.lang.Comparable getUpper()>();

        $r14 = (java.lang.Long) $r13;

        $l7 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $d6 = (double) $l7;

        $d5 = (double) i10;

        $d7 = $d6 / $d5;

        $r15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r16 = virtualinvoke $r15.<android.util.Range: java.lang.Comparable getUpper()>();

        $r17 = (java.lang.Integer) $r16;

        $i8 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $d8 = (double) $i8;

        $d9 = staticinvoke <java.lang.Math: double min(double,double)>($d7, $d8);

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d9);

        $r19 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r11, $r18);

        return $r19;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported size");

        throw $r4;
    }

    public android.util.Range getSupportedHeights()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        return $r1;
    }

    public android.util.Range getSupportedHeightsFor(int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i23, i24;
        android.util.Range r1, $r2, $r4, $r7, $r10, $r13, $r18, $r22, $r26, r35, r36;
        java.lang.Integer $r3, $r6, $r12, $r16, $r17, $r21, $r25, $r27, $r28;
        boolean $z0;
        java.lang.Comparable $r5, $r8, $r11, $r14, $r19, $r23;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        android.util.Rational $r9, $r15, $r20, $r24;
        java.lang.Throwable $r29;
        java.lang.StringBuilder $r30;
        java.lang.String $r33;
        java.lang.IllegalArgumentException $r34, r37;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

     label1:
        r35 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r2.<android.util.Range: boolean contains(java.lang.Comparable)>($r3);

        if $z0 == 0 goto label5;

        $i2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i3 = i0 % $i2;

        if $i3 != 0 goto label5;

        $i4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        i23 = staticinvoke <android.media.Utils: int divUp(int,int)>(i0, $i4);

        $r4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r5 = virtualinvoke $r4.<android.util.Range: java.lang.Comparable getLower()>();

        $r6 = (java.lang.Integer) $r5;

        $i5 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $i6 = staticinvoke <android.media.Utils: int divUp(int,int)>($i5, i23);

        $d0 = (double) i23;

        $r7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r8 = virtualinvoke $r7.<android.util.Range: java.lang.Comparable getUpper()>();

        $r9 = (android.util.Rational) $r8;

        $d1 = virtualinvoke $r9.<android.util.Rational: double doubleValue()>();

        $d2 = $d0 / $d1;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i7 = (int) $d3;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i7);

        $r10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r11 = virtualinvoke $r10.<android.util.Range: java.lang.Comparable getUpper()>();

        $r12 = (java.lang.Integer) $r11;

        $i8 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $i9 = $i8 / i23;

        $d4 = (double) i23;

        $r13 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r14 = virtualinvoke $r13.<android.util.Range: java.lang.Comparable getLower()>();

        $r15 = (android.util.Rational) $r14;

        $d5 = virtualinvoke $r15.<android.util.Rational: double doubleValue()>();

        $d6 = $d4 / $d5;

        $i10 = (int) $d6;

        i24 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i10);

        $i12 = i1 - 1;

        $i11 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i14 = $i12 * $i11;

        $i13 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $i15 = $i14 + $i13;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        $i16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i17 = $i16 * i24;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        r1 = virtualinvoke r35.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r16, $r17);

     label2:
        r36 = r1;

     label3:
        $i18 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        if i0 <= $i18 goto label4;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i21 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        r36 = virtualinvoke r1.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r27, $r28);

     label4:
        $d7 = (double) i0;

        $r18 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r19 = virtualinvoke $r18.<android.util.Range: java.lang.Comparable getUpper()>();

        $r20 = (android.util.Rational) $r19;

        $d8 = virtualinvoke $r20.<android.util.Rational: double doubleValue()>();

        $d9 = $d7 / $d8;

        $d10 = staticinvoke <java.lang.Math: double ceil(double)>($d9);

        $i19 = (int) $d10;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $d11 = (double) i0;

        $r22 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r23 = virtualinvoke $r22.<android.util.Range: java.lang.Comparable getLower()>();

        $r24 = (android.util.Rational) $r23;

        $d12 = virtualinvoke $r24.<android.util.Rational: double doubleValue()>();

        $d13 = $d11 / $d12;

        $i20 = (int) $d13;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r26 = virtualinvoke r36.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r21, $r25);

        return $r26;

     label5:
        r37 = new java.lang.IllegalArgumentException;

        specialinvoke r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported width");

        throw r37;

     label6:
        $r29 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not get supported heights for ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("VideoCapabilities", $r33);

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported width");

        throw $r34;

        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
        catch java.lang.IllegalArgumentException from label3 to label4 with label6;
        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
        catch java.lang.IllegalArgumentException from label5 to label6 with label6;
    }

    public java.util.List getSupportedPerformancePoints()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        java.util.List $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: java.util.List mPerformancePoints>;

        return $r1;
    }

    public android.util.Range getSupportedWidths()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        return $r1;
    }

    public android.util.Range getSupportedWidthsFor(int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i23, i24;
        android.util.Range r1, $r2, $r4, $r7, $r10, $r13, $r18, $r22, $r26, r35, r36;
        java.lang.Integer $r3, $r6, $r12, $r16, $r17, $r21, $r25, $r27, $r28;
        boolean $z0;
        java.lang.Comparable $r5, $r8, $r11, $r14, $r19, $r23;
        android.util.Rational $r9, $r15, $r20, $r24;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.lang.Throwable $r29;
        java.lang.StringBuilder $r30;
        java.lang.String $r33;
        java.lang.IllegalArgumentException $r34, r37;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

     label1:
        r35 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r2.<android.util.Range: boolean contains(java.lang.Comparable)>($r3);

        if $z0 == 0 goto label5;

        $i2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $i3 = i0 % $i2;

        if $i3 != 0 goto label5;

        $i4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        i23 = staticinvoke <android.media.Utils: int divUp(int,int)>(i0, $i4);

        $r4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r5 = virtualinvoke $r4.<android.util.Range: java.lang.Comparable getLower()>();

        $r6 = (java.lang.Integer) $r5;

        $i5 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $i6 = staticinvoke <android.media.Utils: int divUp(int,int)>($i5, i23);

        $r7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r8 = virtualinvoke $r7.<android.util.Range: java.lang.Comparable getLower()>();

        $r9 = (android.util.Rational) $r8;

        $d0 = virtualinvoke $r9.<android.util.Rational: double doubleValue()>();

        $d1 = (double) i23;

        $d2 = $d0 * $d1;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i7 = (int) $d3;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i7);

        $r10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r11 = virtualinvoke $r10.<android.util.Range: java.lang.Comparable getUpper()>();

        $r12 = (java.lang.Integer) $r11;

        $i8 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $i9 = $i8 / i23;

        $r13 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r14 = virtualinvoke $r13.<android.util.Range: java.lang.Comparable getUpper()>();

        $r15 = (android.util.Rational) $r14;

        $d4 = virtualinvoke $r15.<android.util.Rational: double doubleValue()>();

        $d5 = (double) i23;

        $d6 = $d4 * $d5;

        $i10 = (int) $d6;

        i24 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i10);

        $i12 = i1 - 1;

        $i11 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i14 = $i12 * $i11;

        $i13 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i15 = $i14 + $i13;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        $i16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i17 = $i16 * i24;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        r1 = virtualinvoke r35.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r16, $r17);

     label2:
        r36 = r1;

     label3:
        $i18 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        if i0 <= $i18 goto label4;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i21 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        r36 = virtualinvoke r1.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r27, $r28);

     label4:
        $r18 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r19 = virtualinvoke $r18.<android.util.Range: java.lang.Comparable getLower()>();

        $r20 = (android.util.Rational) $r19;

        $d7 = virtualinvoke $r20.<android.util.Rational: double doubleValue()>();

        $d8 = (double) i0;

        $d9 = $d7 * $d8;

        $d10 = staticinvoke <java.lang.Math: double ceil(double)>($d9);

        $i19 = (int) $d10;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r22 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r23 = virtualinvoke $r22.<android.util.Range: java.lang.Comparable getUpper()>();

        $r24 = (android.util.Rational) $r23;

        $d11 = virtualinvoke $r24.<android.util.Rational: double doubleValue()>();

        $d12 = (double) i0;

        $d13 = $d11 * $d12;

        $i20 = (int) $d13;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r26 = virtualinvoke r36.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r21, $r25);

        return $r26;

     label5:
        r37 = new java.lang.IllegalArgumentException;

        specialinvoke r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported height");

        throw r37;

     label6:
        $r29 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not get supported widths for ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("VideoCapabilities", $r33);

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported height");

        throw $r34;

        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
        catch java.lang.IllegalArgumentException from label3 to label4 with label6;
        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
        catch java.lang.IllegalArgumentException from label5 to label6 with label6;
    }

    public int getWidthAlignment()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int $i0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        return $i0;
    }

    public boolean isSizeSupported(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1;
        java.lang.Integer $r1, $r2;
        boolean $z0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Number)>($r1, $r2, null);

        return $z0;
    }

    public boolean supportsFormat(android.media.MediaFormat)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.media.MediaFormat r1;
        java.util.Map r2;
        java.lang.Object $r3, $r5, $r7;
        java.lang.Integer $r4, $r6;
        java.lang.Number $r8;
        boolean $z0, $z1;
        android.util.Range $r9;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        r1 := @parameter0: android.media.MediaFormat;

        r2 = virtualinvoke r1.<android.media.MediaFormat: java.util.Map getMap()>();

        $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("width");

        $r4 = (java.lang.Integer) $r3;

        $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("height");

        $r6 = (java.lang.Integer) $r5;

        $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("frame-rate");

        $r8 = (java.lang.Number) $r7;

        $z0 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Number)>($r4, $r6, $r8);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r9 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange>;

        $z1 = staticinvoke <android.media.MediaCodecInfo$CodecCapabilities: boolean access$100(android.util.Range,android.media.MediaFormat)>($r9, r1);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static void <clinit>()
    {
        <android.media.MediaCodecInfo$VideoCapabilities: java.lang.String TAG> = "VideoCapabilities";

        return;
    }
}
