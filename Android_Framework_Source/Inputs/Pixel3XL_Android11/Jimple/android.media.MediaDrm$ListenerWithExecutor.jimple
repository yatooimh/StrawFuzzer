class android.media.MediaDrm$ListenerWithExecutor extends java.lang.Object
{
    private final java.util.function.Consumer mConsumer;
    private final java.util.concurrent.Executor mExecutor;

    public void <init>(java.util.concurrent.Executor, java.util.function.Consumer)
    {
        android.media.MediaDrm$ListenerWithExecutor r0;
        java.util.concurrent.Executor r1;
        java.util.function.Consumer r2;

        r0 := @this: android.media.MediaDrm$ListenerWithExecutor;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: java.util.function.Consumer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaDrm$ListenerWithExecutor: java.util.concurrent.Executor mExecutor> = r1;

        r0.<android.media.MediaDrm$ListenerWithExecutor: java.util.function.Consumer mConsumer> = r2;

        return;
    }

    static java.util.concurrent.Executor access$000(android.media.MediaDrm$ListenerWithExecutor)
    {
        android.media.MediaDrm$ListenerWithExecutor r0;
        java.util.concurrent.Executor $r1;

        r0 := @parameter0: android.media.MediaDrm$ListenerWithExecutor;

        $r1 = r0.<android.media.MediaDrm$ListenerWithExecutor: java.util.concurrent.Executor mExecutor>;

        return $r1;
    }

    static java.util.function.Consumer access$700(android.media.MediaDrm$ListenerWithExecutor)
    {
        android.media.MediaDrm$ListenerWithExecutor r0;
        java.util.function.Consumer $r1;

        r0 := @parameter0: android.media.MediaDrm$ListenerWithExecutor;

        $r1 = r0.<android.media.MediaDrm$ListenerWithExecutor: java.util.function.Consumer mConsumer>;

        return $r1;
    }
}
