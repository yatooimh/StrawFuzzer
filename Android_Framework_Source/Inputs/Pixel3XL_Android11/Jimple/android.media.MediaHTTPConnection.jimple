public class android.media.MediaHTTPConnection extends android.media.IMediaHTTPConnection$Stub
{
    private static final int CONNECT_TIMEOUT_MS;
    private static final int HTTP_TEMP_REDIRECT;
    private static final int MAX_REDIRECTS;
    private static final java.lang.String TAG;
    private static final boolean VERBOSE;
    private boolean mAllowCrossDomainRedirect;
    private boolean mAllowCrossProtocolRedirect;
    private volatile java.net.HttpURLConnection mConnection;
    private long mCurrentOffset;
    private java.util.Map mHeaders;
    private java.io.InputStream mInputStream;
    private long mNativeContext;
    private final java.util.concurrent.atomic.AtomicInteger mNumDisconnectingThreads;
    private long mTotalSize;
    private java.net.URL mURL;

    static void <clinit>()
    {
        <android.media.MediaHTTPConnection: boolean VERBOSE> = 0;

        <android.media.MediaHTTPConnection: java.lang.String TAG> = "MediaHTTPConnection";

        <android.media.MediaHTTPConnection: int MAX_REDIRECTS> = 20;

        <android.media.MediaHTTPConnection: int HTTP_TEMP_REDIRECT> = 307;

        <android.media.MediaHTTPConnection: int CONNECT_TIMEOUT_MS> = 30000;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        staticinvoke <android.media.MediaHTTPConnection: void native_init()>();

        return;
    }

    public void <init>()
    {
        android.media.MediaHTTPConnection r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        java.net.CookieHandler $r2;

        r0 := @this: android.media.MediaHTTPConnection;

        specialinvoke r0.<android.media.IMediaHTTPConnection$Stub: void <init>()>();

        r0.<android.media.MediaHTTPConnection: long mCurrentOffset> = -1L;

        r0.<android.media.MediaHTTPConnection: java.net.URL mURL> = null;

        r0.<android.media.MediaHTTPConnection: java.util.Map mHeaders> = null;

        r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection> = null;

        r0.<android.media.MediaHTTPConnection: long mTotalSize> = -1L;

        r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream> = null;

        r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect> = 1;

        r0.<android.media.MediaHTTPConnection: boolean mAllowCrossProtocolRedirect> = 1;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<android.media.MediaHTTPConnection: java.util.concurrent.atomic.AtomicInteger mNumDisconnectingThreads> = $r1;

        $r2 = staticinvoke <java.net.CookieHandler: java.net.CookieHandler getDefault()>();

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaHTTPConnection", "MediaHTTPConnection: Unexpected. No CookieHandler found.");

     label1:
        specialinvoke r0.<android.media.MediaHTTPConnection: void native_setup()>();

        return;
    }

    private java.util.Map convertHeaderStringToMap(java.lang.String)
    {
        android.media.MediaHTTPConnection r0;
        java.util.HashMap r1;
        java.lang.String[] r2;
        int i0, i1, $i2, i3;
        boolean $z0;
        java.lang.Throwable $r4;
        java.lang.String r5, r6, r7, r8;

        r0 := @this: android.media.MediaHTTPConnection;

        r5 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        r2 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("\r\n");

        i0 = lengthof r2;

     label2:
        i3 = 0;

     label3:
        if i3 >= i0 goto label8;

        r6 = r2[i3];

     label4:
        i1 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>(":");

     label5:
        if i1 < 0 goto label7;

     label6:
        r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $i2 = i1 + 1;

        r8 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i2);

        $z0 = specialinvoke r0.<android.media.MediaHTTPConnection: boolean filterOutInternalHeaders(java.lang.String,java.lang.String)>(r7, r8);

        if $z0 != 0 goto label7;

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8);

     label7:
        i3 = i3 + 1;

        goto label3;

     label8:
        exitmonitor r0;

        return r1;

     label9:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    private boolean filterOutInternalHeaders(java.lang.String, java.lang.String)
    {
        android.media.MediaHTTPConnection r0;
        java.lang.String r1, $r2, r4;
        boolean z0, $z1;
        java.lang.Throwable $r3;

        r0 := @this: android.media.MediaHTTPConnection;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r2 = "android-allow-cross-domain-redirect";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z1 == 0 goto label3;

        z0 = staticinvoke <android.media.MediaHTTPConnection: boolean parseBoolean(java.lang.String)>(r1);

        r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect> = z0;

        r0.<android.media.MediaHTTPConnection: boolean mAllowCrossProtocolRedirect> = z0;

     label2:
        exitmonitor r0;

        return 1;

     label3:
        exitmonitor r0;

        return 0;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private static final boolean isLocalHost(java.net.URL)
    {
        boolean z0, $z1;
        java.net.InetAddress $r0;
        java.lang.Throwable $r1;
        java.net.URL r2;
        java.lang.String r3;

        r2 := @parameter0: java.net.URL;

        if r2 != null goto label1;

        return 0;

     label1:
        r3 = virtualinvoke r2.<java.net.URL: java.lang.String getHost()>();

        if r3 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("localhost");

        if $z1 == 0 goto label4;

     label3:
        return 1;

     label4:
        $r0 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>(r3);

        z0 = virtualinvoke $r0.<java.net.InetAddress: boolean isLoopbackAddress()>();

     label5:
        if z0 == 0 goto label6;

        return 1;

     label6:
        goto label8;

     label7:
        $r1 := @caughtexception;

     label8:
        return 0;

        catch java.lang.IllegalArgumentException from label2 to label3 with label7;
        catch java.lang.IllegalArgumentException from label4 to label5 with label7;
    }

    private final native void native_finalize();

    private final native android.os.IBinder native_getIMemory();

    private static final native void native_init();

    private final native int native_readAt(long, int);

    private final native void native_setup();

    private static boolean parseBoolean(java.lang.String)
    {
        java.lang.String r0, $r3, $r4;
        long l0;
        byte $b1;
        java.lang.Throwable $r2;
        boolean $z1, $z2, z3, z4;

        r0 := @parameter0: java.lang.String;

        z3 = 1;

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

     label2:
        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label3;

        goto label4;

     label3:
        z3 = 0;

     label4:
        return z3;

     label5:
        $r2 := @caughtexception;

        $r3 = "true";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 != 0 goto label7;

        $r4 = "yes";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z2 == 0 goto label6;

        goto label7;

     label6:
        z4 = 0;

        goto label8;

     label7:
        z4 = 1;

     label8:
        return z4;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
    }

    private int readAt(long, byte[], int)
    {
        android.media.MediaHTTPConnection r0;
        long l0, l2, $l5, $l6, $l7;
        int i1, i3, i11;
        android.os.StrictMode$ThreadPolicy$Builder $r1, r34;
        android.os.StrictMode$ThreadPolicy $r2;
        byte $b4;
        java.io.InputStream $r3;
        java.lang.Throwable $r4, $r6, $r7, $r15, $r16, $r24, $r25, r36;
        java.lang.Exception $r5;
        java.lang.String $r14, $r23, $r32;
        byte[] r33;
        java.lang.StringBuilder r39, r41, r43;

        r0 := @this: android.media.MediaHTTPConnection;

        l0 := @parameter0: long;

        r33 := @parameter1: byte[];

        i1 := @parameter2: int;

        entermonitor r0;

     label01:
        r34 = new android.os.StrictMode$ThreadPolicy$Builder;

        specialinvoke r34.<android.os.StrictMode$ThreadPolicy$Builder: void <init>()>();

        $r1 = virtualinvoke r34.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitAll()>();

        $r2 = virtualinvoke $r1.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>();

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r2);

     label02:
        l2 = r0.<android.media.MediaHTTPConnection: long mCurrentOffset>;

     label03:
        $b4 = l0 cmp l2;

        if $b4 == 0 goto label05;

     label04:
        specialinvoke r0.<android.media.MediaHTTPConnection: void seekTo(long)>(l0);

     label05:
        $r3 = r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream>;

        i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>(r33, 0, i1);

     label06:
        i11 = i3;

        if i3 != -1 goto label07;

        i11 = 0;

     label07:
        $l6 = r0.<android.media.MediaHTTPConnection: long mCurrentOffset>;

        $l5 = (long) i11;

        $l7 = $l6 + $l5;

        r0.<android.media.MediaHTTPConnection: long mCurrentOffset> = $l7;

     label08:
        exitmonitor r0;

        return i11;

     label09:
        $r24 := @caughtexception;

        goto label13;

     label10:
        $r7 := @caughtexception;

        r36 = $r7;

        goto label15;

     label11:
        $r5 := @caughtexception;

        exitmonitor r0;

        return -1;

     label12:
        $r6 := @caughtexception;

     label13:
        exitmonitor r0;

        return -1;

     label14:
        $r15 := @caughtexception;

        r36 = $r15;

     label15:
        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAt ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        $r14 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaHTTPConnection", $r14);

     label16:
        exitmonitor r0;

        return -1010;

     label17:
        $r16 := @caughtexception;

     label18:
        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAt ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r23 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaHTTPConnection", $r23);

     label19:
        exitmonitor r0;

        return -1010;

     label20:
        $r25 := @caughtexception;

     label21:
        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAt ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r32 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaHTTPConnection", $r32);

     label22:
        exitmonitor r0;

        return -1010;

     label23:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.net.ProtocolException from label02 to label03 with label20;
        catch java.net.NoRouteToHostException from label02 to label03 with label17;
        catch java.net.UnknownServiceException from label02 to label03 with label14;
        catch java.io.IOException from label02 to label03 with label12;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.net.ProtocolException from label04 to label05 with label20;
        catch java.net.NoRouteToHostException from label04 to label05 with label17;
        catch java.net.UnknownServiceException from label04 to label05 with label10;
        catch java.io.IOException from label04 to label05 with label09;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.net.ProtocolException from label05 to label06 with label20;
        catch java.net.NoRouteToHostException from label05 to label06 with label17;
        catch java.net.UnknownServiceException from label05 to label06 with label10;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.net.ProtocolException from label07 to label08 with label20;
        catch java.net.NoRouteToHostException from label07 to label08 with label17;
        catch java.net.UnknownServiceException from label07 to label08 with label10;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
    }

    private void seekTo(long) throws java.io.IOException
    {
        android.media.MediaHTTPConnection r0;
        long l0, $l6, $l9;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11;
        int i1, $i2, $i3, $i5, $i8, i10, i11;
        java.util.concurrent.atomic.AtomicInteger $r1, $r4;
        java.net.URLConnection $r2, $r41;
        java.net.HttpURLConnection $r3, $r5, $r6, $r8, $r12, $r22, $r23, $r25, $r26, $r35, $r42, r49, $r59;
        java.util.Map $r7, $r32;
        byte $b4, $b7;
        java.lang.String $r11, $r14, $r16, $r17, $r19, $r20, $r21, $r31, $r37, $r39, r51, r52, r57, r60;
        java.net.URL $r13, $r15, $r18, $r27, r46;
        java.io.InputStream $r24;
        java.util.Set $r33;
        java.lang.Object $r34, $r36, $r38;
        java.net.Proxy $r40;
        java.lang.Throwable $r43, $r44, $r45;
        java.util.Iterator r47;
        java.util.Map$Entry r48;
        java.lang.StringBuilder r50, r66;
        java.net.ProtocolException r54;
        java.io.BufferedInputStream r55;
        java.io.IOException r56, r67, r68;
        java.net.NoRouteToHostException r58, r61, r62, r63, r64, r65;

        r0 := @this: android.media.MediaHTTPConnection;

        l0 := @parameter0: long;

        entermonitor r0;

     label01:
        specialinvoke r0.<android.media.MediaHTTPConnection: void teardownConnection()>();

     label02:
        r46 = r0.<android.media.MediaHTTPConnection: java.net.URL mURL>;

        z0 = staticinvoke <android.media.MediaHTTPConnection: boolean isLocalHost(java.net.URL)>(r46);

     label03:
        i10 = 0;

     label04:
        $r1 = r0.<android.media.MediaHTTPConnection: java.util.concurrent.atomic.AtomicInteger mNumDisconnectingThreads>;

        $i2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i2 > 0 goto label58;

     label05:
        if z0 == 0 goto label08;

     label06:
        $r40 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        $r41 = virtualinvoke r46.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r40);

        $r42 = (java.net.HttpURLConnection) $r41;

        r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection> = $r42;

     label07:
        goto label09;

     label08:
        $r2 = virtualinvoke r46.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = (java.net.HttpURLConnection) $r2;

        r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection> = $r3;

     label09:
        $r4 = r0.<android.media.MediaHTTPConnection: java.util.concurrent.atomic.AtomicInteger mNumDisconnectingThreads>;

        $i3 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i3 > 0 goto label57;

        $r5 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        virtualinvoke $r5.<java.net.HttpURLConnection: void setConnectTimeout(int)>(30000);

        $r6 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $z1 = r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect>;

        virtualinvoke $r6.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>($z1);

        $r7 = r0.<android.media.MediaHTTPConnection: java.util.Map mHeaders>;

        if $r7 == null goto label12;

        $r32 = r0.<android.media.MediaHTTPConnection: java.util.Map mHeaders>;

        $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Set entrySet()>();

        r47 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z9 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label12;

        $r34 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r48 = (java.util.Map$Entry) $r34;

        $r35 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $r36 = interfaceinvoke r48.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r37 = (java.lang.String) $r36;

        $r38 = interfaceinvoke r48.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r39 = (java.lang.String) $r38;

        virtualinvoke $r35.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r37, $r39);

     label11:
        goto label10;

     label12:
        $b4 = l0 cmp 0L;

        if $b4 <= 0 goto label14;

     label13:
        r49 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bytes=");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r31 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r49.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Range", $r31);

     label14:
        $r8 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        i1 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>();

     label15:
        if i1 == 300 goto label34;

        if i1 == 301 goto label34;

        if i1 == 302 goto label34;

        if i1 == 303 goto label34;

        if i1 == 307 goto label34;

     label16:
        $z8 = r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect>;

        if $z8 == 0 goto label17;

        $r26 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $r27 = virtualinvoke $r26.<java.net.HttpURLConnection: java.net.URL getURL()>();

        r0.<android.media.MediaHTTPConnection: java.net.URL mURL> = $r27;

     label17:
        if i1 != 206 goto label27;

     label18:
        $r25 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        r51 = virtualinvoke $r25.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Range");

        r0.<android.media.MediaHTTPConnection: long mTotalSize> = -1L;

     label19:
        if r51 == null goto label26;

     label20:
        i11 = virtualinvoke r51.<java.lang.String: int lastIndexOf(int)>(47);

     label21:
        if i11 < 0 goto label26;

     label22:
        $i8 = i11 + 1;

        r52 = virtualinvoke r51.<java.lang.String: java.lang.String substring(int)>($i8);

     label23:
        $l9 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r52);

        r0.<android.media.MediaHTTPConnection: long mTotalSize> = $l9;

     label24:
        goto label26;

     label25:
        $r44 := @caughtexception;

     label26:
        goto label29;

     label27:
        if i1 != 200 goto label33;

     label28:
        $r22 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $i5 = virtualinvoke $r22.<java.net.HttpURLConnection: int getContentLength()>();

        $l6 = (long) $i5;

        r0.<android.media.MediaHTTPConnection: long mTotalSize> = $l6;

     label29:
        $b7 = l0 cmp 0L;

        if $b7 <= 0 goto label31;

        if i1 != 206 goto label30;

        goto label31;

     label30:
        r54 = new java.net.ProtocolException;

        specialinvoke r54.<java.net.ProtocolException: void <init>()>();

        throw r54;

     label31:
        r55 = new java.io.BufferedInputStream;

        $r23 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $r24 = virtualinvoke $r23.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke r55.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r24);

        r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream> = r55;

        r0.<android.media.MediaHTTPConnection: long mCurrentOffset> = l0;

     label32:
        exitmonitor r0;

        return;

     label33:
        r56 = new java.io.IOException;

        specialinvoke r56.<java.io.IOException: void <init>()>();

        throw r56;

     label34:
        i10 = i10 + 1;

        if i10 > 20 goto label56;

     label35:
        $r12 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        r57 = virtualinvoke $r12.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

     label36:
        if i1 != 307 goto label40;

     label37:
        $z6 = virtualinvoke r57.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z6 != 0 goto label40;

        $z7 = virtualinvoke r57.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $z7 == 0 goto label39;

     label38:
        goto label40;

     label39:
        r58 = new java.net.NoRouteToHostException;

        specialinvoke r58.<java.net.NoRouteToHostException: void <init>(java.lang.String)>("Invalid redirect");

        throw r58;

     label40:
        $r59 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        r60 = virtualinvoke $r59.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");

     label41:
        if r60 == null goto label55;

     label42:
        r46 = new java.net.URL;

        $r13 = r0.<android.media.MediaHTTPConnection: java.net.URL mURL>;

        specialinvoke r46.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r13, r60);

     label43:
        $r14 = virtualinvoke r46.<java.net.URL: java.lang.String getProtocol()>();

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z2 != 0 goto label46;

        $r21 = virtualinvoke r46.<java.net.URL: java.lang.String getProtocol()>();

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z5 == 0 goto label45;

     label44:
        goto label46;

     label45:
        r61 = new java.net.NoRouteToHostException;

        specialinvoke r61.<java.net.NoRouteToHostException: void <init>(java.lang.String)>("Unsupported protocol redirect");

        throw r61;

     label46:
        $r15 = r0.<android.media.MediaHTTPConnection: java.net.URL mURL>;

        $r16 = virtualinvoke $r15.<java.net.URL: java.lang.String getProtocol()>();

        $r17 = virtualinvoke r46.<java.net.URL: java.lang.String getProtocol()>();

        z10 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        $z3 = r0.<android.media.MediaHTTPConnection: boolean mAllowCrossProtocolRedirect>;

        if $z3 != 0 goto label49;

     label47:
        if z10 == 0 goto label48;

        goto label49;

     label48:
        r62 = new java.net.NoRouteToHostException;

        specialinvoke r62.<java.net.NoRouteToHostException: void <init>(java.lang.String)>("Cross-protocol redirects are disallowed");

        throw r62;

     label49:
        $r18 = r0.<android.media.MediaHTTPConnection: java.net.URL mURL>;

        $r19 = virtualinvoke $r18.<java.net.URL: java.lang.String getHost()>();

        $r20 = virtualinvoke r46.<java.net.URL: java.lang.String getHost()>();

        z11 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        $z4 = r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect>;

        if $z4 != 0 goto label52;

     label50:
        if z11 == 0 goto label51;

        goto label52;

     label51:
        r63 = new java.net.NoRouteToHostException;

        specialinvoke r63.<java.net.NoRouteToHostException: void <init>(java.lang.String)>("Cross-domain redirects are disallowed");

        throw r63;

     label52:
        if i1 == 307 goto label54;

     label53:
        r0.<android.media.MediaHTTPConnection: java.net.URL mURL> = r46;

     label54:
        goto label04;

     label55:
        r64 = new java.net.NoRouteToHostException;

        specialinvoke r64.<java.net.NoRouteToHostException: void <init>(java.lang.String)>("Invalid redirect");

        throw r64;

     label56:
        r65 = new java.net.NoRouteToHostException;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many redirects: ");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r11 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r65.<java.net.NoRouteToHostException: void <init>(java.lang.String)>($r11);

        throw r65;

     label57:
        r67 = new java.io.IOException;

        specialinvoke r67.<java.io.IOException: void <init>(java.lang.String)>("concurrently disconnecting");

        throw r67;

     label58:
        r68 = new java.io.IOException;

        specialinvoke r68.<java.io.IOException: void <init>(java.lang.String)>("concurrently disconnecting");

        throw r68;

     label59:
        $r43 := @caughtexception;

     label60:
        r0.<android.media.MediaHTTPConnection: long mTotalSize> = -1L;

        specialinvoke r0.<android.media.MediaHTTPConnection: void teardownConnection()>();

        r0.<android.media.MediaHTTPConnection: long mCurrentOffset> = -1L;

        throw $r43;

     label61:
        $r45 := @caughtexception;

        exitmonitor r0;

        throw $r45;

        catch java.lang.Throwable from label01 to label02 with label61;
        catch java.io.IOException from label02 to label03 with label59;
        catch java.lang.Throwable from label02 to label03 with label61;
        catch java.io.IOException from label04 to label05 with label59;
        catch java.lang.Throwable from label04 to label05 with label61;
        catch java.io.IOException from label06 to label07 with label59;
        catch java.lang.Throwable from label06 to label07 with label61;
        catch java.io.IOException from label08 to label09 with label59;
        catch java.lang.Throwable from label08 to label09 with label61;
        catch java.io.IOException from label09 to label10 with label59;
        catch java.lang.Throwable from label09 to label10 with label61;
        catch java.io.IOException from label10 to label11 with label59;
        catch java.lang.Throwable from label10 to label11 with label61;
        catch java.io.IOException from label13 to label14 with label59;
        catch java.lang.Throwable from label13 to label14 with label61;
        catch java.io.IOException from label14 to label15 with label59;
        catch java.lang.Throwable from label14 to label15 with label61;
        catch java.io.IOException from label16 to label17 with label59;
        catch java.lang.Throwable from label16 to label17 with label61;
        catch java.io.IOException from label18 to label19 with label59;
        catch java.lang.Throwable from label18 to label19 with label61;
        catch java.io.IOException from label20 to label21 with label59;
        catch java.lang.Throwable from label20 to label21 with label61;
        catch java.io.IOException from label22 to label23 with label59;
        catch java.lang.Throwable from label22 to label23 with label61;
        catch java.lang.NumberFormatException from label23 to label24 with label25;
        catch java.io.IOException from label23 to label24 with label59;
        catch java.lang.Throwable from label23 to label24 with label61;
        catch java.io.IOException from label28 to label29 with label59;
        catch java.lang.Throwable from label28 to label29 with label61;
        catch java.io.IOException from label30 to label31 with label59;
        catch java.lang.Throwable from label30 to label31 with label61;
        catch java.io.IOException from label31 to label32 with label59;
        catch java.lang.Throwable from label31 to label32 with label61;
        catch java.io.IOException from label33 to label34 with label59;
        catch java.lang.Throwable from label33 to label34 with label61;
        catch java.io.IOException from label35 to label36 with label59;
        catch java.lang.Throwable from label35 to label36 with label61;
        catch java.io.IOException from label37 to label38 with label59;
        catch java.lang.Throwable from label37 to label38 with label61;
        catch java.io.IOException from label39 to label40 with label59;
        catch java.lang.Throwable from label39 to label40 with label61;
        catch java.io.IOException from label40 to label41 with label59;
        catch java.lang.Throwable from label40 to label41 with label61;
        catch java.io.IOException from label42 to label43 with label59;
        catch java.lang.Throwable from label42 to label43 with label61;
        catch java.io.IOException from label43 to label44 with label59;
        catch java.lang.Throwable from label43 to label44 with label61;
        catch java.io.IOException from label45 to label46 with label59;
        catch java.lang.Throwable from label45 to label46 with label61;
        catch java.io.IOException from label46 to label47 with label59;
        catch java.lang.Throwable from label46 to label47 with label61;
        catch java.io.IOException from label48 to label49 with label59;
        catch java.lang.Throwable from label48 to label49 with label61;
        catch java.io.IOException from label49 to label50 with label59;
        catch java.lang.Throwable from label49 to label50 with label61;
        catch java.io.IOException from label51 to label52 with label59;
        catch java.lang.Throwable from label51 to label52 with label61;
        catch java.io.IOException from label53 to label54 with label59;
        catch java.lang.Throwable from label53 to label54 with label61;
        catch java.io.IOException from label55 to label56 with label59;
        catch java.lang.Throwable from label55 to label56 with label61;
        catch java.io.IOException from label56 to label57 with label59;
        catch java.lang.Throwable from label56 to label57 with label61;
        catch java.io.IOException from label57 to label58 with label59;
        catch java.lang.Throwable from label57 to label58 with label61;
        catch java.io.IOException from label58 to label59 with label59;
        catch java.lang.Throwable from label58 to label59 with label61;
        catch java.lang.Throwable from label60 to label61 with label61;
    }

    private void teardownConnection()
    {
        android.media.MediaHTTPConnection r0;
        java.net.HttpURLConnection $r1, $r7;
        java.io.InputStream $r2, r5;
        java.lang.Throwable $r3, $r4;

        r0 := @this: android.media.MediaHTTPConnection;

        entermonitor r0;

     label1:
        $r1 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        if $r1 == null goto label8;

        r5 = r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream>;

     label2:
        if r5 == null goto label7;

     label3:
        $r2 = r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream>;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

     label6:
        r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream> = null;

     label7:
        $r7 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

        r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection> = null;

        r0.<android.media.MediaHTTPConnection: long mCurrentOffset> = -1L;

     label8:
        exitmonitor r0;

        return;

     label9:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public android.os.IBinder connect(java.lang.String, java.lang.String)
    {
        android.media.MediaHTTPConnection r0;
        java.lang.String r1, r7;
        java.net.URL r2;
        java.util.Map $r3;
        java.lang.Throwable $r4, $r5, $r6;
        android.os.IBinder r8;

        r0 := @this: android.media.MediaHTTPConnection;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.media.MediaHTTPConnection: void disconnect()>();

     label2:
        r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect> = 1;

        r2 = new java.net.URL;

        specialinvoke r2.<java.net.URL: void <init>(java.lang.String)>(r7);

        r0.<android.media.MediaHTTPConnection: java.net.URL mURL> = r2;

        $r3 = specialinvoke r0.<android.media.MediaHTTPConnection: java.util.Map convertHeaderStringToMap(java.lang.String)>(r1);

        r0.<android.media.MediaHTTPConnection: java.util.Map mHeaders> = $r3;

     label3:
        r8 = specialinvoke r0.<android.media.MediaHTTPConnection: android.os.IBinder native_getIMemory()>();

     label4:
        exitmonitor r0;

        return r8;

     label5:
        $r4 := @caughtexception;

        goto label8;

     label6:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r0;

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.net.MalformedURLException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public void disconnect()
    {
        android.media.MediaHTTPConnection r0;
        java.util.concurrent.atomic.AtomicInteger $r1, $r2, $r5;
        java.lang.Throwable $r3, $r4;
        java.net.HttpURLConnection r6;

        r0 := @this: android.media.MediaHTTPConnection;

        $r1 = r0.<android.media.MediaHTTPConnection: java.util.concurrent.atomic.AtomicInteger mNumDisconnectingThreads>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

     label01:
        r6 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

     label02:
        if r6 == null goto label04;

     label03:
        virtualinvoke r6.<java.net.HttpURLConnection: void disconnect()>();

     label04:
        entermonitor r0;

     label05:
        specialinvoke r0.<android.media.MediaHTTPConnection: void teardownConnection()>();

        r0.<android.media.MediaHTTPConnection: java.util.Map mHeaders> = null;

        r0.<android.media.MediaHTTPConnection: java.net.URL mURL> = null;

        exitmonitor r0;

     label06:
        $r2 = r0.<android.media.MediaHTTPConnection: java.util.concurrent.atomic.AtomicInteger mNumDisconnectingThreads>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        return;

     label07:
        $r3 := @caughtexception;

     label08:
        exitmonitor r0;

     label09:
        throw $r3;

     label10:
        $r4 := @caughtexception;

        $r5 = r0.<android.media.MediaHTTPConnection: java.util.concurrent.atomic.AtomicInteger mNumDisconnectingThreads>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    protected void finalize()
    {
        android.media.MediaHTTPConnection r0;

        r0 := @this: android.media.MediaHTTPConnection;

        specialinvoke r0.<android.media.MediaHTTPConnection: void native_finalize()>();

        return;
    }

    public java.lang.String getMIMEType()
    {
        android.media.MediaHTTPConnection r0;
        java.net.HttpURLConnection $r1, r4;
        java.lang.Throwable $r2, $r3;
        java.lang.String r6;

        r0 := @this: android.media.MediaHTTPConnection;

        entermonitor r0;

     label1:
        r4 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

     label2:
        if r4 != null goto label6;

     label3:
        specialinvoke r0.<android.media.MediaHTTPConnection: void seekTo(long)>(0L);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        return "application/octet-stream";

     label6:
        $r1 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        r6 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label7:
        exitmonitor r0;

        return r6;

     label8:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public long getSize()
    {
        android.media.MediaHTTPConnection r0;
        long l0;
        java.lang.Throwable $r1, $r2;
        java.net.HttpURLConnection r3;

        r0 := @this: android.media.MediaHTTPConnection;

        entermonitor r0;

     label1:
        r3 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

     label2:
        if r3 != null goto label6;

     label3:
        specialinvoke r0.<android.media.MediaHTTPConnection: void seekTo(long)>(0L);

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

        exitmonitor r0;

        return -1L;

     label6:
        l0 = r0.<android.media.MediaHTTPConnection: long mTotalSize>;

     label7:
        exitmonitor r0;

        return l0;

     label8:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public java.lang.String getUri()
    {
        android.media.MediaHTTPConnection r0;
        java.net.URL $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: android.media.MediaHTTPConnection;

        entermonitor r0;

     label1:
        $r1 = r0.<android.media.MediaHTTPConnection: java.net.URL mURL>;

        r3 = virtualinvoke $r1.<java.net.URL: java.lang.String toString()>();

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int readAt(long, int)
    {
        android.media.MediaHTTPConnection r0;
        long l0;
        java.lang.Throwable $r2;
        int i1, i2;

        r0 := @this: android.media.MediaHTTPConnection;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        i2 = specialinvoke r0.<android.media.MediaHTTPConnection: int native_readAt(long,int)>(l0, i1);

     label2:
        exitmonitor r0;

        return i2;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
