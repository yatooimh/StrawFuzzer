public class android.media.MediaMetadataRetriever extends java.lang.Object implements java.lang.AutoCloseable
{
    private static final int EMBEDDED_PICTURE_TYPE_ANY;
    public static final int METADATA_KEY_ALBUM;
    public static final int METADATA_KEY_ALBUMARTIST;
    public static final int METADATA_KEY_ARTIST;
    public static final int METADATA_KEY_AUTHOR;
    public static final int METADATA_KEY_BITRATE;
    public static final int METADATA_KEY_BITS_PER_SAMPLE;
    public static final int METADATA_KEY_CAPTURE_FRAMERATE;
    public static final int METADATA_KEY_CD_TRACK_NUMBER;
    public static final int METADATA_KEY_COLOR_RANGE;
    public static final int METADATA_KEY_COLOR_STANDARD;
    public static final int METADATA_KEY_COLOR_TRANSFER;
    public static final int METADATA_KEY_COMPILATION;
    public static final int METADATA_KEY_COMPOSER;
    public static final int METADATA_KEY_DATE;
    public static final int METADATA_KEY_DISC_NUMBER;
    public static final int METADATA_KEY_DURATION;
    public static final int METADATA_KEY_EXIF_LENGTH;
    public static final int METADATA_KEY_EXIF_OFFSET;
    public static final int METADATA_KEY_GENRE;
    public static final int METADATA_KEY_HAS_AUDIO;
    public static final int METADATA_KEY_HAS_IMAGE;
    public static final int METADATA_KEY_HAS_VIDEO;
    public static final int METADATA_KEY_IMAGE_COUNT;
    public static final int METADATA_KEY_IMAGE_HEIGHT;
    public static final int METADATA_KEY_IMAGE_PRIMARY;
    public static final int METADATA_KEY_IMAGE_ROTATION;
    public static final int METADATA_KEY_IMAGE_WIDTH;
    public static final int METADATA_KEY_IS_DRM;
    public static final int METADATA_KEY_LOCATION;
    public static final int METADATA_KEY_MIMETYPE;
    public static final int METADATA_KEY_NUM_TRACKS;
    public static final int METADATA_KEY_SAMPLERATE;
    public static final int METADATA_KEY_TIMED_TEXT_LANGUAGES;
    public static final int METADATA_KEY_TITLE;
    public static final int METADATA_KEY_VIDEO_FRAME_COUNT;
    public static final int METADATA_KEY_VIDEO_HEIGHT;
    public static final int METADATA_KEY_VIDEO_ROTATION;
    public static final int METADATA_KEY_VIDEO_WIDTH;
    public static final int METADATA_KEY_WRITER;
    public static final int METADATA_KEY_YEAR;
    public static final int OPTION_CLOSEST;
    public static final int OPTION_CLOSEST_SYNC;
    public static final int OPTION_NEXT_SYNC;
    public static final int OPTION_PREVIOUS_SYNC;
    private static final java.lang.String[] STANDARD_GENRES;
    private long mNativeContext;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.media.MediaMetadataRetriever: int OPTION_PREVIOUS_SYNC> = 0;

        <android.media.MediaMetadataRetriever: int OPTION_NEXT_SYNC> = 1;

        <android.media.MediaMetadataRetriever: int OPTION_CLOSEST_SYNC> = 2;

        <android.media.MediaMetadataRetriever: int OPTION_CLOSEST> = 3;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_YEAR> = 8;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_WRITER> = 11;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_VIDEO_WIDTH> = 18;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_VIDEO_ROTATION> = 24;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_VIDEO_HEIGHT> = 19;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_VIDEO_FRAME_COUNT> = 32;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_TITLE> = 7;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_TIMED_TEXT_LANGUAGES> = 21;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_SAMPLERATE> = 38;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_NUM_TRACKS> = 10;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_MIMETYPE> = 12;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_LOCATION> = 23;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_IS_DRM> = 22;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_IMAGE_WIDTH> = 29;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_IMAGE_ROTATION> = 31;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_IMAGE_PRIMARY> = 28;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_IMAGE_HEIGHT> = 30;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_IMAGE_COUNT> = 27;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_HAS_VIDEO> = 17;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_HAS_IMAGE> = 26;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_HAS_AUDIO> = 16;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_GENRE> = 6;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_EXIF_OFFSET> = 33;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_EXIF_LENGTH> = 34;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_DURATION> = 9;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_DISC_NUMBER> = 14;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_DATE> = 5;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_COMPOSER> = 4;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_COMPILATION> = 15;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_COLOR_TRANSFER> = 36;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_COLOR_STANDARD> = 35;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_COLOR_RANGE> = 37;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_CD_TRACK_NUMBER> = 0;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_CAPTURE_FRAMERATE> = 25;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_BITS_PER_SAMPLE> = 39;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_BITRATE> = 20;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_AUTHOR> = 3;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_ARTIST> = 2;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_ALBUMARTIST> = 13;

        <android.media.MediaMetadataRetriever: int METADATA_KEY_ALBUM> = 1;

        <android.media.MediaMetadataRetriever: int EMBEDDED_PICTURE_TYPE_ANY> = 65535;

        $r0 = newarray (java.lang.String)[148];

        $r0[0] = "Blues";

        $r0[1] = "Classic Rock";

        $r0[2] = "Country";

        $r0[3] = "Dance";

        $r0[4] = "Disco";

        $r0[5] = "Funk";

        $r0[6] = "Grunge";

        $r0[7] = "Hip-Hop";

        $r0[8] = "Jazz";

        $r0[9] = "Metal";

        $r0[10] = "New Age";

        $r0[11] = "Oldies";

        $r0[12] = "Other";

        $r0[13] = "Pop";

        $r0[14] = "R&B";

        $r0[15] = "Rap";

        $r0[16] = "Reggae";

        $r0[17] = "Rock";

        $r0[18] = "Techno";

        $r0[19] = "Industrial";

        $r0[20] = "Alternative";

        $r0[21] = "Ska";

        $r0[22] = "Death Metal";

        $r0[23] = "Pranks";

        $r0[24] = "Soundtrack";

        $r0[25] = "Euro-Techno";

        $r0[26] = "Ambient";

        $r0[27] = "Trip-Hop";

        $r0[28] = "Vocal";

        $r0[29] = "Jazz+Funk";

        $r0[30] = "Fusion";

        $r0[31] = "Trance";

        $r0[32] = "Classical";

        $r0[33] = "Instrumental";

        $r0[34] = "Acid";

        $r0[35] = "House";

        $r0[36] = "Game";

        $r0[37] = "Sound Clip";

        $r0[38] = "Gospel";

        $r0[39] = "Noise";

        $r0[40] = "AlternRock";

        $r0[41] = "Bass";

        $r0[42] = "Soul";

        $r0[43] = "Punk";

        $r0[44] = "Space";

        $r0[45] = "Meditative";

        $r0[46] = "Instrumental Pop";

        $r0[47] = "Instrumental Rock";

        $r0[48] = "Ethnic";

        $r0[49] = "Gothic";

        $r0[50] = "Darkwave";

        $r0[51] = "Techno-Industrial";

        $r0[52] = "Electronic";

        $r0[53] = "Pop-Folk";

        $r0[54] = "Eurodance";

        $r0[55] = "Dream";

        $r0[56] = "Southern Rock";

        $r0[57] = "Comedy";

        $r0[58] = "Cult";

        $r0[59] = "Gangsta";

        $r0[60] = "Top 40";

        $r0[61] = "Christian Rap";

        $r0[62] = "Pop/Funk";

        $r0[63] = "Jungle";

        $r0[64] = "Native American";

        $r0[65] = "Cabaret";

        $r0[66] = "New Wave";

        $r0[67] = "Psychadelic";

        $r0[68] = "Rave";

        $r0[69] = "Showtunes";

        $r0[70] = "Trailer";

        $r0[71] = "Lo-Fi";

        $r0[72] = "Tribal";

        $r0[73] = "Acid Punk";

        $r0[74] = "Acid Jazz";

        $r0[75] = "Polka";

        $r0[76] = "Retro";

        $r0[77] = "Musical";

        $r0[78] = "Rock & Roll";

        $r0[79] = "Hard Rock";

        $r0[80] = "Folk";

        $r0[81] = "Folk-Rock";

        $r0[82] = "National Folk";

        $r0[83] = "Swing";

        $r0[84] = "Fast Fusion";

        $r0[85] = "Bebob";

        $r0[86] = "Latin";

        $r0[87] = "Revival";

        $r0[88] = "Celtic";

        $r0[89] = "Bluegrass";

        $r0[90] = "Avantgarde";

        $r0[91] = "Gothic Rock";

        $r0[92] = "Progressive Rock";

        $r0[93] = "Psychedelic Rock";

        $r0[94] = "Symphonic Rock";

        $r0[95] = "Slow Rock";

        $r0[96] = "Big Band";

        $r0[97] = "Chorus";

        $r0[98] = "Easy Listening";

        $r0[99] = "Acoustic";

        $r0[100] = "Humour";

        $r0[101] = "Speech";

        $r0[102] = "Chanson";

        $r0[103] = "Opera";

        $r0[104] = "Chamber Music";

        $r0[105] = "Sonata";

        $r0[106] = "Symphony";

        $r0[107] = "Booty Bass";

        $r0[108] = "Primus";

        $r0[109] = "Porn Groove";

        $r0[110] = "Satire";

        $r0[111] = "Slow Jam";

        $r0[112] = "Club";

        $r0[113] = "Tango";

        $r0[114] = "Samba";

        $r0[115] = "Folklore";

        $r0[116] = "Ballad";

        $r0[117] = "Power Ballad";

        $r0[118] = "Rhythmic Soul";

        $r0[119] = "Freestyle";

        $r0[120] = "Duet";

        $r0[121] = "Punk Rock";

        $r0[122] = "Drum Solo";

        $r0[123] = "A capella";

        $r0[124] = "Euro-House";

        $r0[125] = "Dance Hall";

        $r0[126] = "Goa";

        $r0[127] = "Drum & Bass";

        $r0[128] = "Club-House";

        $r0[129] = "Hardcore";

        $r0[130] = "Terror";

        $r0[131] = "Indie";

        $r0[132] = "BritPop";

        $r0[133] = "Afro-Punk";

        $r0[134] = "Polsk Punk";

        $r0[135] = "Beat";

        $r0[136] = "Christian Gangsta Rap";

        $r0[137] = "Heavy Metal";

        $r0[138] = "Black Metal";

        $r0[139] = "Crossover";

        $r0[140] = "Contemporary Christian";

        $r0[141] = "Christian Rock";

        $r0[142] = "Merengue";

        $r0[143] = "Salsa";

        $r0[144] = "Thrash Metal";

        $r0[145] = "Anime";

        $r0[146] = "Jpop";

        $r0[147] = "Synthpop";

        <android.media.MediaMetadataRetriever: java.lang.String[] STANDARD_GENRES> = $r0;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        staticinvoke <android.media.MediaMetadataRetriever: void native_init()>();

        return;
    }

    public void <init>()
    {
        android.media.MediaMetadataRetriever r0;

        r0 := @this: android.media.MediaMetadataRetriever;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.media.MediaMetadataRetriever: void native_setup()>();

        return;
    }

    private native java.util.List _getFrameAtIndex(int, int, android.media.MediaMetadataRetriever$BitmapParams);

    private native android.graphics.Bitmap _getFrameAtTime(long, int, int, int, android.media.MediaMetadataRetriever$BitmapParams);

    private native android.graphics.Bitmap _getImageAtIndex(int, android.media.MediaMetadataRetriever$BitmapParams);

    private native void _setDataSource(android.media.MediaDataSource) throws java.lang.IllegalArgumentException;

    private native void _setDataSource(android.os.IBinder, java.lang.String, java.lang.String[], java.lang.String[]) throws java.lang.IllegalArgumentException;

    private java.lang.String convertGenreTag(java.lang.String)
    {
        android.media.MediaMetadataRetriever r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        char $c1;
        java.lang.String $r1, r9, r10, r12, r14, r15;
        java.lang.String[] $r2, $r3, $r5, $r6;
        java.lang.StringBuilder $r4, r11, r13;
        java.lang.Throwable $r7, $r8;

        r0 := @this: android.media.MediaMetadataRetriever;

        r9 := @parameter0: java.lang.String;

        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if z0 == 0 goto label01;

        return null;

     label01:
        $c1 = virtualinvoke r9.<java.lang.String: char charAt(int)>(0);

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z1 == 0 goto label09;

     label02:
        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9);

     label03:
        if i9 < 0 goto label06;

     label04:
        $r5 = <android.media.MediaMetadataRetriever: java.lang.String[] STANDARD_GENRES>;

        $i8 = lengthof $r5;

        if i9 >= $i8 goto label06;

        $r6 = <android.media.MediaMetadataRetriever: java.lang.String[] STANDARD_GENRES>;

        r10 = $r6[i9];

     label05:
        return r10;

     label06:
        goto label08;

     label07:
        $r8 := @caughtexception;

     label08:
        return null;

     label09:
        r11 = null;

        r12 = null;

     label10:
        r13 = r11;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z6 != 0 goto label13;

        r13 = r11;

        if r11 != null goto label11;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r13 = $r4;

     label11:
        $i7 = virtualinvoke r13.<java.lang.StringBuilder: int length()>();

        if $i7 == 0 goto label12;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label12:
        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

     label13:
        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z7 == 0 goto label16;

        r14 = null;

        if r13 == null goto label15;

        $i6 = virtualinvoke r13.<java.lang.StringBuilder: int length()>();

        if $i6 != 0 goto label14;

        r14 = null;

        goto label15;

     label14:
        r14 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        return r14;

     label16:
        $z2 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("(RX)");

        if $z2 == 0 goto label17;

        r12 = "Remix";

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>(4);

        r11 = r13;

        goto label10;

     label17:
        $z3 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("(CR)");

        if $z3 == 0 goto label18;

        r12 = "Cover";

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>(4);

        r11 = r13;

        goto label10;

     label18:
        $z4 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("((");

        if $z4 == 0 goto label21;

        i10 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(41);

        if i10 != -1 goto label19;

        r12 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>(1);

        r9 = "";

        goto label20;

     label19:
        $i4 = i10 + 1;

        r12 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);

        $i5 = i10 + 1;

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i5);

     label20:
        r11 = r13;

        goto label10;

     label21:
        $z5 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("(");

        if $z5 == 0 goto label29;

        i11 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(41);

        if i11 != -1 goto label22;

        return null;

     label22:
        r15 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(1, i11);

     label23:
        $r1 = virtualinvoke r15.<java.lang.String: java.lang.String toString()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label24:
        if i0 < 0 goto label27;

     label25:
        $r2 = <android.media.MediaMetadataRetriever: java.lang.String[] STANDARD_GENRES>;

        $i2 = lengthof $r2;

        if i0 >= $i2 goto label27;

        $r3 = <android.media.MediaMetadataRetriever: java.lang.String[] STANDARD_GENRES>;

        r12 = $r3[i0];

     label26:
        $i3 = i11 + 1;

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i3);

        r11 = r13;

        goto label10;

     label27:
        return null;

     label28:
        $r7 := @caughtexception;

        return null;

     label29:
        r11 = r13;

        r12 = r9;

        r9 = "";

        goto label10;

        catch java.lang.NumberFormatException from label02 to label03 with label07;
        catch java.lang.NumberFormatException from label04 to label05 with label07;
        catch java.lang.NumberFormatException from label23 to label24 with label28;
        catch java.lang.NumberFormatException from label25 to label26 with label28;
    }

    private native byte[] getEmbeddedPicture(int);

    private java.util.List getFramesAtIndexInternal(int, int, android.media.MediaMetadataRetriever$BitmapParams)
    {
        android.media.MediaMetadataRetriever r0;
        int i0, i1, i2, $i3;
        java.lang.String $r1, $r2, $r4, $r14;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.util.List $r9;
        android.media.MediaMetadataRetriever$BitmapParams r10;
        java.lang.StringBuilder $r11;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: android.media.MediaMetadataRetriever;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r10 := @parameter2: android.media.MediaMetadataRetriever$BitmapParams;

        $r1 = "yes";

        $r2 = virtualinvoke r0.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(17);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(32);

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        if i0 < 0 goto label1;

        if i1 < 1 goto label1;

        if i0 >= i2 goto label1;

        $i3 = i2 - i1;

        if i0 > $i3 goto label1;

        $r9 = specialinvoke r0.<android.media.MediaMetadataRetriever: java.util.List _getFrameAtIndex(int,int,android.media.MediaMetadataRetriever$BitmapParams)>(i0, i1, r10);

        return $r9;

     label1:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid frameIndex or numFrames: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Does not contail video or image sequences");

        throw $r3;
    }

    private android.graphics.Bitmap getImageAtIndexInternal(int, android.media.MediaMetadataRetriever$BitmapParams)
    {
        android.media.MediaMetadataRetriever r0;
        int i0, $i1;
        java.lang.String r1, $r2, $r3, $r9;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8;
        android.graphics.Bitmap $r10;
        android.media.MediaMetadataRetriever$BitmapParams r11;

        r0 := @this: android.media.MediaMetadataRetriever;

        i0 := @parameter0: int;

        r11 := @parameter1: android.media.MediaMetadataRetriever$BitmapParams;

        $r2 = "yes";

        $r3 = virtualinvoke r0.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(26);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        r1 = virtualinvoke r0.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(27);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        if i0 >= $i1 goto label1;

        $r10 = specialinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap _getImageAtIndex(int,android.media.MediaMetadataRetriever$BitmapParams)>(i0, r11);

        return $r10;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid image index: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Does not contail still images");

        throw $r4;
    }

    private native java.lang.String nativeExtractMetadata(int);

    private final native void native_finalize();

    private static native void native_init();

    private native void native_setup();

    private void validate(int, int, int)
    {
        android.media.MediaMetadataRetriever r0;
        int i0, i1, i2;
        java.lang.StringBuilder $r1, $r6, $r11;
        java.lang.IllegalArgumentException $r4, $r9, $r14;
        java.lang.String $r5, $r10, $r15;

        r0 := @this: android.media.MediaMetadataRetriever;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 < 0 goto label3;

        if i0 > 3 goto label3;

        if i1 <= 0 goto label2;

        if i2 <= 0 goto label1;

        return;

     label1:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid height: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid width: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported option: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public void close()
    {
        android.media.MediaMetadataRetriever r0;

        r0 := @this: android.media.MediaMetadataRetriever;

        virtualinvoke r0.<android.media.MediaMetadataRetriever: void release()>();

        return;
    }

    public java.lang.String extractMetadata(int)
    {
        android.media.MediaMetadataRetriever r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: android.media.MediaMetadataRetriever;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<android.media.MediaMetadataRetriever: java.lang.String nativeExtractMetadata(int)>(i0);

        r2 = r1;

        if i0 != 6 goto label1;

        r2 = specialinvoke r0.<android.media.MediaMetadataRetriever: java.lang.String convertGenreTag(java.lang.String)>(r1);

     label1:
        return r2;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.MediaMetadataRetriever r0;
        java.lang.Throwable $r2;

        r0 := @this: android.media.MediaMetadataRetriever;

     label1:
        specialinvoke r0.<android.media.MediaMetadataRetriever: void native_finalize()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public byte[] getEmbeddedPicture()
    {
        android.media.MediaMetadataRetriever r0;
        byte[] $r1;

        r0 := @this: android.media.MediaMetadataRetriever;

        $r1 = specialinvoke r0.<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture(int)>(65535);

        return $r1;
    }

    public android.graphics.Bitmap getFrameAtIndex(int)
    {
        android.media.MediaMetadataRetriever r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        android.graphics.Bitmap $r3;

        r0 := @this: android.media.MediaMetadataRetriever;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.media.MediaMetadataRetriever: java.util.List getFramesAtIndex(int,int)>(i0, 1);

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (android.graphics.Bitmap) $r2;

        return $r3;
    }

    public android.graphics.Bitmap getFrameAtIndex(int, android.media.MediaMetadataRetriever$BitmapParams)
    {
        android.media.MediaMetadataRetriever r0;
        int i0;
        android.media.MediaMetadataRetriever$BitmapParams r1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.graphics.Bitmap $r4;

        r0 := @this: android.media.MediaMetadataRetriever;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.MediaMetadataRetriever$BitmapParams;

        $r2 = virtualinvoke r0.<android.media.MediaMetadataRetriever: java.util.List getFramesAtIndex(int,int,android.media.MediaMetadataRetriever$BitmapParams)>(i0, 1, r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (android.graphics.Bitmap) $r3;

        return $r4;
    }

    public android.graphics.Bitmap getFrameAtTime()
    {
        android.media.MediaMetadataRetriever r0;
        android.graphics.Bitmap $r1;

        r0 := @this: android.media.MediaMetadataRetriever;

        $r1 = specialinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap _getFrameAtTime(long,int,int,int,android.media.MediaMetadataRetriever$BitmapParams)>(-1L, 2, -1, -1, null);

        return $r1;
    }

    public android.graphics.Bitmap getFrameAtTime(long)
    {
        android.media.MediaMetadataRetriever r0;
        long l0;
        android.graphics.Bitmap $r1;

        r0 := @this: android.media.MediaMetadataRetriever;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)>(l0, 2);

        return $r1;
    }

    public android.graphics.Bitmap getFrameAtTime(long, int)
    {
        android.media.MediaMetadataRetriever r0;
        long l0;
        int i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.graphics.Bitmap $r7;

        r0 := @this: android.media.MediaMetadataRetriever;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        if i1 < 0 goto label1;

        if i1 > 3 goto label1;

        $r7 = specialinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap _getFrameAtTime(long,int,int,int,android.media.MediaMetadataRetriever$BitmapParams)>(l0, i1, -1, -1, null);

        return $r7;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported option: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public android.graphics.Bitmap getFrameAtTime(long, int, android.media.MediaMetadataRetriever$BitmapParams)
    {
        android.media.MediaMetadataRetriever r0;
        long l0;
        int i1;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.graphics.Bitmap $r6;
        android.media.MediaMetadataRetriever$BitmapParams r7;

        r0 := @this: android.media.MediaMetadataRetriever;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r7 := @parameter2: android.media.MediaMetadataRetriever$BitmapParams;

        if i1 < 0 goto label1;

        if i1 > 3 goto label1;

        $r6 = specialinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap _getFrameAtTime(long,int,int,int,android.media.MediaMetadataRetriever$BitmapParams)>(l0, i1, -1, -1, r7);

        return $r6;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported option: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public java.util.List getFramesAtIndex(int, int)
    {
        android.media.MediaMetadataRetriever r0;
        int i0, i1;
        java.util.List $r1;

        r0 := @this: android.media.MediaMetadataRetriever;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<android.media.MediaMetadataRetriever: java.util.List getFramesAtIndexInternal(int,int,android.media.MediaMetadataRetriever$BitmapParams)>(i0, i1, null);

        return $r1;
    }

    public java.util.List getFramesAtIndex(int, int, android.media.MediaMetadataRetriever$BitmapParams)
    {
        android.media.MediaMetadataRetriever r0;
        int i0, i1;
        android.media.MediaMetadataRetriever$BitmapParams r1;
        java.util.List $r2;

        r0 := @this: android.media.MediaMetadataRetriever;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.MediaMetadataRetriever$BitmapParams;

        $r2 = specialinvoke r0.<android.media.MediaMetadataRetriever: java.util.List getFramesAtIndexInternal(int,int,android.media.MediaMetadataRetriever$BitmapParams)>(i0, i1, r1);

        return $r2;
    }

    public android.graphics.Bitmap getImageAtIndex(int)
    {
        android.media.MediaMetadataRetriever r0;
        int i0;
        android.graphics.Bitmap $r1;

        r0 := @this: android.media.MediaMetadataRetriever;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getImageAtIndexInternal(int,android.media.MediaMetadataRetriever$BitmapParams)>(i0, null);

        return $r1;
    }

    public android.graphics.Bitmap getImageAtIndex(int, android.media.MediaMetadataRetriever$BitmapParams)
    {
        android.media.MediaMetadataRetriever r0;
        int i0;
        android.media.MediaMetadataRetriever$BitmapParams r1;
        android.graphics.Bitmap $r2;

        r0 := @this: android.media.MediaMetadataRetriever;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.MediaMetadataRetriever$BitmapParams;

        $r2 = specialinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getImageAtIndexInternal(int,android.media.MediaMetadataRetriever$BitmapParams)>(i0, r1);

        return $r2;
    }

    public android.graphics.Bitmap getPrimaryImage()
    {
        android.media.MediaMetadataRetriever r0;
        android.graphics.Bitmap $r1;

        r0 := @this: android.media.MediaMetadataRetriever;

        $r1 = specialinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getImageAtIndexInternal(int,android.media.MediaMetadataRetriever$BitmapParams)>(-1, null);

        return $r1;
    }

    public android.graphics.Bitmap getPrimaryImage(android.media.MediaMetadataRetriever$BitmapParams)
    {
        android.media.MediaMetadataRetriever r0;
        android.media.MediaMetadataRetriever$BitmapParams r1;
        android.graphics.Bitmap $r2;

        r0 := @this: android.media.MediaMetadataRetriever;

        r1 := @parameter0: android.media.MediaMetadataRetriever$BitmapParams;

        $r2 = specialinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getImageAtIndexInternal(int,android.media.MediaMetadataRetriever$BitmapParams)>(-1, r1);

        return $r2;
    }

    public android.graphics.Bitmap getScaledFrameAtTime(long, int, int, int)
    {
        android.media.MediaMetadataRetriever r0;
        long l0;
        int i1, i2, i3;
        android.graphics.Bitmap $r1;

        r0 := @this: android.media.MediaMetadataRetriever;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.media.MediaMetadataRetriever: void validate(int,int,int)>(i1, i2, i3);

        $r1 = specialinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap _getFrameAtTime(long,int,int,int,android.media.MediaMetadataRetriever$BitmapParams)>(l0, i1, i2, i3, null);

        return $r1;
    }

    public android.graphics.Bitmap getScaledFrameAtTime(long, int, int, int, android.media.MediaMetadataRetriever$BitmapParams)
    {
        android.media.MediaMetadataRetriever r0;
        long l0;
        int i1, i2, i3;
        android.media.MediaMetadataRetriever$BitmapParams r1;
        android.graphics.Bitmap $r2;

        r0 := @this: android.media.MediaMetadataRetriever;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: android.media.MediaMetadataRetriever$BitmapParams;

        specialinvoke r0.<android.media.MediaMetadataRetriever: void validate(int,int,int)>(i1, i2, i3);

        $r2 = specialinvoke r0.<android.media.MediaMetadataRetriever: android.graphics.Bitmap _getFrameAtTime(long,int,int,int,android.media.MediaMetadataRetriever$BitmapParams)>(l0, i1, i2, i3, r1);

        return $r2;
    }

    public native android.graphics.Bitmap getThumbnailImageAtIndex(int, android.media.MediaMetadataRetriever$BitmapParams, int, int);

    public native void release();

    public void setDataSource(android.content.Context, android.net.Uri) throws java.lang.IllegalArgumentException, java.lang.SecurityException
    {
        android.media.MediaMetadataRetriever r0;
        java.lang.IllegalArgumentException r1, $r2, r21, r23;
        java.lang.String $r3, $r4, $r5, $r8, r15, $r27;
        boolean $z0, $z1;
        long $l0, $l2, $l3;
        byte $b1;
        java.lang.Throwable $r6, $r7, $r9, $r10, $r11, $r12;
        android.content.Context r13;
        android.net.Uri r14;
        android.content.res.AssetFileDescriptor r16, r17, r19;
        android.content.ContentResolver r18;
        java.io.FileDescriptor r20;
        java.lang.StringBuilder r22, r24, r25;

        r0 := @this: android.media.MediaMetadataRetriever;

        r13 := @parameter0: android.content.Context;

        r14 := @parameter1: android.net.Uri;

        if r14 == null goto label74;

        r15 = virtualinvoke r14.<android.net.Uri: java.lang.String getScheme()>();

        if r15 == null goto label73;

        $z0 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 == 0 goto label01;

        goto label73;

     label01:
        r16 = null;

        r17 = null;

     label02:
        r18 = virtualinvoke r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label03:
        r16 = null;

        r17 = null;

     label04:
        r19 = virtualinvoke r18.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>(r14, "r");

     label05:
        if r19 == null goto label35;

        r16 = r19;

        r17 = r19;

     label06:
        r20 = virtualinvoke r19.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

     label07:
        r16 = r19;

        r17 = r19;

     label08:
        $z1 = virtualinvoke r20.<java.io.FileDescriptor: boolean valid()>();

        if $z1 == 0 goto label21;

     label09:
        r16 = r19;

        r17 = r19;

     label10:
        $l0 = virtualinvoke r19.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label14;

     label11:
        r16 = r19;

        r17 = r19;

     label12:
        virtualinvoke r0.<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)>(r20);

     label13:
        goto label16;

     label14:
        r16 = r19;

        r17 = r19;

     label15:
        $l2 = virtualinvoke r19.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l3 = virtualinvoke r19.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        virtualinvoke r0.<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor,long,long)>(r20, $l2, $l3);

     label16:
        if r19 == null goto label20;

     label17:
        virtualinvoke r19.<android.content.res.AssetFileDescriptor: void close()>();

     label18:
        goto label20;

     label19:
        $r11 := @caughtexception;

        goto label20;

     label20:
        return;

     label21:
        r16 = r19;

        r17 = r19;

     label22:
        r21 = new java.lang.IllegalArgumentException;

     label23:
        r16 = r19;

        r17 = r19;

     label24:
        r22 = new java.lang.StringBuilder;

     label25:
        r16 = r19;

        r17 = r19;

     label26:
        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

     label27:
        r16 = r19;

        r17 = r19;

     label28:
        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got invalid FileDescriptor for ");

     label29:
        r16 = r19;

        r17 = r19;

     label30:
        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

     label31:
        r16 = r19;

        r17 = r19;

     label32:
        $r5 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

     label33:
        r16 = r19;

        r17 = r19;

     label34:
        throw r21;

     label35:
        r16 = r19;

        r17 = r19;

     label36:
        r23 = new java.lang.IllegalArgumentException;

     label37:
        r16 = r19;

        r17 = r19;

     label38:
        r24 = new java.lang.StringBuilder;

     label39:
        r16 = r19;

        r17 = r19;

     label40:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

     label41:
        r16 = r19;

        r17 = r19;

     label42:
        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got null FileDescriptor for ");

     label43:
        r16 = r19;

        r17 = r19;

     label44:
        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

     label45:
        r16 = r19;

        r17 = r19;

     label46:
        $r4 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

     label47:
        r16 = r19;

        r17 = r19;

     label48:
        throw r23;

     label49:
        $r7 := @caughtexception;

        r16 = null;

        r17 = null;

     label50:
        r1 = new java.lang.IllegalArgumentException;

     label51:
        r16 = null;

        r17 = null;

     label52:
        r25 = new java.lang.StringBuilder;

     label53:
        r16 = null;

        r17 = null;

     label54:
        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

     label55:
        r16 = null;

        r17 = null;

     label56:
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not access ");

     label57:
        r16 = null;

        r17 = null;

     label58:
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

     label59:
        r16 = null;

        r17 = null;

     label60:
        $r8 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

     label61:
        r16 = null;

        r17 = null;

     label62:
        throw r1;

     label63:
        $r6 := @caughtexception;

        if r16 == null goto label67;

     label64:
        virtualinvoke r16.<android.content.res.AssetFileDescriptor: void close()>();

     label65:
        goto label67;

     label66:
        $r9 := @caughtexception;

        goto label67;

     label67:
        throw $r6;

     label68:
        $r12 := @caughtexception;

        if r17 == null goto label72;

     label69:
        virtualinvoke r17.<android.content.res.AssetFileDescriptor: void close()>();

     label70:
        goto label72;

     label71:
        $r10 := @caughtexception;

        goto label72;

     label72:
        $r27 = virtualinvoke r14.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r0.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>($r27);

        return;

     label73:
        $r3 = virtualinvoke r14.<android.net.Uri: java.lang.String getPath()>();

        virtualinvoke r0.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>($r3);

        return;

     label74:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null uri");

        throw $r2;

        catch java.lang.SecurityException from label02 to label03 with label68;
        catch java.lang.Throwable from label02 to label03 with label63;
        catch java.io.FileNotFoundException from label04 to label05 with label49;
        catch java.lang.SecurityException from label04 to label05 with label68;
        catch java.lang.Throwable from label04 to label05 with label63;
        catch java.lang.SecurityException from label06 to label07 with label68;
        catch java.lang.Throwable from label06 to label07 with label63;
        catch java.lang.SecurityException from label08 to label09 with label68;
        catch java.lang.Throwable from label08 to label09 with label63;
        catch java.lang.SecurityException from label10 to label11 with label68;
        catch java.lang.Throwable from label10 to label11 with label63;
        catch java.lang.SecurityException from label12 to label13 with label68;
        catch java.lang.Throwable from label12 to label13 with label63;
        catch java.lang.SecurityException from label15 to label16 with label68;
        catch java.lang.Throwable from label15 to label16 with label63;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.SecurityException from label22 to label23 with label68;
        catch java.lang.Throwable from label22 to label23 with label63;
        catch java.lang.SecurityException from label24 to label25 with label68;
        catch java.lang.Throwable from label24 to label25 with label63;
        catch java.lang.SecurityException from label26 to label27 with label68;
        catch java.lang.Throwable from label26 to label27 with label63;
        catch java.lang.SecurityException from label28 to label29 with label68;
        catch java.lang.Throwable from label28 to label29 with label63;
        catch java.lang.SecurityException from label30 to label31 with label68;
        catch java.lang.Throwable from label30 to label31 with label63;
        catch java.lang.SecurityException from label32 to label33 with label68;
        catch java.lang.Throwable from label32 to label33 with label63;
        catch java.lang.SecurityException from label34 to label35 with label68;
        catch java.lang.Throwable from label34 to label35 with label63;
        catch java.lang.SecurityException from label36 to label37 with label68;
        catch java.lang.Throwable from label36 to label37 with label63;
        catch java.lang.SecurityException from label38 to label39 with label68;
        catch java.lang.Throwable from label38 to label39 with label63;
        catch java.lang.SecurityException from label40 to label41 with label68;
        catch java.lang.Throwable from label40 to label41 with label63;
        catch java.lang.SecurityException from label42 to label43 with label68;
        catch java.lang.Throwable from label42 to label43 with label63;
        catch java.lang.SecurityException from label44 to label45 with label68;
        catch java.lang.Throwable from label44 to label45 with label63;
        catch java.lang.SecurityException from label46 to label47 with label68;
        catch java.lang.Throwable from label46 to label47 with label63;
        catch java.lang.SecurityException from label48 to label49 with label68;
        catch java.lang.Throwable from label48 to label49 with label63;
        catch java.lang.SecurityException from label50 to label51 with label68;
        catch java.lang.Throwable from label50 to label51 with label63;
        catch java.lang.SecurityException from label52 to label53 with label68;
        catch java.lang.Throwable from label52 to label53 with label63;
        catch java.lang.SecurityException from label54 to label55 with label68;
        catch java.lang.Throwable from label54 to label55 with label63;
        catch java.lang.SecurityException from label56 to label57 with label68;
        catch java.lang.Throwable from label56 to label57 with label63;
        catch java.lang.SecurityException from label58 to label59 with label68;
        catch java.lang.Throwable from label58 to label59 with label63;
        catch java.lang.SecurityException from label60 to label61 with label68;
        catch java.lang.Throwable from label60 to label61 with label63;
        catch java.lang.SecurityException from label62 to label63 with label68;
        catch java.lang.Throwable from label62 to label63 with label63;
        catch java.io.IOException from label64 to label65 with label66;
        catch java.io.IOException from label69 to label70 with label71;
    }

    public void setDataSource(android.media.MediaDataSource) throws java.lang.IllegalArgumentException
    {
        android.media.MediaMetadataRetriever r0;
        android.media.MediaDataSource r1;

        r0 := @this: android.media.MediaMetadataRetriever;

        r1 := @parameter0: android.media.MediaDataSource;

        specialinvoke r0.<android.media.MediaMetadataRetriever: void _setDataSource(android.media.MediaDataSource)>(r1);

        return;
    }

    public void setDataSource(java.io.FileDescriptor) throws java.lang.IllegalArgumentException
    {
        android.media.MediaMetadataRetriever r0;
        java.io.FileDescriptor r1;

        r0 := @this: android.media.MediaMetadataRetriever;

        r1 := @parameter0: java.io.FileDescriptor;

        virtualinvoke r0.<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor,long,long)>(r1, 0L, 576460752303423487L);

        return;
    }

    public native void setDataSource(java.io.FileDescriptor, long, long) throws java.lang.IllegalArgumentException;

    public void setDataSource(java.lang.String) throws java.lang.IllegalArgumentException
    {
        android.media.MediaMetadataRetriever r0;
        java.lang.IllegalArgumentException $r1, $r9, $r15;
        java.lang.String $r2, $r10, $r16, r19, r21, r22;
        boolean $z0;
        java.io.FileDescriptor $r3;
        java.util.HashMap $r4;
        java.lang.Throwable $r5, $r11, $r17, $r18;
        java.lang.StringBuilder $r6, $r12;
        android.net.Uri r20;
        java.io.FileInputStream r23;

        r0 := @this: android.media.MediaMetadataRetriever;

        r19 := @parameter0: java.lang.String;

        if r19 == null goto label14;

        r20 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r19);

        r21 = virtualinvoke r20.<android.net.Uri: java.lang.String getScheme()>();

        $r2 = "file";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r21);

        if $z0 == 0 goto label01;

        r22 = virtualinvoke r20.<android.net.Uri: java.lang.String getPath()>();

        goto label02;

     label01:
        r22 = r19;

        if r21 == null goto label02;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        virtualinvoke r0.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String,java.util.Map)>(r19, $r4);

        return;

     label02:
        r23 = new java.io.FileInputStream;

        specialinvoke r23.<java.io.FileInputStream: void <init>(java.lang.String)>(r22);

     label03:
        $r3 = virtualinvoke r23.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke r0.<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor,long,long)>($r3, 0L, 576460752303423487L);

     label04:
        virtualinvoke r23.<java.io.FileInputStream: void close()>();

     label05:
        return;

     label06:
        $r18 := @caughtexception;

     label07:
        virtualinvoke r23.<java.io.FileInputStream: void close()>();

     label08:
        goto label11;

     label09:
        $r17 := @caughtexception;

     label10:
        virtualinvoke $r18.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r17);

     label11:
        throw $r18;

     label12:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("couldn\'t open ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label13:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label14:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null path");

        throw $r1;

        catch java.io.FileNotFoundException from label02 to label03 with label13;
        catch java.io.IOException from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.io.FileNotFoundException from label04 to label05 with label13;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.io.FileNotFoundException from label10 to label11 with label13;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.FileNotFoundException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label12;
    }

    public void setDataSource(java.lang.String, java.util.Map) throws java.lang.IllegalArgumentException
    {
        android.media.MediaMetadataRetriever r0;
        java.lang.String r1, $r9, $r11;
        java.lang.String[] r2, r3;
        java.util.Iterator r4;
        int $i0, $i1, i2;
        java.util.Set $r5;
        boolean $z0;
        android.os.IBinder $r6;
        java.lang.Object $r7, $r8, $r10;
        java.util.Map r12;
        java.util.Map$Entry r13;

        r0 := @this: android.media.MediaMetadataRetriever;

        r1 := @parameter0: java.lang.String;

        r12 := @parameter1: java.util.Map;

        i2 = 0;

        $i0 = interfaceinvoke r12.<java.util.Map: int size()>();

        r2 = newarray (java.lang.String)[$i0];

        $i1 = interfaceinvoke r12.<java.util.Map: int size()>();

        r3 = newarray (java.lang.String)[$i1];

        $r5 = interfaceinvoke r12.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        r2[i2] = $r9;

        $r10 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.lang.String) $r10;

        r3[i2] = $r11;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r6 = staticinvoke <android.media.MediaHTTPService: android.os.IBinder createHttpServiceBinderIfNecessary(java.lang.String)>(r1);

        specialinvoke r0.<android.media.MediaMetadataRetriever: void _setDataSource(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[])>($r6, r1, r2, r3);

        return;
    }
}
