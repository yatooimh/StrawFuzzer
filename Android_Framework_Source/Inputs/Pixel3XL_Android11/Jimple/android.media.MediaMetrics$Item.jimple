public class android.media.MediaMetrics$Item extends java.lang.Object
{
    public static final java.lang.String BUNDLE_HEADER_SIZE;
    public static final java.lang.String BUNDLE_KEY;
    public static final java.lang.String BUNDLE_KEY_SIZE;
    public static final java.lang.String BUNDLE_PID;
    public static final java.lang.String BUNDLE_PROPERTY_COUNT;
    public static final java.lang.String BUNDLE_TIMESTAMP;
    public static final java.lang.String BUNDLE_TOTAL_SIZE;
    public static final java.lang.String BUNDLE_UID;
    public static final java.lang.String BUNDLE_VERSION;
    private static final int FORMAT_VERSION;
    private static final int HEADER_SIZE_OFFSET;
    private static final int MINIMUM_PAYLOAD_SIZE;
    private static final int TOTAL_SIZE_OFFSET;
    private java.nio.ByteBuffer mBuffer;
    private final int mHeaderSize;
    private final java.lang.String mKey;
    private final int mPidOffset;
    private int mPropertyCount;
    private final int mPropertyCountOffset;
    private final int mPropertyStartOffset;
    private final int mTimeNsOffset;
    private final int mUidOffset;

    public void <init>(java.lang.String)
    {
        android.media.MediaMetrics$Item r0;
        java.lang.String r1;

        r0 := @this: android.media.MediaMetrics$Item;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.media.MediaMetrics$Item: void <init>(java.lang.String,int,int,long,int)>(r1, -1, -1, 0L, 2048);

        return;
    }

    public void <init>(java.lang.String, int, int, long, int)
    {
        android.media.MediaMetrics$Item r0;
        int i0, i1, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20;
        long l2;
        byte[] r1;
        java.nio.charset.Charset $r2;
        java.lang.IllegalArgumentException $r3;
        java.nio.ByteOrder $r4;
        java.nio.ByteBuffer $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r17, r20;
        char $c18;
        java.lang.IllegalStateException $r16;
        java.lang.String r19;

        r0 := @this: android.media.MediaMetrics$Item;

        r19 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaMetrics$Item: int mPropertyCount> = 0;

        $r2 = staticinvoke <android.media.MediaMetrics: java.nio.charset.Charset access$000()>();

        r1 = virtualinvoke r19.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        i4 = lengthof r1;

        if i4 > 65534 goto label2;

        $i6 = i4 + 12;

        $i7 = $i6 + 1;

        $i8 = $i7 + 4;

        $i9 = $i8 + 4;

        i5 = $i9 + 8;

        r0.<android.media.MediaMetrics$Item: int mHeaderSize> = i5;

        $i10 = i5 - 16;

        r0.<android.media.MediaMetrics$Item: int mPidOffset> = $i10;

        $i11 = i5 - 12;

        r0.<android.media.MediaMetrics$Item: int mUidOffset> = $i11;

        $i12 = i5 - 8;

        r0.<android.media.MediaMetrics$Item: int mTimeNsOffset> = $i12;

        r0.<android.media.MediaMetrics$Item: int mPropertyCountOffset> = i5;

        $i13 = i5 + 4;

        r0.<android.media.MediaMetrics$Item: int mPropertyStartOffset> = $i13;

        r0.<android.media.MediaMetrics$Item: java.lang.String mKey> = r19;

        $i14 = i5 + 4;

        $i15 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i14);

        r20 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i15);

        r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer> = r20;

        $r4 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r5 = virtualinvoke r20.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r4);

        $r6 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(0);

        $i16 = r0.<android.media.MediaMetrics$Item: int mHeaderSize>;

        $r7 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i16);

        $r8 = virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putChar(char)>(0);

        $i17 = i4 + 1;

        $c18 = (char) $i17;

        $r9 = virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer putChar(char)>($c18);

        $r10 = virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r1);

        $r11 = virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

        $r12 = virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i0);

        $r13 = virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i1);

        virtualinvoke $r13.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>(l2);

        $i19 = r0.<android.media.MediaMetrics$Item: int mHeaderSize>;

        $r15 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i20 = virtualinvoke $r15.<java.nio.ByteBuffer: int position()>();

        if $i19 != $i20 goto label1;

        $r17 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        virtualinvoke $r17.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(0);

        return;

     label1:
        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Mismatched sizing");

        throw $r16;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key length too large");

        throw $r3;
    }

    private static java.lang.String getStringFromBuffer(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        java.lang.String $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = staticinvoke <android.media.MediaMetrics$Item: java.lang.String getStringFromBuffer(java.nio.ByteBuffer,int)>(r0, 2147483647);

        return $r1;
    }

    private static java.lang.String getStringFromBuffer(java.nio.ByteBuffer, int)
    {
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21;
        java.lang.StringBuilder $r0, $r14;
        java.lang.IllegalArgumentException $r5, $r21;
        java.lang.String $r6, $r8, $r10, $r22, r26;
        byte $b5;
        boolean $z0;
        java.nio.charset.Charset $r9, $r12;
        byte[] $r11, r27;
        java.nio.ByteBuffer r23;

        r23 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 = virtualinvoke r23.<java.nio.ByteBuffer: int position()>();

        i2 = virtualinvoke r23.<java.nio.ByteBuffer: int limit()>();

        i19 = i1;

        i20 = i2;

        $i3 = 2147483647 - i1;

        if i0 >= $i3 goto label1;

        i19 = i1;

        i20 = i2;

        $i18 = i1 + i0;

        if $i18 >= i2 goto label1;

        i20 = i1 + i0;

        i19 = i1;

     label1:
        if i19 >= i20 goto label7;

        $b5 = virtualinvoke r23.<java.nio.ByteBuffer: byte get(int)>(i19);

        if $b5 != 0 goto label6;

        i21 = i19 + 1;

        if i0 == 2147483647 goto label3;

        $i14 = virtualinvoke r23.<java.nio.ByteBuffer: int position()>();

        $i15 = i21 - $i14;

        if $i15 != i0 goto label2;

        goto label3;

     label2:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chars consumed at ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i16 = virtualinvoke r23.<java.nio.ByteBuffer: int position()>();

        $i17 = i21 - $i16;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != size: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label3:
        $z0 = virtualinvoke r23.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label4;

        $r10 = new java.lang.String;

        $r11 = virtualinvoke r23.<java.nio.ByteBuffer: byte[] array()>();

        $i9 = virtualinvoke r23.<java.nio.ByteBuffer: int position()>();

        $i10 = virtualinvoke r23.<java.nio.ByteBuffer: int arrayOffset()>();

        $i11 = $i9 + $i10;

        $i12 = virtualinvoke r23.<java.nio.ByteBuffer: int position()>();

        $i13 = i19 - $i12;

        $r12 = staticinvoke <android.media.MediaMetrics: java.nio.charset.Charset access$000()>();

        specialinvoke $r10.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r11, $i11, $i13, $r12);

        virtualinvoke r23.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i21);

        r26 = $r10;

        goto label5;

     label4:
        $i6 = virtualinvoke r23.<java.nio.ByteBuffer: int position()>();

        $i7 = i19 - $i6;

        r27 = newarray (byte)[$i7];

        virtualinvoke r23.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r27);

        $r8 = new java.lang.String;

        $r9 = staticinvoke <android.media.MediaMetrics: java.nio.charset.Charset access$000()>();

        specialinvoke $r8.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r27, $r9);

        virtualinvoke r23.<java.nio.ByteBuffer: byte get()>();

        r26 = $r8;

     label5:
        return r26;

     label6:
        i19 = i19 + 1;

        goto label1;

     label7:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No zero termination found in string position: ");

        $i4 = virtualinvoke r23.<java.nio.ByteBuffer: int position()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    private int reserveProperty(byte[], int)
    {
        android.media.MediaMetrics$Item r0;
        java.lang.StringBuilder $r1, $r8, $r13, $r23;
        java.lang.String $r3, $r7, $r12, $r15, $r20, $r27;
        java.nio.charset.Charset $r4, $r16;
        java.lang.IllegalStateException $r6, $r11, $r19, $r26;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8;
        java.nio.ByteBuffer $r21, $r22, $r30, $r32, r35;
        java.nio.ByteOrder $r28;
        byte[] r34;

        r0 := @this: android.media.MediaMetrics$Item;

        r34 := @parameter0: byte[];

        i5 := @parameter1: int;

        i6 = lengthof r34;

        if i6 > 65535 goto label5;

        if i5 > 65535 goto label4;

        $i0 = i6 + 3;

        $i1 = $i0 + 1;

        i7 = $i1 + i5;

        if i7 > 65535 goto label3;

        $r21 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i2 = virtualinvoke $r21.<java.nio.ByteBuffer: int remaining()>();

        if $i2 >= i7 goto label2;

        $r22 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i3 = virtualinvoke $r22.<java.nio.ByteBuffer: int position()>();

        i8 = $i3 + i7;

        if i8 > 1073741823 goto label1;

        $i4 = i8 << 1;

        r35 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i4);

        $r28 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke r35.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r28);

        $r30 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        virtualinvoke $r30.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r32 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        virtualinvoke r35.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r32);

        r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer> = r35;

        goto label2;

     label1:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item memory requirements too large: ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r26 = new java.lang.IllegalStateException;

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label2:
        return i7;

     label3:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item property ");

        $r15 = new java.lang.String;

        $r16 = staticinvoke <android.media.MediaMetrics: java.nio.charset.Charset access$000()>();

        specialinvoke $r15.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r34, $r16);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is too large to send");

        $r19 = new java.lang.IllegalStateException;

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("payload too large ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("property key too long ");

        $r3 = new java.lang.String;

        $r4 = staticinvoke <android.media.MediaMetrics: java.nio.charset.Charset access$000()>();

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r34, $r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static android.os.Bundle toBundle(java.nio.ByteBuffer)
    {
        int i0, i2, i4, $i7, $i11, i12, i14, i15, i16, i18, $i20, i21, i22;
        char c1, c13, c19;
        java.lang.String r1, $r13, $r21, $r28, $r29, $r36, $r47, r51;
        long l3, $l8;
        byte b6;
        android.os.Bundle $r2;
        java.lang.IllegalArgumentException $r3, $r4, $r12, $r14, $r20, $r27, $r35, $r46;
        java.lang.StringBuilder $r5, $r15, $r22, $r30, $r39;
        double $d0;
        java.nio.ByteBuffer r48;

        r48 := @parameter0: java.nio.ByteBuffer;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        i0 = virtualinvoke r48.<java.nio.ByteBuffer: int getInt()>();

        i12 = virtualinvoke r48.<java.nio.ByteBuffer: int getInt()>();

        c13 = virtualinvoke r48.<java.nio.ByteBuffer: char getChar()>();

        c1 = virtualinvoke r48.<java.nio.ByteBuffer: char getChar()>();

        if i0 < 0 goto label18;

        if i12 < 0 goto label18;

        if c1 <= 0 goto label17;

        r1 = staticinvoke <android.media.MediaMetrics$Item: java.lang.String getStringFromBuffer(java.nio.ByteBuffer,int)>(r48, c1);

        i2 = virtualinvoke r48.<java.nio.ByteBuffer: int getInt()>();

        i14 = virtualinvoke r48.<java.nio.ByteBuffer: int getInt()>();

        l3 = virtualinvoke r48.<java.nio.ByteBuffer: long getLong()>();

        i15 = virtualinvoke r48.<java.nio.ByteBuffer: int position()>();

        if c13 != 0 goto label02;

        if i15 != i12 goto label01;

        goto label03;

     label01:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item key:");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" headerRead:");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != headerSize:");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r46 = new java.lang.IllegalArgumentException;

        $r47 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r47);

        throw $r46;

     label02:
        if i15 > i12 goto label16;

        if i15 >= i12 goto label03;

        virtualinvoke r48.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i12);

     label03:
        i4 = virtualinvoke r48.<java.nio.ByteBuffer: int getInt()>();

        if i4 < 0 goto label15;

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("_totalSize", i0);

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("_headerSize", i12);

        virtualinvoke $r2.<android.os.Bundle: void putChar(java.lang.String,char)>("_version", c13);

        virtualinvoke $r2.<android.os.Bundle: void putChar(java.lang.String,char)>("_keySize", c1);

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("_key", r1);

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("_pid", i2);

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("_uid", i14);

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>("_timestamp", l3);

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>("_propertyCount", i4);

        i16 = 0;

     label04:
        if i16 >= i4 goto label13;

        i18 = virtualinvoke r48.<java.nio.ByteBuffer: int position()>();

        c19 = virtualinvoke r48.<java.nio.ByteBuffer: char getChar()>();

        b6 = virtualinvoke r48.<java.nio.ByteBuffer: byte get()>();

        r51 = staticinvoke <android.media.MediaMetrics$Item: java.lang.String getStringFromBuffer(java.nio.ByteBuffer)>(r48);

        if b6 == 0 goto label11;

        if b6 == 1 goto label10;

        if b6 == 2 goto label09;

        if b6 == 3 goto label08;

        if b6 == 4 goto label07;

        if b6 == 5 goto label06;

        if c13 == 0 goto label05;

        $i11 = i18 + c19;

        virtualinvoke r48.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i11);

        goto label11;

     label05:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has unsupported type ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b6);

        $r35 = new java.lang.IllegalArgumentException;

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r35;

     label06:
        virtualinvoke r48.<java.nio.ByteBuffer: long getLong()>();

        virtualinvoke r48.<java.nio.ByteBuffer: long getLong()>();

        goto label11;

     label07:
        $r29 = staticinvoke <android.media.MediaMetrics$Item: java.lang.String getStringFromBuffer(java.nio.ByteBuffer)>(r48);

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r51, $r29);

        goto label11;

     label08:
        $d0 = virtualinvoke r48.<java.nio.ByteBuffer: double getDouble()>();

        virtualinvoke $r2.<android.os.Bundle: void putDouble(java.lang.String,double)>(r51, $d0);

        goto label11;

     label09:
        $l8 = virtualinvoke r48.<java.nio.ByteBuffer: long getLong()>();

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>(r51, $l8);

        goto label11;

     label10:
        $i7 = virtualinvoke r48.<java.nio.ByteBuffer: int getInt()>();

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>(r51, $i7);

        goto label11;

     label11:
        $i20 = virtualinvoke r48.<java.nio.ByteBuffer: int position()>();

        i21 = $i20 - i18;

        if i21 != c19 goto label12;

        i16 = i16 + 1;

        goto label04;

     label12:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("propSize:");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c19);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != deltaPosition:");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label13:
        i22 = virtualinvoke r48.<java.nio.ByteBuffer: int position()>();

        if i22 != i0 goto label14;

        return $r2;

     label14:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("totalSize:");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != finalPosition:");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label15:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot have more than 2147483647 properties");

        throw $r14;

     label16:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item key:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" headerRead:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > headerSize:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label17:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null key");

        throw $r4;

     label18:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Item size cannot be > 2147483647");

        throw $r3;
    }

    private void updateHeader()
    {
        android.media.MediaMetrics$Item r0;
        java.nio.ByteBuffer r1, $r2;
        int $i0, $i1, $i3;
        char $c2;

        r0 := @this: android.media.MediaMetrics$Item;

        r1 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        $r2 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(0, $i0);

        $i3 = r0.<android.media.MediaMetrics$Item: int mPropertyCountOffset>;

        $i1 = r0.<android.media.MediaMetrics$Item: int mPropertyCount>;

        $c2 = (char) $i1;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>($i3, $c2);

        return;
    }

    public android.media.MediaMetrics$Item clear()
    {
        android.media.MediaMetrics$Item r0;
        java.nio.ByteBuffer r1, $r2, $r5;
        int $i0, $i1, $i2;

        r0 := @this: android.media.MediaMetrics$Item;

        $r2 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i0 = r0.<android.media.MediaMetrics$Item: int mPropertyStartOffset>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        r1 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        $r5 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i2 = r0.<android.media.MediaMetrics$Item: int mTimeNsOffset>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(int,long)>($i2, 0L);

        r0.<android.media.MediaMetrics$Item: int mPropertyCount> = 0;

        return r0;
    }

    public android.media.MediaMetrics$Item putDouble(java.lang.String, double)
    {
        android.media.MediaMetrics$Item r0;
        double d0;
        char c0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.nio.charset.Charset $r1;
        java.nio.ByteBuffer $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r12;
        java.lang.StringBuilder $r10;
        java.lang.IllegalStateException $r16;
        java.lang.String $r17, r18;
        byte[] r19;

        r0 := @this: android.media.MediaMetrics$Item;

        r18 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r1 = staticinvoke <android.media.MediaMetrics: java.nio.charset.Charset access$000()>();

        r19 = virtualinvoke r18.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        $i2 = specialinvoke r0.<android.media.MediaMetrics$Item: int reserveProperty(byte[],int)>(r19, 8);

        c0 = (char) $i2;

        $r2 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i3 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        i1 = $i3 + c0;

        $r3 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putChar(char)>(c0);

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(3);

        $r6 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r19);

        $r7 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>(d0);

        $i4 = r0.<android.media.MediaMetrics$Item: int mPropertyCount>;

        $i5 = $i4 + 1;

        r0.<android.media.MediaMetrics$Item: int mPropertyCount> = $i5;

        $r9 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i6 = virtualinvoke $r9.<java.nio.ByteBuffer: int position()>();

        if $i6 != i1 goto label1;

        return r0;

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Final position ");

        $r12 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i7 = virtualinvoke $r12.<java.nio.ByteBuffer: int position()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != estimatedFinalPosition ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = new java.lang.IllegalStateException;

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r16;
    }

    public android.media.MediaMetrics$Item putInt(java.lang.String, int)
    {
        android.media.MediaMetrics$Item r0;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char c1;
        java.nio.charset.Charset $r1;
        java.nio.ByteBuffer $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r12;
        java.lang.StringBuilder $r10;
        java.lang.IllegalStateException $r16;
        java.lang.String $r17, r18;
        byte[] r19;

        r0 := @this: android.media.MediaMetrics$Item;

        r18 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <android.media.MediaMetrics: java.nio.charset.Charset access$000()>();

        r19 = virtualinvoke r18.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        $i3 = specialinvoke r0.<android.media.MediaMetrics$Item: int reserveProperty(byte[],int)>(r19, 4);

        c1 = (char) $i3;

        $r2 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i4 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        i2 = $i4 + c1;

        $r3 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putChar(char)>(c1);

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $r6 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r19);

        $r7 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i0);

        $i5 = r0.<android.media.MediaMetrics$Item: int mPropertyCount>;

        $i6 = $i5 + 1;

        r0.<android.media.MediaMetrics$Item: int mPropertyCount> = $i6;

        $r9 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i7 = virtualinvoke $r9.<java.nio.ByteBuffer: int position()>();

        if $i7 != i2 goto label1;

        return r0;

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Final position ");

        $r12 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i8 = virtualinvoke $r12.<java.nio.ByteBuffer: int position()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != estimatedFinalPosition ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r16 = new java.lang.IllegalStateException;

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r16;
    }

    public android.media.MediaMetrics$Item putLong(java.lang.String, long)
    {
        android.media.MediaMetrics$Item r0;
        long l0;
        char c1;
        int i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.nio.charset.Charset $r1;
        java.nio.ByteBuffer $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r12;
        java.lang.StringBuilder $r10;
        java.lang.IllegalStateException $r16;
        java.lang.String $r17, r18;
        byte[] r19;

        r0 := @this: android.media.MediaMetrics$Item;

        r18 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = staticinvoke <android.media.MediaMetrics: java.nio.charset.Charset access$000()>();

        r19 = virtualinvoke r18.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        $i3 = specialinvoke r0.<android.media.MediaMetrics$Item: int reserveProperty(byte[],int)>(r19, 8);

        c1 = (char) $i3;

        $r2 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i4 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        i2 = $i4 + c1;

        $r3 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putChar(char)>(c1);

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(2);

        $r6 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r19);

        $r7 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>(l0);

        $i5 = r0.<android.media.MediaMetrics$Item: int mPropertyCount>;

        $i6 = $i5 + 1;

        r0.<android.media.MediaMetrics$Item: int mPropertyCount> = $i6;

        $r9 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i7 = virtualinvoke $r9.<java.nio.ByteBuffer: int position()>();

        if $i7 != i2 goto label1;

        return r0;

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Final position ");

        $r12 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i8 = virtualinvoke $r12.<java.nio.ByteBuffer: int position()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != estimatedFinalPosition ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r16 = new java.lang.IllegalStateException;

        $r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r16;
    }

    public android.media.MediaMetrics$Item putString(java.lang.String, java.lang.String)
    {
        android.media.MediaMetrics$Item r0;
        char c0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.nio.charset.Charset $r1, $r2;
        java.nio.ByteBuffer $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r14;
        java.lang.StringBuilder $r12;
        java.lang.IllegalStateException $r18;
        java.lang.String $r19, r20, r21;
        byte[] r22, r23;

        r0 := @this: android.media.MediaMetrics$Item;

        r20 := @parameter0: java.lang.String;

        r21 := @parameter1: java.lang.String;

        $r1 = staticinvoke <android.media.MediaMetrics: java.nio.charset.Charset access$000()>();

        r22 = virtualinvoke r20.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        $r2 = staticinvoke <android.media.MediaMetrics: java.nio.charset.Charset access$000()>();

        r23 = virtualinvoke r21.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i2 = lengthof r23;

        $i3 = $i2 + 1;

        $i4 = specialinvoke r0.<android.media.MediaMetrics$Item: int reserveProperty(byte[],int)>(r22, $i3);

        c0 = (char) $i4;

        $r3 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i5 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        i1 = $i5 + c0;

        $r4 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer putChar(char)>(c0);

        $r6 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(4);

        $r7 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r22);

        $r8 = virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

        $r9 = virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r23);

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

        $i6 = r0.<android.media.MediaMetrics$Item: int mPropertyCount>;

        $i7 = $i6 + 1;

        r0.<android.media.MediaMetrics$Item: int mPropertyCount> = $i7;

        $r11 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i8 = virtualinvoke $r11.<java.nio.ByteBuffer: int position()>();

        if $i8 != i1 goto label1;

        return r0;

     label1:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Final position ");

        $r14 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i9 = virtualinvoke $r14.<java.nio.ByteBuffer: int position()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != estimatedFinalPosition ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = new java.lang.IllegalStateException;

        $r19 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r18;
    }

    public boolean record()
    {
        android.media.MediaMetrics$Item r0;
        java.nio.ByteBuffer r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.media.MediaMetrics$Item;

        specialinvoke r0.<android.media.MediaMetrics$Item: void updateHeader()>();

        r1 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        $i1 = staticinvoke <android.media.MediaMetrics: int access$100(java.nio.ByteBuffer,int)>(r1, $i0);

        if $i1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key, java.lang.Object)
    {
        android.media.MediaMetrics$Item r0;
        android.media.MediaMetrics$Key r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3, $r4, $r6, $r9, $r12;
        java.lang.Double $r7;
        double $d0;
        java.lang.Long $r10;
        long $l0;
        java.lang.Integer $r13;
        int $i1;

        r0 := @this: android.media.MediaMetrics$Item;

        r1 := @parameter0: android.media.MediaMetrics$Key;

        r2 := @parameter1: java.lang.Object;

        $z0 = r2 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r12 = interfaceinvoke r1.<android.media.MediaMetrics$Key: java.lang.String getName()>();

        $r13 = (java.lang.Integer) r2;

        $i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item putInt(java.lang.String,int)>($r12, $i1);

        goto label4;

     label1:
        $z1 = r2 instanceof java.lang.Long;

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r1.<android.media.MediaMetrics$Key: java.lang.String getName()>();

        $r10 = (java.lang.Long) r2;

        $l0 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item putLong(java.lang.String,long)>($r9, $l0);

        goto label4;

     label2:
        $z2 = r2 instanceof java.lang.Double;

        if $z2 == 0 goto label3;

        $r6 = interfaceinvoke r1.<android.media.MediaMetrics$Key: java.lang.String getName()>();

        $r7 = (java.lang.Double) r2;

        $d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item putDouble(java.lang.String,double)>($r6, $d0);

        goto label4;

     label3:
        $z3 = r2 instanceof java.lang.String;

        if $z3 == 0 goto label4;

        $r3 = interfaceinvoke r1.<android.media.MediaMetrics$Key: java.lang.String getName()>();

        $r4 = (java.lang.String) r2;

        virtualinvoke r0.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item putString(java.lang.String,java.lang.String)>($r3, $r4);

     label4:
        return r0;
    }

    public android.media.MediaMetrics$Item setPid(int)
    {
        android.media.MediaMetrics$Item r0;
        int i0, $i1;
        java.nio.ByteBuffer $r1;

        r0 := @this: android.media.MediaMetrics$Item;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i1 = r0.<android.media.MediaMetrics$Item: int mPidOffset>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>($i1, i0);

        return r0;
    }

    public android.media.MediaMetrics$Item setTimestamp(long)
    {
        android.media.MediaMetrics$Item r0;
        long l0;
        int $i1;
        java.nio.ByteBuffer $r1;

        r0 := @this: android.media.MediaMetrics$Item;

        l0 := @parameter0: long;

        $r1 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i1 = r0.<android.media.MediaMetrics$Item: int mTimeNsOffset>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(int,long)>($i1, l0);

        return r0;
    }

    public android.media.MediaMetrics$Item setUid(int)
    {
        android.media.MediaMetrics$Item r0;
        int i0, $i1;
        java.nio.ByteBuffer $r1;

        r0 := @this: android.media.MediaMetrics$Item;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        $i1 = r0.<android.media.MediaMetrics$Item: int mUidOffset>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>($i1, i0);

        return r0;
    }

    public android.os.Bundle toBundle()
    {
        android.media.MediaMetrics$Item r0;
        java.nio.ByteBuffer r1, $r2, $r4;
        java.nio.ByteOrder $r3;
        android.os.Bundle $r6;

        r0 := @this: android.media.MediaMetrics$Item;

        specialinvoke r0.<android.media.MediaMetrics$Item: void updateHeader()>();

        $r2 = r0.<android.media.MediaMetrics$Item: java.nio.ByteBuffer mBuffer>;

        r1 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        $r3 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r3);

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r6 = staticinvoke <android.media.MediaMetrics$Item: android.os.Bundle toBundle(java.nio.ByteBuffer)>(r1);

        return $r6;
    }

    public static void <clinit>()
    {
        <android.media.MediaMetrics$Item: int TOTAL_SIZE_OFFSET> = 0;

        <android.media.MediaMetrics$Item: int MINIMUM_PAYLOAD_SIZE> = 4;

        <android.media.MediaMetrics$Item: int HEADER_SIZE_OFFSET> = 4;

        <android.media.MediaMetrics$Item: int FORMAT_VERSION> = 0;

        <android.media.MediaMetrics$Item: java.lang.String BUNDLE_VERSION> = "_version";

        <android.media.MediaMetrics$Item: java.lang.String BUNDLE_UID> = "_uid";

        <android.media.MediaMetrics$Item: java.lang.String BUNDLE_TOTAL_SIZE> = "_totalSize";

        <android.media.MediaMetrics$Item: java.lang.String BUNDLE_TIMESTAMP> = "_timestamp";

        <android.media.MediaMetrics$Item: java.lang.String BUNDLE_PROPERTY_COUNT> = "_propertyCount";

        <android.media.MediaMetrics$Item: java.lang.String BUNDLE_PID> = "_pid";

        <android.media.MediaMetrics$Item: java.lang.String BUNDLE_KEY_SIZE> = "_keySize";

        <android.media.MediaMetrics$Item: java.lang.String BUNDLE_KEY> = "_key";

        <android.media.MediaMetrics$Item: java.lang.String BUNDLE_HEADER_SIZE> = "_headerSize";

        return;
    }
}
