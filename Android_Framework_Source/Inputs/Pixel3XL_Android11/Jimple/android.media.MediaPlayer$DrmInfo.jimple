public final class android.media.MediaPlayer$DrmInfo extends java.lang.Object
{
    private java.util.Map mapPssh;
    private java.util.UUID[] supportedSchemes;

    private void <init>(android.os.Parcel)
    {
        android.media.MediaPlayer$DrmInfo r0;
        int i0, i1, $i2, i8;
        byte[] r1, r40;
        java.lang.StringBuilder $r2, $r8, $r14, $r20, $r28;
        java.lang.String $r7, $r10, $r12, $r18, $r25, $r35;
        java.util.Map $r13, $r16;
        java.util.UUID[] $r19, $r26, $r32;
        java.util.UUID $r27, $r33;
        android.os.Parcel r36;

        r0 := @this: android.media.MediaPlayer$DrmInfo;

        r36 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DrmInfo(");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") size ");

        $i2 = virtualinvoke r36.<android.os.Parcel: int dataSize()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaPlayer", $r7);

        i0 = virtualinvoke r36.<android.os.Parcel: int readInt()>();

        r1 = newarray (byte)[i0];

        virtualinvoke r36.<android.os.Parcel: void readByteArray(byte[])>(r1);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DrmInfo() PSSH: ");

        $r10 = specialinvoke r0.<android.media.MediaPlayer$DrmInfo: java.lang.String arrToHex(byte[])>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaPlayer", $r12);

        $r13 = specialinvoke r0.<android.media.MediaPlayer$DrmInfo: java.util.Map parsePSSH(byte[],int)>(r1, i0);

        r0.<android.media.MediaPlayer$DrmInfo: java.util.Map mapPssh> = $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DrmInfo() PSSH: ");

        $r16 = r0.<android.media.MediaPlayer$DrmInfo: java.util.Map mapPssh>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaPlayer", $r18);

        i1 = virtualinvoke r36.<android.os.Parcel: int readInt()>();

        $r19 = newarray (java.util.UUID)[i1];

        r0.<android.media.MediaPlayer$DrmInfo: java.util.UUID[] supportedSchemes> = $r19;

        i8 = 0;

     label1:
        if i8 >= i1 goto label2;

        r40 = newarray (byte)[16];

        virtualinvoke r36.<android.os.Parcel: void readByteArray(byte[])>(r40);

        $r26 = r0.<android.media.MediaPlayer$DrmInfo: java.util.UUID[] supportedSchemes>;

        $r27 = specialinvoke r0.<android.media.MediaPlayer$DrmInfo: java.util.UUID bytesToUUID(byte[])>(r40);

        $r26[i8] = $r27;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DrmInfo() supportedScheme[");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r32 = r0.<android.media.MediaPlayer$DrmInfo: java.util.UUID[] supportedSchemes>;

        $r33 = $r32[i8];

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaPlayer", $r35);

        i8 = i8 + 1;

        goto label1;

     label2:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DrmInfo() Parcel psshsize: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" supportedDRMsCount: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaPlayer", $r25);

        return;
    }

    void <init>(android.os.Parcel, android.media.MediaPlayer$1)
    {
        android.media.MediaPlayer$DrmInfo r0;
        android.os.Parcel r1;
        android.media.MediaPlayer$1 r2;

        r0 := @this: android.media.MediaPlayer$DrmInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.media.MediaPlayer$1;

        specialinvoke r0.<android.media.MediaPlayer$DrmInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    private void <init>(java.util.Map, java.util.UUID[])
    {
        android.media.MediaPlayer$DrmInfo r0;
        java.util.Map r1;
        java.util.UUID[] r2;

        r0 := @this: android.media.MediaPlayer$DrmInfo;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.UUID[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaPlayer$DrmInfo: java.util.Map mapPssh> = r1;

        r0.<android.media.MediaPlayer$DrmInfo: java.util.UUID[] supportedSchemes> = r2;

        return;
    }

    static android.media.MediaPlayer$DrmInfo access$1400(android.media.MediaPlayer$DrmInfo)
    {
        android.media.MediaPlayer$DrmInfo r0, $r1;

        r0 := @parameter0: android.media.MediaPlayer$DrmInfo;

        $r1 = specialinvoke r0.<android.media.MediaPlayer$DrmInfo: android.media.MediaPlayer$DrmInfo makeCopy()>();

        return $r1;
    }

    private java.lang.String arrToHex(byte[])
    {
        android.media.MediaPlayer$DrmInfo r0;
        byte[] r1;
        int $i0, i2;
        java.lang.StringBuilder $r3;
        java.lang.Object[] $r5;
        byte $b1;
        java.lang.Byte $r6;
        java.lang.String $r7, r9;

        r0 := @this: android.media.MediaPlayer$DrmInfo;

        r1 := @parameter0: byte[];

        r9 = "0x";

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r5 = newarray (java.lang.Object)[1];

        $b1 = r1[i2];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x", $r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label1;

     label2:
        return r9;
    }

    private java.util.UUID bytesToUUID(byte[])
    {
        android.media.MediaPlayer$DrmInfo r0;
        byte[] r1;
        java.util.UUID $r2;
        byte $b0, $b7;
        long $l1, $l4, $l5, $l8, $l11, $l12, l13, l14;
        int $i2, $i3, $i6, $i9, $i10, i15;

        r0 := @this: android.media.MediaPlayer$DrmInfo;

        r1 := @parameter0: byte[];

        l13 = 0L;

        l14 = 0L;

        i15 = 0;

     label1:
        if i15 >= 8 goto label2;

        $b0 = r1[i15];

        $l1 = (long) $b0;

        $l4 = $l1 & 255L;

        $i2 = 7 - i15;

        $i3 = $i2 * 8;

        $l5 = $l4 << $i3;

        l13 = l13 | $l5;

        $i6 = i15 + 8;

        $b7 = r1[$i6];

        $l8 = (long) $b7;

        $l11 = $l8 & 255L;

        $i9 = 7 - i15;

        $i10 = $i9 * 8;

        $l12 = $l11 << $i10;

        l14 = l14 | $l12;

        i15 = i15 + 1;

        goto label1;

     label2:
        $r2 = new java.util.UUID;

        specialinvoke $r2.<java.util.UUID: void <init>(long,long)>(l13, l14);

        return $r2;
    }

    private android.media.MediaPlayer$DrmInfo makeCopy()
    {
        android.media.MediaPlayer$DrmInfo r0, $r1;
        java.util.UUID[] $r2;
        java.util.Map $r3;

        r0 := @this: android.media.MediaPlayer$DrmInfo;

        $r1 = new android.media.MediaPlayer$DrmInfo;

        $r3 = r0.<android.media.MediaPlayer$DrmInfo: java.util.Map mapPssh>;

        $r2 = r0.<android.media.MediaPlayer$DrmInfo: java.util.UUID[] supportedSchemes>;

        specialinvoke $r1.<android.media.MediaPlayer$DrmInfo: void <init>(java.util.Map,java.util.UUID[])>($r3, $r2);

        return $r1;
    }

    private java.util.Map parsePSSH(byte[], int)
    {
        android.media.MediaPlayer$DrmInfo r0;
        byte[] r1, $r5, r27, r28;
        int i0, $i1, $i2, $i7, $i8, $i11, $i12, $i15, $i16, $i23, $i24, $i27, $i28, $i31, i34, i35, i36, i37, i38, i39, i40, i41;
        java.util.UUID r3;
        java.util.HashMap $r4;
        java.nio.ByteOrder $r6, $r7;
        byte $b3, $b5, $b9, $b13, $b19, $b21, $b25, $b29;
        short $s4, $s6, $s10, $s14, $s20, $s22, $s26, $s30;
        java.lang.Object[] $r8, $r14, $r19, $r23;
        java.lang.Integer $r9, $r11, $r15, $r16, $r17, $r20, $r21, $r24, $r25;
        java.lang.String $r10, $r12, $r18, $r22, $r26;

        r0 := @this: android.media.MediaPlayer$DrmInfo;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        i34 = i0;

        i35 = 0;

        i36 = 0;

     label1:
        if i34 <= 0 goto label7;

        if i34 >= 16 goto label2;

        $r23 = newarray (java.lang.Object)[2];

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i34);

        $r23[0] = $r24;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r23[1] = $r25;

        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("parsePSSH: len is too short to parse UUID: (%d < 16) pssh: %d", $r23);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaPlayer", $r26);

        return null;

     label2:
        $i1 = i36 + 16;

        $r5 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r1, i36, $i1);

        r3 = specialinvoke r0.<android.media.MediaPlayer$DrmInfo: java.util.UUID bytesToUUID(byte[])>($r5);

        i37 = i36 + 16;

        i38 = i34 - 16;

        if i38 >= 4 goto label3;

        $r19 = newarray (java.lang.Object)[2];

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i38);

        $r19[0] = $r20;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r19[1] = $r21;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("parsePSSH: len is too short to parse datalen: (%d < 4) pssh: %d", $r19);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaPlayer", $r22);

        return null;

     label3:
        $i2 = i37 + 4;

        r27 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r1, i37, $i2);

        $r6 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r7 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r6 != $r7 goto label4;

        $b19 = r27[3];

        $s20 = $b19 & 255;

        $i24 = $s20 << 24;

        $b21 = r27[2];

        $s22 = $b21 & 255;

        $i23 = $s22 << 16;

        $i28 = $i24 | $i23;

        $b25 = r27[1];

        $s26 = $b25 & 255;

        $i27 = $s26 << 8;

        $i31 = $i28 | $i27;

        $b29 = r27[0];

        $s30 = $b29 & 255;

        i39 = $i31 | $s30;

        goto label5;

     label4:
        $b3 = r27[0];

        $s4 = $b3 & 255;

        $i8 = $s4 << 24;

        $b5 = r27[1];

        $s6 = $b5 & 255;

        $i7 = $s6 << 16;

        $i12 = $i8 | $i7;

        $b9 = r27[2];

        $s10 = $b9 & 255;

        $i11 = $s10 << 8;

        $i15 = $i12 | $i11;

        $b13 = r27[3];

        $s14 = $b13 & 255;

        i39 = $i15 | $s14;

     label5:
        i40 = i37 + 4;

        i41 = i38 + -4;

        if i41 >= i39 goto label6;

        $r14 = newarray (java.lang.Object)[3];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i41);

        $r14[0] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i39);

        $r14[1] = $r16;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r14[2] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("parsePSSH: len is too short to parse data: (%d < %d) pssh: %d", $r14);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaPlayer", $r18);

        return null;

     label6:
        $i16 = i40 + i39;

        r28 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r1, i40, $i16);

        i36 = i40 + i39;

        i34 = i41 - i39;

        $r8 = newarray (java.lang.Object)[4];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i35);

        $r8[0] = $r9;

        $r8[1] = r3;

        $r10 = specialinvoke r0.<android.media.MediaPlayer$DrmInfo: java.lang.String arrToHex(byte[])>(r28);

        $r8[2] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[3] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("parsePSSH[%d]: <%s, %s> pssh: %d", $r8);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaPlayer", $r12);

        i35 = i35 + 1;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r28);

        goto label1;

     label7:
        return $r4;
    }

    public java.util.Map getPssh()
    {
        android.media.MediaPlayer$DrmInfo r0;
        java.util.Map $r1;

        r0 := @this: android.media.MediaPlayer$DrmInfo;

        $r1 = r0.<android.media.MediaPlayer$DrmInfo: java.util.Map mapPssh>;

        return $r1;
    }

    public java.util.UUID[] getSupportedSchemes()
    {
        android.media.MediaPlayer$DrmInfo r0;
        java.util.UUID[] $r1;

        r0 := @this: android.media.MediaPlayer$DrmInfo;

        $r1 = r0.<android.media.MediaPlayer$DrmInfo: java.util.UUID[] supportedSchemes>;

        return $r1;
    }
}
