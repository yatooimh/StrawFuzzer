class android.media.MediaPlayer$TimeProvider extends java.lang.Object implements android.media.MediaPlayer$OnSeekCompleteListener, android.media.MediaTimeProvider
{
    private static final long MAX_EARLY_CALLBACK_US;
    private static final long MAX_NS_WITHOUT_POSITION_CHECK;
    private static final int NOTIFY;
    private static final int NOTIFY_SEEK;
    private static final int NOTIFY_STOP;
    private static final int NOTIFY_TIME;
    private static final int NOTIFY_TRACK_DATA;
    private static final java.lang.String TAG;
    private static final long TIME_ADJUSTMENT_RATE;
    public boolean DEBUG;
    private boolean mBuffering;
    private android.os.Handler mEventHandler;
    private android.os.HandlerThread mHandlerThread;
    private long mLastReportedTime;
    private long mLastTimeUs;
    private android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners;
    private boolean mPaused;
    private boolean mPausing;
    private android.media.MediaPlayer mPlayer;
    private boolean mRefresh;
    private boolean mSeeking;
    private boolean mStopped;
    private long[] mTimes;

    public void <init>(android.media.MediaPlayer)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.os.HandlerThread $r1, $r2;
        java.lang.Throwable $r3;
        android.media.MediaPlayer r4;
        android.os.Looper r6, r7, r8;
        android.media.MediaPlayer$TimeProvider$EventHandler $r10;
        android.media.MediaTimeProvider$OnMediaTimeListener[] $r11;
        long[] $r12;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r4 := @parameter0: android.media.MediaPlayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs> = 0L;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaPlayer mPlayer> = r4;

     label1:
        virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(1, 0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh> = 1;

     label4:
        r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r7 = r6;

        if r6 != null goto label5;

        r8 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        r7 = r8;

        if r8 != null goto label5;

        $r1 = new android.os.HandlerThread;

        specialinvoke $r1.<android.os.HandlerThread: void <init>(java.lang.String,int)>("MediaPlayerMTPEventThread", -2);

        r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread> = $r1;

        virtualinvoke $r1.<android.os.HandlerThread: void start()>();

        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        r7 = virtualinvoke $r2.<android.os.HandlerThread: android.os.Looper getLooper()>();

     label5:
        $r10 = new android.media.MediaPlayer$TimeProvider$EventHandler;

        specialinvoke $r10.<android.media.MediaPlayer$TimeProvider$EventHandler: void <init>(android.media.MediaPlayer$TimeProvider,android.os.Looper)>(r0, r7);

        r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler> = $r10;

        $r11 = newarray (android.media.MediaTimeProvider$OnMediaTimeListener)[0];

        r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners> = $r11;

        $r12 = newarray (long)[0];

        r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes> = $r12;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs> = 0L;

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    static android.os.Handler access$200(android.media.MediaPlayer$TimeProvider)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        $r1 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        return $r1;
    }

    static void access$4500(android.media.MediaPlayer$TimeProvider, boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean z0;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifyTimedEvent(boolean)>(z0);

        return;
    }

    static void access$4600(android.media.MediaPlayer$TimeProvider)
    {
        android.media.MediaPlayer$TimeProvider r0;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifyStop()>();

        return;
    }

    static void access$4700(android.media.MediaPlayer$TimeProvider)
    {
        android.media.MediaPlayer$TimeProvider r0;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifySeek()>();

        return;
    }

    static void access$4800(android.media.MediaPlayer$TimeProvider, android.util.Pair)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.util.Pair r1;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter1: android.util.Pair;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifyTrackData(android.util.Pair)>(r1);

        return;
    }

    private void notifySeek()
    {
        android.media.MediaPlayer$TimeProvider r0;
        long l0;
        int i1, i4;
        android.media.MediaTimeProvider$OnMediaTimeListener r1;
        boolean $z0, $z1;
        java.lang.String $r4;
        java.lang.Throwable $r5, $r6;
        java.lang.StringBuilder r7;
        android.media.MediaTimeProvider$OnMediaTimeListener[] r8;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        entermonitor r0;

     label01:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

     label02:
        l0 = virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(1, 0);

        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label03;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSeekComplete at ");

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r4);

     label03:
        r8 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        i1 = lengthof r8;

     label04:
        i4 = 0;

     label05:
        if i4 >= i1 goto label08;

        r1 = r8[i4];

        if r1 != null goto label06;

        goto label08;

     label06:
        interfaceinvoke r1.<android.media.MediaTimeProvider$OnMediaTimeListener: void onSeek(long)>(l0);

     label07:
        i4 = i4 + 1;

        goto label05;

     label08:
        goto label12;

     label09:
        $r5 := @caughtexception;

     label10:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z1 == 0 goto label11;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "onSeekComplete but no player");

     label11:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifyTimedEvent(boolean)>(0);

     label12:
        exitmonitor r0;

        return;

     label13:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.IllegalStateException from label02 to label03 with label09;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.IllegalStateException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.IllegalStateException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    private void notifyStop()
    {
        android.media.MediaPlayer$TimeProvider r0;
        int i0, i1;
        android.media.MediaTimeProvider$OnMediaTimeListener r1;
        java.lang.Throwable $r2;
        android.media.MediaTimeProvider$OnMediaTimeListener[] r3;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        entermonitor r0;

     label1:
        r3 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        i0 = lengthof r3;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        r1 = r3[i1];

        if r1 != null goto label4;

        goto label6;

     label4:
        interfaceinvoke r1.<android.media.MediaTimeProvider$OnMediaTimeListener: void onStop()>();

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        exitmonitor r0;

        return;

     label7:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    private void notifyTimedEvent(boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        int i0, i17, i19, $i20;
        boolean $z0, $z1, $z2, $z4, z5, z6, z7, $z8;
        byte $b1, $b4, $b7, $b8, $b10, $b14;
        android.os.Handler $r1;
        java.lang.Object $r2;
        android.media.MediaTimeProvider$OnMediaTimeListener $r3, $r11, $r17;
        android.media.MediaPlayer $r4;
        java.lang.String $r9, $r25;
        android.media.MediaTimeProvider$OnMediaTimeListener[] $r10, $r16;
        long[] $r12, $r13, $r14, $r15, $r18, r33, $r35;
        long $l3, $l5, $l6, $l9, $l12, l15, l16, l18, l21;
        java.lang.Throwable $r28, $r29;
        java.lang.StringBuilder r32, r36;
        java.util.Vector r34;
        java.util.Iterator r37;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        z5 := @parameter0: boolean;

        entermonitor r0;

     label01:
        l15 = virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(z5, 1);

     label02:
        goto label06;

     label03:
        $r28 := @caughtexception;

        goto label42;

     label04:
        $r29 := @caughtexception;

     label05:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 1;

        l15 = virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(z5, 1);

     label06:
        l16 = l15;

     label07:
        z6 = r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking>;

     label08:
        if z6 == 0 goto label09;

        exitmonitor r0;

        return;

     label09:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label20;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyTimedEvent(");

        $l12 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l15);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") from {");

     label10:
        z7 = 1;

     label11:
        r33 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        i0 = lengthof r33;

     label12:
        i17 = 0;

     label13:
        if i17 >= i0 goto label19;

        l18 = r33[i17];

        $b14 = l18 cmp -1L;

        if $b14 != 0 goto label14;

        goto label18;

     label14:
        if z7 != 0 goto label16;

     label15:
        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label16:
        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l18);

     label17:
        z7 = 0;

     label18:
        i17 = i17 + 1;

        goto label13;

     label19:
        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r25 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r25);

     label20:
        r34 = new java.util.Vector;

        specialinvoke r34.<java.util.Vector: void <init>()>();

     label21:
        i19 = 0;

     label22:
        $r35 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i20 = lengthof $r35;

        if i19 >= $i20 goto label33;

        $r10 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r11 = $r10[i19];

        if $r11 != null goto label24;

     label23:
        goto label33;

     label24:
        $r12 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $l3 = $r12[i19];

        $b4 = $l3 cmp -1L;

        if $b4 > 0 goto label26;

     label25:
        l21 = l16;

        goto label32;

     label26:
        $r13 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $l6 = $r13[i19];

        $l5 = 1000L + l15;

        $b7 = $l6 cmp $l5;

        if $b7 > 0 goto label29;

        $r16 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r17 = $r16[i19];

        virtualinvoke r34.<java.util.Vector: boolean add(java.lang.Object)>($r17);

        $z4 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z4 == 0 goto label27;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "removed");

     label27:
        $r18 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r18[i19] = -1L;

     label28:
        l21 = l16;

        goto label32;

     label29:
        $b8 = l16 cmp l15;

        if $b8 == 0 goto label31;

        l21 = l16;

     label30:
        $r15 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $l9 = $r15[i19];

        $b10 = $l9 cmp l16;

        if $b10 >= 0 goto label32;

     label31:
        $r14 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        l21 = $r14[i19];

     label32:
        i19 = i19 + 1;

        l16 = l21;

        goto label22;

     label33:
        $b1 = l16 cmp l15;

        if $b1 <= 0 goto label37;

     label34:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z1 != 0 goto label37;

        $z2 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z2 == 0 goto label35;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduling for ");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l16);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l15);

        $r9 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r9);

     label35:
        $r4 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaPlayer mPlayer>;

        virtualinvoke $r4.<android.media.MediaPlayer: void notifyAt(long)>(l16);

     label36:
        goto label38;

     label37:
        $r1 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

     label38:
        r37 = virtualinvoke r34.<java.util.Vector: java.util.Iterator iterator()>();

     label39:
        $z8 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label41;

        $r2 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.media.MediaTimeProvider$OnMediaTimeListener) $r2;

        interfaceinvoke $r3.<android.media.MediaTimeProvider$OnMediaTimeListener: void onTimedEvent(long)>(l15);

     label40:
        goto label39;

     label41:
        exitmonitor r0;

        return;

     label42:
        exitmonitor r0;

        throw $r28;

        catch java.lang.IllegalStateException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label07 to label08 with label03;
        catch java.lang.Throwable from label09 to label10 with label03;
        catch java.lang.Throwable from label11 to label12 with label03;
        catch java.lang.Throwable from label15 to label16 with label03;
        catch java.lang.Throwable from label16 to label17 with label03;
        catch java.lang.Throwable from label19 to label20 with label03;
        catch java.lang.Throwable from label20 to label21 with label03;
        catch java.lang.Throwable from label22 to label23 with label03;
        catch java.lang.Throwable from label24 to label25 with label03;
        catch java.lang.Throwable from label26 to label27 with label03;
        catch java.lang.Throwable from label27 to label28 with label03;
        catch java.lang.Throwable from label30 to label31 with label03;
        catch java.lang.Throwable from label31 to label32 with label03;
        catch java.lang.Throwable from label34 to label35 with label03;
        catch java.lang.Throwable from label35 to label36 with label03;
        catch java.lang.Throwable from label37 to label38 with label03;
        catch java.lang.Throwable from label38 to label39 with label03;
        catch java.lang.Throwable from label39 to label40 with label03;
    }

    private void notifyTrackData(android.util.Pair)
    {
        android.media.MediaPlayer$TimeProvider r0;
        java.lang.Object $r1, $r2;
        byte[] $r3;
        android.media.SubtitleTrack $r4;
        java.lang.Throwable $r5;
        android.util.Pair r6;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r6 := @parameter0: android.util.Pair;

        entermonitor r0;

     label1:
        $r1 = r6.<android.util.Pair: java.lang.Object first>;

        $r4 = (android.media.SubtitleTrack) $r1;

        $r2 = r6.<android.util.Pair: java.lang.Object second>;

        $r3 = (byte[]) $r2;

        virtualinvoke $r4.<android.media.SubtitleTrack: void onData(byte[],boolean,long)>($r3, 1, -1L);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private int registerListener(android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.media.MediaTimeProvider$OnMediaTimeListener r1, $r3, $r5, $r6;
        android.media.MediaTimeProvider$OnMediaTimeListener[] r2, r7, r8, r11;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        long[] $r4, r9, r10;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaTimeProvider$OnMediaTimeListener;

        i5 = 0;

     label1:
        r7 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i0 = lengthof r7;

        if i5 >= $i0 goto label3;

        $r5 = r7[i5];

        if $r5 == r1 goto label3;

        $r6 = r7[i5];

        if $r6 != null goto label2;

        goto label3;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        r8 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i6 = lengthof r8;

        if i5 < $i6 goto label4;

        $i1 = i5 + 1;

        r2 = newarray (android.media.MediaTimeProvider$OnMediaTimeListener)[$i1];

        $i2 = i5 + 1;

        r9 = newarray (long)[$i2];

        $i3 = lengthof r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r2, 0, $i3);

        r10 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i4 = lengthof r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 0, r9, 0, $i4);

        r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners> = r2;

        r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes> = r9;

     label4:
        r11 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r3 = r11[i5];

        if $r3 != null goto label5;

        r11[i5] = r1;

        $r4 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r4[i5] = -1L;

     label5:
        return i5;
    }

    private void scheduleNotification(int, long)
    {
        android.media.MediaPlayer$TimeProvider r0;
        int i0, $i3;
        long l1, $l2, $l4;
        boolean $z0, $z1;
        android.os.Handler $r1, $r2, $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r9;
        android.os.Message r11;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking>;

        if $z0 == 0 goto label1;

        if i0 != 0 goto label1;

        return;

     label1:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleNotification ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MTP", $r9);

     label2:
        $r1 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        r11 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(1, i0, 0);

        $r3 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        $l2 = l1 / 1000L;

        $i3 = (int) $l2;

        $l4 = (long) $i3;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r11, $l4);

        return;
    }

    public void cancelNotifications(android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.media.MediaTimeProvider$OnMediaTimeListener[] $r1, $r2, $r4, $r6, $r7, $r8, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.media.MediaTimeProvider$OnMediaTimeListener $r3, $r5, r17;
        long[] $r9, $r10, $r11, $r14, $r15;
        java.lang.Throwable $r16;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r17 := @parameter0: android.media.MediaTimeProvider$OnMediaTimeListener;

        entermonitor r0;

        i13 = 0;

     label01:
        $r1 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i0 = lengthof $r1;

        if i13 >= $i0 goto label06;

        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r3 = $r2[i13];

        if $r3 != r17 goto label03;

        $r8 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i4 = i13 + 1;

        $r7 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r6 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i1 = lengthof $r6;

        $i2 = $i1 - i13;

        $i3 = $i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i4, $r7, i13, $i3);

        $r11 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i8 = i13 + 1;

        $r10 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r9 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i5 = lengthof $r9;

        $i6 = $i5 - i13;

        $i7 = $i6 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, $i8, $r10, i13, $i7);

        $r13 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r12 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i9 = lengthof $r12;

        $i10 = $i9 - 1;

        $r13[$i10] = null;

        $r15 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r14 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i11 = lengthof $r14;

        $i12 = $i11 - 1;

        $r15[$i12] = -1L;

     label02:
        goto label06;

     label03:
        $r4 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r5 = $r4[i13];

        if $r5 != null goto label05;

     label04:
        goto label06;

     label05:
        i13 = i13 + 1;

        goto label01;

     label06:
        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

        exitmonitor r0;

     label07:
        return;

     label08:
        $r16 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void close()
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.os.HandlerThread r1;
        android.os.Handler $r2;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(1);

        r1 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.os.HandlerThread: boolean quitSafely()>();

        r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread> = null;

     label1:
        return;
    }

    protected void finalize()
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.os.HandlerThread r1;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.os.HandlerThread: boolean quitSafely()>();

     label1:
        return;
    }

    public long getCurrentTimeUs(boolean, boolean) throws java.lang.IllegalStateException
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, z7, $z8, $z9;
        java.lang.StringBuilder r1, r15;
        android.media.MediaPlayer $r2, $r3;
        int $i0;
        long $l1, $l2, $l3, $l4, $l5, $l7, $l8, $l9, $l11, $l13, $l14, $l16, $l17, l19, l20, l21;
        byte $b6, $b10, $b18;
        java.lang.String $r7, $r12, r13;
        java.lang.Throwable $r8, $r9;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        z6 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z1 == 0 goto label05;

     label02:
        if z6 != 0 goto label05;

     label03:
        l19 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        exitmonitor r0;

     label04:
        return l19;

     label05:
        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaPlayer mPlayer>;

        $i0 = virtualinvoke $r2.<android.media.MediaPlayer: int getCurrentPosition()>();

        $l1 = (long) $i0;

        $l2 = $l1 * 1000L;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs> = $l2;

        $r3 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaPlayer mPlayer>;

        $z2 = virtualinvoke $r3.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z2 == 0 goto label08;

        $z4 = r0.<android.media.MediaPlayer$TimeProvider: boolean mBuffering>;

        if $z4 == 0 goto label07;

     label06:
        goto label08;

     label07:
        z7 = 0;

        goto label09;

     label08:
        z7 = 1;

     label09:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = z7;

        $z8 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z8 == 0 goto label13;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $z3 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z3 == 0 goto label11;

     label10:
        r13 = "paused";

        goto label12;

     label11:
        r13 = "playing";

     label12:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $l11 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MTP", $r7);

     label13:
        if z0 == 0 goto label16;

     label14:
        $l5 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $l4 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $b6 = $l5 cmp $l4;

        if $b6 >= 0 goto label16;

        $l8 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $l7 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $l9 = $l8 - $l7;

        $b10 = $l9 cmp 1000000L;

        if $b10 <= 0 goto label17;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

     label15:
        goto label17;

     label16:
        $l3 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime> = $l3;

     label17:
        l20 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        exitmonitor r0;

     label18:
        return l20;

     label19:
        $r9 := @caughtexception;

     label20:
        $z5 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing>;

        if $z5 == 0 goto label27;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 0;

     label21:
        if z0 == 0 goto label23;

     label22:
        $l17 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $l16 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $b18 = $l17 cmp $l16;

        if $b18 >= 0 goto label24;

     label23:
        $l13 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime> = $l13;

     label24:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = 1;

        $z9 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z9 == 0 goto label25;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal state, but pausing: estimating at ");

        $l14 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r12 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r12);

     label25:
        l21 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        exitmonitor r0;

     label26:
        return l21;

     label27:
        throw $r9;

     label28:
        $r8 := @caughtexception;

     label29:
        exitmonitor r0;

     label30:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.IllegalStateException from label05 to label06 with label19;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.IllegalStateException from label09 to label10 with label19;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.IllegalStateException from label12 to label13 with label19;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label17 to label18 with label28;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    public void notifyAt(long, android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0;
        long l0;
        java.lang.StringBuilder r1;
        boolean $z0;
        long[] $r2;
        int $i1;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        android.media.MediaTimeProvider$OnMediaTimeListener r7;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        l0 := @parameter0: long;

        r7 := @parameter1: android.media.MediaTimeProvider$OnMediaTimeListener;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyAt ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r5);

     label2:
        $r2 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i1 = specialinvoke r0.<android.media.MediaPlayer$TimeProvider: int registerListener(android.media.MediaTimeProvider$OnMediaTimeListener)>(r7);

        $r2[$i1] = l0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onBuffering(boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean z0, $z1;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder r5;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z1 == 0 goto label2;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onBuffering: ");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r3);

     label2:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mBuffering> = z0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onNewPlayer()
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh>;

        if $z0 == 0 goto label6;

        entermonitor r0;

     label1:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mBuffering> = 0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

        exitmonitor r0;

     label2:
        goto label6;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onNotifyTime()
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "onNotifyTime: ");

     label2:
        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onPaused(boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean z0, $z1, $z2;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder r5;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z1 == 0 goto label2;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onPaused: ");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r3);

     label2:
        $z2 = r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped>;

        if $z2 == 0 goto label4;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

     label3:
        goto label5;

     label4:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = z0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

     label5:
        exitmonitor r0;

     label6:
        return;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void onSeekComplete(android.media.MediaPlayer)
    {
        android.media.MediaPlayer$TimeProvider r0;
        java.lang.Throwable $r1;
        android.media.MediaPlayer r2;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r2 := @parameter0: android.media.MediaPlayer;

        entermonitor r0;

     label1:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onStopped()
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean $z0;
        java.lang.Throwable $r2;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "onStopped");

     label2:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mBuffering> = 0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(2, 0L);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void scheduleUpdate(android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0;
        int i0;
        boolean $z0, $z1;
        long[] $r1;
        java.lang.Throwable $r2;
        android.media.MediaTimeProvider$OnMediaTimeListener r3;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r3 := @parameter0: android.media.MediaTimeProvider$OnMediaTimeListener;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "scheduleUpdate");

     label2:
        i0 = specialinvoke r0.<android.media.MediaPlayer$TimeProvider: int registerListener(android.media.MediaTimeProvider$OnMediaTimeListener)>(r3);

        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped>;

        if $z1 != 0 goto label3;

        $r1 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r1[i0] = 0L;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

     label3:
        exitmonitor r0;

     label4:
        return;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static void <clinit>()
    {
        <android.media.MediaPlayer$TimeProvider: long TIME_ADJUSTMENT_RATE> = 2L;

        <android.media.MediaPlayer$TimeProvider: java.lang.String TAG> = "MTP";

        <android.media.MediaPlayer$TimeProvider: int NOTIFY_TRACK_DATA> = 4;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY_TIME> = 0;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY_STOP> = 2;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY_SEEK> = 3;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY> = 1;

        <android.media.MediaPlayer$TimeProvider: long MAX_NS_WITHOUT_POSITION_CHECK> = 5000000000L;

        <android.media.MediaPlayer$TimeProvider: long MAX_EARLY_CALLBACK_US> = 1000L;

        return;
    }
}
