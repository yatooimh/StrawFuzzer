public final class android.media.MediaRoute2Info$Builder extends java.lang.Object
{
    java.lang.String mAddress;
    java.lang.String mClientPackageName;
    int mConnectionState;
    java.lang.CharSequence mDescription;
    android.os.Bundle mExtras;
    final java.util.List mFeatures;
    android.net.Uri mIconUri;
    final java.lang.String mId;
    boolean mIsSystem;
    final java.lang.CharSequence mName;
    java.lang.String mProviderId;
    int mType;
    int mVolume;
    int mVolumeHandling;
    int mVolumeMax;

    public void <init>(android.media.MediaRoute2Info)
    {
        android.media.MediaRoute2Info$Builder r0;
        android.media.MediaRoute2Info r1;
        java.lang.String $r2;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r1 := @parameter0: android.media.MediaRoute2Info;

        $r2 = r1.<android.media.MediaRoute2Info: java.lang.String mId>;

        specialinvoke r0.<android.media.MediaRoute2Info$Builder: void <init>(java.lang.String,android.media.MediaRoute2Info)>($r2, r1);

        return;
    }

    public void <init>(java.lang.String, android.media.MediaRoute2Info)
    {
        android.media.MediaRoute2Info$Builder r0;
        java.lang.String r1, $r10, $r11, $r13;
        android.media.MediaRoute2Info r2;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;
        java.lang.CharSequence $r5, $r9;
        java.util.ArrayList $r6;
        java.util.List $r7;
        int $i0, $i1, $i2, $i3, $i4;
        android.net.Uri $r8;
        android.os.Bundle $r12, $r14, $r15;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.media.MediaRoute2Info;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaRoute2Info$Builder: int mType> = 0;

        r0.<android.media.MediaRoute2Info$Builder: int mVolumeHandling> = 0;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label2;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "routeInfo must not be null");

        r0.<android.media.MediaRoute2Info$Builder: java.lang.String mId> = r1;

        $r5 = r2.<android.media.MediaRoute2Info: java.lang.CharSequence mName>;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.CharSequence mName> = $r5;

        $r6 = new java.util.ArrayList;

        $r7 = r2.<android.media.MediaRoute2Info: java.util.List mFeatures>;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        r0.<android.media.MediaRoute2Info$Builder: java.util.List mFeatures> = $r6;

        $i0 = r2.<android.media.MediaRoute2Info: int mType>;

        r0.<android.media.MediaRoute2Info$Builder: int mType> = $i0;

        $z1 = r2.<android.media.MediaRoute2Info: boolean mIsSystem>;

        r0.<android.media.MediaRoute2Info$Builder: boolean mIsSystem> = $z1;

        $r8 = r2.<android.media.MediaRoute2Info: android.net.Uri mIconUri>;

        r0.<android.media.MediaRoute2Info$Builder: android.net.Uri mIconUri> = $r8;

        $r9 = r2.<android.media.MediaRoute2Info: java.lang.CharSequence mDescription>;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.CharSequence mDescription> = $r9;

        $i1 = r2.<android.media.MediaRoute2Info: int mConnectionState>;

        r0.<android.media.MediaRoute2Info$Builder: int mConnectionState> = $i1;

        $r10 = r2.<android.media.MediaRoute2Info: java.lang.String mClientPackageName>;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.String mClientPackageName> = $r10;

        $i2 = r2.<android.media.MediaRoute2Info: int mVolumeHandling>;

        r0.<android.media.MediaRoute2Info$Builder: int mVolumeHandling> = $i2;

        $i3 = r2.<android.media.MediaRoute2Info: int mVolumeMax>;

        r0.<android.media.MediaRoute2Info$Builder: int mVolumeMax> = $i3;

        $i4 = r2.<android.media.MediaRoute2Info: int mVolume>;

        r0.<android.media.MediaRoute2Info$Builder: int mVolume> = $i4;

        $r11 = r2.<android.media.MediaRoute2Info: java.lang.String mAddress>;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.String mAddress> = $r11;

        $r12 = r2.<android.media.MediaRoute2Info: android.os.Bundle mExtras>;

        if $r12 == null goto label1;

        $r14 = new android.os.Bundle;

        $r15 = r2.<android.media.MediaRoute2Info: android.os.Bundle mExtras>;

        specialinvoke $r14.<android.os.Bundle: void <init>(android.os.Bundle)>($r15);

        r0.<android.media.MediaRoute2Info$Builder: android.os.Bundle mExtras> = $r14;

     label1:
        $r13 = r2.<android.media.MediaRoute2Info: java.lang.String mProviderId>;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.String mProviderId> = $r13;

        return;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("id must not be empty");

        throw $r3;
    }

    public void <init>(java.lang.String, java.lang.CharSequence)
    {
        android.media.MediaRoute2Info$Builder r0;
        java.lang.String r1;
        java.lang.CharSequence r2;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3, $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaRoute2Info$Builder: int mType> = 0;

        r0.<android.media.MediaRoute2Info$Builder: int mVolumeHandling> = 0;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label1;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.String mId> = r1;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.CharSequence mName> = r2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.media.MediaRoute2Info$Builder: java.util.List mFeatures> = $r5;

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name must not be empty");

        throw $r4;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("id must not be empty");

        throw $r3;
    }

    public android.media.MediaRoute2Info$Builder addFeature(java.lang.String)
    {
        android.media.MediaRoute2Info$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.media.MediaRoute2Info$Builder: java.util.List mFeatures>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("feature must not be null or empty");

        throw $r2;
    }

    public android.media.MediaRoute2Info$Builder addFeatures(java.util.Collection)
    {
        android.media.MediaRoute2Info$Builder r0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.util.Collection r5;
        java.util.Iterator r6;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r5 := @parameter0: java.util.Collection;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r5, "features must not be null");

        r6 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r2;

        virtualinvoke r0.<android.media.MediaRoute2Info$Builder: android.media.MediaRoute2Info$Builder addFeature(java.lang.String)>($r3);

        goto label1;

     label2:
        return r0;
    }

    public android.media.MediaRoute2Info build()
    {
        android.media.MediaRoute2Info$Builder r0;
        java.util.List $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        android.media.MediaRoute2Info $r3;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        $r1 = r0.<android.media.MediaRoute2Info$Builder: java.util.List mFeatures>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = new android.media.MediaRoute2Info;

        specialinvoke $r3.<android.media.MediaRoute2Info: void <init>(android.media.MediaRoute2Info$Builder)>(r0);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("features must not be empty!");

        throw $r2;
    }

    public android.media.MediaRoute2Info$Builder clearFeatures()
    {
        android.media.MediaRoute2Info$Builder r0;
        java.util.List $r1;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        $r1 = r0.<android.media.MediaRoute2Info$Builder: java.util.List mFeatures>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setAddress(java.lang.String)
    {
        android.media.MediaRoute2Info$Builder r0;
        java.lang.String r1;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.String mAddress> = r1;

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setClientPackageName(java.lang.String)
    {
        android.media.MediaRoute2Info$Builder r0;
        java.lang.String r1;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.String mClientPackageName> = r1;

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setConnectionState(int)
    {
        android.media.MediaRoute2Info$Builder r0;
        int i0;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        i0 := @parameter0: int;

        r0.<android.media.MediaRoute2Info$Builder: int mConnectionState> = i0;

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setDescription(java.lang.CharSequence)
    {
        android.media.MediaRoute2Info$Builder r0;
        java.lang.CharSequence r1;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.CharSequence mDescription> = r1;

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setExtras(android.os.Bundle)
    {
        android.media.MediaRoute2Info$Builder r0;
        android.os.Bundle r1, $r2;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        r0.<android.media.MediaRoute2Info$Builder: android.os.Bundle mExtras> = null;

        return r0;

     label1:
        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

        r0.<android.media.MediaRoute2Info$Builder: android.os.Bundle mExtras> = $r2;

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setIconUri(android.net.Uri)
    {
        android.media.MediaRoute2Info$Builder r0;
        android.net.Uri r1;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r1 := @parameter0: android.net.Uri;

        r0.<android.media.MediaRoute2Info$Builder: android.net.Uri mIconUri> = r1;

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setProviderId(java.lang.String)
    {
        android.media.MediaRoute2Info$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        r0.<android.media.MediaRoute2Info$Builder: java.lang.String mProviderId> = r1;

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("providerId must not be null or empty");

        throw $r2;
    }

    public android.media.MediaRoute2Info$Builder setSystemRoute(boolean)
    {
        android.media.MediaRoute2Info$Builder r0;
        boolean z0;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        z0 := @parameter0: boolean;

        r0.<android.media.MediaRoute2Info$Builder: boolean mIsSystem> = z0;

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setType(int)
    {
        android.media.MediaRoute2Info$Builder r0;
        int i0;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        i0 := @parameter0: int;

        r0.<android.media.MediaRoute2Info$Builder: int mType> = i0;

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setVolume(int)
    {
        android.media.MediaRoute2Info$Builder r0;
        int i0;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        i0 := @parameter0: int;

        r0.<android.media.MediaRoute2Info$Builder: int mVolume> = i0;

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setVolumeHandling(int)
    {
        android.media.MediaRoute2Info$Builder r0;
        int i0;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        i0 := @parameter0: int;

        r0.<android.media.MediaRoute2Info$Builder: int mVolumeHandling> = i0;

        return r0;
    }

    public android.media.MediaRoute2Info$Builder setVolumeMax(int)
    {
        android.media.MediaRoute2Info$Builder r0;
        int i0;

        r0 := @this: android.media.MediaRoute2Info$Builder;

        i0 := @parameter0: int;

        r0.<android.media.MediaRoute2Info$Builder: int mVolumeMax> = i0;

        return r0;
    }
}
