public abstract class android.media.MediaRoute2ProviderService extends android.app.Service
{
    private static final boolean DEBUG;
    private static final int MAX_REQUEST_IDS_SIZE;
    public static final int REASON_INVALID_COMMAND;
    public static final int REASON_NETWORK_ERROR;
    public static final int REASON_REJECTED;
    public static final int REASON_ROUTE_NOT_AVAILABLE;
    public static final int REASON_UNKNOWN_ERROR;
    public static final long REQUEST_ID_NONE;
    public static final java.lang.String SERVICE_INTERFACE;
    private static final java.lang.String TAG;
    private final android.os.Handler mHandler;
    private volatile android.media.MediaRoute2ProviderInfo mProviderInfo;
    private android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback;
    private final java.util.Deque mRequestIds;
    private final java.lang.Object mRequestIdsLock;
    private final android.util.ArrayMap mSessionInfo;
    private final java.lang.Object mSessionLock;
    private final java.util.concurrent.atomic.AtomicBoolean mStatePublishScheduled;
    private android.media.MediaRoute2ProviderService$MediaRoute2ProviderServiceStub mStub;

    static void <clinit>()
    {
        boolean $z0;

        <android.media.MediaRoute2ProviderService: java.lang.String TAG> = "MR2ProviderService";

        <android.media.MediaRoute2ProviderService: java.lang.String SERVICE_INTERFACE> = "android.media.MediaRoute2ProviderService";

        <android.media.MediaRoute2ProviderService: long REQUEST_ID_NONE> = 0L;

        <android.media.MediaRoute2ProviderService: int REASON_UNKNOWN_ERROR> = 0;

        <android.media.MediaRoute2ProviderService: int REASON_ROUTE_NOT_AVAILABLE> = 3;

        <android.media.MediaRoute2ProviderService: int REASON_REJECTED> = 1;

        <android.media.MediaRoute2ProviderService: int REASON_NETWORK_ERROR> = 2;

        <android.media.MediaRoute2ProviderService: int REASON_INVALID_COMMAND> = 4;

        <android.media.MediaRoute2ProviderService: int MAX_REQUEST_IDS_SIZE> = 500;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MR2ProviderService", 3);

        <android.media.MediaRoute2ProviderService: boolean DEBUG> = $z0;

        return;
    }

    public void <init>()
    {
        android.media.MediaRoute2ProviderService r0;
        java.lang.Object $r1, $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        java.util.ArrayDeque $r4;
        android.util.ArrayMap $r5;
        android.os.Handler $r6;
        android.os.Looper $r7;

        r0 := @this: android.media.MediaRoute2ProviderService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaRoute2ProviderService: java.lang.Object mSessionLock> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaRoute2ProviderService: java.lang.Object mRequestIdsLock> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<android.media.MediaRoute2ProviderService: java.util.concurrent.atomic.AtomicBoolean mStatePublishScheduled> = $r3;

        $r4 = new java.util.ArrayDeque;

        specialinvoke $r4.<java.util.ArrayDeque: void <init>(int)>(500);

        r0.<android.media.MediaRoute2ProviderService: java.util.Deque mRequestIds> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<android.media.MediaRoute2ProviderService: android.util.ArrayMap mSessionInfo> = $r5;

        $r6 = new android.os.Handler;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        r0.<android.media.MediaRoute2ProviderService: android.os.Handler mHandler> = $r6;

        return;
    }

    static android.media.MediaRoute2ProviderInfo access$000(android.media.MediaRoute2ProviderService)
    {
        android.media.MediaRoute2ProviderService r0;
        android.media.MediaRoute2ProviderInfo $r1;

        r0 := @parameter0: android.media.MediaRoute2ProviderService;

        $r1 = r0.<android.media.MediaRoute2ProviderService: android.media.MediaRoute2ProviderInfo mProviderInfo>;

        return $r1;
    }

    static android.os.Handler access$100(android.media.MediaRoute2ProviderService)
    {
        android.media.MediaRoute2ProviderService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.media.MediaRoute2ProviderService;

        $r1 = r0.<android.media.MediaRoute2ProviderService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$200(android.media.MediaRoute2ProviderService, long)
    {
        android.media.MediaRoute2ProviderService r0;
        long l0;

        r0 := @parameter0: android.media.MediaRoute2ProviderService;

        l0 := @parameter1: long;

        specialinvoke r0.<android.media.MediaRoute2ProviderService: void addRequestId(long)>(l0);

        return;
    }

    private void addRequestId(long)
    {
        android.media.MediaRoute2ProviderService r0;
        long l0;
        java.lang.Object r1;
        java.util.Deque $r3, $r4, $r6;
        int $i1;
        java.lang.Long $r5;
        java.lang.Throwable $r8;

        r0 := @this: android.media.MediaRoute2ProviderService;

        l0 := @parameter0: long;

        r1 = r0.<android.media.MediaRoute2ProviderService: java.lang.Object mRequestIdsLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.MediaRoute2ProviderService: java.util.Deque mRequestIds>;

        $i1 = interfaceinvoke $r3.<java.util.Deque: int size()>();

        if $i1 < 500 goto label2;

        $r6 = r0.<android.media.MediaRoute2ProviderService: java.util.Deque mRequestIds>;

        interfaceinvoke $r6.<java.util.Deque: java.lang.Object removeFirst()>();

     label2:
        $r4 = r0.<android.media.MediaRoute2ProviderService: java.util.Deque mRequestIds>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r4.<java.util.Deque: void addLast(java.lang.Object)>($r5);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void lambda$MC0o_sBd6s0cxW9vHmSYdgeA6FM(android.media.MediaRoute2ProviderService)
    {
        android.media.MediaRoute2ProviderService r0;

        r0 := @parameter0: android.media.MediaRoute2ProviderService;

        specialinvoke r0.<android.media.MediaRoute2ProviderService: void publishState()>();

        return;
    }

    private void publishState()
    {
        android.media.MediaRoute2ProviderService r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;
        android.media.MediaRoute2ProviderInfo $r2;
        android.os.RemoteException $r3;
        android.media.IMediaRoute2ProviderServiceCallback r4;

        r0 := @this: android.media.MediaRoute2ProviderService;

        $r1 = r0.<android.media.MediaRoute2ProviderService: java.util.concurrent.atomic.AtomicBoolean mStatePublishScheduled>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(1, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        r4 = r0.<android.media.MediaRoute2ProviderService: android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback>;

        if r4 != null goto label2;

        return;

     label2:
        $r2 = r0.<android.media.MediaRoute2ProviderService: android.media.MediaRoute2ProviderInfo mProviderInfo>;

        interfaceinvoke r4.<android.media.IMediaRoute2ProviderServiceCallback: void updateState(android.media.MediaRoute2ProviderInfo)>($r2);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2ProviderService", "Failed to publish provider state.", $r3);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private boolean removeRequestId(long)
    {
        android.media.MediaRoute2ProviderService r0;
        long l0;
        java.lang.Object r1;
        boolean z0;
        java.util.Deque $r3;
        java.lang.Long $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.MediaRoute2ProviderService;

        l0 := @parameter0: long;

        r1 = r0.<android.media.MediaRoute2ProviderService: java.lang.Object mRequestIdsLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.MediaRoute2ProviderService: java.util.Deque mRequestIds>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        z0 = interfaceinvoke $r3.<java.util.Deque: boolean removeFirstOccurrence(java.lang.Object)>($r4);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final java.util.List getAllSessionInfo()
    {
        android.media.MediaRoute2ProviderService r0;
        java.lang.Object r1;
        android.util.ArrayMap $r2;
        java.util.Collection $r3;
        java.lang.Throwable $r4;
        java.util.ArrayList r5;

        r0 := @this: android.media.MediaRoute2ProviderService;

        r1 = r0.<android.media.MediaRoute2ProviderService: java.lang.Object mSessionLock>;

        entermonitor r1;

     label1:
        r5 = new java.util.ArrayList;

        $r2 = r0.<android.media.MediaRoute2ProviderService: android.util.ArrayMap mSessionInfo>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.util.Collection values()>();

        specialinvoke r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final android.media.RoutingSessionInfo getSessionInfo(java.lang.String)
    {
        android.media.MediaRoute2ProviderService r0;
        java.lang.Object r1, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        android.util.ArrayMap $r3;
        java.lang.Throwable $r5;
        java.lang.String r6;
        android.media.RoutingSessionInfo r7;

        r0 := @this: android.media.MediaRoute2ProviderService;

        r6 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z0 != 0 goto label6;

        r1 = r0.<android.media.MediaRoute2ProviderService: java.lang.Object mSessionLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.MediaRoute2ProviderService: android.util.ArrayMap mSessionInfo>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (android.media.RoutingSessionInfo) $r4;

        exitmonitor r1;

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sessionId must not be empty");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void notifyRequestFailed(long, int)
    {
        android.media.MediaRoute2ProviderService r0;
        long l0;
        int i1;
        android.media.IMediaRoute2ProviderServiceCallback $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.media.MediaRoute2ProviderService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<android.media.MediaRoute2ProviderService: android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback>;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<android.media.MediaRoute2ProviderService: boolean removeRequestId(long)>(l0);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyRequestFailed: The requestId doesn\'t exist. requestId=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", $r6);

        return;

     label2:
        $r2 = r0.<android.media.MediaRoute2ProviderService: android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback>;

        interfaceinvoke $r2.<android.media.IMediaRoute2ProviderServiceCallback: void notifyRequestFailed(long,int)>(l0, i1);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "Failed to notify that the request has failed.");

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public final void notifyRoutes(java.util.Collection)
    {
        android.media.MediaRoute2ProviderService r0;
        java.util.Collection r1;
        android.media.MediaRoute2ProviderInfo$Builder $r3, $r4;
        android.media.MediaRoute2ProviderInfo $r5;

        r0 := @this: android.media.MediaRoute2ProviderService;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "routes must not be null");

        $r3 = new android.media.MediaRoute2ProviderInfo$Builder;

        specialinvoke $r3.<android.media.MediaRoute2ProviderInfo$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.media.MediaRoute2ProviderInfo$Builder: android.media.MediaRoute2ProviderInfo$Builder addRoutes(java.util.Collection)>(r1);

        $r5 = virtualinvoke $r4.<android.media.MediaRoute2ProviderInfo$Builder: android.media.MediaRoute2ProviderInfo build()>();

        r0.<android.media.MediaRoute2ProviderService: android.media.MediaRoute2ProviderInfo mProviderInfo> = $r5;

        virtualinvoke r0.<android.media.MediaRoute2ProviderService: void schedulePublishState()>();

        return;
    }

    public final void notifySessionCreated(long, android.media.RoutingSessionInfo)
    {
        android.media.MediaRoute2ProviderService r0;
        long l0;
        java.lang.String r1, $r5, $r12, $r18;
        boolean $z0, $z1, $z2;
        byte $b1;
        android.util.ArrayMap $r3, $r4;
        android.media.IMediaRoute2ProviderServiceCallback $r7, $r8;
        java.lang.StringBuilder $r9, $r13;
        java.lang.Throwable $r19;
        android.os.RemoteException $r20;
        android.media.RoutingSessionInfo r21;
        java.lang.Object r24;

        r0 := @this: android.media.MediaRoute2ProviderService;

        l0 := @parameter0: long;

        r21 := @parameter1: android.media.RoutingSessionInfo;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r21, "sessionInfo must not be null");

        $z0 = <android.media.MediaRoute2ProviderService: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySessionCreated: Creating a session. requestId=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sessionInfo=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MR2ProviderService", $r18);

     label01:
        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label02;

        $z2 = specialinvoke r0.<android.media.MediaRoute2ProviderService: boolean removeRequestId(long)>(l0);

        if $z2 != 0 goto label02;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySessionCreated: The requestId doesn\'t exist. requestId=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", $r12);

        return;

     label02:
        r1 = virtualinvoke r21.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        r24 = r0.<android.media.MediaRoute2ProviderService: java.lang.Object mSessionLock>;

        entermonitor r24;

     label03:
        $r3 = r0.<android.media.MediaRoute2ProviderService: android.util.ArrayMap mSessionInfo>;

        $z1 = virtualinvoke $r3.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label05;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "notifySessionCreated: Ignoring duplicate session id.");

        exitmonitor r24;

     label04:
        return;

     label05:
        $r4 = r0.<android.media.MediaRoute2ProviderService: android.util.ArrayMap mSessionInfo>;

        $r5 = virtualinvoke r21.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r21);

        $r7 = r0.<android.media.MediaRoute2ProviderService: android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback>;

        if $r7 != null goto label07;

        exitmonitor r24;

     label06:
        return;

     label07:
        $r8 = r0.<android.media.MediaRoute2ProviderService: android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback>;

        interfaceinvoke $r8.<android.media.IMediaRoute2ProviderServiceCallback: void notifySessionCreated(long,android.media.RoutingSessionInfo)>(l0, r21);

     label08:
        goto label11;

     label09:
        $r20 := @caughtexception;

     label10:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "Failed to notify session created.");

     label11:
        exitmonitor r24;

     label12:
        return;

     label13:
        $r19 := @caughtexception;

     label14:
        exitmonitor r24;

     label15:
        throw $r19;

        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public final void notifySessionReleased(java.lang.String)
    {
        android.media.MediaRoute2ProviderService r0;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3, r14;
        android.media.IMediaRoute2ProviderServiceCallback $r4, $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9, r12;
        java.lang.Throwable $r10;
        android.os.RemoteException $r11;
        android.media.RoutingSessionInfo r15;

        r0 := @this: android.media.MediaRoute2ProviderService;

        r12 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 != 0 goto label17;

        $z1 = <android.media.MediaRoute2ProviderService: boolean DEBUG>;

        if $z1 == 0 goto label01;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySessionReleased: Releasing session id=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MR2ProviderService", $r9);

     label01:
        r14 = r0.<android.media.MediaRoute2ProviderService: java.lang.Object mSessionLock>;

        entermonitor r14;

     label02:
        $r2 = r0.<android.media.MediaRoute2ProviderService: android.util.ArrayMap mSessionInfo>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r12);

        r15 = (android.media.RoutingSessionInfo) $r3;

     label03:
        if r15 != null goto label06;

     label04:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "notifySessionReleased: Ignoring unknown session info.");

        exitmonitor r14;

     label05:
        return;

     label06:
        $r4 = r0.<android.media.MediaRoute2ProviderService: android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback>;

        if $r4 != null goto label08;

        exitmonitor r14;

     label07:
        return;

     label08:
        $r5 = r0.<android.media.MediaRoute2ProviderService: android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback>;

        interfaceinvoke $r5.<android.media.IMediaRoute2ProviderServiceCallback: void notifySessionReleased(android.media.RoutingSessionInfo)>(r15);

     label09:
        goto label12;

     label10:
        $r11 := @caughtexception;

     label11:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2ProviderService", "Failed to notify session released.", $r11);

     label12:
        exitmonitor r14;

     label13:
        return;

     label14:
        $r10 := @caughtexception;

     label15:
        exitmonitor r14;

     label16:
        throw $r10;

     label17:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sessionId must not be empty");

        throw $r1;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public final void notifySessionUpdated(android.media.RoutingSessionInfo)
    {
        android.media.MediaRoute2ProviderService r0;
        java.lang.String r1, $r11;
        boolean $z0, $z1;
        android.util.ArrayMap $r3, $r4;
        android.media.IMediaRoute2ProviderServiceCallback $r6, $r7;
        java.lang.StringBuilder $r8;
        android.os.RemoteException $r12;
        java.lang.Throwable $r13;
        android.media.RoutingSessionInfo r14;
        java.lang.Object r16;

        r0 := @this: android.media.MediaRoute2ProviderService;

        r14 := @parameter0: android.media.RoutingSessionInfo;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r14, "sessionInfo must not be null");

        $z0 = <android.media.MediaRoute2ProviderService: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySessionUpdated: Updating session id=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MR2ProviderService", $r11);

     label01:
        r1 = virtualinvoke r14.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        r16 = r0.<android.media.MediaRoute2ProviderService: java.lang.Object mSessionLock>;

        entermonitor r16;

     label02:
        $r3 = r0.<android.media.MediaRoute2ProviderService: android.util.ArrayMap mSessionInfo>;

        $z1 = virtualinvoke $r3.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label10;

        $r4 = r0.<android.media.MediaRoute2ProviderService: android.util.ArrayMap mSessionInfo>;

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r14);

        $r6 = r0.<android.media.MediaRoute2ProviderService: android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback>;

        if $r6 != null goto label04;

        exitmonitor r16;

     label03:
        return;

     label04:
        $r7 = r0.<android.media.MediaRoute2ProviderService: android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback>;

        interfaceinvoke $r7.<android.media.IMediaRoute2ProviderServiceCallback: void notifySessionUpdated(android.media.RoutingSessionInfo)>(r14);

     label05:
        goto label08;

     label06:
        $r12 := @caughtexception;

     label07:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "Failed to notify session info changed.");

     label08:
        exitmonitor r16;

     label09:
        return;

     label10:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "notifySessionUpdated: Ignoring unknown session info.");

        exitmonitor r16;

     label11:
        return;

     label12:
        $r13 := @caughtexception;

     label13:
        exitmonitor r16;

     label14:
        throw $r13;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.media.MediaRoute2ProviderService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.media.MediaRoute2ProviderService$MediaRoute2ProviderServiceStub $r4, $r5, $r6;

        r0 := @this: android.media.MediaRoute2ProviderService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "android.media.MediaRoute2ProviderService";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r0.<android.media.MediaRoute2ProviderService: android.media.MediaRoute2ProviderService$MediaRoute2ProviderServiceStub mStub>;

        if $r4 != null goto label1;

        $r6 = new android.media.MediaRoute2ProviderService$MediaRoute2ProviderServiceStub;

        specialinvoke $r6.<android.media.MediaRoute2ProviderService$MediaRoute2ProviderServiceStub: void <init>(android.media.MediaRoute2ProviderService)>(r0);

        r0.<android.media.MediaRoute2ProviderService: android.media.MediaRoute2ProviderService$MediaRoute2ProviderServiceStub mStub> = $r6;

     label1:
        $r5 = r0.<android.media.MediaRoute2ProviderService: android.media.MediaRoute2ProviderService$MediaRoute2ProviderServiceStub mStub>;

        return $r5;

     label2:
        return null;
    }

    public abstract void onCreateSession(long, java.lang.String, java.lang.String, android.os.Bundle);

    public abstract void onDeselectRoute(long, java.lang.String, java.lang.String);

    public void onDiscoveryPreferenceChanged(android.media.RouteDiscoveryPreference)
    {
        android.media.MediaRoute2ProviderService r0;
        android.media.RouteDiscoveryPreference r1;

        r0 := @this: android.media.MediaRoute2ProviderService;

        r1 := @parameter0: android.media.RouteDiscoveryPreference;

        return;
    }

    public abstract void onReleaseSession(long, java.lang.String);

    public abstract void onSelectRoute(long, java.lang.String, java.lang.String);

    public abstract void onSetRouteVolume(long, java.lang.String, int);

    public abstract void onSetSessionVolume(long, java.lang.String, int);

    public abstract void onTransferToRoute(long, java.lang.String, java.lang.String);

    void schedulePublishState()
    {
        android.media.MediaRoute2ProviderService r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;
        android.media._$$Lambda$MediaRoute2ProviderService$MC0o_sBd6s0cxW9vHmSYdgeA6FM $r2;
        android.os.Handler $r3;

        r0 := @this: android.media.MediaRoute2ProviderService;

        $r1 = r0.<android.media.MediaRoute2ProviderService: java.util.concurrent.atomic.AtomicBoolean mStatePublishScheduled>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        $r3 = r0.<android.media.MediaRoute2ProviderService: android.os.Handler mHandler>;

        $r2 = new android.media._$$Lambda$MediaRoute2ProviderService$MC0o_sBd6s0cxW9vHmSYdgeA6FM;

        specialinvoke $r2.<android.media._$$Lambda$MediaRoute2ProviderService$MC0o_sBd6s0cxW9vHmSYdgeA6FM: void <init>(android.media.MediaRoute2ProviderService)>(r0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    void setCallback(android.media.IMediaRoute2ProviderServiceCallback)
    {
        android.media.MediaRoute2ProviderService r0;
        android.media.IMediaRoute2ProviderServiceCallback r1;

        r0 := @this: android.media.MediaRoute2ProviderService;

        r1 := @parameter0: android.media.IMediaRoute2ProviderServiceCallback;

        r0.<android.media.MediaRoute2ProviderService: android.media.IMediaRoute2ProviderServiceCallback mRemoteCallback> = r1;

        virtualinvoke r0.<android.media.MediaRoute2ProviderService: void schedulePublishState()>();

        return;
    }
}
