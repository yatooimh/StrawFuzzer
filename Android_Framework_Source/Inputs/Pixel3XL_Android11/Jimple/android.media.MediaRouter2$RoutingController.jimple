public class android.media.MediaRouter2$RoutingController extends java.lang.Object
{
    private static final int CONTROLLER_STATE_ACTIVE;
    private static final int CONTROLLER_STATE_RELEASED;
    private static final int CONTROLLER_STATE_RELEASING;
    private static final int CONTROLLER_STATE_UNKNOWN;
    private final java.lang.Object mControllerLock;
    private android.media.RoutingSessionInfo mSessionInfo;
    private int mState;
    final android.media.MediaRouter2 this$0;

    void <init>(android.media.MediaRouter2, android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2$RoutingController r0;
        android.media.MediaRouter2 r1;
        android.media.RoutingSessionInfo r2;
        java.lang.Object $r3;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 := @parameter0: android.media.MediaRouter2;

        r2 := @parameter1: android.media.RoutingSessionInfo;

        r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock> = $r3;

        r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo> = r2;

        r0.<android.media.MediaRouter2$RoutingController: int mState> = 1;

        return;
    }

    private java.util.List getRoutesWithIds(java.util.List)
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1, $r10;
        java.util.stream.Stream r2, $r6, $r8;
        java.util.Map r3;
        android.media.MediaRouter2 $r4;
        android.media.'-$$Lambda$8fo3R-Przkq5mg2wxR3lAN3cgNY' $r7;
        java.util.stream.Collector $r9;
        java.lang.Throwable $r11;
        java.util.List r12, r14;
        android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA r16;
        java.util.function.Predicate r17;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r12 := @parameter0: java.util.List;

        r1 = staticinvoke <android.media.MediaRouter2: java.lang.Object access$000()>();

        entermonitor r1;

     label1:
        r2 = interfaceinvoke r12.<java.util.List: java.util.stream.Stream stream()>();

        $r4 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        r3 = $r4.<android.media.MediaRouter2: java.util.Map mRoutes>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        r16 = new android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA;

        specialinvoke r16.<android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA: void <init>(java.util.Map)>(r3);

        $r6 = interfaceinvoke r2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r16);

        $r7 = <android.media._$$Lambda$8fo3R_Przkq5mg2wxR3lAN3cgNY: android.media.'-$$Lambda$8fo3R-Przkq5mg2wxR3lAN3cgNY' INSTANCE>;

        r17 = (java.util.function.Predicate) $r7;

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r17);

        $r9 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r9);

        r14 = (java.util.List) $r10;

        exitmonitor r1;

     label2:
        return r14;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static void lambda$releaseInternal$0(java.lang.Object, android.media.MediaRouter2$RoutingController)
    {
        java.lang.Object r0;
        android.media.MediaRouter2$RoutingController r1;
        android.media.MediaRouter2 $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.media.MediaRouter2$RoutingController;

        $r2 = (android.media.MediaRouter2) r0;

        staticinvoke <android.media.MediaRouter2: void access$500(android.media.MediaRouter2,android.media.MediaRouter2$RoutingController)>($r2, r1);

        return;
    }

    public void deselectRoute(android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2$RoutingController r0;
        android.media.MediaRouter2$MediaRouter2Stub r1;
        boolean $z0, $z1, $z2;
        java.util.List $r3, $r5;
        java.lang.String $r4, $r6, $r10, $r14, $r18;
        android.media.MediaRouter2 $r7, $r8;
        android.media.IMediaRouterService $r9;
        java.lang.StringBuilder $r11, $r15;
        java.lang.Throwable $r19;
        android.os.RemoteException $r20;
        android.media.MediaRoute2Info r21;
        java.lang.Object r24;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r21 := @parameter0: android.media.MediaRoute2Info;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r21, "route must not be null");

        $z0 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: boolean isReleased()>();

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "deselectRoute: called on released controller. Ignoring.");

        return;

     label01:
        $r3 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.util.List getSelectedRoutes()>();

        $r4 = virtualinvoke r21.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = staticinvoke <android.media.MediaRouter2: boolean checkRouteListContainsRouteId(java.util.List,java.lang.String)>($r3, $r4);

        if $z1 != 0 goto label02;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring deselecting a route that is not selected. route=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", $r18);

        return;

     label02:
        $r5 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.util.List getDeselectableRoutes()>();

        $r6 = virtualinvoke r21.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z2 = staticinvoke <android.media.MediaRouter2: boolean checkRouteListContainsRouteId(java.util.List,java.lang.String)>($r5, $r6);

        if $z2 != 0 goto label03;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring deselecting a non-deselectable route=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", $r14);

        return;

     label03:
        r24 = staticinvoke <android.media.MediaRouter2: java.lang.Object access$000()>();

        entermonitor r24;

     label04:
        $r7 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        r1 = $r7.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        exitmonitor r24;

     label05:
        if r1 == null goto label09;

     label06:
        $r8 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r9 = staticinvoke <android.media.MediaRouter2: android.media.IMediaRouterService access$100(android.media.MediaRouter2)>($r8);

        $r10 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

        interfaceinvoke $r9.<android.media.IMediaRouterService: void deselectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>(r1, $r10, r21);

     label07:
        goto label09;

     label08:
        $r20 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "Unable to deselect route from session.", $r20);

     label09:
        return;

     label10:
        $r19 := @caughtexception;

     label11:
        exitmonitor r24;

     label12:
        throw $r19;

        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.os.Bundle getControlHints()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        android.media.RoutingSessionInfo $r2;
        java.lang.Throwable $r3;
        android.os.Bundle r4;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        r4 = virtualinvoke $r2.<android.media.RoutingSessionInfo: android.os.Bundle getControlHints()>();

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getDeselectableRoutes()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        android.media.RoutingSessionInfo $r2;
        java.util.List $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        r5 = virtualinvoke $r2.<android.media.RoutingSessionInfo: java.util.List getDeselectableRoutes()>();

        exitmonitor r1;

     label2:
        $r3 = specialinvoke r0.<android.media.MediaRouter2$RoutingController: java.util.List getRoutesWithIds(java.util.List)>(r5);

        return $r3;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getId()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        android.media.RoutingSessionInfo $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        r4 = virtualinvoke $r2.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getOriginalId()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        android.media.RoutingSessionInfo $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        r4 = virtualinvoke $r2.<android.media.RoutingSessionInfo: java.lang.String getOriginalId()>();

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.media.RoutingSessionInfo getRoutingSessionInfo()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.media.RoutingSessionInfo r3;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getSelectableRoutes()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        android.media.RoutingSessionInfo $r2;
        java.util.List $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        r5 = virtualinvoke $r2.<android.media.RoutingSessionInfo: java.util.List getSelectableRoutes()>();

        exitmonitor r1;

     label2:
        $r3 = specialinvoke r0.<android.media.MediaRouter2$RoutingController: java.util.List getRoutesWithIds(java.util.List)>(r5);

        return $r3;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getSelectedRoutes()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        android.media.RoutingSessionInfo $r2;
        java.util.List $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        r5 = virtualinvoke $r2.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

        exitmonitor r1;

     label2:
        $r3 = specialinvoke r0.<android.media.MediaRouter2$RoutingController: java.util.List getRoutesWithIds(java.util.List)>(r5);

        return $r3;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getVolume()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        int i0;
        android.media.RoutingSessionInfo $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        i0 = virtualinvoke $r3.<android.media.RoutingSessionInfo: int getVolume()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getVolumeHandling()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        int i0;
        android.media.RoutingSessionInfo $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        i0 = virtualinvoke $r3.<android.media.RoutingSessionInfo: int getVolumeHandling()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getVolumeMax()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        int i0;
        android.media.RoutingSessionInfo $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        i0 = virtualinvoke $r3.<android.media.RoutingSessionInfo: int getVolumeMax()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isReleased()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<android.media.MediaRouter2$RoutingController: int mState>;

        if $i0 != 3 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void release()
    {
        android.media.MediaRouter2$RoutingController r0;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        virtualinvoke r0.<android.media.MediaRouter2$RoutingController: void releaseInternal(boolean)>(1);

        return;
    }

    void releaseInternal(boolean)
    {
        android.media.MediaRouter2$RoutingController r0;
        boolean z0, $z2, $z3, $z5, z6;
        int i0, $i1;
        android.media.MediaRouter2 $r1, $r4, $r6, $r8, $r9, $r11, $r13, $r14, $r15, $r19, $r20, $r22;
        java.util.Map $r2, $r7;
        java.lang.String $r3, $r24;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        android.media.IMediaRouterService $r10, $r21;
        android.media.MediaRouter2$MediaRouter2Stub $r12, $r23, r31, r33;
        android.media.'-$$Lambda$MediaRouter2$RoutingController$mzVQ8I_o-lraqQmkSctESiC2aiI' $r16;
        android.os.Handler $r17;
        android.os.Message $r18;
        android.os.RemoteException $r25, $r28;
        java.lang.Throwable $r26, $r27;
        java.lang.Object r29, r30;
        java.util.function.BiConsumer r37;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        z0 := @parameter0: boolean;

        r29 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r29;

     label01:
        $i1 = r0.<android.media.MediaRouter2$RoutingController: int mState>;

        if $i1 != 3 goto label04;

        $z5 = staticinvoke <android.media.MediaRouter2: boolean access$300()>();

        if $z5 == 0 goto label02;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MR2", "releaseInternal: Called on released controller. Ignoring.");

     label02:
        exitmonitor r29;

     label03:
        return;

     label04:
        i0 = r0.<android.media.MediaRouter2$RoutingController: int mState>;

     label05:
        z6 = 1;

        if i0 != 1 goto label06;

        goto label07;

     label06:
        z6 = 0;

     label07:
        r0.<android.media.MediaRouter2$RoutingController: int mState> = 3;

        exitmonitor r29;

     label08:
        r30 = staticinvoke <android.media.MediaRouter2: java.lang.Object access$000()>();

        entermonitor r30;

     label09:
        $r1 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r2 = staticinvoke <android.media.MediaRouter2: java.util.Map access$200(android.media.MediaRouter2)>($r1);

        $r3 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

        interfaceinvoke $r2.<java.util.Map: boolean remove(java.lang.Object,java.lang.Object)>($r3, r0);

     label10:
        if z0 == 0 goto label17;

     label11:
        $r19 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        r31 = $r19.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

     label12:
        if r31 == null goto label17;

     label13:
        $r20 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r21 = staticinvoke <android.media.MediaRouter2: android.media.IMediaRouterService access$100(android.media.MediaRouter2)>($r20);

        $r22 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r23 = $r22.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        $r24 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

        interfaceinvoke $r21.<android.media.IMediaRouterService: void releaseSessionWithRouter2(android.media.IMediaRouter2,java.lang.String)>($r23, $r24);

     label14:
        goto label17;

     label15:
        $r25 := @caughtexception;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "Unable to release session", $r25);

     label17:
        if z6 == 0 goto label19;

     label18:
        $r14 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r17 = $r14.<android.media.MediaRouter2: android.os.Handler mHandler>;

        $r16 = <android.media._$$Lambda$MediaRouter2$RoutingController$mzVQ8I_o_lraqQmkSctESiC2aiI: android.media.'-$$Lambda$MediaRouter2$RoutingController$mzVQ8I_o-lraqQmkSctESiC2aiI' INSTANCE>;

        $r15 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        r37 = (java.util.function.BiConsumer) $r16;

        $r18 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r37, $r15, r0);

        virtualinvoke $r17.<android.os.Handler: boolean sendMessage(android.os.Message)>($r18);

     label19:
        $r4 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r5 = staticinvoke <android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList access$400(android.media.MediaRouter2)>($r4);

        $z2 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label26;

        $r6 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r7 = staticinvoke <android.media.MediaRouter2: java.util.Map access$200(android.media.MediaRouter2)>($r6);

        $z3 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>();

        if $z3 == 0 goto label26;

        $r8 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        r33 = $r8.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

     label20:
        if r33 == null goto label26;

     label21:
        $r9 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r10 = staticinvoke <android.media.MediaRouter2: android.media.IMediaRouterService access$100(android.media.MediaRouter2)>($r9);

        $r11 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r12 = $r11.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        interfaceinvoke $r10.<android.media.IMediaRouterService: void unregisterRouter2(android.media.IMediaRouter2)>($r12);

     label22:
        goto label25;

     label23:
        $r28 := @caughtexception;

     label24:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "releaseInternal: Unable to unregister media router.", $r28);

     label25:
        $r13 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r13.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub> = null;

     label26:
        exitmonitor r30;

     label27:
        return;

     label28:
        $r26 := @caughtexception;

     label29:
        exitmonitor r30;

     label30:
        throw $r26;

     label31:
        $r27 := @caughtexception;

     label32:
        exitmonitor r29;

     label33:
        throw $r27;

        catch java.lang.Throwable from label01 to label02 with label31;
        catch java.lang.Throwable from label02 to label03 with label31;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label07 to label08 with label31;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch android.os.RemoteException from label21 to label22 with label23;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    boolean scheduleRelease()
    {
        android.media.MediaRouter2$RoutingController r0;
        int $i0;
        android.media.MediaRouter2 $r1, $r4;
        java.util.Map $r2;
        java.lang.String $r3;
        boolean $z0;
        android.media._$$Lambda$zC5PIaJz8xUU_soxzzOU1rDcAD0 $r5;
        android.os.Handler $r6;
        java.lang.Throwable $r7, $r8;
        java.lang.Object r9, r10;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r9 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r9;

     label01:
        $i0 = r0.<android.media.MediaRouter2$RoutingController: int mState>;

        if $i0 == 1 goto label03;

        exitmonitor r9;

     label02:
        return 0;

     label03:
        r0.<android.media.MediaRouter2$RoutingController: int mState> = 2;

        exitmonitor r9;

     label04:
        r10 = staticinvoke <android.media.MediaRouter2: java.lang.Object access$000()>();

        entermonitor r10;

     label05:
        $r1 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r2 = staticinvoke <android.media.MediaRouter2: java.util.Map access$200(android.media.MediaRouter2)>($r1);

        $r3 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean remove(java.lang.Object,java.lang.Object)>($r3, r0);

        if $z0 != 0 goto label07;

        exitmonitor r10;

     label06:
        return 1;

     label07:
        exitmonitor r10;

     label08:
        $r4 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r6 = $r4.<android.media.MediaRouter2: android.os.Handler mHandler>;

        $r5 = new android.media._$$Lambda$zC5PIaJz8xUU_soxzzOU1rDcAD0;

        specialinvoke $r5.<android.media._$$Lambda$zC5PIaJz8xUU_soxzzOU1rDcAD0: void <init>(android.media.MediaRouter2$RoutingController)>(r0);

        virtualinvoke $r6.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r5, 30000L);

        return 1;

     label09:
        $r8 := @caughtexception;

     label10:
        exitmonitor r10;

     label11:
        throw $r8;

     label12:
        $r7 := @caughtexception;

     label13:
        exitmonitor r9;

     label14:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void selectRoute(android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2$RoutingController r0;
        android.media.MediaRouter2$MediaRouter2Stub r1;
        boolean $z0, $z1, $z2;
        java.util.List $r3, $r5;
        java.lang.String $r4, $r6, $r10, $r14, $r18;
        android.media.MediaRouter2 $r7, $r8;
        android.media.IMediaRouterService $r9;
        java.lang.StringBuilder $r11, $r15;
        android.os.RemoteException $r19;
        java.lang.Throwable $r20;
        android.media.MediaRoute2Info r21;
        java.lang.Object r24;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r21 := @parameter0: android.media.MediaRoute2Info;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r21, "route must not be null");

        $z0 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: boolean isReleased()>();

        if $z0 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "selectRoute: Called on released controller. Ignoring.");

        return;

     label01:
        $r3 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.util.List getSelectedRoutes()>();

        $r4 = virtualinvoke r21.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = staticinvoke <android.media.MediaRouter2: boolean checkRouteListContainsRouteId(java.util.List,java.lang.String)>($r3, $r4);

        if $z1 == 0 goto label02;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring selecting a route that is already selected. route=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", $r18);

        return;

     label02:
        $r5 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.util.List getSelectableRoutes()>();

        $r6 = virtualinvoke r21.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z2 = staticinvoke <android.media.MediaRouter2: boolean checkRouteListContainsRouteId(java.util.List,java.lang.String)>($r5, $r6);

        if $z2 != 0 goto label03;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring selecting a non-selectable route=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", $r14);

        return;

     label03:
        r24 = staticinvoke <android.media.MediaRouter2: java.lang.Object access$000()>();

        entermonitor r24;

     label04:
        $r7 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        r1 = $r7.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        exitmonitor r24;

     label05:
        if r1 == null goto label09;

     label06:
        $r8 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r9 = staticinvoke <android.media.MediaRouter2: android.media.IMediaRouterService access$100(android.media.MediaRouter2)>($r8);

        $r10 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

        interfaceinvoke $r9.<android.media.IMediaRouterService: void selectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>(r1, $r10, r21);

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "Unable to select route for session.", $r19);

     label09:
        return;

     label10:
        $r20 := @caughtexception;

     label11:
        exitmonitor r24;

     label12:
        throw $r20;

        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void setRoutingSessionInfo(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2$RoutingController r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.media.RoutingSessionInfo r3;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r3 := @parameter0: android.media.RoutingSessionInfo;

        r1 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r1;

     label1:
        r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setVolume(int)
    {
        android.media.MediaRouter2$RoutingController r0;
        int i0, $i1, $i3;
        boolean $z0;
        android.media.MediaRouter2 $r1, $r2;
        android.media.IMediaRouterService $r3;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        android.os.RemoteException $r6;
        java.lang.Object r7;
        android.media.MediaRouter2$MediaRouter2Stub r8;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: int getVolumeHandling()>();

        if $i1 != 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "setVolume: The routing session has fixed volume. Ignoring.");

        return;

     label01:
        if i0 < 0 goto label13;

        $i3 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: int getVolumeMax()>();

        if i0 <= $i3 goto label02;

        goto label13;

     label02:
        $z0 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: boolean isReleased()>();

        if $z0 == 0 goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "setVolume: Called on released controller. Ignoring.");

        return;

     label03:
        r7 = staticinvoke <android.media.MediaRouter2: java.lang.Object access$000()>();

        entermonitor r7;

     label04:
        $r1 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        r8 = $r1.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        exitmonitor r7;

     label05:
        if r8 == null goto label09;

     label06:
        $r2 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r3 = staticinvoke <android.media.MediaRouter2: android.media.IMediaRouterService access$100(android.media.MediaRouter2)>($r2);

        $r4 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

        interfaceinvoke $r3.<android.media.IMediaRouterService: void setSessionVolumeWithRouter2(android.media.IMediaRouter2,java.lang.String,int)>(r8, $r4, i0);

     label07:
        goto label09;

     label08:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "setVolume: Failed to deliver request.", $r6);

     label09:
        return;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r7;

     label12:
        throw $r5;

     label13:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "setVolume: The target volume is out of range. Ignoring");

        return;

        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public java.lang.String toString()
    {
        android.media.MediaRouter2$RoutingController r0;
        java.util.List r1, r2, r3, $r5, $r11, $r17;
        java.util.stream.Stream $r6, $r8, $r12, $r14, $r18, $r20;
        android.media.'-$$Lambda$Jl1VWT2dPpodkj8vkFOye7iVD0Y' $r7, $r13, $r19;
        java.util.stream.Collector $r9, $r15, $r21;
        java.lang.Object $r10, $r16, $r22;
        java.lang.String $r26, $r38;
        java.lang.StringBuilder $r37, r39;
        java.util.function.Function r40, r41, r42;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        $r5 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.util.List getSelectedRoutes()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.stream.Stream stream()>();

        $r7 = <android.media._$$Lambda$Jl1VWT2dPpodkj8vkFOye7iVD0Y: android.media.'-$$Lambda$Jl1VWT2dPpodkj8vkFOye7iVD0Y' INSTANCE>;

        r40 = (java.util.function.Function) $r7;

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r40);

        $r9 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r9);

        r1 = (java.util.List) $r10;

        $r11 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.util.List getSelectableRoutes()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.stream.Stream stream()>();

        $r13 = <android.media._$$Lambda$Jl1VWT2dPpodkj8vkFOye7iVD0Y: android.media.'-$$Lambda$Jl1VWT2dPpodkj8vkFOye7iVD0Y' INSTANCE>;

        r41 = (java.util.function.Function) $r13;

        $r14 = interfaceinvoke $r12.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r41);

        $r15 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r16 = interfaceinvoke $r14.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r15);

        r2 = (java.util.List) $r16;

        $r17 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.util.List getDeselectableRoutes()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.stream.Stream stream()>();

        $r19 = <android.media._$$Lambda$Jl1VWT2dPpodkj8vkFOye7iVD0Y: android.media.'-$$Lambda$Jl1VWT2dPpodkj8vkFOye7iVD0Y' INSTANCE>;

        r42 = (java.util.function.Function) $r19;

        $r20 = interfaceinvoke $r18.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r42);

        $r21 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r22 = interfaceinvoke $r20.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r21);

        r3 = (java.util.List) $r22;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RoutingController{ ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id=");

        $r26 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", selectedRoutes={");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", selectableRoutes={");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deselectableRoutes={");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r37 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r38;
    }

    void transferToRoute(android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2$RoutingController r0;
        boolean $z0, $z1;
        android.media.RoutingSessionInfo $r2;
        java.util.List $r3;
        java.lang.String $r4, $r8, $r11;
        android.media.MediaRouter2 $r5, $r6;
        android.media.IMediaRouterService $r7;
        java.lang.Throwable $r12, $r14;
        android.os.RemoteException $r13;
        android.media.MediaRoute2Info r15;
        java.lang.Object r16, r18;
        java.lang.StringBuilder r17;
        android.media.MediaRouter2$MediaRouter2Stub r19;

        r0 := @this: android.media.MediaRouter2$RoutingController;

        r15 := @parameter0: android.media.MediaRoute2Info;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r15, "route must not be null");

        r16 = r0.<android.media.MediaRouter2$RoutingController: java.lang.Object mControllerLock>;

        entermonitor r16;

     label01:
        $z0 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: boolean isReleased()>();

        if $z0 == 0 goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "transferToRoute: Called on released controller. Ignoring.");

        exitmonitor r16;

     label02:
        return;

     label03:
        $r2 = r0.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo mSessionInfo>;

        $r3 = virtualinvoke $r2.<android.media.RoutingSessionInfo: java.util.List getTransferableRoutes()>();

        $r4 = virtualinvoke r15.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r4);

        if $z1 != 0 goto label05;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring transferring to a non-transferable route=");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r11 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", $r11);

        exitmonitor r16;

     label04:
        return;

     label05:
        exitmonitor r16;

     label06:
        r18 = staticinvoke <android.media.MediaRouter2: java.lang.Object access$000()>();

        entermonitor r18;

     label07:
        $r5 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        r19 = $r5.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        exitmonitor r18;

     label08:
        if r19 == null goto label12;

     label09:
        $r6 = r0.<android.media.MediaRouter2$RoutingController: android.media.MediaRouter2 this$0>;

        $r7 = staticinvoke <android.media.MediaRouter2: android.media.IMediaRouterService access$100(android.media.MediaRouter2)>($r6);

        $r8 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

        interfaceinvoke $r7.<android.media.IMediaRouterService: void transferToRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>(r19, $r8, r15);

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "Unable to transfer to route for session.", $r13);

     label12:
        return;

     label13:
        $r12 := @caughtexception;

     label14:
        exitmonitor r18;

     label15:
        throw $r12;

     label16:
        $r14 := @caughtexception;

     label17:
        exitmonitor r16;

     label18:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public static void <clinit>()
    {
        <android.media.MediaRouter2$RoutingController: int CONTROLLER_STATE_UNKNOWN> = 0;

        <android.media.MediaRouter2$RoutingController: int CONTROLLER_STATE_RELEASING> = 2;

        <android.media.MediaRouter2$RoutingController: int CONTROLLER_STATE_RELEASED> = 3;

        <android.media.MediaRouter2$RoutingController: int CONTROLLER_STATE_ACTIVE> = 1;

        return;
    }
}
