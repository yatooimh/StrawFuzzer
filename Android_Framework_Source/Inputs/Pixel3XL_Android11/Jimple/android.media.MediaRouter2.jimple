public final class android.media.MediaRouter2 extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final long MANAGER_REQUEST_ID_NONE;
    private static final java.lang.String TAG;
    private static final int TRANSFER_TIMEOUT_MS;
    private static android.media.MediaRouter2 sInstance;
    private static final java.lang.Object sRouterLock;
    private final android.content.Context mContext;
    private final java.util.concurrent.CopyOnWriteArrayList mControllerCallbackRecords;
    private final java.util.concurrent.CopyOnWriteArrayList mControllerCreationRequests;
    private android.media.RouteDiscoveryPreference mDiscoveryPreference;
    private volatile java.util.List mFilteredRoutes;
    final android.os.Handler mHandler;
    private final android.media.IMediaRouterService mMediaRouterService;
    private final java.util.concurrent.atomic.AtomicInteger mNextRequestId;
    private final java.util.Map mNonSystemRoutingControllers;
    private volatile android.media.MediaRouter2$OnGetControllerHintsListener mOnGetControllerHintsListener;
    private final java.lang.String mPackageName;
    private final java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords;
    final java.util.Map mRoutes;
    private boolean mShouldUpdateRoutes;
    android.media.MediaRouter2$MediaRouter2Stub mStub;
    final android.media.MediaRouter2$RoutingController mSystemController;
    private final java.util.concurrent.CopyOnWriteArrayList mTransferCallbackRecords;

    static void <clinit>()
    {
        boolean $z0;
        java.lang.Object $r0;

        <android.media.MediaRouter2: int TRANSFER_TIMEOUT_MS> = 30000;

        <android.media.MediaRouter2: java.lang.String TAG> = "MR2";

        <android.media.MediaRouter2: long MANAGER_REQUEST_ID_NONE> = 0L;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MR2", 3);

        <android.media.MediaRouter2: boolean DEBUG> = $z0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.media.MediaRouter2: java.lang.Object sRouterLock> = $r0;

        return;
    }

    private void <init>(android.content.Context)
    {
        android.media.MediaRouter2 r0;
        android.media.RoutingSessionInfo r1, r31;
        java.util.concurrent.CopyOnWriteArrayList $r2, $r3, $r4, $r5;
        android.util.ArrayMap $r6, $r8;
        android.media.RouteDiscoveryPreference $r7;
        java.util.concurrent.atomic.AtomicInteger $r9;
        java.util.List $r10, r27, r28, r30;
        android.os.IBinder $r11;
        android.media.IMediaRouterService $r12, $r17, $r18;
        android.content.Context $r13, r26;
        java.lang.String $r14, $r24;
        android.os.Handler $r15;
        android.os.Looper $r16;
        java.lang.RuntimeException $r19, $r20;
        boolean $z0, $z1;
        android.media.MediaRouter2$SystemRoutingController $r21;
        java.lang.Object $r22;
        java.util.Map $r23;
        android.os.RemoteException $r25;
        java.util.Iterator r33;
        android.media.MediaRoute2Info r34;

        r0 := @this: android.media.MediaRouter2;

        r26 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords> = $r2;

        $r3 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mTransferCallbackRecords> = $r3;

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mControllerCallbackRecords> = $r4;

        $r5 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mControllerCreationRequests> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<android.media.MediaRouter2: java.util.Map mRoutes> = $r6;

        $r7 = <android.media.RouteDiscoveryPreference: android.media.RouteDiscoveryPreference EMPTY>;

        r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<android.media.MediaRouter2: java.util.Map mNonSystemRoutingControllers> = $r8;

        $r9 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r9.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<android.media.MediaRouter2: java.util.concurrent.atomic.AtomicInteger mNextRequestId> = $r9;

        r0.<android.media.MediaRouter2: boolean mShouldUpdateRoutes> = 1;

        $r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.media.MediaRouter2: java.util.List mFilteredRoutes> = $r10;

        r0.<android.media.MediaRouter2: android.content.Context mContext> = r26;

        $r11 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("media_router");

        $r12 = staticinvoke <android.media.IMediaRouterService$Stub: android.media.IMediaRouterService asInterface(android.os.IBinder)>($r11);

        r0.<android.media.MediaRouter2: android.media.IMediaRouterService mMediaRouterService> = $r12;

        $r13 = r0.<android.media.MediaRouter2: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.media.MediaRouter2: java.lang.String mPackageName> = $r14;

        $r15 = new android.os.Handler;

        $r16 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r15.<android.os.Handler: void <init>(android.os.Looper)>($r16);

        r0.<android.media.MediaRouter2: android.os.Handler mHandler> = $r15;

        r27 = null;

     label01:
        $r17 = r0.<android.media.MediaRouter2: android.media.IMediaRouterService mMediaRouterService>;

        r28 = interfaceinvoke $r17.<android.media.IMediaRouterService: java.util.List getSystemRoutes()>();

     label02:
        r27 = r28;

     label03:
        $r18 = r0.<android.media.MediaRouter2: android.media.IMediaRouterService mMediaRouterService>;

        r1 = interfaceinvoke $r18.<android.media.IMediaRouterService: android.media.RoutingSessionInfo getSystemSessionInfo()>();

     label04:
        r30 = r28;

        r31 = r1;

        goto label06;

     label05:
        $r25 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "Unable to get current system\'s routes / session info", $r25);

        r31 = null;

        r30 = r27;

     label06:
        if r30 == null goto label10;

        $z0 = interfaceinvoke r30.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        if r31 == null goto label09;

        r33 = interfaceinvoke r30.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r22 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r34 = (android.media.MediaRoute2Info) $r22;

        $r23 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r24 = virtualinvoke r34.<android.media.MediaRoute2Info: java.lang.String getId()>();

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, r34);

        goto label07;

     label08:
        $r21 = new android.media.MediaRouter2$SystemRoutingController;

        specialinvoke $r21.<android.media.MediaRouter2$SystemRoutingController: void <init>(android.media.MediaRouter2,android.media.RoutingSessionInfo)>(r0, r31);

        r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController mSystemController> = $r21;

        return;

     label09:
        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>("Null currentSystemSessionInfo. Something is wrong.");

        throw $r20;

     label10:
        $r19 = new java.lang.RuntimeException;

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>("Null or empty currentSystemRoutes. Something is wrong.");

        throw $r19;

        catch android.os.RemoteException from label01 to label02 with label05;
        catch android.os.RemoteException from label03 to label04 with label05;
    }

    static java.lang.Object access$000()
    {
        java.lang.Object $r0;

        $r0 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        return $r0;
    }

    static android.media.IMediaRouterService access$100(android.media.MediaRouter2)
    {
        android.media.MediaRouter2 r0;
        android.media.IMediaRouterService $r1;

        r0 := @parameter0: android.media.MediaRouter2;

        $r1 = r0.<android.media.MediaRouter2: android.media.IMediaRouterService mMediaRouterService>;

        return $r1;
    }

    static java.util.Map access$200(android.media.MediaRouter2)
    {
        android.media.MediaRouter2 r0;
        java.util.Map $r1;

        r0 := @parameter0: android.media.MediaRouter2;

        $r1 = r0.<android.media.MediaRouter2: java.util.Map mNonSystemRoutingControllers>;

        return $r1;
    }

    static boolean access$300()
    {
        boolean $z0;

        $z0 = <android.media.MediaRouter2: boolean DEBUG>;

        return $z0;
    }

    static java.util.concurrent.CopyOnWriteArrayList access$400(android.media.MediaRouter2)
    {
        android.media.MediaRouter2 r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @parameter0: android.media.MediaRouter2;

        $r1 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords>;

        return $r1;
    }

    static void access$500(android.media.MediaRouter2, android.media.MediaRouter2$RoutingController)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$RoutingController r1;

        r0 := @parameter0: android.media.MediaRouter2;

        r1 := @parameter1: android.media.MediaRouter2$RoutingController;

        specialinvoke r0.<android.media.MediaRouter2: void notifyStop(android.media.MediaRouter2$RoutingController)>(r1);

        return;
    }

    static boolean checkRouteListContainsRouteId(java.util.List, java.lang.String)
    {
        java.lang.String r0, $r3;
        boolean $z0, $z1;
        java.lang.Object $r1;
        android.media.MediaRoute2Info $r2;
        java.util.List r4;
        java.util.Iterator r5;

        r4 := @parameter0: java.util.List;

        r0 := @parameter1: java.lang.String;

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (android.media.MediaRoute2Info) $r1;

        $r3 = virtualinvoke $r2.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r0, $r3);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private java.util.List filterRoutes(java.util.List, android.media.RouteDiscoveryPreference)
    {
        android.media.MediaRouter2 r0;
        java.util.List r1, $r8;
        android.media.RouteDiscoveryPreference r2;
        java.util.stream.Stream $r3, $r5;
        android.media._$$Lambda$MediaRouter2$y_xhYB6qpwaV9__Rsqi3qIBxRfE $r4;
        java.util.stream.Collector $r6;
        java.lang.Object $r7;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.media.RouteDiscoveryPreference;

        $r3 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();

        $r4 = new android.media._$$Lambda$MediaRouter2$y_xhYB6qpwaV9__Rsqi3qIBxRfE;

        specialinvoke $r4.<android.media._$$Lambda$MediaRouter2$y_xhYB6qpwaV9__Rsqi3qIBxRfE: void <init>(android.media.RouteDiscoveryPreference)>(r2);

        $r5 = interfaceinvoke $r3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r4);

        $r6 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r7 = interfaceinvoke $r5.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r6);

        $r8 = (java.util.List) $r7;

        return $r8;
    }

    private android.media.MediaRouter2$RoutingController getCurrentController()
    {
        android.media.MediaRouter2 r0;
        java.util.List r1;
        int $i0, $i1;
        java.lang.Object $r2;
        android.media.MediaRouter2$RoutingController $r3;

        r0 := @this: android.media.MediaRouter2;

        r1 = virtualinvoke r0.<android.media.MediaRouter2: java.util.List getControllers()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (android.media.MediaRouter2$RoutingController) $r2;

        return $r3;
    }

    public static android.media.MediaRouter2 getInstance(android.content.Context)
    {
        java.lang.Object r0;
        android.media.MediaRouter2 r1, $r3, r7;
        android.content.Context $r4, r6;
        java.lang.Throwable $r5;

        r6 := @parameter0: android.content.Context;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r6, "context must not be null");

        r0 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r0;

     label1:
        $r3 = <android.media.MediaRouter2: android.media.MediaRouter2 sInstance>;

        if $r3 != null goto label2;

        r1 = new android.media.MediaRouter2;

        $r4 = virtualinvoke r6.<android.content.Context: android.content.Context getApplicationContext()>();

        specialinvoke r1.<android.media.MediaRouter2: void <init>(android.content.Context)>($r4);

        <android.media.MediaRouter2: android.media.MediaRouter2 sInstance> = r1;

     label2:
        r7 = <android.media.MediaRouter2: android.media.MediaRouter2 sInstance>;

        exitmonitor r0;

     label3:
        return r7;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    static boolean lambda$filterRoutes$1(android.media.RouteDiscoveryPreference, android.media.MediaRoute2Info)
    {
        android.media.RouteDiscoveryPreference r0;
        android.media.MediaRoute2Info r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @parameter0: android.media.RouteDiscoveryPreference;

        r1 := @parameter1: android.media.MediaRoute2Info;

        $r2 = virtualinvoke r0.<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()>();

        $z0 = virtualinvoke r1.<android.media.MediaRoute2Info: boolean hasAnyFeatures(java.util.Collection)>($r2);

        return $z0;
    }

    static void lambda$notifyControllerUpdated$8(android.media.MediaRouter2$ControllerCallbackRecord, android.media.MediaRouter2$RoutingController)
    {
        android.media.MediaRouter2$ControllerCallbackRecord r0;
        android.media.MediaRouter2$RoutingController r1;
        android.media.MediaRouter2$ControllerCallback $r2;

        r0 := @parameter0: android.media.MediaRouter2$ControllerCallbackRecord;

        r1 := @parameter1: android.media.MediaRouter2$RoutingController;

        $r2 = r0.<android.media.MediaRouter2$ControllerCallbackRecord: android.media.MediaRouter2$ControllerCallback mCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2$ControllerCallback: void onControllerUpdated(android.media.MediaRouter2$RoutingController)>(r1);

        return;
    }

    static void lambda$notifyRoutesAdded$2(android.media.MediaRouter2$RouteCallbackRecord, java.util.List)
    {
        android.media.MediaRouter2$RouteCallbackRecord r0;
        java.util.List r1;
        android.media.MediaRouter2$RouteCallback $r2;

        r0 := @parameter0: android.media.MediaRouter2$RouteCallbackRecord;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<android.media.MediaRouter2$RouteCallbackRecord: android.media.MediaRouter2$RouteCallback mRouteCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2$RouteCallback: void onRoutesAdded(java.util.List)>(r1);

        return;
    }

    static void lambda$notifyRoutesChanged$4(android.media.MediaRouter2$RouteCallbackRecord, java.util.List)
    {
        android.media.MediaRouter2$RouteCallbackRecord r0;
        java.util.List r1;
        android.media.MediaRouter2$RouteCallback $r2;

        r0 := @parameter0: android.media.MediaRouter2$RouteCallbackRecord;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<android.media.MediaRouter2$RouteCallbackRecord: android.media.MediaRouter2$RouteCallback mRouteCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2$RouteCallback: void onRoutesChanged(java.util.List)>(r1);

        return;
    }

    static void lambda$notifyRoutesRemoved$3(android.media.MediaRouter2$RouteCallbackRecord, java.util.List)
    {
        android.media.MediaRouter2$RouteCallbackRecord r0;
        java.util.List r1;
        android.media.MediaRouter2$RouteCallback $r2;

        r0 := @parameter0: android.media.MediaRouter2$RouteCallbackRecord;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<android.media.MediaRouter2$RouteCallbackRecord: android.media.MediaRouter2$RouteCallback mRouteCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2$RouteCallback: void onRoutesRemoved(java.util.List)>(r1);

        return;
    }

    static void lambda$notifyStop$7(android.media.MediaRouter2$TransferCallbackRecord, android.media.MediaRouter2$RoutingController)
    {
        android.media.MediaRouter2$TransferCallbackRecord r0;
        android.media.MediaRouter2$RoutingController r1;
        android.media.MediaRouter2$TransferCallback $r2;

        r0 := @parameter0: android.media.MediaRouter2$TransferCallbackRecord;

        r1 := @parameter1: android.media.MediaRouter2$RoutingController;

        $r2 = r0.<android.media.MediaRouter2$TransferCallbackRecord: android.media.MediaRouter2$TransferCallback mTransferCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2$TransferCallback: void onStop(android.media.MediaRouter2$RoutingController)>(r1);

        return;
    }

    static void lambda$notifyTransfer$5(android.media.MediaRouter2$TransferCallbackRecord, android.media.MediaRouter2$RoutingController, android.media.MediaRouter2$RoutingController)
    {
        android.media.MediaRouter2$TransferCallbackRecord r0;
        android.media.MediaRouter2$RoutingController r1, r2;
        android.media.MediaRouter2$TransferCallback $r3;

        r0 := @parameter0: android.media.MediaRouter2$TransferCallbackRecord;

        r1 := @parameter1: android.media.MediaRouter2$RoutingController;

        r2 := @parameter2: android.media.MediaRouter2$RoutingController;

        $r3 = r0.<android.media.MediaRouter2$TransferCallbackRecord: android.media.MediaRouter2$TransferCallback mTransferCallback>;

        virtualinvoke $r3.<android.media.MediaRouter2$TransferCallback: void onTransfer(android.media.MediaRouter2$RoutingController,android.media.MediaRouter2$RoutingController)>(r1, r2);

        return;
    }

    static void lambda$notifyTransferFailure$6(android.media.MediaRouter2$TransferCallbackRecord, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2$TransferCallbackRecord r0;
        android.media.MediaRoute2Info r1;
        android.media.MediaRouter2$TransferCallback $r2;

        r0 := @parameter0: android.media.MediaRouter2$TransferCallbackRecord;

        r1 := @parameter1: android.media.MediaRoute2Info;

        $r2 = r0.<android.media.MediaRouter2$TransferCallbackRecord: android.media.MediaRouter2$TransferCallback mTransferCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2$TransferCallback: void onTransferFailure(android.media.MediaRoute2Info)>(r1);

        return;
    }

    static android.media.RouteDiscoveryPreference lambda$updateDiscoveryPreferenceIfNeededLocked$0(android.media.MediaRouter2$RouteCallbackRecord)
    {
        android.media.MediaRouter2$RouteCallbackRecord r0;
        android.media.RouteDiscoveryPreference $r1;

        r0 := @parameter0: android.media.MediaRouter2$RouteCallbackRecord;

        $r1 = r0.<android.media.MediaRouter2$RouteCallbackRecord: android.media.RouteDiscoveryPreference mPreference>;

        return $r1;
    }

    private void notifyControllerUpdated(android.media.MediaRouter2$RoutingController)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$RoutingController r1;
        java.util.Iterator r2;
        android.media.MediaRouter2$ControllerCallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.media._$$Lambda$MediaRouter2$lHWSTgRtklDut3GYEB4IKwyIFeY $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: android.media.MediaRouter2$RoutingController;

        $r4 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mControllerCallbackRecords>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2$ControllerCallbackRecord) $r5;

        $r7 = r3.<android.media.MediaRouter2$ControllerCallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r6 = new android.media._$$Lambda$MediaRouter2$lHWSTgRtklDut3GYEB4IKwyIFeY;

        specialinvoke $r6.<android.media._$$Lambda$MediaRouter2$lHWSTgRtklDut3GYEB4IKwyIFeY: void <init>(android.media.MediaRouter2$ControllerCallbackRecord,android.media.MediaRouter2$RoutingController)>(r3, r1);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        goto label1;

     label2:
        return;
    }

    private void notifyRoutesAdded(java.util.List)
    {
        android.media.MediaRouter2 r0;
        java.util.List r1, r4;
        java.util.Iterator r2;
        android.media.MediaRouter2$RouteCallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        android.media.RouteDiscoveryPreference $r7;
        android.media._$$Lambda$MediaRouter2$n9IPRYiEy7tiocaw8mnctKBTnhw $r8;
        java.util.concurrent.Executor $r9;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: java.util.List;

        $r5 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords>;

        r2 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2$RouteCallbackRecord) $r6;

        $r7 = r3.<android.media.MediaRouter2$RouteCallbackRecord: android.media.RouteDiscoveryPreference mPreference>;

        r4 = specialinvoke r0.<android.media.MediaRouter2: java.util.List filterRoutes(java.util.List,android.media.RouteDiscoveryPreference)>(r1, $r7);

        $z1 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r9 = r3.<android.media.MediaRouter2$RouteCallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r8 = new android.media._$$Lambda$MediaRouter2$n9IPRYiEy7tiocaw8mnctKBTnhw;

        specialinvoke $r8.<android.media._$$Lambda$MediaRouter2$n9IPRYiEy7tiocaw8mnctKBTnhw: void <init>(android.media.MediaRouter2$RouteCallbackRecord,java.util.List)>(r3, r4);

        interfaceinvoke $r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r8);

     label2:
        goto label1;

     label3:
        return;
    }

    private void notifyRoutesChanged(java.util.List)
    {
        android.media.MediaRouter2 r0;
        java.util.List r1, r4;
        java.util.Iterator r2;
        android.media.MediaRouter2$RouteCallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        android.media.RouteDiscoveryPreference $r7;
        android.media._$$Lambda$MediaRouter2$VQ_2MhZu1QeTu4Kecl12ipaxmO0 $r8;
        java.util.concurrent.Executor $r9;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: java.util.List;

        $r5 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords>;

        r2 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2$RouteCallbackRecord) $r6;

        $r7 = r3.<android.media.MediaRouter2$RouteCallbackRecord: android.media.RouteDiscoveryPreference mPreference>;

        r4 = specialinvoke r0.<android.media.MediaRouter2: java.util.List filterRoutes(java.util.List,android.media.RouteDiscoveryPreference)>(r1, $r7);

        $z1 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r9 = r3.<android.media.MediaRouter2$RouteCallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r8 = new android.media._$$Lambda$MediaRouter2$VQ_2MhZu1QeTu4Kecl12ipaxmO0;

        specialinvoke $r8.<android.media._$$Lambda$MediaRouter2$VQ_2MhZu1QeTu4Kecl12ipaxmO0: void <init>(android.media.MediaRouter2$RouteCallbackRecord,java.util.List)>(r3, r4);

        interfaceinvoke $r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r8);

     label2:
        goto label1;

     label3:
        return;
    }

    private void notifyRoutesRemoved(java.util.List)
    {
        android.media.MediaRouter2 r0;
        java.util.List r1, r4;
        java.util.Iterator r2;
        android.media.MediaRouter2$RouteCallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        android.media.RouteDiscoveryPreference $r7;
        android.media._$$Lambda$MediaRouter2$_IpRbaHzBEh1I7uHKDK98aRUJUU $r8;
        java.util.concurrent.Executor $r9;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: java.util.List;

        $r5 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords>;

        r2 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2$RouteCallbackRecord) $r6;

        $r7 = r3.<android.media.MediaRouter2$RouteCallbackRecord: android.media.RouteDiscoveryPreference mPreference>;

        r4 = specialinvoke r0.<android.media.MediaRouter2: java.util.List filterRoutes(java.util.List,android.media.RouteDiscoveryPreference)>(r1, $r7);

        $z1 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r9 = r3.<android.media.MediaRouter2$RouteCallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r8 = new android.media._$$Lambda$MediaRouter2$_IpRbaHzBEh1I7uHKDK98aRUJUU;

        specialinvoke $r8.<android.media._$$Lambda$MediaRouter2$_IpRbaHzBEh1I7uHKDK98aRUJUU: void <init>(android.media.MediaRouter2$RouteCallbackRecord,java.util.List)>(r3, r4);

        interfaceinvoke $r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r8);

     label2:
        goto label1;

     label3:
        return;
    }

    private void notifyStop(android.media.MediaRouter2$RoutingController)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$RoutingController r1;
        java.util.Iterator r2;
        android.media.MediaRouter2$TransferCallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.media._$$Lambda$MediaRouter2$hgifIdYD8PPhrPbfzt1coc9Af6w $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: android.media.MediaRouter2$RoutingController;

        $r4 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mTransferCallbackRecords>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2$TransferCallbackRecord) $r5;

        $r7 = r3.<android.media.MediaRouter2$TransferCallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r6 = new android.media._$$Lambda$MediaRouter2$hgifIdYD8PPhrPbfzt1coc9Af6w;

        specialinvoke $r6.<android.media._$$Lambda$MediaRouter2$hgifIdYD8PPhrPbfzt1coc9Af6w: void <init>(android.media.MediaRouter2$TransferCallbackRecord,android.media.MediaRouter2$RoutingController)>(r3, r1);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        goto label1;

     label2:
        return;
    }

    private void notifyTransfer(android.media.MediaRouter2$RoutingController, android.media.MediaRouter2$RoutingController)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$RoutingController r1, r2;
        java.util.Iterator r3;
        android.media.MediaRouter2$TransferCallbackRecord r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.media._$$Lambda$MediaRouter2$vs7yUmqlI_cAA10wFKeA9IrdOJc $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: android.media.MediaRouter2$RoutingController;

        r2 := @parameter1: android.media.MediaRouter2$RoutingController;

        $r5 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mTransferCallbackRecords>;

        r3 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.media.MediaRouter2$TransferCallbackRecord) $r6;

        $r8 = r4.<android.media.MediaRouter2$TransferCallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r7 = new android.media._$$Lambda$MediaRouter2$vs7yUmqlI_cAA10wFKeA9IrdOJc;

        specialinvoke $r7.<android.media._$$Lambda$MediaRouter2$vs7yUmqlI_cAA10wFKeA9IrdOJc: void <init>(android.media.MediaRouter2$TransferCallbackRecord,android.media.MediaRouter2$RoutingController,android.media.MediaRouter2$RoutingController)>(r4, r1, r2);

        interfaceinvoke $r8.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    private void notifyTransferFailure(android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRoute2Info r1;
        java.util.Iterator r2;
        android.media.MediaRouter2$TransferCallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.media._$$Lambda$MediaRouter2$X3ZOrCeYw3vfbvKGRXNPtHNaJ_I $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: android.media.MediaRoute2Info;

        $r4 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mTransferCallbackRecords>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2$TransferCallbackRecord) $r5;

        $r7 = r3.<android.media.MediaRouter2$TransferCallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r6 = new android.media._$$Lambda$MediaRouter2$X3ZOrCeYw3vfbvKGRXNPtHNaJ_I;

        specialinvoke $r6.<android.media._$$Lambda$MediaRouter2$X3ZOrCeYw3vfbvKGRXNPtHNaJ_I: void <init>(android.media.MediaRouter2$TransferCallbackRecord,android.media.MediaRoute2Info)>(r3, r1);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        goto label1;

     label2:
        return;
    }

    private boolean updateDiscoveryPreferenceIfNeededLocked()
    {
        android.media.MediaRouter2 r0;
        android.media.RouteDiscoveryPreference r1, $r10;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        java.util.stream.Stream $r4, $r6;
        android.media.'-$$Lambda$MediaRouter2$cGcxv69EHAfCH68BnC1wkAsMANY' $r5;
        java.util.stream.Collector $r7;
        java.lang.Object $r8;
        java.util.Collection $r9;
        boolean $z0;
        android.media.RouteDiscoveryPreference$Builder r11;
        java.util.function.Function r12;

        r0 := @this: android.media.MediaRouter2;

        r11 = new android.media.RouteDiscoveryPreference$Builder;

        $r3 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.stream.Stream stream()>();

        $r5 = <android.media._$$Lambda$MediaRouter2$cGcxv69EHAfCH68BnC1wkAsMANY: android.media.'-$$Lambda$MediaRouter2$cGcxv69EHAfCH68BnC1wkAsMANY' INSTANCE>;

        r12 = (java.util.function.Function) $r5;

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r12);

        $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r7);

        $r9 = (java.util.Collection) $r8;

        specialinvoke r11.<android.media.RouteDiscoveryPreference$Builder: void <init>(java.util.Collection)>($r9);

        r1 = virtualinvoke r11.<android.media.RouteDiscoveryPreference$Builder: android.media.RouteDiscoveryPreference build()>();

        $r10 = r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference> = r1;

        r0.<android.media.MediaRouter2: boolean mShouldUpdateRoutes> = 1;

        return 1;
    }

    void addRoutesOnHandler(java.util.List)
    {
        android.media.MediaRouter2 r0;
        java.lang.Object r2, $r5;
        android.media.MediaRoute2Info r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1, $z2;
        java.util.Map $r6;
        java.lang.String $r7;
        android.media.RouteDiscoveryPreference $r9;
        java.util.List $r10, r12;
        java.lang.Throwable $r11;
        java.util.Iterator r13;

        r0 := @this: android.media.MediaRouter2;

        r12 := @parameter0: java.util.List;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r2;

     label1:
        r13 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRoute2Info) $r5;

        $r6 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r7 = virtualinvoke r3.<android.media.MediaRoute2Info: java.lang.String getId()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r3);

        $r9 = r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference>;

        $r10 = virtualinvoke $r9.<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()>();

        $z2 = virtualinvoke r3.<android.media.MediaRoute2Info: boolean hasAnyFeatures(java.util.Collection)>($r10);

        if $z2 == 0 goto label3;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

     label3:
        goto label2;

     label4:
        r0.<android.media.MediaRouter2: boolean mShouldUpdateRoutes> = 1;

        exitmonitor r2;

     label5:
        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        specialinvoke r0.<android.media.MediaRouter2: void notifyRoutesAdded(java.util.List)>($r4);

     label6:
        return;

     label7:
        $r11 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void changeRoutesOnHandler(java.util.List)
    {
        android.media.MediaRouter2 r0;
        java.lang.Object r2, $r5;
        java.util.Iterator r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1, $z2;
        java.util.Map $r6;
        java.lang.String $r7;
        android.media.RouteDiscoveryPreference $r9;
        java.util.List $r10, r12;
        java.lang.Throwable $r11;
        android.media.MediaRoute2Info r13;

        r0 := @this: android.media.MediaRouter2;

        r12 := @parameter0: java.util.List;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r2;

     label1:
        r3 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.media.MediaRoute2Info) $r5;

        $r6 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r7 = virtualinvoke r13.<android.media.MediaRoute2Info: java.lang.String getId()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r13);

        $r9 = r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference>;

        $r10 = virtualinvoke $r9.<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()>();

        $z2 = virtualinvoke r13.<android.media.MediaRoute2Info: boolean hasAnyFeatures(java.util.Collection)>($r10);

        if $z2 == 0 goto label3;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r13);

     label3:
        goto label2;

     label4:
        r0.<android.media.MediaRouter2: boolean mShouldUpdateRoutes> = 1;

        exitmonitor r2;

     label5:
        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        specialinvoke r0.<android.media.MediaRouter2: void notifyRoutesChanged(java.util.List)>($r4);

     label6:
        return;

     label7:
        $r11 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void createControllerOnHandler(int, android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2 r0;
        int i0, $i1;
        java.util.concurrent.CopyOnWriteArrayList $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r4, $r7, $r9, $r12, $r13, $r14;
        android.media.MediaRouter2$RoutingController $r5, $r10, r22, r24, r25;
        java.util.Map $r6;
        java.lang.StringBuilder $r8, $r11;
        java.lang.Object $r15, r26;
        java.lang.Throwable $r16;
        android.media.RoutingSessionInfo r17;
        java.util.Iterator r18;
        android.media.MediaRouter2$ControllerCreationRequest r19;
        android.media.MediaRoute2Info r20;

        r0 := @this: android.media.MediaRouter2;

        i0 := @parameter0: int;

        r17 := @parameter1: android.media.RoutingSessionInfo;

        $r1 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mControllerCreationRequests>;

        r18 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label01:
        r19 = null;

        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r15 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (android.media.MediaRouter2$ControllerCreationRequest) $r15;

        $i1 = r19.<android.media.MediaRouter2$ControllerCreationRequest: int mRequestId>;

        if $i1 != i0 goto label02;

        goto label03;

     label02:
        goto label01;

     label03:
        if r19 != null goto label04;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "createControllerOnHandler: Ignoring an unknown request.");

        return;

     label04:
        $r2 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mControllerCreationRequests>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r19);

        r20 = r19.<android.media.MediaRouter2$ControllerCreationRequest: android.media.MediaRoute2Info mRoute>;

        if r17 != null goto label05;

        specialinvoke r0.<android.media.MediaRouter2: void notifyTransferFailure(android.media.MediaRoute2Info)>(r20);

        return;

     label05:
        $r3 = virtualinvoke r20.<android.media.MediaRoute2Info: java.lang.String getProviderId()>();

        $r4 = virtualinvoke r17.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r3, $r4);

        if $z1 != 0 goto label06;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The session\'s provider ID does not match the requested route\'s. (requested route\'s providerId=");

        $r12 = virtualinvoke r20.<android.media.MediaRoute2Info: java.lang.String getProviderId()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual providerId=");

        $r13 = virtualinvoke r17.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", $r14);

        specialinvoke r0.<android.media.MediaRouter2: void notifyTransferFailure(android.media.MediaRoute2Info)>(r20);

        return;

     label06:
        r22 = r19.<android.media.MediaRouter2$ControllerCreationRequest: android.media.MediaRouter2$RoutingController mOldController>;

        $z2 = virtualinvoke r22.<android.media.MediaRouter2$RoutingController: boolean scheduleRelease()>();

        if $z2 != 0 goto label08;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createControllerOnHandler: Ignoring controller creation for released old controller. oldController=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", $r9);

        $z4 = virtualinvoke r17.<android.media.RoutingSessionInfo: boolean isSystemSession()>();

        if $z4 != 0 goto label07;

        $r10 = new android.media.MediaRouter2$RoutingController;

        specialinvoke $r10.<android.media.MediaRouter2$RoutingController: void <init>(android.media.MediaRouter2,android.media.RoutingSessionInfo)>(r0, r17);

        virtualinvoke $r10.<android.media.MediaRouter2$RoutingController: void release()>();

     label07:
        specialinvoke r0.<android.media.MediaRouter2: void notifyTransferFailure(android.media.MediaRoute2Info)>(r20);

        return;

     label08:
        $z3 = virtualinvoke r17.<android.media.RoutingSessionInfo: boolean isSystemSession()>();

        if $z3 == 0 goto label09;

        r24 = virtualinvoke r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController getSystemController()>();

        virtualinvoke r24.<android.media.MediaRouter2$RoutingController: void setRoutingSessionInfo(android.media.RoutingSessionInfo)>(r17);

        r25 = r24;

        goto label11;

     label09:
        $r5 = new android.media.MediaRouter2$RoutingController;

        specialinvoke $r5.<android.media.MediaRouter2$RoutingController: void <init>(android.media.MediaRouter2,android.media.RoutingSessionInfo)>(r0, r17);

        r25 = $r5;

        r26 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r26;

     label10:
        $r6 = r0.<android.media.MediaRouter2: java.util.Map mNonSystemRoutingControllers>;

        $r7 = virtualinvoke $r5.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r5);

        exitmonitor r26;

     label11:
        specialinvoke r0.<android.media.MediaRouter2: void notifyTransfer(android.media.MediaRouter2$RoutingController,android.media.MediaRouter2$RoutingController)>(r22, r25);

        return;

     label12:
        $r16 := @caughtexception;

     label13:
        exitmonitor r26;

     label14:
        throw $r16;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public java.util.List getControllers()
    {
        android.media.MediaRouter2 r0;
        java.lang.Object r1;
        java.util.ArrayList $r2;
        android.media.MediaRouter2$RoutingController $r3;
        java.util.Map $r4;
        java.util.Collection $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.MediaRouter2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController mSystemController>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(0, $r3);

        r1 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.media.MediaRouter2: java.util.Map mNonSystemRoutingControllers>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        exitmonitor r1;

     label2:
        return $r2;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getRoutes()
    {
        android.media.MediaRouter2 r0;
        java.lang.Object r1, $r8;
        java.util.Iterator r2;
        android.media.MediaRoute2Info r3;
        boolean $z0, $z1, $z2;
        java.util.List $r4, $r7, $r10;
        java.util.Map $r5;
        java.util.Collection $r6;
        android.media.RouteDiscoveryPreference $r9;
        java.lang.Throwable $r11;
        java.util.ArrayList r12;

        r0 := @this: android.media.MediaRouter2;

        r1 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.media.MediaRouter2: boolean mShouldUpdateRoutes>;

        if $z0 == 0 goto label5;

        r0.<android.media.MediaRouter2: boolean mShouldUpdateRoutes> = 0;

        r12 = new java.util.ArrayList;

        specialinvoke r12.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRoute2Info) $r8;

        $r9 = r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference>;

        $r10 = virtualinvoke $r9.<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()>();

        $z2 = virtualinvoke r3.<android.media.MediaRoute2Info: boolean hasAnyFeatures(java.util.Collection)>($r10);

        if $z2 == 0 goto label3;

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>(r3);

     label3:
        goto label2;

     label4:
        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r12);

        r0.<android.media.MediaRouter2: java.util.List mFilteredRoutes> = $r7;

     label5:
        exitmonitor r1;

     label6:
        $r4 = r0.<android.media.MediaRouter2: java.util.List mFilteredRoutes>;

        return $r4;

     label7:
        $r11 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.media.MediaRouter2$RoutingController getSystemController()
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$RoutingController $r1;

        r0 := @this: android.media.MediaRouter2;

        $r1 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController mSystemController>;

        return $r1;
    }

    void onRequestCreateControllerByManagerOnHandler(android.media.RoutingSessionInfo, android.media.MediaRoute2Info, long)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRoute2Info r1;
        long l0;
        java.lang.Object r2, $r5;
        boolean $z0;
        java.util.Map $r3;
        java.lang.String $r4;
        java.lang.Throwable $r6;
        android.media.RoutingSessionInfo r7;
        android.media.MediaRouter2$RoutingController r8;

        r0 := @this: android.media.MediaRouter2;

        r7 := @parameter0: android.media.RoutingSessionInfo;

        r1 := @parameter1: android.media.MediaRoute2Info;

        l0 := @parameter2: long;

        $z0 = virtualinvoke r7.<android.media.RoutingSessionInfo: boolean isSystemSession()>();

        if $z0 == 0 goto label1;

        r8 = virtualinvoke r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController getSystemController()>();

        goto label3;

     label1:
        r2 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r2;

     label2:
        $r3 = r0.<android.media.MediaRouter2: java.util.Map mNonSystemRoutingControllers>;

        $r4 = virtualinvoke r7.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r8 = (android.media.MediaRouter2$RoutingController) $r5;

        exitmonitor r2;

     label3:
        if r8 != null goto label4;

        return;

     label4:
        virtualinvoke r0.<android.media.MediaRouter2: void requestCreateController(android.media.MediaRouter2$RoutingController,android.media.MediaRoute2Info,long)>(r8, r1, l0);

        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void registerControllerCallback(java.util.concurrent.Executor, android.media.MediaRouter2$ControllerCallback)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$ControllerCallback r1;
        android.media.MediaRouter2$ControllerCallbackRecord $r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0;
        java.util.concurrent.Executor r6;

        r0 := @this: android.media.MediaRouter2;

        r6 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.media.MediaRouter2$ControllerCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r6, "executor must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "callback must not be null");

        $r4 = new android.media.MediaRouter2$ControllerCallbackRecord;

        specialinvoke $r4.<android.media.MediaRouter2$ControllerCallbackRecord: void <init>(java.util.concurrent.Executor,android.media.MediaRouter2$ControllerCallback)>(r6, r1);

        $r5 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mControllerCallbackRecords>;

        $z0 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: boolean addIfAbsent(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "registerControllerCallback: Ignoring the same callback");

        return;

     label1:
        return;
    }

    public void registerRouteCallback(java.util.concurrent.Executor, android.media.MediaRouter2$RouteCallback, android.media.RouteDiscoveryPreference)
    {
        android.media.MediaRouter2 r0;
        android.media.RouteDiscoveryPreference r1, $r9;
        boolean z0;
        android.media.MediaRouter2$RouteCallbackRecord $r5;
        java.util.concurrent.CopyOnWriteArrayList $r6, $r7;
        android.media.MediaRouter2$MediaRouter2Stub $r8, $r10, r21, $r23;
        android.media.IMediaRouterService $r11, $r13;
        java.lang.String $r12;
        java.lang.Throwable $r14;
        android.os.RemoteException $r15, $r16;
        java.util.concurrent.Executor r17;
        android.media.MediaRouter2$RouteCallback r18;
        java.lang.Object r20;

        r0 := @this: android.media.MediaRouter2;

        r17 := @parameter0: java.util.concurrent.Executor;

        r18 := @parameter1: android.media.MediaRouter2$RouteCallback;

        r1 := @parameter2: android.media.RouteDiscoveryPreference;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r17, "executor must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r18, "callback must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "preference must not be null");

        $r5 = new android.media.MediaRouter2$RouteCallbackRecord;

        specialinvoke $r5.<android.media.MediaRouter2$RouteCallbackRecord: void <init>(java.util.concurrent.Executor,android.media.MediaRouter2$RouteCallback,android.media.RouteDiscoveryPreference)>(r17, r18, r1);

        $r6 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords>;

        virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r5);

        $r7 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords>;

        virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: boolean addIfAbsent(java.lang.Object)>($r5);

        r20 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r20;

     label01:
        $r8 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        if $r8 != null goto label06;

        r21 = new android.media.MediaRouter2$MediaRouter2Stub;

        specialinvoke r21.<android.media.MediaRouter2$MediaRouter2Stub: void <init>(android.media.MediaRouter2)>(r0);

     label02:
        $r13 = r0.<android.media.MediaRouter2: android.media.IMediaRouterService mMediaRouterService>;

        $r12 = r0.<android.media.MediaRouter2: java.lang.String mPackageName>;

        interfaceinvoke $r13.<android.media.IMediaRouterService: void registerRouter2(android.media.IMediaRouter2,java.lang.String)>(r21, $r12);

        r0.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub> = r21;

     label03:
        goto label06;

     label04:
        $r15 := @caughtexception;

     label05:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "registerRouteCallback: Unable to register MediaRouter2.", $r15);

     label06:
        $r23 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        if $r23 == null goto label12;

        z0 = specialinvoke r0.<android.media.MediaRouter2: boolean updateDiscoveryPreferenceIfNeededLocked()>();

     label07:
        if z0 == 0 goto label12;

     label08:
        $r11 = r0.<android.media.MediaRouter2: android.media.IMediaRouterService mMediaRouterService>;

        $r10 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        $r9 = r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference>;

        interfaceinvoke $r11.<android.media.IMediaRouterService: void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2,android.media.RouteDiscoveryPreference)>($r10, $r9);

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "registerRouteCallback: Unable to set discovery request.", $r16);

     label12:
        exitmonitor r20;

     label13:
        return;

     label14:
        $r14 := @caughtexception;

     label15:
        exitmonitor r20;

     label16:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void registerTransferCallback(java.util.concurrent.Executor, android.media.MediaRouter2$TransferCallback)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$TransferCallback r1;
        android.media.MediaRouter2$TransferCallbackRecord $r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0;
        java.util.concurrent.Executor r6;

        r0 := @this: android.media.MediaRouter2;

        r6 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.media.MediaRouter2$TransferCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r6, "executor must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "callback must not be null");

        $r4 = new android.media.MediaRouter2$TransferCallbackRecord;

        specialinvoke $r4.<android.media.MediaRouter2$TransferCallbackRecord: void <init>(java.util.concurrent.Executor,android.media.MediaRouter2$TransferCallback)>(r6, r1);

        $r5 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mTransferCallbackRecords>;

        $z0 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: boolean addIfAbsent(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "registerTransferCallback: Ignoring the same callback");

        return;

     label1:
        return;
    }

    void releaseControllerOnHandler(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2 r0;
        java.util.Map $r1;
        java.lang.String $r2, $r4, $r5, $r8, $r11, $r13, $r16, $r18;
        java.lang.Object $r3, r21;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r14;
        java.lang.Throwable $r19;
        android.media.RoutingSessionInfo r20, r24;
        android.media.MediaRouter2$RoutingController r22;

        r0 := @this: android.media.MediaRouter2;

        r20 := @parameter0: android.media.RoutingSessionInfo;

        if r20 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "releaseControllerOnHandler: Ignoring null sessionInfo.");

        return;

     label1:
        r21 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r21;

     label2:
        $r1 = r0.<android.media.MediaRouter2: java.util.Map mNonSystemRoutingControllers>;

        $r2 = virtualinvoke r20.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r22 = (android.media.MediaRouter2$RoutingController) $r3;

        exitmonitor r21;

     label3:
        if r22 != null goto label5;

        $z1 = <android.media.MediaRouter2: boolean DEBUG>;

        if $z1 == 0 goto label4;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("releaseControllerOnHandler: Matching controller not found. uniqueSessionId=");

        $r16 = virtualinvoke r20.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MR2", $r18);

     label4:
        return;

     label5:
        r24 = virtualinvoke r22.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo getRoutingSessionInfo()>();

        $r4 = virtualinvoke r24.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        $r5 = virtualinvoke r20.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, $r5);

        if $z0 != 0 goto label6;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("releaseControllerOnHandler: Provider IDs are not matched. old=");

        $r8 = virtualinvoke r24.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new=");

        $r11 = virtualinvoke r20.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", $r13);

        return;

     label6:
        virtualinvoke r22.<android.media.MediaRouter2$RoutingController: void releaseInternal(boolean)>(0);

        return;

     label7:
        $r19 := @caughtexception;

     label8:
        exitmonitor r21;

     label9:
        throw $r19;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void removeRoutesOnHandler(java.util.List)
    {
        android.media.MediaRouter2 r0;
        java.lang.Object r2, $r5;
        java.util.Iterator r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1, $z2;
        java.util.Map $r6;
        java.lang.String $r7;
        android.media.RouteDiscoveryPreference $r9;
        java.util.List $r10, r12;
        java.lang.Throwable $r11;
        android.media.MediaRoute2Info r13;

        r0 := @this: android.media.MediaRouter2;

        r12 := @parameter0: java.util.List;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r2;

     label1:
        r3 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.media.MediaRoute2Info) $r5;

        $r6 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r7 = virtualinvoke r13.<android.media.MediaRoute2Info: java.lang.String getId()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r7);

        $r9 = r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference>;

        $r10 = virtualinvoke $r9.<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()>();

        $z2 = virtualinvoke r13.<android.media.MediaRoute2Info: boolean hasAnyFeatures(java.util.Collection)>($r10);

        if $z2 == 0 goto label3;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r13);

     label3:
        goto label2;

     label4:
        r0.<android.media.MediaRouter2: boolean mShouldUpdateRoutes> = 1;

        exitmonitor r2;

     label5:
        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        specialinvoke r0.<android.media.MediaRouter2: void notifyRoutesRemoved(java.util.List)>($r4);

     label6:
        return;

     label7:
        $r11 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void requestCreateController(android.media.MediaRouter2$RoutingController, android.media.MediaRoute2Info, long)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRoute2Info r1;
        long l0;
        int i1;
        java.lang.Object r3;
        android.media.MediaRouter2$MediaRouter2Stub r4;
        java.util.concurrent.atomic.AtomicInteger $r5;
        android.media.MediaRouter2$ControllerCreationRequest $r6;
        java.util.concurrent.CopyOnWriteArrayList $r7, $r12;
        android.media.IMediaRouterService $r8;
        android.media.RoutingSessionInfo $r9;
        android.os.Bundle $r10, r16;
        android.os.RemoteException $r11;
        byte $b3;
        java.lang.Throwable $r13;
        android.media.MediaRouter2$RoutingController r14;
        android.media.MediaRouter2$OnGetControllerHintsListener r15;

        r0 := @this: android.media.MediaRouter2;

        r14 := @parameter0: android.media.MediaRouter2$RoutingController;

        r1 := @parameter1: android.media.MediaRoute2Info;

        l0 := @parameter2: long;

        $r5 = r0.<android.media.MediaRouter2: java.util.concurrent.atomic.AtomicInteger mNextRequestId>;

        i1 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r6 = new android.media.MediaRouter2$ControllerCreationRequest;

        specialinvoke $r6.<android.media.MediaRouter2$ControllerCreationRequest: void <init>(int,long,android.media.MediaRoute2Info,android.media.MediaRouter2$RoutingController)>(i1, l0, r1, r14);

        $r7 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mControllerCreationRequests>;

        virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r6);

        r15 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$OnGetControllerHintsListener mOnGetControllerHintsListener>;

        if r15 == null goto label02;

        r16 = interfaceinvoke r15.<android.media.MediaRouter2$OnGetControllerHintsListener: android.os.Bundle onGetControllerHints(android.media.MediaRoute2Info)>(r1);

        if r16 == null goto label01;

        $r10 = new android.os.Bundle;

        specialinvoke $r10.<android.os.Bundle: void <init>(android.os.Bundle)>(r16);

        r16 = $r10;

        goto label03;

     label01:
        goto label03;

     label02:
        r16 = null;

     label03:
        r3 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r3;

     label04:
        r4 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        exitmonitor r3;

     label05:
        if r4 == null goto label09;

     label06:
        $r8 = r0.<android.media.MediaRouter2: android.media.IMediaRouterService mMediaRouterService>;

        $r9 = virtualinvoke r14.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo getRoutingSessionInfo()>();

        interfaceinvoke $r8.<android.media.IMediaRouterService: void requestCreateSessionWithRouter2(android.media.IMediaRouter2,int,long,android.media.RoutingSessionInfo,android.media.MediaRoute2Info,android.os.Bundle)>(r4, i1, l0, $r9, r1, r16);

     label07:
        goto label09;

     label08:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "createControllerForTransfer: Failed to request for creating a controller.", $r11);

        $r12 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mControllerCreationRequests>;

        virtualinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r6);

        $b3 = l0 cmp 0L;

        if $b3 != 0 goto label09;

        specialinvoke r0.<android.media.MediaRouter2: void notifyTransferFailure(android.media.MediaRoute2Info)>(r1);

     label09:
        return;

     label10:
        $r13 := @caughtexception;

     label11:
        exitmonitor r3;

     label12:
        throw $r13;

        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void setOnGetControllerHintsListener(android.media.MediaRouter2$OnGetControllerHintsListener)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$OnGetControllerHintsListener r1;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: android.media.MediaRouter2$OnGetControllerHintsListener;

        r0.<android.media.MediaRouter2: android.media.MediaRouter2$OnGetControllerHintsListener mOnGetControllerHintsListener> = r1;

        return;
    }

    public void setRouteVolume(android.media.MediaRoute2Info, int)
    {
        android.media.MediaRouter2 r0;
        int i0;
        java.lang.Object r1;
        android.media.MediaRouter2$MediaRouter2Stub r2;
        android.media.IMediaRouterService $r4;
        android.os.RemoteException $r5;
        java.lang.Throwable $r6;
        android.media.MediaRoute2Info r7;

        r0 := @this: android.media.MediaRouter2;

        r7 := @parameter0: android.media.MediaRoute2Info;

        i0 := @parameter1: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r7, "route must not be null");

        r1 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r1;

     label1:
        r2 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        exitmonitor r1;

     label2:
        if r2 == null goto label6;

     label3:
        $r4 = r0.<android.media.MediaRouter2: android.media.IMediaRouterService mMediaRouterService>;

        interfaceinvoke $r4.<android.media.IMediaRouterService: void setRouteVolumeWithRouter2(android.media.IMediaRouter2,android.media.MediaRoute2Info,int)>(r2, r7, i0);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "Unable to set route volume.", $r5);

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void stop()
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$RoutingController $r1;

        r0 := @this: android.media.MediaRouter2;

        $r1 = specialinvoke r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController getCurrentController()>();

        virtualinvoke $r1.<android.media.MediaRouter2$RoutingController: void release()>();

        return;
    }

    void syncRoutesOnHandler(java.util.List, android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2 r0;
        android.media.RoutingSessionInfo r1, r56;
        java.util.List r5, $r32, $r37, $r43, r48;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z14, $z15;
        java.util.stream.Stream $r13, $r15;
        android.media.'-$$Lambda$Jl1VWT2dPpodkj8vkFOye7iVD0Y' $r14;
        java.util.stream.Collector $r16;
        java.lang.Object $r17, $r24, $r28, $r35, $r38, $r40, $r45, r49;
        java.util.Map $r18, $r20, $r25, $r29, $r33, $r39, $r44;
        java.util.Set $r19;
        android.media.MediaRouter2$RoutingController $r21, $r22, $r23;
        java.lang.String $r26, $r30, $r34, r51, $r60;
        android.media.RouteDiscoveryPreference $r31, $r36, $r41;
        android.media.MediaRoute2Info $r42, $r46, r53, r55;
        java.lang.Throwable $r47;
        java.util.Iterator r50, r52, r54;
        java.util.ArrayList r61, r62, r63;
        java.lang.StringBuilder r64;
        java.util.function.Function r65;

        r0 := @this: android.media.MediaRouter2;

        r48 := @parameter0: java.util.List;

        r1 := @parameter1: android.media.RoutingSessionInfo;

        if r48 == null goto label22;

        $z0 = interfaceinvoke r48.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label22;

        if r1 != null goto label01;

        goto label22;

     label01:
        r61 = new java.util.ArrayList;

        specialinvoke r61.<java.util.ArrayList: void <init>()>();

        r62 = new java.util.ArrayList;

        specialinvoke r62.<java.util.ArrayList: void <init>()>();

        r63 = new java.util.ArrayList;

        specialinvoke r63.<java.util.ArrayList: void <init>()>();

        r49 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r49;

     label02:
        $r13 = interfaceinvoke r48.<java.util.List: java.util.stream.Stream stream()>();

        $r14 = <android.media._$$Lambda$Jl1VWT2dPpodkj8vkFOye7iVD0Y: android.media.'-$$Lambda$Jl1VWT2dPpodkj8vkFOye7iVD0Y' INSTANCE>;

        r65 = (java.util.function.Function) $r14;

        $r15 = interfaceinvoke $r13.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r65);

        $r16 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r17 = interfaceinvoke $r15.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r16);

        r5 = (java.util.List) $r17;

        $r18 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.util.Set keySet()>();

        r50 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r38 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.lang.String) $r38;

        $z14 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>(r51);

        if $z14 != 0 goto label04;

        $r39 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r40 = interfaceinvoke $r39.<java.util.Map: java.lang.Object get(java.lang.Object)>(r51);

        $r42 = (android.media.MediaRoute2Info) $r40;

        $r41 = r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference>;

        $r43 = virtualinvoke $r41.<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()>();

        $z15 = virtualinvoke $r42.<android.media.MediaRoute2Info: boolean hasAnyFeatures(java.util.Collection)>($r43);

        if $z15 == 0 goto label04;

        $r44 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r45 = interfaceinvoke $r44.<java.util.Map: java.lang.Object get(java.lang.Object)>(r51);

        $r46 = (android.media.MediaRoute2Info) $r45;

        interfaceinvoke r62.<java.util.List: boolean add(java.lang.Object)>($r46);

     label04:
        goto label03;

     label05:
        r52 = interfaceinvoke r48.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r28 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>();

        r53 = (android.media.MediaRoute2Info) $r28;

        $r29 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r30 = virtualinvoke r53.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z8 = interfaceinvoke $r29.<java.util.Map: boolean containsKey(java.lang.Object)>($r30);

        if $z8 == 0 goto label08;

        $r33 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r34 = virtualinvoke r53.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $r35 = interfaceinvoke $r33.<java.util.Map: java.lang.Object get(java.lang.Object)>($r34);

        $z11 = virtualinvoke r53.<android.media.MediaRoute2Info: boolean equals(java.lang.Object)>($r35);

        if $z11 != 0 goto label09;

        $r36 = r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference>;

        $r37 = virtualinvoke $r36.<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()>();

        $z12 = virtualinvoke r53.<android.media.MediaRoute2Info: boolean hasAnyFeatures(java.util.Collection)>($r37);

        if $z12 == 0 goto label09;

        interfaceinvoke r63.<java.util.List: boolean add(java.lang.Object)>(r53);

     label07:
        goto label09;

     label08:
        $r31 = r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference>;

        $r32 = virtualinvoke $r31.<android.media.RouteDiscoveryPreference: java.util.List getPreferredFeatures()>();

        $z9 = virtualinvoke r53.<android.media.MediaRoute2Info: boolean hasAnyFeatures(java.util.Collection)>($r32);

        if $z9 == 0 goto label09;

        interfaceinvoke r61.<java.util.List: boolean add(java.lang.Object)>(r53);

     label09:
        goto label06;

     label10:
        $r20 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        interfaceinvoke $r20.<java.util.Map: void clear()>();

        r54 = interfaceinvoke r48.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r24 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r55 = (android.media.MediaRoute2Info) $r24;

        $r25 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r26 = virtualinvoke r55.<android.media.MediaRoute2Info: java.lang.String getId()>();

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, r55);

     label12:
        goto label11;

     label13:
        r0.<android.media.MediaRouter2: boolean mShouldUpdateRoutes> = 1;

        exitmonitor r49;

     label14:
        $z4 = interfaceinvoke r61.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label15;

        specialinvoke r0.<android.media.MediaRouter2: void notifyRoutesAdded(java.util.List)>(r61);

     label15:
        $z5 = interfaceinvoke r62.<java.util.List: boolean isEmpty()>();

        if $z5 != 0 goto label16;

        specialinvoke r0.<android.media.MediaRouter2: void notifyRoutesRemoved(java.util.List)>(r62);

     label16:
        $z6 = interfaceinvoke r63.<java.util.List: boolean isEmpty()>();

        if $z6 != 0 goto label17;

        specialinvoke r0.<android.media.MediaRouter2: void notifyRoutesChanged(java.util.List)>(r63);

     label17:
        $r21 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController mSystemController>;

        r56 = virtualinvoke $r21.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo getRoutingSessionInfo()>();

        $r22 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController mSystemController>;

        virtualinvoke $r22.<android.media.MediaRouter2$RoutingController: void setRoutingSessionInfo(android.media.RoutingSessionInfo)>(r1);

        $z7 = virtualinvoke r56.<android.media.RoutingSessionInfo: boolean equals(java.lang.Object)>(r1);

        if $z7 != 0 goto label18;

        $r23 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController mSystemController>;

        specialinvoke r0.<android.media.MediaRouter2: void notifyControllerUpdated(android.media.MediaRouter2$RoutingController)>($r23);

     label18:
        return;

     label19:
        $r47 := @caughtexception;

     label20:
        exitmonitor r49;

     label21:
        throw $r47;

     label22:
        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("syncRoutesOnHandler: Received wrong data. currentRoutes=");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentSystemSessionInfo=");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r60 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MR2", $r60);

        return;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    void transfer(android.media.MediaRouter2$RoutingController, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRoute2Info r1;
        java.lang.Object r2;
        boolean z0, $z1;
        java.util.Map $r5;
        java.lang.String $r6, $r9;
        android.media.RoutingSessionInfo $r7;
        java.util.List $r8;
        java.lang.Throwable $r10;
        android.media.MediaRouter2$RoutingController r11;

        r0 := @this: android.media.MediaRouter2;

        r11 := @parameter0: android.media.MediaRouter2$RoutingController;

        r1 := @parameter1: android.media.MediaRoute2Info;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r11, "controller must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "route must not be null");

        r2 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r2;

     label1:
        $r5 = r0.<android.media.MediaRouter2: java.util.Map mRoutes>;

        $r6 = virtualinvoke r1.<android.media.MediaRoute2Info: java.lang.String getId()>();

        z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        exitmonitor r2;

     label2:
        if z0 != 0 goto label3;

        specialinvoke r0.<android.media.MediaRouter2: void notifyTransferFailure(android.media.MediaRoute2Info)>(r1);

        return;

     label3:
        $r7 = virtualinvoke r11.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo getRoutingSessionInfo()>();

        $r8 = virtualinvoke $r7.<android.media.RoutingSessionInfo: java.util.List getTransferableRoutes()>();

        $r9 = virtualinvoke r1.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>($r9);

        if $z1 == 0 goto label4;

        virtualinvoke r11.<android.media.MediaRouter2$RoutingController: void transferToRoute(android.media.MediaRoute2Info)>(r1);

        return;

     label4:
        virtualinvoke r0.<android.media.MediaRouter2: void requestCreateController(android.media.MediaRouter2$RoutingController,android.media.MediaRoute2Info,long)>(r11, r1, 0L);

        return;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r2;

     label7:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void transferTo(android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRoute2Info r1;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        android.media.MediaRouter2$RoutingController $r8;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: android.media.MediaRoute2Info;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "route must not be null");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transferring to route: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MR2", $r7);

        $r8 = specialinvoke r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController getCurrentController()>();

        virtualinvoke r0.<android.media.MediaRouter2: void transfer(android.media.MediaRouter2$RoutingController,android.media.MediaRoute2Info)>($r8, r1);

        return;
    }

    public void unregisterControllerCallback(android.media.MediaRouter2$ControllerCallback)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$ControllerCallback r1;
        android.media.MediaRouter2$ControllerCallbackRecord $r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: android.media.MediaRouter2$ControllerCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "callback must not be null");

        $r4 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mControllerCallbackRecords>;

        $r3 = new android.media.MediaRouter2$ControllerCallbackRecord;

        specialinvoke $r3.<android.media.MediaRouter2$ControllerCallbackRecord: void <init>(java.util.concurrent.Executor,android.media.MediaRouter2$ControllerCallback)>(null, r1);

        $z0 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "unregisterControllerCallback: Ignoring an unknown callback");

        return;

     label1:
        return;
    }

    public void unregisterRouteCallback(android.media.MediaRouter2$RouteCallback)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$RouteCallbackRecord $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3, $r17;
        boolean $z0, z1, $z2, z3;
        android.media.MediaRouter2$MediaRouter2Stub $r4, $r6, $r9;
        java.util.Map $r5;
        android.media.IMediaRouterService $r7, $r10;
        android.media.RouteDiscoveryPreference $r8;
        android.os.RemoteException $r11, $r13;
        java.lang.Throwable $r12;
        android.media.MediaRouter2$RouteCallback r14;
        java.lang.Object r15;

        r0 := @this: android.media.MediaRouter2;

        r14 := @parameter0: android.media.MediaRouter2$RouteCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r14, "callback must not be null");

        $r3 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords>;

        $r2 = new android.media.MediaRouter2$RouteCallbackRecord;

        specialinvoke $r2.<android.media.MediaRouter2$RouteCallbackRecord: void <init>(java.util.concurrent.Executor,android.media.MediaRouter2$RouteCallback,android.media.RouteDiscoveryPreference)>(null, r14, null);

        $z0 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r2);

        if $z0 != 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "unregisterRouteCallback: Ignoring unknown callback");

        return;

     label01:
        r15 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r15;

     label02:
        $r4 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        if $r4 != null goto label04;

        exitmonitor r15;

     label03:
        return;

     label04:
        z1 = specialinvoke r0.<android.media.MediaRouter2: boolean updateDiscoveryPreferenceIfNeededLocked()>();

     label05:
        if z1 == 0 goto label10;

     label06:
        $r10 = r0.<android.media.MediaRouter2: android.media.IMediaRouterService mMediaRouterService>;

        $r9 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        $r8 = r0.<android.media.MediaRouter2: android.media.RouteDiscoveryPreference mDiscoveryPreference>;

        interfaceinvoke $r10.<android.media.IMediaRouterService: void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2,android.media.RouteDiscoveryPreference)>($r9, $r8);

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

     label09:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "unregisterRouteCallback: Unable to set discovery request.", $r11);

     label10:
        $r17 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mRouteCallbackRecords>;

        $z2 = virtualinvoke $r17.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label17;

        $r5 = r0.<android.media.MediaRouter2: java.util.Map mNonSystemRoutingControllers>;

        z3 = interfaceinvoke $r5.<java.util.Map: boolean isEmpty()>();

     label11:
        if z3 == 0 goto label17;

     label12:
        $r7 = r0.<android.media.MediaRouter2: android.media.IMediaRouterService mMediaRouterService>;

        $r6 = r0.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub>;

        interfaceinvoke $r7.<android.media.IMediaRouterService: void unregisterRouter2(android.media.IMediaRouter2)>($r6);

     label13:
        goto label16;

     label14:
        $r13 := @caughtexception;

     label15:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2", "Unable to unregister media router.", $r13);

     label16:
        r0.<android.media.MediaRouter2: android.media.MediaRouter2$MediaRouter2Stub mStub> = null;

     label17:
        r0.<android.media.MediaRouter2: boolean mShouldUpdateRoutes> = 1;

        exitmonitor r15;

     label18:
        return;

     label19:
        $r12 := @caughtexception;

     label20:
        exitmonitor r15;

     label21:
        throw $r12;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public void unregisterTransferCallback(android.media.MediaRouter2$TransferCallback)
    {
        android.media.MediaRouter2 r0;
        android.media.MediaRouter2$TransferCallback r1;
        android.media.MediaRouter2$TransferCallbackRecord $r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;

        r0 := @this: android.media.MediaRouter2;

        r1 := @parameter0: android.media.MediaRouter2$TransferCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "callback must not be null");

        $r4 = r0.<android.media.MediaRouter2: java.util.concurrent.CopyOnWriteArrayList mTransferCallbackRecords>;

        $r3 = new android.media.MediaRouter2$TransferCallbackRecord;

        specialinvoke $r3.<android.media.MediaRouter2$TransferCallbackRecord: void <init>(java.util.concurrent.Executor,android.media.MediaRouter2$TransferCallback)>(null, r1);

        $z0 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "unregisterTransferCallback: Ignoring an unknown callback");

        return;

     label1:
        return;
    }

    void updateControllerOnHandler(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2 r0;
        boolean $z0, $z1;
        java.util.Map $r1;
        java.lang.String $r2, $r4, $r5, $r8, $r11, $r13, $r16, $r18;
        java.lang.Object $r3, r22;
        java.lang.StringBuilder $r6, $r14;
        java.lang.Throwable $r19;
        android.media.RoutingSessionInfo r20, r25;
        android.media.MediaRouter2$RoutingController r21, r23;

        r0 := @this: android.media.MediaRouter2;

        r20 := @parameter0: android.media.RoutingSessionInfo;

        if r20 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", "updateControllerOnHandler: Ignoring null sessionInfo.");

        return;

     label1:
        $z0 = virtualinvoke r20.<android.media.RoutingSessionInfo: boolean isSystemSession()>();

        if $z0 == 0 goto label2;

        r21 = virtualinvoke r0.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController getSystemController()>();

        virtualinvoke r21.<android.media.MediaRouter2$RoutingController: void setRoutingSessionInfo(android.media.RoutingSessionInfo)>(r20);

        specialinvoke r0.<android.media.MediaRouter2: void notifyControllerUpdated(android.media.MediaRouter2$RoutingController)>(r21);

        return;

     label2:
        r22 = <android.media.MediaRouter2: java.lang.Object sRouterLock>;

        entermonitor r22;

     label3:
        $r1 = r0.<android.media.MediaRouter2: java.util.Map mNonSystemRoutingControllers>;

        $r2 = virtualinvoke r20.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r23 = (android.media.MediaRouter2$RoutingController) $r3;

        exitmonitor r22;

     label4:
        if r23 != null goto label5;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateControllerOnHandler: Matching controller not found. uniqueSessionId=");

        $r16 = virtualinvoke r20.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", $r18);

        return;

     label5:
        r25 = virtualinvoke r23.<android.media.MediaRouter2$RoutingController: android.media.RoutingSessionInfo getRoutingSessionInfo()>();

        $r4 = virtualinvoke r25.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        $r5 = virtualinvoke r20.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, $r5);

        if $z1 != 0 goto label6;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateControllerOnHandler: Provider IDs are not matched. old=");

        $r8 = virtualinvoke r25.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new=");

        $r11 = virtualinvoke r20.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2", $r13);

        return;

     label6:
        virtualinvoke r23.<android.media.MediaRouter2$RoutingController: void setRoutingSessionInfo(android.media.RoutingSessionInfo)>(r20);

        specialinvoke r0.<android.media.MediaRouter2: void notifyControllerUpdated(android.media.MediaRouter2$RoutingController)>(r23);

        return;

     label7:
        $r19 := @caughtexception;

     label8:
        exitmonitor r22;

     label9:
        throw $r19;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
