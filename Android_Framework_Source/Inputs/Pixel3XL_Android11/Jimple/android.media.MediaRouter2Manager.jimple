public final class android.media.MediaRouter2Manager extends java.lang.Object
{
    public static final int REQUEST_ID_NONE;
    private static final java.lang.String TAG;
    public static final int TRANSFER_TIMEOUT_MS;
    private static android.media.MediaRouter2Manager sInstance;
    private static final java.lang.Object sLock;
    final java.util.concurrent.CopyOnWriteArrayList mCallbackRecords;
    private android.media.MediaRouter2Manager$Client mClient;
    private final android.content.Context mContext;
    final android.os.Handler mHandler;
    private final android.media.IMediaRouterService mMediaRouterService;
    private final android.media.session.MediaSessionManager mMediaSessionManager;
    private final java.util.concurrent.atomic.AtomicInteger mNextRequestId;
    final java.lang.String mPackageName;
    final java.util.concurrent.ConcurrentMap mPreferredFeaturesMap;
    private final java.util.Map mRoutes;
    private final java.lang.Object mRoutesLock;
    private final java.util.concurrent.CopyOnWriteArrayList mTransferRequests;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.media.MediaRouter2Manager: int TRANSFER_TIMEOUT_MS> = 30000;

        <android.media.MediaRouter2Manager: java.lang.String TAG> = "MR2Manager";

        <android.media.MediaRouter2Manager: int REQUEST_ID_NONE> = 0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.media.MediaRouter2Manager: java.lang.Object sLock> = $r0;

        return;
    }

    private void <init>(android.content.Context)
    {
        android.media.MediaRouter2Manager r0;
        java.util.concurrent.CopyOnWriteArrayList $r1, $r6;
        java.lang.Object $r2, $r10;
        java.util.HashMap $r3;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.util.concurrent.atomic.AtomicInteger $r5;
        android.content.Context $r7, $r12, r17;
        android.os.IBinder $r8;
        android.media.IMediaRouterService $r9;
        android.media.session.MediaSessionManager $r11;
        java.lang.String $r13;
        android.os.Handler $r14;
        android.os.Looper $r15;
        android.media._$$Lambda$MediaRouter2Manager$X76xPaxqgD0WPDz_D1Lxk5kiurY $r16;

        r0 := @this: android.media.MediaRouter2Manager;

        r17 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaRouter2Manager: java.lang.Object mRoutesLock> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<android.media.MediaRouter2Manager: java.util.Map mRoutes> = $r3;

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<android.media.MediaRouter2Manager: java.util.concurrent.ConcurrentMap mPreferredFeaturesMap> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<android.media.MediaRouter2Manager: java.util.concurrent.atomic.AtomicInteger mNextRequestId> = $r5;

        $r6 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mTransferRequests> = $r6;

        $r7 = virtualinvoke r17.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.media.MediaRouter2Manager: android.content.Context mContext> = $r7;

        $r8 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("media_router");

        $r9 = staticinvoke <android.media.IMediaRouterService$Stub: android.media.IMediaRouterService asInterface(android.os.IBinder)>($r8);

        r0.<android.media.MediaRouter2Manager: android.media.IMediaRouterService mMediaRouterService> = $r9;

        $r10 = virtualinvoke r17.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("media_session");

        $r11 = (android.media.session.MediaSessionManager) $r10;

        r0.<android.media.MediaRouter2Manager: android.media.session.MediaSessionManager mMediaSessionManager> = $r11;

        $r12 = r0.<android.media.MediaRouter2Manager: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.media.MediaRouter2Manager: java.lang.String mPackageName> = $r13;

        $r14 = new android.os.Handler;

        $r15 = virtualinvoke r17.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r14.<android.os.Handler: void <init>(android.os.Looper)>($r15);

        r0.<android.media.MediaRouter2Manager: android.os.Handler mHandler> = $r14;

        $r16 = new android.media._$$Lambda$MediaRouter2Manager$X76xPaxqgD0WPDz_D1Lxk5kiurY;

        specialinvoke $r16.<android.media._$$Lambda$MediaRouter2Manager$X76xPaxqgD0WPDz_D1Lxk5kiurY: void <init>(android.media.MediaRouter2Manager)>(r0);

        virtualinvoke $r14.<android.os.Handler: boolean post(java.lang.Runnable)>($r16);

        return;
    }

    private boolean areSessionsMatched(android.media.session.MediaController, android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        android.media.session.MediaController r1;
        android.media.RoutingSessionInfo r2;
        java.lang.String $r3, $r4, $r5, $r6, r8;
        boolean $z0, $z1, $z2, z3;
        android.media.session.MediaController$PlaybackInfo r7;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: android.media.session.MediaController;

        r2 := @parameter1: android.media.RoutingSessionInfo;

        r7 = virtualinvoke r1.<android.media.session.MediaController: android.media.session.MediaController$PlaybackInfo getPlaybackInfo()>();

        z3 = 0;

        if r7 != null goto label1;

        return 0;

     label1:
        r8 = virtualinvoke r7.<android.media.session.MediaController$PlaybackInfo: java.lang.String getVolumeControlId()>();

        if r8 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r2.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r8, $r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $r4 = virtualinvoke r2.<android.media.RoutingSessionInfo: java.lang.String getOriginalId()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r8, $r4);

        if $z1 == 0 goto label4;

        $r5 = virtualinvoke r1.<android.media.session.MediaController: java.lang.String getPackageName()>();

        $r6 = virtualinvoke r2.<android.media.RoutingSessionInfo: java.lang.String getOwnerPackageName()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r5, $r6);

        if $z2 == 0 goto label4;

        z3 = 1;

        goto label4;

     label4:
        return z3;
    }

    private int createTransferRequest(android.media.RoutingSessionInfo, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRoute2Info r1;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r2;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        android.media.'-$$Lambda$MediaRouter2Manager$A_6LAn0k2ifEMlid1ntuc9gWf74' $r5;
        android.os.Handler $r6;
        android.media.RoutingSessionInfo r7;
        android.os.Message r9;
        android.media.MediaRouter2Manager$TransferRequest r10;
        java.util.function.BiConsumer r11;

        r0 := @this: android.media.MediaRouter2Manager;

        r7 := @parameter0: android.media.RoutingSessionInfo;

        r1 := @parameter1: android.media.MediaRoute2Info;

        $r2 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.atomic.AtomicInteger mNextRequestId>;

        i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        r10 = new android.media.MediaRouter2Manager$TransferRequest;

        specialinvoke r10.<android.media.MediaRouter2Manager$TransferRequest: void <init>(int,android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(i0, r7, r1);

        $r4 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mTransferRequests>;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r10);

        $r5 = <android.media._$$Lambda$MediaRouter2Manager$A_6LAn0k2ifEMlid1ntuc9gWf74: android.media.'-$$Lambda$MediaRouter2Manager$A_6LAn0k2ifEMlid1ntuc9gWf74' INSTANCE>;

        r11 = (java.util.function.BiConsumer) $r5;

        r9 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r11, r0, r10);

        $r6 = r0.<android.media.MediaRouter2Manager: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r9, 30000L);

        return i0;
    }

    public static android.media.MediaRouter2Manager getInstance(android.content.Context)
    {
        java.lang.Object r0;
        android.media.MediaRouter2Manager r1, $r3, r6;
        java.lang.Throwable $r4;
        android.content.Context r5;

        r5 := @parameter0: android.content.Context;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r5, "context must not be null");

        r0 = <android.media.MediaRouter2Manager: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        $r3 = <android.media.MediaRouter2Manager: android.media.MediaRouter2Manager sInstance>;

        if $r3 != null goto label2;

        r1 = new android.media.MediaRouter2Manager;

        specialinvoke r1.<android.media.MediaRouter2Manager: void <init>(android.content.Context)>(r5);

        <android.media.MediaRouter2Manager: android.media.MediaRouter2Manager sInstance> = r1;

     label2:
        r6 = <android.media.MediaRouter2Manager: android.media.MediaRouter2Manager sInstance>;

        exitmonitor r0;

     label3:
        return r6;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private android.media.MediaRouter2Manager$Client getOrCreateClient()
    {
        android.media.MediaRouter2Manager r0;
        java.lang.Object r1;
        android.media.MediaRouter2Manager$Client $r2, r7, r8;
        java.lang.String $r3;
        android.media.IMediaRouterService $r4;
        android.os.RemoteException $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 = <android.media.MediaRouter2Manager: java.lang.Object sLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client mClient>;

        if $r2 == null goto label03;

        r7 = r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client mClient>;

        exitmonitor r1;

     label02:
        return r7;

     label03:
        r8 = new android.media.MediaRouter2Manager$Client;

        specialinvoke r8.<android.media.MediaRouter2Manager$Client: void <init>(android.media.MediaRouter2Manager)>(r0);

     label04:
        $r4 = r0.<android.media.MediaRouter2Manager: android.media.IMediaRouterService mMediaRouterService>;

        $r3 = r0.<android.media.MediaRouter2Manager: java.lang.String mPackageName>;

        interfaceinvoke $r4.<android.media.IMediaRouterService: void registerManager(android.media.IMediaRouter2Manager,java.lang.String)>(r8, $r3);

        r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client mClient> = r8;

     label05:
        exitmonitor r1;

     label06:
        return r8;

     label07:
        $r5 := @caughtexception;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Manager", "Unable to register media router manager.", $r5);

     label09:
        exitmonitor r1;

     label10:
        return null;

     label11:
        $r6 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch android.os.RemoteException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void handleTransferTimeout(android.media.MediaRouter2Manager$TransferRequest)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRouter2Manager$TransferRequest r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;
        android.media.MediaRoute2Info $r3;
        android.media.RoutingSessionInfo $r4;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: android.media.MediaRouter2Manager$TransferRequest;

        $r2 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mTransferRequests>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r1.<android.media.MediaRouter2Manager$TransferRequest: android.media.RoutingSessionInfo mOldSessionInfo>;

        $r3 = r1.<android.media.MediaRouter2Manager$TransferRequest: android.media.MediaRoute2Info mTargetRoute>;

        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifyTransferFailed(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>($r4, $r3);

     label1:
        return;
    }

    public static void lambda$A_6LAn0k2ifEMlid1ntuc9gWf74(android.media.MediaRouter2Manager, android.media.MediaRouter2Manager$TransferRequest)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRouter2Manager$TransferRequest r1;

        r0 := @parameter0: android.media.MediaRouter2Manager;

        r1 := @parameter1: android.media.MediaRouter2Manager$TransferRequest;

        specialinvoke r0.<android.media.MediaRouter2Manager: void handleTransferTimeout(android.media.MediaRouter2Manager$TransferRequest)>(r1);

        return;
    }

    public static android.media.MediaRouter2Manager$Client lambda$X76xPaxqgD0WPDz-D1Lxk5kiurY(android.media.MediaRouter2Manager)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRouter2Manager$Client $r1;

        r0 := @parameter0: android.media.MediaRouter2Manager;

        $r1 = specialinvoke r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client getOrCreateClient()>();

        return $r1;
    }

    static boolean lambda$getDeselectableRoutes$10(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke r0.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    static boolean lambda$getSelectableRoutes$9(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke r0.<java.util.List: boolean contains(java.lang.Object)>(r1);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    static void lambda$notifyRequestFailed$5(android.media.MediaRouter2Manager$CallbackRecord, int)
    {
        android.media.MediaRouter2Manager$CallbackRecord r0;
        int i0;
        android.media.MediaRouter2Manager$Callback $r1;

        r0 := @parameter0: android.media.MediaRouter2Manager$CallbackRecord;

        i0 := @parameter1: int;

        $r1 = r0.<android.media.MediaRouter2Manager$CallbackRecord: android.media.MediaRouter2Manager$Callback mCallback>;

        virtualinvoke $r1.<android.media.MediaRouter2Manager$Callback: void onRequestFailed(int)>(i0);

        return;
    }

    static void lambda$notifyRoutesAdded$0(android.media.MediaRouter2Manager$CallbackRecord, java.util.List)
    {
        android.media.MediaRouter2Manager$CallbackRecord r0;
        java.util.List r1;
        android.media.MediaRouter2Manager$Callback $r2;

        r0 := @parameter0: android.media.MediaRouter2Manager$CallbackRecord;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<android.media.MediaRouter2Manager$CallbackRecord: android.media.MediaRouter2Manager$Callback mCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2Manager$Callback: void onRoutesAdded(java.util.List)>(r1);

        return;
    }

    static void lambda$notifyRoutesChanged$2(android.media.MediaRouter2Manager$CallbackRecord, java.util.List)
    {
        android.media.MediaRouter2Manager$CallbackRecord r0;
        java.util.List r1;
        android.media.MediaRouter2Manager$Callback $r2;

        r0 := @parameter0: android.media.MediaRouter2Manager$CallbackRecord;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<android.media.MediaRouter2Manager$CallbackRecord: android.media.MediaRouter2Manager$Callback mCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2Manager$Callback: void onRoutesChanged(java.util.List)>(r1);

        return;
    }

    static void lambda$notifyRoutesRemoved$1(android.media.MediaRouter2Manager$CallbackRecord, java.util.List)
    {
        android.media.MediaRouter2Manager$CallbackRecord r0;
        java.util.List r1;
        android.media.MediaRouter2Manager$Callback $r2;

        r0 := @parameter0: android.media.MediaRouter2Manager$CallbackRecord;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<android.media.MediaRouter2Manager$CallbackRecord: android.media.MediaRouter2Manager$Callback mCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2Manager$Callback: void onRoutesRemoved(java.util.List)>(r1);

        return;
    }

    static void lambda$notifySessionReleased$4(android.media.MediaRouter2Manager$CallbackRecord, android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager$CallbackRecord r0;
        android.media.RoutingSessionInfo r1;
        android.media.MediaRouter2Manager$Callback $r2;

        r0 := @parameter0: android.media.MediaRouter2Manager$CallbackRecord;

        r1 := @parameter1: android.media.RoutingSessionInfo;

        $r2 = r0.<android.media.MediaRouter2Manager$CallbackRecord: android.media.MediaRouter2Manager$Callback mCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2Manager$Callback: void onSessionReleased(android.media.RoutingSessionInfo)>(r1);

        return;
    }

    static void lambda$notifySessionUpdated$3(android.media.MediaRouter2Manager$CallbackRecord, android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager$CallbackRecord r0;
        android.media.RoutingSessionInfo r1;
        android.media.MediaRouter2Manager$Callback $r2;

        r0 := @parameter0: android.media.MediaRouter2Manager$CallbackRecord;

        r1 := @parameter1: android.media.RoutingSessionInfo;

        $r2 = r0.<android.media.MediaRouter2Manager$CallbackRecord: android.media.MediaRouter2Manager$Callback mCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2Manager$Callback: void onSessionUpdated(android.media.RoutingSessionInfo)>(r1);

        return;
    }

    static void lambda$notifyTransferFailed$7(android.media.MediaRouter2Manager$CallbackRecord, android.media.RoutingSessionInfo, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2Manager$CallbackRecord r0;
        android.media.RoutingSessionInfo r1;
        android.media.MediaRoute2Info r2;
        android.media.MediaRouter2Manager$Callback $r3;

        r0 := @parameter0: android.media.MediaRouter2Manager$CallbackRecord;

        r1 := @parameter1: android.media.RoutingSessionInfo;

        r2 := @parameter2: android.media.MediaRoute2Info;

        $r3 = r0.<android.media.MediaRouter2Manager$CallbackRecord: android.media.MediaRouter2Manager$Callback mCallback>;

        virtualinvoke $r3.<android.media.MediaRouter2Manager$Callback: void onTransferFailed(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(r1, r2);

        return;
    }

    static void lambda$notifyTransferred$6(android.media.MediaRouter2Manager$CallbackRecord, android.media.RoutingSessionInfo, android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager$CallbackRecord r0;
        android.media.RoutingSessionInfo r1, r2;
        android.media.MediaRouter2Manager$Callback $r3;

        r0 := @parameter0: android.media.MediaRouter2Manager$CallbackRecord;

        r1 := @parameter1: android.media.RoutingSessionInfo;

        r2 := @parameter2: android.media.RoutingSessionInfo;

        $r3 = r0.<android.media.MediaRouter2Manager$CallbackRecord: android.media.MediaRouter2Manager$Callback mCallback>;

        virtualinvoke $r3.<android.media.MediaRouter2Manager$Callback: void onTransferred(android.media.RoutingSessionInfo,android.media.RoutingSessionInfo)>(r1, r2);

        return;
    }

    static void lambda$updatePreferredFeatures$8(android.media.MediaRouter2Manager$CallbackRecord, java.lang.String, java.util.List)
    {
        android.media.MediaRouter2Manager$CallbackRecord r0;
        java.lang.String r1;
        java.util.List r2;
        android.media.MediaRouter2Manager$Callback $r3;

        r0 := @parameter0: android.media.MediaRouter2Manager$CallbackRecord;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        $r3 = r0.<android.media.MediaRouter2Manager$CallbackRecord: android.media.MediaRouter2Manager$Callback mCallback>;

        virtualinvoke $r3.<android.media.MediaRouter2Manager$Callback: void onPreferredFeaturesChanged(java.lang.String,java.util.List)>(r1, r2);

        return;
    }

    private void notifyRoutesAdded(java.util.List)
    {
        android.media.MediaRouter2Manager r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.media.MediaRouter2Manager$CallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.media._$$Lambda$MediaRouter2Manager$EHLJd_emeyLDkF_AwpiyC8_kDdc $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2Manager$CallbackRecord) $r5;

        $r7 = r3.<android.media.MediaRouter2Manager$CallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r6 = new android.media._$$Lambda$MediaRouter2Manager$EHLJd_emeyLDkF_AwpiyC8_kDdc;

        specialinvoke $r6.<android.media._$$Lambda$MediaRouter2Manager$EHLJd_emeyLDkF_AwpiyC8_kDdc: void <init>(android.media.MediaRouter2Manager$CallbackRecord,java.util.List)>(r3, r1);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        goto label1;

     label2:
        return;
    }

    private void notifyRoutesChanged(java.util.List)
    {
        android.media.MediaRouter2Manager r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.media.MediaRouter2Manager$CallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.media._$$Lambda$MediaRouter2Manager$VaiYDmtXUs_bgZtD2f2UpEjT_20 $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2Manager$CallbackRecord) $r5;

        $r7 = r3.<android.media.MediaRouter2Manager$CallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r6 = new android.media._$$Lambda$MediaRouter2Manager$VaiYDmtXUs_bgZtD2f2UpEjT_20;

        specialinvoke $r6.<android.media._$$Lambda$MediaRouter2Manager$VaiYDmtXUs_bgZtD2f2UpEjT_20: void <init>(android.media.MediaRouter2Manager$CallbackRecord,java.util.List)>(r3, r1);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        goto label1;

     label2:
        return;
    }

    private void notifyRoutesRemoved(java.util.List)
    {
        android.media.MediaRouter2Manager r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.media.MediaRouter2Manager$CallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.media._$$Lambda$MediaRouter2Manager$okgw16i6uRs7ol_81WusfPkAk9U $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2Manager$CallbackRecord) $r5;

        $r7 = r3.<android.media.MediaRouter2Manager$CallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r6 = new android.media._$$Lambda$MediaRouter2Manager$okgw16i6uRs7ol_81WusfPkAk9U;

        specialinvoke $r6.<android.media._$$Lambda$MediaRouter2Manager$okgw16i6uRs7ol_81WusfPkAk9U: void <init>(android.media.MediaRouter2Manager$CallbackRecord,java.util.List)>(r3, r1);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        goto label1;

     label2:
        return;
    }

    private void requestCreateSession(android.media.RoutingSessionInfo, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRoute2Info r1;
        int i0;
        android.media.MediaRouter2Manager$Client r2;
        java.lang.String $r3;
        boolean $z0;
        android.media.IMediaRouterService $r4;
        android.os.RemoteException $r5;
        android.media.RoutingSessionInfo r6;

        r0 := @this: android.media.MediaRouter2Manager;

        r6 := @parameter0: android.media.RoutingSessionInfo;

        r1 := @parameter1: android.media.MediaRoute2Info;

        $r3 = virtualinvoke r6.<android.media.RoutingSessionInfo: java.lang.String getClientPackageName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", "requestCreateSession: Can\'t create a session without package name.");

        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifyTransferFailed(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(r6, r1);

        return;

     label1:
        i0 = specialinvoke r0.<android.media.MediaRouter2Manager: int createTransferRequest(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(r6, r1);

        r2 = specialinvoke r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client getOrCreateClient()>();

        if r2 == null goto label5;

     label2:
        $r4 = r0.<android.media.MediaRouter2Manager: android.media.IMediaRouterService mMediaRouterService>;

        interfaceinvoke $r4.<android.media.IMediaRouterService: void requestCreateSessionWithManager(android.media.IMediaRouter2Manager,int,android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(r2, i0, r6, r1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Manager", "requestCreateSession: Failed to send a request", $r5);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void transferToRoute(android.media.RoutingSessionInfo, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRoute2Info r1;
        int i0;
        android.media.MediaRouter2Manager$Client r2;
        android.media.IMediaRouterService $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        android.media.RoutingSessionInfo r6;

        r0 := @this: android.media.MediaRouter2Manager;

        r6 := @parameter0: android.media.RoutingSessionInfo;

        r1 := @parameter1: android.media.MediaRoute2Info;

        i0 = specialinvoke r0.<android.media.MediaRouter2Manager: int createTransferRequest(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(r6, r1);

        r2 = specialinvoke r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client getOrCreateClient()>();

        if r2 == null goto label4;

     label1:
        $r3 = r0.<android.media.MediaRouter2Manager: android.media.IMediaRouterService mMediaRouterService>;

        $r4 = virtualinvoke r6.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        interfaceinvoke $r3.<android.media.IMediaRouterService: void transferToRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>(r2, i0, $r4, r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Manager", "transferToRoute: Failed to send a request.", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void addRoutesOnHandler(java.util.List)
    {
        android.media.MediaRouter2Manager r0;
        java.lang.Object r1, $r4;
        java.util.Iterator r2;
        android.media.MediaRoute2Info r3;
        boolean $z0;
        int $i0;
        java.util.Map $r5;
        java.lang.String $r6;
        java.lang.Throwable $r8;
        java.util.List r9;

        r0 := @this: android.media.MediaRouter2Manager;

        r9 := @parameter0: java.util.List;

        r1 = r0.<android.media.MediaRouter2Manager: java.lang.Object mRoutesLock>;

        entermonitor r1;

     label1:
        r2 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRoute2Info) $r4;

        $r5 = r0.<android.media.MediaRouter2Manager: java.util.Map mRoutes>;

        $r6 = virtualinvoke r3.<android.media.MediaRoute2Info: java.lang.String getId()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r3);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        $i0 = interfaceinvoke r9.<java.util.List: int size()>();

        if $i0 <= 0 goto label6;

        specialinvoke r0.<android.media.MediaRouter2Manager: void notifyRoutesAdded(java.util.List)>(r9);

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void changeRoutesOnHandler(java.util.List)
    {
        android.media.MediaRouter2Manager r0;
        java.lang.Object r1, $r4;
        java.util.Iterator r2;
        android.media.MediaRoute2Info r3;
        boolean $z0;
        int $i0;
        java.util.Map $r5;
        java.lang.String $r6;
        java.lang.Throwable $r8;
        java.util.List r9;

        r0 := @this: android.media.MediaRouter2Manager;

        r9 := @parameter0: java.util.List;

        r1 = r0.<android.media.MediaRouter2Manager: java.lang.Object mRoutesLock>;

        entermonitor r1;

     label1:
        r2 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRoute2Info) $r4;

        $r5 = r0.<android.media.MediaRouter2Manager: java.util.Map mRoutes>;

        $r6 = virtualinvoke r3.<android.media.MediaRoute2Info: java.lang.String getId()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r3);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        $i0 = interfaceinvoke r9.<java.util.List: int size()>();

        if $i0 <= 0 goto label6;

        specialinvoke r0.<android.media.MediaRouter2Manager: void notifyRoutesChanged(java.util.List)>(r9);

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void createSessionOnHandler(int, android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        int i0, $i1;
        android.media.RoutingSessionInfo r1, $r8, $r13, $r18, $r19;
        java.util.concurrent.CopyOnWriteArrayList $r2, $r3;
        boolean $z0, $z1, $z2;
        java.util.List $r4, $r16;
        java.lang.String $r5, $r6, $r7, $r10, $r11, $r12, $r15, $r17;
        java.lang.StringBuilder $r9, $r14;
        java.lang.Object $r20;
        java.util.Iterator r21;
        android.media.MediaRouter2Manager$TransferRequest r22;
        android.media.MediaRoute2Info r23;

        r0 := @this: android.media.MediaRouter2Manager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.RoutingSessionInfo;

        $r2 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mTransferRequests>;

        r21 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        r22 = null;

        $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r20 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (android.media.MediaRouter2Manager$TransferRequest) $r20;

        $i1 = r22.<android.media.MediaRouter2Manager$TransferRequest: int mRequestId>;

        if $i1 != i0 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        if r22 != null goto label4;

        return;

     label4:
        $r3 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mTransferRequests>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r22);

        r23 = r22.<android.media.MediaRouter2Manager$TransferRequest: android.media.MediaRoute2Info mTargetRoute>;

        if r1 != null goto label5;

        $r19 = r22.<android.media.MediaRouter2Manager$TransferRequest: android.media.RoutingSessionInfo mOldSessionInfo>;

        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifyTransferFailed(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>($r19, r23);

        return;

     label5:
        $r4 = virtualinvoke r1.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

        $r5 = virtualinvoke r23.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>($r5);

        if $z1 != 0 goto label6;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The session does not contain the requested route. (requestedRouteId=");

        $r15 = virtualinvoke r23.<android.media.MediaRoute2Info: java.lang.String getId()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actualRoutes=");

        $r16 = virtualinvoke r1.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", $r17);

        $r18 = r22.<android.media.MediaRouter2Manager$TransferRequest: android.media.RoutingSessionInfo mOldSessionInfo>;

        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifyTransferFailed(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>($r18, r23);

        return;

     label6:
        $r6 = virtualinvoke r23.<android.media.MediaRoute2Info: java.lang.String getProviderId()>();

        $r7 = virtualinvoke r1.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r6, $r7);

        if $z2 != 0 goto label7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The session\'s provider ID does not match the requested route\'s. (requested route\'s providerId=");

        $r10 = virtualinvoke r23.<android.media.MediaRoute2Info: java.lang.String getProviderId()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual providerId=");

        $r11 = virtualinvoke r1.<android.media.RoutingSessionInfo: java.lang.String getProviderId()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", $r12);

        $r13 = r22.<android.media.MediaRouter2Manager$TransferRequest: android.media.RoutingSessionInfo mOldSessionInfo>;

        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifyTransferFailed(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>($r13, r23);

        return;

     label7:
        $r8 = r22.<android.media.MediaRouter2Manager$TransferRequest: android.media.RoutingSessionInfo mOldSessionInfo>;

        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifyTransferred(android.media.RoutingSessionInfo,android.media.RoutingSessionInfo)>($r8, r1);

        return;
    }

    public void deselectRoute(android.media.RoutingSessionInfo, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRoute2Info r1;
        android.media.MediaRouter2Manager$Client r2;
        int i0;
        java.util.List $r5, $r7;
        java.lang.String $r6, $r8, $r11, $r15, $r19;
        boolean $z0, $z1;
        java.util.concurrent.atomic.AtomicInteger $r9;
        android.media.IMediaRouterService $r10;
        java.lang.StringBuilder $r12, $r16;
        android.os.RemoteException $r20;
        android.media.RoutingSessionInfo r21;

        r0 := @this: android.media.MediaRouter2Manager;

        r21 := @parameter0: android.media.RoutingSessionInfo;

        r1 := @parameter1: android.media.MediaRoute2Info;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r21, "sessionInfo must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "route must not be null");

        $r5 = virtualinvoke r21.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

        $r6 = virtualinvoke r1.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring deselecting a route that is not selected. route=");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", $r19);

        return;

     label1:
        $r7 = virtualinvoke r21.<android.media.RoutingSessionInfo: java.util.List getDeselectableRoutes()>();

        $r8 = virtualinvoke r1.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = interfaceinvoke $r7.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z1 != 0 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring deselecting a non-deselectable route=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", $r15);

        return;

     label2:
        r2 = specialinvoke r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client getOrCreateClient()>();

        if r2 == null goto label6;

     label3:
        $r9 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.atomic.AtomicInteger mNextRequestId>;

        i0 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r10 = r0.<android.media.MediaRouter2Manager: android.media.IMediaRouterService mMediaRouterService>;

        $r11 = virtualinvoke r21.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        interfaceinvoke $r10.<android.media.IMediaRouterService: void deselectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>(r2, i0, $r11, r1);

     label4:
        goto label6;

     label5:
        $r20 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Manager", "deselectRoute: Failed to send a request.", $r20);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.util.List getActiveSessions()
    {
        android.media.MediaRouter2Manager r0;
        java.util.List $r1, r5;
        android.media.IMediaRouterService $r2;
        android.os.RemoteException $r3;
        android.media.MediaRouter2Manager$Client r4;

        r0 := @this: android.media.MediaRouter2Manager;

        r4 = specialinvoke r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client getOrCreateClient()>();

        if r4 == null goto label4;

     label1:
        $r2 = r0.<android.media.MediaRouter2Manager: android.media.IMediaRouterService mMediaRouterService>;

        r5 = interfaceinvoke $r2.<android.media.IMediaRouterService: java.util.List getActiveSessions(android.media.IMediaRouter2Manager)>(r4);

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Manager", "Unable to get sessions. Service probably died.", $r3);

     label4:
        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAllRoutes()
    {
        android.media.MediaRouter2Manager r0;
        java.lang.Object r1;
        java.util.ArrayList $r2;
        java.util.Map $r3;
        java.util.Collection $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.MediaRouter2Manager;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = r0.<android.media.MediaRouter2Manager: java.lang.Object mRoutesLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.MediaRouter2Manager: java.util.Map mRoutes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        exitmonitor r1;

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getAvailableRoutes(java.lang.String)
    {
        android.media.MediaRouter2Manager r0;
        int $i0, $i1;
        java.lang.Object $r2;
        android.media.RoutingSessionInfo $r3;
        java.util.List $r4, r6;
        java.lang.String r5;

        r0 := @this: android.media.MediaRouter2Manager;

        r5 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r5, "packageName must not be null");

        r6 = virtualinvoke r0.<android.media.MediaRouter2Manager: java.util.List getRoutingSessions(java.lang.String)>(r5);

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r2 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (android.media.RoutingSessionInfo) $r2;

        $r4 = virtualinvoke r0.<android.media.MediaRouter2Manager: java.util.List getAvailableRoutesForRoutingSession(android.media.RoutingSessionInfo)>($r3);

        return $r4;
    }

    public java.util.List getAvailableRoutesForRoutingSession(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        java.util.Iterator r2;
        android.media.MediaRoute2Info r3;
        java.util.ArrayList $r5;
        java.util.concurrent.ConcurrentMap $r6;
        java.lang.Object $r7, $r10, r20;
        java.util.Map $r8;
        java.util.Collection $r9;
        boolean $z0, $z2, $z3, $z4;
        java.util.List $r11, $r13, r18, r19;
        java.lang.String $r12, $r14, r17;
        java.lang.Throwable $r15;
        android.media.RoutingSessionInfo r16;

        r0 := @this: android.media.MediaRouter2Manager;

        r16 := @parameter0: android.media.RoutingSessionInfo;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r16, "sessionInfo must not be null");

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r17 = virtualinvoke r16.<android.media.RoutingSessionInfo: java.lang.String getClientPackageName()>();

        $r6 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.ConcurrentMap mPreferredFeaturesMap>;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r17);

        r18 = (java.util.List) $r7;

        r19 = r18;

        if r18 != null goto label01;

        r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label01:
        r20 = r0.<android.media.MediaRouter2Manager: java.lang.Object mRoutesLock>;

        entermonitor r20;

     label02:
        $r8 = r0.<android.media.MediaRouter2Manager: java.util.Map mRoutes>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRoute2Info) $r10;

        $z0 = virtualinvoke r3.<android.media.MediaRoute2Info: boolean hasAnyFeatures(java.util.Collection)>(r19);

        if $z0 != 0 goto label04;

        $r11 = virtualinvoke r16.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

        $r12 = virtualinvoke r3.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z2 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>($r12);

        if $z2 != 0 goto label04;

        $r13 = virtualinvoke r16.<android.media.RoutingSessionInfo: java.util.List getTransferableRoutes()>();

        $r14 = virtualinvoke r3.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z3 = interfaceinvoke $r13.<java.util.List: boolean contains(java.lang.Object)>($r14);

        if $z3 == 0 goto label05;

     label04:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

     label05:
        goto label03;

     label06:
        exitmonitor r20;

     label07:
        return $r5;

     label08:
        $r15 := @caughtexception;

     label09:
        exitmonitor r20;

     label10:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public java.util.List getDeselectableRoutes(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        java.lang.Object r1, $r9;
        java.util.List $r3, r12, r18;
        java.util.stream.Stream $r5, $r7, r13, r15;
        android.media.'-$$Lambda$8fo3R-Przkq5mg2wxR3lAN3cgNY' $r6;
        java.util.stream.Collector $r8;
        java.lang.Throwable $r10;
        android.media.RoutingSessionInfo r11;
        java.util.Map r16;
        android.media._$$Lambda$MediaRouter2Manager$kLakEUmZ1WmAktt2ie1ETgzRYRw r20;
        android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA r21;
        java.util.function.Predicate r22;

        r0 := @this: android.media.MediaRouter2Manager;

        r11 := @parameter0: android.media.RoutingSessionInfo;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r11, "sessionInfo must not be null");

        r12 = virtualinvoke r11.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

        r1 = r0.<android.media.MediaRouter2Manager: java.lang.Object mRoutesLock>;

        entermonitor r1;

     label1:
        $r3 = virtualinvoke r11.<android.media.RoutingSessionInfo: java.util.List getDeselectableRoutes()>();

        r13 = interfaceinvoke $r3.<java.util.List: java.util.stream.Stream stream()>();

        r20 = new android.media._$$Lambda$MediaRouter2Manager$kLakEUmZ1WmAktt2ie1ETgzRYRw;

        specialinvoke r20.<android.media._$$Lambda$MediaRouter2Manager$kLakEUmZ1WmAktt2ie1ETgzRYRw: void <init>(java.util.List)>(r12);

        r15 = interfaceinvoke r13.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r20);

        r16 = r0.<android.media.MediaRouter2Manager: java.util.Map mRoutes>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r16);

        r21 = new android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA;

        specialinvoke r21.<android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA: void <init>(java.util.Map)>(r16);

        $r5 = interfaceinvoke r15.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r21);

        $r6 = <android.media._$$Lambda$8fo3R_Przkq5mg2wxR3lAN3cgNY: android.media.'-$$Lambda$8fo3R-Przkq5mg2wxR3lAN3cgNY' INSTANCE>;

        r22 = (java.util.function.Predicate) $r6;

        $r7 = interfaceinvoke $r5.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r22);

        $r8 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r9 = interfaceinvoke $r7.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r8);

        r18 = (java.util.List) $r9;

        exitmonitor r1;

     label2:
        return r18;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.media.session.MediaController getMediaControllerForRoutingSession(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        android.media.RoutingSessionInfo r1;
        java.util.Iterator r2;
        android.media.session.MediaController r3;
        android.media.session.MediaSessionManager $r4;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: android.media.RoutingSessionInfo;

        $r4 = r0.<android.media.MediaRouter2Manager: android.media.session.MediaSessionManager mMediaSessionManager>;

        $r5 = virtualinvoke $r4.<android.media.session.MediaSessionManager: java.util.List getActiveSessions(android.content.ComponentName)>(null);

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.session.MediaController) $r6;

        $z1 = specialinvoke r0.<android.media.MediaRouter2Manager: boolean areSessionsMatched(android.media.session.MediaController,android.media.RoutingSessionInfo)>(r3, r1);

        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    public android.media.RoutingSessionInfo getRoutingSessionForMediaController(android.media.session.MediaController)
    {
        android.media.MediaRouter2Manager r0;
        android.media.session.MediaController r1;
        java.util.Iterator r2;
        int $i0;
        java.util.List $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        android.media.RoutingSessionInfo$Builder $r5, $r8;
        android.media.RoutingSessionInfo $r6, $r9, r11;
        java.lang.String $r7;
        android.media.session.MediaController$PlaybackInfo r10;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: android.media.session.MediaController;

        r10 = virtualinvoke r1.<android.media.session.MediaController: android.media.session.MediaController$PlaybackInfo getPlaybackInfo()>();

        if r10 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r10.<android.media.session.MediaController$PlaybackInfo: int getPlaybackType()>();

        if $i0 != 1 goto label2;

        $r5 = new android.media.RoutingSessionInfo$Builder;

        $r6 = virtualinvoke r0.<android.media.MediaRouter2Manager: android.media.RoutingSessionInfo getSystemRoutingSession()>();

        specialinvoke $r5.<android.media.RoutingSessionInfo$Builder: void <init>(android.media.RoutingSessionInfo)>($r6);

        $r7 = virtualinvoke r1.<android.media.session.MediaController: java.lang.String getPackageName()>();

        $r8 = virtualinvoke $r5.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setClientPackageName(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo build()>();

        return $r9;

     label2:
        $r3 = virtualinvoke r0.<android.media.MediaRouter2Manager: java.util.List getActiveSessions()>();

        r2 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r11 = (android.media.RoutingSessionInfo) $r4;

        $z1 = virtualinvoke r11.<android.media.RoutingSessionInfo: boolean isSystemSession()>();

        if $z1 != 0 goto label4;

        $z2 = specialinvoke r0.<android.media.MediaRouter2Manager: boolean areSessionsMatched(android.media.session.MediaController,android.media.RoutingSessionInfo)>(r1, r11);

        if $z2 == 0 goto label4;

        return r11;

     label4:
        goto label3;

     label5:
        return null;
    }

    public java.util.List getRoutingSessions(java.lang.String)
    {
        android.media.MediaRouter2Manager r0;
        java.lang.String r1, $r9;
        java.util.Iterator r3;
        android.media.RoutingSessionInfo r4, $r12;
        java.util.ArrayList $r6;
        java.util.List $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8;
        android.media.RoutingSessionInfo$Builder $r10, $r11;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "packageName must not be null");

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = virtualinvoke r0.<android.media.MediaRouter2Manager: java.util.List getActiveSessions()>();

        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.media.RoutingSessionInfo) $r8;

        $z1 = virtualinvoke r4.<android.media.RoutingSessionInfo: boolean isSystemSession()>();

        if $z1 == 0 goto label2;

        $r10 = new android.media.RoutingSessionInfo$Builder;

        specialinvoke $r10.<android.media.RoutingSessionInfo$Builder: void <init>(android.media.RoutingSessionInfo)>(r4);

        $r11 = virtualinvoke $r10.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setClientPackageName(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo build()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label3;

     label2:
        $r9 = virtualinvoke r4.<android.media.RoutingSessionInfo: java.lang.String getClientPackageName()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r9, r1);

        if $z2 == 0 goto label3;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        goto label1;

     label4:
        return $r6;
    }

    public java.util.List getSelectableRoutes(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        java.lang.Object r1, $r9;
        java.util.List $r3, r12, r18;
        java.util.stream.Stream $r5, $r7, r13, r15;
        android.media.'-$$Lambda$8fo3R-Przkq5mg2wxR3lAN3cgNY' $r6;
        java.util.stream.Collector $r8;
        java.lang.Throwable $r10;
        android.media.RoutingSessionInfo r11;
        java.util.Map r16;
        android.media._$$Lambda$MediaRouter2Manager$EwA0DuTJgJEWQVNlePEqNDMh4_s r20;
        android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA r21;
        java.util.function.Predicate r22;

        r0 := @this: android.media.MediaRouter2Manager;

        r11 := @parameter0: android.media.RoutingSessionInfo;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r11, "sessionInfo must not be null");

        r12 = virtualinvoke r11.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

        r1 = r0.<android.media.MediaRouter2Manager: java.lang.Object mRoutesLock>;

        entermonitor r1;

     label1:
        $r3 = virtualinvoke r11.<android.media.RoutingSessionInfo: java.util.List getSelectableRoutes()>();

        r13 = interfaceinvoke $r3.<java.util.List: java.util.stream.Stream stream()>();

        r20 = new android.media._$$Lambda$MediaRouter2Manager$EwA0DuTJgJEWQVNlePEqNDMh4_s;

        specialinvoke r20.<android.media._$$Lambda$MediaRouter2Manager$EwA0DuTJgJEWQVNlePEqNDMh4_s: void <init>(java.util.List)>(r12);

        r15 = interfaceinvoke r13.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r20);

        r16 = r0.<android.media.MediaRouter2Manager: java.util.Map mRoutes>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r16);

        r21 = new android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA;

        specialinvoke r21.<android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA: void <init>(java.util.Map)>(r16);

        $r5 = interfaceinvoke r15.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r21);

        $r6 = <android.media._$$Lambda$8fo3R_Przkq5mg2wxR3lAN3cgNY: android.media.'-$$Lambda$8fo3R-Przkq5mg2wxR3lAN3cgNY' INSTANCE>;

        r22 = (java.util.function.Predicate) $r6;

        $r7 = interfaceinvoke $r5.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r22);

        $r8 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r9 = interfaceinvoke $r7.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r8);

        r18 = (java.util.List) $r9;

        exitmonitor r1;

     label2:
        return r18;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getSelectedRoutes(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        java.lang.Object r1, $r11;
        java.util.Map r2;
        java.util.List $r5, r15;
        java.util.stream.Stream $r7, $r9, r14;
        android.media.'-$$Lambda$8fo3R-Przkq5mg2wxR3lAN3cgNY' $r8;
        java.util.stream.Collector $r10;
        java.lang.Throwable $r12;
        android.media.RoutingSessionInfo r13;
        android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA r17;
        java.util.function.Predicate r18;

        r0 := @this: android.media.MediaRouter2Manager;

        r13 := @parameter0: android.media.RoutingSessionInfo;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r13, "sessionInfo must not be null");

        r1 = r0.<android.media.MediaRouter2Manager: java.lang.Object mRoutesLock>;

        entermonitor r1;

     label1:
        $r5 = virtualinvoke r13.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

        r14 = interfaceinvoke $r5.<java.util.List: java.util.stream.Stream stream()>();

        r2 = r0.<android.media.MediaRouter2Manager: java.util.Map mRoutes>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        r17 = new android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA;

        specialinvoke r17.<android.media._$$Lambda$0KjW5dKQDNOkejDzbQIfcK35kWA: void <init>(java.util.Map)>(r2);

        $r7 = interfaceinvoke r14.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(r17);

        $r8 = <android.media._$$Lambda$8fo3R_Przkq5mg2wxR3lAN3cgNY: android.media.'-$$Lambda$8fo3R-Przkq5mg2wxR3lAN3cgNY' INSTANCE>;

        r18 = (java.util.function.Predicate) $r8;

        $r9 = interfaceinvoke $r7.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(r18);

        $r10 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $r11 = interfaceinvoke $r9.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r10);

        r15 = (java.util.List) $r11;

        exitmonitor r1;

     label2:
        return r15;

     label3:
        $r12 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.media.RoutingSessionInfo getSystemRoutingSession()
    {
        android.media.MediaRouter2Manager r0;
        java.util.Iterator r1;
        android.media.RoutingSessionInfo r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;
        java.lang.Object $r5;

        r0 := @this: android.media.MediaRouter2Manager;

        $r3 = virtualinvoke r0.<android.media.MediaRouter2Manager: java.util.List getActiveSessions()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.media.RoutingSessionInfo) $r5;

        $z1 = virtualinvoke r2.<android.media.RoutingSessionInfo: boolean isSystemSession()>();

        if $z1 == 0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No system routing session");

        throw $r4;
    }

    void handleFailureOnHandler(int, int)
    {
        android.media.MediaRouter2Manager r0;
        int i0, i1, $i2;
        java.util.Iterator r1;
        java.util.concurrent.CopyOnWriteArrayList $r2, $r3;
        boolean $z0;
        android.media.MediaRoute2Info $r4;
        android.media.RoutingSessionInfo $r5;
        java.lang.Object $r6;
        android.media.MediaRouter2Manager$TransferRequest r7;

        r0 := @this: android.media.MediaRouter2Manager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mTransferRequests>;

        r1 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        r7 = null;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.media.MediaRouter2Manager$TransferRequest) $r6;

        $i2 = r7.<android.media.MediaRouter2Manager$TransferRequest: int mRequestId>;

        if $i2 != i0 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        if r7 == null goto label4;

        $r3 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mTransferRequests>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r7);

        $r5 = r7.<android.media.MediaRouter2Manager$TransferRequest: android.media.RoutingSessionInfo mOldSessionInfo>;

        $r4 = r7.<android.media.MediaRouter2Manager$TransferRequest: android.media.MediaRoute2Info mTargetRoute>;

        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifyTransferFailed(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>($r5, $r4);

        return;

     label4:
        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifyRequestFailed(int)>(i1);

        return;
    }

    void handleSessionsUpdatedOnHandler(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        android.media.RoutingSessionInfo r1, $r6, $r13;
        java.util.Iterator r2;
        android.media.MediaRouter2Manager$TransferRequest r3;
        java.util.concurrent.CopyOnWriteArrayList $r4, $r12;
        java.lang.Object $r5;
        java.lang.String $r7, $r8, $r11;
        boolean $z0, $z1, $z3;
        java.util.List $r9;
        android.media.MediaRoute2Info $r10;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: android.media.RoutingSessionInfo;

        $r4 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mTransferRequests>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2Manager$TransferRequest) $r5;

        $r6 = r3.<android.media.MediaRouter2Manager$TransferRequest: android.media.RoutingSessionInfo mOldSessionInfo>;

        $r7 = virtualinvoke $r6.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        $r8 = virtualinvoke r1.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r7, $r8);

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $r9 = virtualinvoke r1.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

        $r10 = r3.<android.media.MediaRouter2Manager$TransferRequest: android.media.MediaRoute2Info mTargetRoute>;

        $r11 = virtualinvoke $r10.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>($r11);

        if $z1 == 0 goto label3;

        $r12 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mTransferRequests>;

        virtualinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r3);

        $r13 = r3.<android.media.MediaRouter2Manager$TransferRequest: android.media.RoutingSessionInfo mOldSessionInfo>;

        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifyTransferred(android.media.RoutingSessionInfo,android.media.RoutingSessionInfo)>($r13, r1);

        goto label4;

     label3:
        goto label1;

     label4:
        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifySessionUpdated(android.media.RoutingSessionInfo)>(r1);

        return;
    }

    void notifyRequestFailed(int)
    {
        android.media.MediaRouter2Manager r0;
        int i0;
        java.util.Iterator r1;
        android.media.MediaRouter2Manager$CallbackRecord r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.media._$$Lambda$MediaRouter2Manager$r2vzZsEyRJDQIJgQnYSaKy7jmX4 $r5;
        java.util.concurrent.Executor $r6;

        r0 := @this: android.media.MediaRouter2Manager;

        i0 := @parameter0: int;

        $r3 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        r1 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.media.MediaRouter2Manager$CallbackRecord) $r4;

        $r6 = r2.<android.media.MediaRouter2Manager$CallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r5 = new android.media._$$Lambda$MediaRouter2Manager$r2vzZsEyRJDQIJgQnYSaKy7jmX4;

        specialinvoke $r5.<android.media._$$Lambda$MediaRouter2Manager$r2vzZsEyRJDQIJgQnYSaKy7jmX4: void <init>(android.media.MediaRouter2Manager$CallbackRecord,int)>(r2, i0);

        interfaceinvoke $r6.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        goto label1;

     label2:
        return;
    }

    void notifySessionReleased(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        android.media.RoutingSessionInfo r1;
        java.util.Iterator r2;
        android.media.MediaRouter2Manager$CallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.media._$$Lambda$MediaRouter2Manager$KUHGEkWGlaVfd3Zi4oigZVFdRC4 $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: android.media.RoutingSessionInfo;

        $r4 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2Manager$CallbackRecord) $r5;

        $r7 = r3.<android.media.MediaRouter2Manager$CallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r6 = new android.media._$$Lambda$MediaRouter2Manager$KUHGEkWGlaVfd3Zi4oigZVFdRC4;

        specialinvoke $r6.<android.media._$$Lambda$MediaRouter2Manager$KUHGEkWGlaVfd3Zi4oigZVFdRC4: void <init>(android.media.MediaRouter2Manager$CallbackRecord,android.media.RoutingSessionInfo)>(r3, r1);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        goto label1;

     label2:
        return;
    }

    void notifySessionUpdated(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        android.media.RoutingSessionInfo r1;
        java.util.Iterator r2;
        android.media.MediaRouter2Manager$CallbackRecord r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.media._$$Lambda$MediaRouter2Manager$Wc_lT54fkpr3qSlIG7DSi5PeSVM $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: android.media.RoutingSessionInfo;

        $r4 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRouter2Manager$CallbackRecord) $r5;

        $r7 = r3.<android.media.MediaRouter2Manager$CallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r6 = new android.media._$$Lambda$MediaRouter2Manager$Wc_lT54fkpr3qSlIG7DSi5PeSVM;

        specialinvoke $r6.<android.media._$$Lambda$MediaRouter2Manager$Wc_lT54fkpr3qSlIG7DSi5PeSVM: void <init>(android.media.MediaRouter2Manager$CallbackRecord,android.media.RoutingSessionInfo)>(r3, r1);

        interfaceinvoke $r7.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        goto label1;

     label2:
        return;
    }

    void notifyTransferFailed(android.media.RoutingSessionInfo, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2Manager r0;
        android.media.RoutingSessionInfo r1;
        android.media.MediaRoute2Info r2;
        java.util.Iterator r3;
        android.media.MediaRouter2Manager$CallbackRecord r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.media._$$Lambda$MediaRouter2Manager$U66215BPr7th85YZ9Hpd5OVMOgU $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: android.media.RoutingSessionInfo;

        r2 := @parameter1: android.media.MediaRoute2Info;

        $r5 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        r3 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.media.MediaRouter2Manager$CallbackRecord) $r6;

        $r8 = r4.<android.media.MediaRouter2Manager$CallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r7 = new android.media._$$Lambda$MediaRouter2Manager$U66215BPr7th85YZ9Hpd5OVMOgU;

        specialinvoke $r7.<android.media._$$Lambda$MediaRouter2Manager$U66215BPr7th85YZ9Hpd5OVMOgU: void <init>(android.media.MediaRouter2Manager$CallbackRecord,android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(r4, r1, r2);

        interfaceinvoke $r8.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    void notifyTransferred(android.media.RoutingSessionInfo, android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        android.media.RoutingSessionInfo r1, r2;
        java.util.Iterator r3;
        android.media.MediaRouter2Manager$CallbackRecord r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.media._$$Lambda$MediaRouter2Manager$woOi9vOXaxYUsZXZ_elbMeI3NFw $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: android.media.RoutingSessionInfo;

        r2 := @parameter1: android.media.RoutingSessionInfo;

        $r5 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        r3 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.media.MediaRouter2Manager$CallbackRecord) $r6;

        $r8 = r4.<android.media.MediaRouter2Manager$CallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r7 = new android.media._$$Lambda$MediaRouter2Manager$woOi9vOXaxYUsZXZ_elbMeI3NFw;

        specialinvoke $r7.<android.media._$$Lambda$MediaRouter2Manager$woOi9vOXaxYUsZXZ_elbMeI3NFw: void <init>(android.media.MediaRouter2Manager$CallbackRecord,android.media.RoutingSessionInfo,android.media.RoutingSessionInfo)>(r4, r1, r2);

        interfaceinvoke $r8.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

        goto label1;

     label2:
        return;
    }

    public void registerCallback(java.util.concurrent.Executor, android.media.MediaRouter2Manager$Callback)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRouter2Manager$Callback r1;
        android.media.MediaRouter2Manager$CallbackRecord $r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0;
        java.util.concurrent.Executor r6;

        r0 := @this: android.media.MediaRouter2Manager;

        r6 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.media.MediaRouter2Manager$Callback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r6, "executor must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "callback must not be null");

        $r4 = new android.media.MediaRouter2Manager$CallbackRecord;

        specialinvoke $r4.<android.media.MediaRouter2Manager$CallbackRecord: void <init>(android.media.MediaRouter2Manager,java.util.concurrent.Executor,android.media.MediaRouter2Manager$Callback)>(r0, r6, r1);

        $r5 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        $z0 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: boolean addIfAbsent(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", "Ignoring to register the same callback twice.");

        return;

     label1:
        return;
    }

    public void releaseSession(android.media.RoutingSessionInfo)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRouter2Manager$Client r1;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r3;
        android.media.IMediaRouterService $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        android.media.RoutingSessionInfo r7;

        r0 := @this: android.media.MediaRouter2Manager;

        r7 := @parameter0: android.media.RoutingSessionInfo;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r7, "sessionInfo must not be null");

        r1 = specialinvoke r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client getOrCreateClient()>();

        if r1 == null goto label4;

     label1:
        $r3 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.atomic.AtomicInteger mNextRequestId>;

        i0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r4 = r0.<android.media.MediaRouter2Manager: android.media.IMediaRouterService mMediaRouterService>;

        $r5 = virtualinvoke r7.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        interfaceinvoke $r4.<android.media.IMediaRouterService: void releaseSessionWithManager(android.media.IMediaRouter2Manager,int,java.lang.String)>(r1, i0, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Manager", "releaseSession: Failed to send a request", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void removeRoutesOnHandler(java.util.List)
    {
        android.media.MediaRouter2Manager r0;
        java.lang.Object r1, $r4;
        java.util.Iterator r2;
        android.media.MediaRoute2Info r3;
        boolean $z0;
        int $i0;
        java.util.Map $r5;
        java.lang.String $r6;
        java.lang.Throwable $r8;
        java.util.List r9;

        r0 := @this: android.media.MediaRouter2Manager;

        r9 := @parameter0: java.util.List;

        r1 = r0.<android.media.MediaRouter2Manager: java.lang.Object mRoutesLock>;

        entermonitor r1;

     label1:
        r2 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRoute2Info) $r4;

        $r5 = r0.<android.media.MediaRouter2Manager: java.util.Map mRoutes>;

        $r6 = virtualinvoke r3.<android.media.MediaRoute2Info: java.lang.String getId()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

     label3:
        goto label2;

     label4:
        exitmonitor r1;

     label5:
        $i0 = interfaceinvoke r9.<java.util.List: int size()>();

        if $i0 <= 0 goto label6;

        specialinvoke r0.<android.media.MediaRouter2Manager: void notifyRoutesRemoved(java.util.List)>(r9);

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void selectRoute(android.media.RoutingSessionInfo, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRoute2Info r1;
        android.media.MediaRouter2Manager$Client r2;
        int i0;
        java.util.List $r5, $r7;
        java.lang.String $r6, $r8, $r11, $r15, $r19;
        boolean $z0, $z1;
        java.util.concurrent.atomic.AtomicInteger $r9;
        android.media.IMediaRouterService $r10;
        java.lang.StringBuilder $r12, $r16;
        android.os.RemoteException $r20;
        android.media.RoutingSessionInfo r21;

        r0 := @this: android.media.MediaRouter2Manager;

        r21 := @parameter0: android.media.RoutingSessionInfo;

        r1 := @parameter1: android.media.MediaRoute2Info;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r21, "sessionInfo must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "route must not be null");

        $r5 = virtualinvoke r21.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

        $r6 = virtualinvoke r1.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring selecting a route that is already selected. route=");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", $r19);

        return;

     label1:
        $r7 = virtualinvoke r21.<android.media.RoutingSessionInfo: java.util.List getSelectableRoutes()>();

        $r8 = virtualinvoke r1.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = interfaceinvoke $r7.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z1 != 0 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring selecting a non-selectable route=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", $r15);

        return;

     label2:
        r2 = specialinvoke r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client getOrCreateClient()>();

        if r2 == null goto label6;

     label3:
        $r9 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.atomic.AtomicInteger mNextRequestId>;

        i0 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r10 = r0.<android.media.MediaRouter2Manager: android.media.IMediaRouterService mMediaRouterService>;

        $r11 = virtualinvoke r21.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        interfaceinvoke $r10.<android.media.IMediaRouterService: void selectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>(r2, i0, $r11, r1);

     label4:
        goto label6;

     label5:
        $r20 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Manager", "selectRoute: Failed to send a request.", $r20);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void selectRoute(java.lang.String, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRoute2Info r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r10, r13;
        int $i1, $i2;
        java.lang.Object $r11;
        android.media.RoutingSessionInfo $r12;
        java.util.List r14;

        r0 := @this: android.media.MediaRouter2Manager;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: android.media.MediaRoute2Info;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r13, "packageName must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "route must not be null");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selecting route. packageName= ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", route=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MR2Manager", $r10);

        r14 = virtualinvoke r0.<android.media.MediaRouter2Manager: java.util.List getRoutingSessions(java.lang.String)>(r13);

        $i1 = interfaceinvoke r14.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r11 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>($i2);

        $r12 = (android.media.RoutingSessionInfo) $r11;

        virtualinvoke r0.<android.media.MediaRouter2Manager: void transfer(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>($r12, r1);

        return;
    }

    public void setRouteVolume(android.media.MediaRoute2Info, int)
    {
        android.media.MediaRouter2Manager r0;
        int i0, i1, $i2, $i4;
        android.media.MediaRouter2Manager$Client r1;
        java.util.concurrent.atomic.AtomicInteger $r3;
        android.media.IMediaRouterService $r4;
        android.os.RemoteException $r5;
        android.media.MediaRoute2Info r6;

        r0 := @this: android.media.MediaRouter2Manager;

        r6 := @parameter0: android.media.MediaRoute2Info;

        i0 := @parameter1: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r6, "route must not be null");

        $i2 = virtualinvoke r6.<android.media.MediaRoute2Info: int getVolumeHandling()>();

        if $i2 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", "setRouteVolume: the route has fixed volume. Ignoring.");

        return;

     label1:
        if i0 < 0 goto label7;

        $i4 = virtualinvoke r6.<android.media.MediaRoute2Info: int getVolumeMax()>();

        if i0 <= $i4 goto label2;

        goto label7;

     label2:
        r1 = specialinvoke r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client getOrCreateClient()>();

        if r1 == null goto label6;

     label3:
        $r3 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.atomic.AtomicInteger mNextRequestId>;

        i1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r4 = r0.<android.media.MediaRouter2Manager: android.media.IMediaRouterService mMediaRouterService>;

        interfaceinvoke $r4.<android.media.IMediaRouterService: void setRouteVolumeWithManager(android.media.IMediaRouter2Manager,int,android.media.MediaRoute2Info,int)>(r1, i1, r6, i0);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Manager", "Unable to set route volume.", $r5);

     label6:
        return;

     label7:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", "setRouteVolume: the target volume is out of range. Ignoring");

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void setSessionVolume(android.media.RoutingSessionInfo, int)
    {
        android.media.MediaRouter2Manager r0;
        int i0, i1, $i2, $i4;
        android.media.MediaRouter2Manager$Client r1;
        java.util.concurrent.atomic.AtomicInteger $r3;
        android.media.IMediaRouterService $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        android.media.RoutingSessionInfo r7;

        r0 := @this: android.media.MediaRouter2Manager;

        r7 := @parameter0: android.media.RoutingSessionInfo;

        i0 := @parameter1: int;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r7, "sessionInfo must not be null");

        $i2 = virtualinvoke r7.<android.media.RoutingSessionInfo: int getVolumeHandling()>();

        if $i2 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", "setSessionVolume: the route has fixed volume. Ignoring.");

        return;

     label1:
        if i0 < 0 goto label7;

        $i4 = virtualinvoke r7.<android.media.RoutingSessionInfo: int getVolumeMax()>();

        if i0 <= $i4 goto label2;

        goto label7;

     label2:
        r1 = specialinvoke r0.<android.media.MediaRouter2Manager: android.media.MediaRouter2Manager$Client getOrCreateClient()>();

        if r1 == null goto label6;

     label3:
        $r3 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.atomic.AtomicInteger mNextRequestId>;

        i1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r4 = r0.<android.media.MediaRouter2Manager: android.media.IMediaRouterService mMediaRouterService>;

        $r5 = virtualinvoke r7.<android.media.RoutingSessionInfo: java.lang.String getId()>();

        interfaceinvoke $r4.<android.media.IMediaRouterService: void setSessionVolumeWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,int)>(r1, i1, $r5, i0);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Manager", "Unable to set session volume.", $r6);

     label6:
        return;

     label7:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", "setSessionVolume: the target volume is out of range. Ignoring");

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void transfer(android.media.RoutingSessionInfo, android.media.MediaRoute2Info)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRoute2Info r1;
        java.lang.StringBuilder r2, $r5;
        java.lang.String $r10, $r12, $r14, $r16, $r18;
        java.util.Map $r11;
        boolean $z0, $z1;
        java.util.List $r13;
        java.lang.Throwable $r19;
        android.media.RoutingSessionInfo r20;
        java.lang.Object r22;

        r0 := @this: android.media.MediaRouter2Manager;

        r20 := @parameter0: android.media.RoutingSessionInfo;

        r1 := @parameter1: android.media.MediaRoute2Info;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r20, "sessionInfo must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "route must not be null");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transferring routing session. session= ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", route=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MR2Manager", $r10);

        r22 = r0.<android.media.MediaRouter2Manager: java.lang.Object mRoutesLock>;

        entermonitor r22;

     label1:
        $r11 = r0.<android.media.MediaRouter2Manager: java.util.Map mRoutes>;

        $r12 = virtualinvoke r1.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z0 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>($r12);

        if $z0 != 0 goto label3;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transfer: Ignoring an unknown route id=");

        $r16 = virtualinvoke r1.<android.media.MediaRoute2Info: java.lang.String getId()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", $r18);

        virtualinvoke r0.<android.media.MediaRouter2Manager: void notifyTransferFailed(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(r20, r1);

        exitmonitor r22;

     label2:
        return;

     label3:
        exitmonitor r22;

     label4:
        $r13 = virtualinvoke r20.<android.media.RoutingSessionInfo: java.util.List getTransferableRoutes()>();

        $r14 = virtualinvoke r1.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = interfaceinvoke $r13.<java.util.List: boolean contains(java.lang.Object)>($r14);

        if $z1 == 0 goto label5;

        specialinvoke r0.<android.media.MediaRouter2Manager: void transferToRoute(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(r20, r1);

        goto label6;

     label5:
        specialinvoke r0.<android.media.MediaRouter2Manager: void requestCreateSession(android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>(r20, r1);

     label6:
        return;

     label7:
        $r19 := @caughtexception;

     label8:
        exitmonitor r22;

     label9:
        throw $r19;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void unregisterCallback(android.media.MediaRouter2Manager$Callback)
    {
        android.media.MediaRouter2Manager r0;
        android.media.MediaRouter2Manager$Callback r1;
        android.media.MediaRouter2Manager$CallbackRecord $r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: android.media.MediaRouter2Manager$Callback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "callback must not be null");

        $r5 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        $r4 = new android.media.MediaRouter2Manager$CallbackRecord;

        specialinvoke $r4.<android.media.MediaRouter2Manager$CallbackRecord: void <init>(android.media.MediaRouter2Manager,java.util.concurrent.Executor,android.media.MediaRouter2Manager$Callback)>(r0, null, r1);

        $z0 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unregisterCallback: Ignore unknown callback. ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Manager", $r9);

        return;

     label1:
        return;
    }

    void updatePreferredFeatures(java.lang.String, java.util.List)
    {
        android.media.MediaRouter2Manager r0;
        java.lang.String r1;
        java.util.List r2, r12;
        java.util.Iterator r3;
        java.util.concurrent.ConcurrentMap $r4, $r10;
        java.lang.Object $r5, $r7;
        boolean $z0, $z1;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        android.media._$$Lambda$MediaRouter2Manager$bwWxXKc_6BGO9bmWeLY4XfIX2lw $r8;
        java.util.concurrent.Executor $r9;
        int $i0;
        android.media.MediaRouter2Manager$CallbackRecord r13;

        r0 := @this: android.media.MediaRouter2Manager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        if r2 != null goto label1;

        $r10 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.ConcurrentMap mPreferredFeaturesMap>;

        interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;

     label1:
        $r4 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.ConcurrentMap mPreferredFeaturesMap>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        r12 = (java.util.List) $r5;

        if r12 != null goto label2;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 == 0 goto label3;

     label2:
        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r2, r12);

        if $z0 == 0 goto label4;

     label3:
        return;

     label4:
        $r6 = r0.<android.media.MediaRouter2Manager: java.util.concurrent.CopyOnWriteArrayList mCallbackRecords>;

        r3 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.media.MediaRouter2Manager$CallbackRecord) $r7;

        $r9 = r13.<android.media.MediaRouter2Manager$CallbackRecord: java.util.concurrent.Executor mExecutor>;

        $r8 = new android.media._$$Lambda$MediaRouter2Manager$bwWxXKc_6BGO9bmWeLY4XfIX2lw;

        specialinvoke $r8.<android.media._$$Lambda$MediaRouter2Manager$bwWxXKc_6BGO9bmWeLY4XfIX2lw: void <init>(android.media.MediaRouter2Manager$CallbackRecord,java.lang.String,java.util.List)>(r13, r1, r2);

        interfaceinvoke $r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r8);

        goto label5;

     label6:
        return;
    }
}
