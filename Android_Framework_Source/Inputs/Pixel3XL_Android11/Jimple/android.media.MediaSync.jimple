public final class android.media.MediaSync extends java.lang.Object
{
    private static final int CB_RETURN_AUDIO_BUFFER;
    private static final int EVENT_CALLBACK;
    private static final int EVENT_SET_CALLBACK;
    public static final int MEDIASYNC_ERROR_AUDIOTRACK_FAIL;
    public static final int MEDIASYNC_ERROR_SURFACE_FAIL;
    private static final java.lang.String TAG;
    private java.util.List mAudioBuffers;
    private android.os.Handler mAudioHandler;
    private final java.lang.Object mAudioLock;
    private android.os.Looper mAudioLooper;
    private java.lang.Thread mAudioThread;
    private android.media.AudioTrack mAudioTrack;
    private android.media.MediaSync$Callback mCallback;
    private android.os.Handler mCallbackHandler;
    private final java.lang.Object mCallbackLock;
    private long mNativeContext;
    private android.media.MediaSync$OnErrorListener mOnErrorListener;
    private android.os.Handler mOnErrorListenerHandler;
    private final java.lang.Object mOnErrorListenerLock;
    private float mPlaybackRate;

    static void <clinit>()
    {
        <android.media.MediaSync: java.lang.String TAG> = "MediaSync";

        <android.media.MediaSync: int MEDIASYNC_ERROR_SURFACE_FAIL> = 2;

        <android.media.MediaSync: int MEDIASYNC_ERROR_AUDIOTRACK_FAIL> = 1;

        <android.media.MediaSync: int EVENT_SET_CALLBACK> = 2;

        <android.media.MediaSync: int EVENT_CALLBACK> = 1;

        <android.media.MediaSync: int CB_RETURN_AUDIO_BUFFER> = 1;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        staticinvoke <android.media.MediaSync: void native_init()>();

        return;
    }

    public void <init>()
    {
        android.media.MediaSync r0;
        java.lang.Object $r1, $r2, $r3;
        java.util.LinkedList $r4;

        r0 := @this: android.media.MediaSync;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaSync: java.lang.Object mCallbackLock> = $r1;

        r0.<android.media.MediaSync: android.os.Handler mCallbackHandler> = null;

        r0.<android.media.MediaSync: android.media.MediaSync$Callback mCallback> = null;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaSync: java.lang.Object mOnErrorListenerLock> = $r2;

        r0.<android.media.MediaSync: android.os.Handler mOnErrorListenerHandler> = null;

        r0.<android.media.MediaSync: android.media.MediaSync$OnErrorListener mOnErrorListener> = null;

        r0.<android.media.MediaSync: java.lang.Thread mAudioThread> = null;

        r0.<android.media.MediaSync: android.os.Handler mAudioHandler> = null;

        r0.<android.media.MediaSync: android.os.Looper mAudioLooper> = null;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaSync: java.lang.Object mAudioLock> = $r3;

        r0.<android.media.MediaSync: android.media.AudioTrack mAudioTrack> = null;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<android.media.MediaSync: java.util.List mAudioBuffers> = $r4;

        r0.<android.media.MediaSync: float mPlaybackRate> = 0.0F;

        specialinvoke r0.<android.media.MediaSync: void native_setup()>();

        return;
    }

    static java.lang.Object access$000(android.media.MediaSync)
    {
        android.media.MediaSync r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.MediaSync;

        $r1 = r0.<android.media.MediaSync: java.lang.Object mAudioLock>;

        return $r1;
    }

    static float access$100(android.media.MediaSync)
    {
        android.media.MediaSync r0;
        float $f0;

        r0 := @parameter0: android.media.MediaSync;

        $f0 = r0.<android.media.MediaSync: float mPlaybackRate>;

        return $f0;
    }

    static android.os.Handler access$1000(android.media.MediaSync)
    {
        android.media.MediaSync r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.media.MediaSync;

        $r1 = r0.<android.media.MediaSync: android.os.Handler mCallbackHandler>;

        return $r1;
    }

    static android.os.Looper access$1102(android.media.MediaSync, android.os.Looper)
    {
        android.media.MediaSync r0;
        android.os.Looper r1;

        r0 := @parameter0: android.media.MediaSync;

        r1 := @parameter1: android.os.Looper;

        r0.<android.media.MediaSync: android.os.Looper mAudioLooper> = r1;

        return r1;
    }

    static android.os.Handler access$1202(android.media.MediaSync, android.os.Handler)
    {
        android.media.MediaSync r0;
        android.os.Handler r1;

        r0 := @parameter0: android.media.MediaSync;

        r1 := @parameter1: android.os.Handler;

        r0.<android.media.MediaSync: android.os.Handler mAudioHandler> = r1;

        return r1;
    }

    static java.util.List access$200(android.media.MediaSync)
    {
        android.media.MediaSync r0;
        java.util.List $r1;

        r0 := @parameter0: android.media.MediaSync;

        $r1 = r0.<android.media.MediaSync: java.util.List mAudioBuffers>;

        return $r1;
    }

    static android.media.AudioTrack access$300(android.media.MediaSync)
    {
        android.media.MediaSync r0;
        android.media.AudioTrack $r1;

        r0 := @parameter0: android.media.MediaSync;

        $r1 = r0.<android.media.MediaSync: android.media.AudioTrack mAudioTrack>;

        return $r1;
    }

    static void access$400(android.media.MediaSync, int, long)
    {
        android.media.MediaSync r0;
        int i0;
        long l1;

        r0 := @parameter0: android.media.MediaSync;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        specialinvoke r0.<android.media.MediaSync: void native_updateQueuedAudioData(int,long)>(i0, l1);

        return;
    }

    static void access$500(android.media.MediaSync, android.media.MediaSync$AudioBuffer)
    {
        android.media.MediaSync r0;
        android.media.MediaSync$AudioBuffer r1;

        r0 := @parameter0: android.media.MediaSync;

        r1 := @parameter1: android.media.MediaSync$AudioBuffer;

        specialinvoke r0.<android.media.MediaSync: void postReturnByteBuffer(android.media.MediaSync$AudioBuffer)>(r1);

        return;
    }

    static void access$600(android.media.MediaSync, long)
    {
        android.media.MediaSync r0;
        long l0;

        r0 := @parameter0: android.media.MediaSync;

        l0 := @parameter1: long;

        specialinvoke r0.<android.media.MediaSync: void postRenderAudio(long)>(l0);

        return;
    }

    static long access$700(android.media.MediaSync)
    {
        android.media.MediaSync r0;
        long $l0;

        r0 := @parameter0: android.media.MediaSync;

        $l0 = specialinvoke r0.<android.media.MediaSync: long native_getPlayTimeForPendingAudioFrames()>();

        return $l0;
    }

    static java.lang.Object access$800(android.media.MediaSync)
    {
        android.media.MediaSync r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.MediaSync;

        $r1 = r0.<android.media.MediaSync: java.lang.Object mCallbackLock>;

        return $r1;
    }

    static android.media.MediaSync$Callback access$900(android.media.MediaSync)
    {
        android.media.MediaSync r0;
        android.media.MediaSync$Callback $r1;

        r0 := @parameter0: android.media.MediaSync;

        $r1 = r0.<android.media.MediaSync: android.media.MediaSync$Callback mCallback>;

        return $r1;
    }

    private void createAudioThread()
    {
        android.media.MediaSync r0;
        android.media.MediaSync$3 $r1;
        java.lang.Object $r2, r6;
        java.lang.Throwable $r3, $r4;

        r0 := @this: android.media.MediaSync;

        $r1 = new android.media.MediaSync$3;

        specialinvoke $r1.<android.media.MediaSync$3: void <init>(android.media.MediaSync)>(r0);

        r0.<android.media.MediaSync: java.lang.Thread mAudioThread> = $r1;

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        r6 = r0.<android.media.MediaSync: java.lang.Object mAudioLock>;

        entermonitor r6;

     label1:
        $r2 = r0.<android.media.MediaSync: java.lang.Object mAudioLock>;

        virtualinvoke $r2.<java.lang.Object: void wait()>();

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r6;

     label6:
        return;

     label7:
        exitmonitor r6;

     label8:
        throw $r4;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label7 to label8 with label3;
    }

    private final native void native_finalize();

    private final native void native_flush();

    private final native long native_getPlayTimeForPendingAudioFrames();

    private final native boolean native_getTimestamp(android.media.MediaTimestamp);

    private static final native void native_init();

    private final native void native_release();

    private final native void native_setAudioTrack(android.media.AudioTrack);

    private native float native_setPlaybackParams(android.media.PlaybackParams);

    private final native void native_setSurface(android.view.Surface);

    private native float native_setSyncParams(android.media.SyncParams);

    private final native void native_setup();

    private final native void native_updateQueuedAudioData(int, long);

    private void postRenderAudio(long)
    {
        android.media.MediaSync r0;
        long l0;
        android.media.MediaSync$1 $r1;
        android.os.Handler $r2;

        r0 := @this: android.media.MediaSync;

        l0 := @parameter0: long;

        $r2 = r0.<android.media.MediaSync: android.os.Handler mAudioHandler>;

        $r1 = new android.media.MediaSync$1;

        specialinvoke $r1.<android.media.MediaSync$1: void <init>(android.media.MediaSync)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, l0);

        return;
    }

    private final void postReturnByteBuffer(android.media.MediaSync$AudioBuffer)
    {
        android.media.MediaSync r0;
        java.lang.Object r1;
        android.os.Handler r2, $r4;
        android.media.MediaSync$2 r3;
        java.lang.Throwable $r5;
        android.media.MediaSync$AudioBuffer r6;

        r0 := @this: android.media.MediaSync;

        r6 := @parameter0: android.media.MediaSync$AudioBuffer;

        r1 = r0.<android.media.MediaSync: java.lang.Object mCallbackLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.media.MediaSync: android.os.Handler mCallbackHandler>;

        if $r4 == null goto label2;

        r2 = r0.<android.media.MediaSync: android.os.Handler mCallbackHandler>;

        r3 = new android.media.MediaSync$2;

        specialinvoke r3.<android.media.MediaSync$2: void <init>(android.media.MediaSync,android.media.MediaSync,android.media.MediaSync$AudioBuffer)>(r0, r0, r6);

        virtualinvoke r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r3);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private final void returnAudioBuffers()
    {
        android.media.MediaSync r0;
        java.lang.Object r1, $r4;
        java.util.List $r2, $r3;
        boolean $z0;
        android.media.MediaSync$AudioBuffer $r5;
        java.lang.Throwable $r6;
        java.util.Iterator r7;

        r0 := @this: android.media.MediaSync;

        r1 = r0.<android.media.MediaSync: java.lang.Object mAudioLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.MediaSync: java.util.List mAudioBuffers>;

        r7 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.media.MediaSync$AudioBuffer) $r4;

        specialinvoke r0.<android.media.MediaSync: void postReturnByteBuffer(android.media.MediaSync$AudioBuffer)>($r5);

     label3:
        goto label2;

     label4:
        $r3 = r0.<android.media.MediaSync: java.util.List mAudioBuffers>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        exitmonitor r1;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final native android.view.Surface createInputSurface();

    protected void finalize()
    {
        android.media.MediaSync r0;

        r0 := @this: android.media.MediaSync;

        specialinvoke r0.<android.media.MediaSync: void native_finalize()>();

        return;
    }

    public void flush()
    {
        android.media.MediaSync r0;
        java.lang.Object r1;
        java.util.List $r2;
        android.os.Handler $r3;
        android.media.AudioTrack $r4, $r5, r7;
        java.lang.Throwable $r6;

        r0 := @this: android.media.MediaSync;

        r1 = r0.<android.media.MediaSync: java.lang.Object mAudioLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.MediaSync: java.util.List mAudioBuffers>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<android.media.MediaSync: android.os.Handler mCallbackHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        exitmonitor r1;

     label2:
        r7 = r0.<android.media.MediaSync: android.media.AudioTrack mAudioTrack>;

        if r7 == null goto label3;

        virtualinvoke r7.<android.media.AudioTrack: void pause()>();

        $r4 = r0.<android.media.MediaSync: android.media.AudioTrack mAudioTrack>;

        virtualinvoke $r4.<android.media.AudioTrack: void flush()>();

        $r5 = r0.<android.media.MediaSync: android.media.AudioTrack mAudioTrack>;

        virtualinvoke $r5.<android.media.AudioTrack: void stop()>();

     label3:
        specialinvoke r0.<android.media.MediaSync: void native_flush()>();

        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public native android.media.PlaybackParams getPlaybackParams();

    public native android.media.SyncParams getSyncParams();

    public android.media.MediaTimestamp getTimestamp()
    {
        android.media.MediaSync r0;
        boolean z0;
        java.lang.Throwable $r1;
        android.media.MediaTimestamp r2;

        r0 := @this: android.media.MediaSync;

     label1:
        r2 = new android.media.MediaTimestamp;

        specialinvoke r2.<android.media.MediaTimestamp: void <init>()>();

        z0 = specialinvoke r0.<android.media.MediaSync: boolean native_getTimestamp(android.media.MediaTimestamp)>(r2);

     label2:
        if z0 == 0 goto label3;

        return r2;

     label3:
        return null;

     label4:
        $r1 := @caughtexception;

        return null;

        catch java.lang.IllegalStateException from label1 to label2 with label4;
    }

    public void queueAudio(java.nio.ByteBuffer, int, long)
    {
        android.media.MediaSync r0;
        int i0;
        long l1;
        java.lang.Object r1;
        java.util.List r2;
        android.media.MediaSync$AudioBuffer r3;
        android.media.AudioTrack $r4;
        java.lang.IllegalStateException $r5;
        java.lang.Thread $r6;
        float $f0;
        double $d0;
        byte $b2;
        java.lang.Throwable $r7;
        java.nio.ByteBuffer r8;

        r0 := @this: android.media.MediaSync;

        r8 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r4 = r0.<android.media.MediaSync: android.media.AudioTrack mAudioTrack>;

        if $r4 == null goto label7;

        $r6 = r0.<android.media.MediaSync: java.lang.Thread mAudioThread>;

        if $r6 == null goto label7;

        r1 = r0.<android.media.MediaSync: java.lang.Object mAudioLock>;

        entermonitor r1;

     label1:
        r2 = r0.<android.media.MediaSync: java.util.List mAudioBuffers>;

        r3 = new android.media.MediaSync$AudioBuffer;

        specialinvoke r3.<android.media.MediaSync$AudioBuffer: void <init>(java.nio.ByteBuffer,int,long)>(r8, i0, l1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

        exitmonitor r1;

     label2:
        $f0 = r0.<android.media.MediaSync: float mPlaybackRate>;

        $d0 = (double) $f0;

        $b2 = $d0 cmpl 0.0;

        if $b2 == 0 goto label3;

        specialinvoke r0.<android.media.MediaSync: void postRenderAudio(long)>(0L);

     label3:
        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r7;

     label7:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AudioTrack is NOT set or audio thread is not created");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final void release()
    {
        android.media.MediaSync r0;
        android.os.Looper r1;
        java.lang.Thread $r2;

        r0 := @this: android.media.MediaSync;

        specialinvoke r0.<android.media.MediaSync: void returnAudioBuffers()>();

        $r2 = r0.<android.media.MediaSync: java.lang.Thread mAudioThread>;

        if $r2 == null goto label1;

        r1 = r0.<android.media.MediaSync: android.os.Looper mAudioLooper>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.os.Looper: void quit()>();

     label1:
        virtualinvoke r0.<android.media.MediaSync: void setCallback(android.media.MediaSync$Callback,android.os.Handler)>(null, null);

        specialinvoke r0.<android.media.MediaSync: void native_release()>();

        return;
    }

    public void setAudioTrack(android.media.AudioTrack)
    {
        android.media.MediaSync r0;
        android.media.AudioTrack r1;
        java.lang.Thread $r2;

        r0 := @this: android.media.MediaSync;

        r1 := @parameter0: android.media.AudioTrack;

        specialinvoke r0.<android.media.MediaSync: void native_setAudioTrack(android.media.AudioTrack)>(r1);

        r0.<android.media.MediaSync: android.media.AudioTrack mAudioTrack> = r1;

        if r1 == null goto label1;

        $r2 = r0.<android.media.MediaSync: java.lang.Thread mAudioThread>;

        if $r2 != null goto label1;

        specialinvoke r0.<android.media.MediaSync: void createAudioThread()>();

     label1:
        return;
    }

    public void setCallback(android.media.MediaSync$Callback, android.os.Handler)
    {
        android.media.MediaSync r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.media.MediaSync$Callback r3;
        android.os.Handler r4, r7;
        android.os.Looper r5, r6;

        r0 := @this: android.media.MediaSync;

        r3 := @parameter0: android.media.MediaSync$Callback;

        r4 := @parameter1: android.os.Handler;

        r1 = r0.<android.media.MediaSync: java.lang.Object mCallbackLock>;

        entermonitor r1;

        if r4 == null goto label03;

     label01:
        r0.<android.media.MediaSync: android.os.Handler mCallbackHandler> = r4;

     label02:
        goto label10;

     label03:
        r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

     label04:
        r6 = r5;

        if r5 != null goto label06;

     label05:
        r6 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

     label06:
        if r6 != null goto label09;

     label07:
        r0.<android.media.MediaSync: android.os.Handler mCallbackHandler> = null;

     label08:
        goto label10;

     label09:
        r7 = new android.os.Handler;

        specialinvoke r7.<android.os.Handler: void <init>(android.os.Looper)>(r6);

        r0.<android.media.MediaSync: android.os.Handler mCallbackHandler> = r7;

     label10:
        r0.<android.media.MediaSync: android.media.MediaSync$Callback mCallback> = r3;

        exitmonitor r1;

     label11:
        return;

     label12:
        $r2 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void setOnErrorListener(android.media.MediaSync$OnErrorListener, android.os.Handler)
    {
        android.media.MediaSync r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.media.MediaSync$OnErrorListener r3;
        android.os.Handler r4, r7;
        android.os.Looper r5, r6;

        r0 := @this: android.media.MediaSync;

        r3 := @parameter0: android.media.MediaSync$OnErrorListener;

        r4 := @parameter1: android.os.Handler;

        r1 = r0.<android.media.MediaSync: java.lang.Object mOnErrorListenerLock>;

        entermonitor r1;

        if r4 == null goto label03;

     label01:
        r0.<android.media.MediaSync: android.os.Handler mOnErrorListenerHandler> = r4;

     label02:
        goto label10;

     label03:
        r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

     label04:
        r6 = r5;

        if r5 != null goto label06;

     label05:
        r6 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

     label06:
        if r6 != null goto label09;

     label07:
        r0.<android.media.MediaSync: android.os.Handler mOnErrorListenerHandler> = null;

     label08:
        goto label10;

     label09:
        r7 = new android.os.Handler;

        specialinvoke r7.<android.os.Handler: void <init>(android.os.Looper)>(r6);

        r0.<android.media.MediaSync: android.os.Handler mOnErrorListenerHandler> = r7;

     label10:
        r0.<android.media.MediaSync: android.media.MediaSync$OnErrorListener mOnErrorListener> = r3;

        exitmonitor r1;

     label11:
        return;

     label12:
        $r2 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void setPlaybackParams(android.media.PlaybackParams)
    {
        android.media.MediaSync r0;
        java.lang.Object r1;
        float f0;
        double $d0;
        byte $b0;
        java.lang.Thread $r2;
        java.lang.Throwable $r3;
        android.media.PlaybackParams r4;

        r0 := @this: android.media.MediaSync;

        r4 := @parameter0: android.media.PlaybackParams;

        r1 = r0.<android.media.MediaSync: java.lang.Object mAudioLock>;

        entermonitor r1;

     label1:
        f0 = specialinvoke r0.<android.media.MediaSync: float native_setPlaybackParams(android.media.PlaybackParams)>(r4);

        r0.<android.media.MediaSync: float mPlaybackRate> = f0;

        exitmonitor r1;

     label2:
        $d0 = (double) f0;

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label3;

        $r2 = r0.<android.media.MediaSync: java.lang.Thread mAudioThread>;

        if $r2 == null goto label3;

        specialinvoke r0.<android.media.MediaSync: void postRenderAudio(long)>(0L);

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setSurface(android.view.Surface)
    {
        android.media.MediaSync r0;
        android.view.Surface r1;

        r0 := @this: android.media.MediaSync;

        r1 := @parameter0: android.view.Surface;

        specialinvoke r0.<android.media.MediaSync: void native_setSurface(android.view.Surface)>(r1);

        return;
    }

    public void setSyncParams(android.media.SyncParams)
    {
        android.media.MediaSync r0;
        java.lang.Object r1;
        float f0;
        double $d0;
        byte $b0;
        java.lang.Thread $r2;
        java.lang.Throwable $r3;
        android.media.SyncParams r4;

        r0 := @this: android.media.MediaSync;

        r4 := @parameter0: android.media.SyncParams;

        r1 = r0.<android.media.MediaSync: java.lang.Object mAudioLock>;

        entermonitor r1;

     label1:
        f0 = specialinvoke r0.<android.media.MediaSync: float native_setSyncParams(android.media.SyncParams)>(r4);

        r0.<android.media.MediaSync: float mPlaybackRate> = f0;

        exitmonitor r1;

     label2:
        $d0 = (double) f0;

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label3;

        $r2 = r0.<android.media.MediaSync: java.lang.Thread mAudioThread>;

        if $r2 == null goto label3;

        specialinvoke r0.<android.media.MediaSync: void postRenderAudio(long)>(0L);

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
