public final class android.media.MediaTranscodeManager$TranscodingRequest extends java.lang.Object
{
    private android.media.MediaFormat mDstFormat;
    private android.net.Uri mDstUri;
    private android.net.Uri mSrcUri;

    private void <init>(android.media.MediaTranscodeManager$TranscodingRequest$Builder)
    {
        android.media.MediaTranscodeManager$TranscodingRequest r0;
        android.media.MediaTranscodeManager$TranscodingRequest$Builder r1;
        android.net.Uri $r2, $r3;
        android.media.MediaFormat $r4;

        r0 := @this: android.media.MediaTranscodeManager$TranscodingRequest;

        r1 := @parameter0: android.media.MediaTranscodeManager$TranscodingRequest$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.media.MediaTranscodeManager$TranscodingRequest$Builder: android.net.Uri access$000(android.media.MediaTranscodeManager$TranscodingRequest$Builder)>(r1);

        r0.<android.media.MediaTranscodeManager$TranscodingRequest: android.net.Uri mSrcUri> = $r2;

        $r3 = staticinvoke <android.media.MediaTranscodeManager$TranscodingRequest$Builder: android.net.Uri access$100(android.media.MediaTranscodeManager$TranscodingRequest$Builder)>(r1);

        r0.<android.media.MediaTranscodeManager$TranscodingRequest: android.net.Uri mDstUri> = $r3;

        $r4 = staticinvoke <android.media.MediaTranscodeManager$TranscodingRequest$Builder: android.media.MediaFormat access$200(android.media.MediaTranscodeManager$TranscodingRequest$Builder)>(r1);

        r0.<android.media.MediaTranscodeManager$TranscodingRequest: android.media.MediaFormat mDstFormat> = $r4;

        return;
    }

    void <init>(android.media.MediaTranscodeManager$TranscodingRequest$Builder, android.media.MediaTranscodeManager$1)
    {
        android.media.MediaTranscodeManager$TranscodingRequest r0;
        android.media.MediaTranscodeManager$TranscodingRequest$Builder r1;
        android.media.MediaTranscodeManager$1 r2;

        r0 := @this: android.media.MediaTranscodeManager$TranscodingRequest;

        r1 := @parameter0: android.media.MediaTranscodeManager$TranscodingRequest$Builder;

        r2 := @parameter1: android.media.MediaTranscodeManager$1;

        specialinvoke r0.<android.media.MediaTranscodeManager$TranscodingRequest: void <init>(android.media.MediaTranscodeManager$TranscodingRequest$Builder)>(r1);

        return;
    }
}
