public final class android.media.ResampleInputStream extends java.io.InputStream
{
    private static final java.lang.String TAG;
    private static final int mFirLength;
    private byte[] mBuf;
    private int mBufCount;
    private java.io.InputStream mInputStream;
    private final byte[] mOneByte;
    private final int mRateIn;
    private final int mRateOut;

    static void <clinit>()
    {
        <android.media.ResampleInputStream: int mFirLength> = 29;

        <android.media.ResampleInputStream: java.lang.String TAG> = "ResampleInputStream";

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        return;
    }

    public void <init>(java.io.InputStream, int, int)
    {
        android.media.ResampleInputStream r0;
        java.io.InputStream r1;
        int i0, i1, $i2;
        byte[] $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.media.ResampleInputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r2 = newarray (byte)[1];

        r0.<android.media.ResampleInputStream: byte[] mOneByte> = $r2;

        $i2 = i1 * 2;

        if i0 != $i2 goto label1;

        r0.<android.media.ResampleInputStream: java.io.InputStream mInputStream> = r1;

        r0.<android.media.ResampleInputStream: int mRateIn> = 2;

        r0.<android.media.ResampleInputStream: int mRateOut> = 1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only support 2:1 at the moment");

        throw $r3;
    }

    private static native void fir21(byte[], int, byte[], int, int);

    public void close() throws java.io.IOException
    {
        android.media.ResampleInputStream r0;
        java.io.InputStream $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.media.ResampleInputStream;

     label1:
        $r2 = r0.<android.media.ResampleInputStream: java.io.InputStream mInputStream>;

        if $r2 == null goto label2;

        $r3 = r0.<android.media.ResampleInputStream: java.io.InputStream mInputStream>;

        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label2:
        r0.<android.media.ResampleInputStream: java.io.InputStream mInputStream> = null;

        return;

     label3:
        $r4 := @caughtexception;

        r0.<android.media.ResampleInputStream: java.io.InputStream mInputStream> = null;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.ResampleInputStream r0;
        java.io.InputStream $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.media.ResampleInputStream;

        $r1 = r0.<android.media.ResampleInputStream: java.io.InputStream mInputStream>;

        if $r1 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<android.media.ResampleInputStream: void close()>();

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("someone forgot to close ResampleInputStream");

        throw $r2;
    }

    public int read() throws java.io.IOException
    {
        android.media.ResampleInputStream r0;
        byte[] $r1, $r2;
        int $i0;
        byte $b1;
        short s2;

        r0 := @this: android.media.ResampleInputStream;

        $r1 = r0.<android.media.ResampleInputStream: byte[] mOneByte>;

        $i0 = virtualinvoke r0.<android.media.ResampleInputStream: int read(byte[],int,int)>($r1, 0, 1);

        if $i0 != 1 goto label1;

        $r2 = r0.<android.media.ResampleInputStream: byte[] mOneByte>;

        $b1 = $r2[0];

        s2 = $b1 & 255;

        goto label2;

     label1:
        s2 = -1;

     label2:
        return s2;
    }

    public int read(byte[]) throws java.io.IOException
    {
        android.media.ResampleInputStream r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: android.media.ResampleInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<android.media.ResampleInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        android.media.ResampleInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31, i32;
        java.io.InputStream $r1, r9;
        java.lang.IllegalStateException $r2;
        byte[] $r3, $r4, r5, r6, r7, r8, r10;

        r0 := @this: android.media.ResampleInputStream;

        r5 := @parameter0: byte[];

        i19 := @parameter1: int;

        i20 := @parameter2: int;

        $r1 = r0.<android.media.ResampleInputStream: java.io.InputStream mInputStream>;

        if $r1 == null goto label8;

        $i2 = i20 / 2;

        $i1 = r0.<android.media.ResampleInputStream: int mRateIn>;

        $i4 = $i2 * $i1;

        $i3 = r0.<android.media.ResampleInputStream: int mRateOut>;

        $i5 = $i4 / $i3;

        $i6 = $i5 + 29;

        i21 = $i6 * 2;

        r6 = r0.<android.media.ResampleInputStream: byte[] mBuf>;

        if r6 != null goto label1;

        $r4 = newarray (byte)[i21];

        r0.<android.media.ResampleInputStream: byte[] mBuf> = $r4;

        goto label2;

     label1:
        $i7 = lengthof r6;

        if i21 <= $i7 goto label2;

        r7 = newarray (byte)[i21];

        $i18 = r0.<android.media.ResampleInputStream: int mBufCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r7, 0, $i18);

        r0.<android.media.ResampleInputStream: byte[] mBuf> = r7;

     label2:
        i0 = r0.<android.media.ResampleInputStream: int mBufCount>;

        $i22 = i0 / 2;

        $i23 = $i22 - 29;

        $i24 = r0.<android.media.ResampleInputStream: int mRateOut>;

        $i25 = $i23 * $i24;

        $i26 = r0.<android.media.ResampleInputStream: int mRateIn>;

        $i27 = $i25 / $i26;

        i28 = $i27 * 2;

        if i28 <= 0 goto label6;

        if i28 >= i20 goto label3;

        i29 = i28;

        goto label4;

     label3:
        $i12 = i20 / 2;

        i29 = $i12 * 2;

     label4:
        $r3 = r0.<android.media.ResampleInputStream: byte[] mBuf>;

        $i13 = i29 / 2;

        staticinvoke <android.media.ResampleInputStream: void fir21(byte[],int,byte[],int,int)>($r3, 0, r5, i19, $i13);

        $i14 = r0.<android.media.ResampleInputStream: int mRateIn>;

        $i16 = $i14 * i29;

        $i15 = r0.<android.media.ResampleInputStream: int mRateOut>;

        i30 = $i16 / $i15;

        $i17 = r0.<android.media.ResampleInputStream: int mBufCount>;

        i31 = $i17 - i30;

        r0.<android.media.ResampleInputStream: int mBufCount> = i31;

        if i31 <= 0 goto label5;

        r8 = r0.<android.media.ResampleInputStream: byte[] mBuf>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, i30, r8, 0, i31);

     label5:
        return i29;

     label6:
        r9 = r0.<android.media.ResampleInputStream: java.io.InputStream mInputStream>;

        r10 = r0.<android.media.ResampleInputStream: byte[] mBuf>;

        $i8 = lengthof r10;

        $i9 = $i8 - i0;

        i32 = virtualinvoke r9.<java.io.InputStream: int read(byte[],int,int)>(r10, i0, $i9);

        if i32 != -1 goto label7;

        return -1;

     label7:
        $i10 = r0.<android.media.ResampleInputStream: int mBufCount>;

        $i11 = $i10 + i32;

        r0.<android.media.ResampleInputStream: int mBufCount> = $i11;

        goto label2;

     label8:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not open");

        throw $r2;
    }
}
