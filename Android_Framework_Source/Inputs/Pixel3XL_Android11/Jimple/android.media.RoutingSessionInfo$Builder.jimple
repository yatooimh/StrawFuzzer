public final class android.media.RoutingSessionInfo$Builder extends java.lang.Object
{
    java.lang.String mClientPackageName;
    android.os.Bundle mControlHints;
    final java.util.List mDeselectableRoutes;
    final java.lang.String mId;
    boolean mIsSystemSession;
    java.lang.CharSequence mName;
    java.lang.String mOwnerPackageName;
    java.lang.String mProviderId;
    final java.util.List mSelectableRoutes;
    final java.util.List mSelectedRoutes;
    final java.util.List mTransferableRoutes;
    int mVolume;
    int mVolumeHandling;
    int mVolumeMax;

    public void <init>(android.media.RoutingSessionInfo)
    {
        android.media.RoutingSessionInfo$Builder r0;
        android.media.RoutingSessionInfo r1;
        java.lang.String $r3, $r5, $r6, $r15;
        java.lang.CharSequence $r4;
        java.util.List $r8, $r10, $r12, $r14, $r18, $r20, $r22, $r24;
        int $i0, $i1, $i2;
        android.os.Bundle $r16;
        boolean $z0;
        android.media.'-$$Lambda$ibOGYFjCUH2v25L-zBCFVaU3qjg' $r17, $r19, $r21, $r23;
        java.util.ArrayList r25, r26, r27, r28;
        java.util.function.UnaryOperator r29, r30, r31, r32;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: android.media.RoutingSessionInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.RoutingSessionInfo$Builder: int mVolumeHandling> = 0;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "sessionInfo must not be null");

        $r3 = r1.<android.media.RoutingSessionInfo: java.lang.String mId>;

        r0.<android.media.RoutingSessionInfo$Builder: java.lang.String mId> = $r3;

        $r4 = r1.<android.media.RoutingSessionInfo: java.lang.CharSequence mName>;

        r0.<android.media.RoutingSessionInfo$Builder: java.lang.CharSequence mName> = $r4;

        $r5 = r1.<android.media.RoutingSessionInfo: java.lang.String mClientPackageName>;

        r0.<android.media.RoutingSessionInfo$Builder: java.lang.String mClientPackageName> = $r5;

        $r6 = r1.<android.media.RoutingSessionInfo: java.lang.String mProviderId>;

        r0.<android.media.RoutingSessionInfo$Builder: java.lang.String mProviderId> = $r6;

        r25 = new java.util.ArrayList;

        $r8 = r1.<android.media.RoutingSessionInfo: java.util.List mSelectedRoutes>;

        specialinvoke r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectedRoutes> = r25;

        r26 = new java.util.ArrayList;

        $r10 = r1.<android.media.RoutingSessionInfo: java.util.List mSelectableRoutes>;

        specialinvoke r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r10);

        r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectableRoutes> = r26;

        r27 = new java.util.ArrayList;

        $r12 = r1.<android.media.RoutingSessionInfo: java.util.List mDeselectableRoutes>;

        specialinvoke r27.<java.util.ArrayList: void <init>(java.util.Collection)>($r12);

        r0.<android.media.RoutingSessionInfo$Builder: java.util.List mDeselectableRoutes> = r27;

        r28 = new java.util.ArrayList;

        $r14 = r1.<android.media.RoutingSessionInfo: java.util.List mTransferableRoutes>;

        specialinvoke r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        r0.<android.media.RoutingSessionInfo$Builder: java.util.List mTransferableRoutes> = r28;

        $r15 = r0.<android.media.RoutingSessionInfo$Builder: java.lang.String mProviderId>;

        if $r15 == null goto label1;

        $r18 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectedRoutes>;

        $r17 = <android.media._$$Lambda$ibOGYFjCUH2v25L_zBCFVaU3qjg: android.media.'-$$Lambda$ibOGYFjCUH2v25L-zBCFVaU3qjg' INSTANCE>;

        r29 = (java.util.function.UnaryOperator) $r17;

        interfaceinvoke $r18.<java.util.List: void replaceAll(java.util.function.UnaryOperator)>(r29);

        $r20 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectableRoutes>;

        $r19 = <android.media._$$Lambda$ibOGYFjCUH2v25L_zBCFVaU3qjg: android.media.'-$$Lambda$ibOGYFjCUH2v25L-zBCFVaU3qjg' INSTANCE>;

        r30 = (java.util.function.UnaryOperator) $r19;

        interfaceinvoke $r20.<java.util.List: void replaceAll(java.util.function.UnaryOperator)>(r30);

        $r22 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mDeselectableRoutes>;

        $r21 = <android.media._$$Lambda$ibOGYFjCUH2v25L_zBCFVaU3qjg: android.media.'-$$Lambda$ibOGYFjCUH2v25L-zBCFVaU3qjg' INSTANCE>;

        r31 = (java.util.function.UnaryOperator) $r21;

        interfaceinvoke $r22.<java.util.List: void replaceAll(java.util.function.UnaryOperator)>(r31);

        $r24 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mTransferableRoutes>;

        $r23 = <android.media._$$Lambda$ibOGYFjCUH2v25L_zBCFVaU3qjg: android.media.'-$$Lambda$ibOGYFjCUH2v25L-zBCFVaU3qjg' INSTANCE>;

        r32 = (java.util.function.UnaryOperator) $r23;

        interfaceinvoke $r24.<java.util.List: void replaceAll(java.util.function.UnaryOperator)>(r32);

     label1:
        $i0 = r1.<android.media.RoutingSessionInfo: int mVolumeHandling>;

        r0.<android.media.RoutingSessionInfo$Builder: int mVolumeHandling> = $i0;

        $i1 = r1.<android.media.RoutingSessionInfo: int mVolumeMax>;

        r0.<android.media.RoutingSessionInfo$Builder: int mVolumeMax> = $i1;

        $i2 = r1.<android.media.RoutingSessionInfo: int mVolume>;

        r0.<android.media.RoutingSessionInfo$Builder: int mVolume> = $i2;

        $r16 = r1.<android.media.RoutingSessionInfo: android.os.Bundle mControlHints>;

        r0.<android.media.RoutingSessionInfo$Builder: android.os.Bundle mControlHints> = $r16;

        $z0 = r1.<android.media.RoutingSessionInfo: boolean mIsSystemSession>;

        r0.<android.media.RoutingSessionInfo$Builder: boolean mIsSystemSession> = $z0;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1, r2, $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.util.ArrayList $r6, $r7, $r8, $r9;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.RoutingSessionInfo$Builder: int mVolumeHandling> = 0;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        r0.<android.media.RoutingSessionInfo$Builder: java.lang.String mId> = r1;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "clientPackageName must not be null");

        $r5 = (java.lang.String) r2;

        r0.<android.media.RoutingSessionInfo$Builder: java.lang.String mClientPackageName> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectedRoutes> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectableRoutes> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.media.RoutingSessionInfo$Builder: java.util.List mDeselectableRoutes> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.media.RoutingSessionInfo$Builder: java.util.List mTransferableRoutes> = $r9;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("id must not be empty");

        throw $r3;
    }

    public android.media.RoutingSessionInfo$Builder addDeselectableRoute(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mDeselectableRoutes>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be empty");

        throw $r2;
    }

    public android.media.RoutingSessionInfo$Builder addSelectableRoute(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectableRoutes>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be empty");

        throw $r2;
    }

    public android.media.RoutingSessionInfo$Builder addSelectedRoute(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectedRoutes>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be empty");

        throw $r2;
    }

    public android.media.RoutingSessionInfo$Builder addTransferableRoute(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mTransferableRoutes>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be empty");

        throw $r2;
    }

    public android.media.RoutingSessionInfo build()
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.util.List $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        android.media.RoutingSessionInfo $r3;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        $r1 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectedRoutes>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = new android.media.RoutingSessionInfo;

        specialinvoke $r3.<android.media.RoutingSessionInfo: void <init>(android.media.RoutingSessionInfo$Builder)>(r0);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("selectedRoutes must not be empty");

        throw $r2;
    }

    public android.media.RoutingSessionInfo$Builder clearDeselectableRoutes()
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.util.List $r1;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        $r1 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mDeselectableRoutes>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder clearSelectableRoutes()
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.util.List $r1;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        $r1 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectableRoutes>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder clearSelectedRoutes()
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.util.List $r1;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        $r1 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectedRoutes>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder clearTransferableRoutes()
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.util.List $r1;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        $r1 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mTransferableRoutes>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder removeDeselectableRoute(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mDeselectableRoutes>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be empty");

        throw $r2;
    }

    public android.media.RoutingSessionInfo$Builder removeSelectableRoute(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectableRoutes>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be empty");

        throw $r2;
    }

    public android.media.RoutingSessionInfo$Builder removeSelectedRoute(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mSelectedRoutes>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be empty");

        throw $r2;
    }

    public android.media.RoutingSessionInfo$Builder removeTransferableRoute(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.util.List $r3;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.media.RoutingSessionInfo$Builder: java.util.List mTransferableRoutes>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("routeId must not be empty");

        throw $r2;
    }

    public android.media.RoutingSessionInfo$Builder setClientPackageName(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.media.RoutingSessionInfo$Builder: java.lang.String mClientPackageName> = r1;

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder setControlHints(android.os.Bundle)
    {
        android.media.RoutingSessionInfo$Builder r0;
        android.os.Bundle r1;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<android.media.RoutingSessionInfo$Builder: android.os.Bundle mControlHints> = r1;

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder setName(java.lang.CharSequence)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.CharSequence r1;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.media.RoutingSessionInfo$Builder: java.lang.CharSequence mName> = r1;

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder setOwnerPackageName(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.media.RoutingSessionInfo$Builder: java.lang.String mOwnerPackageName> = r1;

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder setProviderId(java.lang.String)
    {
        android.media.RoutingSessionInfo$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        r0.<android.media.RoutingSessionInfo$Builder: java.lang.String mProviderId> = r1;

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("providerId must not be empty");

        throw $r2;
    }

    public android.media.RoutingSessionInfo$Builder setSystemSession(boolean)
    {
        android.media.RoutingSessionInfo$Builder r0;
        boolean z0;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        z0 := @parameter0: boolean;

        r0.<android.media.RoutingSessionInfo$Builder: boolean mIsSystemSession> = z0;

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder setVolume(int)
    {
        android.media.RoutingSessionInfo$Builder r0;
        int i0;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        i0 := @parameter0: int;

        r0.<android.media.RoutingSessionInfo$Builder: int mVolume> = i0;

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder setVolumeHandling(int)
    {
        android.media.RoutingSessionInfo$Builder r0;
        int i0;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        i0 := @parameter0: int;

        r0.<android.media.RoutingSessionInfo$Builder: int mVolumeHandling> = i0;

        return r0;
    }

    public android.media.RoutingSessionInfo$Builder setVolumeMax(int)
    {
        android.media.RoutingSessionInfo$Builder r0;
        int i0;

        r0 := @this: android.media.RoutingSessionInfo$Builder;

        i0 := @parameter0: int;

        r0.<android.media.RoutingSessionInfo$Builder: int mVolumeMax> = i0;

        return r0;
    }
}
