class android.media.SRTTrack extends android.media.WebVttTrack
{
    private static final int KEY_LOCAL_SETTING;
    private static final int KEY_START_TIME;
    private static final int KEY_STRUCT_TEXT;
    private static final int MEDIA_TIMED_TEXT;
    private static final java.lang.String TAG;
    private final android.os.Handler mEventHandler;

    void <init>(android.media.WebVttRenderingWidget, android.media.MediaFormat)
    {
        android.media.SRTTrack r0;
        android.media.WebVttRenderingWidget r1;
        android.media.MediaFormat r2;

        r0 := @this: android.media.SRTTrack;

        r1 := @parameter0: android.media.WebVttRenderingWidget;

        r2 := @parameter1: android.media.MediaFormat;

        specialinvoke r0.<android.media.WebVttTrack: void <init>(android.media.WebVttRenderingWidget,android.media.MediaFormat)>(r1, r2);

        r0.<android.media.SRTTrack: android.os.Handler mEventHandler> = null;

        return;
    }

    void <init>(android.os.Handler, android.media.MediaFormat)
    {
        android.media.SRTTrack r0;
        android.os.Handler r1;
        android.media.MediaFormat r2;

        r0 := @this: android.media.SRTTrack;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: android.media.MediaFormat;

        specialinvoke r0.<android.media.WebVttTrack: void <init>(android.media.WebVttRenderingWidget,android.media.MediaFormat)>(null, r2);

        r0.<android.media.SRTTrack: android.os.Handler mEventHandler> = r1;

        return;
    }

    private static long parseMs(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r5, $r6, $r8, $r10, $r11, $r13, $r15, $r16;
        java.lang.String[] $r1, $r4, $r7, $r9, $r12, $r14;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        $l1 = $l0 * 60L;

        $l2 = $l1 * 60L;

        $l3 = $l2 * 1000L;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r5 = $r4[1];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        $l5 = 60L * $l4;

        $l6 = $l5 * 1000L;

        $l7 = $l3 + $l6;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r8 = $r7[2];

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r10 = $r9[0];

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r11);

        $l9 = 1000L * $l8;

        $l10 = $l7 + $l9;

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r13 = $r12[2];

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r15 = $r14[1];

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        $l11 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r16);

        $l12 = $l10 + $l11;

        return $l12;
    }

    protected void onData(android.media.SubtitleData)
    {
        android.media.SRTTrack r0;
        java.lang.String[] r1;
        int i0, $i7, i9, i10;
        long $l1, $l2, $l3, $l4, $l5, $l6;
        byte[] $r2;
        android.media.TextTrackCueSpan[][] $r3, $r5;
        android.media.TextTrackCueSpan[] $r4;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10, r13, r14;
        android.media.SubtitleData r11;
        android.media.TextTrackCue r12;
        android.media.TextTrackCueSpan r15;

        r0 := @this: android.media.SRTTrack;

        r11 := @parameter0: android.media.SubtitleData;

     label01:
        r12 = new android.media.TextTrackCue;

        specialinvoke r12.<android.media.TextTrackCue: void <init>()>();

        $l1 = virtualinvoke r11.<android.media.SubtitleData: long getStartTimeUs()>();

        $l2 = $l1 / 1000L;

        r12.<android.media.TextTrackCue: long mStartTimeMs> = $l2;

        $l3 = virtualinvoke r11.<android.media.SubtitleData: long getStartTimeUs()>();

        $l4 = virtualinvoke r11.<android.media.SubtitleData: long getDurationUs()>();

        $l5 = $l3 + $l4;

        $l6 = $l5 / 1000L;

        r12.<android.media.TextTrackCue: long mEndTimeMs> = $l6;

        r13 = new java.lang.String;

        $r2 = virtualinvoke r11.<android.media.SubtitleData: byte[] getData()>();

        specialinvoke r13.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "UTF-8");

        r1 = virtualinvoke r13.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\r?\\n");

        $i7 = lengthof r1;

        $r3 = newarray (android.media.TextTrackCueSpan[])[$i7];

        r12.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines> = $r3;

     label02:
        i9 = 0;

     label03:
        i0 = lengthof r1;

     label04:
        i10 = 0;

     label05:
        if i10 >= i0 goto label08;

        r14 = r1[i10];

     label06:
        r15 = new android.media.TextTrackCueSpan;

        specialinvoke r15.<android.media.TextTrackCueSpan: void <init>(java.lang.String,long)>(r14, -1L);

        $r5 = r12.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines>;

        $r4 = newarray (android.media.TextTrackCueSpan)[1];

        $r4[0] = r15;

        $r5[i9] = $r4;

     label07:
        i10 = i10 + 1;

        i9 = i9 + 1;

        goto label05;

     label08:
        virtualinvoke r0.<android.media.SRTTrack: boolean addCue(android.media.SubtitleTrack$Cue)>(r12);

     label09:
        goto label11;

     label10:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subtitle data is not UTF-8 encoded: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SRTTrack", $r10);

     label11:
        return;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label10;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label10;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label10;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label10;
    }

    public void onData(byte[], boolean, long)
    {
        android.media.SRTTrack r0;
        boolean z0, $z2, $z4;
        long l0, $l1, $l2;
        java.lang.String r1, $r2, $r3, $r4, $r13, r26, r30, $r35, $r38;
        int $i3, i6;
        android.media.TextTrackCueSpan[][] $r5, $r12;
        java.lang.String[] $r6, $r8, $r10, r28;
        java.lang.Object[] $r7;
        java.lang.Object $r9;
        android.media.TextTrackCueSpan[] $r11;
        java.lang.Throwable $r14, $r17, $r18, $r19, $r20, $r21, r33, r34;
        byte[] r22;
        java.util.Iterator r31;
        java.io.ByteArrayInputStream r39;
        java.io.InputStreamReader r40;
        java.io.BufferedReader r41;
        android.media.TextTrackCue r42;
        java.util.ArrayList r43;
        android.media.TextTrackCueSpan r44;
        java.lang.StringBuilder r45;
        java.io.IOException r46;

        r0 := @this: android.media.SRTTrack;

        r22 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

     label01:
        r40 = new java.io.InputStreamReader;

        r39 = new java.io.ByteArrayInputStream;

        specialinvoke r39.<java.io.ByteArrayInputStream: void <init>(byte[])>(r22);

        specialinvoke r40.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r39, "UTF-8");

        r41 = new java.io.BufferedReader;

        specialinvoke r41.<java.io.BufferedReader: void <init>(java.io.Reader)>(r40);

     label02:
        $r2 = virtualinvoke r41.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r2 == null goto label20;

        r26 = virtualinvoke r41.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if r26 != null goto label04;

        goto label25;

     label04:
        r42 = new android.media.TextTrackCue;

        specialinvoke r42.<android.media.TextTrackCue: void <init>()>();

        r28 = virtualinvoke r26.<java.lang.String: java.lang.String[] split(java.lang.String)>("-->");

        $r3 = r28[0];

        $l1 = staticinvoke <android.media.SRTTrack: long parseMs(java.lang.String)>($r3);

        r42.<android.media.TextTrackCue: long mStartTimeMs> = $l1;

        $r4 = r28[1];

        $l2 = staticinvoke <android.media.SRTTrack: long parseMs(java.lang.String)>($r4);

        r42.<android.media.TextTrackCue: long mEndTimeMs> = $l2;

     label05:
        r42.<android.media.TextTrackCue: long mRunID> = l0;

        r43 = new java.util.ArrayList;

        specialinvoke r43.<java.util.ArrayList: void <init>()>();

     label06:
        r30 = virtualinvoke r41.<java.io.BufferedReader: java.lang.String readLine()>();

     label07:
        if r30 == null goto label10;

     label08:
        $r13 = virtualinvoke r30.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 != 0 goto label10;

        interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(r30);

     label09:
        goto label06;

     label10:
        i6 = 0;

     label11:
        $i3 = interfaceinvoke r43.<java.util.List: int size()>();

        $r5 = newarray (android.media.TextTrackCueSpan[])[$i3];

        r42.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines> = $r5;

        $r6 = newarray (java.lang.String)[0];

        $r7 = interfaceinvoke r43.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.lang.String[]) $r7;

        r42.<android.media.TextTrackCue: java.lang.String[] mStrings> = $r8;

        r31 = interfaceinvoke r43.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label14;

        $r9 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String) $r9;

        r44 = new android.media.TextTrackCueSpan;

        specialinvoke r44.<android.media.TextTrackCueSpan: void <init>(java.lang.String,long)>(r1, -1L);

        $r10 = r42.<android.media.TextTrackCue: java.lang.String[] mStrings>;

        $r10[i6] = r1;

        $r12 = r42.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines>;

        $r11 = newarray (android.media.TextTrackCueSpan)[1];

        $r11[0] = r44;

        $r12[i6] = $r11;

     label13:
        i6 = i6 + 1;

        goto label12;

     label14:
        virtualinvoke r0.<android.media.SRTTrack: boolean addCue(android.media.SubtitleTrack$Cue)>(r42);

     label15:
        goto label02;

     label16:
        $r18 := @caughtexception;

        r33 = $r18;

        goto label22;

     label17:
        $r14 := @caughtexception;

        r34 = $r14;

        goto label24;

     label18:
        $r21 := @caughtexception;

        r33 = $r21;

        goto label22;

     label19:
        $r20 := @caughtexception;

        r34 = $r20;

        goto label24;

     label20:
        goto label25;

     label21:
        $r17 := @caughtexception;

        r33 = $r17;

     label22:
        r46 = (java.io.IOException) r33;

        $r35 = virtualinvoke r46.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SRTTrack", $r35, r33);

        goto label25;

     label23:
        $r19 := @caughtexception;

        r34 = $r19;

     label24:
        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subtitle data is not UTF-8 encoded: ");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r38 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SRTTrack", $r38);

     label25:
        return;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label23;
        catch java.io.IOException from label01 to label02 with label21;
        catch java.io.UnsupportedEncodingException from label02 to label03 with label23;
        catch java.io.IOException from label02 to label03 with label21;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label23;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label19;
        catch java.io.IOException from label05 to label06 with label18;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label19;
        catch java.io.IOException from label06 to label07 with label18;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label19;
        catch java.io.IOException from label08 to label09 with label18;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label19;
        catch java.io.IOException from label11 to label12 with label18;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label19;
        catch java.io.IOException from label12 to label13 with label18;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label17;
        catch java.io.IOException from label14 to label15 with label16;
    }

    public void updateView(java.util.Vector)
    {
        android.media.SRTTrack r0;
        java.util.Vector r1;
        java.util.Iterator r2;
        int i0, $i2, $i3, i4;
        android.media.WebVttRenderingWidget $r3;
        android.os.Handler $r4, $r8, $r9;
        boolean $z0;
        java.lang.Object $r5;
        long $l1;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r10;
        android.media.SubtitleTrack$Cue r13;
        android.media.TextTrackCue r14;
        android.os.Parcel r15;
        java.lang.String[] r17;
        byte[] r18;
        android.os.Message r19;

        r0 := @this: android.media.SRTTrack;

        r1 := @parameter0: java.util.Vector;

        $r3 = virtualinvoke r0.<android.media.SRTTrack: android.media.WebVttRenderingWidget getRenderingWidget()>();

        if $r3 == null goto label1;

        specialinvoke r0.<android.media.WebVttTrack: void updateView(java.util.Vector)>(r1);

        return;

     label1:
        $r4 = r0.<android.media.SRTTrack: android.os.Handler mEventHandler>;

        if $r4 != null goto label2;

        return;

     label2:
        r2 = virtualinvoke r1.<java.util.Vector: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.media.SubtitleTrack$Cue) $r5;

        r14 = (android.media.TextTrackCue) r13;

        r15 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r15.<android.os.Parcel: void writeInt(int)>(102);

        virtualinvoke r15.<android.os.Parcel: void writeInt(int)>(7);

        $l1 = r13.<android.media.SubtitleTrack$Cue: long mStartTimeMs>;

        $i2 = (int) $l1;

        virtualinvoke r15.<android.os.Parcel: void writeInt(int)>($i2);

        virtualinvoke r15.<android.os.Parcel: void writeInt(int)>(16);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r17 = r14.<android.media.TextTrackCue: java.lang.String[] mStrings>;

        i0 = lengthof r17;

        i4 = 0;

     label4:
        if i4 >= i0 goto label5;

        $r10 = r17[i4];

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i4 = i4 + 1;

        goto label4;

     label5:
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r18 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        $i3 = lengthof r18;

        virtualinvoke r15.<android.os.Parcel: void writeInt(int)>($i3);

        virtualinvoke r15.<android.os.Parcel: void writeByteArray(byte[])>(r18);

        $r8 = r0.<android.media.SRTTrack: android.os.Handler mEventHandler>;

        r19 = virtualinvoke $r8.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(99, 0, 0, r15);

        $r9 = r0.<android.media.SRTTrack: android.os.Handler mEventHandler>;

        virtualinvoke $r9.<android.os.Handler: boolean sendMessage(android.os.Message)>(r19);

        goto label3;

     label6:
        virtualinvoke r1.<java.util.Vector: void clear()>();

        return;
    }

    public static void <clinit>()
    {
        <android.media.SRTTrack: java.lang.String TAG> = "SRTTrack";

        <android.media.SRTTrack: int MEDIA_TIMED_TEXT> = 99;

        <android.media.SRTTrack: int KEY_STRUCT_TEXT> = 16;

        <android.media.SRTTrack: int KEY_START_TIME> = 7;

        <android.media.SRTTrack: int KEY_LOCAL_SETTING> = 102;

        return;
    }
}
