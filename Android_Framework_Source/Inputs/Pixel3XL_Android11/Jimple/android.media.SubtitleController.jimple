public class android.media.SubtitleController extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private static final int WHAT_HIDE;
    private static final int WHAT_SELECT_DEFAULT_TRACK;
    private static final int WHAT_SELECT_TRACK;
    private static final int WHAT_SHOW;
    private android.media.SubtitleController$Anchor mAnchor;
    private final android.os.Handler$Callback mCallback;
    private android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener;
    private android.view.accessibility.CaptioningManager mCaptioningManager;
    private android.os.Handler mHandler;
    private android.media.SubtitleController$Listener mListener;
    private java.util.Vector mRenderers;
    private android.media.SubtitleTrack mSelectedTrack;
    private boolean mShowing;
    private android.media.MediaTimeProvider mTimeProvider;
    private boolean mTrackIsExplicit;
    private java.util.Vector mTracks;
    private boolean mVisibilityIsExplicit;

    static void <clinit>()
    {
        <android.media.SubtitleController: int WHAT_SHOW> = 1;

        <android.media.SubtitleController: int WHAT_SELECT_TRACK> = 3;

        <android.media.SubtitleController: int WHAT_SELECT_DEFAULT_TRACK> = 4;

        <android.media.SubtitleController: int WHAT_HIDE> = 2;

        <android.media.SubtitleController: boolean $assertionsDisabled> = 0;

        return;
    }

    public void <init>(android.content.Context, android.media.MediaTimeProvider, android.media.SubtitleController$Listener)
    {
        android.media.SubtitleController r0;
        android.content.Context r1;
        android.media.MediaTimeProvider r2;
        android.media.SubtitleController$Listener r3;
        android.media.SubtitleController$1 $r4;
        android.media.SubtitleController$2 $r5;
        java.util.Vector $r6, $r7;
        java.lang.Object $r8;
        android.view.accessibility.CaptioningManager $r9;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.media.MediaTimeProvider;

        r3 := @parameter2: android.media.SubtitleController$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.media.SubtitleController$1;

        specialinvoke $r4.<android.media.SubtitleController$1: void <init>(android.media.SubtitleController)>(r0);

        r0.<android.media.SubtitleController: android.os.Handler$Callback mCallback> = $r4;

        $r5 = new android.media.SubtitleController$2;

        specialinvoke $r5.<android.media.SubtitleController$2: void <init>(android.media.SubtitleController)>(r0);

        r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener> = $r5;

        r0.<android.media.SubtitleController: boolean mTrackIsExplicit> = 0;

        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 0;

        r0.<android.media.SubtitleController: android.media.MediaTimeProvider mTimeProvider> = r2;

        r0.<android.media.SubtitleController: android.media.SubtitleController$Listener mListener> = r3;

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        r0.<android.media.SubtitleController: java.util.Vector mRenderers> = $r6;

        r0.<android.media.SubtitleController: boolean mShowing> = 0;

        $r7 = new java.util.Vector;

        specialinvoke $r7.<java.util.Vector: void <init>()>();

        r0.<android.media.SubtitleController: java.util.Vector mTracks> = $r7;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("captioning");

        $r9 = (android.view.accessibility.CaptioningManager) $r8;

        r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager> = $r9;

        return;
    }

    static void access$000(android.media.SubtitleController)
    {
        android.media.SubtitleController r0;

        r0 := @parameter0: android.media.SubtitleController;

        specialinvoke r0.<android.media.SubtitleController: void doShow()>();

        return;
    }

    static void access$100(android.media.SubtitleController)
    {
        android.media.SubtitleController r0;

        r0 := @parameter0: android.media.SubtitleController;

        specialinvoke r0.<android.media.SubtitleController: void doHide()>();

        return;
    }

    static void access$200(android.media.SubtitleController, android.media.SubtitleTrack)
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1;

        r0 := @parameter0: android.media.SubtitleController;

        r1 := @parameter1: android.media.SubtitleTrack;

        specialinvoke r0.<android.media.SubtitleController: void doSelectTrack(android.media.SubtitleTrack)>(r1);

        return;
    }

    static void access$300(android.media.SubtitleController)
    {
        android.media.SubtitleController r0;

        r0 := @parameter0: android.media.SubtitleController;

        specialinvoke r0.<android.media.SubtitleController: void doSelectDefaultTrack()>();

        return;
    }

    private void checkAnchorLooper()
    {
        android.media.SubtitleController r0;

        r0 := @this: android.media.SubtitleController;

        return;
    }

    private void doHide()
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1;

        r0 := @this: android.media.SubtitleController;

        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 1;

        r1 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.media.SubtitleTrack: void hide()>();

     label1:
        r0.<android.media.SubtitleController: boolean mShowing> = 0;

        return;
    }

    private void doSelectDefaultTrack()
    {
        android.media.SubtitleController r0;
        boolean $z0, $z2, $z3, $z4;
        android.view.accessibility.CaptioningManager $r1;
        int $i0, $i1;
        android.media.MediaFormat $r2;
        android.media.SubtitleTrack r3, r4, r5;

        r0 := @this: android.media.SubtitleController;

        $z0 = r0.<android.media.SubtitleController: boolean mTrackIsExplicit>;

        if $z0 == 0 goto label5;

        $z3 = r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit>;

        if $z3 != 0 goto label4;

        $r1 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $z4 = virtualinvoke $r1.<android.view.accessibility.CaptioningManager: boolean isEnabled()>();

        if $z4 != 0 goto label2;

        r3 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if r3 == null goto label1;

        $r2 = virtualinvoke r3.<android.media.SubtitleTrack: android.media.MediaFormat getFormat()>();

        $i1 = virtualinvoke $r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("is-forced-subtitle", 0);

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        r4 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if r4 == null goto label3;

        $i0 = virtualinvoke r4.<android.media.SubtitleTrack: int getTrackType()>();

        if $i0 != 4 goto label3;

        virtualinvoke r0.<android.media.SubtitleController: void hide()>();

        goto label3;

     label2:
        virtualinvoke r0.<android.media.SubtitleController: void show()>();

     label3:
        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 0;

     label4:
        return;

     label5:
        r5 = virtualinvoke r0.<android.media.SubtitleController: android.media.SubtitleTrack getDefaultTrack()>();

        if r5 == null goto label6;

        virtualinvoke r0.<android.media.SubtitleController: boolean selectTrack(android.media.SubtitleTrack)>(r5);

        r0.<android.media.SubtitleController: boolean mTrackIsExplicit> = 0;

        $z2 = r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit>;

        if $z2 != 0 goto label6;

        virtualinvoke r0.<android.media.SubtitleController: void show()>();

        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 0;

     label6:
        return;
    }

    private void doSelectTrack(android.media.SubtitleTrack)
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1, $r3, $r5, r6, r8;
        android.media.MediaTimeProvider $r2;
        android.media.SubtitleTrack$RenderingWidget $r4;
        android.media.SubtitleController$Anchor r7;
        android.media.SubtitleController$Listener r9;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.media.SubtitleTrack;

        r0.<android.media.SubtitleController: boolean mTrackIsExplicit> = 1;

        r6 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if r6 != r1 goto label1;

        return;

     label1:
        if r6 == null goto label2;

        virtualinvoke r6.<android.media.SubtitleTrack: void hide()>();

        $r5 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r5.<android.media.SubtitleTrack: void setTimeProvider(android.media.MediaTimeProvider)>(null);

     label2:
        r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack> = r1;

        r7 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        if r7 == null goto label3;

        $r4 = specialinvoke r0.<android.media.SubtitleController: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        interfaceinvoke r7.<android.media.SubtitleController$Anchor: void setSubtitleWidget(android.media.SubtitleTrack$RenderingWidget)>($r4);

     label3:
        r8 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if r8 == null goto label4;

        $r2 = r0.<android.media.SubtitleController: android.media.MediaTimeProvider mTimeProvider>;

        virtualinvoke r8.<android.media.SubtitleTrack: void setTimeProvider(android.media.MediaTimeProvider)>($r2);

        $r3 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r3.<android.media.SubtitleTrack: void show()>();

     label4:
        r9 = r0.<android.media.SubtitleController: android.media.SubtitleController$Listener mListener>;

        if r9 == null goto label5;

        interfaceinvoke r9.<android.media.SubtitleController$Listener: void onSubtitleTrackSelected(android.media.SubtitleTrack)>(r1);

     label5:
        return;
    }

    private void doShow()
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1;

        r0 := @this: android.media.SubtitleController;

        r0.<android.media.SubtitleController: boolean mShowing> = 1;

        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 1;

        r1 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.media.SubtitleTrack: void show()>();

     label1:
        return;
    }

    private android.media.SubtitleTrack$RenderingWidget getRenderingWidget()
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1;
        android.media.SubtitleTrack$RenderingWidget $r2;

        r0 := @this: android.media.SubtitleController;

        r1 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<android.media.SubtitleTrack: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        return $r2;
    }

    private void processOnAnchor(android.os.Message)
    {
        android.media.SubtitleController r0;
        android.os.Message r1;
        android.os.Looper $r2, $r4;
        android.os.Handler $r3, $r5, $r6;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.os.Message;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        if $r2 != $r4 goto label1;

        $r6 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: void dispatchMessage(android.os.Message)>(r1);

        goto label2;

     label1:
        $r5 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

     label2:
        return;
    }

    public android.media.SubtitleTrack addTrack(android.media.MediaFormat)
    {
        android.media.SubtitleController r0;
        java.util.Vector r1, $r3, $r5, $r6, r14;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r4;
        int $i0;
        android.view.accessibility.CaptioningManager$CaptioningChangeListener $r7;
        android.view.accessibility.CaptioningManager $r8;
        java.lang.Throwable $r9, $r10;
        android.media.MediaFormat r11;
        android.media.SubtitleController$Renderer r12;
        android.media.SubtitleTrack r13;

        r0 := @this: android.media.SubtitleController;

        r11 := @parameter0: android.media.MediaFormat;

        r1 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        r2 = virtualinvoke $r3.<java.util.Vector: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.media.SubtitleController$Renderer) $r4;

        $z1 = virtualinvoke r12.<android.media.SubtitleController$Renderer: boolean supports(android.media.MediaFormat)>(r11);

        if $z1 == 0 goto label12;

        r13 = virtualinvoke r12.<android.media.SubtitleController$Renderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>(r11);

     label03:
        if r13 == null goto label12;

     label04:
        r14 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        entermonitor r14;

     label05:
        $r5 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        $i0 = virtualinvoke $r5.<java.util.Vector: int size()>();

        if $i0 != 0 goto label06;

        $r8 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $r7 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener>;

        virtualinvoke $r8.<android.view.accessibility.CaptioningManager: void addCaptioningChangeListener(android.view.accessibility.CaptioningManager$CaptioningChangeListener)>($r7);

     label06:
        $r6 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        virtualinvoke $r6.<java.util.Vector: boolean add(java.lang.Object)>(r13);

        exitmonitor r14;

     label07:
        exitmonitor r1;

     label08:
        return r13;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r14;

     label11:
        throw $r10;

     label12:
        goto label02;

     label13:
        exitmonitor r1;

     label14:
        return null;

     label15:
        $r9 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.SubtitleController r0;
        android.view.accessibility.CaptioningManager$CaptioningChangeListener $r1;
        android.view.accessibility.CaptioningManager $r2;

        r0 := @this: android.media.SubtitleController;

        $r2 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $r1 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener>;

        virtualinvoke $r2.<android.view.accessibility.CaptioningManager: void removeCaptioningChangeListener(android.view.accessibility.CaptioningManager$CaptioningChangeListener)>($r1);

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    public android.media.SubtitleTrack getDefaultTrack()
    {
        android.media.SubtitleController r0;
        java.util.Locale r1, r15;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, z7, z8, z9;
        java.util.Vector r2, $r8;
        java.util.Iterator r3;
        android.media.SubtitleTrack r4, r14, r17;
        java.lang.String r5, $r10, $r11, $r12;
        android.view.accessibility.CaptioningManager $r6, $r7;
        java.lang.Object $r9;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10, i11;
        java.lang.Throwable $r13;
        android.media.MediaFormat r16;

        r0 := @this: android.media.SubtitleController;

        r14 = null;

        i5 = -1;

        $r6 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        r1 = virtualinvoke $r6.<android.view.accessibility.CaptioningManager: java.util.Locale getLocale()>();

        if r1 != null goto label01;

        r15 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        goto label02;

     label01:
        r15 = r1;

     label02:
        $r7 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        z0 = virtualinvoke $r7.<android.view.accessibility.CaptioningManager: boolean isEnabled()>();

        r2 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        entermonitor r2;

     label03:
        $r8 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        r3 = virtualinvoke $r8.<java.util.Vector: java.util.Iterator iterator()>();

     label04:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label31;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.media.SubtitleTrack) $r9;

        r16 = virtualinvoke r4.<android.media.SubtitleTrack: android.media.MediaFormat getFormat()>();

        r5 = virtualinvoke r16.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("language");

        $i0 = virtualinvoke r16.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("is-forced-subtitle", 0);

        if $i0 == 0 goto label06;

     label05:
        z6 = 1;

        goto label07;

     label06:
        z6 = 0;

     label07:
        $i1 = virtualinvoke r16.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("is-autoselect", 1);

        if $i1 == 0 goto label09;

     label08:
        z7 = 1;

        goto label10;

     label09:
        z7 = 0;

     label10:
        $i2 = virtualinvoke r16.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("is-default", 0);

        if $i2 == 0 goto label12;

     label11:
        z8 = 1;

        goto label13;

     label12:
        z8 = 0;

     label13:
        if r15 == null goto label17;

     label14:
        $r10 = virtualinvoke r15.<java.util.Locale: java.lang.String getLanguage()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 != 0 goto label17;

        $r11 = virtualinvoke r15.<java.util.Locale: java.lang.String getISO3Language()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z3 != 0 goto label17;

        $r12 = virtualinvoke r15.<java.util.Locale: java.lang.String getLanguage()>();

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z4 == 0 goto label16;

     label15:
        goto label17;

     label16:
        z9 = 0;

        goto label18;

     label17:
        z9 = 1;

     label18:
        if z6 == 0 goto label19;

        i6 = 0;

        goto label20;

     label19:
        i6 = 8;

     label20:
        if r1 != null goto label21;

        if z8 == 0 goto label21;

        i7 = 4;

        goto label22;

     label21:
        i7 = 0;

     label22:
        if z7 == 0 goto label23;

        i8 = 0;

        goto label24;

     label23:
        i8 = 2;

     label24:
        if z9 == 0 goto label25;

        i9 = 1;

        goto label26;

     label25:
        i9 = 0;

     label26:
        $i3 = i6 + i7;

        $i4 = $i3 + i8;

        i10 = $i4 + i9;

        $z1 = z0 ^ 1;

        if $z1 == 0 goto label27;

        if z6 != 0 goto label27;

        goto label04;

     label27:
        if r1 != null goto label28;

        if z8 != 0 goto label29;

     label28:
        r17 = r14;

        i11 = i5;

        if z9 == 0 goto label30;

        if z7 != 0 goto label29;

        if z6 != 0 goto label29;

        r17 = r14;

        i11 = i5;

        if r1 == null goto label30;

     label29:
        r17 = r14;

        i11 = i5;

        if i10 <= i5 goto label30;

        i11 = i10;

        r17 = r4;

     label30:
        r14 = r17;

        i5 = i11;

        goto label04;

     label31:
        exitmonitor r2;

     label32:
        return r14;

     label33:
        $r13 := @caughtexception;

     label34:
        exitmonitor r2;

     label35:
        throw $r13;

        catch java.lang.Throwable from label03 to label04 with label33;
        catch java.lang.Throwable from label04 to label05 with label33;
        catch java.lang.Throwable from label07 to label08 with label33;
        catch java.lang.Throwable from label10 to label11 with label33;
        catch java.lang.Throwable from label14 to label15 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label34 to label35 with label33;
    }

    public android.media.SubtitleTrack getSelectedTrack()
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack $r1;

        r0 := @this: android.media.SubtitleController;

        $r1 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        return $r1;
    }

    public android.media.SubtitleTrack[] getTracks()
    {
        android.media.SubtitleController r0;
        java.util.Vector r1, $r2, $r3;
        int $i0;
        java.lang.Throwable $r5;
        android.media.SubtitleTrack[] r6;

        r0 := @this: android.media.SubtitleController;

        r1 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        r6 = newarray (android.media.SubtitleTrack)[$i0];

        $r3 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        virtualinvoke $r3.<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>(r6);

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean hasRendererFor(android.media.MediaFormat)
    {
        android.media.SubtitleController r0;
        java.util.Vector r1, $r3;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r4;
        android.media.SubtitleController$Renderer $r5;
        java.lang.Throwable $r6;
        android.media.MediaFormat r7;

        r0 := @this: android.media.SubtitleController;

        r7 := @parameter0: android.media.MediaFormat;

        r1 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        r2 = virtualinvoke $r3.<java.util.Vector: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.media.SubtitleController$Renderer) $r4;

        $z1 = virtualinvoke $r5.<android.media.SubtitleController$Renderer: boolean supports(android.media.MediaFormat)>(r7);

        if $z1 == 0 goto label4;

        exitmonitor r1;

     label3:
        return 1;

     label4:
        goto label2;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void hide()
    {
        android.media.SubtitleController r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: android.media.SubtitleController;

        $r1 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        specialinvoke r0.<android.media.SubtitleController: void processOnAnchor(android.os.Message)>($r2);

        return;
    }

    public void registerRenderer(android.media.SubtitleController$Renderer)
    {
        android.media.SubtitleController r0;
        java.util.Vector r1, $r2, $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        android.media.SubtitleController$Renderer r5;

        r0 := @this: android.media.SubtitleController;

        r5 := @parameter0: android.media.SubtitleController$Renderer;

        r1 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        $z0 = virtualinvoke $r2.<java.util.Vector: boolean contains(java.lang.Object)>(r5);

        if $z0 != 0 goto label2;

        $r3 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        virtualinvoke $r3.<java.util.Vector: boolean add(java.lang.Object)>(r5);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void reset()
    {
        android.media.SubtitleController r0;
        java.util.Vector $r1;
        android.view.accessibility.CaptioningManager$CaptioningChangeListener $r2;
        android.view.accessibility.CaptioningManager $r3;

        r0 := @this: android.media.SubtitleController;

        specialinvoke r0.<android.media.SubtitleController: void checkAnchorLooper()>();

        virtualinvoke r0.<android.media.SubtitleController: void hide()>();

        virtualinvoke r0.<android.media.SubtitleController: boolean selectTrack(android.media.SubtitleTrack)>(null);

        $r1 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        virtualinvoke $r1.<java.util.Vector: void clear()>();

        r0.<android.media.SubtitleController: boolean mTrackIsExplicit> = 0;

        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 0;

        $r3 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $r2 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener>;

        virtualinvoke $r3.<android.view.accessibility.CaptioningManager: void removeCaptioningChangeListener(android.view.accessibility.CaptioningManager$CaptioningChangeListener)>($r2);

        return;
    }

    public void selectDefaultTrack()
    {
        android.media.SubtitleController r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: android.media.SubtitleController;

        $r1 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        specialinvoke r0.<android.media.SubtitleController: void processOnAnchor(android.os.Message)>($r2);

        return;
    }

    public boolean selectTrack(android.media.SubtitleTrack)
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1;
        android.os.Handler $r2;
        android.os.Message $r3;
        java.util.Vector $r4;
        boolean $z0;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.media.SubtitleTrack;

        if r1 == null goto label1;

        $r4 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        $z0 = virtualinvoke $r4.<java.util.Vector: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r1);

        specialinvoke r0.<android.media.SubtitleController: void processOnAnchor(android.os.Message)>($r3);

        return 1;
    }

    public void setAnchor(android.media.SubtitleController$Anchor)
    {
        android.media.SubtitleController r0;
        android.media.SubtitleController$Anchor r1, r2, $r4, $r7, $r9;
        android.os.Handler $r3;
        android.os.Looper $r5;
        android.os.Handler$Callback $r6;
        android.media.SubtitleTrack$RenderingWidget $r8;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.media.SubtitleController$Anchor;

        r2 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        if r2 != r1 goto label1;

        return;

     label1:
        if r2 == null goto label2;

        specialinvoke r0.<android.media.SubtitleController: void checkAnchorLooper()>();

        $r9 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        interfaceinvoke $r9.<android.media.SubtitleController$Anchor: void setSubtitleWidget(android.media.SubtitleTrack$RenderingWidget)>(null);

     label2:
        r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor> = r1;

        r0.<android.media.SubtitleController: android.os.Handler mHandler> = null;

        if r1 == null goto label3;

        $r3 = new android.os.Handler;

        $r4 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        $r5 = interfaceinvoke $r4.<android.media.SubtitleController$Anchor: android.os.Looper getSubtitleLooper()>();

        $r6 = r0.<android.media.SubtitleController: android.os.Handler$Callback mCallback>;

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r5, $r6);

        r0.<android.media.SubtitleController: android.os.Handler mHandler> = $r3;

        specialinvoke r0.<android.media.SubtitleController: void checkAnchorLooper()>();

        $r7 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        $r8 = specialinvoke r0.<android.media.SubtitleController: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        interfaceinvoke $r7.<android.media.SubtitleController$Anchor: void setSubtitleWidget(android.media.SubtitleTrack$RenderingWidget)>($r8);

     label3:
        return;
    }

    public void show()
    {
        android.media.SubtitleController r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: android.media.SubtitleController;

        $r1 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        specialinvoke r0.<android.media.SubtitleController: void processOnAnchor(android.os.Message)>($r2);

        return;
    }
}
