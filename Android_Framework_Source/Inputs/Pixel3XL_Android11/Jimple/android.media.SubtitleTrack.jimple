public abstract class android.media.SubtitleTrack extends java.lang.Object implements android.media.MediaTimeProvider$OnMediaTimeListener
{
    private static final java.lang.String TAG;
    public boolean DEBUG;
    protected final java.util.Vector mActiveCues;
    protected android.media.SubtitleTrack$CueList mCues;
    private android.media.MediaFormat mFormat;
    protected android.os.Handler mHandler;
    private long mLastTimeMs;
    private long mLastUpdateTimeMs;
    private long mNextScheduledTimeMs;
    private java.lang.Runnable mRunnable;
    protected final android.util.LongSparseArray mRunsByEndTime;
    protected final android.util.LongSparseArray mRunsByID;
    protected android.media.MediaTimeProvider mTimeProvider;
    protected boolean mVisible;

    public void <init>(android.media.MediaFormat)
    {
        android.media.SubtitleTrack r0;
        android.media.MediaFormat r1;
        android.util.LongSparseArray $r2, $r3;
        java.util.Vector $r4;
        android.os.Handler $r5;
        android.media.SubtitleTrack$CueList $r6;

        r0 := @this: android.media.SubtitleTrack;

        r1 := @parameter0: android.media.MediaFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.LongSparseArray;

        specialinvoke $r2.<android.util.LongSparseArray: void <init>()>();

        r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime> = $r2;

        $r3 = new android.util.LongSparseArray;

        specialinvoke $r3.<android.util.LongSparseArray: void <init>()>();

        r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID> = $r3;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues> = $r4;

        r0.<android.media.SubtitleTrack: boolean DEBUG> = 0;

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        r0.<android.media.SubtitleTrack: android.os.Handler mHandler> = $r5;

        r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs> = -1L;

        r0.<android.media.SubtitleTrack: android.media.MediaFormat mFormat> = r1;

        $r6 = new android.media.SubtitleTrack$CueList;

        specialinvoke $r6.<android.media.SubtitleTrack$CueList: void <init>()>();

        r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$CueList mCues> = $r6;

        virtualinvoke r0.<android.media.SubtitleTrack: void clearActiveCues()>();

        r0.<android.media.SubtitleTrack: long mLastTimeMs> = -1L;

        return;
    }

    static java.lang.Runnable access$102(android.media.SubtitleTrack, java.lang.Runnable)
    {
        android.media.SubtitleTrack r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.media.SubtitleTrack;

        r1 := @parameter1: java.lang.Runnable;

        r0.<android.media.SubtitleTrack: java.lang.Runnable mRunnable> = r1;

        return r1;
    }

    private void removeRunsByEndTimeIndex(int)
    {
        android.media.SubtitleTrack r0;
        int i0;
        android.media.SubtitleTrack$Cue r1, r8;
        android.util.LongSparseArray $r2, $r4, $r5;
        java.lang.Object $r3;
        long $l1;
        android.media.SubtitleTrack$CueList $r6;
        android.media.SubtitleTrack$Run r7, r9;

        r0 := @this: android.media.SubtitleTrack;

        i0 := @parameter0: int;

        $r2 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i0);

        r7 = (android.media.SubtitleTrack$Run) $r3;

     label1:
        if r7 == null goto label4;

        r8 = r7.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Cue mFirstCue>;

     label2:
        if r8 == null goto label3;

        $r6 = r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$CueList mCues>;

        virtualinvoke $r6.<android.media.SubtitleTrack$CueList: void remove(android.media.SubtitleTrack$Cue)>(r8);

        r1 = r8.<android.media.SubtitleTrack$Cue: android.media.SubtitleTrack$Cue mNextInRun>;

        r8.<android.media.SubtitleTrack$Cue: android.media.SubtitleTrack$Cue mNextInRun> = null;

        r8 = r1;

        goto label2;

     label3:
        $r5 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID>;

        $l1 = r7.<android.media.SubtitleTrack$Run: long mRunID>;

        virtualinvoke $r5.<android.util.LongSparseArray: void remove(long)>($l1);

        r9 = r7.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Run mNextRunAtEndTimeMs>;

        r7.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Run mPrevRunAtEndTimeMs> = null;

        r7.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Run mNextRunAtEndTimeMs> = null;

        r7 = r9;

        goto label1;

     label4:
        $r4 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        virtualinvoke $r4.<android.util.LongSparseArray: void removeAt(int)>(i0);

        return;
    }

    private void takeTime(long)
    {
        android.media.SubtitleTrack r0;
        long l0;
        java.lang.Throwable $r2;

        r0 := @this: android.media.SubtitleTrack;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        r0.<android.media.SubtitleTrack: long mLastTimeMs> = l0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected boolean addCue(android.media.SubtitleTrack$Cue)
    {
        android.media.SubtitleTrack r0;
        android.media.SubtitleTrack$Run r1, r25;
        android.media.SubtitleTrack$CueList $r2;
        long $l1, $l3, $l4, $l6, $l7, $l9, $l11, $l13, $l14, $l18, $l19, $l20, $l22, $l23, $l24, $l25, $l27, $l28, $l29, l30;
        byte $b2, $b5, $b8, $b10, $b12, $b15, $b26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Runnable $r3, $r5;
        android.os.Handler $r4, $r6;
        java.lang.String $r17;
        android.media.MediaTimeProvider $r18, r27;
        android.util.LongSparseArray $r19, $r21;
        java.lang.Object $r20;
        java.lang.Throwable $r22, $r23;
        android.media.SubtitleTrack$Cue r24, $r26;
        java.lang.StringBuilder r29;
        android.media.SubtitleTrack$1 r30;

        r0 := @this: android.media.SubtitleTrack;

        r24 := @parameter0: android.media.SubtitleTrack$Cue;

        entermonitor r0;

     label01:
        $r2 = r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$CueList mCues>;

        virtualinvoke $r2.<android.media.SubtitleTrack$CueList: void add(android.media.SubtitleTrack$Cue)>(r24);

        $l1 = r24.<android.media.SubtitleTrack$Cue: long mRunID>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label10;

        $r19 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID>;

        $l23 = r24.<android.media.SubtitleTrack$Cue: long mRunID>;

        $r20 = virtualinvoke $r19.<android.util.LongSparseArray: java.lang.Object get(long)>($l23);

        r1 = (android.media.SubtitleTrack$Run) $r20;

     label02:
        if r1 != null goto label06;

     label03:
        r25 = new android.media.SubtitleTrack$Run;

        specialinvoke r25.<android.media.SubtitleTrack$Run: void <init>(android.media.SubtitleTrack$1)>(null);

     label04:
        $r21 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID>;

        $l28 = r24.<android.media.SubtitleTrack$Cue: long mRunID>;

        virtualinvoke $r21.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l28, r25);

        $l29 = r24.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        r25.<android.media.SubtitleTrack$Run: long mEndTimeMs> = $l29;

     label05:
        goto label09;

     label06:
        r25 = r1;

     label07:
        $l25 = r1.<android.media.SubtitleTrack$Run: long mEndTimeMs>;

        $l24 = r24.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        $b26 = $l25 cmp $l24;

        if $b26 >= 0 goto label09;

        $l27 = r24.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        r1.<android.media.SubtitleTrack$Run: long mEndTimeMs> = $l27;

     label08:
        r25 = r1;

     label09:
        $r26 = r25.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Cue mFirstCue>;

        r24.<android.media.SubtitleTrack$Cue: android.media.SubtitleTrack$Cue mNextInRun> = $r26;

        r25.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Cue mFirstCue> = r24;

     label10:
        r27 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

     label11:
        l30 = -1L;

        if r27 == null goto label15;

     label12:
        $r18 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        $l22 = interfaceinvoke $r18.<android.media.MediaTimeProvider: long getCurrentTimeUs(boolean,boolean)>(0, 1);

        l30 = $l22 / 1000L;

     label13:
        goto label15;

     label14:
        $r22 := @caughtexception;

        l30 = -1L;

     label15:
        $z5 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z5 == 0 goto label16;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mVisible=");

        $z4 = r0.<android.media.SubtitleTrack: boolean mVisible>;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $l18 = r24.<android.media.SubtitleTrack$Cue: long mStartTimeMs>;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <= ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l30);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $l19 = r24.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l19);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ");

        $l20 = r0.<android.media.SubtitleTrack: long mLastTimeMs>;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        $r17 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SubtitleTrack", $r17);

     label16:
        $z0 = r0.<android.media.SubtitleTrack: boolean mVisible>;

        if $z0 == 0 goto label21;

        $l11 = r24.<android.media.SubtitleTrack$Cue: long mStartTimeMs>;

        $b12 = $l11 cmp l30;

        if $b12 > 0 goto label21;

        $l14 = r24.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        $l13 = r0.<android.media.SubtitleTrack: long mLastTimeMs>;

        $b15 = $l14 cmp $l13;

        if $b15 < 0 goto label21;

        $r3 = r0.<android.media.SubtitleTrack: java.lang.Runnable mRunnable>;

        if $r3 == null goto label17;

        $r6 = r0.<android.media.SubtitleTrack: android.os.Handler mHandler>;

        $r5 = r0.<android.media.SubtitleTrack: java.lang.Runnable mRunnable>;

        virtualinvoke $r6.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r5);

     label17:
        r30 = new android.media.SubtitleTrack$1;

        specialinvoke r30.<android.media.SubtitleTrack$1: void <init>(android.media.SubtitleTrack,android.media.SubtitleTrack,long)>(r0, r0, l30);

        r0.<android.media.SubtitleTrack: java.lang.Runnable mRunnable> = r30;

        $r4 = r0.<android.media.SubtitleTrack: android.os.Handler mHandler>;

        $z1 = virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r30, 10L);

        if $z1 == 0 goto label19;

        $z3 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z3 == 0 goto label20;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SubtitleTrack", "scheduling update");

     label18:
        goto label20;

     label19:
        $z2 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z2 == 0 goto label20;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SubtitleTrack", "failed to schedule subtitle view update");

     label20:
        exitmonitor r0;

        return 1;

     label21:
        $z6 = r0.<android.media.SubtitleTrack: boolean mVisible>;

        if $z6 == 0 goto label23;

        $l4 = r24.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        $l3 = r0.<android.media.SubtitleTrack: long mLastTimeMs>;

        $b5 = $l4 cmp $l3;

        if $b5 < 0 goto label23;

        $l7 = r24.<android.media.SubtitleTrack$Cue: long mStartTimeMs>;

        $l6 = r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs>;

        $b8 = $l7 cmp $l6;

        if $b8 < 0 goto label22;

        $l9 = r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs>;

        $b10 = $l9 cmp 0L;

        if $b10 >= 0 goto label23;

     label22:
        virtualinvoke r0.<android.media.SubtitleTrack: void scheduleTimedEvents()>();

     label23:
        exitmonitor r0;

        return 0;

     label24:
        $r23 := @caughtexception;

        exitmonitor r0;

        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label04 to label05 with label24;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.lang.Throwable from label09 to label10 with label24;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.IllegalStateException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
    }

    protected void clearActiveCues()
    {
        android.media.SubtitleTrack r0;
        boolean $z0;
        java.util.Vector $r1, $r3;
        int $i0;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        java.lang.StringBuilder r8;

        r0 := @this: android.media.SubtitleTrack;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label2;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing ");

        $r3 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" active cues");

        $r6 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SubtitleTrack", $r6);

     label2:
        $r1 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke $r1.<java.util.Vector: void clear()>();

        r0.<android.media.SubtitleTrack: long mLastUpdateTimeMs> = -1L;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.SubtitleTrack r0;
        android.util.LongSparseArray $r1;
        int $i0, i1;

        r0 := @this: android.media.SubtitleTrack;

        $r1 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        $i0 = virtualinvoke $r1.<android.util.LongSparseArray: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        specialinvoke r0.<android.media.SubtitleTrack: void removeRunsByEndTimeIndex(int)>(i1);

        i1 = i1 + -1;

        goto label1;

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    protected void finishedRun(long)
    {
        android.media.SubtitleTrack r0;
        long l0;
        android.media.SubtitleTrack$Run r1;
        byte $b1, $b2;
        android.util.LongSparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.media.SubtitleTrack;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        $b2 = l0 cmp -1L;

        if $b2 == 0 goto label1;

        $r2 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r1 = (android.media.SubtitleTrack$Run) $r3;

        if r1 == null goto label1;

        $r4 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        virtualinvoke r1.<android.media.SubtitleTrack$Run: void storeByEndTimeMs(android.util.LongSparseArray)>($r4);

     label1:
        return;
    }

    public final android.media.MediaFormat getFormat()
    {
        android.media.SubtitleTrack r0;
        android.media.MediaFormat $r1;

        r0 := @this: android.media.SubtitleTrack;

        $r1 = r0.<android.media.SubtitleTrack: android.media.MediaFormat mFormat>;

        return $r1;
    }

    public abstract android.media.SubtitleTrack$RenderingWidget getRenderingWidget();

    public int getTrackType()
    {
        android.media.SubtitleTrack r0;
        android.media.SubtitleTrack$RenderingWidget $r1;
        byte b0;

        r0 := @this: android.media.SubtitleTrack;

        $r1 = virtualinvoke r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        if $r1 != null goto label1;

        b0 = 3;

        goto label2;

     label1:
        b0 = 4;

     label2:
        return b0;
    }

    public void hide()
    {
        android.media.SubtitleTrack r0;
        boolean $z0;
        android.media.MediaTimeProvider r1;
        android.media.SubtitleTrack$RenderingWidget r2;

        r0 := @this: android.media.SubtitleTrack;

        $z0 = r0.<android.media.SubtitleTrack: boolean mVisible>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if r1 == null goto label2;

        interfaceinvoke r1.<android.media.MediaTimeProvider: void cancelNotifications(android.media.MediaTimeProvider$OnMediaTimeListener)>(r0);

     label2:
        r2 = virtualinvoke r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        if r2 == null goto label3;

        interfaceinvoke r2.<android.media.SubtitleTrack$RenderingWidget: void setVisible(boolean)>(0);

     label3:
        r0.<android.media.SubtitleTrack: boolean mVisible> = 0;

        return;
    }

    protected void onData(android.media.SubtitleData)
    {
        android.media.SubtitleTrack r0;
        android.media.SubtitleData r1;
        long l0, $l1, $l2, $l3, $l4, $l5;
        byte[] $r2;

        r0 := @this: android.media.SubtitleTrack;

        r1 := @parameter0: android.media.SubtitleData;

        $l1 = virtualinvoke r1.<android.media.SubtitleData: long getStartTimeUs()>();

        l0 = $l1 + 1L;

        $r2 = virtualinvoke r1.<android.media.SubtitleData: byte[] getData()>();

        virtualinvoke r0.<android.media.SubtitleTrack: void onData(byte[],boolean,long)>($r2, 1, l0);

        $l2 = virtualinvoke r1.<android.media.SubtitleData: long getStartTimeUs()>();

        $l3 = virtualinvoke r1.<android.media.SubtitleData: long getDurationUs()>();

        $l4 = $l2 + $l3;

        $l5 = $l4 / 1000L;

        virtualinvoke r0.<android.media.SubtitleTrack: void setRunDiscardTimeMs(long,long)>(l0, $l5);

        return;
    }

    public abstract void onData(byte[], boolean, long);

    public void onSeek(long)
    {
        android.media.SubtitleTrack r0;
        boolean $z0;
        java.util.Vector $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        long l1, l2;

        r0 := @this: android.media.SubtitleTrack;

        l1 := @parameter0: long;

        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSeek ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SubtitleTrack", $r5);

     label1:
        entermonitor r0;

     label2:
        l2 = l1 / 1000L;

        virtualinvoke r0.<android.media.SubtitleTrack: void updateActiveCues(boolean,long)>(1, l2);

        specialinvoke r0.<android.media.SubtitleTrack: void takeTime(long)>(l2);

        exitmonitor r0;

     label3:
        $r1 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke r0.<android.media.SubtitleTrack: void updateView(java.util.Vector)>($r1);

        virtualinvoke r0.<android.media.SubtitleTrack: void scheduleTimedEvents()>();

        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onStop()
    {
        android.media.SubtitleTrack r0;
        boolean $z0;
        java.util.Vector $r1;
        java.lang.Throwable $r2;
        android.media.MediaTimeProvider r3;

        r0 := @this: android.media.SubtitleTrack;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SubtitleTrack", "onStop");

     label2:
        virtualinvoke r0.<android.media.SubtitleTrack: void clearActiveCues()>();

        r0.<android.media.SubtitleTrack: long mLastTimeMs> = -1L;

        exitmonitor r0;

     label3:
        $r1 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke r0.<android.media.SubtitleTrack: void updateView(java.util.Vector)>($r1);

        r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs> = -1L;

        r3 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if r3 == null goto label4;

        interfaceinvoke r3.<android.media.MediaTimeProvider: void notifyAt(long,android.media.MediaTimeProvider$OnMediaTimeListener)>(-1L, r0);

     label4:
        return;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void onTimedEvent(long)
    {
        android.media.SubtitleTrack r0;
        boolean $z0;
        java.util.Vector $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        long l1, l2;

        r0 := @this: android.media.SubtitleTrack;

        l1 := @parameter0: long;

        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onTimedEvent ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SubtitleTrack", $r5);

     label1:
        entermonitor r0;

     label2:
        l2 = l1 / 1000L;

        virtualinvoke r0.<android.media.SubtitleTrack: void updateActiveCues(boolean,long)>(0, l2);

        specialinvoke r0.<android.media.SubtitleTrack: void takeTime(long)>(l2);

        exitmonitor r0;

     label3:
        $r1 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke r0.<android.media.SubtitleTrack: void updateView(java.util.Vector)>($r1);

        virtualinvoke r0.<android.media.SubtitleTrack: void scheduleTimedEvents()>();

        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected void scheduleTimedEvents()
    {
        android.media.SubtitleTrack r0;
        android.media.MediaTimeProvider $r1, r10;
        long $l0, $l1, $l3, $l4, l6, l7;
        android.media.SubtitleTrack$CueList $r2;
        boolean $z0;
        byte $b2;
        java.lang.StringBuilder $r3;
        java.lang.String $r8;

        r0 := @this: android.media.SubtitleTrack;

        $r1 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r1 == null goto label4;

        $r2 = r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$CueList mCues>;

        $l0 = r0.<android.media.SubtitleTrack: long mLastTimeMs>;

        $l1 = virtualinvoke $r2.<android.media.SubtitleTrack$CueList: long nextTimeAfter(long)>($l0);

        r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs> = $l1;

        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sched @");

        $l3 = r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after ");

        $l4 = r0.<android.media.SubtitleTrack: long mLastTimeMs>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SubtitleTrack", $r8);

     label1:
        r10 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        l6 = r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs>;

        $b2 = l6 cmp 0L;

        if $b2 < 0 goto label2;

        l7 = l6 * 1000L;

        goto label3;

     label2:
        l7 = -1L;

     label3:
        interfaceinvoke r10.<android.media.MediaTimeProvider: void notifyAt(long,android.media.MediaTimeProvider$OnMediaTimeListener)>(l7, r0);

     label4:
        return;
    }

    public void setRunDiscardTimeMs(long, long)
    {
        android.media.SubtitleTrack r0;
        long l0, l1;
        android.media.SubtitleTrack$Run r1;
        byte $b2, $b3;
        android.util.LongSparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.media.SubtitleTrack;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label1;

        $b3 = l0 cmp -1L;

        if $b3 == 0 goto label1;

        $r2 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r1 = (android.media.SubtitleTrack$Run) $r3;

        if r1 == null goto label1;

        r1.<android.media.SubtitleTrack$Run: long mEndTimeMs> = l1;

        $r4 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        virtualinvoke r1.<android.media.SubtitleTrack$Run: void storeByEndTimeMs(android.util.LongSparseArray)>($r4);

     label1:
        return;
    }

    public void setTimeProvider(android.media.MediaTimeProvider)
    {
        android.media.SubtitleTrack r0;
        android.media.MediaTimeProvider r1, $r2, $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: android.media.SubtitleTrack;

        r5 := @parameter0: android.media.MediaTimeProvider;

        entermonitor r0;

     label1:
        r1 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

     label2:
        if r1 != r5 goto label3;

        exitmonitor r0;

        return;

     label3:
        $r2 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r2 == null goto label4;

        $r3 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        interfaceinvoke $r3.<android.media.MediaTimeProvider: void cancelNotifications(android.media.MediaTimeProvider$OnMediaTimeListener)>(r0);

     label4:
        r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider> = r5;

     label5:
        if r5 == null goto label7;

     label6:
        interfaceinvoke r5.<android.media.MediaTimeProvider: void scheduleUpdate(android.media.MediaTimeProvider$OnMediaTimeListener)>(r0);

     label7:
        exitmonitor r0;

        return;

     label8:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void show()
    {
        android.media.SubtitleTrack r0;
        boolean $z0;
        android.media.SubtitleTrack$RenderingWidget r1;
        android.media.MediaTimeProvider r2;

        r0 := @this: android.media.SubtitleTrack;

        $z0 = r0.<android.media.SubtitleTrack: boolean mVisible>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.media.SubtitleTrack: boolean mVisible> = 1;

        r1 = virtualinvoke r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        if r1 == null goto label2;

        interfaceinvoke r1.<android.media.SubtitleTrack$RenderingWidget: void setVisible(boolean)>(1);

     label2:
        r2 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if r2 == null goto label3;

        interfaceinvoke r2.<android.media.MediaTimeProvider: void scheduleUpdate(android.media.MediaTimeProvider$OnMediaTimeListener)>(r0);

     label3:
        return;
    }

    protected void updateActiveCues(boolean, long)
    {
        android.media.SubtitleTrack r0;
        boolean z0, $z1, $z3, $z5;
        long l0, $l2, $l4, $l5, $l7, $l8, $l11, $l14, $l16;
        android.media.SubtitleTrack$Cue r1;
        android.util.LongSparseArray $r2, $r3;
        int $i1;
        byte $b3, $b6, $b9, $b12, $b15;
        java.lang.Object $r4, $r5, $r6, $r8;
        java.lang.Long $r7, $r9;
        long[] $r10, $r11;
        java.util.Vector $r12, $r16;
        java.lang.String $r15, $r19;
        java.lang.Throwable $r20;
        android.media.SubtitleTrack$CueList $r21;
        java.lang.Iterable $r22;
        java.util.Iterator r23;
        android.util.Pair r24;
        java.lang.StringBuilder r25, r26;

        r0 := @this: android.media.SubtitleTrack;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        entermonitor r0;

        if z0 != 0 goto label02;

     label01:
        $l14 = r0.<android.media.SubtitleTrack: long mLastUpdateTimeMs>;

        $b15 = $l14 cmp l0;

        if $b15 <= 0 goto label03;

     label02:
        virtualinvoke r0.<android.media.SubtitleTrack: void clearActiveCues()>();

     label03:
        $r21 = r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$CueList mCues>;

        $l16 = r0.<android.media.SubtitleTrack: long mLastUpdateTimeMs>;

        $r22 = virtualinvoke $r21.<android.media.SubtitleTrack$CueList: java.lang.Iterable entriesBetween(long,long)>($l16, l0);

        r23 = interfaceinvoke $r22.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label13;

        $r4 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (android.util.Pair) $r4;

        $r5 = r24.<android.util.Pair: java.lang.Object second>;

        r1 = (android.media.SubtitleTrack$Cue) $r5;

        $l4 = r1.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        $r6 = r24.<android.util.Pair: java.lang.Object first>;

        $r7 = (java.lang.Long) $r6;

        $l5 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $b6 = $l4 cmp $l5;

        if $b6 != 0 goto label07;

        $z3 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z3 == 0 goto label05;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SubtitleTrack", $r19);

     label05:
        $r16 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke $r16.<java.util.Vector: boolean remove(java.lang.Object)>(r1);

        $l11 = r1.<android.media.SubtitleTrack$Cue: long mRunID>;

        $b12 = $l11 cmp 0L;

        if $b12 != 0 goto label12;

        interfaceinvoke r23.<java.util.Iterator: void remove()>();

     label06:
        goto label12;

     label07:
        $l7 = r1.<android.media.SubtitleTrack$Cue: long mStartTimeMs>;

        $r8 = r24.<android.util.Pair: java.lang.Object first>;

        $r9 = (java.lang.Long) $r8;

        $l8 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $b9 = $l7 cmp $l8;

        if $b9 != 0 goto label11;

        $z1 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z1 == 0 goto label08;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SubtitleTrack", $r15);

     label08:
        $r11 = r1.<android.media.SubtitleTrack$Cue: long[] mInnerTimesMs>;

        if $r11 == null goto label09;

        virtualinvoke r1.<android.media.SubtitleTrack$Cue: void onTime(long)>(l0);

     label09:
        $r12 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke $r12.<java.util.Vector: boolean add(java.lang.Object)>(r1);

     label10:
        goto label12;

     label11:
        $r10 = r1.<android.media.SubtitleTrack$Cue: long[] mInnerTimesMs>;

        if $r10 == null goto label12;

        virtualinvoke r1.<android.media.SubtitleTrack$Cue: void onTime(long)>(l0);

     label12:
        goto label04;

     label13:
        $r2 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        $i1 = virtualinvoke $r2.<android.util.LongSparseArray: int size()>();

        if $i1 <= 0 goto label15;

        $r3 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        $l2 = virtualinvoke $r3.<android.util.LongSparseArray: long keyAt(int)>(0);

        $b3 = $l2 cmp l0;

        if $b3 > 0 goto label15;

        specialinvoke r0.<android.media.SubtitleTrack: void removeRunsByEndTimeIndex(int)>(0);

     label14:
        goto label13;

     label15:
        r0.<android.media.SubtitleTrack: long mLastUpdateTimeMs> = l0;

     label16:
        exitmonitor r0;

        return;

     label17:
        $r20 := @caughtexception;

        exitmonitor r0;

        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    public abstract void updateView(java.util.Vector);

    public static void <clinit>()
    {
        <android.media.SubtitleTrack: java.lang.String TAG> = "SubtitleTrack";

        return;
    }
}
