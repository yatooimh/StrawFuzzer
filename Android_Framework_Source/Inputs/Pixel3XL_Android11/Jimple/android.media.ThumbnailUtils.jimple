public class android.media.ThumbnailUtils extends java.lang.Object
{
    private static final int OPTIONS_NONE;
    public static final int OPTIONS_RECYCLE_INPUT;
    private static final int OPTIONS_SCALE_UP;
    private static final java.lang.String TAG;
    public static final int TARGET_SIZE_MICRO_THUMBNAIL;

    public void <init>()
    {
        android.media.ThumbnailUtils r0;

        r0 := @this: android.media.ThumbnailUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void closeSilently(android.os.ParcelFileDescriptor)
    {
        android.os.ParcelFileDescriptor r0;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r0);

        return;
    }

    private static int computeInitialSampleSize(android.graphics.BitmapFactory$Options, int, int)
    {
        android.graphics.BitmapFactory$Options r0;
        int i0, i1;

        r0 := @parameter0: android.graphics.BitmapFactory$Options;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return 1;
    }

    private static int computeSampleSize(android.graphics.BitmapFactory$Options, int, int)
    {
        android.graphics.BitmapFactory$Options r0;
        int i0, i1;

        r0 := @parameter0: android.graphics.BitmapFactory$Options;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return 1;
    }

    private static android.util.Size convertKind(int)
    {
        int i0;
        android.util.Size $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.provider.MediaStore$Images$Thumbnails: android.util.Size getKindSize(int)>(i0);

        return $r0;
    }

    public static android.graphics.Bitmap createAudioThumbnail(java.io.File, android.util.Size, android.os.CancellationSignal) throws java.io.IOException
    {
        android.os.CancellationSignal r0;
        java.lang.String $r3, $r4, $r5, $r19, $r20, $r22, $r23;
        boolean $z0, $z1, $z2;
        java.io.File $r7, r30, r35, r36, r39;
        android.media.'-$$Lambda$ThumbnailUtils$P13h9YbyD69p6ss1gYpoef43_MU' $r8;
        java.io.File[] $r9, r37;
        android.media.'-$$Lambda$ThumbnailUtils$qOH5vebuTwPi2G92PTa6rgwKGoc' $r11;
        java.util.List $r12;
        java.util.stream.Stream $r13;
        java.util.Optional $r14;
        java.lang.Object $r15;
        android.graphics.ImageDecoder$Source $r17, $r25;
        android.graphics.Bitmap $r18, r34;
        java.lang.RuntimeException $r26;
        java.lang.Throwable $r28, $r29;
        android.util.Size r31;
        byte[] r33;
        android.media.ThumbnailUtils$Resizer r43;
        android.media.MediaMetadataRetriever r44;
        java.io.IOException r45, r46, r48, r49, r50;
        android.media._$$Lambda$ThumbnailUtils$HhGKNQZck57eO__Paj6KyQm6lCk r47;
        java.io.FilenameFilter r51;
        java.util.function.ToIntFunction r52;

        r30 := @parameter0: java.io.File;

        r31 := @parameter1: android.util.Size;

        r0 := @parameter2: android.os.CancellationSignal;

        if r0 == null goto label01;

        virtualinvoke r0.<android.os.CancellationSignal: void throwIfCanceled()>();

     label01:
        r43 = new android.media.ThumbnailUtils$Resizer;

        specialinvoke r43.<android.media.ThumbnailUtils$Resizer: void <init>(android.util.Size,android.os.CancellationSignal)>(r31, r0);

     label02:
        r44 = new android.media.MediaMetadataRetriever;

        specialinvoke r44.<android.media.MediaMetadataRetriever: void <init>()>();

     label03:
        $r3 = virtualinvoke r30.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r44.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>($r3);

        r33 = virtualinvoke r44.<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()>();

     label04:
        if r33 == null goto label08;

     label05:
        $r25 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder$Source createSource(byte[])>(r33);

        r34 = staticinvoke <android.graphics.ImageDecoder: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener)>($r25, r43);

     label06:
        virtualinvoke r44.<android.media.MediaMetadataRetriever: void close()>();

     label07:
        return r34;

     label08:
        virtualinvoke r44.<android.media.MediaMetadataRetriever: void close()>();

     label09:
        $r4 = "unknown";

        $r5 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState(java.io.File)>(r30);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label18;

        r35 = virtualinvoke r30.<java.io.File: java.io.File getParentFile()>();

        if r35 == null goto label10;

        r36 = virtualinvoke r35.<java.io.File: java.io.File getParentFile()>();

        goto label11;

     label10:
        r36 = null;

     label11:
        if r35 == null goto label13;

        $r22 = virtualinvoke r35.<java.io.File: java.lang.String getName()>();

        $r23 = <android.os.Environment: java.lang.String DIRECTORY_DOWNLOADS>;

        $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z2 != 0 goto label12;

        goto label13;

     label12:
        r45 = new java.io.IOException;

        specialinvoke r45.<java.io.IOException: void <init>(java.lang.String)>("No thumbnails in Downloads directories");

        throw r45;

     label13:
        if r36 == null goto label15;

        $r19 = "unknown";

        $r20 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState(java.io.File)>(r36);

        $z1 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z1 != 0 goto label14;

        goto label15;

     label14:
        r46 = new java.io.IOException;

        specialinvoke r46.<java.io.IOException: void <init>(java.lang.String)>("No thumbnails in top-level directories");

        throw r46;

     label15:
        $r7 = virtualinvoke r30.<java.io.File: java.io.File getParentFile()>();

        $r8 = <android.media._$$Lambda$ThumbnailUtils$P13h9YbyD69p6ss1gYpoef43_MU: android.media.'-$$Lambda$ThumbnailUtils$P13h9YbyD69p6ss1gYpoef43_MU' INSTANCE>;

        r51 = (java.io.FilenameFilter) $r8;

        $r9 = virtualinvoke $r7.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>(r51);

        r37 = staticinvoke <com.android.internal.util.ArrayUtils: java.io.File[] defeatNullable(java.io.File[])>($r9);

        r47 = new android.media._$$Lambda$ThumbnailUtils$HhGKNQZck57eO__Paj6KyQm6lCk;

        $r11 = <android.media._$$Lambda$ThumbnailUtils$qOH5vebuTwPi2G92PTa6rgwKGoc: android.media.'-$$Lambda$ThumbnailUtils$qOH5vebuTwPi2G92PTa6rgwKGoc' INSTANCE>;

        r52 = (java.util.function.ToIntFunction) $r11;

        specialinvoke r47.<android.media._$$Lambda$ThumbnailUtils$HhGKNQZck57eO__Paj6KyQm6lCk: void <init>(java.util.function.ToIntFunction)>(r52);

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r37);

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.stream.Stream stream()>();

        $r14 = interfaceinvoke $r13.<java.util.stream.Stream: java.util.Optional max(java.util.Comparator)>(r47);

        $r15 = virtualinvoke $r14.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        r39 = (java.io.File) $r15;

        if r39 == null goto label17;

        if r0 == null goto label16;

        virtualinvoke r0.<android.os.CancellationSignal: void throwIfCanceled()>();

     label16:
        $r17 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder$Source createSource(java.io.File)>(r39);

        $r18 = staticinvoke <android.graphics.ImageDecoder: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener)>($r17, r43);

        return $r18;

     label17:
        r48 = new java.io.IOException;

        specialinvoke r48.<java.io.IOException: void <init>(java.lang.String)>("No album art found");

        throw r48;

     label18:
        r49 = new java.io.IOException;

        specialinvoke r49.<java.io.IOException: void <init>(java.lang.String)>("No embedded album art found");

        throw r49;

     label19:
        $r29 := @caughtexception;

     label20:
        virtualinvoke r44.<android.media.MediaMetadataRetriever: void close()>();

     label21:
        goto label24;

     label22:
        $r28 := @caughtexception;

     label23:
        virtualinvoke $r29.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r28);

     label24:
        throw $r29;

     label25:
        $r26 := @caughtexception;

        r50 = new java.io.IOException;

        specialinvoke r50.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create thumbnail", $r26);

        throw r50;

        catch java.lang.RuntimeException from label02 to label03 with label25;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.RuntimeException from label06 to label07 with label25;
        catch java.lang.RuntimeException from label08 to label09 with label25;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.RuntimeException from label23 to label24 with label25;
        catch java.lang.RuntimeException from label24 to label25 with label25;
    }

    public static android.graphics.Bitmap createAudioThumbnail(java.lang.String, int)
    {
        int i0;
        java.io.File r0;
        android.util.Size $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        android.graphics.Bitmap r4;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        r0 = new java.io.File;

        specialinvoke r0.<java.io.File: void <init>(java.lang.String)>(r3);

        $r1 = staticinvoke <android.media.ThumbnailUtils: android.util.Size convertKind(int)>(i0);

        r4 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap createAudioThumbnail(java.io.File,android.util.Size,android.os.CancellationSignal)>(r0, $r1, null);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ThumbnailUtils", $r2);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static android.graphics.Bitmap createImageThumbnail(java.io.File, android.util.Size, android.os.CancellationSignal) throws java.io.IOException
    {
        android.os.CancellationSignal r0;
        int i0, i1, $i2, $i3, i5, $i7, $i8, $i9, $i10;
        android.media.ThumbnailUtils$Resizer $r2;
        java.lang.String $r3, r16, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.graphics.Matrix $r4;
        float $f0, $f1, $f2;
        android.graphics.ImageDecoder$Source $r5, $r7;
        android.graphics.Bitmap $r6, r17, r22, r25;
        android.media.ExifInterface $r8, r18;
        android.graphics.ImageDecoder$DecodeException $r9;
        java.lang.Throwable $r10, $r11;
        java.lang.RuntimeException $r12;
        java.io.IOException $r13;
        java.io.File r14;
        android.util.Size r15;
        short s6;
        android.media.MediaMetadataRetriever r19;
        android.media.MediaMetadataRetriever$BitmapParams r21;
        byte[] r23;

        r14 := @parameter0: java.io.File;

        r15 := @parameter1: android.util.Size;

        r0 := @parameter2: android.os.CancellationSignal;

        if r0 == null goto label01;

        virtualinvoke r0.<android.os.CancellationSignal: void throwIfCanceled()>();

     label01:
        $r2 = new android.media.ThumbnailUtils$Resizer;

        specialinvoke $r2.<android.media.ThumbnailUtils$Resizer: void <init>(android.util.Size,android.os.CancellationSignal)>(r15, r0);

        $r3 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();

        r16 = staticinvoke <android.media.MediaFile: java.lang.String getMimeTypeForFile(java.lang.String)>($r3);

        r17 = null;

        $z0 = staticinvoke <android.media.MediaFile: boolean isExifMimeType(java.lang.String)>(r16);

        if $z0 == 0 goto label05;

        $r8 = new android.media.ExifInterface;

        specialinvoke $r8.<android.media.ExifInterface: void <init>(java.io.File)>(r14);

        r18 = $r8;

        i5 = virtualinvoke $r8.<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 0);

        if i5 == 3 goto label04;

        if i5 == 6 goto label03;

        if i5 == 8 goto label02;

        s6 = 0;

        goto label06;

     label02:
        s6 = 270;

        goto label06;

     label03:
        s6 = 90;

        goto label06;

     label04:
        s6 = 180;

        goto label06;

     label05:
        s6 = 0;

        r18 = null;

     label06:
        $z4 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("image/heif");

        if $z4 != 0 goto label07;

        $z1 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("image/heif-sequence");

        if $z1 != 0 goto label07;

        $z2 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("image/heic");

        if $z2 != 0 goto label07;

        $z3 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("image/heic-sequence");

        if $z3 == 0 goto label10;

     label07:
        r19 = new android.media.MediaMetadataRetriever;

        specialinvoke r19.<android.media.MediaMetadataRetriever: void <init>()>();

     label08:
        $r20 = virtualinvoke r14.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r19.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>($r20);

        r21 = new android.media.MediaMetadataRetriever$BitmapParams;

        specialinvoke r21.<android.media.MediaMetadataRetriever$BitmapParams: void <init>()>();

        $i7 = virtualinvoke r15.<android.util.Size: int getWidth()>();

        $i8 = virtualinvoke r15.<android.util.Size: int getWidth()>();

        $i9 = virtualinvoke r15.<android.util.Size: int getHeight()>();

        $i10 = $i8 * $i9;

        r17 = virtualinvoke r19.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getThumbnailImageAtIndex(int,android.media.MediaMetadataRetriever$BitmapParams,int,int)>(-1, r21, $i7, $i10);

     label09:
        virtualinvoke r19.<android.media.MediaMetadataRetriever: void close()>();

     label10:
        r22 = r17;

        if r17 != null goto label14;

        r22 = r17;

        if r18 == null goto label14;

        r23 = virtualinvoke r18.<android.media.ExifInterface: byte[] getThumbnailBytes()>();

        r22 = r17;

        if r23 == null goto label14;

     label11:
        $r7 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder$Source createSource(byte[])>(r23);

        r22 = staticinvoke <android.graphics.ImageDecoder: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener)>($r7, $r2);

     label12:
        goto label14;

     label13:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ThumbnailUtils", $r9);

        r22 = r17;

     label14:
        if r0 == null goto label15;

        virtualinvoke r0.<android.os.CancellationSignal: void throwIfCanceled()>();

     label15:
        if r22 != null goto label16;

        $r5 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder$Source createSource(java.io.File)>(r14);

        $r6 = staticinvoke <android.graphics.ImageDecoder: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener)>($r5, $r2);

        return $r6;

     label16:
        r25 = r22;

        if s6 == 0 goto label17;

        r25 = r22;

        if r22 == null goto label17;

        i0 = virtualinvoke r22.<android.graphics.Bitmap: int getWidth()>();

        i1 = virtualinvoke r22.<android.graphics.Bitmap: int getHeight()>();

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        $f2 = (float) s6;

        $i2 = i0 / 2;

        $f1 = (float) $i2;

        $i3 = i1 / 2;

        $f0 = (float) $i3;

        virtualinvoke $r4.<android.graphics.Matrix: void setRotate(float,float,float)>($f2, $f1, $f0);

        r25 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r22, 0, 0, i0, i1, $r4, 0);

     label17:
        return r25;

     label18:
        $r10 := @caughtexception;

     label19:
        virtualinvoke r19.<android.media.MediaMetadataRetriever: void close()>();

     label20:
        goto label23;

     label21:
        $r11 := @caughtexception;

     label22:
        virtualinvoke $r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r11);

     label23:
        throw $r10;

     label24:
        $r12 := @caughtexception;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create thumbnail", $r12);

        throw $r13;

        catch java.lang.RuntimeException from label07 to label08 with label24;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.RuntimeException from label09 to label10 with label24;
        catch android.graphics.ImageDecoder$DecodeException from label11 to label12 with label13;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.RuntimeException from label22 to label23 with label24;
        catch java.lang.RuntimeException from label23 to label24 with label24;
    }

    public static android.graphics.Bitmap createImageThumbnail(java.lang.String, int)
    {
        int i0;
        java.io.File r0;
        android.util.Size $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        android.graphics.Bitmap r4;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        r0 = new java.io.File;

        specialinvoke r0.<java.io.File: void <init>(java.lang.String)>(r3);

        $r1 = staticinvoke <android.media.ThumbnailUtils: android.util.Size convertKind(int)>(i0);

        r4 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap createImageThumbnail(java.io.File,android.util.Size,android.os.CancellationSignal)>(r0, $r1, null);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ThumbnailUtils", $r2);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void createThumbnailFromEXIF(java.lang.String, int, int, android.media.ThumbnailUtils$SizedThumbnailBitmap)
    {
        java.lang.String r0;
        int i0, i1;
        android.media.ThumbnailUtils$SizedThumbnailBitmap r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.media.ThumbnailUtils$SizedThumbnailBitmap;

        return;
    }

    public static android.graphics.Bitmap createVideoThumbnail(java.io.File, android.util.Size, android.os.CancellationSignal) throws java.io.IOException
    {
        int i0, i1, $i5, $i6, $i7, $i8;
        long l2, $l3, $l4;
        android.media.ThumbnailUtils$Resizer $r1;
        java.lang.String $r2, $r4, $r5, $r6;
        android.graphics.Bitmap$Config $r3;
        android.graphics.ImageDecoder$Source $r9;
        java.lang.RuntimeException $r10;
        java.io.IOException $r11;
        java.lang.Throwable $r12, $r13;
        java.io.File r14;
        android.util.Size r15;
        android.os.CancellationSignal r16;
        android.media.MediaMetadataRetriever r17;
        byte[] r18;
        android.graphics.Bitmap r19, r21, r22, r23, r24;
        android.media.MediaMetadataRetriever$BitmapParams r20;

        r14 := @parameter0: java.io.File;

        r15 := @parameter1: android.util.Size;

        r16 := @parameter2: android.os.CancellationSignal;

        if r16 == null goto label01;

        virtualinvoke r16.<android.os.CancellationSignal: void throwIfCanceled()>();

     label01:
        $r1 = new android.media.ThumbnailUtils$Resizer;

        specialinvoke $r1.<android.media.ThumbnailUtils$Resizer: void <init>(android.util.Size,android.os.CancellationSignal)>(r15, r16);

     label02:
        r17 = new android.media.MediaMetadataRetriever;

        specialinvoke r17.<android.media.MediaMetadataRetriever: void <init>()>();

     label03:
        $r2 = virtualinvoke r14.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r17.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>($r2);

        r18 = virtualinvoke r17.<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()>();

     label04:
        if r18 == null goto label08;

     label05:
        $r9 = staticinvoke <android.graphics.ImageDecoder: android.graphics.ImageDecoder$Source createSource(byte[])>(r18);

        r19 = staticinvoke <android.graphics.ImageDecoder: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener)>($r9, $r1);

     label06:
        virtualinvoke r17.<android.media.MediaMetadataRetriever: void close()>();

     label07:
        return r19;

     label08:
        r20 = new android.media.MediaMetadataRetriever$BitmapParams;

        specialinvoke r20.<android.media.MediaMetadataRetriever$BitmapParams: void <init>()>();

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        virtualinvoke r20.<android.media.MediaMetadataRetriever$BitmapParams: void setPreferredConfig(android.graphics.Bitmap$Config)>($r3);

        $r4 = virtualinvoke r17.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(18);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r5 = virtualinvoke r17.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(19);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $r6 = virtualinvoke r17.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(9);

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        $l4 = $l3 * 1000L;

        l2 = $l4 / 2L;

        $i5 = virtualinvoke r15.<android.util.Size: int getWidth()>();

        if $i5 <= i0 goto label11;

        $i8 = virtualinvoke r15.<android.util.Size: int getHeight()>();

        if $i8 <= i1 goto label11;

        r21 = virtualinvoke r17.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int,android.media.MediaMetadataRetriever$BitmapParams)>(l2, 2, r20);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r21);

        r22 = (android.graphics.Bitmap) r21;

     label09:
        virtualinvoke r17.<android.media.MediaMetadataRetriever: void close()>();

     label10:
        return r22;

     label11:
        $i6 = virtualinvoke r15.<android.util.Size: int getWidth()>();

        $i7 = virtualinvoke r15.<android.util.Size: int getHeight()>();

        r23 = virtualinvoke r17.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getScaledFrameAtTime(long,int,int,int,android.media.MediaMetadataRetriever$BitmapParams)>(l2, 2, $i6, $i7, r20);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r23);

        r24 = (android.graphics.Bitmap) r23;

     label12:
        virtualinvoke r17.<android.media.MediaMetadataRetriever: void close()>();

     label13:
        return r24;

     label14:
        $r13 := @caughtexception;

     label15:
        virtualinvoke r17.<android.media.MediaMetadataRetriever: void close()>();

     label16:
        goto label19;

     label17:
        $r12 := @caughtexception;

     label18:
        virtualinvoke $r13.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r12);

     label19:
        throw $r13;

     label20:
        $r10 := @caughtexception;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create thumbnail", $r10);

        throw $r11;

        catch java.lang.RuntimeException from label02 to label03 with label20;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.RuntimeException from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.RuntimeException from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.RuntimeException from label12 to label13 with label20;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.RuntimeException from label18 to label19 with label20;
        catch java.lang.RuntimeException from label19 to label20 with label20;
    }

    public static android.graphics.Bitmap createVideoThumbnail(java.lang.String, int)
    {
        int i0;
        java.io.File r0;
        android.util.Size $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;
        android.graphics.Bitmap r4;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        r0 = new java.io.File;

        specialinvoke r0.<java.io.File: void <init>(java.lang.String)>(r3);

        $r1 = staticinvoke <android.media.ThumbnailUtils: android.util.Size convertKind(int)>(i0);

        r4 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.io.File,android.util.Size,android.os.CancellationSignal)>(r0, $r1, null);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ThumbnailUtils", $r2);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap, int, int)
    {
        android.graphics.Bitmap r0, $r1;
        int i0, i1;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>(r0, i0, i1, 0);

        return $r1;
    }

    public static android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap, int, int, int)
    {
        android.graphics.Bitmap r0, $r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1, $f2, $f3, f4;
        android.graphics.Matrix $r2;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if r0 != null goto label1;

        return null;

     label1:
        $i3 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $i4 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        if $i3 >= $i4 goto label2;

        $f2 = (float) i0;

        $i7 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f3 = (float) $i7;

        f4 = $f2 / $f3;

        goto label3;

     label2:
        $f0 = (float) i1;

        $i5 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i5;

        f4 = $f0 / $f1;

     label3:
        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r2.<android.graphics.Matrix: void setScale(float,float)>(f4, f4);

        $i6 = i2 | 1;

        $r3 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,int)>($r2, r0, i0, i1, $i6);

        return $r3;
    }

    static boolean lambda$createAudioThumbnail$0(java.io.File, java.lang.String)
    {
        java.lang.String r0, r2;
        boolean $z0, $z1, z2;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        r0 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".jpg");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".png");

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    static int lambda$createAudioThumbnail$1(java.io.File)
    {
        java.lang.String $r0, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        $r0 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        r2 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("albumart.jpg");

        if $z0 == 0 goto label1;

        return 4;

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("albumart");

        if $z1 == 0 goto label2;

        $z5 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".jpg");

        if $z5 == 0 goto label2;

        return 3;

     label2:
        $z2 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("albumart");

        if $z2 == 0 goto label3;

        $z4 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".jpg");

        if $z4 == 0 goto label3;

        return 2;

     label3:
        $z3 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".jpg");

        if $z3 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    static int lambda$createAudioThumbnail$2(java.util.function.ToIntFunction, java.io.File, java.io.File)
    {
        java.util.function.ToIntFunction r0;
        java.io.File r1, r2;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.util.function.ToIntFunction;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.io.File;

        $i0 = interfaceinvoke r0.<java.util.function.ToIntFunction: int applyAsInt(java.lang.Object)>(r1);

        $i1 = interfaceinvoke r0.<java.util.function.ToIntFunction: int applyAsInt(java.lang.Object)>(r2);

        $i2 = $i0 - $i1;

        return $i2;
    }

    private static android.os.ParcelFileDescriptor makeInputStream(android.net.Uri, android.content.ContentResolver)
    {
        android.content.ContentResolver r0;
        java.lang.Throwable $r1;
        android.net.Uri r2;
        android.os.ParcelFileDescriptor r3;

        r2 := @parameter0: android.net.Uri;

        r0 := @parameter1: android.content.ContentResolver;

     label1:
        r3 = virtualinvoke r0.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>(r2, "r");

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static android.graphics.Bitmap transform(android.graphics.Matrix, android.graphics.Bitmap, int, int, int)
    {
        android.graphics.Bitmap r0, r7, r9, r10;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, i33, i34, i35, $i36, $i37, i38, $i39, $i40, i41, $i42, $i43;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8, f9;
        byte $b9, $b10, $b13, $b14, $b15;
        android.graphics.Bitmap$Config $r2;
        android.graphics.Canvas $r3;
        android.graphics.Rect $r4, $r5;
        android.graphics.Matrix r6;
        boolean z1, z2;

        r6 := @parameter0: android.graphics.Matrix;

        r0 := @parameter1: android.graphics.Bitmap;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i30 := @parameter4: int;

        $i3 = i30 & 1;

        if $i3 == 0 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        $i4 = i30 & 2;

        if $i4 == 0 goto label03;

        z2 = 1;

        goto label04;

     label03:
        z2 = 0;

     label04:
        $i5 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        i2 = $i5 - i0;

        $i6 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        i31 = $i6 - i1;

        if z1 != 0 goto label07;

        if i2 < 0 goto label05;

        if i31 >= 0 goto label07;

     label05:
        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r2);

        $r3 = new android.graphics.Canvas;

        specialinvoke $r3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r7);

        $i16 = i2 / 2;

        i32 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i16);

        $i17 = i31 / 2;

        i33 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i17);

        $r4 = new android.graphics.Rect;

        $i18 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $i19 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i18);

        $i20 = $i19 + i32;

        $i21 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $i22 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i21);

        $i23 = $i22 + i33;

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>(i32, i33, $i20, $i23);

        $i24 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        $i25 = i0 - $i24;

        i34 = $i25 / 2;

        $i26 = virtualinvoke $r4.<android.graphics.Rect: int height()>();

        $i27 = i1 - $i26;

        i35 = $i27 / 2;

        $r5 = new android.graphics.Rect;

        $i29 = i0 - i34;

        $i28 = i1 - i35;

        specialinvoke $r5.<android.graphics.Rect: void <init>(int,int,int,int)>(i34, i35, $i29, $i28);

        virtualinvoke $r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>(r0, $r4, $r5, null);

        if z2 == 0 goto label06;

        virtualinvoke r0.<android.graphics.Bitmap: void recycle()>();

     label06:
        virtualinvoke $r3.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return r7;

     label07:
        $i7 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        f7 = (float) $i7;

        $i8 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        f0 = (float) $i8;

        $f4 = f7 / f0;

        $f2 = (float) i0;

        $f1 = (float) i1;

        $f3 = $f2 / $f1;

        $b9 = $f4 cmpl $f3;

        if $b9 <= 0 goto label11;

        $f6 = (float) i1;

        f8 = $f6 / f0;

        $b14 = f8 cmpg 0.9F;

        if $b14 < 0 goto label09;

        $b15 = f8 cmpl 1.0F;

        if $b15 <= 0 goto label08;

        goto label09;

     label08:
        r6 = null;

        goto label10;

     label09:
        virtualinvoke r6.<android.graphics.Matrix: void setScale(float,float)>(f8, f8);

     label10:
        goto label14;

     label11:
        $f5 = (float) i0;

        f9 = $f5 / f7;

        $b10 = f9 cmpg 0.9F;

        if $b10 < 0 goto label13;

        $b13 = f9 cmpl 1.0F;

        if $b13 <= 0 goto label12;

        goto label13;

     label12:
        r6 = null;

        goto label14;

     label13:
        virtualinvoke r6.<android.graphics.Matrix: void setScale(float,float)>(f9, f9);

     label14:
        if r6 == null goto label15;

        $i11 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $i12 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        r9 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r0, 0, 0, $i11, $i12, r6, 1);

        goto label16;

     label15:
        r9 = r0;

     label16:
        if z2 == 0 goto label17;

        if r9 == r0 goto label17;

        virtualinvoke r0.<android.graphics.Bitmap: void recycle()>();

     label17:
        $i36 = virtualinvoke r9.<android.graphics.Bitmap: int getWidth()>();

        $i37 = $i36 - i0;

        i38 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i37);

        $i39 = virtualinvoke r9.<android.graphics.Bitmap: int getHeight()>();

        $i40 = $i39 - i1;

        i41 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i40);

        $i42 = i38 / 2;

        $i43 = i41 / 2;

        r10 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>(r9, $i42, $i43, i0, i1);

        if r10 == r9 goto label19;

        if z2 != 0 goto label18;

        if r9 == r0 goto label19;

     label18:
        virtualinvoke r9.<android.graphics.Bitmap: void recycle()>();

     label19:
        return r10;
    }

    public static void <clinit>()
    {
        <android.media.ThumbnailUtils: int TARGET_SIZE_MICRO_THUMBNAIL> = 96;

        <android.media.ThumbnailUtils: java.lang.String TAG> = "ThumbnailUtils";

        <android.media.ThumbnailUtils: int OPTIONS_SCALE_UP> = 1;

        <android.media.ThumbnailUtils: int OPTIONS_RECYCLE_INPUT> = 2;

        <android.media.ThumbnailUtils: int OPTIONS_NONE> = 0;

        return;
    }
}
