class android.media.TtmlTrack extends android.media.SubtitleTrack implements android.media.TtmlNodeListener
{
    private static final java.lang.String TAG;
    private java.lang.Long mCurrentRunID;
    private final android.media.TtmlParser mParser;
    private java.lang.String mParsingData;
    private final android.media.TtmlRenderingWidget mRenderingWidget;
    private android.media.TtmlNode mRootNode;
    private final java.util.TreeSet mTimeEvents;
    private final java.util.LinkedList mTtmlNodes;

    void <init>(android.media.TtmlRenderingWidget, android.media.MediaFormat)
    {
        android.media.TtmlTrack r0;
        android.media.TtmlRenderingWidget r1;
        android.media.MediaFormat r2;
        android.media.TtmlParser $r3;
        java.util.LinkedList $r4;
        java.util.TreeSet $r5;

        r0 := @this: android.media.TtmlTrack;

        r1 := @parameter0: android.media.TtmlRenderingWidget;

        r2 := @parameter1: android.media.MediaFormat;

        specialinvoke r0.<android.media.SubtitleTrack: void <init>(android.media.MediaFormat)>(r2);

        $r3 = new android.media.TtmlParser;

        specialinvoke $r3.<android.media.TtmlParser: void <init>(android.media.TtmlNodeListener)>(r0);

        r0.<android.media.TtmlTrack: android.media.TtmlParser mParser> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<android.media.TtmlTrack: java.util.LinkedList mTtmlNodes> = $r4;

        $r5 = new java.util.TreeSet;

        specialinvoke $r5.<java.util.TreeSet: void <init>()>();

        r0.<android.media.TtmlTrack: java.util.TreeSet mTimeEvents> = $r5;

        r0.<android.media.TtmlTrack: android.media.TtmlRenderingWidget mRenderingWidget> = r1;

        r0.<android.media.TtmlTrack: java.lang.String mParsingData> = "";

        return;
    }

    private void addTimeEvents(android.media.TtmlNode)
    {
        android.media.TtmlTrack r0;
        android.media.TtmlNode r1, $r9;
        long $l0, $l1;
        java.util.TreeSet $r2, $r4;
        java.lang.Long $r3, $r5;
        java.util.List $r6, $r7;
        int $i2, i3;
        java.lang.Object $r8;

        r0 := @this: android.media.TtmlTrack;

        r1 := @parameter0: android.media.TtmlNode;

        $r2 = r0.<android.media.TtmlTrack: java.util.TreeSet mTimeEvents>;

        $l0 = r1.<android.media.TtmlNode: long mStartTimeMs>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r2.<java.util.TreeSet: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<android.media.TtmlTrack: java.util.TreeSet mTimeEvents>;

        $l1 = r1.<android.media.TtmlNode: long mEndTimeMs>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r4.<java.util.TreeSet: boolean add(java.lang.Object)>($r5);

        i3 = 0;

     label1:
        $r6 = r1.<android.media.TtmlNode: java.util.List mChildren>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i3 >= $i2 goto label2;

        $r7 = r1.<android.media.TtmlNode: java.util.List mChildren>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i3);

        $r9 = (android.media.TtmlNode) $r8;

        specialinvoke r0.<android.media.TtmlTrack: void addTimeEvents(android.media.TtmlNode)>($r9);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private java.util.List getActiveNodes(long, long)
    {
        android.media.TtmlTrack r0;
        long l0, l1;
        android.media.TtmlNode r2;
        java.util.ArrayList $r3;
        java.util.LinkedList $r4, $r5;
        int $i2, i3;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: android.media.TtmlTrack;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label1:
        $r4 = r0.<android.media.TtmlTrack: java.util.LinkedList mTtmlNodes>;

        $i2 = virtualinvoke $r4.<java.util.LinkedList: int size()>();

        if i3 >= $i2 goto label3;

        $r5 = r0.<android.media.TtmlTrack: java.util.LinkedList mTtmlNodes>;

        $r6 = virtualinvoke $r5.<java.util.LinkedList: java.lang.Object get(int)>(i3);

        r2 = (android.media.TtmlNode) $r6;

        $z0 = virtualinvoke r2.<android.media.TtmlNode: boolean isActive(long,long)>(l0, l1);

        if $z0 == 0 goto label2;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return $r3;
    }

    public android.media.TtmlCue getNextResult()
    {
        android.media.TtmlTrack r0;
        long l0, l1;
        java.util.TreeSet $r1, $r2, $r5;
        int $i2;
        java.lang.Object $r3, $r6;
        java.lang.Long $r4, $r7;
        java.util.List $r8;
        boolean $z0;
        android.media.TtmlCue $r9;
        android.media.TtmlNode $r10, $r13;
        java.lang.String $r11, $r12, $r14;

        r0 := @this: android.media.TtmlTrack;

     label1:
        $r1 = r0.<android.media.TtmlTrack: java.util.TreeSet mTimeEvents>;

        $i2 = virtualinvoke $r1.<java.util.TreeSet: int size()>();

        if $i2 < 2 goto label3;

        $r2 = r0.<android.media.TtmlTrack: java.util.TreeSet mTimeEvents>;

        $r3 = virtualinvoke $r2.<java.util.TreeSet: java.lang.Object pollFirst()>();

        $r4 = (java.lang.Long) $r3;

        l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $r5 = r0.<android.media.TtmlTrack: java.util.TreeSet mTimeEvents>;

        $r6 = virtualinvoke $r5.<java.util.TreeSet: java.lang.Object first()>();

        $r7 = (java.lang.Long) $r6;

        l1 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $r8 = specialinvoke r0.<android.media.TtmlTrack: java.util.List getActiveNodes(long,long)>(l0, l1);

        $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r9 = new android.media.TtmlCue;

        $r10 = r0.<android.media.TtmlTrack: android.media.TtmlNode mRootNode>;

        $r11 = staticinvoke <android.media.TtmlUtils: java.lang.String extractText(android.media.TtmlNode,long,long)>($r10, l0, l1);

        $r12 = staticinvoke <android.media.TtmlUtils: java.lang.String applySpacePolicy(java.lang.String,boolean)>($r11, 0);

        $r13 = r0.<android.media.TtmlTrack: android.media.TtmlNode mRootNode>;

        $r14 = staticinvoke <android.media.TtmlUtils: java.lang.String extractTtmlFragment(android.media.TtmlNode,long,long)>($r13, l0, l1);

        specialinvoke $r9.<android.media.TtmlCue: void <init>(long,long,java.lang.String,java.lang.String)>(l0, l1, $r12, $r14);

        return $r9;

     label2:
        goto label1;

     label3:
        return null;
    }

    public volatile android.media.SubtitleTrack$RenderingWidget getRenderingWidget()
    {
        android.media.TtmlTrack r0;
        android.media.TtmlRenderingWidget $r1;

        r0 := @this: android.media.TtmlTrack;

        $r1 = virtualinvoke r0.<android.media.TtmlTrack: android.media.TtmlRenderingWidget getRenderingWidget()>();

        return $r1;
    }

    public android.media.TtmlRenderingWidget getRenderingWidget()
    {
        android.media.TtmlTrack r0;
        android.media.TtmlRenderingWidget $r1;

        r0 := @this: android.media.TtmlTrack;

        $r1 = r0.<android.media.TtmlTrack: android.media.TtmlRenderingWidget mRenderingWidget>;

        return $r1;
    }

    public void onData(byte[], boolean, long)
    {
        android.media.TtmlTrack r0;
        boolean z0;
        long l0, $l1, $l2;
        java.lang.Long $r1, $r2, $r6, $r8, $r10;
        java.lang.String $r3, $r14, $r22, r29, r35;
        android.media.TtmlParser $r7, r25;
        byte $b3;
        java.lang.Throwable $r15, $r16, $r17, $r18;
        byte[] r23;
        java.lang.StringBuilder r36, r38, r39;
        java.lang.IllegalStateException r37;
        java.io.IOException r40;
        org.xmlpull.v1.XmlPullParserException r41;

        r0 := @this: android.media.TtmlTrack;

        r23 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

     label01:
        r35 = new java.lang.String;

        specialinvoke r35.<java.lang.String: void <init>(byte[],java.lang.String)>(r23, "UTF-8");

        r25 = r0.<android.media.TtmlTrack: android.media.TtmlParser mParser>;

        entermonitor r25;

     label02:
        $r1 = r0.<android.media.TtmlTrack: java.lang.Long mCurrentRunID>;

        if $r1 == null goto label05;

        $r8 = r0.<android.media.TtmlTrack: java.lang.Long mCurrentRunID>;

        $l2 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        $b3 = l0 cmp $l2;

        if $b3 != 0 goto label04;

     label03:
        goto label05;

     label04:
        r37 = new java.lang.IllegalStateException;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Run #");

        $r10 = r0.<android.media.TtmlTrack: java.lang.Long mCurrentRunID>;

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in progress.  Cannot process run #");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r14 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r37.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw r37;

     label05:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r0.<android.media.TtmlTrack: java.lang.Long mCurrentRunID> = $r2;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.media.TtmlTrack: java.lang.String mParsingData>;

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        r29 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.media.TtmlTrack: java.lang.String mParsingData> = r29;

     label06:
        if z0 == 0 goto label15;

     label07:
        $r7 = r0.<android.media.TtmlTrack: android.media.TtmlParser mParser>;

        $r6 = r0.<android.media.TtmlTrack: java.lang.Long mCurrentRunID>;

        $l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        virtualinvoke $r7.<android.media.TtmlParser: void parse(java.lang.String,long)>(r29, $l1);

     label08:
        goto label14;

     label09:
        $r17 := @caughtexception;

     label10:
        r40 = (java.io.IOException) $r17;

        virtualinvoke r40.<java.io.IOException: void printStackTrace()>();

     label11:
        goto label14;

     label12:
        $r15 := @caughtexception;

     label13:
        r41 = (org.xmlpull.v1.XmlPullParserException) $r15;

        virtualinvoke r41.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

     label14:
        virtualinvoke r0.<android.media.TtmlTrack: void finishedRun(long)>(l0);

        r0.<android.media.TtmlTrack: java.lang.String mParsingData> = "";

        r0.<android.media.TtmlTrack: java.lang.Long mCurrentRunID> = null;

     label15:
        exitmonitor r25;

     label16:
        goto label21;

     label17:
        $r16 := @caughtexception;

     label18:
        exitmonitor r25;

     label19:
        throw $r16;

     label20:
        $r18 := @caughtexception;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subtitle data is not UTF-8 encoded: ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r22 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtmlTrack", $r22);

     label21:
        return;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label12;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label20;
    }

    public void onRootNodeParsed(android.media.TtmlNode)
    {
        android.media.TtmlTrack r0;
        java.util.LinkedList $r1;
        java.util.TreeSet $r2;
        android.media.TtmlNode r3;
        android.media.TtmlCue r4;

        r0 := @this: android.media.TtmlTrack;

        r3 := @parameter0: android.media.TtmlNode;

        r0.<android.media.TtmlTrack: android.media.TtmlNode mRootNode> = r3;

     label1:
        r4 = virtualinvoke r0.<android.media.TtmlTrack: android.media.TtmlCue getNextResult()>();

        if r4 == null goto label2;

        virtualinvoke r0.<android.media.TtmlTrack: boolean addCue(android.media.SubtitleTrack$Cue)>(r4);

        goto label1;

     label2:
        r0.<android.media.TtmlTrack: android.media.TtmlNode mRootNode> = null;

        $r1 = r0.<android.media.TtmlTrack: java.util.LinkedList mTtmlNodes>;

        virtualinvoke $r1.<java.util.LinkedList: void clear()>();

        $r2 = r0.<android.media.TtmlTrack: java.util.TreeSet mTimeEvents>;

        virtualinvoke $r2.<java.util.TreeSet: void clear()>();

        return;
    }

    public void onTtmlNodeParsed(android.media.TtmlNode)
    {
        android.media.TtmlTrack r0;
        android.media.TtmlNode r1;
        java.util.LinkedList $r2;

        r0 := @this: android.media.TtmlTrack;

        r1 := @parameter0: android.media.TtmlNode;

        $r2 = r0.<android.media.TtmlTrack: java.util.LinkedList mTtmlNodes>;

        virtualinvoke $r2.<java.util.LinkedList: void addLast(java.lang.Object)>(r1);

        specialinvoke r0.<android.media.TtmlTrack: void addTimeEvents(android.media.TtmlNode)>(r1);

        return;
    }

    public void updateView(java.util.Vector)
    {
        android.media.TtmlTrack r0;
        java.util.Vector r1;
        boolean $z0, $z1;
        android.media.MediaTimeProvider $r2, $r4;
        long $l0, $l1;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        java.lang.StringBuilder r9;
        android.media.TtmlRenderingWidget $r11;

        r0 := @this: android.media.TtmlTrack;

        r1 := @parameter0: java.util.Vector;

        $z0 = r0.<android.media.TtmlTrack: boolean mVisible>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = r0.<android.media.TtmlTrack: boolean DEBUG>;

        if $z1 == 0 goto label5;

        $r2 = r0.<android.media.TtmlTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r2 == null goto label5;

     label2:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at ");

        $r4 = r0.<android.media.TtmlTrack: android.media.MediaTimeProvider mTimeProvider>;

        $l0 = interfaceinvoke $r4.<android.media.MediaTimeProvider: long getCurrentTimeUs(boolean,boolean)>(0, 1);

        $l1 = $l0 / 1000L;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms the active cues are:");

        $r7 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TtmlTrack", $r7);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("TtmlTrack", "at (illegal state) the active cues are:");

     label5:
        $r11 = r0.<android.media.TtmlTrack: android.media.TtmlRenderingWidget mRenderingWidget>;

        virtualinvoke $r11.<android.media.TtmlRenderingWidget: void setActiveCues(java.util.Vector)>(r1);

        return;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <android.media.TtmlTrack: java.lang.String TAG> = "TtmlTrack";

        return;
    }
}
