final class android.media.TtmlUtils extends java.lang.Object
{
    public static final java.lang.String ATTR_BEGIN;
    public static final java.lang.String ATTR_DURATION;
    public static final java.lang.String ATTR_END;
    private static final java.util.regex.Pattern CLOCK_TIME;
    public static final long INVALID_TIMESTAMP;
    private static final java.util.regex.Pattern OFFSET_TIME;
    public static final java.lang.String PCDATA;
    public static final java.lang.String TAG_BODY;
    public static final java.lang.String TAG_BR;
    public static final java.lang.String TAG_DIV;
    public static final java.lang.String TAG_HEAD;
    public static final java.lang.String TAG_LAYOUT;
    public static final java.lang.String TAG_METADATA;
    public static final java.lang.String TAG_P;
    public static final java.lang.String TAG_REGION;
    public static final java.lang.String TAG_SMPTE_DATA;
    public static final java.lang.String TAG_SMPTE_IMAGE;
    public static final java.lang.String TAG_SMPTE_INFORMATION;
    public static final java.lang.String TAG_SPAN;
    public static final java.lang.String TAG_STYLE;
    public static final java.lang.String TAG_STYLING;
    public static final java.lang.String TAG_TT;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        <android.media.TtmlUtils: java.lang.String TAG_TT> = "tt";

        <android.media.TtmlUtils: java.lang.String TAG_STYLING> = "styling";

        <android.media.TtmlUtils: java.lang.String TAG_STYLE> = "style";

        <android.media.TtmlUtils: java.lang.String TAG_SPAN> = "span";

        <android.media.TtmlUtils: java.lang.String TAG_SMPTE_INFORMATION> = "smpte:information";

        <android.media.TtmlUtils: java.lang.String TAG_SMPTE_IMAGE> = "smpte:image";

        <android.media.TtmlUtils: java.lang.String TAG_SMPTE_DATA> = "smpte:data";

        <android.media.TtmlUtils: java.lang.String TAG_REGION> = "region";

        <android.media.TtmlUtils: java.lang.String TAG_P> = "p";

        <android.media.TtmlUtils: java.lang.String TAG_METADATA> = "metadata";

        <android.media.TtmlUtils: java.lang.String TAG_LAYOUT> = "layout";

        <android.media.TtmlUtils: java.lang.String TAG_HEAD> = "head";

        <android.media.TtmlUtils: java.lang.String TAG_DIV> = "div";

        <android.media.TtmlUtils: java.lang.String TAG_BR> = "br";

        <android.media.TtmlUtils: java.lang.String TAG_BODY> = "body";

        <android.media.TtmlUtils: java.lang.String PCDATA> = "#pcdata";

        <android.media.TtmlUtils: long INVALID_TIMESTAMP> = 9223372036854775807L;

        <android.media.TtmlUtils: java.lang.String ATTR_END> = "end";

        <android.media.TtmlUtils: java.lang.String ATTR_DURATION> = "dur";

        <android.media.TtmlUtils: java.lang.String ATTR_BEGIN> = "begin";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^([0-9][0-9]+):([0-9][0-9]):([0-9][0-9])(?:(\\.[0-9]+)|:([0-9][0-9])(?:\\.([0-9]+))?)?$");

        <android.media.TtmlUtils: java.util.regex.Pattern CLOCK_TIME> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^([0-9]+(?:\\.[0-9]+)?)(h|m|s|ms|f|t)$");

        <android.media.TtmlUtils: java.util.regex.Pattern OFFSET_TIME> = $r1;

        return;
    }

    private void <init>()
    {
        android.media.TtmlUtils r0;

        r0 := @this: android.media.TtmlUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String applyDefaultSpacePolicy(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.media.TtmlUtils: java.lang.String applySpacePolicy(java.lang.String,boolean)>(r0, 1);

        return $r1;
    }

    public static java.lang.String applySpacePolicy(java.lang.String, boolean)
    {
        boolean z0;
        java.lang.String $r0, $r1, r2, r3;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\r\n", "\n");

        r3 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" *\n *", "\n");

        if z0 == 0 goto label1;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", " ");

        goto label1;

     label1:
        $r1 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[ \t\\x0B\f\r]+", " ");

        return $r1;
    }

    public static java.lang.String extractText(android.media.TtmlNode, long, long)
    {
        android.media.TtmlNode r0;
        long l0, l1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4;

        r0 := @parameter0: android.media.TtmlNode;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <android.media.TtmlUtils: void extractText(android.media.TtmlNode,long,long,java.lang.StringBuilder,boolean)>(r0, l0, l1, $r2, 0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n$", "");

        return $r4;
    }

    private static void extractText(android.media.TtmlNode, long, long, java.lang.StringBuilder, boolean)
    {
        android.media.TtmlNode r0, r2;
        long l0, l1;
        java.lang.StringBuilder r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6;
        int i2, $i3, $i4, i5;
        java.lang.String $r3, $r4, $r5, $r6, $r12;
        java.util.List $r7, $r9;
        java.lang.Object $r10;

        r0 := @parameter0: android.media.TtmlNode;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: java.lang.StringBuilder;

        z0 := @parameter4: boolean;

        $r3 = r0.<android.media.TtmlNode: java.lang.String mName>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("#pcdata");

        if $z2 == 0 goto label1;

        if z0 == 0 goto label1;

        $r12 = r0.<android.media.TtmlNode: java.lang.String mText>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        goto label9;

     label1:
        $r4 = r0.<android.media.TtmlNode: java.lang.String mName>;

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("br");

        if $z3 == 0 goto label2;

        if z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label9;

     label2:
        $r5 = r0.<android.media.TtmlNode: java.lang.String mName>;

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("metadata");

        if $z4 == 0 goto label3;

        goto label9;

     label3:
        $z5 = virtualinvoke r0.<android.media.TtmlNode: boolean isActive(long,long)>(l0, l1);

        if $z5 == 0 goto label9;

        $r6 = r0.<android.media.TtmlNode: java.lang.String mName>;

        z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("p");

        i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        i5 = 0;

     label4:
        $r7 = r0.<android.media.TtmlNode: java.util.List mChildren>;

        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i5 >= $i3 goto label8;

        $r9 = r0.<android.media.TtmlNode: java.util.List mChildren>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i5);

        r2 = (android.media.TtmlNode) $r10;

        if z1 != 0 goto label6;

        if z0 == 0 goto label5;

        goto label6;

     label5:
        z6 = 0;

        goto label7;

     label6:
        z6 = 1;

     label7:
        staticinvoke <android.media.TtmlUtils: void extractText(android.media.TtmlNode,long,long,java.lang.StringBuilder,boolean)>(r2, l0, l1, r1, z6);

        i5 = i5 + 1;

        goto label4;

     label8:
        if z1 == 0 goto label9;

        $i4 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if i2 == $i4 goto label9;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label9:
        return;
    }

    public static java.lang.String extractTtmlFragment(android.media.TtmlNode, long, long)
    {
        android.media.TtmlNode r0;
        long l0, l1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.media.TtmlNode;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <android.media.TtmlUtils: void extractTtmlFragment(android.media.TtmlNode,long,long,java.lang.StringBuilder)>(r0, l0, l1, $r2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static void extractTtmlFragment(android.media.TtmlNode, long, long, java.lang.StringBuilder)
    {
        android.media.TtmlNode r0, $r17;
        long l0, l1;
        java.lang.StringBuilder r1;
        java.lang.String $r2, $r3, $r5, $r7, $r12, $r19;
        boolean $z0, $z1, $z2;
        java.util.List $r10, $r15;
        int $i2, i3;
        java.lang.Object $r16;

        r0 := @parameter0: android.media.TtmlNode;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: java.lang.StringBuilder;

        $r2 = r0.<android.media.TtmlNode: java.lang.String mName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("#pcdata");

        if $z0 == 0 goto label1;

        $r19 = r0.<android.media.TtmlNode: java.lang.String mText>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        goto label5;

     label1:
        $r3 = r0.<android.media.TtmlNode: java.lang.String mName>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("br");

        if $z1 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br/>");

        goto label5;

     label2:
        $z2 = virtualinvoke r0.<android.media.TtmlNode: boolean isActive(long,long)>(l0, l1);

        if $z2 == 0 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r5 = r0.<android.media.TtmlNode: java.lang.String mName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = r0.<android.media.TtmlNode: java.lang.String mAttributes>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        i3 = 0;

     label3:
        $r10 = r0.<android.media.TtmlNode: java.util.List mChildren>;

        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i3 >= $i2 goto label4;

        $r15 = r0.<android.media.TtmlNode: java.util.List mChildren>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i3);

        $r17 = (android.media.TtmlNode) $r16;

        staticinvoke <android.media.TtmlUtils: void extractTtmlFragment(android.media.TtmlNode,long,long,java.lang.StringBuilder)>($r17, l0, l1, r1);

        i3 = i3 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r12 = r0.<android.media.TtmlNode: java.lang.String mName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

     label5:
        return;
    }

    public static long parseTimeExpression(java.lang.String, int, int, int) throws java.lang.NumberFormatException
    {
        int i0, i1, i2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, d20, d21, d22;
        java.util.regex.Pattern $r0, $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r2;
        java.lang.NumberFormatException $r5;
        java.lang.String $r6, $r7, $r8, $r9, $r10, r11, r13, r14, r15, r17;
        long $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11;
        java.util.regex.Matcher r12, r16;

        r11 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r0 = <android.media.TtmlUtils: java.util.regex.Pattern CLOCK_TIME>;

        r12 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r11);

        $z0 = virtualinvoke r12.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label07;

        $r8 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        $l4 = $l3 * 3600L;

        d0 = (double) $l4;

        $r9 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

        $l6 = $l5 * 60L;

        d1 = (double) $l6;

        $r10 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r10);

        d2 = (double) $l7;

        r13 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        if r13 == null goto label01;

        d19 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r13);

        goto label02;

     label01:
        d19 = 0.0;

     label02:
        r14 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        if r14 == null goto label03;

        $l10 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r14);

        $d18 = (double) $l10;

        $d17 = (double) i0;

        d20 = $d18 / $d17;

        goto label04;

     label03:
        d20 = 0.0;

     label04:
        r15 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(6);

        if r15 == null goto label05;

        $l9 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r15);

        $d14 = (double) $l9;

        $d13 = (double) i1;

        $d16 = $d14 / $d13;

        $d15 = (double) i0;

        d21 = $d16 / $d15;

        goto label06;

     label05:
        d21 = 0.0;

     label06:
        $d7 = d0 + d1;

        $d8 = $d7 + d2;

        $d9 = $d8 + d19;

        $d10 = $d9 + d20;

        $d11 = $d10 + d21;

        $d12 = 1000.0 * $d11;

        $l8 = (long) $d12;

        return $l8;

     label07:
        $r1 = <android.media.TtmlUtils: java.util.regex.Pattern OFFSET_TIME>;

        r16 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r11);

        $z1 = virtualinvoke r16.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label14;

        $r7 = virtualinvoke r16.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        d22 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r7);

        r17 = virtualinvoke r16.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $z2 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("h");

        if $z2 == 0 goto label08;

        d22 = d22 * 3.6E9;

        goto label13;

     label08:
        $z3 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("m");

        if $z3 == 0 goto label09;

        d22 = d22 * 6.0E7;

        goto label13;

     label09:
        $z4 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("s");

        if $z4 == 0 goto label10;

        d22 = d22 * 1000000.0;

        goto label13;

     label10:
        $z5 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("ms");

        if $z5 == 0 goto label11;

        d22 = d22 * 1000.0;

        goto label13;

     label11:
        $z6 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("f");

        if $z6 == 0 goto label12;

        $d5 = (double) i0;

        $d6 = d22 / $d5;

        d22 = $d6 * 1000000.0;

        goto label13;

     label12:
        $z7 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("t");

        if $z7 == 0 goto label13;

        $d3 = (double) i2;

        $d4 = d22 / $d3;

        d22 = $d4 * 1000000.0;

        goto label13;

     label13:
        $l11 = (long) d22;

        return $l11;

     label14:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed time expression : ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r5 = new java.lang.NumberFormatException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }
}
