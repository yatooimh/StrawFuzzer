public class android.media.Utils$ListenerList extends java.lang.Object
{
    private final boolean mClearCallingIdentity;
    private final boolean mForceRemoveConsistency;
    private java.util.HashMap mListeners;
    private final boolean mRestrictSingleCallerOnEvent;

    public void <init>()
    {
        android.media.Utils$ListenerList r0;

        r0 := @this: android.media.Utils$ListenerList;

        specialinvoke r0.<android.media.Utils$ListenerList: void <init>(boolean,boolean,boolean)>(1, 1, 0);

        return;
    }

    public void <init>(boolean, boolean, boolean)
    {
        android.media.Utils$ListenerList r0;
        boolean z0, z1, z2;
        java.util.HashMap $r1;

        r0 := @this: android.media.Utils$ListenerList;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.media.Utils$ListenerList: java.util.HashMap mListeners> = $r1;

        r0.<android.media.Utils$ListenerList: boolean mRestrictSingleCallerOnEvent> = z0;

        r0.<android.media.Utils$ListenerList: boolean mClearCallingIdentity> = z1;

        r0.<android.media.Utils$ListenerList: boolean mForceRemoveConsistency> = z2;

        return;
    }

    static boolean access$000(android.media.Utils$ListenerList)
    {
        android.media.Utils$ListenerList r0;
        boolean $z0;

        r0 := @parameter0: android.media.Utils$ListenerList;

        $z0 = r0.<android.media.Utils$ListenerList: boolean mForceRemoveConsistency>;

        return $z0;
    }

    static boolean access$100(android.media.Utils$ListenerList)
    {
        android.media.Utils$ListenerList r0;
        boolean $z0;

        r0 := @parameter0: android.media.Utils$ListenerList;

        $z0 = r0.<android.media.Utils$ListenerList: boolean mRestrictSingleCallerOnEvent>;

        return $z0;
    }

    public void add(java.lang.Object, java.util.concurrent.Executor, android.media.Utils$ListenerList$Listener)
    {
        android.media.Utils$ListenerList r0;
        android.media.Utils$ListenerList$1 $r4;
        java.util.HashMap $r5, r12;
        java.lang.Throwable $r7;
        java.lang.Object r8;
        java.util.concurrent.Executor r9;
        android.media.Utils$ListenerList$Listener r10;

        r0 := @this: android.media.Utils$ListenerList;

        r8 := @parameter0: java.lang.Object;

        r9 := @parameter1: java.util.concurrent.Executor;

        r10 := @parameter2: android.media.Utils$ListenerList$Listener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r8);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r9);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r10);

        $r4 = new android.media.Utils$ListenerList$1;

        specialinvoke $r4.<android.media.Utils$ListenerList$1: void <init>(android.media.Utils$ListenerList,java.util.concurrent.Executor,android.media.Utils$ListenerList$Listener)>(r0, r9, r10);

        r12 = r0.<android.media.Utils$ListenerList: java.util.HashMap mListeners>;

        entermonitor r12;

     label1:
        $r5 = r0.<android.media.Utils$ListenerList: java.util.HashMap mListeners>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r4);

        exitmonitor r12;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r12;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notify(int, java.lang.Object)
    {
        android.media.Utils$ListenerList r0;
        int i0, i1, $i2, i6;
        java.lang.Object[] r1;
        java.util.HashMap $r2, $r3, r10;
        java.util.Collection $r4;
        boolean $z0;
        long $l3, $l4, $l5;
        java.lang.Object $r5, r9;
        android.media.Utils$ListenerList$ListenerWithCancellation $r6;
        java.lang.Throwable $r7, $r8;
        java.lang.Long r11;

        r0 := @this: android.media.Utils$ListenerList;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.Object;

        r10 = r0.<android.media.Utils$ListenerList: java.util.HashMap mListeners>;

        entermonitor r10;

     label01:
        $r2 = r0.<android.media.Utils$ListenerList: java.util.HashMap mListeners>;

        $i2 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i2 != 0 goto label03;

        exitmonitor r10;

     label02:
        return;

     label03:
        $r3 = r0.<android.media.Utils$ListenerList: java.util.HashMap mListeners>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.lang.Object[] toArray()>();

        exitmonitor r10;

     label04:
        $z0 = r0.<android.media.Utils$ListenerList: boolean mClearCallingIdentity>;

        if $z0 == 0 goto label05;

        $l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        goto label06;

     label05:
        r11 = null;

     label06:
        i1 = lengthof r1;

     label07:
        i6 = 0;

     label08:
        if i6 >= i1 goto label11;

     label09:
        $r5 = r1[i6];

        $r6 = (android.media.Utils$ListenerList$ListenerWithCancellation) $r5;

        interfaceinvoke $r6.<android.media.Utils$ListenerList$ListenerWithCancellation: void onEvent(int,java.lang.Object)>(i0, r9);

     label10:
        i6 = i6 + 1;

        goto label08;

     label11:
        if r11 == null goto label12;

        $l3 = virtualinvoke r11.<java.lang.Long: long longValue()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l3);

     label12:
        return;

     label13:
        $r7 := @caughtexception;

        if r11 == null goto label14;

        $l5 = virtualinvoke r11.<java.lang.Long: long longValue()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>($l5);

     label14:
        throw $r7;

     label15:
        $r8 := @caughtexception;

     label16:
        exitmonitor r10;

     label17:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void remove(java.lang.Object)
    {
        android.media.Utils$ListenerList r0;
        java.util.HashMap r1, $r4, $r6;
        android.media.Utils$ListenerList$ListenerWithCancellation r2;
        java.lang.Object $r5, r9;
        java.lang.Throwable $r8;

        r0 := @this: android.media.Utils$ListenerList;

        r9 := @parameter0: java.lang.Object;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r9);

        r1 = r0.<android.media.Utils$ListenerList: java.util.HashMap mListeners>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.media.Utils$ListenerList: java.util.HashMap mListeners>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r2 = (android.media.Utils$ListenerList$ListenerWithCancellation) $r5;

     label2:
        if r2 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r6 = r0.<android.media.Utils$ListenerList: java.util.HashMap mListeners>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r9);

        exitmonitor r1;

     label6:
        interfaceinvoke r2.<android.media.Utils$ListenerList$ListenerWithCancellation: void cancel()>();

        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
