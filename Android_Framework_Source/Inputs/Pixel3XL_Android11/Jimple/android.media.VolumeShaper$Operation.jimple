public final class android.media.VolumeShaper$Operation extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int FLAG_CREATE_IF_NEEDED;
    private static final int FLAG_DEFER;
    private static final int FLAG_JOIN;
    private static final int FLAG_NONE;
    private static final int FLAG_PUBLIC_ALL;
    private static final int FLAG_REVERSE;
    private static final int FLAG_TERMINATE;
    public static final android.media.VolumeShaper$Operation PLAY;
    public static final android.media.VolumeShaper$Operation REVERSE;
    private final int mFlags;
    private final int mReplaceId;
    private final float mXOffset;

    static void <clinit>()
    {
        android.media.VolumeShaper$Operation$Builder $r0, $r2, $r3;
        android.media.VolumeShaper$Operation $r1, $r4;
        android.media.VolumeShaper$Operation$1 $r5;

        <android.media.VolumeShaper$Operation: int FLAG_TERMINATE> = 2;

        <android.media.VolumeShaper$Operation: int FLAG_REVERSE> = 1;

        <android.media.VolumeShaper$Operation: int FLAG_PUBLIC_ALL> = 3;

        <android.media.VolumeShaper$Operation: int FLAG_NONE> = 0;

        <android.media.VolumeShaper$Operation: int FLAG_JOIN> = 4;

        <android.media.VolumeShaper$Operation: int FLAG_DEFER> = 8;

        <android.media.VolumeShaper$Operation: int FLAG_CREATE_IF_NEEDED> = 16;

        $r0 = new android.media.VolumeShaper$Operation$Builder;

        specialinvoke $r0.<android.media.VolumeShaper$Operation$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<android.media.VolumeShaper$Operation$Builder: android.media.VolumeShaper$Operation build()>();

        <android.media.VolumeShaper$Operation: android.media.VolumeShaper$Operation PLAY> = $r1;

        $r2 = new android.media.VolumeShaper$Operation$Builder;

        specialinvoke $r2.<android.media.VolumeShaper$Operation$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.media.VolumeShaper$Operation$Builder: android.media.VolumeShaper$Operation$Builder reverse()>();

        $r4 = virtualinvoke $r3.<android.media.VolumeShaper$Operation$Builder: android.media.VolumeShaper$Operation build()>();

        <android.media.VolumeShaper$Operation: android.media.VolumeShaper$Operation REVERSE> = $r4;

        $r5 = new android.media.VolumeShaper$Operation$1;

        specialinvoke $r5.<android.media.VolumeShaper$Operation$1: void <init>()>();

        <android.media.VolumeShaper$Operation: android.os.Parcelable$Creator CREATOR> = $r5;

        return;
    }

    private void <init>(int, int, float)
    {
        android.media.VolumeShaper$Operation r0;
        int i0, i1;
        float f0;

        r0 := @this: android.media.VolumeShaper$Operation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.VolumeShaper$Operation: int mFlags> = i0;

        r0.<android.media.VolumeShaper$Operation: int mReplaceId> = i1;

        r0.<android.media.VolumeShaper$Operation: float mXOffset> = f0;

        return;
    }

    void <init>(int, int, float, android.media.VolumeShaper$1)
    {
        android.media.VolumeShaper$Operation r0;
        int i0, i1;
        float f0;
        android.media.VolumeShaper$1 r1;

        r0 := @this: android.media.VolumeShaper$Operation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        r1 := @parameter3: android.media.VolumeShaper$1;

        specialinvoke r0.<android.media.VolumeShaper$Operation: void <init>(int,int,float)>(i0, i1, f0);

        return;
    }

    static int access$500(android.media.VolumeShaper$Operation)
    {
        android.media.VolumeShaper$Operation r0;
        int $i0;

        r0 := @parameter0: android.media.VolumeShaper$Operation;

        $i0 = r0.<android.media.VolumeShaper$Operation: int mReplaceId>;

        return $i0;
    }

    static int access$600(android.media.VolumeShaper$Operation)
    {
        android.media.VolumeShaper$Operation r0;
        int $i0;

        r0 := @parameter0: android.media.VolumeShaper$Operation;

        $i0 = r0.<android.media.VolumeShaper$Operation: int mFlags>;

        return $i0;
    }

    static float access$700(android.media.VolumeShaper$Operation)
    {
        android.media.VolumeShaper$Operation r0;
        float $f0;

        r0 := @parameter0: android.media.VolumeShaper$Operation;

        $f0 = r0.<android.media.VolumeShaper$Operation: float mXOffset>;

        return $f0;
    }

    public int describeContents()
    {
        android.media.VolumeShaper$Operation r0;

        r0 := @this: android.media.VolumeShaper$Operation;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.media.VolumeShaper$Operation r0, r2;
        boolean z0, z1;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1;
        java.lang.Object r1;

        r0 := @this: android.media.VolumeShaper$Operation;

        r1 := @parameter0: java.lang.Object;

        z0 = r1 instanceof android.media.VolumeShaper$Operation;

        z1 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        if r1 != r0 goto label2;

        return 1;

     label2:
        r2 = (android.media.VolumeShaper$Operation) r1;

        $i1 = r0.<android.media.VolumeShaper$Operation: int mFlags>;

        $i0 = r2.<android.media.VolumeShaper$Operation: int mFlags>;

        if $i1 != $i0 goto label3;

        $i3 = r0.<android.media.VolumeShaper$Operation: int mReplaceId>;

        $i2 = r2.<android.media.VolumeShaper$Operation: int mReplaceId>;

        if $i3 != $i2 goto label3;

        $f1 = r0.<android.media.VolumeShaper$Operation: float mXOffset>;

        $f0 = r2.<android.media.VolumeShaper$Operation: float mXOffset>;

        $i4 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, $f0);

        if $i4 != 0 goto label3;

        z1 = 1;

        goto label3;

     label3:
        return z1;
    }

    public int hashCode()
    {
        android.media.VolumeShaper$Operation r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2, $r3;
        float $f0;
        java.lang.Float $r4;

        r0 := @this: android.media.VolumeShaper$Operation;

        $r1 = newarray (java.lang.Object)[3];

        $i0 = r0.<android.media.VolumeShaper$Operation: int mFlags>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $i1 = r0.<android.media.VolumeShaper$Operation: int mReplaceId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $f0 = r0.<android.media.VolumeShaper$Operation: float mXOffset>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1[2] = $r4;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    public java.lang.String toString()
    {
        android.media.VolumeShaper$Operation r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r4, $r5, $r12;
        float $f0;

        r0 := @this: android.media.VolumeShaper$Operation;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VolumeShaper.Operation{mFlags = 0x");

        $i0 = r0.<android.media.VolumeShaper$Operation: int mFlags>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mReplaceId = ");

        $i1 = r0.<android.media.VolumeShaper$Operation: int mReplaceId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mXOffset = ");

        $f0 = r0.<android.media.VolumeShaper$Operation: float mXOffset>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.media.VolumeShaper$Operation r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        float $f0;

        r0 := @this: android.media.VolumeShaper$Operation;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.media.VolumeShaper$Operation: int mFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.media.VolumeShaper$Operation: int mReplaceId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $f0 = r0.<android.media.VolumeShaper$Operation: float mXOffset>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        return;
    }
}
