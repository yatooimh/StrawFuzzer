public final class android.media.VolumeShaper extends java.lang.Object implements java.lang.AutoCloseable
{
    private int mId;
    private final java.lang.ref.WeakReference mWeakPlayerBase;

    void <init>(android.media.VolumeShaper$Configuration, android.media.PlayerBase)
    {
        android.media.VolumeShaper r0;
        android.media.VolumeShaper$Configuration r1;
        android.media.PlayerBase r2;
        java.lang.ref.WeakReference $r3;
        android.media.VolumeShaper$Operation$Builder $r4, $r5;
        android.media.VolumeShaper$Operation $r6;
        int $i0;

        r0 := @this: android.media.VolumeShaper;

        r1 := @parameter0: android.media.VolumeShaper$Configuration;

        r2 := @parameter1: android.media.PlayerBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<android.media.VolumeShaper: java.lang.ref.WeakReference mWeakPlayerBase> = $r3;

        $r4 = new android.media.VolumeShaper$Operation$Builder;

        specialinvoke $r4.<android.media.VolumeShaper$Operation$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<android.media.VolumeShaper$Operation$Builder: android.media.VolumeShaper$Operation$Builder defer()>();

        $r6 = virtualinvoke $r5.<android.media.VolumeShaper$Operation$Builder: android.media.VolumeShaper$Operation build()>();

        $i0 = specialinvoke r0.<android.media.VolumeShaper: int applyPlayer(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)>(r1, $r6);

        r0.<android.media.VolumeShaper: int mId> = $i0;

        return;
    }

    private int applyPlayer(android.media.VolumeShaper$Configuration, android.media.VolumeShaper$Operation)
    {
        android.media.VolumeShaper r0;
        android.media.VolumeShaper$Operation r1;
        int i0;
        java.lang.IllegalStateException $r2, $r4, $r10;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9;
        android.media.VolumeShaper$Configuration r11;
        java.lang.ref.WeakReference r12;
        android.media.PlayerBase r13;

        r0 := @this: android.media.VolumeShaper;

        r11 := @parameter0: android.media.VolumeShaper$Configuration;

        r1 := @parameter1: android.media.VolumeShaper$Operation;

        r12 = r0.<android.media.VolumeShaper: java.lang.ref.WeakReference mWeakPlayerBase>;

        if r12 == null goto label4;

        $r3 = virtualinvoke r12.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r13 = (android.media.PlayerBase) $r3;

        if r13 == null goto label3;

        i0 = virtualinvoke r13.<android.media.PlayerBase: int playerApplyVolumeShaper(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)>(r11, r1);

        if i0 >= 0 goto label2;

        if i0 != -38 goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("player or VolumeShaper deallocated");

        throw $r10;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid configuration or operation: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        return i0;

     label3:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("player deallocated");

        throw $r4;

     label4:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("uninitialized shaper");

        throw $r2;
    }

    private android.media.VolumeShaper$State getStatePlayer(int)
    {
        android.media.VolumeShaper r0;
        int i0;
        java.lang.IllegalStateException $r1, $r3, $r4;
        java.lang.Object $r2;
        java.lang.ref.WeakReference r5;
        android.media.PlayerBase r6;
        android.media.VolumeShaper$State r7;

        r0 := @this: android.media.VolumeShaper;

        i0 := @parameter0: int;

        r5 = r0.<android.media.VolumeShaper: java.lang.ref.WeakReference mWeakPlayerBase>;

        if r5 == null goto label3;

        $r2 = virtualinvoke r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r6 = (android.media.PlayerBase) $r2;

        if r6 == null goto label2;

        r7 = virtualinvoke r6.<android.media.PlayerBase: android.media.VolumeShaper$State playerGetVolumeShaperState(int)>(i0);

        if r7 == null goto label1;

        return r7;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("shaper cannot be found");

        throw $r4;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("player deallocated");

        throw $r3;

     label3:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("uninitialized shaper");

        throw $r1;
    }

    public void apply(android.media.VolumeShaper$Operation)
    {
        android.media.VolumeShaper r0;
        android.media.VolumeShaper$Operation r1;
        android.media.VolumeShaper$Configuration $r2;
        int $i0;

        r0 := @this: android.media.VolumeShaper;

        r1 := @parameter0: android.media.VolumeShaper$Operation;

        $r2 = new android.media.VolumeShaper$Configuration;

        $i0 = r0.<android.media.VolumeShaper: int mId>;

        specialinvoke $r2.<android.media.VolumeShaper$Configuration: void <init>(int)>($i0);

        specialinvoke r0.<android.media.VolumeShaper: int applyPlayer(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)>($r2, r1);

        return;
    }

    public void close()
    {
        android.media.VolumeShaper r0;
        android.media.VolumeShaper$Configuration r1;
        int $i0;
        android.media.VolumeShaper$Operation$Builder $r2, r5;
        android.media.VolumeShaper$Operation $r3;
        java.lang.Throwable $r4;
        java.lang.ref.WeakReference r7;

        r0 := @this: android.media.VolumeShaper;

     label1:
        r1 = new android.media.VolumeShaper$Configuration;

        $i0 = r0.<android.media.VolumeShaper: int mId>;

        specialinvoke r1.<android.media.VolumeShaper$Configuration: void <init>(int)>($i0);

        r5 = new android.media.VolumeShaper$Operation$Builder;

        specialinvoke r5.<android.media.VolumeShaper$Operation$Builder: void <init>()>();

        $r2 = virtualinvoke r5.<android.media.VolumeShaper$Operation$Builder: android.media.VolumeShaper$Operation$Builder terminate()>();

        $r3 = virtualinvoke $r2.<android.media.VolumeShaper$Operation$Builder: android.media.VolumeShaper$Operation build()>();

        specialinvoke r0.<android.media.VolumeShaper: int applyPlayer(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)>(r1, $r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        r7 = r0.<android.media.VolumeShaper: java.lang.ref.WeakReference mWeakPlayerBase>;

        if r7 == null goto label5;

        virtualinvoke r7.<java.lang.ref.WeakReference: void clear()>();

     label5:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    protected void finalize()
    {
        android.media.VolumeShaper r0;

        r0 := @this: android.media.VolumeShaper;

        virtualinvoke r0.<android.media.VolumeShaper: void close()>();

        return;
    }

    int getId()
    {
        android.media.VolumeShaper r0;
        int $i0;

        r0 := @this: android.media.VolumeShaper;

        $i0 = r0.<android.media.VolumeShaper: int mId>;

        return $i0;
    }

    public float getVolume()
    {
        android.media.VolumeShaper r0;
        int $i0;
        android.media.VolumeShaper$State $r1;
        float $f0;

        r0 := @this: android.media.VolumeShaper;

        $i0 = r0.<android.media.VolumeShaper: int mId>;

        $r1 = specialinvoke r0.<android.media.VolumeShaper: android.media.VolumeShaper$State getStatePlayer(int)>($i0);

        $f0 = virtualinvoke $r1.<android.media.VolumeShaper$State: float getVolume()>();

        return $f0;
    }

    public void replace(android.media.VolumeShaper$Configuration, android.media.VolumeShaper$Operation, boolean)
    {
        android.media.VolumeShaper r0;
        android.media.VolumeShaper$Configuration r1;
        android.media.VolumeShaper$Operation r2, $r5;
        boolean z0;
        android.media.VolumeShaper$Operation$Builder $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.media.VolumeShaper;

        r1 := @parameter0: android.media.VolumeShaper$Configuration;

        r2 := @parameter1: android.media.VolumeShaper$Operation;

        z0 := @parameter2: boolean;

        $r3 = new android.media.VolumeShaper$Operation$Builder;

        specialinvoke $r3.<android.media.VolumeShaper$Operation$Builder: void <init>(android.media.VolumeShaper$Operation)>(r2);

        $i0 = r0.<android.media.VolumeShaper: int mId>;

        $r4 = virtualinvoke $r3.<android.media.VolumeShaper$Operation$Builder: android.media.VolumeShaper$Operation$Builder replace(int,boolean)>($i0, z0);

        $r5 = virtualinvoke $r4.<android.media.VolumeShaper$Operation$Builder: android.media.VolumeShaper$Operation build()>();

        $i1 = specialinvoke r0.<android.media.VolumeShaper: int applyPlayer(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)>(r1, $r5);

        r0.<android.media.VolumeShaper: int mId> = $i1;

        return;
    }
}
