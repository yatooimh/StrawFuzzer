public final class android.media.audiofx.DynamicsProcessing$Config extends java.lang.Object
{
    private final android.media.audiofx.DynamicsProcessing$Channel[] mChannel;
    private final int mChannelCount;
    private final boolean mLimiterInUse;
    private final int mMbcBandCount;
    private final boolean mMbcInUse;
    private final int mPostEqBandCount;
    private final boolean mPostEqInUse;
    private final int mPreEqBandCount;
    private final boolean mPreEqInUse;
    private final float mPreferredFrameDuration;
    private final int mVariant;

    public void <init>(int, float, int, boolean, int, boolean, int, boolean, int, boolean, android.media.audiofx.DynamicsProcessing$Channel[])
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        float f0;
        int i0, i1, i2, i3, $i4, $i5, i6, i7;
        boolean z0, z1, z2, z3;
        android.media.audiofx.DynamicsProcessing$Channel[] r1, $r2, $r5;
        android.media.audiofx.DynamicsProcessing$Channel $r3, $r4;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i6 := @parameter0: int;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        z1 := @parameter5: boolean;

        i2 := @parameter6: int;

        z2 := @parameter7: boolean;

        i3 := @parameter8: int;

        z3 := @parameter9: boolean;

        r1 := @parameter10: android.media.audiofx.DynamicsProcessing$Channel[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiofx.DynamicsProcessing$Config: int mVariant> = i6;

        r0.<android.media.audiofx.DynamicsProcessing$Config: float mPreferredFrameDuration> = f0;

        r0.<android.media.audiofx.DynamicsProcessing$Config: int mChannelCount> = i0;

        r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mPreEqInUse> = z0;

        r0.<android.media.audiofx.DynamicsProcessing$Config: int mPreEqBandCount> = i1;

        r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mMbcInUse> = z1;

        r0.<android.media.audiofx.DynamicsProcessing$Config: int mMbcBandCount> = i2;

        r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mPostEqInUse> = z2;

        r0.<android.media.audiofx.DynamicsProcessing$Config: int mPostEqBandCount> = i3;

        r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mLimiterInUse> = z3;

        $r2 = newarray (android.media.audiofx.DynamicsProcessing$Channel)[i0];

        r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel> = $r2;

        i7 = 0;

     label1:
        $i4 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mChannelCount>;

        if i7 >= $i4 goto label3;

        $i5 = lengthof r1;

        if i7 >= $i5 goto label2;

        $r5 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r3 = new android.media.audiofx.DynamicsProcessing$Channel;

        $r4 = r1[i7];

        specialinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void <init>(android.media.audiofx.DynamicsProcessing$Channel)>($r4);

        $r5[i7] = $r3;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        return;
    }

    public void <init>(int, android.media.audiofx.DynamicsProcessing$Config)
    {
        android.media.audiofx.DynamicsProcessing$Config r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        float $f0;
        boolean $z0, $z1, $z2, $z3;
        android.media.audiofx.DynamicsProcessing$Channel[] $r3, $r8, $r13, $r15, $r17, $r19, $r21;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r10, $r12;
        java.lang.String $r11;
        android.media.audiofx.DynamicsProcessing$Channel $r14, $r16, $r18, $r20;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Config;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = r1.<android.media.audiofx.DynamicsProcessing$Config: int mVariant>;

        r0.<android.media.audiofx.DynamicsProcessing$Config: int mVariant> = $i2;

        $f0 = r1.<android.media.audiofx.DynamicsProcessing$Config: float mPreferredFrameDuration>;

        r0.<android.media.audiofx.DynamicsProcessing$Config: float mPreferredFrameDuration> = $f0;

        i10 = r1.<android.media.audiofx.DynamicsProcessing$Config: int mChannelCount>;

        r0.<android.media.audiofx.DynamicsProcessing$Config: int mChannelCount> = i10;

        $z0 = r1.<android.media.audiofx.DynamicsProcessing$Config: boolean mPreEqInUse>;

        r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mPreEqInUse> = $z0;

        $i3 = r1.<android.media.audiofx.DynamicsProcessing$Config: int mPreEqBandCount>;

        r0.<android.media.audiofx.DynamicsProcessing$Config: int mPreEqBandCount> = $i3;

        $z1 = r1.<android.media.audiofx.DynamicsProcessing$Config: boolean mMbcInUse>;

        r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mMbcInUse> = $z1;

        $i4 = r1.<android.media.audiofx.DynamicsProcessing$Config: int mMbcBandCount>;

        r0.<android.media.audiofx.DynamicsProcessing$Config: int mMbcBandCount> = $i4;

        $z2 = r1.<android.media.audiofx.DynamicsProcessing$Config: boolean mPostEqInUse>;

        r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mPostEqInUse> = $z2;

        $i5 = r1.<android.media.audiofx.DynamicsProcessing$Config: int mPostEqBandCount>;

        r0.<android.media.audiofx.DynamicsProcessing$Config: int mPostEqBandCount> = $i5;

        $z3 = r1.<android.media.audiofx.DynamicsProcessing$Config: boolean mLimiterInUse>;

        r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mLimiterInUse> = $z3;

        $r3 = r1.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i6 = lengthof $r3;

        if i10 != $i6 goto label6;

        if i0 < 1 goto label5;

        $r13 = newarray (android.media.audiofx.DynamicsProcessing$Channel)[i0];

        r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel> = $r13;

        i11 = 0;

     label1:
        if i11 >= i0 goto label4;

        i1 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mChannelCount>;

        if i11 >= i1 goto label2;

        $r21 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r18 = new android.media.audiofx.DynamicsProcessing$Channel;

        $r19 = r1.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r20 = $r19[i11];

        specialinvoke $r18.<android.media.audiofx.DynamicsProcessing$Channel: void <init>(android.media.audiofx.DynamicsProcessing$Channel)>($r20);

        $r21[i11] = $r18;

        goto label3;

     label2:
        $r17 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r14 = new android.media.audiofx.DynamicsProcessing$Channel;

        $r15 = r1.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i9 = i1 - 1;

        $r16 = $r15[$i9];

        specialinvoke $r14.<android.media.audiofx.DynamicsProcessing$Channel: void <init>(android.media.audiofx.DynamicsProcessing$Channel)>($r16);

        $r17[i11] = $r14;

     label3:
        i11 = i11 + 1;

        goto label1;

     label4:
        return;

     label5:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("channel resizing less than 1 not allowed");

        throw $r12;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("configuration channel counts differ ");

        $i7 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mChannelCount>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" !=");

        $r8 = r1.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i8 = lengthof $r8;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    public void <init>(android.media.audiofx.DynamicsProcessing$Config)
    {
        android.media.audiofx.DynamicsProcessing$Config r0, r1;
        int $i0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Config;

        $i0 = r1.<android.media.audiofx.DynamicsProcessing$Config: int mChannelCount>;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void <init>(int,android.media.audiofx.DynamicsProcessing$Config)>($i0, r1);

        return;
    }

    private void checkChannel(int)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, $i1;
        java.lang.IllegalArgumentException $r1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r2;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ChannelIndex out of bounds");

        throw $r1;
    }

    public android.media.audiofx.DynamicsProcessing$Channel getChannelByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Channel[] $r1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r2 = $r1[i0];

        return $r2;
    }

    public float getInputGainByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Channel[] $r1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r2 = $r1[i0];

        $f0 = virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Channel: float getInputGain()>();

        return $f0;
    }

    public android.media.audiofx.DynamicsProcessing$Limiter getLimiterByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Channel[] $r1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;
        android.media.audiofx.DynamicsProcessing$Limiter $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Limiter getLimiter()>();

        return $r3;
    }

    public android.media.audiofx.DynamicsProcessing$MbcBand getMbcBandByChannelIndex(int, int)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;
        android.media.audiofx.DynamicsProcessing$MbcBand $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$MbcBand getMbcBand(int)>(i1);

        return $r3;
    }

    public int getMbcBandCount()
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int $i0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        $i0 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mMbcBandCount>;

        return $i0;
    }

    public android.media.audiofx.DynamicsProcessing$Mbc getMbcByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Channel[] $r1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;
        android.media.audiofx.DynamicsProcessing$Mbc $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Mbc getMbc()>();

        return $r3;
    }

    public android.media.audiofx.DynamicsProcessing$EqBand getPostEqBandByChannelIndex(int, int)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;
        android.media.audiofx.DynamicsProcessing$EqBand $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$EqBand getPostEqBand(int)>(i1);

        return $r3;
    }

    public int getPostEqBandCount()
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int $i0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        $i0 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mPostEqBandCount>;

        return $i0;
    }

    public android.media.audiofx.DynamicsProcessing$Eq getPostEqByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Channel[] $r1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;
        android.media.audiofx.DynamicsProcessing$Eq $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Eq getPostEq()>();

        return $r3;
    }

    public android.media.audiofx.DynamicsProcessing$EqBand getPreEqBandByChannelIndex(int, int)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;
        android.media.audiofx.DynamicsProcessing$EqBand $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$EqBand getPreEqBand(int)>(i1);

        return $r3;
    }

    public int getPreEqBandCount()
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int $i0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        $i0 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mPreEqBandCount>;

        return $i0;
    }

    public android.media.audiofx.DynamicsProcessing$Eq getPreEqByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Channel[] $r1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;
        android.media.audiofx.DynamicsProcessing$Eq $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Eq getPreEq()>();

        return $r3;
    }

    public float getPreferredFrameDuration()
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$Config: float mPreferredFrameDuration>;

        return $f0;
    }

    public int getVariant()
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int $i0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        $i0 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mVariant>;

        return $i0;
    }

    public boolean isLimiterInUse()
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        boolean $z0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        $z0 = r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mLimiterInUse>;

        return $z0;
    }

    public boolean isMbcInUse()
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        boolean $z0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        $z0 = r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mMbcInUse>;

        return $z0;
    }

    public boolean isPostEqInUse()
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        boolean $z0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        $z0 = r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mPostEqInUse>;

        return $z0;
    }

    public boolean isPreEqInUse()
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        boolean $z0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        $z0 = r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mPreEqInUse>;

        return $z0;
    }

    public void setAllChannelsTo(android.media.audiofx.DynamicsProcessing$Channel)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        android.media.audiofx.DynamicsProcessing$Channel r1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r2;
        int $i0, i1;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Channel;

        i1 = 0;

     label1:
        $r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void setChannelTo(int,android.media.audiofx.DynamicsProcessing$Channel)>(i1, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setChannelTo(int, android.media.audiofx.DynamicsProcessing$Channel)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.media.audiofx.DynamicsProcessing$Channel r1, $r29;
        android.media.audiofx.DynamicsProcessing$Mbc $r2;
        java.lang.StringBuilder $r3, $r12, $r21;
        android.media.audiofx.DynamicsProcessing$Eq $r7, $r11, $r16, $r20, $r25;
        java.lang.IllegalArgumentException $r9, $r18, $r27;
        java.lang.String $r10, $r19, $r28;
        android.media.audiofx.DynamicsProcessing$Channel[] $r30;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Channel;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $i1 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mMbcBandCount>;

        $r2 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Mbc getMbc()>();

        $i2 = virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Mbc: int getBandCount()>();

        if $i1 != $i2 goto label3;

        $i5 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mPreEqBandCount>;

        $r11 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Eq getPreEq()>();

        $i6 = virtualinvoke $r11.<android.media.audiofx.DynamicsProcessing$Eq: int getBandCount()>();

        if $i5 != $i6 goto label2;

        $i9 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mPostEqBandCount>;

        $r20 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Eq getPostEq()>();

        $i10 = virtualinvoke $r20.<android.media.audiofx.DynamicsProcessing$Eq: int getBandCount()>();

        if $i9 != $i10 goto label1;

        $r30 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r29 = new android.media.audiofx.DynamicsProcessing$Channel;

        specialinvoke $r29.<android.media.audiofx.DynamicsProcessing$Channel: void <init>(android.media.audiofx.DynamicsProcessing$Channel)>(r1);

        $r30[i0] = $r29;

        return;

     label1:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PostEqBandCount changed from ");

        $i11 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mPostEqBandCount>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r25 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Eq getPostEq()>();

        $i12 = virtualinvoke $r25.<android.media.audiofx.DynamicsProcessing$Eq: int getBandCount()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label2:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PreEqBandCount changed from ");

        $i7 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mPreEqBandCount>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r16 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Eq getPreEq()>();

        $i8 = virtualinvoke $r16.<android.media.audiofx.DynamicsProcessing$Eq: int getBandCount()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MbcBandCount changed from ");

        $i3 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mMbcBandCount>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Eq getPreEq()>();

        $i4 = virtualinvoke $r7.<android.media.audiofx.DynamicsProcessing$Eq: int getBandCount()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public void setInputGainAllChannelsTo(float)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        float f0;
        android.media.audiofx.DynamicsProcessing$Channel[] r1;
        int $i0, i1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        f0 := @parameter0: float;

        i1 = 0;

     label1:
        r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r2 = r1[i1];

        virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Channel: void setInputGain(float)>(f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setInputGainByChannelIndex(int, float)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        float f0;
        android.media.audiofx.DynamicsProcessing$Channel[] $r1;
        android.media.audiofx.DynamicsProcessing$Channel $r2;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r1 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r2 = $r1[i0];

        virtualinvoke $r2.<android.media.audiofx.DynamicsProcessing$Channel: void setInputGain(float)>(f0);

        return;
    }

    public void setLimiterAllChannelsTo(android.media.audiofx.DynamicsProcessing$Limiter)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        android.media.audiofx.DynamicsProcessing$Limiter r1;
        android.media.audiofx.DynamicsProcessing$Channel[] r2;
        int $i0, i1;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Limiter;

        i1 = 0;

     label1:
        r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setLimiter(android.media.audiofx.DynamicsProcessing$Limiter)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setLimiterByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Limiter)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Limiter r1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r2;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Limiter;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r3 = $r2[i0];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setLimiter(android.media.audiofx.DynamicsProcessing$Limiter)>(r1);

        return;
    }

    public void setMbcAllChannelsTo(android.media.audiofx.DynamicsProcessing$Mbc)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        android.media.audiofx.DynamicsProcessing$Mbc r1;
        android.media.audiofx.DynamicsProcessing$Channel[] r2;
        int $i0, i1;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Mbc;

        i1 = 0;

     label1:
        r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setMbc(android.media.audiofx.DynamicsProcessing$Mbc)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setMbcBandAllChannelsTo(int, android.media.audiofx.DynamicsProcessing$MbcBand)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, $i1, i2;
        android.media.audiofx.DynamicsProcessing$MbcBand r1;
        android.media.audiofx.DynamicsProcessing$Channel[] r2;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$MbcBand;

        i2 = 0;

     label1:
        r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r3 = r2[i2];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setMbcBand(int,android.media.audiofx.DynamicsProcessing$MbcBand)>(i0, r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setMbcBandByChannelIndex(int, int, android.media.audiofx.DynamicsProcessing$MbcBand)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$MbcBand r1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r2;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.audiofx.DynamicsProcessing$MbcBand;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r3 = $r2[i0];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setMbcBand(int,android.media.audiofx.DynamicsProcessing$MbcBand)>(i1, r1);

        return;
    }

    public void setMbcByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Mbc)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Mbc r1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r2;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Mbc;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r3 = $r2[i0];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setMbc(android.media.audiofx.DynamicsProcessing$Mbc)>(r1);

        return;
    }

    public void setPostEqAllChannelsTo(android.media.audiofx.DynamicsProcessing$Eq)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        android.media.audiofx.DynamicsProcessing$Eq r1;
        android.media.audiofx.DynamicsProcessing$Channel[] r2;
        int $i0, i1;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Eq;

        i1 = 0;

     label1:
        r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setPostEq(android.media.audiofx.DynamicsProcessing$Eq)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setPostEqBandAllChannelsTo(int, android.media.audiofx.DynamicsProcessing$EqBand)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, $i1, i2;
        android.media.audiofx.DynamicsProcessing$EqBand r1;
        android.media.audiofx.DynamicsProcessing$Channel[] r2;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$EqBand;

        i2 = 0;

     label1:
        r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r3 = r2[i2];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setPostEqBand(int,android.media.audiofx.DynamicsProcessing$EqBand)>(i0, r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setPostEqBandByChannelIndex(int, int, android.media.audiofx.DynamicsProcessing$EqBand)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$EqBand r1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r2;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.audiofx.DynamicsProcessing$EqBand;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r3 = $r2[i0];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setPostEqBand(int,android.media.audiofx.DynamicsProcessing$EqBand)>(i1, r1);

        return;
    }

    public void setPostEqByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Eq)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Eq r1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r2;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Eq;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r3 = $r2[i0];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setPostEq(android.media.audiofx.DynamicsProcessing$Eq)>(r1);

        return;
    }

    public void setPreEqAllChannelsTo(android.media.audiofx.DynamicsProcessing$Eq)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        android.media.audiofx.DynamicsProcessing$Eq r1;
        android.media.audiofx.DynamicsProcessing$Channel[] r2;
        int $i0, i1;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Eq;

        i1 = 0;

     label1:
        r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setPreEq(android.media.audiofx.DynamicsProcessing$Eq)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setPreEqBandAllChannelsTo(int, android.media.audiofx.DynamicsProcessing$EqBand)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, $i1, i2;
        android.media.audiofx.DynamicsProcessing$EqBand r1;
        android.media.audiofx.DynamicsProcessing$Channel[] r2;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$EqBand;

        i2 = 0;

     label1:
        r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r3 = r2[i2];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setPreEqBand(int,android.media.audiofx.DynamicsProcessing$EqBand)>(i0, r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setPreEqBandByChannelIndex(int, int, android.media.audiofx.DynamicsProcessing$EqBand)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$EqBand r1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r2;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.audiofx.DynamicsProcessing$EqBand;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r3 = $r2[i0];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setPreEqBand(int,android.media.audiofx.DynamicsProcessing$EqBand)>(i1, r1);

        return;
    }

    public void setPreEqByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Eq)
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Eq r1;
        android.media.audiofx.DynamicsProcessing$Channel[] $r2;
        android.media.audiofx.DynamicsProcessing$Channel $r3;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Eq;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$Config: void checkChannel(int)>(i0);

        $r2 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r3 = $r2[i0];

        virtualinvoke $r3.<android.media.audiofx.DynamicsProcessing$Channel: void setPreEq(android.media.audiofx.DynamicsProcessing$Eq)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        android.media.audiofx.DynamicsProcessing$Config r0;
        java.lang.StringBuilder $r2;
        java.lang.Object[] $r3, $r7, $r11, $r15, $r20, $r25, $r30, $r36;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Integer $r4, $r12, $r17, $r22, $r27, $r37;
        java.lang.String $r5, $r9, $r13, $r18, $r23, $r28, $r32, $r35, $r38, $r42;
        float $f0;
        java.lang.Float $r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Boolean $r16, $r21, $r26, $r31;
        android.media.audiofx.DynamicsProcessing$Channel[] $r34, $r40;
        android.media.audiofx.DynamicsProcessing$Channel $r41;

        r0 := @this: android.media.audiofx.DynamicsProcessing$Config;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = newarray (java.lang.Object)[1];

        $i0 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mVariant>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Variant: %d\n", $r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = newarray (java.lang.Object)[1];

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$Config: float mPreferredFrameDuration>;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("PreferredFrameDuration: %f\n", $r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = newarray (java.lang.Object)[1];

        $i1 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mChannelCount>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ChannelCount: %d\n", $r11);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = newarray (java.lang.Object)[2];

        $z0 = r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mPreEqInUse>;

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r15[0] = $r16;

        $i2 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mPreEqBandCount>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r15[1] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("PreEq inUse: %b, bandCount:%d\n", $r15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = newarray (java.lang.Object)[2];

        $z1 = r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mMbcInUse>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r20[0] = $r21;

        $i3 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mMbcBandCount>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r20[1] = $r22;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Mbc inUse: %b, bandCount: %d\n", $r20);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = newarray (java.lang.Object)[2];

        $z2 = r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mPostEqInUse>;

        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r25[0] = $r26;

        $i4 = r0.<android.media.audiofx.DynamicsProcessing$Config: int mPostEqBandCount>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r25[1] = $r27;

        $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("PostEq inUse: %b, bandCount: %d\n", $r25);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = newarray (java.lang.Object)[1];

        $z3 = r0.<android.media.audiofx.DynamicsProcessing$Config: boolean mLimiterInUse>;

        $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r30[0] = $r31;

        $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Limiter inUse: %b\n", $r30);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        i6 = 0;

     label1:
        $r34 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $i5 = lengthof $r34;

        if i6 >= $i5 goto label2;

        $r36 = newarray (java.lang.Object)[1];

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r36[0] = $r37;

        $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("==Channel %d\n", $r36);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = r0.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel[] mChannel>;

        $r41 = $r40[i6];

        $r42 = virtualinvoke $r41.<android.media.audiofx.DynamicsProcessing$Channel: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r35 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r35;
    }
}
