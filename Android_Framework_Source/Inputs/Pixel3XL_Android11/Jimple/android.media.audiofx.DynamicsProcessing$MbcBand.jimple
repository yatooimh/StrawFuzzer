public final class android.media.audiofx.DynamicsProcessing$MbcBand extends android.media.audiofx.DynamicsProcessing$BandBase
{
    private float mAttackTime;
    private float mExpanderRatio;
    private float mKneeWidth;
    private float mNoiseGateThreshold;
    private float mPostGain;
    private float mPreGain;
    private float mRatio;
    private float mReleaseTime;
    private float mThreshold;

    public void <init>(android.media.audiofx.DynamicsProcessing$MbcBand)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0, r1;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$MbcBand;

        $z0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: boolean isEnabled()>();

        $f0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getCutoffFrequency()>();

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$BandBase: void <init>(boolean,float)>($z0, $f0);

        $f1 = r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float mAttackTime>;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mAttackTime> = $f1;

        $f2 = r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float mReleaseTime>;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mReleaseTime> = $f2;

        $f3 = r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float mRatio>;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mRatio> = $f3;

        $f4 = r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float mThreshold>;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mThreshold> = $f4;

        $f5 = r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float mKneeWidth>;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mKneeWidth> = $f5;

        $f6 = r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float mNoiseGateThreshold>;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mNoiseGateThreshold> = $f6;

        $f7 = r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float mExpanderRatio>;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mExpanderRatio> = $f7;

        $f8 = r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPreGain>;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPreGain> = $f8;

        $f9 = r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPostGain>;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPostGain> = $f9;

        return;
    }

    public void <init>(boolean, float, float, float, float, float, float, float, float, float, float)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        boolean z0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        z0 := @parameter0: boolean;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        f4 := @parameter5: float;

        f5 := @parameter6: float;

        f6 := @parameter7: float;

        f7 := @parameter8: float;

        f8 := @parameter9: float;

        f9 := @parameter10: float;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing$BandBase: void <init>(boolean,float)>(z0, f0);

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mAttackTime> = f1;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mReleaseTime> = f2;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mRatio> = f3;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mThreshold> = f4;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mKneeWidth> = f5;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mNoiseGateThreshold> = f6;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mExpanderRatio> = f7;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPreGain> = f8;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPostGain> = f9;

        return;
    }

    public float getAttackTime()
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mAttackTime>;

        return $f0;
    }

    public float getExpanderRatio()
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mExpanderRatio>;

        return $f0;
    }

    public float getKneeWidth()
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mKneeWidth>;

        return $f0;
    }

    public float getNoiseGateThreshold()
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mNoiseGateThreshold>;

        return $f0;
    }

    public float getPostGain()
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPostGain>;

        return $f0;
    }

    public float getPreGain()
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPreGain>;

        return $f0;
    }

    public float getRatio()
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mRatio>;

        return $f0;
    }

    public float getReleaseTime()
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mReleaseTime>;

        return $f0;
    }

    public float getThreshold()
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mThreshold>;

        return $f0;
    }

    public void setAttackTime(float)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        f0 := @parameter0: float;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mAttackTime> = f0;

        return;
    }

    public void setExpanderRatio(float)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        f0 := @parameter0: float;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mExpanderRatio> = f0;

        return;
    }

    public void setKneeWidth(float)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        f0 := @parameter0: float;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mKneeWidth> = f0;

        return;
    }

    public void setNoiseGateThreshold(float)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        f0 := @parameter0: float;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mNoiseGateThreshold> = f0;

        return;
    }

    public void setPostGain(float)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        f0 := @parameter0: float;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPostGain> = f0;

        return;
    }

    public void setPreGain(float)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        f0 := @parameter0: float;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPreGain> = f0;

        return;
    }

    public void setRatio(float)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        f0 := @parameter0: float;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mRatio> = f0;

        return;
    }

    public void setReleaseTime(float)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        f0 := @parameter0: float;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mReleaseTime> = f0;

        return;
    }

    public void setThreshold(float)
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        float f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        f0 := @parameter0: float;

        r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mThreshold> = f0;

        return;
    }

    public java.lang.String toString()
    {
        android.media.audiofx.DynamicsProcessing$MbcBand r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35, $r37;
        java.lang.Object[] $r5, $r9, $r13, $r17, $r21, $r25, $r29, $r33;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        java.lang.Float $r6, $r10, $r14, $r18, $r22, $r26, $r30, $r34;

        r0 := @this: android.media.audiofx.DynamicsProcessing$MbcBand;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing$BandBase: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = newarray (java.lang.Object)[1];

        $f0 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mAttackTime>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" AttackTime: %f (ms)\n", $r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = newarray (java.lang.Object)[1];

        $f1 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mReleaseTime>;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" ReleaseTime: %f (ms)\n", $r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = newarray (java.lang.Object)[1];

        $f2 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mRatio>;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" Ratio: 1:%f\n", $r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = newarray (java.lang.Object)[1];

        $f3 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mThreshold>;

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r17[0] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" Threshold: %f (dB)\n", $r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = newarray (java.lang.Object)[1];

        $f4 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mNoiseGateThreshold>;

        $r22 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r21[0] = $r22;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" NoiseGateThreshold: %f(dB)\n", $r21);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = newarray (java.lang.Object)[1];

        $f5 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mExpanderRatio>;

        $r26 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        $r25[0] = $r26;

        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" ExpanderRatio: %f:1\n", $r25);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = newarray (java.lang.Object)[1];

        $f6 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPreGain>;

        $r30 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        $r29[0] = $r30;

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" PreGain: %f (dB)\n", $r29);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = newarray (java.lang.Object)[1];

        $f7 = r0.<android.media.audiofx.DynamicsProcessing$MbcBand: float mPostGain>;

        $r34 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        $r33[0] = $r34;

        $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" PostGain: %f (dB)\n", $r33);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r37;
    }
}
