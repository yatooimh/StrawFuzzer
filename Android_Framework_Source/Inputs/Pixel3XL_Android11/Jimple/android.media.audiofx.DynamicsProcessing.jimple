public final class android.media.audiofx.DynamicsProcessing extends android.media.audiofx.AudioEffect
{
    private static final int CHANNEL_COUNT_MAX;
    private static final float CHANNEL_DEFAULT_INPUT_GAIN;
    private static final int CONFIG_DEFAULT_MBC_BANDS;
    private static final int CONFIG_DEFAULT_POSTEQ_BANDS;
    private static final int CONFIG_DEFAULT_PREEQ_BANDS;
    private static final boolean CONFIG_DEFAULT_USE_LIMITER;
    private static final boolean CONFIG_DEFAULT_USE_MBC;
    private static final boolean CONFIG_DEFAULT_USE_POSTEQ;
    private static final boolean CONFIG_DEFAULT_USE_PREEQ;
    private static final int CONFIG_DEFAULT_VARIANT;
    private static final float CONFIG_PREFERRED_FRAME_DURATION_MS;
    private static final float DEFAULT_MAX_FREQUENCY;
    private static final float DEFAULT_MIN_FREQUENCY;
    private static final float EQ_DEFAULT_GAIN;
    private static final float LIMITER_DEFAULT_ATTACK_TIME;
    private static final boolean LIMITER_DEFAULT_ENABLED;
    private static final int LIMITER_DEFAULT_LINK_GROUP;
    private static final float LIMITER_DEFAULT_POST_GAIN;
    private static final float LIMITER_DEFAULT_RATIO;
    private static final float LIMITER_DEFAULT_RELEASE_TIME;
    private static final float LIMITER_DEFAULT_THRESHOLD;
    private static final float MBC_DEFAULT_ATTACK_TIME;
    private static final boolean MBC_DEFAULT_ENABLED;
    private static final float MBC_DEFAULT_EXPANDER_RATIO;
    private static final float MBC_DEFAULT_KNEE_WIDTH;
    private static final float MBC_DEFAULT_NOISE_GATE_THRESHOLD;
    private static final float MBC_DEFAULT_POST_GAIN;
    private static final float MBC_DEFAULT_PRE_GAIN;
    private static final float MBC_DEFAULT_RATIO;
    private static final float MBC_DEFAULT_RELEASE_TIME;
    private static final float MBC_DEFAULT_THRESHOLD;
    private static final int PARAM_ENGINE_ARCHITECTURE;
    private static final int PARAM_GET_CHANNEL_COUNT;
    private static final int PARAM_INPUT_GAIN;
    private static final int PARAM_LIMITER;
    private static final int PARAM_MBC;
    private static final int PARAM_MBC_BAND;
    private static final int PARAM_POST_EQ;
    private static final int PARAM_POST_EQ_BAND;
    private static final int PARAM_PRE_EQ;
    private static final int PARAM_PRE_EQ_BAND;
    private static final boolean POSTEQ_DEFAULT_ENABLED;
    private static final boolean PREEQ_DEFAULT_ENABLED;
    private static final java.lang.String TAG;
    public static final int VARIANT_FAVOR_FREQUENCY_RESOLUTION;
    public static final int VARIANT_FAVOR_TIME_RESOLUTION;
    private static final float mMaxFreqLog;
    private static final float mMinFreqLog;
    private android.media.audiofx.DynamicsProcessing$BaseParameterListener mBaseParamListener;
    private int mChannelCount;
    private android.media.audiofx.DynamicsProcessing$OnParameterChangeListener mParamListener;
    private final java.lang.Object mParamListenerLock;

    static void <clinit>()
    {
        double $d0, $d1;
        float $f0, $f1;

        <android.media.audiofx.DynamicsProcessing: int VARIANT_FAVOR_TIME_RESOLUTION> = 1;

        <android.media.audiofx.DynamicsProcessing: int VARIANT_FAVOR_FREQUENCY_RESOLUTION> = 0;

        <android.media.audiofx.DynamicsProcessing: java.lang.String TAG> = "DynamicsProcessing";

        <android.media.audiofx.DynamicsProcessing: boolean PREEQ_DEFAULT_ENABLED> = 1;

        <android.media.audiofx.DynamicsProcessing: boolean POSTEQ_DEFAULT_ENABLED> = 1;

        <android.media.audiofx.DynamicsProcessing: int PARAM_PRE_EQ_BAND> = 69;

        <android.media.audiofx.DynamicsProcessing: int PARAM_PRE_EQ> = 64;

        <android.media.audiofx.DynamicsProcessing: int PARAM_POST_EQ_BAND> = 101;

        <android.media.audiofx.DynamicsProcessing: int PARAM_POST_EQ> = 96;

        <android.media.audiofx.DynamicsProcessing: int PARAM_MBC_BAND> = 85;

        <android.media.audiofx.DynamicsProcessing: int PARAM_MBC> = 80;

        <android.media.audiofx.DynamicsProcessing: int PARAM_LIMITER> = 112;

        <android.media.audiofx.DynamicsProcessing: int PARAM_INPUT_GAIN> = 32;

        <android.media.audiofx.DynamicsProcessing: int PARAM_GET_CHANNEL_COUNT> = 16;

        <android.media.audiofx.DynamicsProcessing: int PARAM_ENGINE_ARCHITECTURE> = 48;

        <android.media.audiofx.DynamicsProcessing: float MBC_DEFAULT_THRESHOLD> = -45.0F;

        <android.media.audiofx.DynamicsProcessing: float MBC_DEFAULT_RELEASE_TIME> = 80.0F;

        <android.media.audiofx.DynamicsProcessing: float MBC_DEFAULT_RATIO> = 1.0F;

        <android.media.audiofx.DynamicsProcessing: float MBC_DEFAULT_PRE_GAIN> = 0.0F;

        <android.media.audiofx.DynamicsProcessing: float MBC_DEFAULT_POST_GAIN> = 0.0F;

        <android.media.audiofx.DynamicsProcessing: float MBC_DEFAULT_NOISE_GATE_THRESHOLD> = -90.0F;

        <android.media.audiofx.DynamicsProcessing: float MBC_DEFAULT_KNEE_WIDTH> = 0.0F;

        <android.media.audiofx.DynamicsProcessing: float MBC_DEFAULT_EXPANDER_RATIO> = 1.0F;

        <android.media.audiofx.DynamicsProcessing: boolean MBC_DEFAULT_ENABLED> = 1;

        <android.media.audiofx.DynamicsProcessing: float MBC_DEFAULT_ATTACK_TIME> = 3.0F;

        <android.media.audiofx.DynamicsProcessing: float LIMITER_DEFAULT_THRESHOLD> = -2.0F;

        <android.media.audiofx.DynamicsProcessing: float LIMITER_DEFAULT_RELEASE_TIME> = 60.0F;

        <android.media.audiofx.DynamicsProcessing: float LIMITER_DEFAULT_RATIO> = 10.0F;

        <android.media.audiofx.DynamicsProcessing: float LIMITER_DEFAULT_POST_GAIN> = 0.0F;

        <android.media.audiofx.DynamicsProcessing: int LIMITER_DEFAULT_LINK_GROUP> = 0;

        <android.media.audiofx.DynamicsProcessing: boolean LIMITER_DEFAULT_ENABLED> = 1;

        <android.media.audiofx.DynamicsProcessing: float LIMITER_DEFAULT_ATTACK_TIME> = 1.0F;

        <android.media.audiofx.DynamicsProcessing: float EQ_DEFAULT_GAIN> = 0.0F;

        <android.media.audiofx.DynamicsProcessing: float DEFAULT_MIN_FREQUENCY> = 220.0F;

        <android.media.audiofx.DynamicsProcessing: float DEFAULT_MAX_FREQUENCY> = 20000.0F;

        <android.media.audiofx.DynamicsProcessing: float CONFIG_PREFERRED_FRAME_DURATION_MS> = 10.0F;

        <android.media.audiofx.DynamicsProcessing: int CONFIG_DEFAULT_VARIANT> = 0;

        <android.media.audiofx.DynamicsProcessing: boolean CONFIG_DEFAULT_USE_PREEQ> = 1;

        <android.media.audiofx.DynamicsProcessing: boolean CONFIG_DEFAULT_USE_POSTEQ> = 1;

        <android.media.audiofx.DynamicsProcessing: boolean CONFIG_DEFAULT_USE_MBC> = 1;

        <android.media.audiofx.DynamicsProcessing: boolean CONFIG_DEFAULT_USE_LIMITER> = 1;

        <android.media.audiofx.DynamicsProcessing: int CONFIG_DEFAULT_PREEQ_BANDS> = 6;

        <android.media.audiofx.DynamicsProcessing: int CONFIG_DEFAULT_POSTEQ_BANDS> = 6;

        <android.media.audiofx.DynamicsProcessing: int CONFIG_DEFAULT_MBC_BANDS> = 6;

        <android.media.audiofx.DynamicsProcessing: float CHANNEL_DEFAULT_INPUT_GAIN> = 0.0F;

        <android.media.audiofx.DynamicsProcessing: int CHANNEL_COUNT_MAX> = 32;

        $d0 = staticinvoke <java.lang.Math: double log10(double)>(220.0);

        $f0 = (float) $d0;

        <android.media.audiofx.DynamicsProcessing: float mMinFreqLog> = $f0;

        $d1 = staticinvoke <java.lang.Math: double log10(double)>(20000.0);

        $f1 = (float) $d1;

        <android.media.audiofx.DynamicsProcessing: float mMaxFreqLog> = $f1;

        return;
    }

    public void <init>(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void <init>(int,int)>(0, i0);

        return;
    }

    public void <init>(int, int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void <init>(int,int,android.media.audiofx.DynamicsProcessing$Config)>(i0, i1, null);

        return;
    }

    public void <init>(int, int, android.media.audiofx.DynamicsProcessing$Config)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, $i1, $i2, $i3, $i4, i6, i7, i8, $i9;
        java.util.UUID $r1, $r2;
        java.lang.Object $r3;
        android.media.audiofx.DynamicsProcessing$Config $r4, r7, r8;
        float $f0;
        boolean $z0, $z1, $z2, $z3;
        android.media.audiofx.DynamicsProcessing$Channel $r5;
        android.media.audiofx.DynamicsProcessing$Config$Builder $r6;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        r7 := @parameter2: android.media.audiofx.DynamicsProcessing$Config;

        $r2 = <android.media.audiofx.DynamicsProcessing: java.util.UUID EFFECT_TYPE_DYNAMICS_PROCESSING>;

        $r1 = <android.media.audiofx.DynamicsProcessing: java.util.UUID EFFECT_TYPE_NULL>;

        specialinvoke r0.<android.media.audiofx.AudioEffect: void <init>(java.util.UUID,java.util.UUID,int,int)>($r2, $r1, i6, i0);

        r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount> = 0;

        r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$OnParameterChangeListener mParamListener> = null;

        r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$BaseParameterListener mBaseParamListener> = null;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.media.audiofx.DynamicsProcessing: java.lang.Object mParamListenerLock> = $r3;

        if i0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DynamicsProcessing", "WARNING: attaching a DynamicsProcessing to global output mix isdeprecated!");

     label1:
        i7 = virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getChannelCount()>();

        r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount> = i7;

        if r7 != null goto label2;

        $r6 = new android.media.audiofx.DynamicsProcessing$Config$Builder;

        specialinvoke $r6.<android.media.audiofx.DynamicsProcessing$Config$Builder: void <init>(int,int,boolean,int,boolean,int,boolean,int,boolean)>(0, i7, 1, 6, 1, 6, 1, 6, 1);

        r8 = virtualinvoke $r6.<android.media.audiofx.DynamicsProcessing$Config$Builder: android.media.audiofx.DynamicsProcessing$Config build()>();

        goto label3;

     label2:
        $r4 = new android.media.audiofx.DynamicsProcessing$Config;

        specialinvoke $r4.<android.media.audiofx.DynamicsProcessing$Config: void <init>(int,android.media.audiofx.DynamicsProcessing$Config)>(i7, r7);

        r8 = $r4;

     label3:
        $i1 = virtualinvoke r8.<android.media.audiofx.DynamicsProcessing$Config: int getVariant()>();

        $f0 = virtualinvoke r8.<android.media.audiofx.DynamicsProcessing$Config: float getPreferredFrameDuration()>();

        $z0 = virtualinvoke r8.<android.media.audiofx.DynamicsProcessing$Config: boolean isPreEqInUse()>();

        $i2 = virtualinvoke r8.<android.media.audiofx.DynamicsProcessing$Config: int getPreEqBandCount()>();

        $z1 = virtualinvoke r8.<android.media.audiofx.DynamicsProcessing$Config: boolean isMbcInUse()>();

        $i3 = virtualinvoke r8.<android.media.audiofx.DynamicsProcessing$Config: int getMbcBandCount()>();

        $z2 = virtualinvoke r8.<android.media.audiofx.DynamicsProcessing$Config: boolean isPostEqInUse()>();

        $i4 = virtualinvoke r8.<android.media.audiofx.DynamicsProcessing$Config: int getPostEqBandCount()>();

        $z3 = virtualinvoke r8.<android.media.audiofx.DynamicsProcessing$Config: boolean isLimiterInUse()>();

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void setEngineArchitecture(int,float,boolean,int,boolean,int,boolean,int,boolean)>($i1, $f0, $z0, $i2, $z1, $i3, $z2, $i4, $z3);

        i8 = 0;

     label4:
        $i9 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i8 >= $i9 goto label5;

        $r5 = virtualinvoke r8.<android.media.audiofx.DynamicsProcessing$Config: android.media.audiofx.DynamicsProcessing$Channel getChannelByChannelIndex(int)>(i8);

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineChannelByChannelIndex(int,android.media.audiofx.DynamicsProcessing$Channel)>(i8, $r5);

        i8 = i8 + 1;

        goto label4;

     label5:
        return;
    }

    static float access$000()
    {
        float $f0;

        $f0 = <android.media.audiofx.DynamicsProcessing: float mMinFreqLog>;

        return $f0;
    }

    static float access$100()
    {
        float $f0;

        $f0 = <android.media.audiofx.DynamicsProcessing: float mMaxFreqLog>;

        return $f0;
    }

    static java.lang.Object access$200(android.media.audiofx.DynamicsProcessing)
    {
        android.media.audiofx.DynamicsProcessing r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.audiofx.DynamicsProcessing;

        $r1 = r0.<android.media.audiofx.DynamicsProcessing: java.lang.Object mParamListenerLock>;

        return $r1;
    }

    static android.media.audiofx.DynamicsProcessing$OnParameterChangeListener access$300(android.media.audiofx.DynamicsProcessing)
    {
        android.media.audiofx.DynamicsProcessing r0;
        android.media.audiofx.DynamicsProcessing$OnParameterChangeListener $r1;

        r0 := @parameter0: android.media.audiofx.DynamicsProcessing;

        $r1 = r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$OnParameterChangeListener mParamListener>;

        return $r1;
    }

    private void byteArrayToNumberArray(byte[], java.lang.Number[])
    {
        android.media.audiofx.DynamicsProcessing r0;
        java.lang.Object[] r1;
        int $i0, $i1, $i2, $i3, i4, i5, $i6;
        java.lang.StringBuilder $r2, $r12;
        java.lang.IllegalArgumentException $r8, $r17;
        java.lang.String $r9, $r18;
        java.lang.Object $r10, $r11, $r14;
        boolean $z0, $z1;
        java.lang.Class $r15;
        float $f0;
        java.lang.Float $r19;
        java.lang.Integer $r20;
        byte[] r21;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r21 := @parameter0: byte[];

        r1 := @parameter1: java.lang.Number[];

        i4 = 0;

        i5 = 0;

     label1:
        $i6 = lengthof r21;

        if i4 >= $i6 goto label4;

        $i2 = lengthof r1;

        if i5 >= $i2 goto label4;

        $r10 = r1[i5];

        $z0 = $r10 instanceof java.lang.Integer;

        if $z0 == 0 goto label2;

        $i3 = staticinvoke <android.media.audiofx.DynamicsProcessing: int byteArrayToInt(byte[],int)>(r21, i4);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r1[i5] = $r20;

        i4 = i4 + 4;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r11 = r1[i5];

        $z1 = $r11 instanceof java.lang.Float;

        if $z1 == 0 goto label3;

        $f0 = staticinvoke <android.media.audiofx.DynamicsProcessing: float byteArrayToFloat(byte[],int)>(r21, i4);

        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r1[i5] = $r19;

        i4 = i4 + 4;

        i5 = i5 + 1;

        goto label1;

     label3:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t convert ");

        $r14 = r1[i5];

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label4:
        $i0 = lengthof r1;

        if i5 != $i0 goto label5;

        return;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("only converted ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values out of ");

        $i1 = lengthof r1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private int getOneInt(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, $i1, $i2;
        int[] r1, $r2;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 = newarray (int)[1];

        $r2 = newarray (int)[1];

        $r2[0] = i0;

        $i1 = virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getParameter(int[],int[])>($r2, r1);

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void checkStatus(int)>($i1);

        $i2 = r1[0];

        return $i2;
    }

    private float getTwoFloat(int, int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, $i2;
        byte[] r1;
        int[] $r2;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = newarray (byte)[4];

        $r2 = newarray (int)[2];

        $r2[0] = i0;

        $r2[1] = i1;

        $i2 = virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getParameter(int[],byte[])>($r2, r1);

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void checkStatus(int)>($i2);

        $f0 = staticinvoke <android.media.audiofx.DynamicsProcessing: float byteArrayToFloat(byte[])>(r1);

        return $f0;
    }

    private byte[] numberArrayToByteArray(java.lang.Number[])
    {
        android.media.audiofx.DynamicsProcessing r0;
        java.lang.Number[] r1;
        int $i0, $i1, $i2, i3, i4, i5;
        java.nio.ByteOrder $r2;
        byte[] $r4;
        java.lang.Number $r5, $r6, $r7, $r9, $r11, $r12, $r15;
        boolean $z0, $z1, $z2, $z3;
        float $f0;
        java.lang.StringBuilder $r13;
        java.lang.Class $r16;
        java.lang.IllegalArgumentException $r18;
        java.lang.String $r19;
        java.nio.ByteBuffer r21;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r1 := @parameter0: java.lang.Number[];

        i3 = 0;

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label5;

        $r11 = r1[i4];

        $z2 = $r11 instanceof java.lang.Integer;

        if $z2 == 0 goto label2;

        i3 = i3 + 4;

        goto label3;

     label2:
        $r12 = r1[i4];

        $z3 = $r12 instanceof java.lang.Float;

        if $z3 == 0 goto label4;

        i3 = i3 + 4;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown value type ");

        $r15 = r1[i4];

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label5:
        r21 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i3);

        $r2 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke r21.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        i5 = 0;

     label6:
        $i1 = lengthof r1;

        if i5 >= $i1 goto label9;

        $r5 = r1[i5];

        $z0 = $r5 instanceof java.lang.Integer;

        if $z0 == 0 goto label7;

        $r9 = r1[i5];

        $i2 = virtualinvoke $r9.<java.lang.Number: int intValue()>();

        virtualinvoke r21.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i2);

        goto label8;

     label7:
        $r6 = r1[i5];

        $z1 = $r6 instanceof java.lang.Float;

        if $z1 == 0 goto label8;

        $r7 = r1[i5];

        $f0 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        virtualinvoke r21.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f0);

     label8:
        i5 = i5 + 1;

        goto label6;

     label9:
        $r4 = virtualinvoke r21.<java.nio.ByteBuffer: byte[] array()>();

        return $r4;
    }

    private android.media.audiofx.DynamicsProcessing$Channel queryEngineByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, $i1, $i2, $i3;
        float f0;
        android.media.audiofx.DynamicsProcessing$Eq r1, r3;
        android.media.audiofx.DynamicsProcessing$Mbc r2;
        android.media.audiofx.DynamicsProcessing$Limiter r4;
        android.media.audiofx.DynamicsProcessing$Channel $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        f0 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: float getTwoFloat(int,int)>(32, i0);

        r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$Eq queryEngineEqByChannelIndex(int,int)>(64, i0);

        r2 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$Mbc queryEngineMbcByChannelIndex(int)>(i0);

        r3 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$Eq queryEngineEqByChannelIndex(int,int)>(96, i0);

        r4 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$Limiter queryEngineLimiterByChannelIndex(int)>(i0);

        $r6 = new android.media.audiofx.DynamicsProcessing$Channel;

        $z0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Eq: boolean isInUse()>();

        $i1 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Eq: int getBandCount()>();

        $z1 = virtualinvoke r2.<android.media.audiofx.DynamicsProcessing$Mbc: boolean isInUse()>();

        $i2 = virtualinvoke r2.<android.media.audiofx.DynamicsProcessing$Mbc: int getBandCount()>();

        $z2 = virtualinvoke r3.<android.media.audiofx.DynamicsProcessing$Eq: boolean isInUse()>();

        $i3 = virtualinvoke r3.<android.media.audiofx.DynamicsProcessing$Eq: int getBandCount()>();

        $z3 = virtualinvoke r4.<android.media.audiofx.DynamicsProcessing$Limiter: boolean isInUse()>();

        specialinvoke $r6.<android.media.audiofx.DynamicsProcessing$Channel: void <init>(float,boolean,int,boolean,int,boolean,int,boolean)>(f0, $z0, $i1, $z1, $i2, $z2, $i3, $z3);

        virtualinvoke $r6.<android.media.audiofx.DynamicsProcessing$Channel: void setInputGain(float)>(f0);

        virtualinvoke $r6.<android.media.audiofx.DynamicsProcessing$Channel: void setPreEq(android.media.audiofx.DynamicsProcessing$Eq)>(r1);

        virtualinvoke $r6.<android.media.audiofx.DynamicsProcessing$Channel: void setMbc(android.media.audiofx.DynamicsProcessing$Mbc)>(r2);

        virtualinvoke $r6.<android.media.audiofx.DynamicsProcessing$Channel: void setPostEq(android.media.audiofx.DynamicsProcessing$Eq)>(r3);

        virtualinvoke $r6.<android.media.audiofx.DynamicsProcessing$Channel: void setLimiter(android.media.audiofx.DynamicsProcessing$Limiter)>(r4);

        return $r6;
    }

    private android.media.audiofx.DynamicsProcessing$EqBand queryEngineEqBandByChannelIndex(int, int, int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, i2, $i4;
        java.lang.Object[] r1, $r4;
        byte[] r2, r13;
        java.lang.Integer $r3, $r5, $r6, $r7;
        java.lang.Object $r8, $r10, $r11;
        float $f0, $f1;
        boolean z0;
        java.lang.Float r12;
        android.media.audiofx.DynamicsProcessing$EqBand r14;
        java.lang.Number[] r15, r16, r17;
        java.lang.Number r18, r19, r20;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 = 0;

        r1 = newarray (java.lang.Number)[3];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r1[0] = $r3;

        r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        r1[1] = r12;

        r1[2] = r12;

        $r4 = newarray (java.lang.Number)[3];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[1] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r4[2] = $r7;

        r15 = (java.lang.Number[]) $r4;

        r13 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r15);

        r16 = (java.lang.Number[]) r1;

        r2 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r16);

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getParameter(byte[],byte[])>(r13, r2);

        r17 = (java.lang.Number[]) r1;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void byteArrayToNumberArray(byte[],java.lang.Number[])>(r2, r17);

        $r8 = r1[0];

        r18 = (java.lang.Number) $r8;

        $i4 = virtualinvoke r18.<java.lang.Number: int intValue()>();

        if $i4 <= 0 goto label1;

        z0 = 1;

     label1:
        r14 = new android.media.audiofx.DynamicsProcessing$EqBand;

        $r10 = r1[1];

        r19 = (java.lang.Number) $r10;

        $f0 = virtualinvoke r19.<java.lang.Number: float floatValue()>();

        $r11 = r1[2];

        r20 = (java.lang.Number) $r11;

        $f1 = virtualinvoke r20.<java.lang.Number: float floatValue()>();

        specialinvoke r14.<android.media.audiofx.DynamicsProcessing$EqBand: void <init>(boolean,float,float)>(z0, $f0, $f1);

        return r14;
    }

    private android.media.audiofx.DynamicsProcessing$Eq queryEngineEqByChannelIndex(int, int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, i2, $i4, $i5, i7;
        java.lang.Object[] r1, $r6;
        byte[] r2, r14;
        java.lang.Integer $r3, $r4, $r5, $r7, $r8;
        java.lang.Object $r9, $r10, $r11;
        android.media.audiofx.DynamicsProcessing$EqBand $r13;
        byte b6, b8;
        boolean z0, z1;
        android.media.audiofx.DynamicsProcessing$Eq r16;
        java.lang.Number[] r17, r18, r19;
        java.lang.Number r20, r21, r22;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 64 goto label1;

        b6 = 64;

        goto label2;

     label1:
        b6 = 96;

     label2:
        z0 = 0;

        r1 = newarray (java.lang.Number)[3];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r1[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r1[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r1[2] = $r5;

        $r6 = newarray (java.lang.Number)[2];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b6);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[1] = $r8;

        r17 = (java.lang.Number[]) $r6;

        r2 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r17);

        r18 = (java.lang.Number[]) r1;

        r14 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r18);

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getParameter(byte[],byte[])>(r2, r14);

        r19 = (java.lang.Number[]) r1;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void byteArrayToNumberArray(byte[],java.lang.Number[])>(r14, r19);

        $r9 = r1[2];

        r20 = (java.lang.Number) $r9;

        i2 = virtualinvoke r20.<java.lang.Number: int intValue()>();

        $r10 = r1[0];

        r21 = (java.lang.Number) $r10;

        $i4 = virtualinvoke r21.<java.lang.Number: int intValue()>();

        if $i4 <= 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        $r11 = r1[1];

        r22 = (java.lang.Number) $r11;

        $i5 = virtualinvoke r22.<java.lang.Number: int intValue()>();

        if $i5 <= 0 goto label5;

        z0 = 1;

     label5:
        r16 = new android.media.audiofx.DynamicsProcessing$Eq;

        specialinvoke r16.<android.media.audiofx.DynamicsProcessing$Eq: void <init>(boolean,boolean,int)>(z1, z0, i2);

        i7 = 0;

     label6:
        if i7 >= i2 goto label9;

        if i0 != 64 goto label7;

        b8 = 69;

        goto label8;

     label7:
        b8 = 101;

     label8:
        $r13 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$EqBand queryEngineEqBandByChannelIndex(int,int,int)>(b8, i1, i7);

        virtualinvoke r16.<android.media.audiofx.DynamicsProcessing$Eq: void setBand(int,android.media.audiofx.DynamicsProcessing$EqBand)>(i7, $r13);

        i7 = i7 + 1;

        goto label6;

     label9:
        return r16;
    }

    private android.media.audiofx.DynamicsProcessing$Limiter queryEngineLimiterByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, $i2, $i3, $i4;
        java.lang.Object[] r1, $r3;
        byte[] r2, r17;
        java.lang.Integer $r4, $r5, r15;
        java.lang.Object $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.Float r16;
        boolean z0, z1;
        android.media.audiofx.DynamicsProcessing$Limiter r18;
        java.lang.Number[] r19, r20, r21;
        java.lang.Number r22, r23, r24, r25, r26, r27, r28, r29;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r1 = newarray (java.lang.Number)[8];

        r1[0] = r15;

        r1[1] = r15;

        r1[2] = r15;

        r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        r1[3] = r16;

        r1[4] = r16;

        r1[5] = r16;

        r1[6] = r16;

        r1[7] = r16;

        $r3 = newarray (java.lang.Number)[2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(112);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[1] = $r5;

        r19 = (java.lang.Number[]) $r3;

        r17 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r19);

        r20 = (java.lang.Number[]) r1;

        r2 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r20);

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getParameter(byte[],byte[])>(r17, r2);

        r21 = (java.lang.Number[]) r1;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void byteArrayToNumberArray(byte[],java.lang.Number[])>(r2, r21);

        $r6 = r1[0];

        r22 = (java.lang.Number) $r6;

        $i2 = virtualinvoke r22.<java.lang.Number: int intValue()>();

        if $i2 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r7 = r1[1];

        r23 = (java.lang.Number) $r7;

        $i3 = virtualinvoke r23.<java.lang.Number: int intValue()>();

        if $i3 <= 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        r18 = new android.media.audiofx.DynamicsProcessing$Limiter;

        $r9 = r1[2];

        r24 = (java.lang.Number) $r9;

        $i4 = virtualinvoke r24.<java.lang.Number: int intValue()>();

        $r10 = r1[3];

        r25 = (java.lang.Number) $r10;

        $f0 = virtualinvoke r25.<java.lang.Number: float floatValue()>();

        $r11 = r1[4];

        r26 = (java.lang.Number) $r11;

        $f1 = virtualinvoke r26.<java.lang.Number: float floatValue()>();

        $r12 = r1[5];

        r27 = (java.lang.Number) $r12;

        $f2 = virtualinvoke r27.<java.lang.Number: float floatValue()>();

        $r13 = r1[6];

        r28 = (java.lang.Number) $r13;

        $f3 = virtualinvoke r28.<java.lang.Number: float floatValue()>();

        $r14 = r1[7];

        r29 = (java.lang.Number) $r14;

        $f4 = virtualinvoke r29.<java.lang.Number: float floatValue()>();

        specialinvoke r18.<android.media.audiofx.DynamicsProcessing$Limiter: void <init>(boolean,boolean,int,float,float,float,float,float)>(z0, z1, $i4, $f0, $f1, $f2, $f3, $f4);

        return r18;
    }

    private android.media.audiofx.DynamicsProcessing$MbcBand queryEngineMbcBandByChannelIndex(int, int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, $i3;
        java.lang.Object[] r1, $r4;
        byte[] r2, r21;
        java.lang.Integer $r3, $r5, $r6, $r7;
        java.lang.Object $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.Float r20;
        boolean z0;
        android.media.audiofx.DynamicsProcessing$MbcBand r22;
        java.lang.Number[] r23, r24, r25;
        java.lang.Number r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = newarray (java.lang.Number)[11];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r1[0] = $r3;

        r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        r1[1] = r20;

        r1[2] = r20;

        r1[3] = r20;

        r1[4] = r20;

        r1[5] = r20;

        r1[6] = r20;

        r1[7] = r20;

        r1[8] = r20;

        r1[9] = r20;

        r1[10] = r20;

        $r4 = newarray (java.lang.Number)[3];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(85);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[1] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[2] = $r7;

        r23 = (java.lang.Number[]) $r4;

        r21 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r23);

        r24 = (java.lang.Number[]) r1;

        r2 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r24);

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getParameter(byte[],byte[])>(r21, r2);

        r25 = (java.lang.Number[]) r1;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void byteArrayToNumberArray(byte[],java.lang.Number[])>(r2, r25);

        $r8 = r1[0];

        r26 = (java.lang.Number) $r8;

        $i3 = virtualinvoke r26.<java.lang.Number: int intValue()>();

        if $i3 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r22 = new android.media.audiofx.DynamicsProcessing$MbcBand;

        $r10 = r1[1];

        r27 = (java.lang.Number) $r10;

        $f0 = virtualinvoke r27.<java.lang.Number: float floatValue()>();

        $r11 = r1[2];

        r28 = (java.lang.Number) $r11;

        $f1 = virtualinvoke r28.<java.lang.Number: float floatValue()>();

        $r12 = r1[3];

        r29 = (java.lang.Number) $r12;

        $f2 = virtualinvoke r29.<java.lang.Number: float floatValue()>();

        $r13 = r1[4];

        r30 = (java.lang.Number) $r13;

        $f3 = virtualinvoke r30.<java.lang.Number: float floatValue()>();

        $r14 = r1[5];

        r31 = (java.lang.Number) $r14;

        $f4 = virtualinvoke r31.<java.lang.Number: float floatValue()>();

        $r15 = r1[6];

        r32 = (java.lang.Number) $r15;

        $f5 = virtualinvoke r32.<java.lang.Number: float floatValue()>();

        $r16 = r1[7];

        r33 = (java.lang.Number) $r16;

        $f6 = virtualinvoke r33.<java.lang.Number: float floatValue()>();

        $r17 = r1[8];

        r34 = (java.lang.Number) $r17;

        $f7 = virtualinvoke r34.<java.lang.Number: float floatValue()>();

        $r18 = r1[9];

        r35 = (java.lang.Number) $r18;

        $f8 = virtualinvoke r35.<java.lang.Number: float floatValue()>();

        $r19 = r1[10];

        r36 = (java.lang.Number) $r19;

        $f9 = virtualinvoke r36.<java.lang.Number: float floatValue()>();

        specialinvoke r22.<android.media.audiofx.DynamicsProcessing$MbcBand: void <init>(boolean,float,float,float,float,float,float,float,float,float,float)>(z0, $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9);

        return r22;
    }

    private android.media.audiofx.DynamicsProcessing$Mbc queryEngineMbcByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, $i3, $i4, i5;
        byte[] r1, r12;
        java.lang.Object[] $r2, r11;
        java.lang.Integer $r3, $r4, r10;
        java.lang.Object $r5, $r6, $r7;
        android.media.audiofx.DynamicsProcessing$MbcBand $r9;
        boolean z0, z1;
        android.media.audiofx.DynamicsProcessing$Mbc r14;
        java.lang.Number[] r15, r16, r17;
        java.lang.Number r18, r19, r20;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        z0 = 0;

        r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r11 = newarray (java.lang.Number)[3];

        r11[0] = r10;

        r11[1] = r10;

        r11[2] = r10;

        $r2 = newarray (java.lang.Number)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(80);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r4;

        r15 = (java.lang.Number[]) $r2;

        r12 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r15);

        r16 = (java.lang.Number[]) r11;

        r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r16);

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getParameter(byte[],byte[])>(r12, r1);

        r17 = (java.lang.Number[]) r11;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void byteArrayToNumberArray(byte[],java.lang.Number[])>(r1, r17);

        $r5 = r11[2];

        r18 = (java.lang.Number) $r5;

        i1 = virtualinvoke r18.<java.lang.Number: int intValue()>();

        $r6 = r11[0];

        r19 = (java.lang.Number) $r6;

        $i3 = virtualinvoke r19.<java.lang.Number: int intValue()>();

        if $i3 <= 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r7 = r11[1];

        r20 = (java.lang.Number) $r7;

        $i4 = virtualinvoke r20.<java.lang.Number: int intValue()>();

        if $i4 <= 0 goto label3;

        z0 = 1;

     label3:
        r14 = new android.media.audiofx.DynamicsProcessing$Mbc;

        specialinvoke r14.<android.media.audiofx.DynamicsProcessing$Mbc: void <init>(boolean,boolean,int)>(z1, z0, i1);

        i5 = 0;

     label4:
        if i5 >= i1 goto label5;

        $r9 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$MbcBand queryEngineMbcBandByChannelIndex(int,int)>(i0, i5);

        virtualinvoke r14.<android.media.audiofx.DynamicsProcessing$Mbc: void setBand(int,android.media.audiofx.DynamicsProcessing$MbcBand)>(i5, $r9);

        i5 = i5 + 1;

        goto label4;

     label5:
        return r14;
    }

    private void setEngineArchitecture(int, float, boolean, int, boolean, int, boolean, int, boolean)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        float f0;
        boolean z0, z1, z2, z3;
        java.lang.Object[] $r1, $r3;
        java.lang.Integer $r2, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.Float $r5;
        java.lang.Number[] r13, r14;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        z1 := @parameter4: boolean;

        i2 := @parameter5: int;

        z2 := @parameter6: boolean;

        i3 := @parameter7: int;

        z3 := @parameter8: boolean;

        $r1 = newarray (java.lang.Number)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(48);

        $r1[0] = $r2;

        $r3 = newarray (java.lang.Number)[9];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r3[1] = $r5;

        i4 = (int) z0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r3[2] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[3] = $r7;

        i5 = (int) z1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r3[4] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3[5] = $r9;

        i6 = (int) z2;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r3[6] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r3[7] = $r11;

        i7 = (int) z3;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        $r3[8] = $r12;

        r13 = (java.lang.Number[]) $r1;

        r14 = (java.lang.Number[]) $r3;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void setNumberArray(java.lang.Number[],java.lang.Number[])>(r13, r14);

        return;
    }

    private void setNumberArray(java.lang.Number[], java.lang.Number[])
    {
        android.media.audiofx.DynamicsProcessing r0;
        java.lang.Number[] r1, r2;
        byte[] $r3, $r4;
        int $i0;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r1 := @parameter0: java.lang.Number[];

        r2 := @parameter1: java.lang.Number[];

        $r3 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r1);

        $r4 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r2);

        $i0 = virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int setParameter(byte[],byte[])>($r3, $r4);

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void checkStatus(int)>($i0);

        return;
    }

    private void setTwoFloat(int, int, float)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, $i2;
        float f0;
        byte[] r1;
        int[] $r2;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        r1 = staticinvoke <android.media.audiofx.DynamicsProcessing: byte[] floatToByteArray(float)>(f0);

        $r2 = newarray (int)[2];

        $r2[0] = i0;

        $r2[1] = i1;

        $i2 = virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int setParameter(int[],byte[])>($r2, r1);

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void checkStatus(int)>($i2);

        return;
    }

    private void updateEffectArchitecture()
    {
        android.media.audiofx.DynamicsProcessing r0;
        int $i0;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        $i0 = virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getChannelCount()>();

        r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount> = $i0;

        return;
    }

    private void updateEngineChannelByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Channel)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Channel r1;
        float $f0;
        android.media.audiofx.DynamicsProcessing$Eq $r2, $r4;
        android.media.audiofx.DynamicsProcessing$Mbc $r3;
        android.media.audiofx.DynamicsProcessing$Limiter $r5;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Channel;

        $f0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: float getInputGain()>();

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void setTwoFloat(int,int,float)>(32, i0, $f0);

        $r2 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Eq getPreEq()>();

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineEqByChannelIndex(int,int,android.media.audiofx.DynamicsProcessing$Eq)>(64, i0, $r2);

        $r3 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Mbc getMbc()>();

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineMbcByChannelIndex(int,android.media.audiofx.DynamicsProcessing$Mbc)>(i0, $r3);

        $r4 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Eq getPostEq()>();

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineEqByChannelIndex(int,int,android.media.audiofx.DynamicsProcessing$Eq)>(96, i0, $r4);

        $r5 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Channel: android.media.audiofx.DynamicsProcessing$Limiter getLimiter()>();

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineLimiterByChannelIndex(int,android.media.audiofx.DynamicsProcessing$Limiter)>(i0, $r5);

        return;
    }

    private void updateEngineEqBandByChannelIndex(int, int, int, android.media.audiofx.DynamicsProcessing$EqBand)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, i2, i3;
        android.media.audiofx.DynamicsProcessing$EqBand r1;
        boolean z0;
        float f0, f1;
        java.lang.Object[] $r2, $r6;
        java.lang.Integer $r3, $r4, $r5, $r7;
        java.lang.Float $r8, $r9;
        java.lang.Number[] r10, r11;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.media.audiofx.DynamicsProcessing$EqBand;

        z0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$EqBand: boolean isEnabled()>();

        f0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$EqBand: float getCutoffFrequency()>();

        f1 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$EqBand: float getGain()>();

        $r2 = newarray (java.lang.Number)[3];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r2[2] = $r5;

        $r6 = newarray (java.lang.Number)[3];

        i3 = (int) z0;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r6[1] = $r8;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $r6[2] = $r9;

        r10 = (java.lang.Number[]) $r2;

        r11 = (java.lang.Number[]) $r6;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void setNumberArray(java.lang.Number[],java.lang.Number[])>(r10, r11);

        return;
    }

    private void updateEngineEqByChannelIndex(int, int, android.media.audiofx.DynamicsProcessing$Eq)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, i2, i3, i4, i5, i6;
        android.media.audiofx.DynamicsProcessing$Eq r1;
        android.media.audiofx.DynamicsProcessing$EqBand r2;
        java.lang.Object[] $r3, $r6;
        java.lang.Integer $r4, $r5, $r7, $r8, $r9;
        boolean z0, z1;
        java.lang.Number[] r10, r11;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.audiofx.DynamicsProcessing$Eq;

        i2 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Eq: int getBandCount()>();

        z0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Eq: boolean isInUse()>();

        z1 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Eq: boolean isEnabled()>();

        $r3 = newarray (java.lang.Number)[2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[1] = $r5;

        $r6 = newarray (java.lang.Number)[3];

        i5 = (int) z0;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r6[0] = $r7;

        i6 = (int) z1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r6[1] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r6[2] = $r9;

        r10 = (java.lang.Number[]) $r3;

        r11 = (java.lang.Number[]) $r6;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void setNumberArray(java.lang.Number[],java.lang.Number[])>(r10, r11);

        i3 = 0;

     label1:
        if i3 >= i2 goto label4;

        r2 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Eq: android.media.audiofx.DynamicsProcessing$EqBand getBand(int)>(i3);

        if i0 != 64 goto label2;

        i4 = 69;

        goto label3;

     label2:
        i4 = 101;

     label3:
        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineEqBandByChannelIndex(int,int,int,android.media.audiofx.DynamicsProcessing$EqBand)>(i4, i1, i3, r2);

        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    private void updateEngineLimiterByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Limiter)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, i2, i3;
        android.media.audiofx.DynamicsProcessing$Limiter r1;
        boolean z0, z1;
        float f0, f1, f2, f3, f4;
        java.lang.Object[] $r2, $r5;
        java.lang.Integer $r3, $r4, $r6, $r7, $r8;
        java.lang.Float $r9, $r10, $r11, $r12, $r13;
        java.lang.Number[] r14, r15;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Limiter;

        z0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Limiter: boolean isInUse()>();

        z1 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Limiter: boolean isEnabled()>();

        i1 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Limiter: int getLinkGroup()>();

        f0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Limiter: float getAttackTime()>();

        f1 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Limiter: float getReleaseTime()>();

        f2 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Limiter: float getRatio()>();

        f3 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Limiter: float getThreshold()>();

        f4 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Limiter: float getPostGain()>();

        $r2 = newarray (java.lang.Number)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(112);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r4;

        $r5 = newarray (java.lang.Number)[8];

        i2 = (int) z0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r5[0] = $r6;

        i3 = (int) z1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r5[1] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5[2] = $r8;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r5[3] = $r9;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $r5[4] = $r10;

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

        $r5[5] = $r11;

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f3);

        $r5[6] = $r12;

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f4);

        $r5[7] = $r13;

        r14 = (java.lang.Number[]) $r2;

        r15 = (java.lang.Number[]) $r5;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void setNumberArray(java.lang.Number[],java.lang.Number[])>(r14, r15);

        return;
    }

    private void updateEngineMbcBandByChannelIndex(int, int, android.media.audiofx.DynamicsProcessing$MbcBand)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, i2;
        android.media.audiofx.DynamicsProcessing$MbcBand r1;
        boolean z0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9;
        java.lang.Object[] $r2, $r6;
        java.lang.Integer $r3, $r4, $r5, $r7;
        java.lang.Float $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.Number[] r18, r19;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.audiofx.DynamicsProcessing$MbcBand;

        z0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: boolean isEnabled()>();

        f0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getCutoffFrequency()>();

        f1 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getAttackTime()>();

        f2 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getReleaseTime()>();

        f3 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getRatio()>();

        f4 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getThreshold()>();

        f5 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getKneeWidth()>();

        f6 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getNoiseGateThreshold()>();

        f7 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getExpanderRatio()>();

        f8 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getPreGain()>();

        f9 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$MbcBand: float getPostGain()>();

        $r2 = newarray (java.lang.Number)[3];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(85);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r2[2] = $r5;

        $r6 = newarray (java.lang.Number)[11];

        i2 = (int) z0;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r6[1] = $r8;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $r6[2] = $r9;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

        $r6[3] = $r10;

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f3);

        $r6[4] = $r11;

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f4);

        $r6[5] = $r12;

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        $r6[6] = $r13;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f6);

        $r6[7] = $r14;

        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f7);

        $r6[8] = $r15;

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f8);

        $r6[9] = $r16;

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f9);

        $r6[10] = $r17;

        r18 = (java.lang.Number[]) $r2;

        r19 = (java.lang.Number[]) $r6;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void setNumberArray(java.lang.Number[],java.lang.Number[])>(r18, r19);

        return;
    }

    private void updateEngineMbcByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Mbc)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1, i2, i3, i4;
        android.media.audiofx.DynamicsProcessing$Mbc r1;
        boolean z0, z1;
        java.lang.Object[] $r2, $r5;
        java.lang.Integer $r3, $r4, $r6, $r7, $r8;
        android.media.audiofx.DynamicsProcessing$MbcBand $r9;
        java.lang.Number[] r10, r11;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Mbc;

        i1 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Mbc: int getBandCount()>();

        z1 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Mbc: boolean isInUse()>();

        z0 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Mbc: boolean isEnabled()>();

        $r2 = newarray (java.lang.Number)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(80);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r4;

        $r5 = newarray (java.lang.Number)[3];

        i3 = (int) z1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r5[0] = $r6;

        i4 = (int) z0;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r5[1] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5[2] = $r8;

        r10 = (java.lang.Number[]) $r2;

        r11 = (java.lang.Number[]) $r5;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void setNumberArray(java.lang.Number[],java.lang.Number[])>(r10, r11);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r9 = virtualinvoke r1.<android.media.audiofx.DynamicsProcessing$Mbc: android.media.audiofx.DynamicsProcessing$MbcBand getBand(int)>(i2);

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineMbcBandByChannelIndex(int,int,android.media.audiofx.DynamicsProcessing$MbcBand)>(i0, i2, $r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public android.media.audiofx.DynamicsProcessing$Channel getChannelByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Channel $r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$Channel queryEngineByChannelIndex(int)>(i0);

        return $r1;
    }

    public int getChannelCount()
    {
        android.media.audiofx.DynamicsProcessing r0;
        int $i0;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        $i0 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: int getOneInt(int)>(16);

        return $i0;
    }

    public android.media.audiofx.DynamicsProcessing$Config getConfig()
    {
        android.media.audiofx.DynamicsProcessing r0;
        byte[] r1, r19;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, i9, i10, $i11;
        java.lang.Float $r2;
        java.lang.Object[] $r3, r18;
        java.lang.Integer $r4, r17;
        java.lang.Object $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        float $f0;
        android.media.audiofx.DynamicsProcessing$Config$Builder $r15, r21;
        android.media.audiofx.DynamicsProcessing$Channel $r16;
        boolean z0, z1, z2, z3;
        android.media.audiofx.DynamicsProcessing$Config r20;
        java.lang.Number[] r22, r23, r24;
        java.lang.Number r25, r26, r27, r28, r29, r30, r31, r32, r33;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r18 = newarray (java.lang.Number)[9];

        r18[0] = r17;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        r18[1] = $r2;

        r18[2] = r17;

        r18[3] = r17;

        r18[4] = r17;

        r18[5] = r17;

        r18[6] = r17;

        r18[7] = r17;

        r18[8] = r17;

        $r3 = newarray (java.lang.Number)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(48);

        $r3[0] = $r4;

        r22 = (java.lang.Number[]) $r3;

        r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r22);

        r23 = (java.lang.Number[]) r18;

        r19 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: byte[] numberArrayToByteArray(java.lang.Number[])>(r23);

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getParameter(byte[],byte[])>(r1, r19);

        r24 = (java.lang.Number[]) r18;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void byteArrayToNumberArray(byte[],java.lang.Number[])>(r19, r24);

        $r5 = r18[0];

        r25 = (java.lang.Number) $r5;

        i9 = virtualinvoke r25.<java.lang.Number: int intValue()>();

        i0 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        $r6 = r18[2];

        r26 = (java.lang.Number) $r6;

        $i5 = virtualinvoke r26.<java.lang.Number: int intValue()>();

        if $i5 <= 0 goto label01;

        z0 = 1;

        goto label02;

     label01:
        z0 = 0;

     label02:
        $r7 = r18[3];

        r27 = (java.lang.Number) $r7;

        i1 = virtualinvoke r27.<java.lang.Number: int intValue()>();

        $r8 = r18[4];

        r28 = (java.lang.Number) $r8;

        $i6 = virtualinvoke r28.<java.lang.Number: int intValue()>();

        if $i6 <= 0 goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        $r9 = r18[5];

        r29 = (java.lang.Number) $r9;

        i2 = virtualinvoke r29.<java.lang.Number: int intValue()>();

        $r10 = r18[6];

        r30 = (java.lang.Number) $r10;

        $i7 = virtualinvoke r30.<java.lang.Number: int intValue()>();

        if $i7 <= 0 goto label05;

        z2 = 1;

        goto label06;

     label05:
        z2 = 0;

     label06:
        $r11 = r18[7];

        r31 = (java.lang.Number) $r11;

        i3 = virtualinvoke r31.<java.lang.Number: int intValue()>();

        $r12 = r18[8];

        r32 = (java.lang.Number) $r12;

        $i8 = virtualinvoke r32.<java.lang.Number: int intValue()>();

        if $i8 <= 0 goto label07;

        z3 = 1;

        goto label08;

     label07:
        z3 = 0;

     label08:
        r21 = new android.media.audiofx.DynamicsProcessing$Config$Builder;

        specialinvoke r21.<android.media.audiofx.DynamicsProcessing$Config$Builder: void <init>(int,int,boolean,int,boolean,int,boolean,int,boolean)>(i9, i0, z0, i1, z1, i2, z2, i3, z3);

        $r14 = r18[1];

        r33 = (java.lang.Number) $r14;

        $f0 = virtualinvoke r33.<java.lang.Number: float floatValue()>();

        $r15 = virtualinvoke r21.<android.media.audiofx.DynamicsProcessing$Config$Builder: android.media.audiofx.DynamicsProcessing$Config$Builder setPreferredFrameDuration(float)>($f0);

        r20 = virtualinvoke $r15.<android.media.audiofx.DynamicsProcessing$Config$Builder: android.media.audiofx.DynamicsProcessing$Config build()>();

        i10 = 0;

     label09:
        $i11 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i10 >= $i11 goto label10;

        $r16 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$Channel queryEngineByChannelIndex(int)>(i10);

        virtualinvoke r20.<android.media.audiofx.DynamicsProcessing$Config: void setChannelTo(int,android.media.audiofx.DynamicsProcessing$Channel)>(i10, $r16);

        i10 = i10 + 1;

        goto label09;

     label10:
        return r20;
    }

    public float getInputGainByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        float $f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        $f0 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: float getTwoFloat(int,int)>(32, i0);

        return $f0;
    }

    public android.media.audiofx.DynamicsProcessing$Limiter getLimiterByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Limiter $r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$Limiter queryEngineLimiterByChannelIndex(int)>(i0);

        return $r1;
    }

    public android.media.audiofx.DynamicsProcessing$MbcBand getMbcBandByChannelIndex(int, int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$MbcBand $r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$MbcBand queryEngineMbcBandByChannelIndex(int,int)>(i0, i1);

        return $r1;
    }

    public android.media.audiofx.DynamicsProcessing$Mbc getMbcByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Mbc $r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$Mbc queryEngineMbcByChannelIndex(int)>(i0);

        return $r1;
    }

    public android.media.audiofx.DynamicsProcessing$EqBand getPostEqBandByChannelIndex(int, int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$EqBand $r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$EqBand queryEngineEqBandByChannelIndex(int,int,int)>(101, i0, i1);

        return $r1;
    }

    public android.media.audiofx.DynamicsProcessing$Eq getPostEqByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Eq $r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$Eq queryEngineEqByChannelIndex(int,int)>(96, i0);

        return $r1;
    }

    public android.media.audiofx.DynamicsProcessing$EqBand getPreEqBandByChannelIndex(int, int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$EqBand $r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$EqBand queryEngineEqBandByChannelIndex(int,int,int)>(69, i0, i1);

        return $r1;
    }

    public android.media.audiofx.DynamicsProcessing$Eq getPreEqByChannelIndex(int)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Eq $r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$Eq queryEngineEqByChannelIndex(int,int)>(64, i0);

        return $r1;
    }

    public android.media.audiofx.DynamicsProcessing$Settings getProperties()
    {
        android.media.audiofx.DynamicsProcessing r0;
        android.media.audiofx.DynamicsProcessing$Settings $r3;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8;
        float[] $r9;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        $r3 = new android.media.audiofx.DynamicsProcessing$Settings;

        specialinvoke $r3.<android.media.audiofx.DynamicsProcessing$Settings: void <init>()>();

        $i0 = virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: int getChannelCount()>();

        $r3.<android.media.audiofx.DynamicsProcessing$Settings: int channelCount> = $i0;

        $i1 = $r3.<android.media.audiofx.DynamicsProcessing$Settings: int channelCount>;

        if $i1 > 32 goto label3;

        $i2 = $r3.<android.media.audiofx.DynamicsProcessing$Settings: int channelCount>;

        $r9 = newarray (float)[$i2];

        $r3.<android.media.audiofx.DynamicsProcessing$Settings: float[] inputGain> = $r9;

        i4 = 0;

     label1:
        $i3 = $r3.<android.media.audiofx.DynamicsProcessing$Settings: int channelCount>;

        if i4 >= $i3 goto label2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return $r3;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("too many channels Settings:");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public void setAllChannelsTo(android.media.audiofx.DynamicsProcessing$Channel)
    {
        android.media.audiofx.DynamicsProcessing r0;
        android.media.audiofx.DynamicsProcessing$Channel r1;
        int $i0, i1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Channel;

        i1 = 0;

     label1:
        $i0 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i1 >= $i0 goto label2;

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void setChannelTo(int,android.media.audiofx.DynamicsProcessing$Channel)>(i1, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setChannelTo(int, android.media.audiofx.DynamicsProcessing$Channel)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Channel r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Channel;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineChannelByChannelIndex(int,android.media.audiofx.DynamicsProcessing$Channel)>(i0, r1);

        return;
    }

    public void setInputGainAllChannelsTo(float)
    {
        android.media.audiofx.DynamicsProcessing r0;
        float f0;
        int $i0, i1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        f0 := @parameter0: float;

        i1 = 0;

     label1:
        $i0 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i1 >= $i0 goto label2;

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void setInputGainbyChannel(int,float)>(i1, f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setInputGainbyChannel(int, float)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        float f0;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void setTwoFloat(int,int,float)>(32, i0, f0);

        return;
    }

    public void setLimiterAllChannelsTo(android.media.audiofx.DynamicsProcessing$Limiter)
    {
        android.media.audiofx.DynamicsProcessing r0;
        android.media.audiofx.DynamicsProcessing$Limiter r1;
        int $i0, i1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Limiter;

        i1 = 0;

     label1:
        $i0 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i1 >= $i0 goto label2;

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void setLimiterByChannelIndex(int,android.media.audiofx.DynamicsProcessing$Limiter)>(i1, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setLimiterByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Limiter)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Limiter r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Limiter;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineLimiterByChannelIndex(int,android.media.audiofx.DynamicsProcessing$Limiter)>(i0, r1);

        return;
    }

    public void setMbcAllChannelsTo(android.media.audiofx.DynamicsProcessing$Mbc)
    {
        android.media.audiofx.DynamicsProcessing r0;
        android.media.audiofx.DynamicsProcessing$Mbc r1;
        int $i0, i1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Mbc;

        i1 = 0;

     label1:
        $i0 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i1 >= $i0 goto label2;

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void setMbcByChannelIndex(int,android.media.audiofx.DynamicsProcessing$Mbc)>(i1, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setMbcBandAllChannelsTo(int, android.media.audiofx.DynamicsProcessing$MbcBand)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, $i1, i2;
        android.media.audiofx.DynamicsProcessing$MbcBand r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$MbcBand;

        i2 = 0;

     label1:
        $i1 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i2 >= $i1 goto label2;

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void setMbcBandByChannelIndex(int,int,android.media.audiofx.DynamicsProcessing$MbcBand)>(i2, i0, r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setMbcBandByChannelIndex(int, int, android.media.audiofx.DynamicsProcessing$MbcBand)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$MbcBand r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.audiofx.DynamicsProcessing$MbcBand;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineMbcBandByChannelIndex(int,int,android.media.audiofx.DynamicsProcessing$MbcBand)>(i0, i1, r1);

        return;
    }

    public void setMbcByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Mbc)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Mbc r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Mbc;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineMbcByChannelIndex(int,android.media.audiofx.DynamicsProcessing$Mbc)>(i0, r1);

        return;
    }

    public void setParameterListener(android.media.audiofx.DynamicsProcessing$OnParameterChangeListener)
    {
        android.media.audiofx.DynamicsProcessing r0;
        java.lang.Object r1;
        android.media.audiofx.DynamicsProcessing$BaseParameterListener r2;
        android.media.audiofx.DynamicsProcessing$OnParameterChangeListener $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r5 := @parameter0: android.media.audiofx.DynamicsProcessing$OnParameterChangeListener;

        r1 = r0.<android.media.audiofx.DynamicsProcessing: java.lang.Object mParamListenerLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$OnParameterChangeListener mParamListener>;

        if $r3 != null goto label2;

        r2 = new android.media.audiofx.DynamicsProcessing$BaseParameterListener;

        specialinvoke r2.<android.media.audiofx.DynamicsProcessing$BaseParameterListener: void <init>(android.media.audiofx.DynamicsProcessing,android.media.audiofx.DynamicsProcessing$1)>(r0, null);

        r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$BaseParameterListener mBaseParamListener> = r2;

        specialinvoke r0.<android.media.audiofx.AudioEffect: void setParameterListener(android.media.audiofx.AudioEffect$OnParameterChangeListener)>(r2);

     label2:
        r0.<android.media.audiofx.DynamicsProcessing: android.media.audiofx.DynamicsProcessing$OnParameterChangeListener mParamListener> = r5;

        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setPostEqAllChannelsTo(android.media.audiofx.DynamicsProcessing$Eq)
    {
        android.media.audiofx.DynamicsProcessing r0;
        android.media.audiofx.DynamicsProcessing$Eq r1;
        int $i0, i1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Eq;

        i1 = 0;

     label1:
        $i0 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i1 >= $i0 goto label2;

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void setPostEqByChannelIndex(int,android.media.audiofx.DynamicsProcessing$Eq)>(i1, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setPostEqBandAllChannelsTo(int, android.media.audiofx.DynamicsProcessing$EqBand)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, $i1, i2;
        android.media.audiofx.DynamicsProcessing$EqBand r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$EqBand;

        i2 = 0;

     label1:
        $i1 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i2 >= $i1 goto label2;

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void setPostEqBandByChannelIndex(int,int,android.media.audiofx.DynamicsProcessing$EqBand)>(i2, i0, r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setPostEqBandByChannelIndex(int, int, android.media.audiofx.DynamicsProcessing$EqBand)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$EqBand r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.audiofx.DynamicsProcessing$EqBand;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineEqBandByChannelIndex(int,int,int,android.media.audiofx.DynamicsProcessing$EqBand)>(101, i0, i1, r1);

        return;
    }

    public void setPostEqByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Eq)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Eq r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Eq;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineEqByChannelIndex(int,int,android.media.audiofx.DynamicsProcessing$Eq)>(96, i0, r1);

        return;
    }

    public void setPreEqAllChannelsTo(android.media.audiofx.DynamicsProcessing$Eq)
    {
        android.media.audiofx.DynamicsProcessing r0;
        android.media.audiofx.DynamicsProcessing$Eq r1;
        int $i0, i1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Eq;

        i1 = 0;

     label1:
        $i0 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i1 >= $i0 goto label2;

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void setPreEqByChannelIndex(int,android.media.audiofx.DynamicsProcessing$Eq)>(i1, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setPreEqBandAllChannelsTo(int, android.media.audiofx.DynamicsProcessing$EqBand)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, $i1, i2;
        android.media.audiofx.DynamicsProcessing$EqBand r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$EqBand;

        i2 = 0;

     label1:
        $i1 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i2 >= $i1 goto label2;

        virtualinvoke r0.<android.media.audiofx.DynamicsProcessing: void setPreEqBandByChannelIndex(int,int,android.media.audiofx.DynamicsProcessing$EqBand)>(i2, i0, r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setPreEqBandByChannelIndex(int, int, android.media.audiofx.DynamicsProcessing$EqBand)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0, i1;
        android.media.audiofx.DynamicsProcessing$EqBand r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.audiofx.DynamicsProcessing$EqBand;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineEqBandByChannelIndex(int,int,int,android.media.audiofx.DynamicsProcessing$EqBand)>(69, i0, i1, r1);

        return;
    }

    public void setPreEqByChannelIndex(int, android.media.audiofx.DynamicsProcessing$Eq)
    {
        android.media.audiofx.DynamicsProcessing r0;
        int i0;
        android.media.audiofx.DynamicsProcessing$Eq r1;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.audiofx.DynamicsProcessing$Eq;

        specialinvoke r0.<android.media.audiofx.DynamicsProcessing: void updateEngineEqByChannelIndex(int,int,android.media.audiofx.DynamicsProcessing$Eq)>(64, i0, r1);

        return;
    }

    public void setProperties(android.media.audiofx.DynamicsProcessing$Settings)
    {
        android.media.audiofx.DynamicsProcessing r0;
        android.media.audiofx.DynamicsProcessing$Settings r1;
        float[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8;

        r0 := @this: android.media.audiofx.DynamicsProcessing;

        r1 := @parameter0: android.media.audiofx.DynamicsProcessing$Settings;

        $i1 = r1.<android.media.audiofx.DynamicsProcessing$Settings: int channelCount>;

        $r3 = r1.<android.media.audiofx.DynamicsProcessing$Settings: float[] inputGain>;

        $i0 = lengthof $r3;

        if $i1 != $i0 goto label3;

        $i4 = r1.<android.media.audiofx.DynamicsProcessing$Settings: int channelCount>;

        $i3 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if $i4 != $i3 goto label3;

        i6 = 0;

     label1:
        $i5 = r0.<android.media.audiofx.DynamicsProcessing: int mChannelCount>;

        if i6 >= $i5 goto label2;

        i6 = i6 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("settings invalid channel count: ");

        $i2 = r1.<android.media.audiofx.DynamicsProcessing$Settings: int channelCount>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }
}
