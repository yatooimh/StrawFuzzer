public class android.media.audiofx.Equalizer extends android.media.audiofx.AudioEffect
{
    public static final int PARAM_BAND_FREQ_RANGE;
    public static final int PARAM_BAND_LEVEL;
    public static final int PARAM_CENTER_FREQ;
    public static final int PARAM_CURRENT_PRESET;
    public static final int PARAM_GET_BAND;
    public static final int PARAM_GET_NUM_OF_PRESETS;
    public static final int PARAM_GET_PRESET_NAME;
    public static final int PARAM_LEVEL_RANGE;
    public static final int PARAM_NUM_BANDS;
    private static final int PARAM_PROPERTIES;
    public static final int PARAM_STRING_SIZE_MAX;
    private static final java.lang.String TAG;
    private android.media.audiofx.Equalizer$BaseParameterListener mBaseParamListener;
    private short mNumBands;
    private int mNumPresets;
    private android.media.audiofx.Equalizer$OnParameterChangeListener mParamListener;
    private final java.lang.Object mParamListenerLock;
    private java.lang.String[] mPresetNames;

    public void <init>(int, int) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException, java.lang.RuntimeException
    {
        android.media.audiofx.Equalizer r0;
        byte[] r1;
        int[] r2;
        java.lang.String[] r3, $r7;
        java.util.UUID $r4, $r5;
        short $s0, s9;
        java.lang.Object $r6;
        int $i2, $i3, i7, i8, i10, i11;
        byte $b4;
        java.lang.Throwable $r8;
        java.lang.String r9;

        r0 := @this: android.media.audiofx.Equalizer;

        i7 := @parameter0: int;

        i8 := @parameter1: int;

        $r5 = <android.media.audiofx.Equalizer: java.util.UUID EFFECT_TYPE_EQUALIZER>;

        $r4 = <android.media.audiofx.Equalizer: java.util.UUID EFFECT_TYPE_NULL>;

        specialinvoke r0.<android.media.audiofx.AudioEffect: void <init>(java.util.UUID,java.util.UUID,int,int)>($r5, $r4, i7, i8);

        $s0 = (short) 0;

        r0.<android.media.audiofx.Equalizer: short mNumBands> = $s0;

        r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$OnParameterChangeListener mParamListener> = null;

        r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$BaseParameterListener mBaseParamListener> = null;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<android.media.audiofx.Equalizer: java.lang.Object mParamListenerLock> = $r6;

        if i8 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Equalizer", "WARNING: attaching an Equalizer to global output mix is deprecated!");

     label1:
        virtualinvoke r0.<android.media.audiofx.Equalizer: short getNumberOfBands()>();

        s9 = virtualinvoke r0.<android.media.audiofx.Equalizer: short getNumberOfPresets()>();

        r0.<android.media.audiofx.Equalizer: int mNumPresets> = s9;

        if s9 == 0 goto label8;

        $r7 = newarray (java.lang.String)[s9];

        r0.<android.media.audiofx.Equalizer: java.lang.String[] mPresetNames> = $r7;

        r1 = newarray (byte)[32];

        r2 = newarray (int)[2];

        r2[0] = 8;

        i10 = 0;

     label2:
        $i2 = r0.<android.media.audiofx.Equalizer: int mNumPresets>;

        if i10 >= $i2 goto label8;

        r2[1] = i10;

        $i3 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],byte[])>(r2, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i3);

        i11 = 0;

     label3:
        $b4 = r1[i11];

        if $b4 == 0 goto label4;

        i11 = i11 + 1;

        goto label3;

     label4:
        r3 = r0.<android.media.audiofx.Equalizer: java.lang.String[] mPresetNames>;

        r9 = new java.lang.String;

        specialinvoke r9.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, 0, i11, "ISO-8859-1");

     label5:
        r3[i10] = r9;

        goto label7;

     label6:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Equalizer", "preset name decode error");

     label7:
        i10 = i10 + 1;

        goto label2;

     label8:
        return;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
    }

    static java.lang.Object access$000(android.media.audiofx.Equalizer)
    {
        android.media.audiofx.Equalizer r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.audiofx.Equalizer;

        $r1 = r0.<android.media.audiofx.Equalizer: java.lang.Object mParamListenerLock>;

        return $r1;
    }

    static android.media.audiofx.Equalizer$OnParameterChangeListener access$100(android.media.audiofx.Equalizer)
    {
        android.media.audiofx.Equalizer r0;
        android.media.audiofx.Equalizer$OnParameterChangeListener $r1;

        r0 := @parameter0: android.media.audiofx.Equalizer;

        $r1 = r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$OnParameterChangeListener mParamListener>;

        return $r1;
    }

    public short getBand(int) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        int i0, $i1;
        short[] r1;
        int[] $r2;
        short $s2;

        r0 := @this: android.media.audiofx.Equalizer;

        i0 := @parameter0: int;

        r1 = newarray (short)[1];

        $r2 = newarray (int)[2];

        $r2[0] = 5;

        $r2[1] = i0;

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],short[])>($r2, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        $s2 = r1[0];

        return $s2;
    }

    public int[] getBandFreqRange(short) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short s0;
        int[] r1, $r2;
        int $i1;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        r1 = newarray (int)[2];

        $r2 = newarray (int)[2];

        $r2[0] = 4;

        $r2[1] = s0;

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],int[])>($r2, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        return r1;
    }

    public short getBandLevel(short) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short s0, $s2;
        short[] r1;
        int[] $r2;
        int $i1;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        r1 = newarray (short)[1];

        $r2 = newarray (int)[2];

        $r2[0] = 2;

        $r2[1] = s0;

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],short[])>($r2, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        $s2 = r1[0];

        return $s2;
    }

    public short[] getBandLevelRange() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short[] r1;
        int $i0;

        r0 := @this: android.media.audiofx.Equalizer;

        r1 = newarray (short)[2];

        $i0 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int,short[])>(1, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i0);

        return r1;
    }

    public int getCenterFreq(short) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short s0;
        int[] r1, $r2;
        int $i1, $i2;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        r1 = newarray (int)[1];

        $r2 = newarray (int)[2];

        $r2[0] = 3;

        $r2[1] = s0;

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],int[])>($r2, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        $i2 = r1[0];

        return $i2;
    }

    public short getCurrentPreset() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short[] r1;
        int $i0;
        short $s1;

        r0 := @this: android.media.audiofx.Equalizer;

        r1 = newarray (short)[1];

        $i0 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int,short[])>(6, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i0);

        $s1 = r1[0];

        return $s1;
    }

    public short getNumberOfBands() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short[] r1;
        int[] $r2;
        int $i0;
        short s1, s2;

        r0 := @this: android.media.audiofx.Equalizer;

        s1 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        if s1 == 0 goto label1;

        return s1;

     label1:
        r1 = newarray (short)[1];

        $r2 = newarray (int)[1];

        $r2[0] = 0;

        $i0 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],short[])>($r2, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i0);

        s2 = r1[0];

        r0.<android.media.audiofx.Equalizer: short mNumBands> = s2;

        return s2;
    }

    public short getNumberOfPresets() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short[] r1;
        int $i0;
        short $s1;

        r0 := @this: android.media.audiofx.Equalizer;

        r1 = newarray (short)[1];

        $i0 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int,short[])>(7, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i0);

        $s1 = r1[0];

        return $s1;
    }

    public java.lang.String getPresetName(short)
    {
        android.media.audiofx.Equalizer r0;
        short s0;
        int $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        if s0 < 0 goto label1;

        $i1 = r0.<android.media.audiofx.Equalizer: int mNumPresets>;

        if s0 >= $i1 goto label1;

        $r1 = r0.<android.media.audiofx.Equalizer: java.lang.String[] mPresetNames>;

        $r2 = $r1[s0];

        return $r2;

     label1:
        return "";
    }

    public android.media.audiofx.Equalizer$Settings getProperties() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        byte[] r1;
        short $s0, $s4, $s5, $s6, $s7, $s10;
        int $i1, $i2, $i3, $i8, $i9, i11;
        android.media.audiofx.Equalizer$Settings $r3;
        short[] $r4, $r5;

        r0 := @this: android.media.audiofx.Equalizer;

        $s0 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        $i1 = $s0 * 2;

        $i2 = $i1 + 4;

        r1 = newarray (byte)[$i2];

        $i3 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int,byte[])>(9, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i3);

        $r3 = new android.media.audiofx.Equalizer$Settings;

        specialinvoke $r3.<android.media.audiofx.Equalizer$Settings: void <init>()>();

        $s4 = staticinvoke <android.media.audiofx.Equalizer: short byteArrayToShort(byte[],int)>(r1, 0);

        $r3.<android.media.audiofx.Equalizer$Settings: short curPreset> = $s4;

        $s5 = staticinvoke <android.media.audiofx.Equalizer: short byteArrayToShort(byte[],int)>(r1, 2);

        $r3.<android.media.audiofx.Equalizer$Settings: short numBands> = $s5;

        $s6 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        $r4 = newarray (short)[$s6];

        $r3.<android.media.audiofx.Equalizer$Settings: short[] bandLevels> = $r4;

        i11 = 0;

     label1:
        $s7 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        if i11 >= $s7 goto label2;

        $r5 = $r3.<android.media.audiofx.Equalizer$Settings: short[] bandLevels>;

        $i8 = i11 * 2;

        $i9 = $i8 + 4;

        $s10 = staticinvoke <android.media.audiofx.Equalizer: short byteArrayToShort(byte[],int)>(r1, $i9);

        $r5[i11] = $s10;

        i11 = i11 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public void setBandLevel(short, short) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short s0, s1;
        int[] $r1;
        short[] $r2;
        int $i2;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        $r1 = newarray (int)[2];

        $r1[0] = 2;

        $r1[1] = s0;

        $r2 = newarray (short)[1];

        $r2[0] = s1;

        $i2 = virtualinvoke r0.<android.media.audiofx.Equalizer: int setParameter(int[],short[])>($r1, $r2);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i2);

        return;
    }

    public void setParameterListener(android.media.audiofx.Equalizer$OnParameterChangeListener)
    {
        android.media.audiofx.Equalizer r0;
        java.lang.Object r1;
        android.media.audiofx.Equalizer$OnParameterChangeListener $r2, r4;
        java.lang.Throwable $r3;
        android.media.audiofx.Equalizer$BaseParameterListener r5;

        r0 := @this: android.media.audiofx.Equalizer;

        r4 := @parameter0: android.media.audiofx.Equalizer$OnParameterChangeListener;

        r1 = r0.<android.media.audiofx.Equalizer: java.lang.Object mParamListenerLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$OnParameterChangeListener mParamListener>;

        if $r2 != null goto label2;

        r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$OnParameterChangeListener mParamListener> = r4;

        r5 = new android.media.audiofx.Equalizer$BaseParameterListener;

        specialinvoke r5.<android.media.audiofx.Equalizer$BaseParameterListener: void <init>(android.media.audiofx.Equalizer,android.media.audiofx.Equalizer$1)>(r0, null);

        r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$BaseParameterListener mBaseParamListener> = r5;

        specialinvoke r0.<android.media.audiofx.AudioEffect: void setParameterListener(android.media.audiofx.AudioEffect$OnParameterChangeListener)>(r5);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setProperties(android.media.audiofx.Equalizer$Settings) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        android.media.audiofx.Equalizer$Settings r1;
        short[] $r2, $r12;
        int $i0, $i8, i10;
        short $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s9;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        byte[][] $r8, $r11;
        byte[] $r9, $r10, $r13, r14;

        r0 := @this: android.media.audiofx.Equalizer;

        r1 := @parameter0: android.media.audiofx.Equalizer$Settings;

        $s1 = r1.<android.media.audiofx.Equalizer$Settings: short numBands>;

        $r2 = r1.<android.media.audiofx.Equalizer$Settings: short[] bandLevels>;

        $i0 = lengthof $r2;

        if $s1 != $i0 goto label3;

        $s4 = r1.<android.media.audiofx.Equalizer$Settings: short numBands>;

        $s3 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        if $s4 != $s3 goto label3;

        $r8 = newarray (byte[])[2];

        $s5 = r1.<android.media.audiofx.Equalizer$Settings: short curPreset>;

        $r9 = staticinvoke <android.media.audiofx.Equalizer: byte[] shortToByteArray(short)>($s5);

        $r8[0] = $r9;

        $s6 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        $r10 = staticinvoke <android.media.audiofx.Equalizer: byte[] shortToByteArray(short)>($s6);

        $r8[1] = $r10;

        r14 = staticinvoke <android.media.audiofx.Equalizer: byte[] concatArrays(byte[][])>($r8);

        i10 = 0;

     label1:
        $s7 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        if i10 >= $s7 goto label2;

        $r11 = newarray (byte[])[2];

        $r11[0] = r14;

        $r12 = r1.<android.media.audiofx.Equalizer$Settings: short[] bandLevels>;

        $s9 = $r12[i10];

        $r13 = staticinvoke <android.media.audiofx.Equalizer: byte[] shortToByteArray(short)>($s9);

        $r11[1] = $r13;

        r14 = staticinvoke <android.media.audiofx.Equalizer: byte[] concatArrays(byte[][])>($r11);

        i10 = i10 + 1;

        goto label1;

     label2:
        $i8 = virtualinvoke r0.<android.media.audiofx.Equalizer: int setParameter(int,byte[])>(9, r14);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i8);

        return;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("settings invalid band count: ");

        $s2 = r1.<android.media.audiofx.Equalizer$Settings: short numBands>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s2);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void usePreset(short) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short s0;
        int $i1;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int setParameter(int,short)>(6, s0);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        return;
    }

    public static void <clinit>()
    {
        <android.media.audiofx.Equalizer: java.lang.String TAG> = "Equalizer";

        <android.media.audiofx.Equalizer: int PARAM_STRING_SIZE_MAX> = 32;

        <android.media.audiofx.Equalizer: int PARAM_PROPERTIES> = 9;

        <android.media.audiofx.Equalizer: int PARAM_NUM_BANDS> = 0;

        <android.media.audiofx.Equalizer: int PARAM_LEVEL_RANGE> = 1;

        <android.media.audiofx.Equalizer: int PARAM_GET_PRESET_NAME> = 8;

        <android.media.audiofx.Equalizer: int PARAM_GET_NUM_OF_PRESETS> = 7;

        <android.media.audiofx.Equalizer: int PARAM_GET_BAND> = 5;

        <android.media.audiofx.Equalizer: int PARAM_CURRENT_PRESET> = 6;

        <android.media.audiofx.Equalizer: int PARAM_CENTER_FREQ> = 3;

        <android.media.audiofx.Equalizer: int PARAM_BAND_LEVEL> = 2;

        <android.media.audiofx.Equalizer: int PARAM_BAND_FREQ_RANGE> = 4;

        return;
    }
}
