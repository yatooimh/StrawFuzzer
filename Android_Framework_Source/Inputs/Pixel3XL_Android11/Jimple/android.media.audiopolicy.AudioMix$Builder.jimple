public class android.media.audiopolicy.AudioMix$Builder extends java.lang.Object
{
    private int mCallbackFlags;
    private java.lang.String mDeviceAddress;
    private int mDeviceSystemType;
    private android.media.AudioFormat mFormat;
    private int mRouteFlags;
    private android.media.audiopolicy.AudioMixingRule mRule;

    void <init>()
    {
        android.media.audiopolicy.AudioMix$Builder r0;

        r0 := @this: android.media.audiopolicy.AudioMix$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMixingRule mRule> = null;

        r0.<android.media.audiopolicy.AudioMix$Builder: android.media.AudioFormat mFormat> = null;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mRouteFlags> = 0;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mCallbackFlags> = 0;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mDeviceSystemType> = 0;

        r0.<android.media.audiopolicy.AudioMix$Builder: java.lang.String mDeviceAddress> = null;

        return;
    }

    public void <init>(android.media.audiopolicy.AudioMixingRule) throws java.lang.IllegalArgumentException
    {
        android.media.audiopolicy.AudioMix$Builder r0;
        android.media.audiopolicy.AudioMixingRule r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.media.audiopolicy.AudioMix$Builder;

        r1 := @parameter0: android.media.audiopolicy.AudioMixingRule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMixingRule mRule> = null;

        r0.<android.media.audiopolicy.AudioMix$Builder: android.media.AudioFormat mFormat> = null;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mRouteFlags> = 0;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mCallbackFlags> = 0;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mDeviceSystemType> = 0;

        r0.<android.media.audiopolicy.AudioMix$Builder: java.lang.String mDeviceAddress> = null;

        if r1 == null goto label1;

        r0.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMixingRule mRule> = r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null AudioMixingRule argument");

        throw $r2;
    }

    public android.media.audiopolicy.AudioMix build() throws java.lang.IllegalArgumentException
    {
        android.media.audiopolicy.AudioMix$Builder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, $i14;
        java.lang.String r1, $r7;
        android.media.audiopolicy.AudioMixingRule $r2, $r9, $r12, $r13, $r16, $r21;
        java.lang.IllegalArgumentException $r3, $r5, $r11, $r14, $r15, $r17;
        android.media.AudioFormat $r4, $r8, $r10, $r20;
        android.media.audiopolicy.AudioMix $r6;
        android.media.AudioFormat$Builder $r18, $r19;
        boolean $z0;

        r0 := @this: android.media.audiopolicy.AudioMix$Builder;

        $r2 = r0.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMixingRule mRule>;

        if $r2 == null goto label13;

        $i1 = r0.<android.media.audiopolicy.AudioMix$Builder: int mRouteFlags>;

        if $i1 != 0 goto label01;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mRouteFlags> = 2;

     label01:
        $r4 = r0.<android.media.audiopolicy.AudioMix$Builder: android.media.AudioFormat mFormat>;

        if $r4 != null goto label03;

        i0 = staticinvoke <android.media.AudioSystem: int getPrimaryOutputSamplingRate()>();

        i11 = i0;

        if i0 > 0 goto label02;

        i11 = 44100;

     label02:
        $r18 = new android.media.AudioFormat$Builder;

        specialinvoke $r18.<android.media.AudioFormat$Builder: void <init>()>();

        $r19 = virtualinvoke $r18.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setSampleRate(int)>(i11);

        $r20 = virtualinvoke $r19.<android.media.AudioFormat$Builder: android.media.AudioFormat build()>();

        r0.<android.media.audiopolicy.AudioMix$Builder: android.media.AudioFormat mFormat> = $r20;

     label03:
        i12 = r0.<android.media.audiopolicy.AudioMix$Builder: int mDeviceSystemType>;

        if i12 == 0 goto label06;

        if i12 == 32768 goto label06;

        if i12 == -2147483392 goto label06;

        $i8 = r0.<android.media.audiopolicy.AudioMix$Builder: int mRouteFlags>;

        $i9 = $i8 & 1;

        if $i9 == 0 goto label05;

        $r16 = r0.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMixingRule mRule>;

        $i10 = virtualinvoke $r16.<android.media.audiopolicy.AudioMixingRule: int getTargetMixType()>();

        if $i10 != 0 goto label04;

        goto label09;

     label04:
        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported device on non-playback mix");

        throw $r17;

     label05:
        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t have audio device without flag ROUTE_FLAG_RENDER");

        throw $r15;

     label06:
        i13 = r0.<android.media.audiopolicy.AudioMix$Builder: int mRouteFlags>;

        $i14 = i13 & 3;

        if $i14 == 1 goto label12;

        $i2 = i13 & 2;

        if $i2 != 2 goto label09;

        $r12 = r0.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMixingRule mRule>;

        $i6 = virtualinvoke $r12.<android.media.audiopolicy.AudioMixingRule: int getTargetMixType()>();

        if $i6 != 0 goto label07;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mDeviceSystemType> = 32768;

        goto label09;

     label07:
        $r13 = r0.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMixingRule mRule>;

        $i7 = virtualinvoke $r13.<android.media.audiopolicy.AudioMixingRule: int getTargetMixType()>();

        if $i7 != 1 goto label08;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mDeviceSystemType> = -2147483392;

        goto label09;

     label08:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown mixing rule type");

        throw $r14;

     label09:
        $r21 = r0.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMixingRule mRule>;

        $z0 = virtualinvoke $r21.<android.media.audiopolicy.AudioMixingRule: boolean allowPrivilegedPlaybackCapture()>();

        if $z0 == 0 goto label11;

        $r10 = r0.<android.media.audiopolicy.AudioMix$Builder: android.media.AudioFormat mFormat>;

        r1 = staticinvoke <android.media.audiopolicy.AudioMix: java.lang.String canBeUsedForPrivilegedCapture(android.media.AudioFormat)>($r10);

        if r1 != null goto label10;

        goto label11;

     label10:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r11;

     label11:
        $r6 = new android.media.audiopolicy.AudioMix;

        $r9 = r0.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMixingRule mRule>;

        $r8 = r0.<android.media.audiopolicy.AudioMix$Builder: android.media.AudioFormat mFormat>;

        $i5 = r0.<android.media.audiopolicy.AudioMix$Builder: int mRouteFlags>;

        $i4 = r0.<android.media.audiopolicy.AudioMix$Builder: int mCallbackFlags>;

        $i3 = r0.<android.media.audiopolicy.AudioMix$Builder: int mDeviceSystemType>;

        $r7 = r0.<android.media.audiopolicy.AudioMix$Builder: java.lang.String mDeviceAddress>;

        specialinvoke $r6.<android.media.audiopolicy.AudioMix: void <init>(android.media.audiopolicy.AudioMixingRule,android.media.AudioFormat,int,int,int,java.lang.String,android.media.audiopolicy.AudioMix$1)>($r9, $r8, $i5, $i4, $i3, $r7, null);

        return $r6;

     label12:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t have flag ROUTE_FLAG_RENDER without an audio device");

        throw $r5;

     label13:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null AudioMixingRule");

        throw $r3;
    }

    android.media.audiopolicy.AudioMix$Builder setCallbackFlags(int) throws java.lang.IllegalArgumentException
    {
        android.media.audiopolicy.AudioMix$Builder r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r5, $r8;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.media.audiopolicy.AudioMix$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal callback flags 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label2:
        r0.<android.media.audiopolicy.AudioMix$Builder: int mCallbackFlags> = i0;

        return r0;
    }

    android.media.audiopolicy.AudioMix$Builder setDevice(int, java.lang.String)
    {
        android.media.audiopolicy.AudioMix$Builder r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.media.audiopolicy.AudioMix$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mDeviceSystemType> = i0;

        r0.<android.media.audiopolicy.AudioMix$Builder: java.lang.String mDeviceAddress> = r1;

        return r0;
    }

    public android.media.audiopolicy.AudioMix$Builder setDevice(android.media.AudioDeviceInfo) throws java.lang.IllegalArgumentException
    {
        android.media.audiopolicy.AudioMix$Builder r0;
        android.media.AudioDeviceInfo r1;
        java.lang.IllegalArgumentException $r2, $r3;
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: android.media.audiopolicy.AudioMix$Builder;

        r1 := @parameter0: android.media.AudioDeviceInfo;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.media.AudioDeviceInfo: boolean isSink()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<android.media.AudioDeviceInfo: int getType()>();

        $i1 = staticinvoke <android.media.AudioDeviceInfo: int convertDeviceTypeToInternalDevice(int)>($i0);

        r0.<android.media.audiopolicy.AudioMix$Builder: int mDeviceSystemType> = $i1;

        $r4 = virtualinvoke r1.<android.media.AudioDeviceInfo: java.lang.String getAddress()>();

        r0.<android.media.audiopolicy.AudioMix$Builder: java.lang.String mDeviceAddress> = $r4;

        return r0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported device type on mix, not a sink");

        throw $r3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null AudioDeviceInfo argument");

        throw $r2;
    }

    public android.media.audiopolicy.AudioMix$Builder setFormat(android.media.AudioFormat) throws java.lang.IllegalArgumentException
    {
        android.media.audiopolicy.AudioMix$Builder r0;
        android.media.AudioFormat r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.media.audiopolicy.AudioMix$Builder;

        r1 := @parameter0: android.media.AudioFormat;

        if r1 == null goto label1;

        r0.<android.media.audiopolicy.AudioMix$Builder: android.media.AudioFormat mFormat> = r1;

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null AudioFormat argument");

        throw $r2;
    }

    android.media.audiopolicy.AudioMix$Builder setMixingRule(android.media.audiopolicy.AudioMixingRule) throws java.lang.IllegalArgumentException
    {
        android.media.audiopolicy.AudioMix$Builder r0;
        android.media.audiopolicy.AudioMixingRule r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.media.audiopolicy.AudioMix$Builder;

        r1 := @parameter0: android.media.audiopolicy.AudioMixingRule;

        if r1 == null goto label1;

        r0.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMixingRule mRule> = r1;

        return r0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null AudioMixingRule argument");

        throw $r2;
    }

    public android.media.audiopolicy.AudioMix$Builder setRouteFlags(int) throws java.lang.IllegalArgumentException
    {
        android.media.audiopolicy.AudioMix$Builder r0;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1, $r7, $r14;
        java.lang.StringBuilder $r2, $r9;
        java.lang.String $r4, $r8, $r11, $r15;

        r0 := @this: android.media.audiopolicy.AudioMix$Builder;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        $i1 = i0 & 3;

        if $i1 == 0 goto label2;

        $i2 = i0 & -4;

        if $i2 != 0 goto label1;

        r0.<android.media.audiopolicy.AudioMix$Builder: int mRouteFlags> = i0;

        return r0;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown route flags 0x");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("when configuring an AudioMix");

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid route flags 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("when configuring an AudioMix");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal empty route flags");

        throw $r1;
    }
}
