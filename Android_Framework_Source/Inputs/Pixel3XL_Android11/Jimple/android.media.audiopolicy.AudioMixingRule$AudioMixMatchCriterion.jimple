public final class android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion extends java.lang.Object
{
    final android.media.AudioAttributes mAttr;
    final int mIntProp;
    final int mRule;

    void <init>(android.media.AudioAttributes, int)
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        android.media.AudioAttributes r1;
        int i0;

        r0 := @this: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        r1 := @parameter0: android.media.AudioAttributes;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes mAttr> = r1;

        r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mIntProp> = -2147483648;

        r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mRule> = i0;

        return;
    }

    void <init>(java.lang.Integer, int)
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        java.lang.Integer r1;
        int i0, $i1;

        r0 := @this: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        r1 := @parameter0: java.lang.Integer;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes mAttr> = null;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mIntProp> = $i1;

        r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mRule> = i0;

        return;
    }

    public android.media.AudioAttributes getAudioAttributes()
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        android.media.AudioAttributes $r1;

        r0 := @this: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        $r1 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes mAttr>;

        return $r1;
    }

    public int getIntProp()
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        int $i0;

        r0 := @this: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        $i0 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mIntProp>;

        return $i0;
    }

    public int getRule()
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        int $i0;

        r0 := @this: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        $i0 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mRule>;

        return $i0;
    }

    public int hashCode()
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        java.lang.Object[] $r1;
        android.media.AudioAttributes $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3, $r4;

        r0 := @this: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes mAttr>;

        $r1[0] = $r2;

        $i0 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mIntProp>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r3;

        $i1 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mRule>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[2] = $r4;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    void writeToParcel(android.os.Parcel)
    {
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.media.AudioAttributes $r3, $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r9;

        r0 := @this: android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion;

        r1 := @parameter0: android.os.Parcel;

        $i1 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mRule>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mRule>;

        i0 = $i2 & -32769;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 4 goto label1;

        if i0 == 8 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown match rule");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when writing to Parcel");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioMixMatchCriterion", $r9);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(-1);

        goto label4;

     label1:
        $i5 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mIntProp>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        goto label4;

     label2:
        $r4 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes mAttr>;

        $i4 = virtualinvoke $r4.<android.media.AudioAttributes: int getCapturePreset()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        goto label4;

     label3:
        $r3 = r0.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes mAttr>;

        $i3 = virtualinvoke $r3.<android.media.AudioAttributes: int getUsage()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

     label4:
        return;
    }
}
