public class android.media.audiopolicy.AudioPolicyConfig extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    protected int mDuckingPolicy;
    private int mMixCounter;
    protected final java.util.ArrayList mMixes;
    private java.lang.String mRegistrationId;

    static void <clinit>()
    {
        android.media.audiopolicy.AudioPolicyConfig$1 $r0;

        <android.media.audiopolicy.AudioPolicyConfig: java.lang.String TAG> = "AudioPolicyConfig";

        $r0 = new android.media.audiopolicy.AudioPolicyConfig$1;

        specialinvoke $r0.<android.media.audiopolicy.AudioPolicyConfig$1: void <init>()>();

        <android.media.audiopolicy.AudioPolicyConfig: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    protected void <init>(android.media.audiopolicy.AudioPolicyConfig)
    {
        android.media.audiopolicy.AudioPolicyConfig r0, r1;
        java.util.ArrayList $r2;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        r1 := @parameter0: android.media.audiopolicy.AudioPolicyConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiopolicy.AudioPolicyConfig: int mDuckingPolicy> = 0;

        r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId> = null;

        r0.<android.media.audiopolicy.AudioPolicyConfig: int mMixCounter> = 0;

        $r2 = r1.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes> = $r2;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        android.os.Parcel r1;
        int i0, i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        java.util.ArrayList $r4, $r21;
        android.media.audiopolicy.AudioMix$Builder $r5;
        java.lang.String $r8;
        android.media.AudioFormat$Builder $r10, $r11, $r12, $r13;
        android.media.AudioFormat $r14;
        android.media.audiopolicy.AudioMixingRule$Builder $r16;
        boolean $z0, $z1;
        android.media.audiopolicy.AudioMixingRule $r19;
        android.media.audiopolicy.AudioMix $r22;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiopolicy.AudioPolicyConfig: int mDuckingPolicy> = 0;

        r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId> = null;

        r0.<android.media.audiopolicy.AudioPolicyConfig: int mMixCounter> = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes> = $r4;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label4;

        $r5 = new android.media.audiopolicy.AudioMix$Builder;

        specialinvoke $r5.<android.media.audiopolicy.AudioMix$Builder: void <init>()>();

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke $r5.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMix$Builder setRouteFlags(int)>($i2);

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke $r5.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMix$Builder setCallbackFlags(int)>($i3);

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke $r5.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMix$Builder setDevice(int,java.lang.String)>($i4, $r8);

        i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r10 = new android.media.AudioFormat$Builder;

        specialinvoke $r10.<android.media.AudioFormat$Builder: void <init>()>();

        $r11 = virtualinvoke $r10.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setSampleRate(int)>(i6);

        $r12 = virtualinvoke $r11.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setChannelMask(int)>(i7);

        $r13 = virtualinvoke $r12.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setEncoding(int)>(i1);

        $r14 = virtualinvoke $r13.<android.media.AudioFormat$Builder: android.media.AudioFormat build()>();

        virtualinvoke $r5.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMix$Builder setFormat(android.media.AudioFormat)>($r14);

        $r16 = new android.media.audiopolicy.AudioMixingRule$Builder;

        specialinvoke $r16.<android.media.audiopolicy.AudioMixingRule$Builder: void <init>()>();

        $z0 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        virtualinvoke $r16.<android.media.audiopolicy.AudioMixingRule$Builder: android.media.audiopolicy.AudioMixingRule$Builder allowPrivilegedPlaybackCapture(boolean)>($z0);

        $z1 = virtualinvoke r1.<android.os.Parcel: boolean readBoolean()>();

        virtualinvoke $r16.<android.media.audiopolicy.AudioMixingRule$Builder: android.media.audiopolicy.AudioMixingRule$Builder voiceCommunicationCaptureAllowed(boolean)>($z1);

        i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i9 = 0;

     label2:
        if i9 >= i8 goto label3;

        virtualinvoke $r16.<android.media.audiopolicy.AudioMixingRule$Builder: android.media.audiopolicy.AudioMixingRule$Builder addRuleFromParcel(android.os.Parcel)>(r1);

        i9 = i9 + 1;

        goto label2;

     label3:
        $r19 = virtualinvoke $r16.<android.media.audiopolicy.AudioMixingRule$Builder: android.media.audiopolicy.AudioMixingRule build()>();

        virtualinvoke $r5.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMix$Builder setMixingRule(android.media.audiopolicy.AudioMixingRule)>($r19);

        $r21 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        $r22 = virtualinvoke $r5.<android.media.audiopolicy.AudioMix$Builder: android.media.audiopolicy.AudioMix build()>();

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        i5 = i5 + 1;

        goto label1;

     label4:
        return;
    }

    void <init>(android.os.Parcel, android.media.audiopolicy.AudioPolicyConfig$1)
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        android.os.Parcel r1;
        android.media.audiopolicy.AudioPolicyConfig$1 r2;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.media.audiopolicy.AudioPolicyConfig$1;

        specialinvoke r0.<android.media.audiopolicy.AudioPolicyConfig: void <init>(android.os.Parcel)>(r1);

        return;
    }

    void <init>(java.util.ArrayList)
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        java.util.ArrayList r1;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        r1 := @parameter0: java.util.ArrayList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiopolicy.AudioPolicyConfig: int mDuckingPolicy> = 0;

        r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId> = null;

        r0.<android.media.audiopolicy.AudioPolicyConfig: int mMixCounter> = 0;

        r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes> = r1;

        return;
    }

    private static java.lang.String mixTypeId(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return "p";

     label1:
        if i0 != 1 goto label2;

        return "r";

     label2:
        return "i";
    }

    private void setMixRegistration(android.media.audiopolicy.AudioMix)
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        android.media.audiopolicy.AudioMix r1;
        java.lang.String $r3, $r4, $r6, $r9, $r13;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r5;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        r1 := @parameter0: android.media.audiopolicy.AudioMix;

        $r3 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke r1.<android.media.audiopolicy.AudioMix: int getRouteFlags()>();

        $i1 = $i0 & 2;

        if $i1 != 2 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mix");

        $i4 = virtualinvoke r1.<android.media.audiopolicy.AudioMix: int getMixType()>();

        $r9 = staticinvoke <android.media.audiopolicy.AudioPolicyConfig: java.lang.String mixTypeId(int)>($i4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i5 = r0.<android.media.audiopolicy.AudioPolicyConfig: int mMixCounter>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.media.audiopolicy.AudioMix: void setRegistration(java.lang.String)>($r13);

        goto label3;

     label1:
        $i2 = virtualinvoke r1.<android.media.audiopolicy.AudioMix: int getRouteFlags()>();

        $i3 = $i2 & 1;

        if $i3 != 1 goto label3;

        $r4 = r1.<android.media.audiopolicy.AudioMix: java.lang.String mDeviceAddress>;

        virtualinvoke r1.<android.media.audiopolicy.AudioMix: void setRegistration(java.lang.String)>($r4);

        goto label3;

     label2:
        virtualinvoke r1.<android.media.audiopolicy.AudioMix: void setRegistration(java.lang.String)>("");

     label3:
        $i6 = r0.<android.media.audiopolicy.AudioPolicyConfig: int mMixCounter>;

        $i7 = $i6 + 1;

        r0.<android.media.audiopolicy.AudioPolicyConfig: int mMixCounter> = $i7;

        return;
    }

    protected void add(java.util.ArrayList)
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2;
        java.util.ArrayList $r3, r4;
        android.media.audiopolicy.AudioMix r5;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        r4 := @parameter0: java.util.ArrayList;

        r1 = virtualinvoke r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.media.audiopolicy.AudioMix) $r2;

        specialinvoke r0.<android.media.audiopolicy.AudioPolicyConfig: void setMixRegistration(android.media.audiopolicy.AudioMix)>(r5);

        $r3 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label1;

     label2:
        return;
    }

    public void addMix(android.media.audiopolicy.AudioMix) throws java.lang.IllegalArgumentException
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        android.media.audiopolicy.AudioMix r1;
        java.lang.IllegalArgumentException $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        r1 := @parameter0: android.media.audiopolicy.AudioMix;

        if r1 == null goto label1;

        $r3 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal null AudioMix argument");

        throw $r2;
    }

    public int describeContents()
    {
        android.media.audiopolicy.AudioPolicyConfig r0;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        return 0;
    }

    public java.util.ArrayList getMixes()
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        java.util.ArrayList $r1;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        $r1 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        return $r1;
    }

    protected java.lang.String getRegistration()
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        java.lang.String $r1;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        $r1 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId>;

        return $r1;
    }

    public int hashCode()
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        java.lang.Object[] $r1;
        java.util.ArrayList $r2;
        int $i0;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        $r1[0] = $r2;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    protected void remove(java.util.ArrayList)
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2;
        java.util.ArrayList $r3, r4;
        android.media.audiopolicy.AudioMix r5;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        r4 := @parameter0: java.util.ArrayList;

        r1 = virtualinvoke r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.media.audiopolicy.AudioMix) $r2;

        $r3 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r5);

        goto label1;

     label2:
        return;
    }

    protected void setRegistration(java.lang.String)
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.media.audiopolicy.AudioMix $r3;
        java.lang.String $r4, $r7, $r11, r12, r13;
        boolean $z0, $z1, $z2, z3, z4, $z5;
        java.lang.StringBuilder $r5;
        java.util.Iterator r15;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        r12 := @parameter0: java.lang.String;

        r13 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId>;

        z3 = 0;

        if r13 == null goto label2;

        $z2 = virtualinvoke r13.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z4 = 0;

        goto label3;

     label2:
        z4 = 1;

     label3:
        if r12 == null goto label4;

        $z1 = virtualinvoke r12.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label5;

     label4:
        z3 = 1;

     label5:
        if z4 != 0 goto label6;

        if z3 != 0 goto label6;

        $r4 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z0 != 0 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid registration transition from ");

        $r7 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioPolicyConfig", $r11);

        return;

     label6:
        if r12 != null goto label7;

        r12 = "";

        goto label7;

     label7:
        r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId> = r12;

        $r1 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        r15 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label8:
        $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label9;

        $r2 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.media.audiopolicy.AudioMix) $r2;

        specialinvoke r0.<android.media.audiopolicy.AudioPolicyConfig: void setMixRegistration(android.media.audiopolicy.AudioMix)>($r3);

        goto label8;

     label9:
        return;
    }

    public java.lang.String toLogFriendlyString()
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r1, $r7, $r15, $r36, $r37, $r61, $r109, r116, r120, r122, r124, r126, r128, r130, r135, r137, r140, r143, r146, r149, r152, r155, r158;
        java.lang.StringBuilder $r2, $r12, $r18, $r24, $r30, $r33, $r40, $r46, $r55, $r58, $r65, $r68, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r103, $r106, $r111, $r160;
        java.util.ArrayList $r4, $r10, $r53;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r11, $r54;
        android.media.AudioFormat $r21, $r27, $r35;
        android.media.audiopolicy.AudioMixingRule $r43, $r49, $r52;
        android.media.AudioAttributes $r60, $r70, $r101, $r108;
        java.util.Iterator r117, r132;
        android.media.audiopolicy.AudioMix r118;
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion r133;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>("android.media.audiopolicy.AudioPolicyConfig:\n");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AudioMix: ");

        $r7 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String mRegistrationId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r116 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        r117 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r117.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r11 = interfaceinvoke r117.<java.util.Iterator: java.lang.Object next()>();

        r118 = (android.media.audiopolicy.AudioMix) $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("* route flags=0x");

        $i2 = virtualinvoke r118.<android.media.audiopolicy.AudioMix: int getRouteFlags()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r120 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r120);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  rate=");

        $r21 = virtualinvoke r118.<android.media.audiopolicy.AudioMix: android.media.AudioFormat getFormat()>();

        $i3 = virtualinvoke $r21.<android.media.AudioFormat: int getSampleRate()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hz\n");

        r122 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r122);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  encoding=");

        $r27 = virtualinvoke r118.<android.media.audiopolicy.AudioMix: android.media.AudioFormat getFormat()>();

        $i4 = virtualinvoke $r27.<android.media.AudioFormat: int getEncoding()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r124 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r124);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  channels=0x");

        r126 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r126);

        $r35 = virtualinvoke r118.<android.media.audiopolicy.AudioMix: android.media.AudioFormat getFormat()>();

        $i5 = virtualinvoke $r35.<android.media.AudioFormat: int getChannelMask()>();

        $r36 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        $r37 = virtualinvoke $r36.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r128 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r128);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ignore playback capture opt out=");

        $r43 = virtualinvoke r118.<android.media.audiopolicy.AudioMix: android.media.audiopolicy.AudioMixingRule getRule()>();

        $z1 = virtualinvoke $r43.<android.media.audiopolicy.AudioMixingRule: boolean allowPrivilegedPlaybackCapture()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r130 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r130);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  allow voice communication capture=");

        $r49 = virtualinvoke r118.<android.media.audiopolicy.AudioMix: android.media.audiopolicy.AudioMixingRule getRule()>();

        $z2 = virtualinvoke $r49.<android.media.audiopolicy.AudioMixingRule: boolean voiceCommunicationCaptureAllowed()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r116 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        $r52 = virtualinvoke r118.<android.media.audiopolicy.AudioMix: android.media.audiopolicy.AudioMixingRule getRule()>();

        $r53 = virtualinvoke $r52.<android.media.audiopolicy.AudioMixingRule: java.util.ArrayList getCriteria()>();

        r132 = virtualinvoke $r53.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r132.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r54 = interfaceinvoke r132.<java.util.Iterator: java.lang.Object next()>();

        r133 = (android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion) $r54;

        i0 = r133.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mRule>;

        if i0 == 1 goto label11;

        if i0 == 2 goto label10;

        if i0 == 4 goto label09;

        if i0 == 8 goto label08;

        if i0 == 32772 goto label07;

        if i0 == 32776 goto label06;

        tableswitch(i0)
        {
            case 32769: goto label05;
            case 32770: goto label04;
            default: goto label03;
        };

     label03:
        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid rule!");

        r135 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label04:
        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  exclude capture preset ");

        r137 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r137);

        $r101 = r133.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes mAttr>;

        $i11 = virtualinvoke $r101.<android.media.AudioAttributes: int getCapturePreset()>();

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        r135 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label05:
        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  exclude usage ");

        r140 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r140);

        $r108 = r133.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes mAttr>;

        $r109 = virtualinvoke $r108.<android.media.AudioAttributes: java.lang.String usageToString()>();

        virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        r135 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label06:
        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  exclude userId ");

        r143 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r143);

        $i10 = r133.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mIntProp>;

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        r135 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label07:
        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  exclude UID ");

        r146 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r146);

        $i9 = r133.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mIntProp>;

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        r135 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label08:
        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  match userId ");

        r149 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r149);

        $i8 = r133.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mIntProp>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        r135 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label09:
        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  match UID ");

        r152 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r152);

        $i7 = r133.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: int mIntProp>;

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        r135 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label10:
        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  match capture preset ");

        r155 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r155);

        $r70 = r133.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes mAttr>;

        $i6 = virtualinvoke $r70.<android.media.AudioAttributes: int getCapturePreset()>();

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        r135 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label11:
        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  match usage ");

        r158 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r158);

        $r60 = r133.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: android.media.AudioAttributes mAttr>;

        $r61 = virtualinvoke $r60.<android.media.AudioAttributes: java.lang.String usageToString()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        r135 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r160 = new java.lang.StringBuilder;

        specialinvoke $r160.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r135);

        virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r116 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label13:
        goto label01;

     label14:
        return r116;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.media.audiopolicy.AudioPolicyConfig r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.Iterator r2, r17;
        java.util.ArrayList $r3, $r4, r16;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r5, $r13;
        java.lang.String $r6;
        android.media.AudioFormat $r7, $r8, $r9;
        android.media.audiopolicy.AudioMixingRule $r10, $r11, $r12;
        android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion $r14;
        android.media.audiopolicy.AudioMix r15;

        r0 := @this: android.media.audiopolicy.AudioPolicyConfig;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r3 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r4 = r0.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r15 = (android.media.audiopolicy.AudioMix) $r5;

        $i2 = virtualinvoke r15.<android.media.audiopolicy.AudioMix: int getRouteFlags()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r15.<android.media.audiopolicy.AudioMix: int mCallbackFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r15.<android.media.audiopolicy.AudioMix: int mDeviceSystemType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r6 = r15.<android.media.audiopolicy.AudioMix: java.lang.String mDeviceAddress>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $r7 = virtualinvoke r15.<android.media.audiopolicy.AudioMix: android.media.AudioFormat getFormat()>();

        $i5 = virtualinvoke $r7.<android.media.AudioFormat: int getSampleRate()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $r8 = virtualinvoke r15.<android.media.audiopolicy.AudioMix: android.media.AudioFormat getFormat()>();

        $i6 = virtualinvoke $r8.<android.media.AudioFormat: int getEncoding()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $r9 = virtualinvoke r15.<android.media.audiopolicy.AudioMix: android.media.AudioFormat getFormat()>();

        $i7 = virtualinvoke $r9.<android.media.AudioFormat: int getChannelMask()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $r10 = virtualinvoke r15.<android.media.audiopolicy.AudioMix: android.media.audiopolicy.AudioMixingRule getRule()>();

        $z1 = virtualinvoke $r10.<android.media.audiopolicy.AudioMixingRule: boolean allowPrivilegedPlaybackCapture()>();

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z1);

        $r11 = virtualinvoke r15.<android.media.audiopolicy.AudioMix: android.media.audiopolicy.AudioMixingRule getRule()>();

        $z2 = virtualinvoke $r11.<android.media.audiopolicy.AudioMixingRule: boolean voiceCommunicationCaptureAllowed()>();

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $r12 = virtualinvoke r15.<android.media.audiopolicy.AudioMix: android.media.audiopolicy.AudioMixingRule getRule()>();

        r16 = virtualinvoke $r12.<android.media.audiopolicy.AudioMixingRule: java.util.ArrayList getCriteria()>();

        $i8 = virtualinvoke r16.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        r17 = virtualinvoke r16.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r13 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion) $r13;

        virtualinvoke $r14.<android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion: void writeToParcel(android.os.Parcel)>(r1);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }
}
