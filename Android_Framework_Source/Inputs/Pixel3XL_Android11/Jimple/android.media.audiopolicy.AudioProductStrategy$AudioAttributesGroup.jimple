final class android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final android.media.AudioAttributes[] mAudioAttributes;
    private int mLegacyStreamType;
    private int mVolumeGroupId;

    static void <clinit>()
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup$1 $r0;

        $r0 = new android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup$1;

        specialinvoke $r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup$1: void <init>()>();

        <android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    void <init>(int, int, android.media.AudioAttributes[])
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup r0;
        int i0, i1;
        android.media.AudioAttributes[] r1;

        r0 := @this: android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.AudioAttributes[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mVolumeGroupId> = i0;

        r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mLegacyStreamType> = i1;

        r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.media.AudioAttributes[] mAudioAttributes> = r1;

        return;
    }

    public int describeContents()
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup r0;

        r0 := @this: android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup r0, r6;
        java.lang.Class $r1, $r2;
        int $i0, $i1, $i2, $i3;
        android.media.AudioAttributes[] $r3, $r4;
        boolean $z0, z1;
        java.lang.Object r5;

        r0 := @this: android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup;

        r5 := @parameter0: java.lang.Object;

        z1 = 1;

        if r0 != r5 goto label1;

        return 1;

     label1:
        if r5 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r6 = (android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup) r5;

        $i1 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mVolumeGroupId>;

        $i0 = r6.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mVolumeGroupId>;

        if $i1 != $i0 goto label3;

        $i3 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mLegacyStreamType>;

        $i2 = r6.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mLegacyStreamType>;

        if $i3 != $i2 goto label3;

        $r4 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.media.AudioAttributes[] mAudioAttributes>;

        $r3 = r6.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.media.AudioAttributes[] mAudioAttributes>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 0;
    }

    public android.media.AudioAttributes getAudioAttributes()
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup r0;
        int $i0;
        android.media.AudioAttributes$Builder $r1;
        android.media.AudioAttributes[] r2;
        android.media.AudioAttributes r3;

        r0 := @this: android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup;

        r2 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.media.AudioAttributes[] mAudioAttributes>;

        $i0 = lengthof r2;

        if $i0 != 0 goto label1;

        $r1 = new android.media.AudioAttributes$Builder;

        specialinvoke $r1.<android.media.AudioAttributes$Builder: void <init>()>();

        r3 = virtualinvoke $r1.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        goto label2;

     label1:
        r3 = r2[0];

     label2:
        return r3;
    }

    public int getStreamType()
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup r0;
        int $i0;

        r0 := @this: android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup;

        $i0 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mLegacyStreamType>;

        return $i0;
    }

    public int getVolumeGroupId()
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup r0;
        int $i0;

        r0 := @this: android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup;

        $i0 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mVolumeGroupId>;

        return $i0;
    }

    public boolean supportsAttributes(android.media.AudioAttributes)
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup r0;
        android.media.AudioAttributes r1, r3;
        android.media.AudioAttributes[] r2;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @this: android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup;

        r1 := @parameter0: android.media.AudioAttributes;

        r2 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.media.AudioAttributes[] mAudioAttributes>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $z0 = virtualinvoke r3.<android.media.AudioAttributes: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        $z1 = staticinvoke <android.media.audiopolicy.AudioProductStrategy: boolean access$100(android.media.AudioAttributes,android.media.AudioAttributes)>(r3, r1);

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    public boolean supportsStreamType(int)
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mLegacyStreamType>;

        if $i1 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String toString()
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup r0;
        android.media.AudioAttributes[] r2;
        int i0, $i1, $i2, i3;
        android.media.AudioAttributes r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r9, $r11, $r13;

        r0 := @this: android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    Legacy Stream Type: ");

        $i1 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mLegacyStreamType>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Volume Group Id: ");

        $i2 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mVolumeGroupId>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r2 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.media.AudioAttributes[] mAudioAttributes>;

        i0 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r3 = r2[i3];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    -");

        $r13 = virtualinvoke r3.<android.media.AudioAttributes: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup r0;
        android.os.Parcel r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        android.media.AudioAttributes[] r2, $r3;
        android.media.AudioAttributes $r4;

        r0 := @this: android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i2 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mVolumeGroupId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: int mLegacyStreamType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r3 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.media.AudioAttributes[] mAudioAttributes>;

        $i4 = lengthof $r3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        r2 = r0.<android.media.audiopolicy.AudioProductStrategy$AudioAttributesGroup: android.media.AudioAttributes[] mAudioAttributes>;

        i1 = lengthof r2;

        i6 = 0;

     label1:
        if i6 >= i1 goto label2;

        $r4 = r2[i6];

        $i5 = i0 | 1;

        virtualinvoke $r4.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r1, $i5);

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }
}
