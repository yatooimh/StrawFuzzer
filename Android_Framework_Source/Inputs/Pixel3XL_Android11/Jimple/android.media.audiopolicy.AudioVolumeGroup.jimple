public final class android.media.audiopolicy.AudioVolumeGroup extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int DEFAULT_VOLUME_GROUP;
    private static final java.lang.String TAG;
    private static java.util.List sAudioVolumeGroups;
    private static final java.lang.Object sLock;
    private final android.media.AudioAttributes[] mAudioAttributes;
    private int mId;
    private int[] mLegacyStreamTypes;
    private final java.lang.String mName;

    static void <clinit>()
    {
        java.lang.Object $r0;
        android.media.audiopolicy.AudioVolumeGroup$1 $r1;

        <android.media.audiopolicy.AudioVolumeGroup: java.lang.String TAG> = "AudioVolumeGroup";

        <android.media.audiopolicy.AudioVolumeGroup: int DEFAULT_VOLUME_GROUP> = -1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.media.audiopolicy.AudioVolumeGroup: java.lang.Object sLock> = $r0;

        $r1 = new android.media.audiopolicy.AudioVolumeGroup$1;

        specialinvoke $r1.<android.media.audiopolicy.AudioVolumeGroup$1: void <init>()>();

        <android.media.audiopolicy.AudioVolumeGroup: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    void <init>(java.lang.String, int, android.media.AudioAttributes[], int[])
    {
        android.media.audiopolicy.AudioVolumeGroup r0;
        java.lang.String r1;
        int i0;
        android.media.AudioAttributes[] r2;
        int[] r3;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroup;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.media.AudioAttributes[];

        r3 := @parameter3: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "name must not be null");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "audioAttributes must not be null");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "legacyStreamTypes must not be null");

        r0.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String mName> = r1;

        r0.<android.media.audiopolicy.AudioVolumeGroup: int mId> = i0;

        r0.<android.media.audiopolicy.AudioVolumeGroup: android.media.AudioAttributes[] mAudioAttributes> = r2;

        r0.<android.media.audiopolicy.AudioVolumeGroup: int[] mLegacyStreamTypes> = r3;

        return;
    }

    public static java.util.List getAudioVolumeGroups()
    {
        java.lang.Object r0;
        java.util.List $r2, $r3, $r4, $r5;
        java.lang.Throwable $r6;

        $r2 = <android.media.audiopolicy.AudioVolumeGroup: java.util.List sAudioVolumeGroups>;

        if $r2 != null goto label7;

        r0 = <android.media.audiopolicy.AudioVolumeGroup: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        $r4 = <android.media.audiopolicy.AudioVolumeGroup: java.util.List sAudioVolumeGroups>;

        if $r4 != null goto label2;

        $r5 = staticinvoke <android.media.audiopolicy.AudioVolumeGroup: java.util.List initializeAudioVolumeGroups()>();

        <android.media.audiopolicy.AudioVolumeGroup: java.util.List sAudioVolumeGroups> = $r5;

     label2:
        exitmonitor r0;

     label3:
        goto label7;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r6;

     label7:
        $r3 = <android.media.audiopolicy.AudioVolumeGroup: java.util.List sAudioVolumeGroups>;

        return $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private static java.util.List initializeAudioVolumeGroups()
    {
        java.util.ArrayList $r1;
        int $i0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = staticinvoke <android.media.audiopolicy.AudioVolumeGroup: int native_list_audio_volume_groups(java.util.ArrayList)>($r1);

        if $i0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioVolumeGroup", ": listAudioVolumeGroups failed");

     label1:
        return $r1;
    }

    private static native int native_list_audio_volume_groups(java.util.ArrayList);

    public int describeContents()
    {
        android.media.audiopolicy.AudioVolumeGroup r0;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroup;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.media.audiopolicy.AudioVolumeGroup r0, r8;
        java.lang.Class $r1, $r2;
        java.lang.String $r3, $r4;
        int $i0, $i1;
        android.media.AudioAttributes[] $r5, $r6;
        boolean $z0, z1;
        java.lang.Object r7;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroup;

        r7 := @parameter0: java.lang.Object;

        z1 = 1;

        if r0 != r7 goto label1;

        return 1;

     label1:
        if r7 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r8 = (android.media.audiopolicy.AudioVolumeGroup) r7;

        $r4 = r0.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String mName>;

        $r3 = r8.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String mName>;

        if $r4 != $r3 goto label3;

        $i1 = r0.<android.media.audiopolicy.AudioVolumeGroup: int mId>;

        $i0 = r8.<android.media.audiopolicy.AudioVolumeGroup: int mId>;

        if $i1 != $i0 goto label3;

        $r6 = r0.<android.media.audiopolicy.AudioVolumeGroup: android.media.AudioAttributes[] mAudioAttributes>;

        $r5 = r8.<android.media.audiopolicy.AudioVolumeGroup: android.media.AudioAttributes[] mAudioAttributes>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 0;
    }

    public java.util.List getAudioAttributes()
    {
        android.media.audiopolicy.AudioVolumeGroup r0;
        android.media.AudioAttributes[] $r1;
        java.util.List $r2;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroup;

        $r1 = r0.<android.media.audiopolicy.AudioVolumeGroup: android.media.AudioAttributes[] mAudioAttributes>;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        return $r2;
    }

    public int getId()
    {
        android.media.audiopolicy.AudioVolumeGroup r0;
        int $i0;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroup;

        $i0 = r0.<android.media.audiopolicy.AudioVolumeGroup: int mId>;

        return $i0;
    }

    public int[] getLegacyStreamTypes()
    {
        android.media.audiopolicy.AudioVolumeGroup r0;
        int[] $r1;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroup;

        $r1 = r0.<android.media.audiopolicy.AudioVolumeGroup: int[] mLegacyStreamTypes>;

        return $r1;
    }

    public java.lang.String name()
    {
        android.media.audiopolicy.AudioVolumeGroup r0;
        java.lang.String $r1;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroup;

        $r1 = r0.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String mName>;

        return $r1;
    }

    public java.lang.String toString()
    {
        android.media.audiopolicy.AudioVolumeGroup r0;
        android.media.AudioAttributes[] r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r8, $r13, $r14, $r18;
        int $i1, $i2, i3, i4, i5, i6;
        android.media.AudioAttributes r20;
        int[] r21;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroup;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Name: ");

        $r5 = r0.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String mName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Id: ");

        $i1 = r0.<android.media.audiopolicy.AudioVolumeGroup: int mId>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n     Supported Audio Attributes:");

        r2 = r0.<android.media.audiopolicy.AudioVolumeGroup: android.media.AudioAttributes[] mAudioAttributes>;

        i3 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        r20 = r2[i4];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n       -");

        $r18 = virtualinvoke r20.<android.media.AudioAttributes: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n     Supported Legacy Stream Types: { ");

        r21 = r0.<android.media.audiopolicy.AudioVolumeGroup: int[] mLegacyStreamTypes>;

        i5 = lengthof r21;

        i6 = 0;

     label3:
        if i6 >= i5 goto label4;

        $i2 = r21[i6];

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i6 = i6 + 1;

        goto label3;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.media.audiopolicy.AudioVolumeGroup r0;
        android.os.Parcel r1;
        int i0, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        java.lang.String $r2;
        android.media.AudioAttributes[] $r3, r6;
        int[] $r4, r7;
        android.media.AudioAttributes $r5;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroup;

        r1 := @parameter0: android.os.Parcel;

        i7 := @parameter1: int;

        $r2 = r0.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String mName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i2 = r0.<android.media.audiopolicy.AudioVolumeGroup: int mId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r3 = r0.<android.media.audiopolicy.AudioVolumeGroup: android.media.AudioAttributes[] mAudioAttributes>;

        $i3 = lengthof $r3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        r6 = r0.<android.media.audiopolicy.AudioVolumeGroup: android.media.AudioAttributes[] mAudioAttributes>;

        i0 = lengthof r6;

        i8 = 0;

     label1:
        if i8 >= i0 goto label2;

        $r5 = r6[i8];

        $i6 = i7 | 1;

        virtualinvoke $r5.<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>(r1, $i6);

        i8 = i8 + 1;

        goto label1;

     label2:
        $r4 = r0.<android.media.audiopolicy.AudioVolumeGroup: int[] mLegacyStreamTypes>;

        $i4 = lengthof $r4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        r7 = r0.<android.media.audiopolicy.AudioVolumeGroup: int[] mLegacyStreamTypes>;

        i9 = lengthof r7;

        i10 = 0;

     label3:
        if i10 >= i9 goto label4;

        $i5 = r7[i10];

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        i10 = i10 + 1;

        goto label3;

     label4:
        return;
    }
}
