public class android.media.audiopolicy.AudioVolumeGroupChangeHandler extends java.lang.Object
{
    private static final int AUDIOVOLUMEGROUP_EVENT_NEW_LISTENER;
    private static final int AUDIOVOLUMEGROUP_EVENT_VOLUME_CHANGED;
    private static final java.lang.String TAG;
    private android.os.Handler mHandler;
    private android.os.HandlerThread mHandlerThread;
    private long mJniCallback;
    private final java.util.ArrayList mListeners;

    public void <init>()
    {
        android.media.audiopolicy.AudioVolumeGroupChangeHandler r0;
        java.util.ArrayList $r1;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroupChangeHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: java.util.ArrayList mListeners> = $r1;

        return;
    }

    static java.util.ArrayList access$000(android.media.audiopolicy.AudioVolumeGroupChangeHandler)
    {
        android.media.audiopolicy.AudioVolumeGroupChangeHandler r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.media.audiopolicy.AudioVolumeGroupChangeHandler;

        $r1 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: java.util.ArrayList mListeners>;

        return $r1;
    }

    private native void native_finalize();

    private native void native_setup(java.lang.Object);

    private static void postEventFromNative(java.lang.Object, int, int, int, java.lang.Object)
    {
        int i0, i1, i2;
        java.lang.Object r0, $r2, r4;
        java.lang.ref.WeakReference $r1;
        android.os.Message $r3;
        android.media.audiopolicy.AudioVolumeGroupChangeHandler r5;
        android.os.Handler r6;

        r4 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0 := @parameter4: java.lang.Object;

        $r1 = (java.lang.ref.WeakReference) r4;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.media.audiopolicy.AudioVolumeGroupChangeHandler) $r2;

        if r5 != null goto label1;

        return;

     label1:
        if r5 == null goto label2;

        r6 = virtualinvoke r5.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.Handler handler()>();

        if r6 == null goto label2;

        $r3 = virtualinvoke r6.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r0);

        virtualinvoke r6.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

     label2:
        return;
    }

    protected void finalize()
    {
        android.media.audiopolicy.AudioVolumeGroupChangeHandler r0;
        android.os.HandlerThread $r1, $r2;
        boolean $z0;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroupChangeHandler;

        specialinvoke r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: void native_finalize()>();

        $r1 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.HandlerThread mHandlerThread>;

        $z0 = virtualinvoke $r1.<android.os.HandlerThread: boolean isAlive()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r2.<android.os.HandlerThread: boolean quit()>();

     label1:
        return;
    }

    android.os.Handler handler()
    {
        android.media.audiopolicy.AudioVolumeGroupChangeHandler r0;
        android.os.Handler $r1;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroupChangeHandler;

        $r1 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.Handler mHandler>;

        return $r1;
    }

    public void init()
    {
        android.media.audiopolicy.AudioVolumeGroupChangeHandler r0;
        android.os.Handler $r1;
        android.os.HandlerThread $r2, $r4, r7;
        android.os.Looper $r3, $r5;
        java.lang.Throwable $r6;
        android.media.audiopolicy.AudioVolumeGroupChangeHandler$1 r8;
        java.lang.ref.WeakReference r9;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroupChangeHandler;

        entermonitor r0;

     label1:
        $r1 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.Handler mHandler>;

        if $r1 == null goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        r7 = new android.os.HandlerThread;

        specialinvoke r7.<android.os.HandlerThread: void <init>(java.lang.String)>("AudioVolumeGroupChangeHandler");

        r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.HandlerThread mHandlerThread> = r7;

        virtualinvoke r7.<android.os.HandlerThread: void start()>();

        $r2 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.HandlerThread mHandlerThread>;

        $r3 = virtualinvoke $r2.<android.os.HandlerThread: android.os.Looper getLooper()>();

        if $r3 != null goto label5;

        r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.Handler mHandler> = null;

        exitmonitor r0;

     label4:
        return;

     label5:
        r8 = new android.media.audiopolicy.AudioVolumeGroupChangeHandler$1;

        $r4 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.HandlerThread mHandlerThread>;

        $r5 = virtualinvoke $r4.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke r8.<android.media.audiopolicy.AudioVolumeGroupChangeHandler$1: void <init>(android.media.audiopolicy.AudioVolumeGroupChangeHandler,android.os.Looper)>(r0, $r5);

        r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.Handler mHandler> = r8;

        r9 = new java.lang.ref.WeakReference;

        specialinvoke r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: void native_setup(java.lang.Object)>(r9);

        exitmonitor r0;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void registerListener(android.media.AudioManager$VolumeGroupCallback)
    {
        android.media.audiopolicy.AudioVolumeGroupChangeHandler r0;
        android.os.Handler r1, $r4;
        java.util.ArrayList $r3;
        java.lang.Throwable $r5;
        android.media.AudioManager$VolumeGroupCallback r6;
        android.os.Message r7;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroupChangeHandler;

        r6 := @parameter0: android.media.AudioManager$VolumeGroupCallback;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r6, "volume group callback shall not be null");

        entermonitor r0;

     label1:
        $r3 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: java.util.ArrayList mListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        exitmonitor r0;

     label2:
        r1 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.Handler mHandler>;

        if r1 == null goto label3;

        r7 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(4, 0, 0, r6);

        $r4 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r7);

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void unregisterListener(android.media.AudioManager$VolumeGroupCallback)
    {
        android.media.audiopolicy.AudioVolumeGroupChangeHandler r0;
        java.util.ArrayList $r2;
        java.lang.Throwable $r3;
        android.media.AudioManager$VolumeGroupCallback r4;

        r0 := @this: android.media.audiopolicy.AudioVolumeGroupChangeHandler;

        r4 := @parameter0: android.media.AudioManager$VolumeGroupCallback;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r4, "volume group callback shall not be null");

        entermonitor r0;

     label1:
        $r2 = r0.<android.media.audiopolicy.AudioVolumeGroupChangeHandler: java.util.ArrayList mListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <android.media.audiopolicy.AudioVolumeGroupChangeHandler: java.lang.String TAG> = "AudioVolumeGroupChangeHandler";

        <android.media.audiopolicy.AudioVolumeGroupChangeHandler: int AUDIOVOLUMEGROUP_EVENT_VOLUME_CHANGED> = 1000;

        <android.media.audiopolicy.AudioVolumeGroupChangeHandler: int AUDIOVOLUMEGROUP_EVENT_NEW_LISTENER> = 4;

        return;
    }
}
