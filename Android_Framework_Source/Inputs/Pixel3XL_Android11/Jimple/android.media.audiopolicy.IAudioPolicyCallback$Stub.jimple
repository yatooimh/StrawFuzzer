public abstract class android.media.audiopolicy.IAudioPolicyCallback$Stub extends android.os.Binder implements android.media.audiopolicy.IAudioPolicyCallback
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_notifyAudioFocusAbandon;
    static final int TRANSACTION_notifyAudioFocusGrant;
    static final int TRANSACTION_notifyAudioFocusLoss;
    static final int TRANSACTION_notifyAudioFocusRequest;
    static final int TRANSACTION_notifyMixStateUpdate;
    static final int TRANSACTION_notifyUnregistration;
    static final int TRANSACTION_notifyVolumeAdjust;

    public void <init>()
    {
        android.media.audiopolicy.IAudioPolicyCallback$Stub r0;

        r0 := @this: android.media.audiopolicy.IAudioPolicyCallback$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.media.audiopolicy.IAudioPolicyCallback$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.media.audiopolicy.IAudioPolicyCallback");

        return;
    }

    public static android.media.audiopolicy.IAudioPolicyCallback asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy $r2;
        boolean $z0;
        android.media.audiopolicy.IAudioPolicyCallback $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.media.audiopolicy.IAudioPolicyCallback");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.media.audiopolicy.IAudioPolicyCallback;

        if $z0 == 0 goto label2;

        $r3 = (android.media.audiopolicy.IAudioPolicyCallback) r1;

        return $r3;

     label2:
        $r2 = new android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy;

        specialinvoke $r2.<android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.media.audiopolicy.IAudioPolicyCallback getDefaultImpl()
    {
        android.media.audiopolicy.IAudioPolicyCallback $r0;

        $r0 = <android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy: android.media.audiopolicy.IAudioPolicyCallback sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "notifyUnregistration";

     label3:
        return "notifyVolumeAdjust";

     label4:
        return "notifyMixStateUpdate";

     label5:
        return "notifyAudioFocusAbandon";

     label6:
        return "notifyAudioFocusRequest";

     label7:
        return "notifyAudioFocusLoss";

     label8:
        return "notifyAudioFocusGrant";
    }

    public static boolean setDefaultImpl(android.media.audiopolicy.IAudioPolicyCallback)
    {
        android.media.audiopolicy.IAudioPolicyCallback r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.media.audiopolicy.IAudioPolicyCallback;

        $r1 = <android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy: android.media.audiopolicy.IAudioPolicyCallback sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy: android.media.audiopolicy.IAudioPolicyCallback sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.media.audiopolicy.IAudioPolicyCallback$Stub r0;

        r0 := @this: android.media.audiopolicy.IAudioPolicyCallback$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.media.audiopolicy.IAudioPolicyCallback$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.media.audiopolicy.IAudioPolicyCallback$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.media.audiopolicy.IAudioPolicyCallback$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.media.audiopolicy.IAudioPolicyCallback$Stub r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r1;
        android.os.Parcelable$Creator $r2, $r4, $r6, $r8;
        java.lang.Object $r3, $r5, $r7, $r9;
        boolean $z0, z1;
        android.os.Parcel r10, r11;
        android.media.AudioFocusInfo r12, r13, r14, r15;

        r0 := @this: android.media.audiopolicy.IAudioPolicyCallback$Stub;

        i0 := @parameter0: int;

        r10 := @parameter1: android.os.Parcel;

        r11 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        if i0 == 1598968902 goto label19;

        tableswitch(i0)
        {
            case 1: goto label16;
            case 2: goto label11;
            case 3: goto label08;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r10, r11, i1);

        return $z0;

     label02:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.audiopolicy.IAudioPolicyCallback");

        virtualinvoke r0.<android.media.audiopolicy.IAudioPolicyCallback$Stub: void notifyUnregistration()>();

        return 1;

     label03:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.audiopolicy.IAudioPolicyCallback");

        $i2 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.audiopolicy.IAudioPolicyCallback$Stub: void notifyVolumeAdjust(int)>($i2);

        return 1;

     label04:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.audiopolicy.IAudioPolicyCallback");

        $r1 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        $i3 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.audiopolicy.IAudioPolicyCallback$Stub: void notifyMixStateUpdate(java.lang.String,int)>($r1, $i3);

        return 1;

     label05:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.audiopolicy.IAudioPolicyCallback");

        $i4 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label06;

        $r2 = <android.media.AudioFocusInfo: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r10);

        r12 = (android.media.AudioFocusInfo) $r3;

        goto label07;

     label06:
        r12 = null;

     label07:
        virtualinvoke r0.<android.media.audiopolicy.IAudioPolicyCallback$Stub: void notifyAudioFocusAbandon(android.media.AudioFocusInfo)>(r12);

        return 1;

     label08:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.audiopolicy.IAudioPolicyCallback");

        $i5 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label09;

        $r4 = <android.media.AudioFocusInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r10);

        r13 = (android.media.AudioFocusInfo) $r5;

        goto label10;

     label09:
        r13 = null;

     label10:
        $i6 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.audiopolicy.IAudioPolicyCallback$Stub: void notifyAudioFocusRequest(android.media.AudioFocusInfo,int)>(r13, $i6);

        return 1;

     label11:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.audiopolicy.IAudioPolicyCallback");

        $i7 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        if $i7 == 0 goto label12;

        $r6 = <android.media.AudioFocusInfo: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r10);

        r14 = (android.media.AudioFocusInfo) $r7;

        goto label13;

     label12:
        r14 = null;

     label13:
        $i8 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        if $i8 == 0 goto label14;

        z1 = 1;

        goto label15;

     label14:
        z1 = 0;

     label15:
        virtualinvoke r0.<android.media.audiopolicy.IAudioPolicyCallback$Stub: void notifyAudioFocusLoss(android.media.AudioFocusInfo,boolean)>(r14, z1);

        return 1;

     label16:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.audiopolicy.IAudioPolicyCallback");

        $i9 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        if $i9 == 0 goto label17;

        $r8 = <android.media.AudioFocusInfo: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r10);

        r15 = (android.media.AudioFocusInfo) $r9;

        goto label18;

     label17:
        r15 = null;

     label18:
        $i10 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.audiopolicy.IAudioPolicyCallback$Stub: void notifyAudioFocusGrant(android.media.AudioFocusInfo,int)>(r15, $i10);

        return 1;

     label19:
        virtualinvoke r11.<android.os.Parcel: void writeString(java.lang.String)>("android.media.audiopolicy.IAudioPolicyCallback");

        return 1;
    }

    public static void <clinit>()
    {
        <android.media.audiopolicy.IAudioPolicyCallback$Stub: int TRANSACTION_notifyVolumeAdjust> = 6;

        <android.media.audiopolicy.IAudioPolicyCallback$Stub: int TRANSACTION_notifyUnregistration> = 7;

        <android.media.audiopolicy.IAudioPolicyCallback$Stub: int TRANSACTION_notifyMixStateUpdate> = 5;

        <android.media.audiopolicy.IAudioPolicyCallback$Stub: int TRANSACTION_notifyAudioFocusRequest> = 3;

        <android.media.audiopolicy.IAudioPolicyCallback$Stub: int TRANSACTION_notifyAudioFocusLoss> = 2;

        <android.media.audiopolicy.IAudioPolicyCallback$Stub: int TRANSACTION_notifyAudioFocusGrant> = 1;

        <android.media.audiopolicy.IAudioPolicyCallback$Stub: int TRANSACTION_notifyAudioFocusAbandon> = 4;

        <android.media.audiopolicy.IAudioPolicyCallback$Stub: java.lang.String DESCRIPTOR> = "android.media.audiopolicy.IAudioPolicyCallback";

        return;
    }
}
