public class android.media.browse.MediaBrowser$MediaItem extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int FLAG_BROWSABLE;
    public static final int FLAG_PLAYABLE;
    private final android.media.MediaDescription mDescription;
    private final int mFlags;

    static void <clinit>()
    {
        android.media.browse.MediaBrowser$MediaItem$1 $r0;

        <android.media.browse.MediaBrowser$MediaItem: int FLAG_PLAYABLE> = 2;

        <android.media.browse.MediaBrowser$MediaItem: int FLAG_BROWSABLE> = 1;

        $r0 = new android.media.browse.MediaBrowser$MediaItem$1;

        specialinvoke $r0.<android.media.browse.MediaBrowser$MediaItem$1: void <init>()>();

        <android.media.browse.MediaBrowser$MediaItem: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.media.MediaDescription, int)
    {
        android.media.browse.MediaBrowser$MediaItem r0;
        android.media.MediaDescription r1;
        int i0;
        java.lang.IllegalArgumentException $r2, $r4;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        r1 := @parameter0: android.media.MediaDescription;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label2;

        $r3 = virtualinvoke r1.<android.media.MediaDescription: java.lang.String getMediaId()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label1;

        r0.<android.media.browse.MediaBrowser$MediaItem: int mFlags> = i0;

        r0.<android.media.browse.MediaBrowser$MediaItem: android.media.MediaDescription mDescription> = r1;

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("description must have a non-empty media id");

        throw $r4;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("description cannot be null");

        throw $r2;
    }

    private void <init>(android.os.Parcel)
    {
        android.media.browse.MediaBrowser$MediaItem r0;
        android.os.Parcel r1;
        int $i0;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        android.media.MediaDescription $r4;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.media.browse.MediaBrowser$MediaItem: int mFlags> = $i0;

        $r2 = <android.media.MediaDescription: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r4 = (android.media.MediaDescription) $r3;

        r0.<android.media.browse.MediaBrowser$MediaItem: android.media.MediaDescription mDescription> = $r4;

        return;
    }

    void <init>(android.os.Parcel, android.media.browse.MediaBrowser$1)
    {
        android.media.browse.MediaBrowser$MediaItem r0;
        android.os.Parcel r1;
        android.media.browse.MediaBrowser$1 r2;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.media.browse.MediaBrowser$1;

        specialinvoke r0.<android.media.browse.MediaBrowser$MediaItem: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public int describeContents()
    {
        android.media.browse.MediaBrowser$MediaItem r0;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        return 0;
    }

    public android.media.MediaDescription getDescription()
    {
        android.media.browse.MediaBrowser$MediaItem r0;
        android.media.MediaDescription $r1;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        $r1 = r0.<android.media.browse.MediaBrowser$MediaItem: android.media.MediaDescription mDescription>;

        return $r1;
    }

    public int getFlags()
    {
        android.media.browse.MediaBrowser$MediaItem r0;
        int $i0;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        $i0 = r0.<android.media.browse.MediaBrowser$MediaItem: int mFlags>;

        return $i0;
    }

    public java.lang.String getMediaId()
    {
        android.media.browse.MediaBrowser$MediaItem r0;
        android.media.MediaDescription $r1;
        java.lang.String $r2;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        $r1 = r0.<android.media.browse.MediaBrowser$MediaItem: android.media.MediaDescription mDescription>;

        $r2 = virtualinvoke $r1.<android.media.MediaDescription: java.lang.String getMediaId()>();

        return $r2;
    }

    public boolean isBrowsable()
    {
        android.media.browse.MediaBrowser$MediaItem r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        i0 = r0.<android.media.browse.MediaBrowser$MediaItem: int mFlags>;

        z0 = 1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPlayable()
    {
        android.media.browse.MediaBrowser$MediaItem r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        $i0 = r0.<android.media.browse.MediaBrowser$MediaItem: int mFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String toString()
    {
        android.media.browse.MediaBrowser$MediaItem r0;
        java.lang.StringBuilder $r2;
        int $i0;
        android.media.MediaDescription $r6;
        java.lang.String $r9;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("MediaItem{");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mFlags=");

        $i0 = r0.<android.media.browse.MediaBrowser$MediaItem: int mFlags>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDescription=");

        $r6 = r0.<android.media.browse.MediaBrowser$MediaItem: android.media.MediaDescription mDescription>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.media.browse.MediaBrowser$MediaItem r0;
        android.os.Parcel r1;
        int i0, $i1;
        android.media.MediaDescription $r2;

        r0 := @this: android.media.browse.MediaBrowser$MediaItem;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.media.browse.MediaBrowser$MediaItem: int mFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<android.media.browse.MediaBrowser$MediaItem: android.media.MediaDescription mDescription>;

        virtualinvoke $r2.<android.media.MediaDescription: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }
}
