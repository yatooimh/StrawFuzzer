public class android.media.effect.EffectFactory extends java.lang.Object
{
    public static final java.lang.String EFFECT_AUTOFIX;
    public static final java.lang.String EFFECT_BACKDROPPER;
    public static final java.lang.String EFFECT_BITMAPOVERLAY;
    public static final java.lang.String EFFECT_BLACKWHITE;
    public static final java.lang.String EFFECT_BRIGHTNESS;
    public static final java.lang.String EFFECT_CONTRAST;
    public static final java.lang.String EFFECT_CROP;
    public static final java.lang.String EFFECT_CROSSPROCESS;
    public static final java.lang.String EFFECT_DOCUMENTARY;
    public static final java.lang.String EFFECT_DUOTONE;
    public static final java.lang.String EFFECT_FILLLIGHT;
    public static final java.lang.String EFFECT_FISHEYE;
    public static final java.lang.String EFFECT_FLIP;
    public static final java.lang.String EFFECT_GRAIN;
    public static final java.lang.String EFFECT_GRAYSCALE;
    public static final java.lang.String EFFECT_IDENTITY;
    public static final java.lang.String EFFECT_LOMOISH;
    public static final java.lang.String EFFECT_NEGATIVE;
    private static final java.lang.String[] EFFECT_PACKAGES;
    public static final java.lang.String EFFECT_POSTERIZE;
    public static final java.lang.String EFFECT_REDEYE;
    public static final java.lang.String EFFECT_ROTATE;
    public static final java.lang.String EFFECT_SATURATE;
    public static final java.lang.String EFFECT_SEPIA;
    public static final java.lang.String EFFECT_SHARPEN;
    public static final java.lang.String EFFECT_STRAIGHTEN;
    public static final java.lang.String EFFECT_TEMPERATURE;
    public static final java.lang.String EFFECT_TINT;
    public static final java.lang.String EFFECT_VIGNETTE;
    private android.media.effect.EffectContext mEffectContext;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.media.effect.EffectFactory: java.lang.String EFFECT_VIGNETTE> = "android.media.effect.effects.VignetteEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_TINT> = "android.media.effect.effects.TintEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_TEMPERATURE> = "android.media.effect.effects.ColorTemperatureEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_STRAIGHTEN> = "android.media.effect.effects.StraightenEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_SHARPEN> = "android.media.effect.effects.SharpenEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_SEPIA> = "android.media.effect.effects.SepiaEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_SATURATE> = "android.media.effect.effects.SaturateEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_ROTATE> = "android.media.effect.effects.RotateEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_REDEYE> = "android.media.effect.effects.RedEyeEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_POSTERIZE> = "android.media.effect.effects.PosterizeEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_NEGATIVE> = "android.media.effect.effects.NegativeEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_LOMOISH> = "android.media.effect.effects.LomoishEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_IDENTITY> = "IdentityEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_GRAYSCALE> = "android.media.effect.effects.GrayscaleEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_GRAIN> = "android.media.effect.effects.GrainEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_FLIP> = "android.media.effect.effects.FlipEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_FISHEYE> = "android.media.effect.effects.FisheyeEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_FILLLIGHT> = "android.media.effect.effects.FillLightEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_DUOTONE> = "android.media.effect.effects.DuotoneEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_DOCUMENTARY> = "android.media.effect.effects.DocumentaryEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_CROSSPROCESS> = "android.media.effect.effects.CrossProcessEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_CROP> = "android.media.effect.effects.CropEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_CONTRAST> = "android.media.effect.effects.ContrastEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_BRIGHTNESS> = "android.media.effect.effects.BrightnessEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_BLACKWHITE> = "android.media.effect.effects.BlackWhiteEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_BITMAPOVERLAY> = "android.media.effect.effects.BitmapOverlayEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_BACKDROPPER> = "android.media.effect.effects.BackDropperEffect";

        <android.media.effect.EffectFactory: java.lang.String EFFECT_AUTOFIX> = "android.media.effect.effects.AutoFixEffect";

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "android.media.effect.effects.";

        $r0[1] = "";

        <android.media.effect.EffectFactory: java.lang.String[] EFFECT_PACKAGES> = $r0;

        return;
    }

    void <init>(android.media.effect.EffectContext)
    {
        android.media.effect.EffectFactory r0;
        android.media.effect.EffectContext r1;

        r0 := @this: android.media.effect.EffectFactory;

        r1 := @parameter0: android.media.effect.EffectContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.effect.EffectFactory: android.media.effect.EffectContext mEffectContext> = r1;

        return;
    }

    private static java.lang.Class getEffectClassByName(java.lang.String)
    {
        java.lang.String r0, $r7, r11;
        java.lang.ClassLoader r1;
        java.lang.String[] r2;
        int i0, i1;
        java.lang.StringBuilder r3;
        java.lang.Thread $r4;
        java.lang.ClassNotFoundException $r8;
        java.lang.Class r9, r10, r12, r14;

        r0 := @parameter0: java.lang.String;

        r9 = null;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r1 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        r2 = <android.media.effect.EffectFactory: java.lang.String[] EFFECT_PACKAGES>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        r10 = r9;

        if i1 >= i0 goto label6;

        r11 = r2[i1];

     label2:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r12 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r7);

     label3:
        r14 = r12;

        if r12 == null goto label5;

        r10 = r12;

        goto label6;

     label4:
        $r8 := @caughtexception;

        r14 = r9;

     label5:
        i1 = i1 + 1;

        r9 = r14;

        goto label1;

     label6:
        return r10;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    private android.media.effect.Effect instantiateEffect(java.lang.Class, java.lang.String)
    {
        android.media.effect.EffectFactory r0;
        java.lang.Class r1;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4;
        android.media.effect.EffectContext $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7, $r14;
        java.lang.StringBuilder $r8, $r15, $r22;
        java.lang.RuntimeException $r12, $r19;
        java.lang.String $r13, $r20, $r27, r28;
        java.lang.ClassCastException $r21;
        java.lang.IllegalArgumentException $r26;
        java.lang.reflect.Constructor r29;
        android.media.effect.Effect r30;

        r0 := @this: android.media.effect.EffectFactory;

        r1 := @parameter0: java.lang.Class;

        r28 := @parameter1: java.lang.String;

     label1:
        virtualinvoke r1.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroid/media/effect/Effect;");

     label2:
        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = class "Landroid/media/effect/EffectContext;";

        $r3[1] = class "Ljava/lang/String;";

        r29 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label3:
        $r4 = newarray (java.lang.Object)[2];

        $r5 = r0.<android.media.effect.EffectFactory: android.media.effect.EffectContext mEffectContext>;

        $r4[0] = $r5;

        $r4[1] = r28;

        $r6 = virtualinvoke r29.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        r30 = (android.media.effect.Effect) $r6;

     label4:
        return r30;

     label5:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There was an error constructing the effect \'");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r19 = new java.lang.RuntimeException;

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, $r14);

        throw $r19;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The effect class \'");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not have the required constructor.");

        $r12 = new java.lang.RuntimeException;

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r7);

        throw $r12;

     label7:
        $r21 := @caughtexception;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to allocate effect \'");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' which is not a subclass of Effect!");

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r27, $r21);

        throw $r26;

        catch java.lang.ClassCastException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static boolean isEffectSupported(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Class $r1;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.media.effect.EffectFactory: java.lang.Class getEffectClassByName(java.lang.String)>(r0);

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public android.media.effect.Effect createEffect(java.lang.String)
    {
        android.media.effect.EffectFactory r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r6;
        android.media.effect.Effect $r8;
        java.lang.Class r9;

        r0 := @this: android.media.effect.EffectFactory;

        r1 := @parameter0: java.lang.String;

        r9 = staticinvoke <android.media.effect.EffectFactory: java.lang.Class getEffectClassByName(java.lang.String)>(r1);

        if r9 == null goto label1;

        $r8 = specialinvoke r0.<android.media.effect.EffectFactory: android.media.effect.Effect instantiateEffect(java.lang.Class,java.lang.String)>(r9, r1);

        return $r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot instantiate unknown effect \'");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }
}
