class android.media.midi.IMidiDeviceServer$Stub$Proxy extends java.lang.Object implements android.media.midi.IMidiDeviceServer
{
    public static android.media.midi.IMidiDeviceServer sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.midi.IMidiDeviceServer$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.midi.IMidiDeviceServer$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub$Proxy;

        $r1 = r0.<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void closeDevice() throws android.os.RemoteException
    {
        android.media.midi.IMidiDeviceServer$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.midi.IMidiDeviceServer $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        $r3 = r0.<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.midi.IMidiDeviceServer: void closeDevice()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void closePort(android.os.IBinder) throws android.os.RemoteException
    {
        android.media.midi.IMidiDeviceServer$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.midi.IMidiDeviceServer $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r3 = r0.<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.midi.IMidiDeviceServer: void closePort(android.os.IBinder)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int connectPorts(android.os.IBinder, java.io.FileDescriptor, int) throws android.os.RemoteException
    {
        android.media.midi.IMidiDeviceServer$Stub$Proxy r0;
        java.io.FileDescriptor r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8;
        boolean $z0;
        android.media.midi.IMidiDeviceServer $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.io.FileDescriptor;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeRawFileDescriptor(java.io.FileDescriptor)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.media.midi.IMidiDeviceServer: int connectPorts(android.os.IBinder,java.io.FileDescriptor,int)>(r8, r1, i0);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.media.midi.MidiDeviceInfo getDeviceInfo() throws android.os.RemoteException
    {
        android.media.midi.IMidiDeviceServer$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.media.midi.IMidiDeviceServer $r6, $r7;
        java.lang.Throwable $r8;
        android.media.midi.MidiDeviceInfo r9, r10;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        $r3 = r0.<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.media.midi.IMidiDeviceServer: android.media.midi.MidiDeviceInfo getDeviceInfo()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.media.midi.MidiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.media.midi.MidiDeviceInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.midi.IMidiDeviceServer$Stub$Proxy r0;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub$Proxy;

        return "android.media.midi.IMidiDeviceServer";
    }

    public java.io.FileDescriptor openInputPort(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.media.midi.IMidiDeviceServer$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.midi.IMidiDeviceServer $r4, $r5;
        java.lang.Throwable $r6;
        java.io.FileDescriptor r8, r9;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.media.midi.IMidiDeviceServer: java.io.FileDescriptor openInputPort(android.os.IBinder,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.io.FileDescriptor readRawFileDescriptor()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.io.FileDescriptor openOutputPort(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.media.midi.IMidiDeviceServer$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.midi.IMidiDeviceServer $r4, $r5;
        java.lang.Throwable $r6;
        java.io.FileDescriptor r8, r9;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        r8 = interfaceinvoke $r5.<android.media.midi.IMidiDeviceServer: java.io.FileDescriptor openOutputPort(android.os.IBinder,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.io.FileDescriptor readRawFileDescriptor()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setDeviceInfo(android.media.midi.MidiDeviceInfo) throws android.os.RemoteException
    {
        android.media.midi.IMidiDeviceServer$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.midi.IMidiDeviceServer $r3, $r4;
        java.lang.Throwable $r5;
        android.media.midi.MidiDeviceInfo r6;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub$Proxy;

        r6 := @parameter0: android.media.midi.MidiDeviceInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiDeviceServer");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.media.midi.MidiDeviceInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.midi.IMidiDeviceServer$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: android.media.midi.IMidiDeviceServer getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.midi.IMidiDeviceServer: void setDeviceInfo(android.media.midi.MidiDeviceInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }
}
