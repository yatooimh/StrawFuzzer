public abstract class android.media.midi.IMidiDeviceServer$Stub extends android.os.Binder implements android.media.midi.IMidiDeviceServer
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_closeDevice;
    static final int TRANSACTION_closePort;
    static final int TRANSACTION_connectPorts;
    static final int TRANSACTION_getDeviceInfo;
    static final int TRANSACTION_openInputPort;
    static final int TRANSACTION_openOutputPort;
    static final int TRANSACTION_setDeviceInfo;

    public void <init>()
    {
        android.media.midi.IMidiDeviceServer$Stub r0;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.media.midi.IMidiDeviceServer$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.media.midi.IMidiDeviceServer");

        return;
    }

    public static android.media.midi.IMidiDeviceServer asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.media.midi.IMidiDeviceServer$Stub$Proxy $r2;
        boolean $z0;
        android.media.midi.IMidiDeviceServer $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.media.midi.IMidiDeviceServer;

        if $z0 == 0 goto label2;

        $r3 = (android.media.midi.IMidiDeviceServer) r1;

        return $r3;

     label2:
        $r2 = new android.media.midi.IMidiDeviceServer$Stub$Proxy;

        specialinvoke $r2.<android.media.midi.IMidiDeviceServer$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.media.midi.IMidiDeviceServer getDefaultImpl()
    {
        android.media.midi.IMidiDeviceServer $r0;

        $r0 = <android.media.midi.IMidiDeviceServer$Stub$Proxy: android.media.midi.IMidiDeviceServer sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "setDeviceInfo";

     label3:
        return "getDeviceInfo";

     label4:
        return "connectPorts";

     label5:
        return "closeDevice";

     label6:
        return "closePort";

     label7:
        return "openOutputPort";

     label8:
        return "openInputPort";
    }

    public static boolean setDefaultImpl(android.media.midi.IMidiDeviceServer)
    {
        android.media.midi.IMidiDeviceServer r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.media.midi.IMidiDeviceServer;

        $r1 = <android.media.midi.IMidiDeviceServer$Stub$Proxy: android.media.midi.IMidiDeviceServer sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.media.midi.IMidiDeviceServer$Stub$Proxy: android.media.midi.IMidiDeviceServer sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.media.midi.IMidiDeviceServer$Stub r0;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.media.midi.IMidiDeviceServer$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.media.midi.IMidiDeviceServer$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.media.midi.IMidiDeviceServer$Stub r0;
        android.os.Parcel r1, r9;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        android.os.IBinder $r4, $r6, $r7, $r8;
        java.io.FileDescriptor $r5, r12, r13;
        boolean $z0;
        android.media.midi.MidiDeviceInfo r10, r11;

        r0 := @this: android.media.midi.IMidiDeviceServer$Stub;

        i5 := @parameter0: int;

        r9 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i5 == 1598968902 goto label13;

        tableswitch(i5)
        {
            case 1: goto label12;
            case 2: goto label11;
            case 3: goto label10;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label05;
            case 7: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i5, r9, r1, i0);

        return $z0;

     label02:
        virtualinvoke r9.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        $i1 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label03;

        $r2 = <android.media.midi.MidiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r9);

        r10 = (android.media.midi.MidiDeviceInfo) $r3;

        goto label04;

     label03:
        r10 = null;

     label04:
        virtualinvoke r0.<android.media.midi.IMidiDeviceServer$Stub: void setDeviceInfo(android.media.midi.MidiDeviceInfo)>(r10);

        return 1;

     label05:
        virtualinvoke r9.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        r11 = virtualinvoke r0.<android.media.midi.IMidiDeviceServer$Stub: android.media.midi.MidiDeviceInfo getDeviceInfo()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r11 == null goto label06;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r11.<android.media.midi.MidiDeviceInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label07;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        return 1;

     label08:
        virtualinvoke r9.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        $r4 = virtualinvoke r9.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r5 = virtualinvoke r9.<android.os.Parcel: java.io.FileDescriptor readRawFileDescriptor()>();

        $i2 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        i6 = virtualinvoke r0.<android.media.midi.IMidiDeviceServer$Stub: int connectPorts(android.os.IBinder,java.io.FileDescriptor,int)>($r4, $r5, $i2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        return 1;

     label09:
        virtualinvoke r9.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        virtualinvoke r0.<android.media.midi.IMidiDeviceServer$Stub: void closeDevice()>();

        return 1;

     label10:
        virtualinvoke r9.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        $r6 = virtualinvoke r9.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.media.midi.IMidiDeviceServer$Stub: void closePort(android.os.IBinder)>($r6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label11:
        virtualinvoke r9.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        $r7 = virtualinvoke r9.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i3 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        r12 = virtualinvoke r0.<android.media.midi.IMidiDeviceServer$Stub: java.io.FileDescriptor openOutputPort(android.os.IBinder,int)>($r7, $i3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeRawFileDescriptor(java.io.FileDescriptor)>(r12);

        return 1;

     label12:
        virtualinvoke r9.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        $r8 = virtualinvoke r9.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i4 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        r13 = virtualinvoke r0.<android.media.midi.IMidiDeviceServer$Stub: java.io.FileDescriptor openInputPort(android.os.IBinder,int)>($r8, $i4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeRawFileDescriptor(java.io.FileDescriptor)>(r13);

        return 1;

     label13:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.media.midi.IMidiDeviceServer");

        return 1;
    }

    public static void <clinit>()
    {
        <android.media.midi.IMidiDeviceServer$Stub: int TRANSACTION_setDeviceInfo> = 7;

        <android.media.midi.IMidiDeviceServer$Stub: int TRANSACTION_openOutputPort> = 2;

        <android.media.midi.IMidiDeviceServer$Stub: int TRANSACTION_openInputPort> = 1;

        <android.media.midi.IMidiDeviceServer$Stub: int TRANSACTION_getDeviceInfo> = 6;

        <android.media.midi.IMidiDeviceServer$Stub: int TRANSACTION_connectPorts> = 5;

        <android.media.midi.IMidiDeviceServer$Stub: int TRANSACTION_closePort> = 3;

        <android.media.midi.IMidiDeviceServer$Stub: int TRANSACTION_closeDevice> = 4;

        <android.media.midi.IMidiDeviceServer$Stub: java.lang.String DESCRIPTOR> = "android.media.midi.IMidiDeviceServer";

        return;
    }
}
