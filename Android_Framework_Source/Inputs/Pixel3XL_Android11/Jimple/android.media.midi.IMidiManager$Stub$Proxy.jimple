class android.media.midi.IMidiManager$Stub$Proxy extends java.lang.Object implements android.media.midi.IMidiManager
{
    public static android.media.midi.IMidiManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        $r1 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void closeDevice(android.os.IBinder, android.os.IBinder) throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.os.IBinder r1, $r4, r8;
        android.os.Parcel r2, r3;
        boolean $z0;
        android.media.midi.IMidiManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r4 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.midi.IMidiManager: void closeDevice(android.os.IBinder,android.os.IBinder)>(r8, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo) throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.media.midi.IMidiManager $r6, $r7;
        java.lang.Throwable $r8;
        android.media.midi.MidiDeviceInfo r9;
        android.media.midi.MidiDeviceStatus r10, r11;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r9 := @parameter0: android.media.midi.MidiDeviceInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.media.midi.MidiDeviceInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.media.midi.IMidiManager: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>(r9);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r4 = <android.media.midi.MidiDeviceStatus: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.media.midi.MidiDeviceStatus) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public android.media.midi.MidiDeviceInfo[] getDevices() throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.media.midi.IMidiManager $r6, $r7;
        java.lang.Throwable $r8;
        android.media.midi.MidiDeviceInfo[] r9, r10;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

        $r3 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.media.midi.IMidiManager: android.media.midi.MidiDeviceInfo[] getDevices()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.media.midi.MidiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.media.midi.MidiDeviceInfo[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        return "android.media.midi.IMidiManager";
    }

    public android.media.midi.MidiDeviceInfo getServiceDeviceInfo(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        java.lang.String r1, r10;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.media.midi.IMidiManager $r7, $r8;
        java.lang.Throwable $r9;
        android.media.midi.MidiDeviceInfo r11, r12;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<android.media.midi.IMidiManager: android.media.midi.MidiDeviceInfo getServiceDeviceInfo(java.lang.String,java.lang.String)>(r10, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r5 = <android.media.midi.MidiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (android.media.midi.MidiDeviceInfo) $r6;

     label4:
        goto label6;

     label5:
        r12 = null;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public void openBluetoothDevice(android.os.IBinder, android.bluetooth.BluetoothDevice, android.media.midi.IMidiDeviceOpenCallback) throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.bluetooth.BluetoothDevice r1;
        android.media.midi.IMidiDeviceOpenCallback r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r9, r10;
        boolean $z0;
        android.media.midi.IMidiManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.bluetooth.BluetoothDevice;

        r2 := @parameter2: android.media.midi.IMidiDeviceOpenCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r2 == null goto label09;

     label07:
        r10 = interfaceinvoke r2.<android.media.midi.IMidiDeviceOpenCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r10 = null;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r5 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, r4, 0);

        if $z0 != 0 goto label12;

        $r6 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r6 == null goto label12;

        $r7 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.media.midi.IMidiManager: void openBluetoothDevice(android.os.IBinder,android.bluetooth.BluetoothDevice,android.media.midi.IMidiDeviceOpenCallback)>(r9, r1, r2);

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void openDevice(android.os.IBinder, android.media.midi.MidiDeviceInfo, android.media.midi.IMidiDeviceOpenCallback) throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.media.midi.MidiDeviceInfo r1;
        android.media.midi.IMidiDeviceOpenCallback r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r9, r10;
        boolean $z0;
        android.media.midi.IMidiManager $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r9 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.media.midi.MidiDeviceInfo;

        r2 := @parameter2: android.media.midi.IMidiDeviceOpenCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.media.midi.MidiDeviceInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r2 == null goto label09;

     label07:
        r10 = interfaceinvoke r2.<android.media.midi.IMidiDeviceOpenCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r10 = null;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r5 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, r4, 0);

        if $z0 != 0 goto label12;

        $r6 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r6 == null goto label12;

        $r7 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.media.midi.IMidiManager: void openDevice(android.os.IBinder,android.media.midi.MidiDeviceInfo,android.media.midi.IMidiDeviceOpenCallback)>(r9, r1, r2);

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer, int, int, java.lang.String[], java.lang.String[], android.os.Bundle, int) throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        int i0, i1, i2, $i3;
        java.lang.String[] r1, r2;
        android.os.Bundle r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r17;
        boolean $z0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;
        android.media.midi.IMidiManager $r9, $r10;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, r20;
        android.media.midi.IMidiDeviceServer r16;
        android.media.midi.MidiDeviceInfo r18, r19;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r16 := @parameter0: android.media.midi.IMidiDeviceServer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String[];

        r2 := @parameter4: java.lang.String[];

        r3 := @parameter5: android.os.Bundle;

        i2 := @parameter6: int;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

     label02:
        if r16 == null goto label05;

     label03:
        r17 = interfaceinvoke r16.<android.media.midi.IMidiDeviceServer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r17 = null;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r17);

     label07:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

     label11:
        if r3 == null goto label14;

     label12:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label13:
        goto label15;

     label14:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label15:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i2);

        $r6 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r4, r5, 0);

        if $z0 != 0 goto label17;

        $r9 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r9 == null goto label17;

        $r10 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        r18 = interfaceinvoke $r10.<android.media.midi.IMidiManager: android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,int)>(r16, i0, i1, r1, r2, r3, i2);

     label16:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r18;

     label17:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        $i3 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label19;

        $r7 = <android.media.midi.MidiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r5);

        r19 = (android.media.midi.MidiDeviceInfo) $r8;

     label18:
        goto label20;

     label19:
        r19 = null;

     label20:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r19;

     label21:
        $r15 := @caughtexception;

        r20 = $r15;

        goto label26;

     label22:
        $r14 := @caughtexception;

        r20 = $r14;

        goto label26;

     label23:
        $r12 := @caughtexception;

        r20 = $r12;

        goto label26;

     label24:
        $r11 := @caughtexception;

        r20 = $r11;

        goto label26;

     label25:
        $r13 := @caughtexception;

        r20 = $r13;

     label26:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r20;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
    }

    public void registerListener(android.os.IBinder, android.media.midi.IMidiDeviceListener) throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.media.midi.IMidiDeviceListener r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8, r9;
        boolean $z0;
        android.media.midi.IMidiManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.media.midi.IMidiDeviceListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.media.midi.IMidiDeviceListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.midi.IMidiManager: void registerListener(android.os.IBinder,android.media.midi.IMidiDeviceListener)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setDeviceStatus(android.media.midi.IMidiDeviceServer, android.media.midi.MidiDeviceStatus) throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.media.midi.MidiDeviceStatus r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.media.midi.IMidiManager $r5, $r6;
        java.lang.Throwable $r7;
        android.media.midi.IMidiDeviceServer r8;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r8 := @parameter0: android.media.midi.IMidiDeviceServer;

        r1 := @parameter1: android.media.midi.MidiDeviceStatus;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.media.midi.IMidiDeviceServer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.media.midi.MidiDeviceStatus: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        $r4 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, r3, 0);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.midi.IMidiManager: void setDeviceStatus(android.media.midi.IMidiDeviceServer,android.media.midi.MidiDeviceStatus)>(r8, r1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void unregisterDeviceServer(android.media.midi.IMidiDeviceServer) throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.midi.IMidiManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.midi.IMidiDeviceServer r7;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r7 := @parameter0: android.media.midi.IMidiDeviceServer;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.midi.IMidiDeviceServer: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.midi.IMidiManager: void unregisterDeviceServer(android.media.midi.IMidiDeviceServer)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterListener(android.os.IBinder, android.media.midi.IMidiDeviceListener) throws android.os.RemoteException
    {
        android.media.midi.IMidiManager$Stub$Proxy r0;
        android.media.midi.IMidiDeviceListener r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r8, r9;
        boolean $z0;
        android.media.midi.IMidiManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.midi.IMidiManager$Stub$Proxy;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.media.midi.IMidiDeviceListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.midi.IMidiManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.media.midi.IMidiDeviceListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.media.midi.IMidiManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.media.midi.IMidiManager$Stub: android.media.midi.IMidiManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.midi.IMidiManager: void unregisterListener(android.os.IBinder,android.media.midi.IMidiDeviceListener)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
