public final class android.media.midi.MidiDevice extends java.lang.Object implements java.io.Closeable
{
    private static final java.lang.String TAG;
    private final android.os.IBinder mClientToken;
    private final android.media.midi.MidiDeviceInfo mDeviceInfo;
    private final android.media.midi.IMidiDeviceServer mDeviceServer;
    private final android.os.IBinder mDeviceServerBinder;
    private final android.os.IBinder mDeviceToken;
    private final dalvik.system.CloseGuard mGuard;
    private boolean mIsDeviceClosed;
    private final android.media.midi.IMidiManager mMidiManager;
    private long mNativeHandle;

    void <init>(android.media.midi.MidiDeviceInfo, android.media.midi.IMidiDeviceServer, android.media.midi.IMidiManager, android.os.IBinder, android.os.IBinder)
    {
        android.media.midi.MidiDevice r0;
        android.media.midi.MidiDeviceInfo r1;
        android.media.midi.IMidiDeviceServer r2;
        android.media.midi.IMidiManager r3;
        android.os.IBinder r4, r5, $r7;
        dalvik.system.CloseGuard $r6, $r8;

        r0 := @this: android.media.midi.MidiDevice;

        r1 := @parameter0: android.media.midi.MidiDeviceInfo;

        r2 := @parameter1: android.media.midi.IMidiDeviceServer;

        r3 := @parameter2: android.media.midi.IMidiManager;

        r4 := @parameter3: android.os.IBinder;

        r5 := @parameter4: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.media.midi.MidiDevice: dalvik.system.CloseGuard mGuard> = $r6;

        r0.<android.media.midi.MidiDevice: android.media.midi.MidiDeviceInfo mDeviceInfo> = r1;

        r0.<android.media.midi.MidiDevice: android.media.midi.IMidiDeviceServer mDeviceServer> = r2;

        $r7 = interfaceinvoke r2.<android.media.midi.IMidiDeviceServer: android.os.IBinder asBinder()>();

        r0.<android.media.midi.MidiDevice: android.os.IBinder mDeviceServerBinder> = $r7;

        r0.<android.media.midi.MidiDevice: android.media.midi.IMidiManager mMidiManager> = r3;

        r0.<android.media.midi.MidiDevice: android.os.IBinder mClientToken> = r4;

        r0.<android.media.midi.MidiDevice: android.os.IBinder mDeviceToken> = r5;

        $r8 = r0.<android.media.midi.MidiDevice: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r8.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;
    }

    static android.media.midi.IMidiDeviceServer access$000(android.media.midi.MidiDevice)
    {
        android.media.midi.MidiDevice r0;
        android.media.midi.IMidiDeviceServer $r1;

        r0 := @parameter0: android.media.midi.MidiDevice;

        $r1 = r0.<android.media.midi.MidiDevice: android.media.midi.IMidiDeviceServer mDeviceServer>;

        return $r1;
    }

    public void close() throws java.io.IOException
    {
        android.media.midi.MidiDevice r0;
        dalvik.system.CloseGuard r1, $r2;
        long $l0, $l2, $l4;
        byte $b1, $b3;
        boolean $z0;
        android.os.IBinder $r3, $r4;
        android.media.midi.IMidiManager $r5;
        java.lang.String $r7, $r9;
        android.os.RemoteException $r10;
        java.lang.Throwable $r11;
        java.lang.StringBuilder r12;

        r0 := @this: android.media.midi.MidiDevice;

        r1 = r0.<android.media.midi.MidiDevice: dalvik.system.CloseGuard mGuard>;

        entermonitor r1;

     label01:
        $l0 = r0.<android.media.midi.MidiDevice: long mNativeHandle>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label02;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MidiDevice#close() called while there is an outstanding native client 0x");

        $l4 = r0.<android.media.midi.MidiDevice: long mNativeHandle>;

        $r7 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l4);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MidiDevice", $r9);

     label02:
        $z0 = r0.<android.media.midi.MidiDevice: boolean mIsDeviceClosed>;

        if $z0 != 0 goto label07;

        $l2 = r0.<android.media.midi.MidiDevice: long mNativeHandle>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label07;

        $r2 = r0.<android.media.midi.MidiDevice: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void close()>();

        r0.<android.media.midi.MidiDevice: boolean mIsDeviceClosed> = 1;

     label03:
        $r5 = r0.<android.media.midi.MidiDevice: android.media.midi.IMidiManager mMidiManager>;

        $r4 = r0.<android.media.midi.MidiDevice: android.os.IBinder mClientToken>;

        $r3 = r0.<android.media.midi.MidiDevice: android.os.IBinder mDeviceToken>;

        interfaceinvoke $r5.<android.media.midi.IMidiManager: void closeDevice(android.os.IBinder,android.os.IBinder)>($r4, $r3);

     label04:
        goto label07;

     label05:
        $r10 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiDevice", "RemoteException in closeDevice");

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r11 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public android.media.midi.MidiDevice$MidiConnection connectPorts(android.media.midi.MidiInputPort, int)
    {
        android.media.midi.MidiDevice r0;
        int i0, $i1, $i2, $i3;
        java.io.FileDescriptor r1;
        android.os.Binder r2;
        java.lang.IllegalArgumentException $r3;
        android.media.midi.MidiDeviceInfo $r4;
        boolean $z0;
        android.media.midi.IMidiDeviceServer $r5;
        android.media.midi.MidiDevice$MidiConnection $r6;
        android.os.RemoteException $r7;
        android.media.midi.MidiInputPort r8;

        r0 := @this: android.media.midi.MidiDevice;

        r8 := @parameter0: android.media.midi.MidiInputPort;

        i0 := @parameter1: int;

        if i0 < 0 goto label6;

        $r4 = r0.<android.media.midi.MidiDevice: android.media.midi.MidiDeviceInfo mDeviceInfo>;

        $i1 = virtualinvoke $r4.<android.media.midi.MidiDeviceInfo: int getOutputPortCount()>();

        if i0 >= $i1 goto label6;

        $z0 = r0.<android.media.midi.MidiDevice: boolean mIsDeviceClosed>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        r1 = virtualinvoke r8.<android.media.midi.MidiInputPort: java.io.FileDescriptor claimFileDescriptor()>();

        if r1 != null goto label2;

        return null;

     label2:
        r2 = new android.os.Binder;

        specialinvoke r2.<android.os.Binder: void <init>()>();

        $r5 = r0.<android.media.midi.MidiDevice: android.media.midi.IMidiDeviceServer mDeviceServer>;

        $i2 = interfaceinvoke $r5.<android.media.midi.IMidiDeviceServer: int connectPorts(android.os.IBinder,java.io.FileDescriptor,int)>(r2, r1, i0);

        $i3 = staticinvoke <android.os.Process: int myPid()>();

        if $i2 == $i3 goto label3;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r1);

     label3:
        $r6 = new android.media.midi.MidiDevice$MidiConnection;

        specialinvoke $r6.<android.media.midi.MidiDevice$MidiConnection: void <init>(android.media.midi.MidiDevice,android.os.IBinder,android.media.midi.MidiInputPort)>(r0, r2, r8);

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiDevice", "RemoteException in connectPorts");

        return null;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outputPortNumber out of range");

        throw $r3;

        catch android.os.RemoteException from label2 to label3 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.midi.MidiDevice r0;
        dalvik.system.CloseGuard $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.media.midi.MidiDevice;

     label1:
        $r2 = r0.<android.media.midi.MidiDevice: dalvik.system.CloseGuard mGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.media.midi.MidiDevice: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        virtualinvoke r0.<android.media.midi.MidiDevice: void close()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public android.media.midi.MidiDeviceInfo getInfo()
    {
        android.media.midi.MidiDevice r0;
        android.media.midi.MidiDeviceInfo $r1;

        r0 := @this: android.media.midi.MidiDevice;

        $r1 = r0.<android.media.midi.MidiDevice: android.media.midi.MidiDeviceInfo mDeviceInfo>;

        return $r1;
    }

    public android.media.midi.MidiInputPort openInputPort(int)
    {
        android.media.midi.MidiDevice r0;
        int i0;
        java.io.FileDescriptor r1;
        boolean $z0;
        android.media.midi.IMidiDeviceServer $r2, $r4;
        android.media.midi.MidiInputPort $r3;
        android.os.RemoteException $r5;
        android.os.Binder r6;

        r0 := @this: android.media.midi.MidiDevice;

        i0 := @parameter0: int;

        $z0 = r0.<android.media.midi.MidiDevice: boolean mIsDeviceClosed>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        r6 = new android.os.Binder;

        specialinvoke r6.<android.os.Binder: void <init>()>();

        $r2 = r0.<android.media.midi.MidiDevice: android.media.midi.IMidiDeviceServer mDeviceServer>;

        r1 = interfaceinvoke $r2.<android.media.midi.IMidiDeviceServer: java.io.FileDescriptor openInputPort(android.os.IBinder,int)>(r6, i0);

     label2:
        if r1 != null goto label3;

        return null;

     label3:
        $r3 = new android.media.midi.MidiInputPort;

        $r4 = r0.<android.media.midi.MidiDevice: android.media.midi.IMidiDeviceServer mDeviceServer>;

        specialinvoke $r3.<android.media.midi.MidiInputPort: void <init>(android.media.midi.IMidiDeviceServer,android.os.IBinder,java.io.FileDescriptor,int)>($r4, r6, r1, i0);

     label4:
        return $r3;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiDevice", "RemoteException in openInputPort");

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public android.media.midi.MidiOutputPort openOutputPort(int)
    {
        android.media.midi.MidiDevice r0;
        int i0;
        java.io.FileDescriptor r1;
        boolean $z0;
        android.media.midi.IMidiDeviceServer $r2, $r4;
        android.media.midi.MidiOutputPort $r3;
        android.os.RemoteException $r5;
        android.os.Binder r6;

        r0 := @this: android.media.midi.MidiDevice;

        i0 := @parameter0: int;

        $z0 = r0.<android.media.midi.MidiDevice: boolean mIsDeviceClosed>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        r6 = new android.os.Binder;

        specialinvoke r6.<android.os.Binder: void <init>()>();

        $r2 = r0.<android.media.midi.MidiDevice: android.media.midi.IMidiDeviceServer mDeviceServer>;

        r1 = interfaceinvoke $r2.<android.media.midi.IMidiDeviceServer: java.io.FileDescriptor openOutputPort(android.os.IBinder,int)>(r6, i0);

     label2:
        if r1 != null goto label3;

        return null;

     label3:
        $r3 = new android.media.midi.MidiOutputPort;

        $r4 = r0.<android.media.midi.MidiDevice: android.media.midi.IMidiDeviceServer mDeviceServer>;

        specialinvoke $r3.<android.media.midi.MidiOutputPort: void <init>(android.media.midi.IMidiDeviceServer,android.os.IBinder,java.io.FileDescriptor,int)>($r4, r6, r1, i0);

     label4:
        return $r3;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiDevice", "RemoteException in openOutputPort");

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public java.lang.String toString()
    {
        android.media.midi.MidiDevice r0;
        java.lang.StringBuilder $r2;
        android.media.midi.MidiDeviceInfo $r4;
        java.lang.String $r5, $r7;

        r0 := @this: android.media.midi.MidiDevice;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MidiDevice: ");

        $r4 = r0.<android.media.midi.MidiDevice: android.media.midi.MidiDeviceInfo mDeviceInfo>;

        $r5 = virtualinvoke $r4.<android.media.midi.MidiDeviceInfo: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <android.media.midi.MidiDevice: java.lang.String TAG> = "MidiDevice";

        return;
    }
}
