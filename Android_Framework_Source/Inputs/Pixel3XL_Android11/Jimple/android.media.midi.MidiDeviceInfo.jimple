public final class android.media.midi.MidiDeviceInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final java.lang.String PROPERTY_ALSA_CARD;
    public static final java.lang.String PROPERTY_ALSA_DEVICE;
    public static final java.lang.String PROPERTY_BLUETOOTH_DEVICE;
    public static final java.lang.String PROPERTY_MANUFACTURER;
    public static final java.lang.String PROPERTY_NAME;
    public static final java.lang.String PROPERTY_PRODUCT;
    public static final java.lang.String PROPERTY_SERIAL_NUMBER;
    public static final java.lang.String PROPERTY_SERVICE_INFO;
    public static final java.lang.String PROPERTY_USB_DEVICE;
    public static final java.lang.String PROPERTY_VERSION;
    private static final java.lang.String TAG;
    public static final int TYPE_BLUETOOTH;
    public static final int TYPE_USB;
    public static final int TYPE_VIRTUAL;
    private final int mId;
    private final int mInputPortCount;
    private final java.lang.String[] mInputPortNames;
    private final boolean mIsPrivate;
    private final int mOutputPortCount;
    private final java.lang.String[] mOutputPortNames;
    private final android.os.Bundle mProperties;
    private final int mType;

    static void <clinit>()
    {
        android.media.midi.MidiDeviceInfo$1 $r0;

        <android.media.midi.MidiDeviceInfo: int TYPE_VIRTUAL> = 2;

        <android.media.midi.MidiDeviceInfo: int TYPE_USB> = 1;

        <android.media.midi.MidiDeviceInfo: int TYPE_BLUETOOTH> = 3;

        <android.media.midi.MidiDeviceInfo: java.lang.String TAG> = "MidiDeviceInfo";

        <android.media.midi.MidiDeviceInfo: java.lang.String PROPERTY_VERSION> = "version";

        <android.media.midi.MidiDeviceInfo: java.lang.String PROPERTY_USB_DEVICE> = "usb_device";

        <android.media.midi.MidiDeviceInfo: java.lang.String PROPERTY_SERVICE_INFO> = "service_info";

        <android.media.midi.MidiDeviceInfo: java.lang.String PROPERTY_SERIAL_NUMBER> = "serial_number";

        <android.media.midi.MidiDeviceInfo: java.lang.String PROPERTY_PRODUCT> = "product";

        <android.media.midi.MidiDeviceInfo: java.lang.String PROPERTY_NAME> = "name";

        <android.media.midi.MidiDeviceInfo: java.lang.String PROPERTY_MANUFACTURER> = "manufacturer";

        <android.media.midi.MidiDeviceInfo: java.lang.String PROPERTY_BLUETOOTH_DEVICE> = "bluetooth_device";

        <android.media.midi.MidiDeviceInfo: java.lang.String PROPERTY_ALSA_DEVICE> = "alsa_device";

        <android.media.midi.MidiDeviceInfo: java.lang.String PROPERTY_ALSA_CARD> = "alsa_card";

        $r0 = new android.media.midi.MidiDeviceInfo$1;

        specialinvoke $r0.<android.media.midi.MidiDeviceInfo$1: void <init>()>();

        <android.media.midi.MidiDeviceInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(int, int, int, int, java.lang.String[], java.lang.String[], android.os.Bundle, boolean)
    {
        android.media.midi.MidiDeviceInfo r0;
        int i0, i1, i2, i3;
        java.lang.String[] r1, $r13, $r14, r15;
        android.os.Bundle r2;
        boolean z0;
        java.lang.StringBuilder $r3, $r8;
        java.lang.IllegalArgumentException $r6, $r11;
        java.lang.String $r7, $r12;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r15 := @parameter4: java.lang.String[];

        r1 := @parameter5: java.lang.String[];

        r2 := @parameter6: android.os.Bundle;

        z0 := @parameter7: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i2 < 0 goto label6;

        if i2 > 256 goto label6;

        if i3 < 0 goto label5;

        if i3 > 256 goto label5;

        r0.<android.media.midi.MidiDeviceInfo: int mType> = i0;

        r0.<android.media.midi.MidiDeviceInfo: int mId> = i1;

        r0.<android.media.midi.MidiDeviceInfo: int mInputPortCount> = i2;

        r0.<android.media.midi.MidiDeviceInfo: int mOutputPortCount> = i3;

        if r15 != null goto label1;

        $r14 = newarray (java.lang.String)[i2];

        r0.<android.media.midi.MidiDeviceInfo: java.lang.String[] mInputPortNames> = $r14;

        goto label2;

     label1:
        r0.<android.media.midi.MidiDeviceInfo: java.lang.String[] mInputPortNames> = r15;

     label2:
        if r1 != null goto label3;

        $r13 = newarray (java.lang.String)[i3];

        r0.<android.media.midi.MidiDeviceInfo: java.lang.String[] mOutputPortNames> = $r13;

        goto label4;

     label3:
        r0.<android.media.midi.MidiDeviceInfo: java.lang.String[] mOutputPortNames> = r1;

     label4:
        r0.<android.media.midi.MidiDeviceInfo: android.os.Bundle mProperties> = r2;

        r0.<android.media.midi.MidiDeviceInfo: boolean mIsPrivate> = z0;

        return;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numOutputPorts out of range = ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label6:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numInputPorts out of range = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private android.os.Bundle getBasicProperties(java.lang.String[])
    {
        android.media.midi.MidiDeviceInfo r0;
        java.lang.String[] r1;
        int i0, $i2, i3;
        java.lang.Object r3;
        android.os.Bundle $r4, $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6;
        java.lang.Class $r8;
        java.lang.String $r9, $r11, $r13, r14;
        java.lang.Integer $r12;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        r1 := @parameter0: java.lang.String[];

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label5;

        r14 = r1[i3];

        $r5 = r0.<android.media.midi.MidiDeviceInfo: android.os.Bundle mProperties>;

        r3 = virtualinvoke $r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r14);

        if r3 == null goto label4;

        $z0 = r3 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r13 = (java.lang.String) r3;

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r14, $r13);

        goto label4;

     label2:
        $z1 = r3 instanceof java.lang.Integer;

        if $z1 == 0 goto label3;

        $r12 = (java.lang.Integer) r3;

        $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        virtualinvoke $r4.<android.os.Bundle: void putInt(java.lang.String,int)>(r14, $i2);

        goto label4;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported property type: ");

        $r8 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MidiDeviceInfo", $r11);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return $r4;
    }

    public int describeContents()
    {
        android.media.midi.MidiDeviceInfo r0;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.media.midi.MidiDeviceInfo r0, $r2;
        java.lang.Object r1;
        boolean z0, z1;
        int $i0, $i1;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        r1 := @parameter0: java.lang.Object;

        z0 = r1 instanceof android.media.midi.MidiDeviceInfo;

        z1 = 0;

        if z0 == 0 goto label2;

        $r2 = (android.media.midi.MidiDeviceInfo) r1;

        $i1 = $r2.<android.media.midi.MidiDeviceInfo: int mId>;

        $i0 = r0.<android.media.midi.MidiDeviceInfo: int mId>;

        if $i1 != $i0 goto label1;

        z1 = 1;

     label1:
        return z1;

     label2:
        return 0;
    }

    public int getId()
    {
        android.media.midi.MidiDeviceInfo r0;
        int $i0;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        $i0 = r0.<android.media.midi.MidiDeviceInfo: int mId>;

        return $i0;
    }

    public int getInputPortCount()
    {
        android.media.midi.MidiDeviceInfo r0;
        int $i0;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        $i0 = r0.<android.media.midi.MidiDeviceInfo: int mInputPortCount>;

        return $i0;
    }

    public int getOutputPortCount()
    {
        android.media.midi.MidiDeviceInfo r0;
        int $i0;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        $i0 = r0.<android.media.midi.MidiDeviceInfo: int mOutputPortCount>;

        return $i0;
    }

    public android.media.midi.MidiDeviceInfo$PortInfo[] getPorts()
    {
        android.media.midi.MidiDeviceInfo r0;
        android.media.midi.MidiDeviceInfo$PortInfo[] r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        android.media.midi.MidiDeviceInfo$PortInfo $r2, $r5;
        java.lang.String[] $r3, $r6;
        java.lang.String $r4, $r7;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        $i1 = r0.<android.media.midi.MidiDeviceInfo: int mInputPortCount>;

        $i0 = r0.<android.media.midi.MidiDeviceInfo: int mOutputPortCount>;

        $i2 = $i1 + $i0;

        r1 = newarray (android.media.midi.MidiDeviceInfo$PortInfo)[$i2];

        i5 = 0;

        i6 = 0;

     label1:
        $i3 = r0.<android.media.midi.MidiDeviceInfo: int mInputPortCount>;

        if i6 >= $i3 goto label2;

        $r5 = new android.media.midi.MidiDeviceInfo$PortInfo;

        $r6 = r0.<android.media.midi.MidiDeviceInfo: java.lang.String[] mInputPortNames>;

        $r7 = $r6[i6];

        specialinvoke $r5.<android.media.midi.MidiDeviceInfo$PortInfo: void <init>(int,int,java.lang.String)>(1, i6, $r7);

        r1[i5] = $r5;

        i6 = i6 + 1;

        i5 = i5 + 1;

        goto label1;

     label2:
        i7 = 0;

     label3:
        $i4 = r0.<android.media.midi.MidiDeviceInfo: int mOutputPortCount>;

        if i7 >= $i4 goto label4;

        $r2 = new android.media.midi.MidiDeviceInfo$PortInfo;

        $r3 = r0.<android.media.midi.MidiDeviceInfo: java.lang.String[] mOutputPortNames>;

        $r4 = $r3[i7];

        specialinvoke $r2.<android.media.midi.MidiDeviceInfo$PortInfo: void <init>(int,int,java.lang.String)>(2, i7, $r4);

        r1[i5] = $r2;

        i7 = i7 + 1;

        i5 = i5 + 1;

        goto label3;

     label4:
        return r1;
    }

    public android.os.Bundle getProperties()
    {
        android.media.midi.MidiDeviceInfo r0;
        android.os.Bundle $r1;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        $r1 = r0.<android.media.midi.MidiDeviceInfo: android.os.Bundle mProperties>;

        return $r1;
    }

    public int getType()
    {
        android.media.midi.MidiDeviceInfo r0;
        int $i0;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        $i0 = r0.<android.media.midi.MidiDeviceInfo: int mType>;

        return $i0;
    }

    public int hashCode()
    {
        android.media.midi.MidiDeviceInfo r0;
        int $i0;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        $i0 = r0.<android.media.midi.MidiDeviceInfo: int mId>;

        return $i0;
    }

    public boolean isPrivate()
    {
        android.media.midi.MidiDeviceInfo r0;
        boolean $z0;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        $z0 = r0.<android.media.midi.MidiDeviceInfo: boolean mIsPrivate>;

        return $z0;
    }

    public java.lang.String toString()
    {
        android.media.midi.MidiDeviceInfo r0;
        android.os.Bundle $r2, $r12;
        java.lang.StringBuilder $r4;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r16;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        $r2 = r0.<android.media.midi.MidiDeviceInfo: android.os.Bundle mProperties>;

        virtualinvoke $r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>("name");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MidiDeviceInfo[mType=");

        $i0 = r0.<android.media.midi.MidiDeviceInfo: int mType>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",mInputPortCount=");

        $i1 = r0.<android.media.midi.MidiDeviceInfo: int mInputPortCount>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",mOutputPortCount=");

        $i2 = r0.<android.media.midi.MidiDeviceInfo: int mOutputPortCount>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",mProperties=");

        $r12 = r0.<android.media.midi.MidiDeviceInfo: android.os.Bundle mProperties>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",mIsPrivate=");

        $z0 = r0.<android.media.midi.MidiDeviceInfo: boolean mIsPrivate>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r16 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.media.midi.MidiDeviceInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String[] $r2, $r3, $r4;
        boolean $z0;
        android.os.Bundle $r5, $r6;

        r0 := @this: android.media.midi.MidiDeviceInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.media.midi.MidiDeviceInfo: int mType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.media.midi.MidiDeviceInfo: int mId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.media.midi.MidiDeviceInfo: int mInputPortCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.media.midi.MidiDeviceInfo: int mOutputPortCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r2 = r0.<android.media.midi.MidiDeviceInfo: java.lang.String[] mInputPortNames>;

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r2);

        $r3 = r0.<android.media.midi.MidiDeviceInfo: java.lang.String[] mOutputPortNames>;

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r3);

        $z0 = r0.<android.media.midi.MidiDeviceInfo: boolean mIsPrivate>;

        i5 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        $r4 = newarray (java.lang.String)[7];

        $r4[0] = "name";

        $r4[1] = "manufacturer";

        $r4[2] = "product";

        $r4[3] = "version";

        $r4[4] = "serial_number";

        $r4[5] = "alsa_card";

        $r4[6] = "alsa_device";

        $r5 = specialinvoke r0.<android.media.midi.MidiDeviceInfo: android.os.Bundle getBasicProperties(java.lang.String[])>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r5);

        $r6 = r0.<android.media.midi.MidiDeviceInfo: android.os.Bundle mProperties>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r6);

        return;
    }
}
