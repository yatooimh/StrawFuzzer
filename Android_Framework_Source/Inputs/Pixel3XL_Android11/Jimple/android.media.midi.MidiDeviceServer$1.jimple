class android.media.midi.MidiDeviceServer$1 extends android.media.midi.IMidiDeviceServer$Stub
{
    final android.media.midi.MidiDeviceServer this$0;

    void <init>(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer$1 r0;
        android.media.midi.MidiDeviceServer r1;

        r0 := @this: android.media.midi.MidiDeviceServer$1;

        r1 := @parameter0: android.media.midi.MidiDeviceServer;

        r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0> = r1;

        specialinvoke r0.<android.media.midi.IMidiDeviceServer$Stub: void <init>()>();

        return;
    }

    public void closeDevice()
    {
        android.media.midi.MidiDeviceServer$1 r0;
        android.media.midi.MidiDeviceServer $r1, $r3, $r4;
        android.media.midi.MidiDeviceServer$Callback $r2, $r5;

        r0 := @this: android.media.midi.MidiDeviceServer$1;

        $r1 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r2 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceServer$Callback access$1300(android.media.midi.MidiDeviceServer)>($r1);

        if $r2 == null goto label1;

        $r4 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r5 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceServer$Callback access$1300(android.media.midi.MidiDeviceServer)>($r4);

        interfaceinvoke $r5.<android.media.midi.MidiDeviceServer$Callback: void onClose()>();

     label1:
        $r3 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r3);

        return;
    }

    public void closePort(android.os.IBinder)
    {
        android.media.midi.MidiDeviceServer$1 r0;
        java.util.HashMap r1, $r5, $r9, r14;
        android.media.midi.MidiDeviceServer$PortClient r2;
        android.media.midi.MidiDeviceServer $r3, $r4, $r7, $r8;
        java.lang.Object $r6;
        java.lang.Throwable $r10, $r11;
        android.os.IBinder r12;
        android.media.midi.MidiInputPort r13;

        r0 := @this: android.media.midi.MidiDeviceServer$1;

        r12 := @parameter0: android.os.IBinder;

        $r3 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        r1 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1000(android.media.midi.MidiDeviceServer)>($r3);

        entermonitor r1;

     label01:
        $r4 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r5 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1000(android.media.midi.MidiDeviceServer)>($r4);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r12);

        r2 = (android.media.midi.MidiDeviceServer$PortClient) $r6;

     label02:
        r13 = null;

        if r2 == null goto label04;

     label03:
        r13 = virtualinvoke r2.<android.media.midi.MidiDeviceServer$PortClient: android.media.midi.MidiInputPort getInputPort()>();

        virtualinvoke r2.<android.media.midi.MidiDeviceServer$PortClient: void close()>();

     label04:
        exitmonitor r1;

     label05:
        if r13 == null goto label11;

        $r7 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        r14 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1200(android.media.midi.MidiDeviceServer)>($r7);

        entermonitor r14;

     label06:
        $r8 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r9 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1200(android.media.midi.MidiDeviceServer)>($r8);

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r13);

        exitmonitor r14;

     label07:
        goto label11;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r14;

     label10:
        throw $r11;

     label11:
        return;

     label12:
        $r10 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public int connectPorts(android.os.IBinder, java.io.FileDescriptor, int)
    {
        android.media.midi.MidiDeviceServer$1 r0;
        int i0, i1, $i2;
        java.util.HashMap r1, $r15, $r19, r29;
        android.media.midi.MidiInputPort $r2;
        android.media.midi.MidiDeviceServer $r3, $r6, $r8, $r9, $r12, $r13, $r14, $r17, $r18;
        com.android.internal.midi.MidiDispatcher[] $r4;
        android.media.midi.MidiSender $r5;
        int[] $r7;
        java.util.concurrent.CopyOnWriteArrayList $r10;
        android.media.midi.MidiDeviceServer$OutputPortClient $r11;
        java.lang.Throwable $r21, $r22, $r23;
        android.os.IBinder r24;
        java.io.FileDescriptor r25;
        com.android.internal.midi.MidiDispatcher r27;

        r0 := @this: android.media.midi.MidiDeviceServer$1;

        r24 := @parameter0: android.os.IBinder;

        r25 := @parameter1: java.io.FileDescriptor;

        i0 := @parameter2: int;

        $r2 = new android.media.midi.MidiInputPort;

        specialinvoke $r2.<android.media.midi.MidiInputPort: void <init>(java.io.FileDescriptor,int)>(r25, i0);

        $r3 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r4 = staticinvoke <android.media.midi.MidiDeviceServer: com.android.internal.midi.MidiDispatcher[] access$300(android.media.midi.MidiDeviceServer)>($r3);

        r27 = $r4[i0];

        entermonitor r27;

     label01:
        $r5 = virtualinvoke r27.<com.android.internal.midi.MidiDispatcher: android.media.midi.MidiSender getSender()>();

        virtualinvoke $r5.<android.media.midi.MidiSender: void connect(android.media.midi.MidiReceiver)>($r2);

        i1 = virtualinvoke r27.<com.android.internal.midi.MidiDispatcher: int getReceiverCount()>();

        $r6 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r7 = staticinvoke <android.media.midi.MidiDeviceServer: int[] access$400(android.media.midi.MidiDeviceServer)>($r6);

        $r7[i0] = i1;

        $r8 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        staticinvoke <android.media.midi.MidiDeviceServer: void access$200(android.media.midi.MidiDeviceServer)>($r8);

        exitmonitor r27;

     label02:
        $r9 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r10 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.concurrent.CopyOnWriteArrayList access$500(android.media.midi.MidiDeviceServer)>($r9);

        virtualinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r2);

        $r11 = new android.media.midi.MidiDeviceServer$OutputPortClient;

        $r12 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        specialinvoke $r11.<android.media.midi.MidiDeviceServer$OutputPortClient: void <init>(android.media.midi.MidiDeviceServer,android.os.IBinder,android.media.midi.MidiInputPort)>($r12, r24, $r2);

        $r13 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        r1 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1000(android.media.midi.MidiDeviceServer)>($r13);

        entermonitor r1;

     label03:
        $r14 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r15 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1000(android.media.midi.MidiDeviceServer)>($r14);

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, $r11);

        exitmonitor r1;

     label04:
        $r17 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        r29 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1200(android.media.midi.MidiDeviceServer)>($r17);

        entermonitor r29;

     label05:
        $r18 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r19 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1200(android.media.midi.MidiDeviceServer)>($r18);

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r11);

        exitmonitor r29;

     label06:
        $i2 = staticinvoke <android.os.Process: int myPid()>();

        return $i2;

     label07:
        $r21 := @caughtexception;

     label08:
        exitmonitor r29;

     label09:
        throw $r21;

     label10:
        $r22 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r22;

     label13:
        $r23 := @caughtexception;

     label14:
        exitmonitor r27;

     label15:
        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public android.media.midi.MidiDeviceInfo getDeviceInfo()
    {
        android.media.midi.MidiDeviceServer$1 r0;
        android.media.midi.MidiDeviceServer $r1;
        android.media.midi.MidiDeviceInfo $r2;

        r0 := @this: android.media.midi.MidiDeviceServer$1;

        $r1 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r2 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceInfo access$600(android.media.midi.MidiDeviceServer)>($r1);

        return $r2;
    }

    public java.io.FileDescriptor openInputPort(android.os.IBinder, int)
    {
        android.media.midi.MidiDeviceServer$1 r0;
        int i0, $i2, $i4, $i5;
        android.media.midi.MidiOutputPort[] r1, $r13, $r17;
        java.io.FileDescriptor[] r2;
        android.media.midi.MidiDeviceServer$InputPortClient r3;
        android.media.midi.MidiDeviceServer $r4, $r10, $r11, $r12, $r16, $r18, $r21, $r22, $r23, $r26, $r28;
        android.media.midi.MidiDeviceInfo $r5;
        boolean $z0;
        java.lang.StringBuilder $r6, r38;
        java.lang.String $r9, $r32;
        android.media.midi.MidiOutputPort $r14, r39;
        java.io.FileDescriptor $r15, r41;
        android.media.midi.MidiReceiver[] $r19;
        android.media.midi.MidiReceiver $r20;
        java.util.HashMap $r24, r40;
        boolean[] $r27;
        java.lang.SecurityException $r33;
        java.lang.Throwable $r34, $r35, $r36;
        android.os.IBinder r37;

        r0 := @this: android.media.midi.MidiDeviceServer$1;

        r37 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $r4 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r5 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceInfo access$600(android.media.midi.MidiDeviceServer)>($r4);

        $z0 = virtualinvoke $r5.<android.media.midi.MidiDeviceInfo: boolean isPrivate()>();

        if $z0 == 0 goto label02;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i5 = staticinvoke <android.os.Process: int myUid()>();

        if $i4 != $i5 goto label01;

        goto label02;

     label01:
        $r33 = new java.lang.SecurityException;

        specialinvoke $r33.<java.lang.SecurityException: void <init>(java.lang.String)>("Can\'t access private device from different UID");

        throw $r33;

     label02:
        if i0 < 0 goto label21;

        $r10 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $i2 = staticinvoke <android.media.midi.MidiDeviceServer: int access$700(android.media.midi.MidiDeviceServer)>($r10);

        if i0 < $i2 goto label03;

        goto label21;

     label03:
        $r11 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        r1 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiOutputPort[] access$000(android.media.midi.MidiDeviceServer)>($r11);

        entermonitor r1;

     label04:
        $r12 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r13 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiOutputPort[] access$000(android.media.midi.MidiDeviceServer)>($r12);

        $r14 = $r13[i0];

        if $r14 == null goto label06;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("port ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already open");

        $r32 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MidiDeviceServer", $r32);

        exitmonitor r1;

     label05:
        return null;

     label06:
        r2 = staticinvoke <android.media.midi.MidiDeviceServer: java.io.FileDescriptor[] access$800()>();

        r39 = new android.media.midi.MidiOutputPort;

        $r15 = r2[0];

        specialinvoke r39.<android.media.midi.MidiOutputPort: void <init>(java.io.FileDescriptor,int)>($r15, i0);

        $r16 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r17 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiOutputPort[] access$000(android.media.midi.MidiDeviceServer)>($r16);

        $r17[i0] = r39;

        $r18 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r19 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiReceiver[] access$900(android.media.midi.MidiDeviceServer)>($r18);

        $r20 = $r19[i0];

        virtualinvoke r39.<android.media.midi.MidiOutputPort: void connect(android.media.midi.MidiReceiver)>($r20);

        r3 = new android.media.midi.MidiDeviceServer$InputPortClient;

        $r21 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        specialinvoke r3.<android.media.midi.MidiDeviceServer$InputPortClient: void <init>(android.media.midi.MidiDeviceServer,android.os.IBinder,android.media.midi.MidiOutputPort)>($r21, r37, r39);

        $r22 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        r40 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1000(android.media.midi.MidiDeviceServer)>($r22);

        entermonitor r40;

     label07:
        $r23 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r24 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1000(android.media.midi.MidiDeviceServer)>($r23);

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, r3);

        exitmonitor r40;

     label08:
        $r26 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r27 = staticinvoke <android.media.midi.MidiDeviceServer: boolean[] access$100(android.media.midi.MidiDeviceServer)>($r26);

        $r27[i0] = 1;

        $r28 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        staticinvoke <android.media.midi.MidiDeviceServer: void access$200(android.media.midi.MidiDeviceServer)>($r28);

     label09:
        r41 = r2[1];

     label10:
        exitmonitor r1;

     label11:
        return r41;

     label12:
        $r34 := @caughtexception;

     label13:
        exitmonitor r40;

     label14:
        throw $r34;

     label15:
        $r36 := @caughtexception;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiDeviceServer", "unable to create FileDescriptors in openInputPort");

        exitmonitor r1;

     label17:
        return null;

     label18:
        $r35 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r35;

     label21:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("portNumber out of range in openInputPort: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiDeviceServer", $r9);

        return null;

        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.io.IOException from label06 to label07 with label15;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.io.IOException from label08 to label09 with label15;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.io.IOException from label14 to label15 with label15;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public java.io.FileDescriptor openOutputPort(android.os.IBinder, int)
    {
        android.media.midi.MidiDeviceServer$1 r0;
        int i0, i1, $i3, $i4, $i5, $i6;
        android.media.midi.MidiInputPort r1;
        java.util.HashMap r2, $r24, $r28, r40;
        android.media.midi.MidiDeviceServer $r3, $r9, $r11, $r13, $r16, $r18, $r19, $r21, $r22, $r23, $r26, $r27;
        android.media.midi.MidiDeviceInfo $r4, $r12;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;
        java.io.FileDescriptor $r10, $r30, r41;
        com.android.internal.midi.MidiDispatcher[] $r14;
        android.media.midi.MidiSender $r15;
        int[] $r17;
        java.util.concurrent.CopyOnWriteArrayList $r20;
        java.lang.SecurityException $r31;
        java.lang.Throwable $r32, $r33, $r34, $r35;
        android.os.IBinder r36;
        java.io.FileDescriptor[] r37;
        com.android.internal.midi.MidiDispatcher r38;
        android.media.midi.MidiDeviceServer$OutputPortClient r39;

        r0 := @this: android.media.midi.MidiDeviceServer$1;

        r36 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $r3 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r4 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceInfo access$600(android.media.midi.MidiDeviceServer)>($r3);

        $z0 = virtualinvoke $r4.<android.media.midi.MidiDeviceInfo: boolean isPrivate()>();

        if $z0 == 0 goto label02;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i6 = staticinvoke <android.os.Process: int myUid()>();

        if $i5 != $i6 goto label01;

        goto label02;

     label01:
        $r31 = new java.lang.SecurityException;

        specialinvoke $r31.<java.lang.SecurityException: void <init>(java.lang.String)>("Can\'t access private device from different UID");

        throw $r31;

     label02:
        if i0 < 0 goto label21;

        $r9 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $i3 = staticinvoke <android.media.midi.MidiDeviceServer: int access$1100(android.media.midi.MidiDeviceServer)>($r9);

        if i0 < $i3 goto label03;

        goto label21;

     label03:
        r37 = staticinvoke <android.media.midi.MidiDeviceServer: java.io.FileDescriptor[] access$800()>();

        r1 = new android.media.midi.MidiInputPort;

        $r10 = r37[0];

        specialinvoke r1.<android.media.midi.MidiInputPort: void <init>(java.io.FileDescriptor,int)>($r10, i0);

        $r11 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r12 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceInfo access$600(android.media.midi.MidiDeviceServer)>($r11);

        $i4 = virtualinvoke $r12.<android.media.midi.MidiDeviceInfo: int getType()>();

        if $i4 == 2 goto label04;

        $r30 = r37[0];

        staticinvoke <libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>($r30, 0);

     label04:
        $r13 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r14 = staticinvoke <android.media.midi.MidiDeviceServer: com.android.internal.midi.MidiDispatcher[] access$300(android.media.midi.MidiDeviceServer)>($r13);

        r38 = $r14[i0];

        entermonitor r38;

     label05:
        $r15 = virtualinvoke r38.<com.android.internal.midi.MidiDispatcher: android.media.midi.MidiSender getSender()>();

        virtualinvoke $r15.<android.media.midi.MidiSender: void connect(android.media.midi.MidiReceiver)>(r1);

        i1 = virtualinvoke r38.<com.android.internal.midi.MidiDispatcher: int getReceiverCount()>();

        $r16 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r17 = staticinvoke <android.media.midi.MidiDeviceServer: int[] access$400(android.media.midi.MidiDeviceServer)>($r16);

        $r17[i0] = i1;

        $r18 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        staticinvoke <android.media.midi.MidiDeviceServer: void access$200(android.media.midi.MidiDeviceServer)>($r18);

        exitmonitor r38;

     label06:
        $r19 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r20 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.concurrent.CopyOnWriteArrayList access$500(android.media.midi.MidiDeviceServer)>($r19);

        virtualinvoke $r20.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        r39 = new android.media.midi.MidiDeviceServer$OutputPortClient;

        $r21 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        specialinvoke r39.<android.media.midi.MidiDeviceServer$OutputPortClient: void <init>(android.media.midi.MidiDeviceServer,android.os.IBinder,android.media.midi.MidiInputPort)>($r21, r36, r1);

        $r22 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        r2 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1000(android.media.midi.MidiDeviceServer)>($r22);

        entermonitor r2;

     label07:
        $r23 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r24 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1000(android.media.midi.MidiDeviceServer)>($r23);

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r36, r39);

        exitmonitor r2;

     label08:
        $r26 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        r40 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1200(android.media.midi.MidiDeviceServer)>($r26);

        entermonitor r40;

     label09:
        $r27 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r28 = staticinvoke <android.media.midi.MidiDeviceServer: java.util.HashMap access$1200(android.media.midi.MidiDeviceServer)>($r27);

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r39);

        exitmonitor r40;

     label10:
        r41 = r37[1];

        return r41;

     label11:
        $r33 := @caughtexception;

     label12:
        exitmonitor r40;

     label13:
        throw $r33;

     label14:
        $r32 := @caughtexception;

     label15:
        exitmonitor r2;

     label16:
        throw $r32;

     label17:
        $r35 := @caughtexception;

     label18:
        exitmonitor r38;

     label19:
        throw $r35;

     label20:
        $r34 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiDeviceServer", "unable to create FileDescriptors in openOutputPort");

        return null;

     label21:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("portNumber out of range in openOutputPort: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiDeviceServer", $r8);

        return null;

        catch java.io.IOException from label03 to label04 with label20;
        catch java.io.IOException from label04 to label05 with label20;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.io.IOException from label06 to label07 with label20;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.io.IOException from label08 to label09 with label20;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.io.IOException from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.io.IOException from label19 to label20 with label20;
    }

    public void setDeviceInfo(android.media.midi.MidiDeviceInfo)
    {
        android.media.midi.MidiDeviceServer$1 r0;
        android.media.midi.MidiDeviceInfo r1, $r4;
        int $i0;
        java.lang.SecurityException $r2;
        android.media.midi.MidiDeviceServer $r3, $r6;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.media.midi.MidiDeviceServer$1;

        r1 := @parameter0: android.media.midi.MidiDeviceInfo;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 1000 goto label2;

        $r3 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        $r4 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceInfo access$600(android.media.midi.MidiDeviceServer)>($r3);

        if $r4 != null goto label1;

        $r6 = r0.<android.media.midi.MidiDeviceServer$1: android.media.midi.MidiDeviceServer this$0>;

        staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceInfo access$602(android.media.midi.MidiDeviceServer,android.media.midi.MidiDeviceInfo)>($r6, r1);

        return;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDeviceInfo should only be called once");

        throw $r5;

     label2:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("setDeviceInfo should only be called by MidiService");

        throw $r2;
    }
}
