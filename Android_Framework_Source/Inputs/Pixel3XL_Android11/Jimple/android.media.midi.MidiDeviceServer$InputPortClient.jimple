class android.media.midi.MidiDeviceServer$InputPortClient extends android.media.midi.MidiDeviceServer$PortClient
{
    private final android.media.midi.MidiOutputPort mOutputPort;
    final android.media.midi.MidiDeviceServer this$0;

    void <init>(android.media.midi.MidiDeviceServer, android.os.IBinder, android.media.midi.MidiOutputPort)
    {
        android.media.midi.MidiDeviceServer$InputPortClient r0;
        android.media.midi.MidiDeviceServer r1;
        android.os.IBinder r2;
        android.media.midi.MidiOutputPort r3;

        r0 := @this: android.media.midi.MidiDeviceServer$InputPortClient;

        r1 := @parameter0: android.media.midi.MidiDeviceServer;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.media.midi.MidiOutputPort;

        r0.<android.media.midi.MidiDeviceServer$InputPortClient: android.media.midi.MidiDeviceServer this$0> = r1;

        specialinvoke r0.<android.media.midi.MidiDeviceServer$PortClient: void <init>(android.media.midi.MidiDeviceServer,android.os.IBinder)>(r1, r2);

        r0.<android.media.midi.MidiDeviceServer$InputPortClient: android.media.midi.MidiOutputPort mOutputPort> = r3;

        return;
    }

    void close()
    {
        android.media.midi.MidiDeviceServer$InputPortClient r0;
        android.media.midi.MidiOutputPort[] r1, $r7;
        int i0;
        android.os.IBinder $r3;
        android.media.midi.MidiDeviceServer $r4, $r6, $r8, $r10;
        android.media.midi.MidiOutputPort $r5, $r11;
        boolean[] $r9;
        java.lang.Throwable $r12;

        r0 := @this: android.media.midi.MidiDeviceServer$InputPortClient;

        $r3 = r0.<android.media.midi.MidiDeviceServer$InputPortClient: android.os.IBinder mToken>;

        interfaceinvoke $r3.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        $r4 = r0.<android.media.midi.MidiDeviceServer$InputPortClient: android.media.midi.MidiDeviceServer this$0>;

        r1 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiOutputPort[] access$000(android.media.midi.MidiDeviceServer)>($r4);

        entermonitor r1;

     label1:
        $r5 = r0.<android.media.midi.MidiDeviceServer$InputPortClient: android.media.midi.MidiOutputPort mOutputPort>;

        i0 = virtualinvoke $r5.<android.media.midi.MidiOutputPort: int getPortNumber()>();

        $r6 = r0.<android.media.midi.MidiDeviceServer$InputPortClient: android.media.midi.MidiDeviceServer this$0>;

        $r7 = staticinvoke <android.media.midi.MidiDeviceServer: android.media.midi.MidiOutputPort[] access$000(android.media.midi.MidiDeviceServer)>($r6);

        $r7[i0] = null;

        $r8 = r0.<android.media.midi.MidiDeviceServer$InputPortClient: android.media.midi.MidiDeviceServer this$0>;

        $r9 = staticinvoke <android.media.midi.MidiDeviceServer: boolean[] access$100(android.media.midi.MidiDeviceServer)>($r8);

        $r9[i0] = 0;

        $r10 = r0.<android.media.midi.MidiDeviceServer$InputPortClient: android.media.midi.MidiDeviceServer this$0>;

        staticinvoke <android.media.midi.MidiDeviceServer: void access$200(android.media.midi.MidiDeviceServer)>($r10);

        exitmonitor r1;

     label2:
        $r11 = r0.<android.media.midi.MidiDeviceServer$InputPortClient: android.media.midi.MidiOutputPort mOutputPort>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r11);

        return;

     label3:
        $r12 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
