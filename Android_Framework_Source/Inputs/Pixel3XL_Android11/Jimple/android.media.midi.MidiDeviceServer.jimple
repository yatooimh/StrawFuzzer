public final class android.media.midi.MidiDeviceServer extends java.lang.Object implements java.io.Closeable
{
    private static final java.lang.String TAG;
    private final android.media.midi.MidiDeviceServer$Callback mCallback;
    private android.media.midi.MidiDeviceInfo mDeviceInfo;
    private final dalvik.system.CloseGuard mGuard;
    private final java.util.HashMap mInputPortClients;
    private final int mInputPortCount;
    private final com.android.internal.midi.MidiDispatcher$MidiReceiverFailureHandler mInputPortFailureHandler;
    private final boolean[] mInputPortOpen;
    private final android.media.midi.MidiOutputPort[] mInputPortOutputPorts;
    private final android.media.midi.MidiReceiver[] mInputPortReceivers;
    private final java.util.concurrent.CopyOnWriteArrayList mInputPorts;
    private boolean mIsClosed;
    private final android.media.midi.IMidiManager mMidiManager;
    private final int mOutputPortCount;
    private com.android.internal.midi.MidiDispatcher[] mOutputPortDispatchers;
    private final int[] mOutputPortOpenCount;
    private final java.util.HashMap mPortClients;
    private final android.media.midi.IMidiDeviceServer mServer;

    void <init>(android.media.midi.IMidiManager, android.media.midi.MidiReceiver[], int, android.media.midi.MidiDeviceServer$Callback)
    {
        android.media.midi.MidiDeviceServer r0;
        android.media.midi.IMidiManager r1;
        android.media.midi.MidiReceiver[] r2;
        int i0, $i1, i2, i3;
        android.media.midi.MidiDeviceServer$Callback r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        dalvik.system.CloseGuard $r5, $r14;
        java.util.HashMap $r6, $r7;
        android.media.midi.MidiDeviceServer$1 $r8;
        android.media.midi.MidiDeviceServer$2 $r9;
        android.media.midi.MidiOutputPort[] $r10;
        com.android.internal.midi.MidiDispatcher[] $r11, $r17;
        boolean[] $r12;
        int[] $r13;
        com.android.internal.midi.MidiDispatcher $r15;
        com.android.internal.midi.MidiDispatcher$MidiReceiverFailureHandler $r16;

        r0 := @this: android.media.midi.MidiDeviceServer;

        r1 := @parameter0: android.media.midi.IMidiManager;

        r2 := @parameter1: android.media.midi.MidiReceiver[];

        i0 := @parameter2: int;

        r3 := @parameter3: android.media.midi.MidiDeviceServer$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.media.midi.MidiDeviceServer: java.util.concurrent.CopyOnWriteArrayList mInputPorts> = $r4;

        $r5 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.media.midi.MidiDeviceServer: dalvik.system.CloseGuard mGuard> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<android.media.midi.MidiDeviceServer: java.util.HashMap mPortClients> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<android.media.midi.MidiDeviceServer: java.util.HashMap mInputPortClients> = $r7;

        $r8 = new android.media.midi.MidiDeviceServer$1;

        specialinvoke $r8.<android.media.midi.MidiDeviceServer$1: void <init>(android.media.midi.MidiDeviceServer)>(r0);

        r0.<android.media.midi.MidiDeviceServer: android.media.midi.IMidiDeviceServer mServer> = $r8;

        $r9 = new android.media.midi.MidiDeviceServer$2;

        specialinvoke $r9.<android.media.midi.MidiDeviceServer$2: void <init>(android.media.midi.MidiDeviceServer)>(r0);

        r0.<android.media.midi.MidiDeviceServer: com.android.internal.midi.MidiDispatcher$MidiReceiverFailureHandler mInputPortFailureHandler> = $r9;

        r0.<android.media.midi.MidiDeviceServer: android.media.midi.IMidiManager mMidiManager> = r1;

        r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiReceiver[] mInputPortReceivers> = r2;

        i2 = lengthof r2;

        r0.<android.media.midi.MidiDeviceServer: int mInputPortCount> = i2;

        r0.<android.media.midi.MidiDeviceServer: int mOutputPortCount> = i0;

        r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceServer$Callback mCallback> = r3;

        $r10 = newarray (android.media.midi.MidiOutputPort)[i2];

        r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiOutputPort[] mInputPortOutputPorts> = $r10;

        $r11 = newarray (com.android.internal.midi.MidiDispatcher)[i0];

        r0.<android.media.midi.MidiDeviceServer: com.android.internal.midi.MidiDispatcher[] mOutputPortDispatchers> = $r11;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r17 = r0.<android.media.midi.MidiDeviceServer: com.android.internal.midi.MidiDispatcher[] mOutputPortDispatchers>;

        $r15 = new com.android.internal.midi.MidiDispatcher;

        $r16 = r0.<android.media.midi.MidiDeviceServer: com.android.internal.midi.MidiDispatcher$MidiReceiverFailureHandler mInputPortFailureHandler>;

        specialinvoke $r15.<com.android.internal.midi.MidiDispatcher: void <init>(com.android.internal.midi.MidiDispatcher$MidiReceiverFailureHandler)>($r16);

        $r17[i3] = $r15;

        i3 = i3 + 1;

        goto label1;

     label2:
        $i1 = r0.<android.media.midi.MidiDeviceServer: int mInputPortCount>;

        $r12 = newarray (boolean)[$i1];

        r0.<android.media.midi.MidiDeviceServer: boolean[] mInputPortOpen> = $r12;

        $r13 = newarray (int)[i0];

        r0.<android.media.midi.MidiDeviceServer: int[] mOutputPortOpenCount> = $r13;

        $r14 = r0.<android.media.midi.MidiDeviceServer: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r14.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;
    }

    void <init>(android.media.midi.IMidiManager, android.media.midi.MidiReceiver[], android.media.midi.MidiDeviceInfo, android.media.midi.MidiDeviceServer$Callback)
    {
        android.media.midi.MidiDeviceServer r0;
        android.media.midi.IMidiManager r1;
        android.media.midi.MidiReceiver[] r2;
        android.media.midi.MidiDeviceInfo r3;
        android.media.midi.MidiDeviceServer$Callback r4;
        int $i0;

        r0 := @this: android.media.midi.MidiDeviceServer;

        r1 := @parameter0: android.media.midi.IMidiManager;

        r2 := @parameter1: android.media.midi.MidiReceiver[];

        r3 := @parameter2: android.media.midi.MidiDeviceInfo;

        r4 := @parameter3: android.media.midi.MidiDeviceServer$Callback;

        $i0 = virtualinvoke r3.<android.media.midi.MidiDeviceInfo: int getOutputPortCount()>();

        specialinvoke r0.<android.media.midi.MidiDeviceServer: void <init>(android.media.midi.IMidiManager,android.media.midi.MidiReceiver[],int,android.media.midi.MidiDeviceServer$Callback)>(r1, r2, $i0, r4);

        r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceInfo mDeviceInfo> = r3;

        return;
    }

    static android.media.midi.MidiOutputPort[] access$000(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        android.media.midi.MidiOutputPort[] $r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiOutputPort[] mInputPortOutputPorts>;

        return $r1;
    }

    static boolean[] access$100(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        boolean[] $r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: boolean[] mInputPortOpen>;

        return $r1;
    }

    static java.util.HashMap access$1000(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        java.util.HashMap $r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: java.util.HashMap mPortClients>;

        return $r1;
    }

    static int access$1100(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        int $i0;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $i0 = r0.<android.media.midi.MidiDeviceServer: int mOutputPortCount>;

        return $i0;
    }

    static java.util.HashMap access$1200(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        java.util.HashMap $r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: java.util.HashMap mInputPortClients>;

        return $r1;
    }

    static android.media.midi.MidiDeviceServer$Callback access$1300(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        android.media.midi.MidiDeviceServer$Callback $r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceServer$Callback mCallback>;

        return $r1;
    }

    static void access$200(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        specialinvoke r0.<android.media.midi.MidiDeviceServer: void updateDeviceStatus()>();

        return;
    }

    static com.android.internal.midi.MidiDispatcher[] access$300(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        com.android.internal.midi.MidiDispatcher[] $r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: com.android.internal.midi.MidiDispatcher[] mOutputPortDispatchers>;

        return $r1;
    }

    static int[] access$400(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        int[] $r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: int[] mOutputPortOpenCount>;

        return $r1;
    }

    static java.util.concurrent.CopyOnWriteArrayList access$500(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: java.util.concurrent.CopyOnWriteArrayList mInputPorts>;

        return $r1;
    }

    static android.media.midi.MidiDeviceInfo access$600(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        android.media.midi.MidiDeviceInfo $r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceInfo mDeviceInfo>;

        return $r1;
    }

    static android.media.midi.MidiDeviceInfo access$602(android.media.midi.MidiDeviceServer, android.media.midi.MidiDeviceInfo)
    {
        android.media.midi.MidiDeviceServer r0;
        android.media.midi.MidiDeviceInfo r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        r1 := @parameter1: android.media.midi.MidiDeviceInfo;

        r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceInfo mDeviceInfo> = r1;

        return r1;
    }

    static int access$700(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        int $i0;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $i0 = r0.<android.media.midi.MidiDeviceServer: int mInputPortCount>;

        return $i0;
    }

    static java.io.FileDescriptor[] access$800() throws java.io.IOException
    {
        java.io.FileDescriptor[] $r0;

        $r0 = staticinvoke <android.media.midi.MidiDeviceServer: java.io.FileDescriptor[] createSeqPacketSocketPair()>();

        return $r0;
    }

    static android.media.midi.MidiReceiver[] access$900(android.media.midi.MidiDeviceServer)
    {
        android.media.midi.MidiDeviceServer r0;
        android.media.midi.MidiReceiver[] $r1;

        r0 := @parameter0: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiReceiver[] mInputPortReceivers>;

        return $r1;
    }

    private static java.io.FileDescriptor[] createSeqPacketSocketPair() throws java.io.IOException
    {
        int $i0, $i1;
        java.io.FileDescriptor[] $r1;
        java.lang.Throwable $r2;
        java.io.IOException $r3;
        java.io.FileDescriptor r6, r7;
        android.system.ErrnoException r8;

     label1:
        r6 = new java.io.FileDescriptor;

        specialinvoke r6.<java.io.FileDescriptor: void <init>()>();

        r7 = new java.io.FileDescriptor;

        specialinvoke r7.<java.io.FileDescriptor: void <init>()>();

        $i1 = <android.system.OsConstants: int AF_UNIX>;

        $i0 = <android.system.OsConstants: int SOCK_SEQPACKET>;

        staticinvoke <android.system.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>($i1, $i0, 0, r6, r7);

     label2:
        $r1 = newarray (java.io.FileDescriptor)[2];

        $r1[0] = r6;

        $r1[1] = r7;

        return $r1;

     label3:
        $r2 := @caughtexception;

        r8 = (android.system.ErrnoException) $r2;

        $r3 = virtualinvoke r8.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r3;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    private void updateDeviceStatus()
    {
        android.media.midi.MidiDeviceServer r0;
        long l0;
        android.media.midi.MidiDeviceStatus $r2;
        int[] $r3;
        boolean[] $r4;
        android.media.midi.MidiDeviceInfo $r5;
        android.media.midi.IMidiDeviceServer $r6;
        android.media.midi.IMidiManager $r7;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        android.media.midi.MidiDeviceServer$Callback r10;

        r0 := @this: android.media.midi.MidiDeviceServer;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r2 = new android.media.midi.MidiDeviceStatus;

        $r5 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceInfo mDeviceInfo>;

        $r4 = r0.<android.media.midi.MidiDeviceServer: boolean[] mInputPortOpen>;

        $r3 = r0.<android.media.midi.MidiDeviceServer: int[] mOutputPortOpenCount>;

        specialinvoke $r2.<android.media.midi.MidiDeviceStatus: void <init>(android.media.midi.MidiDeviceInfo,boolean[],int[])>($r5, $r4, $r3);

        r10 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiDeviceServer$Callback mCallback>;

        if r10 == null goto label1;

        interfaceinvoke r10.<android.media.midi.MidiDeviceServer$Callback: void onDeviceStatusChanged(android.media.midi.MidiDeviceServer,android.media.midi.MidiDeviceStatus)>(r0, $r2);

     label1:
        $r7 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.IMidiManager mMidiManager>;

        $r6 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.IMidiDeviceServer mServer>;

        interfaceinvoke $r7.<android.media.midi.IMidiManager: void setDeviceStatus(android.media.midi.IMidiDeviceServer,android.media.midi.MidiDeviceStatus)>($r6, $r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label7;

     label3:
        $r9 := @caughtexception;

        goto label8;

     label4:
        $r8 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiDeviceServer", "RemoteException in updateDeviceStatus");

     label6:
        goto label2;

     label7:
        return;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public android.os.IBinder asBinder()
    {
        android.media.midi.MidiDeviceServer r0;
        android.media.midi.IMidiDeviceServer $r1;
        android.os.IBinder $r2;

        r0 := @this: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.IMidiDeviceServer mServer>;

        $r2 = interfaceinvoke $r1.<android.media.midi.IMidiDeviceServer: android.os.IBinder asBinder()>();

        return $r2;
    }

    public void close() throws java.io.IOException
    {
        android.media.midi.MidiDeviceServer r0;
        dalvik.system.CloseGuard r1, $r2;
        boolean $z0, $z1;
        int $i0, i2;
        java.util.concurrent.CopyOnWriteArrayList $r3, $r4;
        android.media.midi.IMidiDeviceServer $r5;
        android.media.midi.IMidiManager $r6;
        java.lang.Object $r7;
        android.media.midi.MidiInputPort $r8;
        android.media.midi.MidiOutputPort[] $r9, $r10;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12;
        android.media.midi.MidiOutputPort r13;
        java.util.Iterator r14;

        r0 := @this: android.media.midi.MidiDeviceServer;

        r1 = r0.<android.media.midi.MidiDeviceServer: dalvik.system.CloseGuard mGuard>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.media.midi.MidiDeviceServer: boolean mIsClosed>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r2 = r0.<android.media.midi.MidiDeviceServer: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void close()>();

     label04:
        i2 = 0;

     label05:
        $i0 = r0.<android.media.midi.MidiDeviceServer: int mInputPortCount>;

        if i2 >= $i0 goto label09;

        $r9 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiOutputPort[] mInputPortOutputPorts>;

        r13 = $r9[i2];

     label06:
        if r13 == null goto label08;

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r13);

        $r10 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.MidiOutputPort[] mInputPortOutputPorts>;

        $r10[i2] = null;

     label08:
        i2 = i2 + 1;

        goto label05;

     label09:
        $r3 = r0.<android.media.midi.MidiDeviceServer: java.util.concurrent.CopyOnWriteArrayList mInputPorts>;

        r14 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r7 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.media.midi.MidiInputPort) $r7;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r8);

     label11:
        goto label10;

     label12:
        $r4 = r0.<android.media.midi.MidiDeviceServer: java.util.concurrent.CopyOnWriteArrayList mInputPorts>;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void clear()>();

     label13:
        $r6 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.IMidiManager mMidiManager>;

        $r5 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.IMidiDeviceServer mServer>;

        interfaceinvoke $r6.<android.media.midi.IMidiManager: void unregisterDeviceServer(android.media.midi.IMidiDeviceServer)>($r5);

     label14:
        goto label17;

     label15:
        $r12 := @caughtexception;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiDeviceServer", "RemoteException in unregisterDeviceServer");

     label17:
        r0.<android.media.midi.MidiDeviceServer: boolean mIsClosed> = 1;

        exitmonitor r1;

     label18:
        return;

     label19:
        $r11 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.midi.MidiDeviceServer r0;
        dalvik.system.CloseGuard $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.media.midi.MidiDeviceServer;

     label1:
        $r2 = r0.<android.media.midi.MidiDeviceServer: dalvik.system.CloseGuard mGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.media.midi.MidiDeviceServer: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        virtualinvoke r0.<android.media.midi.MidiDeviceServer: void close()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    android.media.midi.IMidiDeviceServer getBinderInterface()
    {
        android.media.midi.MidiDeviceServer r0;
        android.media.midi.IMidiDeviceServer $r1;

        r0 := @this: android.media.midi.MidiDeviceServer;

        $r1 = r0.<android.media.midi.MidiDeviceServer: android.media.midi.IMidiDeviceServer mServer>;

        return $r1;
    }

    public android.media.midi.MidiReceiver[] getOutputPortReceivers()
    {
        android.media.midi.MidiDeviceServer r0;
        int i0;
        android.media.midi.MidiReceiver[] r1;
        com.android.internal.midi.MidiDispatcher[] $r2;

        r0 := @this: android.media.midi.MidiDeviceServer;

        i0 = r0.<android.media.midi.MidiDeviceServer: int mOutputPortCount>;

        r1 = newarray (android.media.midi.MidiReceiver)[i0];

        $r2 = r0.<android.media.midi.MidiDeviceServer: com.android.internal.midi.MidiDispatcher[] mOutputPortDispatchers>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, i0);

        return r1;
    }

    public static void <clinit>()
    {
        <android.media.midi.MidiDeviceServer: java.lang.String TAG> = "MidiDeviceServer";

        return;
    }
}
