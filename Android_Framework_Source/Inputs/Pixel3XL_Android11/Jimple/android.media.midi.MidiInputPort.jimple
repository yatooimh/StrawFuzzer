public final class android.media.midi.MidiInputPort extends android.media.midi.MidiReceiver implements java.io.Closeable
{
    private static final java.lang.String TAG;
    private final byte[] mBuffer;
    private android.media.midi.IMidiDeviceServer mDeviceServer;
    private java.io.FileDescriptor mFileDescriptor;
    private final dalvik.system.CloseGuard mGuard;
    private boolean mIsClosed;
    private java.io.FileOutputStream mOutputStream;
    private final int mPortNumber;
    private final android.os.IBinder mToken;

    void <init>(android.media.midi.IMidiDeviceServer, android.os.IBinder, java.io.FileDescriptor, int)
    {
        android.media.midi.MidiInputPort r0;
        android.media.midi.IMidiDeviceServer r1;
        android.os.IBinder r2;
        java.io.FileDescriptor r3;
        int i0;
        dalvik.system.CloseGuard $r4, $r7;
        byte[] $r5;
        java.io.FileOutputStream $r6;

        r0 := @this: android.media.midi.MidiInputPort;

        r1 := @parameter0: android.media.midi.IMidiDeviceServer;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.io.FileDescriptor;

        i0 := @parameter3: int;

        specialinvoke r0.<android.media.midi.MidiReceiver: void <init>(int)>(1015);

        $r4 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.media.midi.MidiInputPort: dalvik.system.CloseGuard mGuard> = $r4;

        $r5 = newarray (byte)[1024];

        r0.<android.media.midi.MidiInputPort: byte[] mBuffer> = $r5;

        r0.<android.media.midi.MidiInputPort: android.media.midi.IMidiDeviceServer mDeviceServer> = r1;

        r0.<android.media.midi.MidiInputPort: android.os.IBinder mToken> = r2;

        r0.<android.media.midi.MidiInputPort: java.io.FileDescriptor mFileDescriptor> = r3;

        r0.<android.media.midi.MidiInputPort: int mPortNumber> = i0;

        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r3);

        r0.<android.media.midi.MidiInputPort: java.io.FileOutputStream mOutputStream> = $r6;

        $r7 = r0.<android.media.midi.MidiInputPort: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r7.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;
    }

    void <init>(java.io.FileDescriptor, int)
    {
        android.media.midi.MidiInputPort r0;
        java.io.FileDescriptor r1;
        int i0;

        r0 := @this: android.media.midi.MidiInputPort;

        r1 := @parameter0: java.io.FileDescriptor;

        i0 := @parameter1: int;

        specialinvoke r0.<android.media.midi.MidiInputPort: void <init>(android.media.midi.IMidiDeviceServer,android.os.IBinder,java.io.FileDescriptor,int)>(null, null, r1, i0);

        return;
    }

    java.io.FileDescriptor claimFileDescriptor()
    {
        android.media.midi.MidiInputPort r0;
        dalvik.system.CloseGuard r1;
        java.io.FileOutputStream $r2;
        java.lang.Throwable $r3, $r4;
        byte[] r5;
        java.io.FileDescriptor r6;

        r0 := @this: android.media.midi.MidiInputPort;

        r1 = r0.<android.media.midi.MidiInputPort: dalvik.system.CloseGuard mGuard>;

        entermonitor r1;

     label01:
        r5 = r0.<android.media.midi.MidiInputPort: byte[] mBuffer>;

        entermonitor r5;

     label02:
        r6 = r0.<android.media.midi.MidiInputPort: java.io.FileDescriptor mFileDescriptor>;

     label03:
        if r6 != null goto label07;

     label04:
        exitmonitor r5;

     label05:
        exitmonitor r1;

     label06:
        return null;

     label07:
        $r2 = r0.<android.media.midi.MidiInputPort: java.io.FileOutputStream mOutputStream>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r2);

        r0.<android.media.midi.MidiInputPort: java.io.FileDescriptor mFileDescriptor> = null;

        r0.<android.media.midi.MidiInputPort: java.io.FileOutputStream mOutputStream> = null;

        exitmonitor r5;

     label08:
        r0.<android.media.midi.MidiInputPort: boolean mIsClosed> = 1;

        exitmonitor r1;

     label09:
        return r6;

     label10:
        $r3 := @caughtexception;

     label11:
        exitmonitor r5;

     label12:
        throw $r3;

     label13:
        $r4 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void close() throws java.io.IOException
    {
        android.media.midi.MidiInputPort r0;
        dalvik.system.CloseGuard r1, $r3;
        boolean $z0;
        java.io.FileDescriptor $r4, $r9;
        java.io.FileOutputStream $r5, $r8;
        android.os.IBinder $r6;
        android.media.midi.IMidiDeviceServer $r7, r14;
        java.lang.Throwable $r10, $r12;
        android.os.RemoteException $r11;
        byte[] r13;

        r0 := @this: android.media.midi.MidiInputPort;

        r1 = r0.<android.media.midi.MidiInputPort: dalvik.system.CloseGuard mGuard>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.media.midi.MidiInputPort: boolean mIsClosed>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r3 = r0.<android.media.midi.MidiInputPort: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void close()>();

        r13 = r0.<android.media.midi.MidiInputPort: byte[] mBuffer>;

        entermonitor r13;

     label04:
        $r4 = r0.<android.media.midi.MidiInputPort: java.io.FileDescriptor mFileDescriptor>;

        if $r4 == null goto label05;

        $r9 = r0.<android.media.midi.MidiInputPort: java.io.FileDescriptor mFileDescriptor>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r9);

        r0.<android.media.midi.MidiInputPort: java.io.FileDescriptor mFileDescriptor> = null;

     label05:
        $r5 = r0.<android.media.midi.MidiInputPort: java.io.FileOutputStream mOutputStream>;

        if $r5 == null goto label06;

        $r8 = r0.<android.media.midi.MidiInputPort: java.io.FileOutputStream mOutputStream>;

        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

        r0.<android.media.midi.MidiInputPort: java.io.FileOutputStream mOutputStream> = null;

     label06:
        exitmonitor r13;

     label07:
        r14 = r0.<android.media.midi.MidiInputPort: android.media.midi.IMidiDeviceServer mDeviceServer>;

     label08:
        if r14 == null goto label13;

     label09:
        $r7 = r0.<android.media.midi.MidiInputPort: android.media.midi.IMidiDeviceServer mDeviceServer>;

        $r6 = r0.<android.media.midi.MidiInputPort: android.os.IBinder mToken>;

        interfaceinvoke $r7.<android.media.midi.IMidiDeviceServer: void closePort(android.os.IBinder)>($r6);

     label10:
        goto label13;

     label11:
        $r11 := @caughtexception;

     label12:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MidiInputPort", "RemoteException in MidiInputPort.close()");

     label13:
        r0.<android.media.midi.MidiInputPort: boolean mIsClosed> = 1;

        exitmonitor r1;

     label14:
        return;

     label15:
        $r10 := @caughtexception;

     label16:
        exitmonitor r13;

     label17:
        throw $r10;

     label18:
        $r12 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.midi.MidiInputPort r0;
        dalvik.system.CloseGuard $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.media.midi.MidiInputPort;

     label1:
        $r2 = r0.<android.media.midi.MidiInputPort: dalvik.system.CloseGuard mGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.media.midi.MidiInputPort: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        r0.<android.media.midi.MidiInputPort: android.media.midi.IMidiDeviceServer mDeviceServer> = null;

        virtualinvoke r0.<android.media.midi.MidiInputPort: void close()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r4 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    android.media.midi.IMidiDeviceServer getDeviceServer()
    {
        android.media.midi.MidiInputPort r0;
        android.media.midi.IMidiDeviceServer $r1;

        r0 := @this: android.media.midi.MidiInputPort;

        $r1 = r0.<android.media.midi.MidiInputPort: android.media.midi.IMidiDeviceServer mDeviceServer>;

        return $r1;
    }

    public final int getPortNumber()
    {
        android.media.midi.MidiInputPort r0;
        int $i0;

        r0 := @this: android.media.midi.MidiInputPort;

        $i0 = r0.<android.media.midi.MidiInputPort: int mPortNumber>;

        return $i0;
    }

    android.os.IBinder getToken()
    {
        android.media.midi.MidiInputPort r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.midi.MidiInputPort;

        $r1 = r0.<android.media.midi.MidiInputPort: android.os.IBinder mToken>;

        return $r1;
    }

    public void onFlush() throws java.io.IOException
    {
        android.media.midi.MidiInputPort r0;
        byte[] r1, $r3, $r4;
        int i0;
        java.io.FileOutputStream $r2, $r5;
        java.lang.Throwable $r6;
        java.io.IOException r7;

        r0 := @this: android.media.midi.MidiInputPort;

        r1 = r0.<android.media.midi.MidiInputPort: byte[] mBuffer>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.media.midi.MidiInputPort: java.io.FileOutputStream mOutputStream>;

        if $r2 == null goto label3;

        $r3 = r0.<android.media.midi.MidiInputPort: byte[] mBuffer>;

        i0 = staticinvoke <android.media.midi.MidiPortImpl: int packFlush(byte[])>($r3);

        $r5 = r0.<android.media.midi.MidiInputPort: java.io.FileOutputStream mOutputStream>;

        $r4 = r0.<android.media.midi.MidiInputPort: byte[] mBuffer>;

        virtualinvoke $r5.<java.io.FileOutputStream: void write(byte[],int,int)>($r4, 0, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        r7 = new java.io.IOException;

        specialinvoke r7.<java.io.IOException: void <init>(java.lang.String)>("MidiInputPort is closed");

        throw r7;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onSend(byte[], int, int, long) throws java.io.IOException
    {
        android.media.midi.MidiInputPort r0;
        int i0, $i2, $i3, i4, i5;
        long l1;
        byte[] r1, $r4, $r5, r8;
        java.lang.IllegalArgumentException $r2, $r11;
        java.io.FileOutputStream $r3, $r6;
        java.lang.Throwable $r7;
        java.io.IOException r9;

        r0 := @this: android.media.midi.MidiInputPort;

        r8 := @parameter0: byte[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        if i4 < 0 goto label8;

        if i0 < 0 goto label8;

        $i3 = i4 + i0;

        $i2 = lengthof r8;

        if $i3 > $i2 goto label8;

        if i0 > 1015 goto label7;

        r1 = r0.<android.media.midi.MidiInputPort: byte[] mBuffer>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.midi.MidiInputPort: java.io.FileOutputStream mOutputStream>;

        if $r3 == null goto label3;

        $r4 = r0.<android.media.midi.MidiInputPort: byte[] mBuffer>;

        i5 = staticinvoke <android.media.midi.MidiPortImpl: int packData(byte[],int,int,long,byte[])>(r8, i4, i0, l1, $r4);

        $r6 = r0.<android.media.midi.MidiInputPort: java.io.FileOutputStream mOutputStream>;

        $r5 = r0.<android.media.midi.MidiInputPort: byte[] mBuffer>;

        virtualinvoke $r6.<java.io.FileOutputStream: void write(byte[],int,int)>($r5, 0, i5);

        exitmonitor r1;

     label2:
        return;

     label3:
        r9 = new java.io.IOException;

        specialinvoke r9.<java.io.IOException: void <init>(java.lang.String)>("MidiInputPort is closed");

        throw r9;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r7;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("count exceeds max message size");

        throw $r2;

     label8:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("offset or count out of range");

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <android.media.midi.MidiInputPort: java.lang.String TAG> = "MidiInputPort";

        return;
    }
}
