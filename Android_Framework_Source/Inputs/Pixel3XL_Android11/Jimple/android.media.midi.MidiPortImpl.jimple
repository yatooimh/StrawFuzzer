class android.media.midi.MidiPortImpl extends java.lang.Object
{
    private static final int DATA_PACKET_OVERHEAD;
    public static final int MAX_PACKET_DATA_SIZE;
    public static final int MAX_PACKET_SIZE;
    public static final int PACKET_TYPE_DATA;
    public static final int PACKET_TYPE_FLUSH;
    private static final java.lang.String TAG;
    private static final int TIMESTAMP_SIZE;

    void <init>()
    {
        android.media.midi.MidiPortImpl r0;

        r0 := @this: android.media.midi.MidiPortImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getDataOffset(byte[], int)
    {
        byte[] r0;
        int i0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        return 1;
    }

    public static int getDataSize(byte[], int)
    {
        byte[] r0;
        int i0, $i1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 - 9;

        return $i1;
    }

    public static long getPacketTimestamp(byte[], int)
    {
        byte[] r0;
        byte $b0;
        short $s1;
        long $l2, $l3, l6;
        int i4, i5, i7;

        r0 := @parameter0: byte[];

        i4 := @parameter1: int;

        i5 = i4;

        l6 = 0L;

        i7 = 0;

     label1:
        if i7 >= 8 goto label2;

        i5 = i5 + -1;

        $l3 = l6 << 8;

        $b0 = r0[i5];

        $s1 = $b0 & 255;

        $l2 = (long) $s1;

        l6 = $l3 | $l2;

        i7 = i7 + 1;

        goto label1;

     label2:
        return l6;
    }

    public static int getPacketType(byte[], int)
    {
        byte[] r0;
        int i0;
        byte $b1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[0];

        return $b1;
    }

    public static int packData(byte[], int, int, long, byte[])
    {
        byte[] r0, r1;
        byte $b0, $b2, $b3;
        int $i1, i4, i5, i7, i8, i9, i10;
        long l6;

        r0 := @parameter0: byte[];

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        l6 := @parameter3: long;

        r1 := @parameter4: byte[];

        i7 = i5;

        if i5 <= 1015 goto label1;

        i7 = 1015;

     label1:
        i8 = 0 + 1;

        $b0 = (byte) 1;

        r1[0] = $b0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i4, r1, i8, i7);

        i9 = i8 + i7;

        i10 = 0;

     label2:
        if i10 >= 8 goto label3;

        $i1 = (int) l6;

        $b2 = (byte) $i1;

        $b3 = (byte) $b2;

        r1[i9] = $b3;

        l6 = l6 >> 8;

        i10 = i10 + 1;

        i9 = i9 + 1;

        goto label2;

     label3:
        return i9;
    }

    public static int packFlush(byte[])
    {
        byte[] r0;
        byte $b0;

        r0 := @parameter0: byte[];

        $b0 = (byte) 2;

        r0[0] = $b0;

        return 1;
    }

    public static void <clinit>()
    {
        <android.media.midi.MidiPortImpl: int TIMESTAMP_SIZE> = 8;

        <android.media.midi.MidiPortImpl: java.lang.String TAG> = "MidiPort";

        <android.media.midi.MidiPortImpl: int PACKET_TYPE_FLUSH> = 2;

        <android.media.midi.MidiPortImpl: int PACKET_TYPE_DATA> = 1;

        <android.media.midi.MidiPortImpl: int MAX_PACKET_SIZE> = 1024;

        <android.media.midi.MidiPortImpl: int MAX_PACKET_DATA_SIZE> = 1015;

        <android.media.midi.MidiPortImpl: int DATA_PACKET_OVERHEAD> = 9;

        return;
    }
}
