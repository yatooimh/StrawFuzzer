public class android.media.projection.IMediaProjectionManager$Default extends java.lang.Object implements android.media.projection.IMediaProjectionManager
{

    public void <init>()
    {
        android.media.projection.IMediaProjectionManager$Default r0;

        r0 := @this: android.media.projection.IMediaProjectionManager$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addCallback(android.media.projection.IMediaProjectionWatcherCallback) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Default r0;
        android.media.projection.IMediaProjectionWatcherCallback r1;

        r0 := @this: android.media.projection.IMediaProjectionManager$Default;

        r1 := @parameter0: android.media.projection.IMediaProjectionWatcherCallback;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.projection.IMediaProjectionManager$Default r0;

        r0 := @this: android.media.projection.IMediaProjectionManager$Default;

        return null;
    }

    public android.media.projection.IMediaProjection createProjection(int, java.lang.String, int, boolean) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Default r0;
        int i0, i1;
        java.lang.String r1;
        boolean z0;

        r0 := @this: android.media.projection.IMediaProjectionManager$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        return null;
    }

    public android.media.projection.MediaProjectionInfo getActiveProjectionInfo() throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Default r0;

        r0 := @this: android.media.projection.IMediaProjectionManager$Default;

        return null;
    }

    public boolean hasProjectionPermission(int, java.lang.String) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.media.projection.IMediaProjectionManager$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public boolean isValidMediaProjection(android.media.projection.IMediaProjection) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Default r0;
        android.media.projection.IMediaProjection r1;

        r0 := @this: android.media.projection.IMediaProjectionManager$Default;

        r1 := @parameter0: android.media.projection.IMediaProjection;

        return 0;
    }

    public void removeCallback(android.media.projection.IMediaProjectionWatcherCallback) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Default r0;
        android.media.projection.IMediaProjectionWatcherCallback r1;

        r0 := @this: android.media.projection.IMediaProjectionManager$Default;

        r1 := @parameter0: android.media.projection.IMediaProjectionWatcherCallback;

        return;
    }

    public void stopActiveProjection() throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Default r0;

        r0 := @this: android.media.projection.IMediaProjectionManager$Default;

        return;
    }
}
