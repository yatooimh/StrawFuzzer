class android.media.projection.IMediaProjectionManager$Stub$Proxy extends java.lang.Object implements android.media.projection.IMediaProjectionManager
{
    public static android.media.projection.IMediaProjectionManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.projection.IMediaProjectionManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addCallback(android.media.projection.IMediaProjectionWatcherCallback) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.projection.IMediaProjectionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.projection.IMediaProjectionWatcherCallback r7;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub$Proxy;

        r7 := @parameter0: android.media.projection.IMediaProjectionWatcherCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.projection.IMediaProjectionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.projection.IMediaProjectionWatcherCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.projection.IMediaProjectionManager: void addCallback(android.media.projection.IMediaProjectionWatcherCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        android.media.projection.IMediaProjectionManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub$Proxy;

        $r1 = r0.<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.media.projection.IMediaProjection createProjection(int, java.lang.String, int, boolean) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        android.media.projection.IMediaProjectionManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        byte b2;
        android.media.projection.IMediaProjection r9, r10;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.media.projection.IMediaProjectionManager: android.media.projection.IMediaProjection createProjection(int,java.lang.String,int,boolean)>(i0, r8, i1, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r10 = staticinvoke <android.media.projection.IMediaProjection$Stub: android.media.projection.IMediaProjection asInterface(android.os.IBinder)>($r4);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public android.media.projection.MediaProjectionInfo getActiveProjectionInfo() throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.media.projection.IMediaProjectionManager $r6, $r7;
        java.lang.Throwable $r8;
        android.media.projection.MediaProjectionInfo r9, r10;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        $r3 = r0.<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.media.projection.IMediaProjectionManager: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.media.projection.MediaProjectionInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.media.projection.MediaProjectionInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.projection.IMediaProjectionManager$Stub$Proxy r0;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub$Proxy;

        return "android.media.projection.IMediaProjectionManager";
    }

    public boolean hasProjectionPermission(int, java.lang.String) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.media.projection.IMediaProjectionManager $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        java.lang.String r7;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.media.projection.IMediaProjectionManager: boolean hasProjectionPermission(int,java.lang.String)>(i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isValidMediaProjection(android.media.projection.IMediaProjection) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.projection.IMediaProjectionManager $r3, $r4;
        java.lang.Throwable $r5;
        android.media.projection.IMediaProjection r6;
        android.os.IBinder r7, r8;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub$Proxy;

        r6 := @parameter0: android.media.projection.IMediaProjection;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.projection.IMediaProjectionManager");

     label02:
        if r6 == null goto label05;

     label03:
        r7 = interfaceinvoke r6.<android.media.projection.IMediaProjection: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r7 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        r8 = r0.<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder mRemote>;

     label07:
        z1 = 0;

     label08:
        $z0 = interfaceinvoke r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label10;

        $r3 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        if $r3 == null goto label10;

        $r4 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.projection.IMediaProjectionManager: boolean isValidMediaProjection(android.media.projection.IMediaProjection)>(r6);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label11:
        if i0 == 0 goto label12;

        z1 = 1;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label13:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void removeCallback(android.media.projection.IMediaProjectionWatcherCallback) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.projection.IMediaProjectionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.projection.IMediaProjectionWatcherCallback r7;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub$Proxy;

        r7 := @parameter0: android.media.projection.IMediaProjectionWatcherCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.projection.IMediaProjectionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.projection.IMediaProjectionWatcherCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.projection.IMediaProjectionManager: void removeCallback(android.media.projection.IMediaProjectionWatcherCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void stopActiveProjection() throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.projection.IMediaProjectionManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        $r4 = r0.<android.media.projection.IMediaProjectionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjectionManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.projection.IMediaProjectionManager: void stopActiveProjection()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
