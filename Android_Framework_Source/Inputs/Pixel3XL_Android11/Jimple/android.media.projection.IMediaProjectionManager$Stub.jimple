public abstract class android.media.projection.IMediaProjectionManager$Stub extends android.os.Binder implements android.media.projection.IMediaProjectionManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addCallback;
    static final int TRANSACTION_createProjection;
    static final int TRANSACTION_getActiveProjectionInfo;
    static final int TRANSACTION_hasProjectionPermission;
    static final int TRANSACTION_isValidMediaProjection;
    static final int TRANSACTION_removeCallback;
    static final int TRANSACTION_stopActiveProjection;

    public void <init>()
    {
        android.media.projection.IMediaProjectionManager$Stub r0;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.media.projection.IMediaProjectionManager");

        return;
    }

    public static android.media.projection.IMediaProjectionManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.media.projection.IMediaProjectionManager$Stub$Proxy $r2;
        boolean $z0;
        android.media.projection.IMediaProjectionManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.media.projection.IMediaProjectionManager;

        if $z0 == 0 goto label2;

        $r3 = (android.media.projection.IMediaProjectionManager) r1;

        return $r3;

     label2:
        $r2 = new android.media.projection.IMediaProjectionManager$Stub$Proxy;

        specialinvoke $r2.<android.media.projection.IMediaProjectionManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.media.projection.IMediaProjectionManager getDefaultImpl()
    {
        android.media.projection.IMediaProjectionManager $r0;

        $r0 = <android.media.projection.IMediaProjectionManager$Stub$Proxy: android.media.projection.IMediaProjectionManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "removeCallback";

     label3:
        return "addCallback";

     label4:
        return "stopActiveProjection";

     label5:
        return "getActiveProjectionInfo";

     label6:
        return "isValidMediaProjection";

     label7:
        return "createProjection";

     label8:
        return "hasProjectionPermission";
    }

    public static boolean setDefaultImpl(android.media.projection.IMediaProjectionManager)
    {
        android.media.projection.IMediaProjectionManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.media.projection.IMediaProjectionManager;

        $r1 = <android.media.projection.IMediaProjectionManager$Stub$Proxy: android.media.projection.IMediaProjectionManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.media.projection.IMediaProjectionManager$Stub$Proxy: android.media.projection.IMediaProjectionManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.media.projection.IMediaProjectionManager$Stub r0;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.media.projection.IMediaProjectionManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.media.projection.IMediaProjectionManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Stub r0;
        android.os.Parcel r1, r10;
        java.lang.String r2, $r9;
        android.os.IBinder $r3, $r5, $r7, r13;
        android.media.projection.IMediaProjectionWatcherCallback $r4, $r6;
        android.media.projection.IMediaProjection $r8, r12;
        int $i0, $i1, i2, i3, i4, i5, i6, i7;
        boolean $z0, z1, z2, z3;
        android.media.projection.MediaProjectionInfo r11;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub;

        i2 := @parameter0: int;

        r10 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i3 := @parameter3: int;

        if i2 == 1598968902 goto label14;

        z1 = 0;

        tableswitch(i2)
        {
            case 1: goto label13;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i2, r10, r1, i3);

        return $z0;

     label02:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        $r3 = virtualinvoke r10.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r4 = staticinvoke <android.media.projection.IMediaProjectionWatcherCallback$Stub: android.media.projection.IMediaProjectionWatcherCallback asInterface(android.os.IBinder)>($r3);

        virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: void removeCallback(android.media.projection.IMediaProjectionWatcherCallback)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label03:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        $r5 = virtualinvoke r10.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r6 = staticinvoke <android.media.projection.IMediaProjectionWatcherCallback$Stub: android.media.projection.IMediaProjectionWatcherCallback asInterface(android.os.IBinder)>($r5);

        virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: void addCallback(android.media.projection.IMediaProjectionWatcherCallback)>($r6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label04:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: void stopActiveProjection()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label05:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        r11 = virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r11 == null goto label06;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r11.<android.media.projection.MediaProjectionInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label07;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        return 1;

     label08:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        $r7 = virtualinvoke r10.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r8 = staticinvoke <android.media.projection.IMediaProjection$Stub: android.media.projection.IMediaProjection asInterface(android.os.IBinder)>($r7);

        z2 = virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: boolean isValidMediaProjection(android.media.projection.IMediaProjection)>($r8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i6 = (int) z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

        return 1;

     label09:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        i4 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        r2 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        i5 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        $i0 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        z1 = 1;

     label10:
        r12 = virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjection createProjection(int,java.lang.String,int,boolean)>(i4, r2, i5, z1);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r12 == null goto label11;

        r13 = interfaceinvoke r12.<android.media.projection.IMediaProjection: android.os.IBinder asBinder()>();

        goto label12;

     label11:
        r13 = null;

     label12:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r13);

        return 1;

     label13:
        virtualinvoke r10.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        $i1 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        $r9 = virtualinvoke r10.<android.os.Parcel: java.lang.String readString()>();

        z3 = virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: boolean hasProjectionPermission(int,java.lang.String)>($i1, $r9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i7 = (int) z3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i7);

        return 1;

     label14:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_stopActiveProjection> = 5;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_removeCallback> = 7;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_isValidMediaProjection> = 3;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_hasProjectionPermission> = 1;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_getActiveProjectionInfo> = 4;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_createProjection> = 2;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_addCallback> = 6;

        <android.media.projection.IMediaProjectionManager$Stub: java.lang.String DESCRIPTOR> = "android.media.projection.IMediaProjectionManager";

        return;
    }
}
