class android.media.session.IOnMediaKeyListener$Stub$Proxy extends java.lang.Object implements android.media.session.IOnMediaKeyListener
{
    public static android.media.session.IOnMediaKeyListener sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.session.IOnMediaKeyListener$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.session.IOnMediaKeyListener$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.session.IOnMediaKeyListener$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.session.IOnMediaKeyListener$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.session.IOnMediaKeyListener$Stub$Proxy;

        $r1 = r0.<android.media.session.IOnMediaKeyListener$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.session.IOnMediaKeyListener$Stub$Proxy r0;

        r0 := @this: android.media.session.IOnMediaKeyListener$Stub$Proxy;

        return "android.media.session.IOnMediaKeyListener";
    }

    public void onMediaKey(android.view.KeyEvent, android.os.ResultReceiver) throws android.os.RemoteException
    {
        android.media.session.IOnMediaKeyListener$Stub$Proxy r0;
        android.os.ResultReceiver r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.session.IOnMediaKeyListener $r4, $r5;
        java.lang.Throwable $r6;
        android.view.KeyEvent r7;

        r0 := @this: android.media.session.IOnMediaKeyListener$Stub$Proxy;

        r7 := @parameter0: android.view.KeyEvent;

        r1 := @parameter1: android.os.ResultReceiver;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.IOnMediaKeyListener");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r3 = r0.<android.media.session.IOnMediaKeyListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.media.session.IOnMediaKeyListener$Stub: android.media.session.IOnMediaKeyListener getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.media.session.IOnMediaKeyListener$Stub: android.media.session.IOnMediaKeyListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.IOnMediaKeyListener: void onMediaKey(android.view.KeyEvent,android.os.ResultReceiver)>(r7, r1);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
