public class android.media.session.ISessionController$Default extends java.lang.Object implements android.media.session.ISessionController
{

    public void <init>()
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void adjustVolume(java.lang.String, java.lang.String, int, int) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1, r2;
        int i0, i1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public void fastForward(java.lang.String) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public android.os.Bundle getExtras() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public long getFlags() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return 0L;
    }

    public android.app.PendingIntent getLaunchPendingIntent() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public android.media.MediaMetadata getMetadata() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public java.lang.String getPackageName() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public android.media.session.PlaybackState getPlaybackState() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public android.content.pm.ParceledListSlice getQueue() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public java.lang.CharSequence getQueueTitle() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public int getRatingType() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return 0;
    }

    public android.os.Bundle getSessionInfo() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public java.lang.String getTag() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public android.media.session.MediaController$PlaybackInfo getVolumeAttributes() throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;

        r0 := @this: android.media.session.ISessionController$Default;

        return null;
    }

    public void next(java.lang.String) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void pause(java.lang.String) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void play(java.lang.String) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void playFromMediaId(java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void playFromSearch(java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void playFromUri(java.lang.String, android.net.Uri, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;
        android.net.Uri r2;
        android.os.Bundle r3;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void prepare(java.lang.String) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void prepareFromMediaId(java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void prepareFromSearch(java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void prepareFromUri(java.lang.String, android.net.Uri, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;
        android.net.Uri r2;
        android.os.Bundle r3;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void previous(java.lang.String) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void rate(java.lang.String, android.media.Rating) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;
        android.media.Rating r2;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.media.Rating;

        return;
    }

    public void registerCallback(java.lang.String, android.media.session.ISessionControllerCallback) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;
        android.media.session.ISessionControllerCallback r2;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.media.session.ISessionControllerCallback;

        return;
    }

    public void rewind(java.lang.String) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void seekTo(java.lang.String, long) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;
        long l0;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        return;
    }

    public void sendCommand(java.lang.String, java.lang.String, android.os.Bundle, android.os.ResultReceiver) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;
        android.os.ResultReceiver r4;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.ResultReceiver;

        return;
    }

    public void sendCustomAction(java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public boolean sendMediaButton(java.lang.String, android.view.KeyEvent) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;
        android.view.KeyEvent r2;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public void setPlaybackSpeed(java.lang.String, float) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;
        float f0;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        return;
    }

    public void setVolumeTo(java.lang.String, java.lang.String, int, int) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1, r2;
        int i0, i1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }

    public void skipToQueueItem(java.lang.String, long) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;
        long l0;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        return;
    }

    public void stop(java.lang.String) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        java.lang.String r1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void unregisterCallback(android.media.session.ISessionControllerCallback) throws android.os.RemoteException
    {
        android.media.session.ISessionController$Default r0;
        android.media.session.ISessionControllerCallback r1;

        r0 := @this: android.media.session.ISessionController$Default;

        r1 := @parameter0: android.media.session.ISessionControllerCallback;

        return;
    }
}
