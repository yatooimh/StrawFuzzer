class android.media.session.ISessionControllerCallback$Stub$Proxy extends java.lang.Object implements android.media.session.ISessionControllerCallback
{
    public static android.media.session.ISessionControllerCallback sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        $r1 = r0.<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        return "android.media.session.ISessionControllerCallback";
    }

    public void onEvent(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.session.ISessionControllerCallback $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionControllerCallback");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionControllerCallback: void onEvent(java.lang.String,android.os.Bundle)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onExtrasChanged(android.os.Bundle) throws android.os.RemoteException
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.session.ISessionControllerCallback $r3, $r4;
        java.lang.Throwable $r5;
        android.os.Bundle r6;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        r6 := @parameter0: android.os.Bundle;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionControllerCallback");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.session.ISessionControllerCallback: void onExtrasChanged(android.os.Bundle)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onMetadataChanged(android.media.MediaMetadata) throws android.os.RemoteException
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.session.ISessionControllerCallback $r3, $r4;
        java.lang.Throwable $r5;
        android.media.MediaMetadata r6;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        r6 := @parameter0: android.media.MediaMetadata;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionControllerCallback");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.media.MediaMetadata: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.session.ISessionControllerCallback: void onMetadataChanged(android.media.MediaMetadata)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onPlaybackStateChanged(android.media.session.PlaybackState) throws android.os.RemoteException
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.session.ISessionControllerCallback $r3, $r4;
        java.lang.Throwable $r5;
        android.media.session.PlaybackState r6;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        r6 := @parameter0: android.media.session.PlaybackState;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionControllerCallback");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.media.session.PlaybackState: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.session.ISessionControllerCallback: void onPlaybackStateChanged(android.media.session.PlaybackState)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onQueueChanged(android.content.pm.ParceledListSlice) throws android.os.RemoteException
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.session.ISessionControllerCallback $r3, $r4;
        java.lang.Throwable $r5;
        android.content.pm.ParceledListSlice r6;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        r6 := @parameter0: android.content.pm.ParceledListSlice;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionControllerCallback");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.content.pm.ParceledListSlice: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.session.ISessionControllerCallback: void onQueueChanged(android.content.pm.ParceledListSlice)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onQueueTitleChanged(java.lang.CharSequence) throws android.os.RemoteException
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.session.ISessionControllerCallback $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.CharSequence r6;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        r6 := @parameter0: java.lang.CharSequence;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionControllerCallback");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r6, r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.session.ISessionControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void onSessionDestroyed() throws android.os.RemoteException
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.session.ISessionControllerCallback $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionControllerCallback");

        $r3 = r0.<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionControllerCallback: void onSessionDestroyed()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onVolumeInfoChanged(android.media.session.MediaController$PlaybackInfo) throws android.os.RemoteException
    {
        android.media.session.ISessionControllerCallback$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.session.ISessionControllerCallback $r3, $r4;
        java.lang.Throwable $r5;
        android.media.session.MediaController$PlaybackInfo r6;

        r0 := @this: android.media.session.ISessionControllerCallback$Stub$Proxy;

        r6 := @parameter0: android.media.session.MediaController$PlaybackInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionControllerCallback");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.media.session.MediaController$PlaybackInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.session.ISessionControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.session.ISessionControllerCallback$Stub: android.media.session.ISessionControllerCallback getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.session.ISessionControllerCallback: void onVolumeInfoChanged(android.media.session.MediaController$PlaybackInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }
}
