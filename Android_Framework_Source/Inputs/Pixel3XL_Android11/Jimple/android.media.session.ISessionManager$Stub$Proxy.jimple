class android.media.session.ISessionManager$Stub$Proxy extends java.lang.Object implements android.media.session.ISessionManager
{
    public static android.media.session.ISessionManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addOnMediaKeyEventDispatchedListener(android.media.session.IOnMediaKeyEventDispatchedListener) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.IOnMediaKeyEventDispatchedListener r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.IOnMediaKeyEventDispatchedListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.session.IOnMediaKeyEventDispatchedListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void addOnMediaKeyEventDispatchedListener(android.media.session.IOnMediaKeyEventDispatchedListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addOnMediaKeyEventSessionChangedListener(android.media.session.IOnMediaKeyEventSessionChangedListener) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.IOnMediaKeyEventSessionChangedListener r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.IOnMediaKeyEventSessionChangedListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.session.IOnMediaKeyEventSessionChangedListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void addOnMediaKeyEventSessionChangedListener(android.media.session.IOnMediaKeyEventSessionChangedListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addSession2TokensListener(android.media.session.ISession2TokensListener, int) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.ISession2TokensListener r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.ISession2TokensListener;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.session.ISession2TokensListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void addSession2TokensListener(android.media.session.ISession2TokensListener,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addSessionsListener(android.media.session.IActiveSessionsListener, android.content.ComponentName, int) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.content.ComponentName r1;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.media.session.ISessionManager $r5, $r6;
        java.lang.Throwable $r7;
        android.media.session.IActiveSessionsListener r8;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r8 := @parameter0: android.media.session.IActiveSessionsListener;

        r1 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.media.session.IActiveSessionsListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, r3, 0);

        if $z0 != 0 goto label13;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.session.ISessionManager: void addSessionsListener(android.media.session.IActiveSessionsListener,android.content.ComponentName,int)>(r8, r1, i0);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public android.os.IBinder asBinder()
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        $r1 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.media.session.ISession createSession(java.lang.String, android.media.session.ISessionCallback, java.lang.String, android.os.Bundle, int) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.media.session.ISessionCallback r1;
        java.lang.String r2, r11;
        android.os.Bundle r3;
        int i0;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, $r7, r12;
        boolean $z0;
        android.media.session.ISessionManager $r8, $r9;
        java.lang.Throwable $r10;
        android.media.session.ISession r13, r14;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: android.media.session.ISessionCallback;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        i0 := @parameter4: int;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r11);

     label02:
        if r1 == null goto label05;

     label03:
        r12 = interfaceinvoke r1.<android.media.session.ISessionCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r12 = null;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r12);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label07:
        if r3 == null goto label10;

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r4, r5, 0);

        if $z0 != 0 goto label13;

        $r8 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r8 == null goto label13;

        $r9 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        r13 = interfaceinvoke $r9.<android.media.session.ISessionManager: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle,int)>(r11, r1, r2, r3, i0);

     label12:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r13;

     label13:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        $r7 = virtualinvoke r5.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r14 = staticinvoke <android.media.session.ISession$Stub: android.media.session.ISession asInterface(android.os.IBinder)>($r7);

     label14:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r14;

     label15:
        $r10 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void dispatchAdjustVolume(java.lang.String, java.lang.String, int, int, int) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        java.lang.String r1, r8;
        int i0, i1, i2;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.session.ISessionManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        $r4 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.session.ISessionManager: void dispatchAdjustVolume(java.lang.String,java.lang.String,int,int,int)>(r8, r1, i0, i1, i2);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void dispatchMediaKeyEvent(java.lang.String, boolean, android.view.KeyEvent, boolean) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        boolean z0, z1, $z2;
        android.view.KeyEvent r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        android.media.session.ISessionManager $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        byte b1, b2;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.view.KeyEvent;

        z1 := @parameter3: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

     label05:
        if r1 == null goto label08;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label07:
        goto label09;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        if z1 == 0 goto label10;

        b2 = 1;

        goto label11;

     label10:
        b2 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b2);

        $r4 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        if $z2 != 0 goto label13;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r5 == null goto label13;

        $r6 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.session.ISessionManager: void dispatchMediaKeyEvent(java.lang.String,boolean,android.view.KeyEvent,boolean)>(r8, z0, r1, z1);

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public boolean dispatchMediaKeyEventToSessionAsSystemService(java.lang.String, android.media.session.MediaSession$Token, android.view.KeyEvent) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.media.session.MediaSession$Token r1;
        android.view.KeyEvent r2;
        android.os.Parcel r3, r4;
        int i0;
        android.os.IBinder $r5;
        boolean $z0, z1, z2;
        android.media.session.ISessionManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: android.media.session.MediaSession$Token;

        r2 := @parameter2: android.view.KeyEvent;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r9);

     label02:
        z1 = 1;

        if r1 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.media.session.MediaSession$Token: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r2 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r5 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, r4, 0);

        if $z0 != 0 goto label12;

        $r6 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r6 == null goto label12;

        $r7 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        z2 = interfaceinvoke $r7.<android.media.session.ISessionManager: boolean dispatchMediaKeyEventToSessionAsSystemService(java.lang.String,android.media.session.MediaSession$Token,android.view.KeyEvent)>(r9, r1, r2);

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z2;

     label12:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label13:
        if i0 == 0 goto label14;

        goto label15;

     label14:
        z1 = 0;

     label15:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z1;

     label16:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
    }

    public void dispatchVolumeKeyEvent(java.lang.String, java.lang.String, boolean, android.view.KeyEvent, int, boolean) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        java.lang.String r1, r13;
        boolean z0, z1, $z2;
        android.view.KeyEvent r2;
        int i0;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        android.media.session.ISessionManager $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, r14;
        byte b2, b3;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.view.KeyEvent;

        i0 := @parameter4: int;

        z1 := @parameter5: boolean;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r13);

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label04:
        if z0 == 0 goto label05;

        b2 = 1;

        goto label06;

     label05:
        b2 = 0;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b2);

     label07:
        if r2 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label12:
        if z1 == 0 goto label13;

        b3 = 1;

        goto label14;

     label13:
        b3 = 0;

     label14:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b3);

     label15:
        $r5 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        if $z2 != 0 goto label17;

        $r6 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r6 == null goto label17;

        $r7 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.media.session.ISessionManager: void dispatchVolumeKeyEvent(java.lang.String,java.lang.String,boolean,android.view.KeyEvent,int,boolean)>(r13, r1, z0, r2, i0, z1);

     label16:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label17:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label18:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label19:
        $r12 := @caughtexception;

        r14 = $r12;

        goto label24;

     label20:
        $r11 := @caughtexception;

        r14 = $r11;

        goto label24;

     label21:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label24;

     label22:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label24;

     label23:
        $r9 := @caughtexception;

        r14 = $r9;

     label24:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    public void dispatchVolumeKeyEventToSessionAsSystemService(java.lang.String, java.lang.String, android.media.session.MediaSession$Token, android.view.KeyEvent) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        java.lang.String r1, r10;
        android.media.session.MediaSession$Token r2;
        android.view.KeyEvent r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6;
        boolean $z0;
        android.media.session.ISessionManager $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.media.session.MediaSession$Token;

        r3 := @parameter3: android.view.KeyEvent;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label02:
        if r2 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.media.session.MediaSession$Token: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r3 == null goto label09;

     label07:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r6 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r4, r5, 0);

        if $z0 != 0 goto label12;

        $r7 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r7 == null goto label12;

        $r8 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r8.<android.media.session.ISessionManager: void dispatchVolumeKeyEventToSessionAsSystemService(java.lang.String,java.lang.String,android.media.session.MediaSession$Token,android.view.KeyEvent)>(r10, r1, r2, r3);

     label11:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.session.ISessionManager$Stub$Proxy r0;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        return "android.media.session.ISessionManager";
    }

    public android.content.pm.ParceledListSlice getSession2Tokens(int) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$ClassLoaderCreator $r4;
        java.lang.Object $r5;
        android.media.session.ISessionManager $r6, $r7;
        java.lang.Throwable $r8;
        android.content.pm.ParceledListSlice r9, r10;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.media.session.ISessionManager: android.content.pm.ParceledListSlice getSession2Tokens(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.content.pm.ParceledListSlice: android.os.Parcelable$ClassLoaderCreator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.content.pm.ParceledListSlice) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int getSessionPolicies(android.media.session.MediaSession$Token) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.MediaSession$Token r7;
        int i0, i1;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.MediaSession$Token;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.session.MediaSession$Token: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.media.session.ISessionManager: int getSessionPolicies(android.media.session.MediaSession$Token)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.util.List getSessions(android.content.ComponentName, int) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        android.media.session.ISessionManager $r5, $r6;
        java.lang.Throwable $r7;
        android.content.ComponentName r8;
        java.util.List r9;
        java.util.ArrayList r10;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r8 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.media.session.ISessionManager: java.util.List getSessions(android.content.ComponentName,int)>(r8, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.media.session.MediaSession$Token: android.os.Parcelable$Creator CREATOR>;

        r10 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r4);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean isGlobalPriorityActive() throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.media.session.ISessionManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

        r6 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.media.session.ISessionManager: boolean isGlobalPriorityActive()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isTrusted(java.lang.String, int, int) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.media.session.ISessionManager: boolean isTrusted(java.lang.String,int,int)>(r7, i1, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i2 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void notifySession2Created(android.media.Session2Token) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.Session2Token r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.Session2Token;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.Session2Token: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void notifySession2Created(android.media.Session2Token)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerRemoteVolumeController(android.media.IRemoteVolumeController) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.IRemoteVolumeController r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.IRemoteVolumeController;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.IRemoteVolumeController: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void registerRemoteVolumeController(android.media.IRemoteVolumeController)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeOnMediaKeyEventDispatchedListener(android.media.session.IOnMediaKeyEventDispatchedListener) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.IOnMediaKeyEventDispatchedListener r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.IOnMediaKeyEventDispatchedListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.session.IOnMediaKeyEventDispatchedListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void removeOnMediaKeyEventDispatchedListener(android.media.session.IOnMediaKeyEventDispatchedListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeOnMediaKeyEventSessionChangedListener(android.media.session.IOnMediaKeyEventSessionChangedListener) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.IOnMediaKeyEventSessionChangedListener r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.IOnMediaKeyEventSessionChangedListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.session.IOnMediaKeyEventSessionChangedListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void removeOnMediaKeyEventSessionChangedListener(android.media.session.IOnMediaKeyEventSessionChangedListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeSession2TokensListener(android.media.session.ISession2TokensListener) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.ISession2TokensListener r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.ISession2TokensListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.session.ISession2TokensListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void removeSession2TokensListener(android.media.session.ISession2TokensListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void removeSessionsListener(android.media.session.IActiveSessionsListener) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.IActiveSessionsListener r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.IActiveSessionsListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.session.IActiveSessionsListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void removeSessionsListener(android.media.session.IActiveSessionsListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setCustomMediaKeyDispatcherForTesting(java.lang.String) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void setCustomMediaKeyDispatcherForTesting(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setCustomSessionPolicyProviderForTesting(java.lang.String) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void setCustomSessionPolicyProviderForTesting(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setOnMediaKeyListener(android.media.session.IOnMediaKeyListener) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.IOnMediaKeyListener r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.IOnMediaKeyListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.session.IOnMediaKeyListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void setOnMediaKeyListener(android.media.session.IOnMediaKeyListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setOnVolumeKeyLongPressListener(android.media.session.IOnVolumeKeyLongPressListener) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.IOnVolumeKeyLongPressListener r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.IOnVolumeKeyLongPressListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.session.IOnVolumeKeyLongPressListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void setOnVolumeKeyLongPressListener(android.media.session.IOnVolumeKeyLongPressListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setSessionPolicies(android.media.session.MediaSession$Token, int) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.session.MediaSession$Token r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.session.MediaSession$Token;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.media.session.MediaSession$Token: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void setSessionPolicies(android.media.session.MediaSession$Token,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterRemoteVolumeController(android.media.IRemoteVolumeController) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.media.session.ISessionManager $r4, $r5;
        java.lang.Throwable $r6;
        android.media.IRemoteVolumeController r7;

        r0 := @this: android.media.session.ISessionManager$Stub$Proxy;

        r7 := @parameter0: android.media.IRemoteVolumeController;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.session.ISessionManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.media.IRemoteVolumeController: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.media.session.ISessionManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.session.ISessionManager: void unregisterRemoteVolumeController(android.media.IRemoteVolumeController)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
