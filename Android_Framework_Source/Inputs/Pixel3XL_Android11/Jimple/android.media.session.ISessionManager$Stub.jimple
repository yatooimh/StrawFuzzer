public abstract class android.media.session.ISessionManager$Stub extends android.os.Binder implements android.media.session.ISessionManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addOnMediaKeyEventDispatchedListener;
    static final int TRANSACTION_addOnMediaKeyEventSessionChangedListener;
    static final int TRANSACTION_addSession2TokensListener;
    static final int TRANSACTION_addSessionsListener;
    static final int TRANSACTION_createSession;
    static final int TRANSACTION_dispatchAdjustVolume;
    static final int TRANSACTION_dispatchMediaKeyEvent;
    static final int TRANSACTION_dispatchMediaKeyEventToSessionAsSystemService;
    static final int TRANSACTION_dispatchVolumeKeyEvent;
    static final int TRANSACTION_dispatchVolumeKeyEventToSessionAsSystemService;
    static final int TRANSACTION_getSession2Tokens;
    static final int TRANSACTION_getSessionPolicies;
    static final int TRANSACTION_getSessions;
    static final int TRANSACTION_isGlobalPriorityActive;
    static final int TRANSACTION_isTrusted;
    static final int TRANSACTION_notifySession2Created;
    static final int TRANSACTION_registerRemoteVolumeController;
    static final int TRANSACTION_removeOnMediaKeyEventDispatchedListener;
    static final int TRANSACTION_removeOnMediaKeyEventSessionChangedListener;
    static final int TRANSACTION_removeSession2TokensListener;
    static final int TRANSACTION_removeSessionsListener;
    static final int TRANSACTION_setCustomMediaKeyDispatcherForTesting;
    static final int TRANSACTION_setCustomSessionPolicyProviderForTesting;
    static final int TRANSACTION_setOnMediaKeyListener;
    static final int TRANSACTION_setOnVolumeKeyLongPressListener;
    static final int TRANSACTION_setSessionPolicies;
    static final int TRANSACTION_unregisterRemoteVolumeController;

    public void <init>()
    {
        android.media.session.ISessionManager$Stub r0;

        r0 := @this: android.media.session.ISessionManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.media.session.ISessionManager");

        return;
    }

    public static android.media.session.ISessionManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.media.session.ISessionManager$Stub$Proxy $r2;
        boolean $z0;
        android.media.session.ISessionManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.media.session.ISessionManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.media.session.ISessionManager;

        if $z0 == 0 goto label2;

        $r3 = (android.media.session.ISessionManager) r1;

        return $r3;

     label2:
        $r2 = new android.media.session.ISessionManager$Stub$Proxy;

        specialinvoke $r2.<android.media.session.ISessionManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.media.session.ISessionManager getDefaultImpl()
    {
        android.media.session.ISessionManager $r0;

        $r0 = <android.media.session.ISessionManager$Stub$Proxy: android.media.session.ISessionManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label28;
            case 2: goto label27;
            case 3: goto label26;
            case 4: goto label25;
            case 5: goto label24;
            case 6: goto label23;
            case 7: goto label22;
            case 8: goto label21;
            case 9: goto label20;
            case 10: goto label19;
            case 11: goto label18;
            case 12: goto label17;
            case 13: goto label16;
            case 14: goto label15;
            case 15: goto label14;
            case 16: goto label13;
            case 17: goto label12;
            case 18: goto label11;
            case 19: goto label10;
            case 20: goto label09;
            case 21: goto label08;
            case 22: goto label07;
            case 23: goto label06;
            case 24: goto label05;
            case 25: goto label04;
            case 26: goto label03;
            case 27: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "setSessionPolicies";

     label03:
        return "getSessionPolicies";

     label04:
        return "setCustomSessionPolicyProviderForTesting";

     label05:
        return "setCustomMediaKeyDispatcherForTesting";

     label06:
        return "isTrusted";

     label07:
        return "setOnMediaKeyListener";

     label08:
        return "setOnVolumeKeyLongPressListener";

     label09:
        return "removeOnMediaKeyEventSessionChangedListener";

     label10:
        return "addOnMediaKeyEventSessionChangedListener";

     label11:
        return "removeOnMediaKeyEventDispatchedListener";

     label12:
        return "addOnMediaKeyEventDispatchedListener";

     label13:
        return "isGlobalPriorityActive";

     label14:
        return "unregisterRemoteVolumeController";

     label15:
        return "registerRemoteVolumeController";

     label16:
        return "removeSession2TokensListener";

     label17:
        return "addSession2TokensListener";

     label18:
        return "removeSessionsListener";

     label19:
        return "addSessionsListener";

     label20:
        return "dispatchAdjustVolume";

     label21:
        return "dispatchVolumeKeyEventToSessionAsSystemService";

     label22:
        return "dispatchVolumeKeyEvent";

     label23:
        return "dispatchMediaKeyEventToSessionAsSystemService";

     label24:
        return "dispatchMediaKeyEvent";

     label25:
        return "getSession2Tokens";

     label26:
        return "getSessions";

     label27:
        return "notifySession2Created";

     label28:
        return "createSession";
    }

    public static boolean setDefaultImpl(android.media.session.ISessionManager)
    {
        android.media.session.ISessionManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.media.session.ISessionManager;

        $r1 = <android.media.session.ISessionManager$Stub$Proxy: android.media.session.ISessionManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.media.session.ISessionManager$Stub$Proxy: android.media.session.ISessionManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.media.session.ISessionManager$Stub r0;

        r0 := @this: android.media.session.ISessionManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.media.session.ISessionManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.media.session.ISessionManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.media.session.ISessionManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.media.session.ISessionManager$Stub r0;
        android.os.Parcel r1, r56;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31, i32, i33;
        android.media.session.ISessionCallback r2;
        android.os.Parcelable$Creator $r3, $r5, $r33, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r54;
        java.lang.Object $r4, $r6, $r34, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r55;
        java.lang.String $r7, $r8, $r9, $r35, $r36, r61, r62, r65, r66, r68, r71, r77, r78;
        android.os.IBinder $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r53, r81;
        android.media.session.IOnMediaKeyListener $r11;
        android.media.session.IOnVolumeKeyLongPressListener $r13;
        android.media.session.IOnMediaKeyEventSessionChangedListener $r15, $r17;
        android.media.session.IOnMediaKeyEventDispatchedListener $r19, $r21;
        android.media.IRemoteVolumeController $r23, $r25;
        android.media.session.ISession2TokensListener $r27, $r29;
        android.media.session.IActiveSessionsListener $r31, r59;
        boolean $z0, z1, z2, z3, z4, z5, z6, z7;
        android.media.session.MediaSession$Token r57, r58, r63, r69;
        android.content.ComponentName r60, r74;
        android.view.KeyEvent r64, r67, r70, r72;
        android.content.pm.ParceledListSlice r73;
        java.util.List r75;
        android.media.Session2Token r76;
        android.os.Bundle r79;
        android.media.session.ISession r80;

        r0 := @this: android.media.session.ISessionManager$Stub;

        i28 := @parameter0: int;

        r56 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i28 == 1598968902 goto label64;

        z1 = 0;

        tableswitch(i28)
        {
            case 1: goto label59;
            case 2: goto label56;
            case 3: goto label53;
            case 4: goto label50;
            case 5: goto label44;
            case 6: goto label39;
            case 7: goto label32;
            case 8: goto label27;
            case 9: goto label26;
            case 10: goto label23;
            case 11: goto label22;
            case 12: goto label21;
            case 13: goto label20;
            case 14: goto label19;
            case 15: goto label18;
            case 16: goto label17;
            case 17: goto label16;
            case 18: goto label15;
            case 19: goto label14;
            case 20: goto label13;
            case 21: goto label12;
            case 22: goto label11;
            case 23: goto label10;
            case 24: goto label09;
            case 25: goto label08;
            case 26: goto label05;
            case 27: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i28, r56, r1, i0);

        return $z0;

     label02:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $i1 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label03;

        $r3 = <android.media.session.MediaSession$Token: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r57 = (android.media.session.MediaSession$Token) $r4;

        goto label04;

     label03:
        r57 = null;

     label04:
        $i2 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void setSessionPolicies(android.media.session.MediaSession$Token,int)>(r57, $i2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label05:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $i3 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label06;

        $r5 = <android.media.session.MediaSession$Token: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r58 = (android.media.session.MediaSession$Token) $r6;

        goto label07;

     label06:
        r58 = null;

     label07:
        i29 = virtualinvoke r0.<android.media.session.ISessionManager$Stub: int getSessionPolicies(android.media.session.MediaSession$Token)>(r58);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i29);

        return 1;

     label08:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r7 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void setCustomSessionPolicyProviderForTesting(java.lang.String)>($r7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label09:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r8 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void setCustomMediaKeyDispatcherForTesting(java.lang.String)>($r8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label10:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r9 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        $i4 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        z2 = virtualinvoke r0.<android.media.session.ISessionManager$Stub: boolean isTrusted(java.lang.String,int,int)>($r9, $i4, $i5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i31 = (int) z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i31);

        return 1;

     label11:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r10 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r11 = staticinvoke <android.media.session.IOnMediaKeyListener$Stub: android.media.session.IOnMediaKeyListener asInterface(android.os.IBinder)>($r10);

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void setOnMediaKeyListener(android.media.session.IOnMediaKeyListener)>($r11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label12:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r12 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r13 = staticinvoke <android.media.session.IOnVolumeKeyLongPressListener$Stub: android.media.session.IOnVolumeKeyLongPressListener asInterface(android.os.IBinder)>($r12);

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void setOnVolumeKeyLongPressListener(android.media.session.IOnVolumeKeyLongPressListener)>($r13);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label13:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r14 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r15 = staticinvoke <android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: android.media.session.IOnMediaKeyEventSessionChangedListener asInterface(android.os.IBinder)>($r14);

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void removeOnMediaKeyEventSessionChangedListener(android.media.session.IOnMediaKeyEventSessionChangedListener)>($r15);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label14:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r16 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r17 = staticinvoke <android.media.session.IOnMediaKeyEventSessionChangedListener$Stub: android.media.session.IOnMediaKeyEventSessionChangedListener asInterface(android.os.IBinder)>($r16);

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void addOnMediaKeyEventSessionChangedListener(android.media.session.IOnMediaKeyEventSessionChangedListener)>($r17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label15:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r18 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r19 = staticinvoke <android.media.session.IOnMediaKeyEventDispatchedListener$Stub: android.media.session.IOnMediaKeyEventDispatchedListener asInterface(android.os.IBinder)>($r18);

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void removeOnMediaKeyEventDispatchedListener(android.media.session.IOnMediaKeyEventDispatchedListener)>($r19);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label16:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r20 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r21 = staticinvoke <android.media.session.IOnMediaKeyEventDispatchedListener$Stub: android.media.session.IOnMediaKeyEventDispatchedListener asInterface(android.os.IBinder)>($r20);

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void addOnMediaKeyEventDispatchedListener(android.media.session.IOnMediaKeyEventDispatchedListener)>($r21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        z3 = virtualinvoke r0.<android.media.session.ISessionManager$Stub: boolean isGlobalPriorityActive()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i32 = (int) z3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i32);

        return 1;

     label18:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r22 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r23 = staticinvoke <android.media.IRemoteVolumeController$Stub: android.media.IRemoteVolumeController asInterface(android.os.IBinder)>($r22);

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void unregisterRemoteVolumeController(android.media.IRemoteVolumeController)>($r23);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label19:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r24 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r25 = staticinvoke <android.media.IRemoteVolumeController$Stub: android.media.IRemoteVolumeController asInterface(android.os.IBinder)>($r24);

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void registerRemoteVolumeController(android.media.IRemoteVolumeController)>($r25);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label20:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r26 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r27 = staticinvoke <android.media.session.ISession2TokensListener$Stub: android.media.session.ISession2TokensListener asInterface(android.os.IBinder)>($r26);

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void removeSession2TokensListener(android.media.session.ISession2TokensListener)>($r27);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label21:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r28 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r29 = staticinvoke <android.media.session.ISession2TokensListener$Stub: android.media.session.ISession2TokensListener asInterface(android.os.IBinder)>($r28);

        $i6 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void addSession2TokensListener(android.media.session.ISession2TokensListener,int)>($r29, $i6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label22:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r30 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r31 = staticinvoke <android.media.session.IActiveSessionsListener$Stub: android.media.session.IActiveSessionsListener asInterface(android.os.IBinder)>($r30);

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void removeSessionsListener(android.media.session.IActiveSessionsListener)>($r31);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label23:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r32 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r59 = staticinvoke <android.media.session.IActiveSessionsListener$Stub: android.media.session.IActiveSessionsListener asInterface(android.os.IBinder)>($r32);

        $i7 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i7 == 0 goto label24;

        $r33 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r34 = interfaceinvoke $r33.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r60 = (android.content.ComponentName) $r34;

        goto label25;

     label24:
        r60 = null;

     label25:
        $i8 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void addSessionsListener(android.media.session.IActiveSessionsListener,android.content.ComponentName,int)>(r59, r60, $i8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label26:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $r35 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        $r36 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        $i9 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        $i10 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        $i11 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void dispatchAdjustVolume(java.lang.String,java.lang.String,int,int,int)>($r35, $r36, $i9, $i10, $i11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label27:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        r61 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        r62 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        $i12 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i12 == 0 goto label28;

        $r39 = <android.media.session.MediaSession$Token: android.os.Parcelable$Creator CREATOR>;

        $r40 = interfaceinvoke $r39.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r63 = (android.media.session.MediaSession$Token) $r40;

        goto label29;

     label28:
        r63 = null;

     label29:
        $i13 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i13 == 0 goto label30;

        $r37 = <android.view.KeyEvent: android.os.Parcelable$Creator CREATOR>;

        $r38 = interfaceinvoke $r37.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r64 = (android.view.KeyEvent) $r38;

        goto label31;

     label30:
        r64 = null;

     label31:
        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void dispatchVolumeKeyEventToSessionAsSystemService(java.lang.String,java.lang.String,android.media.session.MediaSession$Token,android.view.KeyEvent)>(r61, r62, r63, r64);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label32:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        r65 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        r66 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        $i14 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i14 == 0 goto label33;

        z4 = 1;

        goto label34;

     label33:
        z4 = 0;

     label34:
        $i15 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i15 == 0 goto label35;

        $r41 = <android.view.KeyEvent: android.os.Parcelable$Creator CREATOR>;

        $r42 = interfaceinvoke $r41.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r67 = (android.view.KeyEvent) $r42;

        goto label36;

     label35:
        r67 = null;

     label36:
        i30 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        $i16 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i16 == 0 goto label37;

        z5 = 1;

        goto label38;

     label37:
        z5 = 0;

     label38:
        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void dispatchVolumeKeyEvent(java.lang.String,java.lang.String,boolean,android.view.KeyEvent,int,boolean)>(r65, r66, z4, r67, i30, z5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label39:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        r68 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        $i17 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i17 == 0 goto label40;

        $r45 = <android.media.session.MediaSession$Token: android.os.Parcelable$Creator CREATOR>;

        $r46 = interfaceinvoke $r45.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r69 = (android.media.session.MediaSession$Token) $r46;

        goto label41;

     label40:
        r69 = null;

     label41:
        $i18 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i18 == 0 goto label42;

        $r43 = <android.view.KeyEvent: android.os.Parcelable$Creator CREATOR>;

        $r44 = interfaceinvoke $r43.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r70 = (android.view.KeyEvent) $r44;

        goto label43;

     label42:
        r70 = null;

     label43:
        z6 = virtualinvoke r0.<android.media.session.ISessionManager$Stub: boolean dispatchMediaKeyEventToSessionAsSystemService(java.lang.String,android.media.session.MediaSession$Token,android.view.KeyEvent)>(r68, r69, r70);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i33 = (int) z6;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i33);

        return 1;

     label44:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        r71 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        $i19 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i19 == 0 goto label45;

        z7 = 1;

        goto label46;

     label45:
        z7 = 0;

     label46:
        $i20 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i20 == 0 goto label47;

        $r47 = <android.view.KeyEvent: android.os.Parcelable$Creator CREATOR>;

        $r48 = interfaceinvoke $r47.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r72 = (android.view.KeyEvent) $r48;

        goto label48;

     label47:
        r72 = null;

     label48:
        $i21 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i21 == 0 goto label49;

        z1 = 1;

     label49:
        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void dispatchMediaKeyEvent(java.lang.String,boolean,android.view.KeyEvent,boolean)>(r71, z7, r72, z1);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label50:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $i22 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        r73 = virtualinvoke r0.<android.media.session.ISessionManager$Stub: android.content.pm.ParceledListSlice getSession2Tokens(int)>($i22);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r73 == null goto label51;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r73.<android.content.pm.ParceledListSlice: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label52;

     label51:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label52:
        return 1;

     label53:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $i23 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i23 == 0 goto label54;

        $r49 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        $r50 = interfaceinvoke $r49.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r74 = (android.content.ComponentName) $r50;

        goto label55;

     label54:
        r74 = null;

     label55:
        $i24 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        r75 = virtualinvoke r0.<android.media.session.ISessionManager$Stub: java.util.List getSessions(android.content.ComponentName,int)>(r74, $i24);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>(r75);

        return 1;

     label56:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        $i25 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i25 == 0 goto label57;

        $r51 = <android.media.Session2Token: android.os.Parcelable$Creator CREATOR>;

        $r52 = interfaceinvoke $r51.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r76 = (android.media.Session2Token) $r52;

        goto label58;

     label57:
        r76 = null;

     label58:
        virtualinvoke r0.<android.media.session.ISessionManager$Stub: void notifySession2Created(android.media.Session2Token)>(r76);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label59:
        virtualinvoke r56.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.session.ISessionManager");

        r77 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        $r53 = virtualinvoke r56.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r2 = staticinvoke <android.media.session.ISessionCallback$Stub: android.media.session.ISessionCallback asInterface(android.os.IBinder)>($r53);

        r78 = virtualinvoke r56.<android.os.Parcel: java.lang.String readString()>();

        $i26 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        if $i26 == 0 goto label60;

        $r54 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r55 = interfaceinvoke $r54.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r56);

        r79 = (android.os.Bundle) $r55;

        goto label61;

     label60:
        r79 = null;

     label61:
        $i27 = virtualinvoke r56.<android.os.Parcel: int readInt()>();

        r80 = virtualinvoke r0.<android.media.session.ISessionManager$Stub: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle,int)>(r77, r2, r78, r79, $i27);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r80 == null goto label62;

        r81 = interfaceinvoke r80.<android.media.session.ISession: android.os.IBinder asBinder()>();

        goto label63;

     label62:
        r81 = null;

     label63:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r81);

        return 1;

     label64:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.media.session.ISessionManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.media.session.ISessionManager$Stub: int TRANSACTION_unregisterRemoteVolumeController> = 15;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_setSessionPolicies> = 27;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_setOnVolumeKeyLongPressListener> = 21;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_setOnMediaKeyListener> = 22;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_setCustomSessionPolicyProviderForTesting> = 25;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_setCustomMediaKeyDispatcherForTesting> = 24;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_removeSessionsListener> = 11;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_removeSession2TokensListener> = 13;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_removeOnMediaKeyEventSessionChangedListener> = 20;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_removeOnMediaKeyEventDispatchedListener> = 18;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_registerRemoteVolumeController> = 14;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_notifySession2Created> = 2;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_isTrusted> = 23;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_isGlobalPriorityActive> = 16;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_getSessions> = 3;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_getSessionPolicies> = 26;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_getSession2Tokens> = 4;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_dispatchVolumeKeyEventToSessionAsSystemService> = 8;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_dispatchVolumeKeyEvent> = 7;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_dispatchMediaKeyEventToSessionAsSystemService> = 6;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_dispatchMediaKeyEvent> = 5;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_dispatchAdjustVolume> = 9;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_createSession> = 1;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_addSessionsListener> = 10;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_addSession2TokensListener> = 12;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_addOnMediaKeyEventSessionChangedListener> = 19;

        <android.media.session.ISessionManager$Stub: int TRANSACTION_addOnMediaKeyEventDispatchedListener> = 17;

        <android.media.session.ISessionManager$Stub: java.lang.String DESCRIPTOR> = "android.media.session.ISessionManager";

        return;
    }
}
