public final class android.media.session.MediaController$TransportControls extends java.lang.Object
{
    private static final java.lang.String TAG;
    final android.media.session.MediaController this$0;

    private void <init>(android.media.session.MediaController)
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController r1;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: android.media.session.MediaController;

        r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(android.media.session.MediaController, android.media.session.MediaController$1)
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController r1;
        android.media.session.MediaController$1 r2;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: android.media.session.MediaController;

        r2 := @parameter1: android.media.session.MediaController$1;

        specialinvoke r0.<android.media.session.MediaController$TransportControls: void <init>(android.media.session.MediaController)>(r1);

        return;
    }

    public void fastForward()
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r2, $r4;
        android.media.session.ISessionController $r3;
        android.content.Context $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r2);

        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.media.session.ISessionController: void fastForward(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling fastForward.", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void pause()
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r2, $r4;
        android.media.session.ISessionController $r3;
        android.content.Context $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r2);

        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.media.session.ISessionController: void pause(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling pause.", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void play()
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r2, $r4;
        android.media.session.ISessionController $r3;
        android.content.Context $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r2);

        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.media.session.ISessionController: void play(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling play.", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        java.lang.String r1, $r8, $r14;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        android.media.session.MediaController $r4, $r6;
        android.media.session.ISessionController $r5;
        android.content.Context $r7;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r10;
        android.os.Bundle r15;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: java.lang.String;

        r15 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label5;

     label1:
        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r4);

        $r6 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r7 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r6);

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r5.<android.media.session.ISessionController: void playFromMediaId(java.lang.String,java.lang.String,android.os.Bundle)>($r8, r1, r15);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling play(");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", $r14, $r9);

     label4:
        return;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must specify a non-empty String for playFromMediaId.");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playFromSearch(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r1, $r3;
        android.media.session.ISessionController $r2;
        android.content.Context $r4;
        java.lang.String $r5, $r11, r12, r14;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7;
        android.os.Bundle r13;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: android.os.Bundle;

        r14 = r12;

        if r12 != null goto label1;

        r14 = "";

     label1:
        $r1 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r2 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r1);

        $r3 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r4 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r3);

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r2.<android.media.session.ISessionController: void playFromSearch(java.lang.String,java.lang.String,android.os.Bundle)>($r5, r14, r13);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling play(");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", $r11, $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playFromUri(android.net.Uri, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        android.net.Uri r1, $r4;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        android.media.session.MediaController $r5, $r7;
        android.media.session.ISessionController $r6;
        android.content.Context $r8;
        java.lang.String $r9, $r15;
        android.os.RemoteException $r10;
        java.lang.StringBuilder $r11;
        android.os.Bundle r16;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: android.net.Uri;

        r16 := @parameter1: android.os.Bundle;

        if r1 == null goto label5;

        $r4 = <android.net.Uri: android.net.Uri EMPTY>;

        $z0 = virtualinvoke $r4.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label5;

     label1:
        $r5 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r6 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r5);

        $r7 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r8 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r7);

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r6.<android.media.session.ISessionController: void playFromUri(java.lang.String,android.net.Uri,android.os.Bundle)>($r9, r1, r16);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling play(");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", $r15, $r10);

     label4:
        return;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must specify a non-empty Uri for playFromUri.");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void prepare()
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r2, $r4;
        android.media.session.ISessionController $r3;
        android.content.Context $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r2);

        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.media.session.ISessionController: void prepare(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling prepare.", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void prepareFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        java.lang.String r1, $r8, $r14;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        android.media.session.MediaController $r4, $r6;
        android.media.session.ISessionController $r5;
        android.content.Context $r7;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r10;
        android.os.Bundle r15;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: java.lang.String;

        r15 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label5;

     label1:
        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r4);

        $r6 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r7 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r6);

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r5.<android.media.session.ISessionController: void prepareFromMediaId(java.lang.String,java.lang.String,android.os.Bundle)>($r8, r1, r15);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling prepare(");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", $r14, $r9);

     label4:
        return;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must specify a non-empty String for prepareFromMediaId.");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void prepareFromSearch(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r1, $r3;
        android.media.session.ISessionController $r2;
        android.content.Context $r4;
        java.lang.String $r5, $r11, r12, r14;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7;
        android.os.Bundle r13;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: android.os.Bundle;

        r14 = r12;

        if r12 != null goto label1;

        r14 = "";

     label1:
        $r1 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r2 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r1);

        $r3 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r4 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r3);

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r2.<android.media.session.ISessionController: void prepareFromSearch(java.lang.String,java.lang.String,android.os.Bundle)>($r5, r14, r13);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling prepare(");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", $r11, $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void prepareFromUri(android.net.Uri, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        android.net.Uri r1, $r4;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        android.media.session.MediaController $r5, $r7;
        android.media.session.ISessionController $r6;
        android.content.Context $r8;
        java.lang.String $r9, $r15;
        android.os.RemoteException $r10;
        java.lang.StringBuilder $r11;
        android.os.Bundle r16;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: android.net.Uri;

        r16 := @parameter1: android.os.Bundle;

        if r1 == null goto label5;

        $r4 = <android.net.Uri: android.net.Uri EMPTY>;

        $z0 = virtualinvoke $r4.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label5;

     label1:
        $r5 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r6 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r5);

        $r7 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r8 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r7);

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r6.<android.media.session.ISessionController: void prepareFromUri(java.lang.String,android.net.Uri,android.os.Bundle)>($r9, r1, r16);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling prepare(");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", $r15, $r10);

     label4:
        return;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must specify a non-empty Uri for prepareFromUri.");

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void rewind()
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r2, $r4;
        android.media.session.ISessionController $r3;
        android.content.Context $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r2);

        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.media.session.ISessionController: void rewind(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling rewind.", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void seekTo(long)
    {
        android.media.session.MediaController$TransportControls r0;
        long l0;
        android.media.session.MediaController $r2, $r4;
        android.media.session.ISessionController $r3;
        android.content.Context $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.media.session.MediaController$TransportControls;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r2);

        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.media.session.ISessionController: void seekTo(java.lang.String,long)>($r6, l0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling seekTo.", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendCustomAction(android.media.session.PlaybackState$CustomAction, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.PlaybackState$CustomAction r1;
        android.os.Bundle r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: android.media.session.PlaybackState$CustomAction;

        r2 := @parameter1: android.os.Bundle;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<android.media.session.PlaybackState$CustomAction: java.lang.String getAction()>();

        virtualinvoke r0.<android.media.session.MediaController$TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)>($r4, r2);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CustomAction cannot be null.");

        throw $r3;
    }

    public void sendCustomAction(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        android.os.Bundle r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        android.media.session.MediaController $r3, $r5;
        android.media.session.ISessionController $r4;
        android.content.Context $r6;
        java.lang.String $r7, r9;
        android.os.RemoteException $r8;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z0 != 0 goto label5;

     label1:
        $r3 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r4 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r3);

        $r5 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r6 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r5);

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r4.<android.media.session.ISessionController: void sendCustomAction(java.lang.String,java.lang.String,android.os.Bundle)>($r7, r9, r1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Dead object in sendCustomAction.", $r8);

     label4:
        return;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CustomAction cannot be null.");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setPlaybackSpeed(float)
    {
        android.media.session.MediaController$TransportControls r0;
        float f0;
        byte $b0;
        java.lang.IllegalArgumentException $r2;
        android.media.session.MediaController $r3, $r5;
        android.media.session.ISessionController $r4;
        android.content.Context $r6;
        java.lang.String $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.media.session.MediaController$TransportControls;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 == 0 goto label5;

     label1:
        $r3 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r4 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r3);

        $r5 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r6 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r5);

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r4.<android.media.session.ISessionController: void setPlaybackSpeed(java.lang.String,float)>($r7, f0);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling setPlaybackSpeed.", $r8);

     label4:
        return;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("speed must not be zero");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setRating(android.media.Rating)
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r1, $r3;
        android.media.session.ISessionController $r2;
        android.content.Context $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;
        android.media.Rating r7;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r7 := @parameter0: android.media.Rating;

     label1:
        $r1 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r2 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r1);

        $r3 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r4 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r3);

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r2.<android.media.session.ISessionController: void rate(java.lang.String,android.media.Rating)>($r5, r7);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling rate.", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void skipToNext()
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r2, $r4;
        android.media.session.ISessionController $r3;
        android.content.Context $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r2);

        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.media.session.ISessionController: void next(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling next.", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void skipToPrevious()
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r2, $r4;
        android.media.session.ISessionController $r3;
        android.content.Context $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r2);

        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.media.session.ISessionController: void previous(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling previous.", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void skipToQueueItem(long)
    {
        android.media.session.MediaController$TransportControls r0;
        long l0;
        android.media.session.MediaController $r3, $r5;
        android.media.session.ISessionController $r4;
        android.content.Context $r6;
        java.lang.String $r7, $r13;
        android.os.RemoteException $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: android.media.session.MediaController$TransportControls;

        l0 := @parameter0: long;

     label1:
        $r3 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r4 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r3);

        $r5 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r6 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r5);

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r4.<android.media.session.ISessionController: void skipToQueueItem(java.lang.String,long)>($r7, l0);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling skipToItem(");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", $r13, $r8);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stop()
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController $r2, $r4;
        android.media.session.ISessionController $r3;
        android.content.Context $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$400(android.media.session.MediaController)>($r2);

        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.content.Context access$300(android.media.session.MediaController)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r3.<android.media.session.ISessionController: void stop(java.lang.String)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling stop.", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.media.session.MediaController$TransportControls: java.lang.String TAG> = "TransportController";

        return;
    }
}
