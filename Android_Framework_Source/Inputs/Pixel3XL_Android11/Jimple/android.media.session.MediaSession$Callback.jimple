public abstract class android.media.session.MediaSession$Callback extends java.lang.Object
{
    private android.media.session.MediaSession$CallbackMessageHandler mHandler;
    private boolean mMediaPlayPauseKeyPending;
    private android.media.session.MediaSession mSession;

    public void <init>()
    {
        android.media.session.MediaSession$Callback r0;

        r0 := @this: android.media.session.MediaSession$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.media.session.MediaSession access$102(android.media.session.MediaSession$Callback, android.media.session.MediaSession)
    {
        android.media.session.MediaSession$Callback r0;
        android.media.session.MediaSession r1;

        r0 := @parameter0: android.media.session.MediaSession$Callback;

        r1 := @parameter1: android.media.session.MediaSession;

        r0.<android.media.session.MediaSession$Callback: android.media.session.MediaSession mSession> = r1;

        return r1;
    }

    static android.media.session.MediaSession$CallbackMessageHandler access$502(android.media.session.MediaSession$Callback, android.media.session.MediaSession$CallbackMessageHandler)
    {
        android.media.session.MediaSession$Callback r0;
        android.media.session.MediaSession$CallbackMessageHandler r1;

        r0 := @parameter0: android.media.session.MediaSession$Callback;

        r1 := @parameter1: android.media.session.MediaSession$CallbackMessageHandler;

        r0.<android.media.session.MediaSession$Callback: android.media.session.MediaSession$CallbackMessageHandler mHandler> = r1;

        return r1;
    }

    static void access$800(android.media.session.MediaSession$Callback)
    {
        android.media.session.MediaSession$Callback r0;

        r0 := @parameter0: android.media.session.MediaSession$Callback;

        specialinvoke r0.<android.media.session.MediaSession$Callback: void handleMediaPlayPauseKeySingleTapIfPending()>();

        return;
    }

    private void handleMediaPlayPauseKeySingleTapIfPending()
    {
        android.media.session.MediaSession$Callback r0;
        android.media.session.PlaybackState r1;
        boolean $z0, z1, z2, z3;
        android.media.session.MediaSession$CallbackMessageHandler $r2;
        android.media.session.MediaSession $r3;
        long $l0, l3, $l4;
        byte $b1, $b5;
        int $i2;

        r0 := @this: android.media.session.MediaSession$Callback;

        $z0 = r0.<android.media.session.MediaSession$Callback: boolean mMediaPlayPauseKeyPending>;

        if $z0 != 0 goto label01;

        return;

     label01:
        z1 = 0;

        r0.<android.media.session.MediaSession$Callback: boolean mMediaPlayPauseKeyPending> = 0;

        $r2 = r0.<android.media.session.MediaSession$Callback: android.media.session.MediaSession$CallbackMessageHandler mHandler>;

        virtualinvoke $r2.<android.media.session.MediaSession$CallbackMessageHandler: void removeMessages(int)>(24);

        $r3 = r0.<android.media.session.MediaSession$Callback: android.media.session.MediaSession mSession>;

        r1 = staticinvoke <android.media.session.MediaSession: android.media.session.PlaybackState access$300(android.media.session.MediaSession)>($r3);

        if r1 != null goto label02;

        l3 = 0L;

        goto label03;

     label02:
        l3 = virtualinvoke r1.<android.media.session.PlaybackState: long getActions()>();

     label03:
        if r1 == null goto label04;

        $i2 = virtualinvoke r1.<android.media.session.PlaybackState: int getState()>();

        if $i2 != 3 goto label04;

        z2 = 1;

        goto label05;

     label04:
        z2 = 0;

     label05:
        $l4 = 516L & l3;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label06;

        z3 = 1;

        goto label07;

     label06:
        z3 = 0;

     label07:
        $l0 = 514L & l3;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label08;

        z1 = 1;

     label08:
        if z2 == 0 goto label09;

        if z1 == 0 goto label09;

        virtualinvoke r0.<android.media.session.MediaSession$Callback: void onPause()>();

        goto label10;

     label09:
        if z2 != 0 goto label10;

        if z3 == 0 goto label10;

        virtualinvoke r0.<android.media.session.MediaSession$Callback: void onPlay()>();

     label10:
        return;
    }

    public void onCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)
    {
        android.media.session.MediaSession$Callback r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.ResultReceiver r3;

        r0 := @this: android.media.session.MediaSession$Callback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.ResultReceiver;

        return;
    }

    public void onCustomAction(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaSession$Callback r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.media.session.MediaSession$Callback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onFastForward()
    {
        android.media.session.MediaSession$Callback r0;

        r0 := @this: android.media.session.MediaSession$Callback;

        return;
    }

    public boolean onMediaButtonEvent(android.content.Intent)
    {
        android.media.session.MediaSession$Callback r0;
        android.content.Intent r1;
        android.media.session.PlaybackState r2;
        android.media.session.MediaSession $r3, $r8, r12;
        android.media.session.MediaSession$CallbackMessageHandler $r4, $r10;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;
        android.os.Parcelable $r7;
        int $i0, $i1, $i2, i21, i22;
        android.media.session.MediaSessionManager$RemoteUserInfo $r9;
        long $l3, $l4, $l6, $l8, $l10, $l12, $l14, $l16, $l18, l20;
        byte $b5, $b7, $b9, $b11, $b13, $b15, $b17, $b19;
        android.view.KeyEvent r11;

        r0 := @this: android.media.session.MediaSession$Callback;

        r1 := @parameter0: android.content.Intent;

        $r3 = r0.<android.media.session.MediaSession$Callback: android.media.session.MediaSession mSession>;

        if $r3 == null goto label15;

        $r4 = r0.<android.media.session.MediaSession$Callback: android.media.session.MediaSession$CallbackMessageHandler mHandler>;

        if $r4 == null goto label15;

        $r5 = "android.intent.action.MEDIA_BUTTON";

        $r6 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label15;

        $r7 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.KEY_EVENT");

        r11 = (android.view.KeyEvent) $r7;

        if r11 == null goto label15;

        $i0 = virtualinvoke r11.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label15;

        $r8 = r0.<android.media.session.MediaSession$Callback: android.media.session.MediaSession mSession>;

        r2 = staticinvoke <android.media.session.MediaSession: android.media.session.PlaybackState access$300(android.media.session.MediaSession)>($r8);

        if r2 != null goto label01;

        l20 = 0L;

        goto label02;

     label01:
        l20 = virtualinvoke r2.<android.media.session.PlaybackState: long getActions()>();

     label02:
        i21 = virtualinvoke r11.<android.view.KeyEvent: int getKeyCode()>();

        if i21 == 79 goto label11;

        if i21 == 85 goto label11;

        specialinvoke r0.<android.media.session.MediaSession$Callback: void handleMediaPlayPauseKeySingleTapIfPending()>();

        i22 = virtualinvoke r11.<android.view.KeyEvent: int getKeyCode()>();

        if i22 == 126 goto label10;

        if i22 == 127 goto label09;

        tableswitch(i22)
        {
            case 86: goto label08;
            case 87: goto label07;
            case 88: goto label06;
            case 89: goto label05;
            case 90: goto label04;
            default: goto label03;
        };

     label03:
        goto label15;

     label04:
        $l10 = 64L & l20;

        $b11 = $l10 cmp 0L;

        if $b11 == 0 goto label15;

        virtualinvoke r0.<android.media.session.MediaSession$Callback: void onFastForward()>();

        return 1;

     label05:
        $l12 = 8L & l20;

        $b13 = $l12 cmp 0L;

        if $b13 == 0 goto label15;

        virtualinvoke r0.<android.media.session.MediaSession$Callback: void onRewind()>();

        return 1;

     label06:
        $l14 = 16L & l20;

        $b15 = $l14 cmp 0L;

        if $b15 == 0 goto label15;

        virtualinvoke r0.<android.media.session.MediaSession$Callback: void onSkipToPrevious()>();

        return 1;

     label07:
        $l16 = l20 & 32L;

        $b17 = $l16 cmp 0L;

        if $b17 == 0 goto label15;

        virtualinvoke r0.<android.media.session.MediaSession$Callback: void onSkipToNext()>();

        return 1;

     label08:
        $l18 = 1L & l20;

        $b19 = $l18 cmp 0L;

        if $b19 == 0 goto label15;

        virtualinvoke r0.<android.media.session.MediaSession$Callback: void onStop()>();

        return 1;

     label09:
        $l8 = 2L & l20;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label15;

        virtualinvoke r0.<android.media.session.MediaSession$Callback: void onPause()>();

        return 1;

     label10:
        $l6 = 4L & l20;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label15;

        virtualinvoke r0.<android.media.session.MediaSession$Callback: void onPlay()>();

        return 1;

     label11:
        $i1 = virtualinvoke r11.<android.view.KeyEvent: int getRepeatCount()>();

        if $i1 <= 0 goto label12;

        specialinvoke r0.<android.media.session.MediaSession$Callback: void handleMediaPlayPauseKeySingleTapIfPending()>();

        goto label14;

     label12:
        $z1 = r0.<android.media.session.MediaSession$Callback: boolean mMediaPlayPauseKeyPending>;

        if $z1 == 0 goto label13;

        $r10 = r0.<android.media.session.MediaSession$Callback: android.media.session.MediaSession$CallbackMessageHandler mHandler>;

        virtualinvoke $r10.<android.media.session.MediaSession$CallbackMessageHandler: void removeMessages(int)>(24);

        r0.<android.media.session.MediaSession$Callback: boolean mMediaPlayPauseKeyPending> = 0;

        $l4 = l20 & 32L;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label14;

        virtualinvoke r0.<android.media.session.MediaSession$Callback: void onSkipToNext()>();

        goto label14;

     label13:
        r0.<android.media.session.MediaSession$Callback: boolean mMediaPlayPauseKeyPending> = 1;

        r12 = r0.<android.media.session.MediaSession$Callback: android.media.session.MediaSession mSession>;

        $r9 = virtualinvoke r12.<android.media.session.MediaSession: android.media.session.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        $i2 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapTimeout()>();

        $l3 = (long) $i2;

        virtualinvoke r12.<android.media.session.MediaSession: void dispatchMediaButtonDelayed(android.media.session.MediaSessionManager$RemoteUserInfo,android.content.Intent,long)>($r9, r1, $l3);

     label14:
        return 1;

     label15:
        return 0;
    }

    public void onPause()
    {
        android.media.session.MediaSession$Callback r0;

        r0 := @this: android.media.session.MediaSession$Callback;

        return;
    }

    public void onPlay()
    {
        android.media.session.MediaSession$Callback r0;

        r0 := @this: android.media.session.MediaSession$Callback;

        return;
    }

    public void onPlayFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaSession$Callback r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.media.session.MediaSession$Callback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onPlayFromSearch(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaSession$Callback r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.media.session.MediaSession$Callback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onPlayFromUri(android.net.Uri, android.os.Bundle)
    {
        android.media.session.MediaSession$Callback r0;
        android.net.Uri r1;
        android.os.Bundle r2;

        r0 := @this: android.media.session.MediaSession$Callback;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onPrepare()
    {
        android.media.session.MediaSession$Callback r0;

        r0 := @this: android.media.session.MediaSession$Callback;

        return;
    }

    public void onPrepareFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaSession$Callback r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.media.session.MediaSession$Callback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onPrepareFromSearch(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaSession$Callback r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.media.session.MediaSession$Callback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onPrepareFromUri(android.net.Uri, android.os.Bundle)
    {
        android.media.session.MediaSession$Callback r0;
        android.net.Uri r1;
        android.os.Bundle r2;

        r0 := @this: android.media.session.MediaSession$Callback;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onRewind()
    {
        android.media.session.MediaSession$Callback r0;

        r0 := @this: android.media.session.MediaSession$Callback;

        return;
    }

    public void onSeekTo(long)
    {
        android.media.session.MediaSession$Callback r0;
        long l0;

        r0 := @this: android.media.session.MediaSession$Callback;

        l0 := @parameter0: long;

        return;
    }

    public void onSetPlaybackSpeed(float)
    {
        android.media.session.MediaSession$Callback r0;
        float f0;

        r0 := @this: android.media.session.MediaSession$Callback;

        f0 := @parameter0: float;

        return;
    }

    public void onSetRating(android.media.Rating)
    {
        android.media.session.MediaSession$Callback r0;
        android.media.Rating r1;

        r0 := @this: android.media.session.MediaSession$Callback;

        r1 := @parameter0: android.media.Rating;

        return;
    }

    public void onSkipToNext()
    {
        android.media.session.MediaSession$Callback r0;

        r0 := @this: android.media.session.MediaSession$Callback;

        return;
    }

    public void onSkipToPrevious()
    {
        android.media.session.MediaSession$Callback r0;

        r0 := @this: android.media.session.MediaSession$Callback;

        return;
    }

    public void onSkipToQueueItem(long)
    {
        android.media.session.MediaSession$Callback r0;
        long l0;

        r0 := @this: android.media.session.MediaSession$Callback;

        l0 := @parameter0: long;

        return;
    }

    public void onStop()
    {
        android.media.session.MediaSession$Callback r0;

        r0 := @this: android.media.session.MediaSession$Callback;

        return;
    }
}
