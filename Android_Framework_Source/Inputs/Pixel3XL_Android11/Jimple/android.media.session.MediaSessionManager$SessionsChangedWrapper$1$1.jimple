class android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1 extends java.lang.Object implements java.lang.Runnable
{
    final android.media.session.MediaSessionManager$SessionsChangedWrapper$1 this$1;
    final java.util.List val$tokens;

    void <init>(android.media.session.MediaSessionManager$SessionsChangedWrapper$1, java.util.List)
    {
        android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1 r0;
        android.media.session.MediaSessionManager$SessionsChangedWrapper$1 r1;
        java.util.List r2;

        r0 := @this: android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1;

        r1 := @parameter0: android.media.session.MediaSessionManager$SessionsChangedWrapper$1;

        r2 := @parameter1: java.util.List;

        r0.<android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1: android.media.session.MediaSessionManager$SessionsChangedWrapper$1 this$1> = r1;

        r0.<android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1: java.util.List val$tokens> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1 r0;
        int i0, i1;
        android.media.session.MediaSessionManager$SessionsChangedWrapper$1 $r2, $r6;
        android.media.session.MediaSessionManager$SessionsChangedWrapper $r3, $r7;
        java.util.ArrayList $r4;
        java.util.List $r5, $r9;
        android.media.session.MediaController $r8;
        java.lang.Object $r10;
        android.media.session.MediaSession$Token $r11;
        android.content.Context r12;
        android.media.session.MediaSessionManager$OnActiveSessionsChangedListener r13;

        r0 := @this: android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1;

        $r2 = r0.<android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1: android.media.session.MediaSessionManager$SessionsChangedWrapper$1 this$1>;

        $r3 = $r2.<android.media.session.MediaSessionManager$SessionsChangedWrapper$1: android.media.session.MediaSessionManager$SessionsChangedWrapper this$0>;

        r12 = staticinvoke <android.media.session.MediaSessionManager$SessionsChangedWrapper: android.content.Context access$500(android.media.session.MediaSessionManager$SessionsChangedWrapper)>($r3);

        if r12 == null goto label3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1: java.util.List val$tokens>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = new android.media.session.MediaController;

        $r9 = r0.<android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1: java.util.List val$tokens>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);

        $r11 = (android.media.session.MediaSession$Token) $r10;

        specialinvoke $r8.<android.media.session.MediaController: void <init>(android.content.Context,android.media.session.MediaSession$Token)>(r12, $r11);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = r0.<android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1: android.media.session.MediaSessionManager$SessionsChangedWrapper$1 this$1>;

        $r7 = $r6.<android.media.session.MediaSessionManager$SessionsChangedWrapper$1: android.media.session.MediaSessionManager$SessionsChangedWrapper this$0>;

        r13 = staticinvoke <android.media.session.MediaSessionManager$SessionsChangedWrapper: android.media.session.MediaSessionManager$OnActiveSessionsChangedListener access$600(android.media.session.MediaSessionManager$SessionsChangedWrapper)>($r7);

        if r13 == null goto label3;

        interfaceinvoke r13.<android.media.session.MediaSessionManager$OnActiveSessionsChangedListener: void onActiveSessionsChanged(java.util.List)>($r4);

     label3:
        return;
    }
}
