public final class android.media.soundtrigger.SoundTriggerDetector extends java.lang.Object
{
    private static final boolean DBG;
    private static final int MSG_AVAILABILITY_CHANGED;
    private static final int MSG_DETECTION_ERROR;
    private static final int MSG_DETECTION_PAUSE;
    private static final int MSG_DETECTION_RESUME;
    private static final int MSG_SOUND_TRIGGER_DETECTED;
    public static final int RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS;
    public static final int RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO;
    public static final int RECOGNITION_FLAG_ENABLE_AUDIO_ECHO_CANCELLATION;
    public static final int RECOGNITION_FLAG_ENABLE_AUDIO_NOISE_SUPPRESSION;
    public static final int RECOGNITION_FLAG_NONE;
    private static final java.lang.String TAG;
    private final android.media.soundtrigger.SoundTriggerDetector$Callback mCallback;
    private final android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private final android.media.soundtrigger.SoundTriggerDetector$RecognitionCallback mRecognitionCallback;
    private final java.util.UUID mSoundModelId;
    private final com.android.internal.app.ISoundTriggerService mSoundTriggerService;

    void <init>(com.android.internal.app.ISoundTriggerService, java.util.UUID, android.media.soundtrigger.SoundTriggerDetector$Callback, android.os.Handler)
    {
        android.media.soundtrigger.SoundTriggerDetector r0;
        com.android.internal.app.ISoundTriggerService r1;
        java.util.UUID r2;
        android.media.soundtrigger.SoundTriggerDetector$Callback r3;
        android.os.Handler r4;
        java.lang.Object $r5;
        android.media.soundtrigger.SoundTriggerDetector$MyHandler $r6, $r9;
        android.os.Looper $r7;
        android.media.soundtrigger.SoundTriggerDetector$RecognitionCallback $r8;

        r0 := @this: android.media.soundtrigger.SoundTriggerDetector;

        r1 := @parameter0: com.android.internal.app.ISoundTriggerService;

        r2 := @parameter1: java.util.UUID;

        r3 := @parameter2: android.media.soundtrigger.SoundTriggerDetector$Callback;

        r4 := @parameter3: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.media.soundtrigger.SoundTriggerDetector: java.lang.Object mLock> = $r5;

        r0.<android.media.soundtrigger.SoundTriggerDetector: com.android.internal.app.ISoundTriggerService mSoundTriggerService> = r1;

        r0.<android.media.soundtrigger.SoundTriggerDetector: java.util.UUID mSoundModelId> = r2;

        r0.<android.media.soundtrigger.SoundTriggerDetector: android.media.soundtrigger.SoundTriggerDetector$Callback mCallback> = r3;

        if r4 != null goto label1;

        $r9 = new android.media.soundtrigger.SoundTriggerDetector$MyHandler;

        specialinvoke $r9.<android.media.soundtrigger.SoundTriggerDetector$MyHandler: void <init>(android.media.soundtrigger.SoundTriggerDetector)>(r0);

        r0.<android.media.soundtrigger.SoundTriggerDetector: android.os.Handler mHandler> = $r9;

        goto label2;

     label1:
        $r6 = new android.media.soundtrigger.SoundTriggerDetector$MyHandler;

        $r7 = virtualinvoke r4.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r6.<android.media.soundtrigger.SoundTriggerDetector$MyHandler: void <init>(android.media.soundtrigger.SoundTriggerDetector,android.os.Looper)>(r0, $r7);

        r0.<android.media.soundtrigger.SoundTriggerDetector: android.os.Handler mHandler> = $r6;

     label2:
        $r8 = new android.media.soundtrigger.SoundTriggerDetector$RecognitionCallback;

        specialinvoke $r8.<android.media.soundtrigger.SoundTriggerDetector$RecognitionCallback: void <init>(android.media.soundtrigger.SoundTriggerDetector,android.media.soundtrigger.SoundTriggerDetector$1)>(r0, null);

        r0.<android.media.soundtrigger.SoundTriggerDetector: android.media.soundtrigger.SoundTriggerDetector$RecognitionCallback mRecognitionCallback> = $r8;

        return;
    }

    static android.os.Handler access$100(android.media.soundtrigger.SoundTriggerDetector)
    {
        android.media.soundtrigger.SoundTriggerDetector r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.media.soundtrigger.SoundTriggerDetector;

        $r1 = r0.<android.media.soundtrigger.SoundTriggerDetector: android.os.Handler mHandler>;

        return $r1;
    }

    static android.media.soundtrigger.SoundTriggerDetector$Callback access$300(android.media.soundtrigger.SoundTriggerDetector)
    {
        android.media.soundtrigger.SoundTriggerDetector r0;
        android.media.soundtrigger.SoundTriggerDetector$Callback $r1;

        r0 := @parameter0: android.media.soundtrigger.SoundTriggerDetector;

        $r1 = r0.<android.media.soundtrigger.SoundTriggerDetector: android.media.soundtrigger.SoundTriggerDetector$Callback mCallback>;

        return $r1;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        android.media.soundtrigger.SoundTriggerDetector r0;
        java.lang.Throwable $r1;
        java.lang.String r2;
        java.io.PrintWriter r3;
        java.lang.Object r4;

        r0 := @this: android.media.soundtrigger.SoundTriggerDetector;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.PrintWriter;

        r4 = r0.<android.media.soundtrigger.SoundTriggerDetector: java.lang.Object mLock>;

        entermonitor r4;

     label1:
        exitmonitor r4;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r4;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean startRecognition(int)
    {
        android.media.soundtrigger.SoundTriggerDetector r0;
        android.os.ParcelUuid r1;
        android.media.soundtrigger.SoundTriggerDetector$RecognitionCallback r2;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r3;
        int $i0, $i1, $i2, $i3, i4, i7;
        java.util.UUID $r4;
        android.os.RemoteException $r5;
        boolean z1, z2, z3;
        byte b5, b6;
        com.android.internal.app.ISoundTriggerService r6;

        r0 := @this: android.media.soundtrigger.SoundTriggerDetector;

        i4 := @parameter0: int;

        $i0 = i4 & 1;

        if $i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $i1 = i4 & 2;

        if $i1 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        b5 = 0;

        $i2 = i4 & 4;

        if $i2 == 0 goto label5;

        b5 = 0 | 1;

     label5:
        b6 = b5;

        $i3 = i4 & 8;

        if $i3 == 0 goto label6;

        b6 = b5 | 2;

     label6:
        r6 = r0.<android.media.soundtrigger.SoundTriggerDetector: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r1 = new android.os.ParcelUuid;

        $r4 = r0.<android.media.soundtrigger.SoundTriggerDetector: java.util.UUID mSoundModelId>;

        specialinvoke r1.<android.os.ParcelUuid: void <init>(java.util.UUID)>($r4);

        r2 = r0.<android.media.soundtrigger.SoundTriggerDetector: android.media.soundtrigger.SoundTriggerDetector$RecognitionCallback mRecognitionCallback>;

        r3 = new android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        specialinvoke r3.<android.hardware.soundtrigger.SoundTrigger$RecognitionConfig: void <init>(boolean,boolean,android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra[],byte[],int)>(z1, z2, null, null, b6);

        i7 = interfaceinvoke r6.<com.android.internal.app.ISoundTriggerService: int startRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>(r1, r2, r3);

     label7:
        z3 = 0;

        if i7 != 0 goto label8;

        z3 = 1;

     label8:
        return z3;

     label9:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label6 to label7 with label9;
    }

    public boolean stopRecognition()
    {
        android.media.soundtrigger.SoundTriggerDetector r0;
        android.os.ParcelUuid r1;
        int i0;
        java.util.UUID $r2;
        android.media.soundtrigger.SoundTriggerDetector$RecognitionCallback $r3;
        android.os.RemoteException $r4;
        boolean z0;
        com.android.internal.app.ISoundTriggerService r5;

        r0 := @this: android.media.soundtrigger.SoundTriggerDetector;

        z0 = 0;

     label1:
        r5 = r0.<android.media.soundtrigger.SoundTriggerDetector: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r1 = new android.os.ParcelUuid;

        $r2 = r0.<android.media.soundtrigger.SoundTriggerDetector: java.util.UUID mSoundModelId>;

        specialinvoke r1.<android.os.ParcelUuid: void <init>(java.util.UUID)>($r2);

        $r3 = r0.<android.media.soundtrigger.SoundTriggerDetector: android.media.soundtrigger.SoundTriggerDetector$RecognitionCallback mRecognitionCallback>;

        i0 = interfaceinvoke r5.<com.android.internal.app.ISoundTriggerService: int stopRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback)>(r1, $r3);

     label2:
        if i0 != 0 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public static void <clinit>()
    {
        <android.media.soundtrigger.SoundTriggerDetector: java.lang.String TAG> = "SoundTriggerDetector";

        <android.media.soundtrigger.SoundTriggerDetector: int RECOGNITION_FLAG_NONE> = 0;

        <android.media.soundtrigger.SoundTriggerDetector: int RECOGNITION_FLAG_ENABLE_AUDIO_NOISE_SUPPRESSION> = 8;

        <android.media.soundtrigger.SoundTriggerDetector: int RECOGNITION_FLAG_ENABLE_AUDIO_ECHO_CANCELLATION> = 4;

        <android.media.soundtrigger.SoundTriggerDetector: int RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO> = 1;

        <android.media.soundtrigger.SoundTriggerDetector: int RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS> = 2;

        <android.media.soundtrigger.SoundTriggerDetector: int MSG_SOUND_TRIGGER_DETECTED> = 2;

        <android.media.soundtrigger.SoundTriggerDetector: int MSG_DETECTION_RESUME> = 5;

        <android.media.soundtrigger.SoundTriggerDetector: int MSG_DETECTION_PAUSE> = 4;

        <android.media.soundtrigger.SoundTriggerDetector: int MSG_DETECTION_ERROR> = 3;

        <android.media.soundtrigger.SoundTriggerDetector: int MSG_AVAILABILITY_CHANGED> = 1;

        <android.media.soundtrigger.SoundTriggerDetector: boolean DBG> = 0;

        return;
    }
}
