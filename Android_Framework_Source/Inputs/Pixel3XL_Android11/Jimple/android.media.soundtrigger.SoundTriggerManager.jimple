public final class android.media.soundtrigger.SoundTriggerManager extends java.lang.Object
{
    private static final boolean DBG;
    public static final java.lang.String EXTRA_MESSAGE_TYPE;
    public static final java.lang.String EXTRA_RECOGNITION_EVENT;
    public static final java.lang.String EXTRA_STATUS;
    public static final int FLAG_MESSAGE_TYPE_RECOGNITION_ERROR;
    public static final int FLAG_MESSAGE_TYPE_RECOGNITION_EVENT;
    public static final int FLAG_MESSAGE_TYPE_RECOGNITION_PAUSED;
    public static final int FLAG_MESSAGE_TYPE_RECOGNITION_RESUMED;
    public static final int FLAG_MESSAGE_TYPE_UNKNOWN;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final java.util.HashMap mReceiverInstanceMap;
    private final com.android.internal.app.ISoundTriggerService mSoundTriggerService;

    public void <init>(android.content.Context, com.android.internal.app.ISoundTriggerService)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        android.content.Context r1;
        com.android.internal.app.ISoundTriggerService r2;
        java.util.HashMap $r3;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.app.ISoundTriggerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService> = r2;

        r0.<android.media.soundtrigger.SoundTriggerManager: android.content.Context mContext> = r1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<android.media.soundtrigger.SoundTriggerManager: java.util.HashMap mReceiverInstanceMap> = $r3;

        return;
    }

    public android.media.soundtrigger.SoundTriggerDetector createSoundTriggerDetector(java.util.UUID, android.media.soundtrigger.SoundTriggerDetector$Callback, android.os.Handler)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        java.util.UUID r1;
        android.os.Handler r2;
        android.media.soundtrigger.SoundTriggerDetector r3, $r6;
        java.util.HashMap $r4, $r8;
        java.lang.Object $r5;
        com.android.internal.app.ISoundTriggerService $r7;
        android.media.soundtrigger.SoundTriggerDetector$Callback r10;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r1 := @parameter0: java.util.UUID;

        r10 := @parameter1: android.media.soundtrigger.SoundTriggerDetector$Callback;

        r2 := @parameter2: android.os.Handler;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<android.media.soundtrigger.SoundTriggerManager: java.util.HashMap mReceiverInstanceMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.media.soundtrigger.SoundTriggerDetector) $r5;

        $r6 = new android.media.soundtrigger.SoundTriggerDetector;

        $r7 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        specialinvoke $r6.<android.media.soundtrigger.SoundTriggerDetector: void <init>(com.android.internal.app.ISoundTriggerService,java.util.UUID,android.media.soundtrigger.SoundTriggerDetector$Callback,android.os.Handler)>($r7, r1, r10, r2);

        $r8 = r0.<android.media.soundtrigger.SoundTriggerManager: java.util.HashMap mReceiverInstanceMap>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return $r6;
    }

    public void deleteModel(java.util.UUID)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        com.android.internal.app.ISoundTriggerService r1;
        android.os.ParcelUuid r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.util.UUID r5;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r5 := @parameter0: java.util.UUID;

     label1:
        r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r2 = new android.os.ParcelUuid;

        specialinvoke r2.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r5);

        interfaceinvoke r1.<com.android.internal.app.ISoundTriggerService: void deleteSoundModel(android.os.ParcelUuid)>(r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getDetectionServiceOperationsTimeout()
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        int i0;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        android.provider.Settings$SettingNotFoundException $r4;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

     label1:
        $r2 = r0.<android.media.soundtrigger.SoundTriggerManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r3, "sound_trigger_detection_service_op_timeout");

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return 2147483647;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

    public android.media.soundtrigger.SoundTriggerManager$Model getModel(java.util.UUID)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        com.android.internal.app.ISoundTriggerService r1;
        android.os.ParcelUuid r2;
        android.media.soundtrigger.SoundTriggerManager$Model $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.util.UUID r6;
        android.hardware.soundtrigger.SoundTrigger$GenericSoundModel r7;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r6 := @parameter0: java.util.UUID;

     label1:
        r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r2 = new android.os.ParcelUuid;

        specialinvoke r2.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r6);

        r7 = interfaceinvoke r1.<com.android.internal.app.ISoundTriggerService: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getSoundModel(android.os.ParcelUuid)>(r2);

     label2:
        if r7 != null goto label3;

        return null;

     label3:
        $r3 = new android.media.soundtrigger.SoundTriggerManager$Model;

        specialinvoke $r3.<android.media.soundtrigger.SoundTriggerManager$Model: void <init>(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)>(r7);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int getModelState(java.util.UUID)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        com.android.internal.app.ISoundTriggerService r1;
        android.os.ParcelUuid r2;
        int i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.util.UUID r5;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r5 := @parameter0: java.util.UUID;

        if r5 != null goto label1;

        return -2147483648;

     label1:
        r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r2 = new android.os.ParcelUuid;

        specialinvoke r2.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r5);

        i0 = interfaceinvoke r1.<com.android.internal.app.ISoundTriggerService: int getModelState(android.os.ParcelUuid)>(r2);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        com.android.internal.app.ISoundTriggerService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.hardware.soundtrigger.SoundTrigger$ModuleProperties r4;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

     label1:
        $r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r4 = interfaceinvoke $r1.<com.android.internal.app.ISoundTriggerService: android.hardware.soundtrigger.SoundTrigger$ModuleProperties getModuleProperties()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getParameter(java.util.UUID, int)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        com.android.internal.app.ISoundTriggerService r1;
        android.os.ParcelUuid r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.util.UUID r5;
        int i0, i1;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r5 := @parameter0: java.util.UUID;

        i0 := @parameter1: int;

     label1:
        r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r2 = new android.os.ParcelUuid;

        specialinvoke r2.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r5);

        i1 = interfaceinvoke r1.<com.android.internal.app.ISoundTriggerService: int getParameter(android.os.ParcelUuid,int)>(r2, i0);

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isRecognitionActive(java.util.UUID)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        com.android.internal.app.ISoundTriggerService r1;
        android.os.ParcelUuid r2;
        boolean z0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.util.UUID r5;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r5 := @parameter0: java.util.UUID;

        if r5 != null goto label1;

        return 0;

     label1:
        r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r2 = new android.os.ParcelUuid;

        specialinvoke r2.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r5);

        z0 = interfaceinvoke r1.<com.android.internal.app.ISoundTriggerService: boolean isRecognitionActive(android.os.ParcelUuid)>(r2);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int loadSoundModel(android.hardware.soundtrigger.SoundTrigger$SoundModel)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel $r1;
        com.android.internal.app.ISoundTriggerService $r2, $r4;
        android.hardware.soundtrigger.SoundTrigger$GenericSoundModel $r3;
        int $i0, i2, i3;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.hardware.soundtrigger.SoundTrigger$SoundModel r7;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r7 := @parameter0: android.hardware.soundtrigger.SoundTrigger$SoundModel;

        if r7 != null goto label1;

        return -2147483648;

     label1:
        i2 = virtualinvoke r7.<android.hardware.soundtrigger.SoundTrigger$SoundModel: int getType()>();

     label2:
        if i2 == 0 goto label6;

        if i2 == 1 goto label5;

     label3:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SoundTriggerManager", "Unkown model type");

     label4:
        return -2147483648;

     label5:
        $r4 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        $r3 = (android.hardware.soundtrigger.SoundTrigger$GenericSoundModel) r7;

        $i0 = interfaceinvoke $r4.<com.android.internal.app.ISoundTriggerService: int loadGenericSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)>($r3);

        return $i0;

     label6:
        $r2 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        $r1 = (android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel) r7;

        i3 = interfaceinvoke $r2.<com.android.internal.app.ISoundTriggerService: int loadKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel)>($r1);

     label7:
        return i3;

     label8:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label5 to label6 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    public android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(java.util.UUID, int)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        int i0;
        com.android.internal.app.ISoundTriggerService r1;
        android.os.ParcelUuid r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.util.UUID r5;
        android.hardware.soundtrigger.SoundTrigger$ModelParamRange r6;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r5 := @parameter0: java.util.UUID;

        i0 := @parameter1: int;

     label1:
        r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r2 = new android.os.ParcelUuid;

        specialinvoke r2.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r5);

        r6 = interfaceinvoke r1.<com.android.internal.app.ISoundTriggerService: android.hardware.soundtrigger.SoundTrigger$ModelParamRange queryParameter(android.os.ParcelUuid,int)>(r2, i0);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int setParameter(java.util.UUID, int, int)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        int i0, i1, i2;
        com.android.internal.app.ISoundTriggerService r1;
        android.os.ParcelUuid r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.util.UUID r5;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r5 := @parameter0: java.util.UUID;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

     label1:
        r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r2 = new android.os.ParcelUuid;

        specialinvoke r2.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r5);

        i2 = interfaceinvoke r1.<com.android.internal.app.ISoundTriggerService: int setParameter(android.os.ParcelUuid,int,int)>(r2, i1, i0);

     label2:
        return i2;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int startRecognition(java.util.UUID, android.os.Bundle, android.content.ComponentName, android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        android.os.Bundle r1;
        android.content.ComponentName r2;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig r3;
        com.android.internal.app.ISoundTriggerService r4;
        android.os.ParcelUuid r5;
        int i0;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        java.util.UUID r11;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r11 := @parameter0: java.util.UUID;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.content.ComponentName;

        r3 := @parameter3: android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r11);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

     label1:
        r4 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r5 = new android.os.ParcelUuid;

        specialinvoke r5.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r11);

        i0 = interfaceinvoke r4.<com.android.internal.app.ISoundTriggerService: int startRecognitionForService(android.os.ParcelUuid,android.os.Bundle,android.content.ComponentName,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>(r5, r1, r2, r3);

     label2:
        return i0;

     label3:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int stopRecognition(java.util.UUID)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        com.android.internal.app.ISoundTriggerService r1;
        android.os.ParcelUuid r2;
        int i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.util.UUID r5;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r5 := @parameter0: java.util.UUID;

        if r5 != null goto label1;

        return -2147483648;

     label1:
        r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r2 = new android.os.ParcelUuid;

        specialinvoke r2.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r5);

        i0 = interfaceinvoke r1.<com.android.internal.app.ISoundTriggerService: int stopRecognitionForService(android.os.ParcelUuid)>(r2);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int unloadSoundModel(java.util.UUID)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        com.android.internal.app.ISoundTriggerService r1;
        android.os.ParcelUuid r2;
        int i0;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.util.UUID r5;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r5 := @parameter0: java.util.UUID;

        if r5 != null goto label1;

        return -2147483648;

     label1:
        r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        r2 = new android.os.ParcelUuid;

        specialinvoke r2.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r5);

        i0 = interfaceinvoke r1.<com.android.internal.app.ISoundTriggerService: int unloadSoundModel(android.os.ParcelUuid)>(r2);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateModel(android.media.soundtrigger.SoundTriggerManager$Model)
    {
        android.media.soundtrigger.SoundTriggerManager r0;
        com.android.internal.app.ISoundTriggerService $r1;
        android.hardware.soundtrigger.SoundTrigger$GenericSoundModel $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.media.soundtrigger.SoundTriggerManager$Model r5;

        r0 := @this: android.media.soundtrigger.SoundTriggerManager;

        r5 := @parameter0: android.media.soundtrigger.SoundTriggerManager$Model;

     label1:
        $r1 = r0.<android.media.soundtrigger.SoundTriggerManager: com.android.internal.app.ISoundTriggerService mSoundTriggerService>;

        $r2 = virtualinvoke r5.<android.media.soundtrigger.SoundTriggerManager$Model: android.hardware.soundtrigger.SoundTrigger$GenericSoundModel getGenericSoundModel()>();

        interfaceinvoke $r1.<com.android.internal.app.ISoundTriggerService: void updateSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)>($r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.media.soundtrigger.SoundTriggerManager: java.lang.String TAG> = "SoundTriggerManager";

        <android.media.soundtrigger.SoundTriggerManager: int FLAG_MESSAGE_TYPE_UNKNOWN> = -1;

        <android.media.soundtrigger.SoundTriggerManager: int FLAG_MESSAGE_TYPE_RECOGNITION_RESUMED> = 3;

        <android.media.soundtrigger.SoundTriggerManager: int FLAG_MESSAGE_TYPE_RECOGNITION_PAUSED> = 2;

        <android.media.soundtrigger.SoundTriggerManager: int FLAG_MESSAGE_TYPE_RECOGNITION_EVENT> = 0;

        <android.media.soundtrigger.SoundTriggerManager: int FLAG_MESSAGE_TYPE_RECOGNITION_ERROR> = 1;

        <android.media.soundtrigger.SoundTriggerManager: java.lang.String EXTRA_STATUS> = "android.media.soundtrigger.STATUS";

        <android.media.soundtrigger.SoundTriggerManager: java.lang.String EXTRA_RECOGNITION_EVENT> = "android.media.soundtrigger.RECOGNITION_EVENT";

        <android.media.soundtrigger.SoundTriggerManager: java.lang.String EXTRA_MESSAGE_TYPE> = "android.media.soundtrigger.MESSAGE_TYPE";

        <android.media.soundtrigger.SoundTriggerManager: boolean DBG> = 0;

        return;
    }
}
