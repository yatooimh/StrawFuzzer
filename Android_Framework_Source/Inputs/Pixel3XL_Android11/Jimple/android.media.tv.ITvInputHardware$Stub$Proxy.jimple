class android.media.tv.ITvInputHardware$Stub$Proxy extends java.lang.Object implements android.media.tv.ITvInputHardware
{
    public static android.media.tv.ITvInputHardware sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.tv.ITvInputHardware$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.tv.ITvInputHardware$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.ITvInputHardware$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.tv.ITvInputHardware$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.tv.ITvInputHardware$Stub$Proxy;

        $r1 = r0.<android.media.tv.ITvInputHardware$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.tv.ITvInputHardware$Stub$Proxy r0;

        r0 := @this: android.media.tv.ITvInputHardware$Stub$Proxy;

        return "android.media.tv.ITvInputHardware";
    }

    public void overrideAudioSink(int, java.lang.String, int, int, int) throws android.os.RemoteException
    {
        android.media.tv.ITvInputHardware$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputHardware $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.tv.ITvInputHardware$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputHardware");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        $r3 = r0.<android.media.tv.ITvInputHardware$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputHardware$Stub: android.media.tv.ITvInputHardware getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvInputHardware$Stub: android.media.tv.ITvInputHardware getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputHardware: void overrideAudioSink(int,java.lang.String,int,int,int)>(i0, r7, i1, i2, i3);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setStreamVolume(float) throws android.os.RemoteException
    {
        android.media.tv.ITvInputHardware$Stub$Proxy r0;
        float f0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.media.tv.ITvInputHardware $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.media.tv.ITvInputHardware$Stub$Proxy;

        f0 := @parameter0: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputHardware");

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        $r4 = r0.<android.media.tv.ITvInputHardware$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.media.tv.ITvInputHardware$Stub: android.media.tv.ITvInputHardware getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.media.tv.ITvInputHardware$Stub: android.media.tv.ITvInputHardware getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.tv.ITvInputHardware: void setStreamVolume(float)>(f0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean setSurface(android.view.Surface, android.media.tv.TvStreamConfig) throws android.os.RemoteException
    {
        android.media.tv.ITvInputHardware$Stub$Proxy r0;
        android.media.tv.TvStreamConfig r1;
        android.os.Parcel r2, r3;
        int i0;
        android.os.IBinder $r4;
        boolean $z0, z1, z2;
        android.media.tv.ITvInputHardware $r5, $r6;
        java.lang.Throwable $r7;
        android.view.Surface r8;

        r0 := @this: android.media.tv.ITvInputHardware$Stub$Proxy;

        r8 := @parameter0: android.view.Surface;

        r1 := @parameter1: android.media.tv.TvStreamConfig;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputHardware");

     label02:
        z1 = 1;

        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.view.Surface: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.media.tv.TvStreamConfig: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r4 = r0.<android.media.tv.ITvInputHardware$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.media.tv.ITvInputHardware$Stub: android.media.tv.ITvInputHardware getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.media.tv.ITvInputHardware$Stub: android.media.tv.ITvInputHardware getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.media.tv.ITvInputHardware: boolean setSurface(android.view.Surface,android.media.tv.TvStreamConfig)>(r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label13:
        if i0 == 0 goto label14;

        goto label15;

     label14:
        z1 = 0;

     label15:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label16:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
    }
}
