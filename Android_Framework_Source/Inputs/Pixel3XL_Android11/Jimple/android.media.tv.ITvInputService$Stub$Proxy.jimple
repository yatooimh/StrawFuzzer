class android.media.tv.ITvInputService$Stub$Proxy extends java.lang.Object implements android.media.tv.ITvInputService
{
    public static android.media.tv.ITvInputService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        $r1 = r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void createRecordingSession(android.media.tv.ITvInputSessionCallback, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.media.tv.ITvInputService $r5, $r6;
        java.lang.Throwable $r7;
        android.media.tv.ITvInputSessionCallback r8;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        r8 := @parameter0: android.media.tv.ITvInputSessionCallback;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputService");

     label2:
        if r8 == null goto label5;

     label3:
        r9 = interfaceinvoke r8.<android.media.tv.ITvInputSessionCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r9 = null;

     label6:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r4 = r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, null, 1);

        if $z0 != 0 goto label8;

        $r5 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        if $r5 == null goto label8;

        $r6 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        interfaceinvoke $r6.<android.media.tv.ITvInputService: void createRecordingSession(android.media.tv.ITvInputSessionCallback,java.lang.String,java.lang.String)>(r8, r1, r2);

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void createSession(android.view.InputChannel, android.media.tv.ITvInputSessionCallback, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        android.media.tv.ITvInputSessionCallback r1;
        java.lang.String r2, r3;
        android.os.Parcel r4;
        android.os.IBinder $r5, r10;
        boolean $z0;
        android.media.tv.ITvInputService $r6, $r7;
        java.lang.Throwable $r8;
        android.view.InputChannel r9;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        r9 := @parameter0: android.view.InputChannel;

        r1 := @parameter1: android.media.tv.ITvInputSessionCallback;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputService");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.view.InputChannel: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        r10 = interfaceinvoke r1.<android.media.tv.ITvInputSessionCallback: android.os.IBinder asBinder()>();

     label08:
        goto label10;

     label09:
        r10 = null;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r5 = r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r4, null, 1);

        if $z0 != 0 goto label12;

        $r6 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        if $r6 == null goto label12;

        $r7 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        interfaceinvoke $r7.<android.media.tv.ITvInputService: void createSession(android.view.InputChannel,android.media.tv.ITvInputSessionCallback,java.lang.String,java.lang.String)>(r9, r1, r2, r3);

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        return "android.media.tv.ITvInputService";
    }

    public void notifyHardwareAdded(android.media.tv.TvInputHardwareInfo) throws android.os.RemoteException
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputService $r3, $r4;
        java.lang.Throwable $r5;
        android.media.tv.TvInputHardwareInfo r6;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        r6 := @parameter0: android.media.tv.TvInputHardwareInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputService");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.media.tv.TvInputHardwareInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputService: void notifyHardwareAdded(android.media.tv.TvInputHardwareInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void notifyHardwareRemoved(android.media.tv.TvInputHardwareInfo) throws android.os.RemoteException
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputService $r3, $r4;
        java.lang.Throwable $r5;
        android.media.tv.TvInputHardwareInfo r6;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        r6 := @parameter0: android.media.tv.TvInputHardwareInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputService");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.media.tv.TvInputHardwareInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputService: void notifyHardwareRemoved(android.media.tv.TvInputHardwareInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void notifyHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo) throws android.os.RemoteException
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputService $r3, $r4;
        java.lang.Throwable $r5;
        android.hardware.hdmi.HdmiDeviceInfo r6;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        r6 := @parameter0: android.hardware.hdmi.HdmiDeviceInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputService");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.hardware.hdmi.HdmiDeviceInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputService: void notifyHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void notifyHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo) throws android.os.RemoteException
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputService $r3, $r4;
        java.lang.Throwable $r5;
        android.hardware.hdmi.HdmiDeviceInfo r6;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        r6 := @parameter0: android.hardware.hdmi.HdmiDeviceInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputService");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.hardware.hdmi.HdmiDeviceInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputService: void notifyHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void notifyHdmiDeviceUpdated(android.hardware.hdmi.HdmiDeviceInfo) throws android.os.RemoteException
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputService $r3, $r4;
        java.lang.Throwable $r5;
        android.hardware.hdmi.HdmiDeviceInfo r6;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        r6 := @parameter0: android.hardware.hdmi.HdmiDeviceInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputService");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.hardware.hdmi.HdmiDeviceInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputService: void notifyHdmiDeviceUpdated(android.hardware.hdmi.HdmiDeviceInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void registerCallback(android.media.tv.ITvInputServiceCallback) throws android.os.RemoteException
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.media.tv.ITvInputService $r3, $r4;
        java.lang.Throwable $r5;
        android.media.tv.ITvInputServiceCallback r6;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        r6 := @parameter0: android.media.tv.ITvInputServiceCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputService");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.media.tv.ITvInputServiceCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputService: void registerCallback(android.media.tv.ITvInputServiceCallback)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void unregisterCallback(android.media.tv.ITvInputServiceCallback) throws android.os.RemoteException
    {
        android.media.tv.ITvInputService$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.media.tv.ITvInputService $r3, $r4;
        java.lang.Throwable $r5;
        android.media.tv.ITvInputServiceCallback r6;

        r0 := @this: android.media.tv.ITvInputService$Stub$Proxy;

        r6 := @parameter0: android.media.tv.ITvInputServiceCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputService");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.media.tv.ITvInputServiceCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.media.tv.ITvInputService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputService$Stub: android.media.tv.ITvInputService getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputService: void unregisterCallback(android.media.tv.ITvInputServiceCallback)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }
}
