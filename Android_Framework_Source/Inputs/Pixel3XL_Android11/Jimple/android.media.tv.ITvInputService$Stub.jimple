public abstract class android.media.tv.ITvInputService$Stub extends android.os.Binder implements android.media.tv.ITvInputService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_createRecordingSession;
    static final int TRANSACTION_createSession;
    static final int TRANSACTION_notifyHardwareAdded;
    static final int TRANSACTION_notifyHardwareRemoved;
    static final int TRANSACTION_notifyHdmiDeviceAdded;
    static final int TRANSACTION_notifyHdmiDeviceRemoved;
    static final int TRANSACTION_notifyHdmiDeviceUpdated;
    static final int TRANSACTION_registerCallback;
    static final int TRANSACTION_unregisterCallback;

    public void <init>()
    {
        android.media.tv.ITvInputService$Stub r0;

        r0 := @this: android.media.tv.ITvInputService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.media.tv.ITvInputService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.media.tv.ITvInputService");

        return;
    }

    public static android.media.tv.ITvInputService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.media.tv.ITvInputService$Stub$Proxy $r2;
        boolean $z0;
        android.media.tv.ITvInputService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.media.tv.ITvInputService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.media.tv.ITvInputService;

        if $z0 == 0 goto label2;

        $r3 = (android.media.tv.ITvInputService) r1;

        return $r3;

     label2:
        $r2 = new android.media.tv.ITvInputService$Stub$Proxy;

        specialinvoke $r2.<android.media.tv.ITvInputService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.media.tv.ITvInputService getDefaultImpl()
    {
        android.media.tv.ITvInputService $r0;

        $r0 = <android.media.tv.ITvInputService$Stub$Proxy: android.media.tv.ITvInputService sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label10;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label07;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label04;
            case 8: goto label03;
            case 9: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "notifyHdmiDeviceUpdated";

     label03:
        return "notifyHdmiDeviceRemoved";

     label04:
        return "notifyHdmiDeviceAdded";

     label05:
        return "notifyHardwareRemoved";

     label06:
        return "notifyHardwareAdded";

     label07:
        return "createRecordingSession";

     label08:
        return "createSession";

     label09:
        return "unregisterCallback";

     label10:
        return "registerCallback";
    }

    public static boolean setDefaultImpl(android.media.tv.ITvInputService)
    {
        android.media.tv.ITvInputService r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.media.tv.ITvInputService;

        $r1 = <android.media.tv.ITvInputService$Stub$Proxy: android.media.tv.ITvInputService sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.media.tv.ITvInputService$Stub$Proxy: android.media.tv.ITvInputService sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.media.tv.ITvInputService$Stub r0;

        r0 := @this: android.media.tv.ITvInputService$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.media.tv.ITvInputService$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.media.tv.ITvInputService$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.media.tv.ITvInputService$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.media.tv.ITvInputService$Stub r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.os.Parcelable$Creator $r1, $r3, $r5, $r7, $r9, $r19;
        java.lang.Object $r2, $r4, $r6, $r8, $r10, $r20;
        android.os.IBinder $r11, $r15, $r21, $r23;
        android.media.tv.ITvInputSessionCallback $r12, $r16;
        java.lang.String $r13, $r14, $r17, $r18;
        android.media.tv.ITvInputServiceCallback $r22, $r24;
        boolean $z0;
        android.os.Parcel r25, r26;
        android.hardware.hdmi.HdmiDeviceInfo r27, r28, r29;
        android.media.tv.TvInputHardwareInfo r30, r31;
        android.view.InputChannel r32;

        r0 := @this: android.media.tv.ITvInputService$Stub;

        i0 := @parameter0: int;

        r25 := @parameter1: android.os.Parcel;

        r26 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        if i0 == 1598968902 goto label23;

        tableswitch(i0)
        {
            case 1: goto label22;
            case 2: goto label21;
            case 3: goto label18;
            case 4: goto label17;
            case 5: goto label14;
            case 6: goto label11;
            case 7: goto label08;
            case 8: goto label05;
            case 9: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r25, r26, i1);

        return $z0;

     label02:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.tv.ITvInputService");

        $i2 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label03;

        $r1 = <android.hardware.hdmi.HdmiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        $r2 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r27 = (android.hardware.hdmi.HdmiDeviceInfo) $r2;

        goto label04;

     label03:
        r27 = null;

     label04:
        virtualinvoke r0.<android.media.tv.ITvInputService$Stub: void notifyHdmiDeviceUpdated(android.hardware.hdmi.HdmiDeviceInfo)>(r27);

        return 1;

     label05:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.tv.ITvInputService");

        $i3 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label06;

        $r3 = <android.hardware.hdmi.HdmiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r28 = (android.hardware.hdmi.HdmiDeviceInfo) $r4;

        goto label07;

     label06:
        r28 = null;

     label07:
        virtualinvoke r0.<android.media.tv.ITvInputService$Stub: void notifyHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>(r28);

        return 1;

     label08:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.tv.ITvInputService");

        $i4 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label09;

        $r5 = <android.hardware.hdmi.HdmiDeviceInfo: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r29 = (android.hardware.hdmi.HdmiDeviceInfo) $r6;

        goto label10;

     label09:
        r29 = null;

     label10:
        virtualinvoke r0.<android.media.tv.ITvInputService$Stub: void notifyHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>(r29);

        return 1;

     label11:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.tv.ITvInputService");

        $i5 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label12;

        $r7 = <android.media.tv.TvInputHardwareInfo: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r30 = (android.media.tv.TvInputHardwareInfo) $r8;

        goto label13;

     label12:
        r30 = null;

     label13:
        virtualinvoke r0.<android.media.tv.ITvInputService$Stub: void notifyHardwareRemoved(android.media.tv.TvInputHardwareInfo)>(r30);

        return 1;

     label14:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.tv.ITvInputService");

        $i6 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label15;

        $r9 = <android.media.tv.TvInputHardwareInfo: android.os.Parcelable$Creator CREATOR>;

        $r10 = interfaceinvoke $r9.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r31 = (android.media.tv.TvInputHardwareInfo) $r10;

        goto label16;

     label15:
        r31 = null;

     label16:
        virtualinvoke r0.<android.media.tv.ITvInputService$Stub: void notifyHardwareAdded(android.media.tv.TvInputHardwareInfo)>(r31);

        return 1;

     label17:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.tv.ITvInputService");

        $r11 = virtualinvoke r25.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r12 = staticinvoke <android.media.tv.ITvInputSessionCallback$Stub: android.media.tv.ITvInputSessionCallback asInterface(android.os.IBinder)>($r11);

        $r13 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        $r14 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.tv.ITvInputService$Stub: void createRecordingSession(android.media.tv.ITvInputSessionCallback,java.lang.String,java.lang.String)>($r12, $r13, $r14);

        return 1;

     label18:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.tv.ITvInputService");

        $i7 = virtualinvoke r25.<android.os.Parcel: int readInt()>();

        if $i7 == 0 goto label19;

        $r19 = <android.view.InputChannel: android.os.Parcelable$Creator CREATOR>;

        $r20 = interfaceinvoke $r19.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r25);

        r32 = (android.view.InputChannel) $r20;

        goto label20;

     label19:
        r32 = null;

     label20:
        $r15 = virtualinvoke r25.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r16 = staticinvoke <android.media.tv.ITvInputSessionCallback$Stub: android.media.tv.ITvInputSessionCallback asInterface(android.os.IBinder)>($r15);

        $r17 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        $r18 = virtualinvoke r25.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.media.tv.ITvInputService$Stub: void createSession(android.view.InputChannel,android.media.tv.ITvInputSessionCallback,java.lang.String,java.lang.String)>(r32, $r16, $r17, $r18);

        return 1;

     label21:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.tv.ITvInputService");

        $r21 = virtualinvoke r25.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r22 = staticinvoke <android.media.tv.ITvInputServiceCallback$Stub: android.media.tv.ITvInputServiceCallback asInterface(android.os.IBinder)>($r21);

        virtualinvoke r0.<android.media.tv.ITvInputService$Stub: void unregisterCallback(android.media.tv.ITvInputServiceCallback)>($r22);

        return 1;

     label22:
        virtualinvoke r25.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.tv.ITvInputService");

        $r23 = virtualinvoke r25.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r24 = staticinvoke <android.media.tv.ITvInputServiceCallback$Stub: android.media.tv.ITvInputServiceCallback asInterface(android.os.IBinder)>($r23);

        virtualinvoke r0.<android.media.tv.ITvInputService$Stub: void registerCallback(android.media.tv.ITvInputServiceCallback)>($r24);

        return 1;

     label23:
        virtualinvoke r26.<android.os.Parcel: void writeString(java.lang.String)>("android.media.tv.ITvInputService");

        return 1;
    }

    public static void <clinit>()
    {
        <android.media.tv.ITvInputService$Stub: int TRANSACTION_unregisterCallback> = 2;

        <android.media.tv.ITvInputService$Stub: int TRANSACTION_registerCallback> = 1;

        <android.media.tv.ITvInputService$Stub: int TRANSACTION_notifyHdmiDeviceUpdated> = 9;

        <android.media.tv.ITvInputService$Stub: int TRANSACTION_notifyHdmiDeviceRemoved> = 8;

        <android.media.tv.ITvInputService$Stub: int TRANSACTION_notifyHdmiDeviceAdded> = 7;

        <android.media.tv.ITvInputService$Stub: int TRANSACTION_notifyHardwareRemoved> = 6;

        <android.media.tv.ITvInputService$Stub: int TRANSACTION_notifyHardwareAdded> = 5;

        <android.media.tv.ITvInputService$Stub: int TRANSACTION_createSession> = 3;

        <android.media.tv.ITvInputService$Stub: int TRANSACTION_createRecordingSession> = 4;

        <android.media.tv.ITvInputService$Stub: java.lang.String DESCRIPTOR> = "android.media.tv.ITvInputService";

        return;
    }
}
