class android.media.tv.ITvInputSession$Stub$Proxy extends java.lang.Object implements android.media.tv.ITvInputSession
{
    public static android.media.tv.ITvInputSession sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void appPrivateCommand(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public android.os.IBinder asBinder()
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        $r1 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void createOverlayView(android.os.IBinder, android.graphics.Rect) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.graphics.Rect r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.graphics.Rect;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void createOverlayView(android.os.IBinder,android.graphics.Rect)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void dispatchSurfaceChanged(int, int, int) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void dispatchSurfaceChanged(int,int,int)>(i0, i1, i2);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        return "android.media.tv.ITvInputSession";
    }

    public void relayoutOverlayView(android.graphics.Rect) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputSession $r3, $r4;
        java.lang.Throwable $r5;
        android.graphics.Rect r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r6 := @parameter0: android.graphics.Rect;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputSession: void relayoutOverlayView(android.graphics.Rect)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void release() throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void release()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void removeOverlayView() throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void removeOverlayView()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void selectTrack(int, java.lang.String) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputSession $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputSession: void selectTrack(int,java.lang.String)>(i0, r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setCaptionEnabled(boolean) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void setCaptionEnabled(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setMain(boolean) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void setMain(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setSurface(android.view.Surface) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputSession $r3, $r4;
        java.lang.Throwable $r5;
        android.view.Surface r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r6 := @parameter0: android.view.Surface;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.view.Surface: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputSession: void setSurface(android.view.Surface)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void setVolume(float) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        float f0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        f0 := @parameter0: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void setVolume(float)>(f0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void startRecording(android.net.Uri, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Uri r7;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r7 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void startRecording(android.net.Uri,android.os.Bundle)>(r7, r1);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void stopRecording() throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void stopRecording()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void timeShiftEnablePositionTracking(boolean) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;
        byte b0;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void timeShiftEnablePositionTracking(boolean)>(z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void timeShiftPause() throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void timeShiftPause()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void timeShiftPlay(android.net.Uri) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputSession $r3, $r4;
        java.lang.Throwable $r5;
        android.net.Uri r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r6 := @parameter0: android.net.Uri;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputSession: void timeShiftPlay(android.net.Uri)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void timeShiftResume() throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void timeShiftResume()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void timeShiftSeekTo(long) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void timeShiftSeekTo(long)>(l0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void timeShiftSetPlaybackParams(android.media.PlaybackParams) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputSession $r3, $r4;
        java.lang.Throwable $r5;
        android.media.PlaybackParams r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r6 := @parameter0: android.media.PlaybackParams;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.media.PlaybackParams: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputSession: void timeShiftSetPlaybackParams(android.media.PlaybackParams)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void tune(android.net.Uri, android.os.Bundle) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.media.tv.ITvInputSession $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Uri r7;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r7 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r3 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, null, 1);

        if $z0 != 0 goto label12;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r4 == null goto label12;

        $r5 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvInputSession: void tune(android.net.Uri,android.os.Bundle)>(r7, r1);

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label13:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void unblockContent(java.lang.String) throws android.os.RemoteException
    {
        android.media.tv.ITvInputSession$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.media.tv.ITvInputSession $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.media.tv.ITvInputSession$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvInputSession");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<android.media.tv.ITvInputSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvInputSession$Stub: android.media.tv.ITvInputSession getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvInputSession: void unblockContent(java.lang.String)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
