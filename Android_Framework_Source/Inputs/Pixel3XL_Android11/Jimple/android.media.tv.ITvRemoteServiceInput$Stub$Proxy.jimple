class android.media.tv.ITvRemoteServiceInput$Stub$Proxy extends java.lang.Object implements android.media.tv.ITvRemoteServiceInput
{
    public static android.media.tv.ITvRemoteServiceInput sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        $r1 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void clearInputBridge(android.os.IBinder) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void clearInputBridge(android.os.IBinder)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void closeInputBridge(android.os.IBinder) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void closeInputBridge(android.os.IBinder)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        return "android.media.tv.ITvRemoteServiceInput";
    }

    public void openGamepadBridge(android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r3 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvRemoteServiceInput: void openGamepadBridge(android.os.IBinder,java.lang.String)>(r7, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void openInputBridge(android.os.IBinder, java.lang.String, int, int, int) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        java.lang.String r1;
        int i0, i1, i2;
        android.os.Parcel r2;
        android.os.IBinder $r3, r7;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        $r3 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r5.<android.media.tv.ITvRemoteServiceInput: void openInputBridge(android.os.IBinder,java.lang.String,int,int,int)>(r7, r1, i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void sendGamepadAxisValue(android.os.IBinder, int, float) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        int i0;
        float f0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void sendGamepadAxisValue(android.os.IBinder,int,float)>(r6, i0, f0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void sendGamepadKeyDown(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void sendGamepadKeyDown(android.os.IBinder,int)>(r6, i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void sendGamepadKeyUp(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void sendGamepadKeyUp(android.os.IBinder,int)>(r6, i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void sendKeyDown(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void sendKeyDown(android.os.IBinder,int)>(r6, i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void sendKeyUp(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void sendKeyUp(android.os.IBinder,int)>(r6, i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void sendPointerDown(android.os.IBinder, int, int, int) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void sendPointerDown(android.os.IBinder,int,int,int)>(r6, i0, i1, i2);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void sendPointerSync(android.os.IBinder) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void sendPointerSync(android.os.IBinder)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void sendPointerUp(android.os.IBinder, int) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void sendPointerUp(android.os.IBinder,int)>(r6, i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void sendTimestamp(android.os.IBinder, long) throws android.os.RemoteException
    {
        android.media.tv.ITvRemoteServiceInput$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r6;
        boolean $z0;
        android.media.tv.ITvRemoteServiceInput $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.media.tv.ITvRemoteServiceInput$Stub$Proxy;

        r6 := @parameter0: android.os.IBinder;

        l0 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.tv.ITvRemoteServiceInput");

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r2 = r0.<android.media.tv.ITvRemoteServiceInput$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.media.tv.ITvRemoteServiceInput$Stub: android.media.tv.ITvRemoteServiceInput getDefaultImpl()>();

        interfaceinvoke $r4.<android.media.tv.ITvRemoteServiceInput: void sendTimestamp(android.os.IBinder,long)>(r6, l0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
