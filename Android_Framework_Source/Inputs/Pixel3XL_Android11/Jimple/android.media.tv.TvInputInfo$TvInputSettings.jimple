public final class android.media.tv.TvInputInfo$TvInputSettings extends java.lang.Object
{
    private static final java.lang.String CUSTOM_NAME_SEPARATOR;
    private static final java.lang.String TV_INPUT_SEPARATOR;

    private void <init>()
    {
        android.media.tv.TvInputInfo$TvInputSettings r0;

        r0 := @this: android.media.tv.TvInputInfo$TvInputSettings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean access$000(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: boolean isHidden(android.content.Context,java.lang.String,int)>(r0, r1, i0);

        return $z0;
    }

    static java.lang.String access$100(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1, $r2;
        int i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: java.lang.String getCustomLabel(android.content.Context,java.lang.String,int)>(r0, r1, i0);

        return $r2;
    }

    private static void ensureValidField(java.lang.String)
    {
        java.lang.String r0, $r6;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should not empty ");

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    private static java.lang.String getCustomLabel(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1, $r4;
        int i0;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: java.util.Map getCustomLabels(android.content.Context,int)>(r0, i0);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public static java.util.Map getCustomLabels(android.content.Context, int)
    {
        int i0, i1, i2;
        java.lang.String[] r0, r12;
        android.content.ContentResolver $r1;
        java.util.HashMap $r2;
        boolean $z0;
        java.lang.String $r3, $r4, $r5, $r6, $r7, r10;
        android.content.Context r9;

        r9 := @parameter0: android.content.Context;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r10 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r1, "tv_input_custom_labels", i1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r10);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        r12 = virtualinvoke r10.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        i0 = lengthof r12;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r3 = r12[i2];

        r0 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r4 = r0[0];

        $r5 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r4);

        $r6 = r0[1];

        $r7 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r6);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

        i2 = i2 + 1;

        goto label2;

     label3:
        return $r2;
    }

    public static java.util.Set getHiddenTvInputIds(android.content.Context, int)
    {
        int i0, i1, i2;
        android.content.ContentResolver $r0;
        java.util.HashSet $r1;
        boolean $z0;
        java.lang.String $r2, $r3, r5;
        android.content.Context r4;
        java.lang.String[] r7;

        r4 := @parameter0: android.content.Context;

        i1 := @parameter1: int;

        $r0 = virtualinvoke r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r5 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r0, "tv_input_hidden_inputs", i1);

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        r7 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        i0 = lengthof r7;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r2 = r7[i2];

        $r3 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r2);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        i2 = i2 + 1;

        goto label2;

     label3:
        return $r1;
    }

    private static boolean isHidden(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1;
        int i0;
        java.util.Set $r2;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: java.util.Set getHiddenTvInputIds(android.content.Context,int)>(r0, i0);

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public static void putCustomLabels(android.content.Context, java.util.Map, int)
    {
        int i0;
        java.util.Iterator r1, r29;
        java.lang.StringBuilder $r2;
        java.util.Set $r3, $r7;
        boolean $z0, $z2, z3;
        android.content.ContentResolver $r4;
        java.lang.String $r5, $r9, $r12, $r14, $r17, $r18, $r22, $r23;
        java.lang.Object $r6, $r8, $r10, $r11, $r13, $r16, $r21;
        android.content.Context r25;
        java.util.Map r26;
        java.util.Map$Entry r27;
        android.media.tv.TvInputManager r28;
        android.media.tv.TvInputInfo r30;

        r25 := @parameter0: android.content.Context;

        r26 := @parameter1: java.util.Map;

        i0 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        z3 = 1;

        $r3 = interfaceinvoke r26.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r27 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: void ensureValidField(java.lang.String)>($r12);

        $r13 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.lang.String) $r13;

        staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: void ensureValidField(java.lang.String)>($r14);

        if z3 == 0 goto label2;

        z3 = 0;

        goto label3;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label3:
        $r16 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $r18 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r21 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (java.lang.String) $r21;

        $r23 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r22);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        goto label1;

     label4:
        $r4 = virtualinvoke r25.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r4, "tv_input_custom_labels", $r5, i0);

        $r6 = virtualinvoke r25.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("tv_input");

        r28 = (android.media.tv.TvInputManager) $r6;

        $r7 = interfaceinvoke r26.<java.util.Map: java.util.Set keySet()>();

        r29 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r8 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.String) $r8;

        r30 = virtualinvoke r28.<android.media.tv.TvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)>($r9);

        if r30 == null goto label6;

        virtualinvoke r28.<android.media.tv.TvInputManager: void updateTvInputInfo(android.media.tv.TvInputInfo)>(r30);

     label6:
        goto label5;

     label7:
        return;
    }

    public static void putHiddenTvInputs(android.content.Context, java.util.Set, int)
    {
        int i0;
        java.util.Iterator r1, r16;
        java.lang.StringBuilder $r2;
        boolean $z0, $z2, z3;
        android.content.ContentResolver $r3;
        java.lang.String $r4, $r7, $r10, r14;
        java.lang.Object $r5, $r6, $r8;
        android.content.Context r12;
        java.util.Set r13;
        android.media.tv.TvInputManager r15;
        android.media.tv.TvInputInfo r17;

        r12 := @parameter0: android.content.Context;

        r13 := @parameter1: java.util.Set;

        i0 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        z3 = 1;

        r1 = interfaceinvoke r13.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.String) $r8;

        staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: void ensureValidField(java.lang.String)>(r14);

        if z3 == 0 goto label2;

        z3 = 0;

        goto label3;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label3:
        $r10 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>(r14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        goto label1;

     label4:
        $r3 = virtualinvoke r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r3, "tv_input_hidden_inputs", $r4, i0);

        $r5 = virtualinvoke r12.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("tv_input");

        r15 = (android.media.tv.TvInputManager) $r5;

        r16 = interfaceinvoke r13.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r6 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        r17 = virtualinvoke r15.<android.media.tv.TvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)>($r7);

        if r17 == null goto label6;

        virtualinvoke r15.<android.media.tv.TvInputManager: void updateTvInputInfo(android.media.tv.TvInputInfo)>(r17);

     label6:
        goto label5;

     label7:
        return;
    }

    public static void <clinit>()
    {
        <android.media.tv.TvInputInfo$TvInputSettings: java.lang.String TV_INPUT_SEPARATOR> = ":";

        <android.media.tv.TvInputInfo$TvInputSettings: java.lang.String CUSTOM_NAME_SEPARATOR> = ",";

        return;
    }
}
