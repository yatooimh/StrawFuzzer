public final class android.media.tv.TvInputInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    public static final java.lang.String EXTRA_INPUT_ID;
    private static final java.lang.String TAG;
    public static final int TYPE_COMPONENT;
    public static final int TYPE_COMPOSITE;
    public static final int TYPE_DISPLAY_PORT;
    public static final int TYPE_DVI;
    public static final int TYPE_HDMI;
    public static final int TYPE_OTHER;
    public static final int TYPE_SCART;
    public static final int TYPE_SVIDEO;
    public static final int TYPE_TUNER;
    public static final int TYPE_VGA;
    private final boolean mCanRecord;
    private final android.os.Bundle mExtras;
    private final int mHdmiConnectionRelativePosition;
    private final android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo;
    private final android.graphics.drawable.Icon mIcon;
    private final android.graphics.drawable.Icon mIconDisconnected;
    private final android.graphics.drawable.Icon mIconStandby;
    private android.net.Uri mIconUri;
    private final java.lang.String mId;
    private final boolean mIsConnectedToHdmiSwitch;
    private final boolean mIsHardwareInput;
    private final java.lang.CharSequence mLabel;
    private final int mLabelResId;
    private final java.lang.String mParentId;
    private final android.content.pm.ResolveInfo mService;
    private final java.lang.String mSetupActivity;
    private final int mTunerCount;
    private final int mType;

    static void <clinit>()
    {
        android.media.tv.TvInputInfo$1 $r0;

        <android.media.tv.TvInputInfo: int TYPE_VGA> = 1005;

        <android.media.tv.TvInputInfo: int TYPE_TUNER> = 0;

        <android.media.tv.TvInputInfo: int TYPE_SVIDEO> = 1002;

        <android.media.tv.TvInputInfo: int TYPE_SCART> = 1003;

        <android.media.tv.TvInputInfo: int TYPE_OTHER> = 1000;

        <android.media.tv.TvInputInfo: int TYPE_HDMI> = 1007;

        <android.media.tv.TvInputInfo: int TYPE_DVI> = 1006;

        <android.media.tv.TvInputInfo: int TYPE_DISPLAY_PORT> = 1008;

        <android.media.tv.TvInputInfo: int TYPE_COMPOSITE> = 1001;

        <android.media.tv.TvInputInfo: int TYPE_COMPONENT> = 1004;

        <android.media.tv.TvInputInfo: java.lang.String TAG> = "TvInputInfo";

        <android.media.tv.TvInputInfo: java.lang.String EXTRA_INPUT_ID> = "android.media.tv.extra.INPUT_ID";

        <android.media.tv.TvInputInfo: boolean DEBUG> = 0;

        $r0 = new android.media.tv.TvInputInfo$1;

        specialinvoke $r0.<android.media.tv.TvInputInfo$1: void <init>()>();

        <android.media.tv.TvInputInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.content.pm.ResolveInfo, java.lang.String, int, boolean, java.lang.CharSequence, int, android.graphics.drawable.Icon, android.graphics.drawable.Icon, android.graphics.drawable.Icon, java.lang.String, boolean, int, android.hardware.hdmi.HdmiDeviceInfo, boolean, int, java.lang.String, android.os.Bundle)
    {
        android.media.tv.TvInputInfo r0;
        android.content.pm.ResolveInfo r1;
        java.lang.String r2, r7, r9;
        int i0, i1, i2, i3;
        boolean z0, z1, z2;
        java.lang.CharSequence r3;
        android.graphics.drawable.Icon r4, r5, r6;
        android.hardware.hdmi.HdmiDeviceInfo r8;
        android.os.Bundle r10;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 := @parameter4: java.lang.CharSequence;

        i1 := @parameter5: int;

        r4 := @parameter6: android.graphics.drawable.Icon;

        r5 := @parameter7: android.graphics.drawable.Icon;

        r6 := @parameter8: android.graphics.drawable.Icon;

        r7 := @parameter9: java.lang.String;

        z1 := @parameter10: boolean;

        i2 := @parameter11: int;

        r8 := @parameter12: android.hardware.hdmi.HdmiDeviceInfo;

        z2 := @parameter13: boolean;

        i3 := @parameter14: int;

        r9 := @parameter15: java.lang.String;

        r10 := @parameter16: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService> = r1;

        r0.<android.media.tv.TvInputInfo: java.lang.String mId> = r2;

        r0.<android.media.tv.TvInputInfo: int mType> = i0;

        r0.<android.media.tv.TvInputInfo: boolean mIsHardwareInput> = z0;

        r0.<android.media.tv.TvInputInfo: java.lang.CharSequence mLabel> = r3;

        r0.<android.media.tv.TvInputInfo: int mLabelResId> = i1;

        r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIcon> = r4;

        r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconStandby> = r5;

        r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconDisconnected> = r6;

        r0.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity> = r7;

        r0.<android.media.tv.TvInputInfo: boolean mCanRecord> = z1;

        r0.<android.media.tv.TvInputInfo: int mTunerCount> = i2;

        r0.<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo> = r8;

        r0.<android.media.tv.TvInputInfo: boolean mIsConnectedToHdmiSwitch> = z2;

        r0.<android.media.tv.TvInputInfo: int mHdmiConnectionRelativePosition> = i3;

        r0.<android.media.tv.TvInputInfo: java.lang.String mParentId> = r9;

        r0.<android.media.tv.TvInputInfo: android.os.Bundle mExtras> = r10;

        return;
    }

    void <init>(android.content.pm.ResolveInfo, java.lang.String, int, boolean, java.lang.CharSequence, int, android.graphics.drawable.Icon, android.graphics.drawable.Icon, android.graphics.drawable.Icon, java.lang.String, boolean, int, android.hardware.hdmi.HdmiDeviceInfo, boolean, int, java.lang.String, android.os.Bundle, android.media.tv.TvInputInfo$1)
    {
        android.media.tv.TvInputInfo r0;
        android.content.pm.ResolveInfo r1;
        java.lang.String r2, r7, r9;
        int i0, i1, i2, i3;
        boolean z0, z1, z2;
        java.lang.CharSequence r3;
        android.graphics.drawable.Icon r4, r5, r6;
        android.hardware.hdmi.HdmiDeviceInfo r8;
        android.os.Bundle r10;
        android.media.tv.TvInputInfo$1 r11;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 := @parameter4: java.lang.CharSequence;

        i1 := @parameter5: int;

        r4 := @parameter6: android.graphics.drawable.Icon;

        r5 := @parameter7: android.graphics.drawable.Icon;

        r6 := @parameter8: android.graphics.drawable.Icon;

        r7 := @parameter9: java.lang.String;

        z1 := @parameter10: boolean;

        i2 := @parameter11: int;

        r8 := @parameter12: android.hardware.hdmi.HdmiDeviceInfo;

        z2 := @parameter13: boolean;

        i3 := @parameter14: int;

        r9 := @parameter15: java.lang.String;

        r10 := @parameter16: android.os.Bundle;

        r11 := @parameter17: android.media.tv.TvInputInfo$1;

        specialinvoke r0.<android.media.tv.TvInputInfo: void <init>(android.content.pm.ResolveInfo,java.lang.String,int,boolean,java.lang.CharSequence,int,android.graphics.drawable.Icon,android.graphics.drawable.Icon,android.graphics.drawable.Icon,java.lang.String,boolean,int,android.hardware.hdmi.HdmiDeviceInfo,boolean,int,java.lang.String,android.os.Bundle)>(r1, r2, i0, z0, r3, i1, r4, r5, r6, r7, z1, i2, r8, z2, i3, r9, r10);

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.media.tv.TvInputInfo r0;
        android.os.Parcel r1;
        byte b0, $b3, $b5;
        android.os.Parcelable$Creator $r2, $r6;
        java.lang.Object $r3, $r7;
        android.content.pm.ResolveInfo $r4;
        java.lang.String $r5, $r17, $r20;
        int $i1, $i2, $i4, $i6;
        java.lang.CharSequence $r8;
        android.os.Parcelable $r9, $r11, $r13, $r15, $r18;
        android.net.Uri $r10;
        android.graphics.drawable.Icon $r12, $r14, $r16;
        android.hardware.hdmi.HdmiDeviceInfo $r19;
        android.os.Bundle $r21;
        boolean z1, z2, z3;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.content.pm.ResolveInfo: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r4 = (android.content.pm.ResolveInfo) $r3;

        r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.media.tv.TvInputInfo: java.lang.String mId> = $r5;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.media.tv.TvInputInfo: int mType> = $i1;

        b0 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if b0 != 1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<android.media.tv.TvInputInfo: boolean mIsHardwareInput> = z1;

        $r6 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r8 = (java.lang.CharSequence) $r7;

        r0.<android.media.tv.TvInputInfo: java.lang.CharSequence mLabel> = $r8;

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r10 = (android.net.Uri) $r9;

        r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri> = $r10;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.media.tv.TvInputInfo: int mLabelResId> = $i2;

        $r11 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r12 = (android.graphics.drawable.Icon) $r11;

        r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIcon> = $r12;

        $r13 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r14 = (android.graphics.drawable.Icon) $r13;

        r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconStandby> = $r14;

        $r15 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r16 = (android.graphics.drawable.Icon) $r15;

        r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconDisconnected> = $r16;

        $r17 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity> = $r17;

        $b3 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b3 != 1 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        r0.<android.media.tv.TvInputInfo: boolean mCanRecord> = z2;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.media.tv.TvInputInfo: int mTunerCount> = $i4;

        $r18 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r19 = (android.hardware.hdmi.HdmiDeviceInfo) $r18;

        r0.<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo> = $r19;

        z3 = 0;

        $b5 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b5 != 1 goto label5;

        z3 = 1;

     label5:
        r0.<android.media.tv.TvInputInfo: boolean mIsConnectedToHdmiSwitch> = z3;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.media.tv.TvInputInfo: int mHdmiConnectionRelativePosition> = $i6;

        $r20 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.media.tv.TvInputInfo: java.lang.String mParentId> = $r20;

        $r21 = virtualinvoke r1.<android.os.Parcel: android.os.Bundle readBundle()>();

        r0.<android.media.tv.TvInputInfo: android.os.Bundle mExtras> = $r21;

        return;
    }

    void <init>(android.os.Parcel, android.media.tv.TvInputInfo$1)
    {
        android.media.tv.TvInputInfo r0;
        android.os.Parcel r1;
        android.media.tv.TvInputInfo$1 r2;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.media.tv.TvInputInfo$1;

        specialinvoke r0.<android.media.tv.TvInputInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public static android.media.tv.TvInputInfo createTvInputInfo(android.content.Context, android.content.pm.ResolveInfo, android.hardware.hdmi.HdmiDeviceInfo, java.lang.String, int, android.graphics.drawable.Icon) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        android.content.pm.ResolveInfo r1;
        android.hardware.hdmi.HdmiDeviceInfo r2;
        java.lang.String r3;
        int i0;
        android.graphics.drawable.Icon r4;
        android.media.tv.TvInputInfo$Builder $r5, $r6, $r7, $r8, $r9;
        android.media.tv.TvInputInfo $r10;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.pm.ResolveInfo;

        r2 := @parameter2: android.hardware.hdmi.HdmiDeviceInfo;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r4 := @parameter5: android.graphics.drawable.Icon;

        $r5 = new android.media.tv.TvInputInfo$Builder;

        specialinvoke $r5.<android.media.tv.TvInputInfo$Builder: void <init>(android.content.Context,android.content.pm.ResolveInfo)>(r0, r1);

        $r6 = virtualinvoke $r5.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setHdmiDeviceInfo(android.hardware.hdmi.HdmiDeviceInfo)>(r2);

        $r7 = virtualinvoke $r6.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setParentId(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setLabel(int)>(i0);

        $r9 = virtualinvoke $r8.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setIcon(android.graphics.drawable.Icon)>(r4);

        $r10 = virtualinvoke $r9.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo build()>();

        return $r10;
    }

    public static android.media.tv.TvInputInfo createTvInputInfo(android.content.Context, android.content.pm.ResolveInfo, android.hardware.hdmi.HdmiDeviceInfo, java.lang.String, java.lang.String, android.net.Uri) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.ResolveInfo r0;
        android.hardware.hdmi.HdmiDeviceInfo r1;
        java.lang.String r2, r3;
        android.net.Uri r4;
        android.media.tv.TvInputInfo$Builder $r5, $r6, $r7, $r8;
        android.content.Context r9;
        android.media.tv.TvInputInfo r10;

        r9 := @parameter0: android.content.Context;

        r0 := @parameter1: android.content.pm.ResolveInfo;

        r1 := @parameter2: android.hardware.hdmi.HdmiDeviceInfo;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.net.Uri;

        $r5 = new android.media.tv.TvInputInfo$Builder;

        specialinvoke $r5.<android.media.tv.TvInputInfo$Builder: void <init>(android.content.Context,android.content.pm.ResolveInfo)>(r9, r0);

        $r6 = virtualinvoke $r5.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setHdmiDeviceInfo(android.hardware.hdmi.HdmiDeviceInfo)>(r1);

        $r7 = virtualinvoke $r6.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setParentId(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setLabel(java.lang.CharSequence)>(r3);

        r10 = virtualinvoke $r8.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo build()>();

        r10.<android.media.tv.TvInputInfo: android.net.Uri mIconUri> = r4;

        return r10;
    }

    public static android.media.tv.TvInputInfo createTvInputInfo(android.content.Context, android.content.pm.ResolveInfo, android.media.tv.TvInputHardwareInfo, int, android.graphics.drawable.Icon) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        android.content.pm.ResolveInfo r1;
        android.media.tv.TvInputHardwareInfo r2;
        int i0;
        android.graphics.drawable.Icon r3;
        android.media.tv.TvInputInfo$Builder $r4, $r5, $r6, $r7;
        android.media.tv.TvInputInfo $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.pm.ResolveInfo;

        r2 := @parameter2: android.media.tv.TvInputHardwareInfo;

        i0 := @parameter3: int;

        r3 := @parameter4: android.graphics.drawable.Icon;

        $r4 = new android.media.tv.TvInputInfo$Builder;

        specialinvoke $r4.<android.media.tv.TvInputInfo$Builder: void <init>(android.content.Context,android.content.pm.ResolveInfo)>(r0, r1);

        $r5 = virtualinvoke $r4.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setTvInputHardwareInfo(android.media.tv.TvInputHardwareInfo)>(r2);

        $r6 = virtualinvoke $r5.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setLabel(int)>(i0);

        $r7 = virtualinvoke $r6.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setIcon(android.graphics.drawable.Icon)>(r3);

        $r8 = virtualinvoke $r7.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo build()>();

        return $r8;
    }

    public static android.media.tv.TvInputInfo createTvInputInfo(android.content.Context, android.content.pm.ResolveInfo, android.media.tv.TvInputHardwareInfo, java.lang.String, android.net.Uri) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.ResolveInfo r0;
        android.media.tv.TvInputHardwareInfo r1;
        java.lang.String r2;
        android.net.Uri r3;
        android.media.tv.TvInputInfo$Builder $r4, $r5, $r6;
        android.content.Context r7;
        android.media.tv.TvInputInfo r8;

        r7 := @parameter0: android.content.Context;

        r0 := @parameter1: android.content.pm.ResolveInfo;

        r1 := @parameter2: android.media.tv.TvInputHardwareInfo;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.net.Uri;

        $r4 = new android.media.tv.TvInputInfo$Builder;

        specialinvoke $r4.<android.media.tv.TvInputInfo$Builder: void <init>(android.content.Context,android.content.pm.ResolveInfo)>(r7, r0);

        $r5 = virtualinvoke $r4.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setTvInputHardwareInfo(android.media.tv.TvInputHardwareInfo)>(r1);

        $r6 = virtualinvoke $r5.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo$Builder setLabel(java.lang.CharSequence)>(r2);

        r8 = virtualinvoke $r6.<android.media.tv.TvInputInfo$Builder: android.media.tv.TvInputInfo build()>();

        r8.<android.media.tv.TvInputInfo: android.net.Uri mIconUri> = r3;

        return r8;
    }

    private android.graphics.drawable.Drawable loadServiceIcon(android.content.Context)
    {
        android.media.tv.TvInputInfo r0;
        android.content.Context r1;
        android.content.pm.ResolveInfo $r2, $r4, $r8;
        android.content.pm.ServiceInfo $r3, $r5, $r9;
        int $i0, $i1;
        android.content.pm.PackageManager $r6;
        android.graphics.drawable.Drawable $r7;
        android.content.pm.ApplicationInfo $r10;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r3 = $r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $i0 = $r3.<android.content.pm.ServiceInfo: int icon>;

        if $i0 != 0 goto label1;

        $r8 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r9 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r10 = $r9.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r10.<android.content.pm.ApplicationInfo: int icon>;

        if $i1 != 0 goto label1;

        return null;

     label1:
        $r4 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r5.<android.content.pm.ServiceInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>($r6);

        return $r7;
    }

    public boolean canRecord()
    {
        android.media.tv.TvInputInfo r0;
        boolean $z0;

        r0 := @this: android.media.tv.TvInputInfo;

        $z0 = r0.<android.media.tv.TvInputInfo: boolean mCanRecord>;

        return $z0;
    }

    public android.content.Intent createSettingsIntent()
    {
        android.media.tv.TvInputInfo r0;

        r0 := @this: android.media.tv.TvInputInfo;

        return null;
    }

    public android.content.Intent createSetupIntent()
    {
        android.media.tv.TvInputInfo r0;
        java.lang.String $r2, $r6, $r7, $r9;
        boolean $z0;
        android.content.Intent $r3;
        android.content.pm.ResolveInfo $r4;
        android.content.pm.ServiceInfo $r5;

        r0 := @this: android.media.tv.TvInputInfo;

        $r2 = r0.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        $r4 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r7 = $r5.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r6 = r0.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity>;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r7, $r6);

        $r9 = virtualinvoke r0.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.media.tv.extra.INPUT_ID", $r9);

        return $r3;

     label1:
        return null;
    }

    public int describeContents()
    {
        android.media.tv.TvInputInfo r0;

        r0 := @this: android.media.tv.TvInputInfo;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.media.tv.TvInputInfo r0, r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18;
        android.content.pm.ResolveInfo $r1, $r2;
        java.lang.String $r3, $r4, $r15, $r16, $r19, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.CharSequence $r5, $r6;
        android.net.Uri $r7, $r8;
        android.graphics.drawable.Icon $r9, $r10, $r11, $r12, $r13, $r14;
        android.hardware.hdmi.HdmiDeviceInfo $r17, $r18;
        android.os.Bundle $r21, $r22;
        java.lang.Object r23;

        r0 := @this: android.media.tv.TvInputInfo;

        r23 := @parameter0: java.lang.Object;

        z18 = 1;

        if r23 != r0 goto label1;

        return 1;

     label1:
        $z0 = r23 instanceof android.media.tv.TvInputInfo;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r24 = (android.media.tv.TvInputInfo) r23;

        $r2 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r1 = r24.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z1 == 0 goto label3;

        $r4 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $r3 = r24.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, $r3);

        if $z2 == 0 goto label3;

        $i1 = r0.<android.media.tv.TvInputInfo: int mType>;

        $i0 = r24.<android.media.tv.TvInputInfo: int mType>;

        if $i1 != $i0 goto label3;

        $z4 = r0.<android.media.tv.TvInputInfo: boolean mIsHardwareInput>;

        $z3 = r24.<android.media.tv.TvInputInfo: boolean mIsHardwareInput>;

        if $z4 != $z3 goto label3;

        $r6 = r0.<android.media.tv.TvInputInfo: java.lang.CharSequence mLabel>;

        $r5 = r24.<android.media.tv.TvInputInfo: java.lang.CharSequence mLabel>;

        $z5 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r6, $r5);

        if $z5 == 0 goto label3;

        $r8 = r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri>;

        $r7 = r24.<android.media.tv.TvInputInfo: android.net.Uri mIconUri>;

        $z6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z6 == 0 goto label3;

        $i3 = r0.<android.media.tv.TvInputInfo: int mLabelResId>;

        $i2 = r24.<android.media.tv.TvInputInfo: int mLabelResId>;

        if $i3 != $i2 goto label3;

        $r10 = r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIcon>;

        $r9 = r24.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIcon>;

        $z7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z7 == 0 goto label3;

        $r12 = r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconStandby>;

        $r11 = r24.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconStandby>;

        $z8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r12, $r11);

        if $z8 == 0 goto label3;

        $r14 = r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconDisconnected>;

        $r13 = r24.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconDisconnected>;

        $z9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r14, $r13);

        if $z9 == 0 goto label3;

        $r16 = r0.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity>;

        $r15 = r24.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity>;

        $z10 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r16, $r15);

        if $z10 == 0 goto label3;

        $z12 = r0.<android.media.tv.TvInputInfo: boolean mCanRecord>;

        $z11 = r24.<android.media.tv.TvInputInfo: boolean mCanRecord>;

        if $z12 != $z11 goto label3;

        $i5 = r0.<android.media.tv.TvInputInfo: int mTunerCount>;

        $i4 = r24.<android.media.tv.TvInputInfo: int mTunerCount>;

        if $i5 != $i4 goto label3;

        $r18 = r0.<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo>;

        $r17 = r24.<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo>;

        $z13 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r18, $r17);

        if $z13 == 0 goto label3;

        $z15 = r0.<android.media.tv.TvInputInfo: boolean mIsConnectedToHdmiSwitch>;

        $z14 = r24.<android.media.tv.TvInputInfo: boolean mIsConnectedToHdmiSwitch>;

        if $z15 != $z14 goto label3;

        $i7 = r0.<android.media.tv.TvInputInfo: int mHdmiConnectionRelativePosition>;

        $i6 = r24.<android.media.tv.TvInputInfo: int mHdmiConnectionRelativePosition>;

        if $i7 != $i6 goto label3;

        $r20 = r0.<android.media.tv.TvInputInfo: java.lang.String mParentId>;

        $r19 = r24.<android.media.tv.TvInputInfo: java.lang.String mParentId>;

        $z16 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r20, $r19);

        if $z16 == 0 goto label3;

        $r22 = r0.<android.media.tv.TvInputInfo: android.os.Bundle mExtras>;

        $r21 = r24.<android.media.tv.TvInputInfo: android.os.Bundle mExtras>;

        $z17 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r22, $r21);

        if $z17 == 0 goto label3;

        goto label4;

     label3:
        z18 = 0;

     label4:
        return z18;
    }

    public android.content.ComponentName getComponent()
    {
        android.media.tv.TvInputInfo r0;
        android.content.ComponentName $r1;
        android.content.pm.ResolveInfo $r2, $r4;
        android.content.pm.ServiceInfo $r3, $r5;
        java.lang.String $r6, $r7;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = new android.content.ComponentName;

        $r2 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r3 = $r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r7 = $r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r4 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = $r5.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r6);

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        android.media.tv.TvInputInfo r0;
        android.os.Bundle $r1;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = r0.<android.media.tv.TvInputInfo: android.os.Bundle mExtras>;

        return $r1;
    }

    public int getHdmiConnectionRelativePosition()
    {
        android.media.tv.TvInputInfo r0;
        int $i0;

        r0 := @this: android.media.tv.TvInputInfo;

        $i0 = r0.<android.media.tv.TvInputInfo: int mHdmiConnectionRelativePosition>;

        return $i0;
    }

    public android.hardware.hdmi.HdmiDeviceInfo getHdmiDeviceInfo()
    {
        android.media.tv.TvInputInfo r0;
        int $i0;
        android.hardware.hdmi.HdmiDeviceInfo $r1;

        r0 := @this: android.media.tv.TvInputInfo;

        $i0 = r0.<android.media.tv.TvInputInfo: int mType>;

        if $i0 != 1007 goto label1;

        $r1 = r0.<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo>;

        return $r1;

     label1:
        return null;
    }

    public java.lang.String getId()
    {
        android.media.tv.TvInputInfo r0;
        java.lang.String $r1;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        return $r1;
    }

    public java.lang.String getParentId()
    {
        android.media.tv.TvInputInfo r0;
        java.lang.String $r1;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = r0.<android.media.tv.TvInputInfo: java.lang.String mParentId>;

        return $r1;
    }

    public android.content.pm.ServiceInfo getServiceInfo()
    {
        android.media.tv.TvInputInfo r0;
        android.content.pm.ResolveInfo $r1;
        android.content.pm.ServiceInfo $r2;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r2 = $r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        return $r2;
    }

    public int getTunerCount()
    {
        android.media.tv.TvInputInfo r0;
        int $i0;

        r0 := @this: android.media.tv.TvInputInfo;

        $i0 = r0.<android.media.tv.TvInputInfo: int mTunerCount>;

        return $i0;
    }

    public int getType()
    {
        android.media.tv.TvInputInfo r0;
        int $i0;

        r0 := @this: android.media.tv.TvInputInfo;

        $i0 = r0.<android.media.tv.TvInputInfo: int mType>;

        return $i0;
    }

    public int hashCode()
    {
        android.media.tv.TvInputInfo r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean isConnectedToHdmiSwitch()
    {
        android.media.tv.TvInputInfo r0;
        boolean $z0;

        r0 := @this: android.media.tv.TvInputInfo;

        $z0 = r0.<android.media.tv.TvInputInfo: boolean mIsConnectedToHdmiSwitch>;

        return $z0;
    }

    public boolean isHardwareInput()
    {
        android.media.tv.TvInputInfo r0;
        boolean $z0;

        r0 := @this: android.media.tv.TvInputInfo;

        $z0 = r0.<android.media.tv.TvInputInfo: boolean mIsHardwareInput>;

        return $z0;
    }

    public boolean isHidden(android.content.Context)
    {
        android.media.tv.TvInputInfo r0;
        android.content.Context r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: boolean access$000(android.content.Context,java.lang.String,int)>(r1, $r2, $i0);

        return $z0;
    }

    public boolean isPassthroughInput()
    {
        android.media.tv.TvInputInfo r0;
        int $i0;
        boolean z0;

        r0 := @this: android.media.tv.TvInputInfo;

        $i0 = r0.<android.media.tv.TvInputInfo: int mType>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.CharSequence loadCustomLabel(android.content.Context)
    {
        android.media.tv.TvInputInfo r0;
        android.content.Context r1;
        java.lang.String $r2, $r3;
        int $i0;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r3 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: java.lang.String access$100(android.content.Context,java.lang.String,int)>(r1, $r2, $i0);

        return $r3;
    }

    public android.graphics.drawable.Drawable loadIcon(android.content.Context)
    {
        android.media.tv.TvInputInfo r0;
        android.content.Context r1;
        android.net.Uri $r2, $r4, $r11;
        android.content.ContentResolver $r3;
        android.graphics.drawable.Drawable $r5, r16, $r21;
        java.lang.Throwable $r6, $r7, $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r13;
        android.graphics.drawable.Icon r14;
        java.io.InputStream r15;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.Context;

        r14 = r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIcon>;

        if r14 == null goto label01;

        $r5 = virtualinvoke r14.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>(r1);

        return $r5;

     label01:
        $r2 = r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri>;

        if $r2 == null goto label17;

     label02:
        $r3 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri>;

        r15 = virtualinvoke $r3.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r4);

     label03:
        r16 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>(r15, null);

     label04:
        if r16 == null goto label07;

        if r15 == null goto label06;

     label05:
        virtualinvoke r15.<java.io.InputStream: void close()>();

     label06:
        return r16;

     label07:
        if r15 == null goto label09;

     label08:
        virtualinvoke r15.<java.io.InputStream: void close()>();

     label09:
        goto label17;

     label10:
        $r7 := @caughtexception;

        if r15 == null goto label15;

     label11:
        virtualinvoke r15.<java.io.InputStream: void close()>();

     label12:
        goto label15;

     label13:
        $r6 := @caughtexception;

     label14:
        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

     label15:
        throw $r7;

     label16:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading the default icon due to a failure on loading ");

        $r11 = r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputInfo", $r13, $r8);

     label17:
        $r21 = specialinvoke r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Drawable loadServiceIcon(android.content.Context)>(r1);

        return $r21;

        catch java.io.IOException from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label16;
        catch java.io.IOException from label08 to label09 with label16;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label15 to label16 with label16;
    }

    public android.graphics.drawable.Drawable loadIcon(android.content.Context, int)
    {
        android.media.tv.TvInputInfo r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.graphics.drawable.Drawable $r6, $r7, $r8;
        android.content.Context r9;
        android.graphics.drawable.Icon r10, r11;

        r0 := @this: android.media.tv.TvInputInfo;

        r9 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r8 = virtualinvoke r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context)>(r9);

        return $r8;

     label1:
        if i0 != 1 goto label2;

        r10 = r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconStandby>;

        if r10 == null goto label3;

        $r7 = virtualinvoke r10.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>(r9);

        return $r7;

     label2:
        if i0 != 2 goto label4;

        r11 = r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconDisconnected>;

        if r11 == null goto label3;

        $r6 = virtualinvoke r11.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>(r9);

        return $r6;

     label3:
        return null;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown state: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public java.lang.CharSequence loadLabel(android.content.Context)
    {
        android.media.tv.TvInputInfo r0;
        android.content.Context r1;
        int $i0, $i1;
        java.lang.CharSequence $r2, $r5, $r6, $r11;
        boolean $z0;
        android.content.pm.ResolveInfo $r3, $r8;
        android.content.pm.PackageManager $r4, $r7;
        android.content.pm.ServiceInfo $r9;
        java.lang.String $r10;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.Context;

        $i0 = r0.<android.media.tv.TvInputInfo: int mLabelResId>;

        if $i0 == 0 goto label1;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r9 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r10 = $r9.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $i1 = r0.<android.media.tv.TvInputInfo: int mLabelResId>;

        $r11 = virtualinvoke $r7.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>($r10, $i1, null);

        return $r11;

     label1:
        $r2 = r0.<android.media.tv.TvInputInfo: java.lang.CharSequence mLabel>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label2;

        $r6 = r0.<android.media.tv.TvInputInfo: java.lang.CharSequence mLabel>;

        return $r6;

     label2:
        $r3 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r3.<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r4);

        return $r5;
    }

    public java.lang.String toString()
    {
        android.media.tv.TvInputInfo r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r9, $r14, $r17;
        android.content.pm.ResolveInfo $r7, $r12;
        android.content.pm.ServiceInfo $r8, $r13;

        r0 := @this: android.media.tv.TvInputInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TvInputInfo{id=");

        $r4 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pkg=");

        $r7 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r8 = $r7.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r9 = $r8.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", service=");

        $r12 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r13 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r14 = $r13.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.media.tv.TvInputInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4;
        android.content.pm.ResolveInfo $r2;
        java.lang.String $r3, $r9, $r11;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r4;
        android.net.Uri $r5;
        android.graphics.drawable.Icon $r6, $r7, $r8;
        android.hardware.hdmi.HdmiDeviceInfo $r10;
        android.os.Bundle $r12;
        byte b5, b6, b7;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        virtualinvoke $r2.<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $r3 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i1 = r0.<android.media.tv.TvInputInfo: int mType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $z0 = r0.<android.media.tv.TvInputInfo: boolean mIsHardwareInput>;

        b5 = (byte) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b5);

        $r4 = r0.<android.media.tv.TvInputInfo: java.lang.CharSequence mLabel>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r4, r1, i0);

        $r5 = r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r5, i0);

        $i2 = r0.<android.media.tv.TvInputInfo: int mLabelResId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r6 = r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIcon>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, i0);

        $r7 = r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconStandby>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r7, i0);

        $r8 = r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Icon mIconDisconnected>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r8, i0);

        $r9 = r0.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $z1 = r0.<android.media.tv.TvInputInfo: boolean mCanRecord>;

        b6 = (byte) $z1;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b6);

        $i3 = r0.<android.media.tv.TvInputInfo: int mTunerCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r10 = r0.<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r10, i0);

        $z2 = r0.<android.media.tv.TvInputInfo: boolean mIsConnectedToHdmiSwitch>;

        b7 = (byte) $z2;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(b7);

        $i4 = r0.<android.media.tv.TvInputInfo: int mHdmiConnectionRelativePosition>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r11 = r0.<android.media.tv.TvInputInfo: java.lang.String mParentId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r11);

        $r12 = r0.<android.media.tv.TvInputInfo: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r12);

        return;
    }
}
