public final class android.media.tv.TvInputManager$Hardware extends java.lang.Object
{
    private final android.media.tv.ITvInputHardware mInterface;

    private void <init>(android.media.tv.ITvInputHardware)
    {
        android.media.tv.TvInputManager$Hardware r0;
        android.media.tv.ITvInputHardware r1;

        r0 := @this: android.media.tv.TvInputManager$Hardware;

        r1 := @parameter0: android.media.tv.ITvInputHardware;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.TvInputManager$Hardware: android.media.tv.ITvInputHardware mInterface> = r1;

        return;
    }

    void <init>(android.media.tv.ITvInputHardware, android.media.tv.TvInputManager$1)
    {
        android.media.tv.TvInputManager$Hardware r0;
        android.media.tv.ITvInputHardware r1;
        android.media.tv.TvInputManager$1 r2;

        r0 := @this: android.media.tv.TvInputManager$Hardware;

        r1 := @parameter0: android.media.tv.ITvInputHardware;

        r2 := @parameter1: android.media.tv.TvInputManager$1;

        specialinvoke r0.<android.media.tv.TvInputManager$Hardware: void <init>(android.media.tv.ITvInputHardware)>(r1);

        return;
    }

    static android.media.tv.ITvInputHardware access$1200(android.media.tv.TvInputManager$Hardware)
    {
        android.media.tv.TvInputManager$Hardware r0;
        android.media.tv.ITvInputHardware $r1;

        r0 := @parameter0: android.media.tv.TvInputManager$Hardware;

        $r1 = specialinvoke r0.<android.media.tv.TvInputManager$Hardware: android.media.tv.ITvInputHardware getInterface()>();

        return $r1;
    }

    private android.media.tv.ITvInputHardware getInterface()
    {
        android.media.tv.TvInputManager$Hardware r0;
        android.media.tv.ITvInputHardware $r1;

        r0 := @this: android.media.tv.TvInputManager$Hardware;

        $r1 = r0.<android.media.tv.TvInputManager$Hardware: android.media.tv.ITvInputHardware mInterface>;

        return $r1;
    }

    public boolean dispatchKeyEventToHdmi(android.view.KeyEvent)
    {
        android.media.tv.TvInputManager$Hardware r0;
        android.view.KeyEvent r1;

        r0 := @this: android.media.tv.TvInputManager$Hardware;

        r1 := @parameter0: android.view.KeyEvent;

        return 0;
    }

    public void overrideAudioSink(int, java.lang.String, int, int, int)
    {
        android.media.tv.TvInputManager$Hardware r0;
        int i0, i1, i2, i3;
        android.media.tv.ITvInputHardware $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.media.tv.TvInputManager$Hardware;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

     label1:
        $r1 = r0.<android.media.tv.TvInputManager$Hardware: android.media.tv.ITvInputHardware mInterface>;

        interfaceinvoke $r1.<android.media.tv.ITvInputHardware: void overrideAudioSink(int,java.lang.String,int,int,int)>(i0, r4, i1, i2, i3);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setStreamVolume(float)
    {
        android.media.tv.TvInputManager$Hardware r0;
        float f0;
        android.media.tv.ITvInputHardware $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.media.tv.TvInputManager$Hardware;

        f0 := @parameter0: float;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager$Hardware: android.media.tv.ITvInputHardware mInterface>;

        interfaceinvoke $r2.<android.media.tv.ITvInputHardware: void setStreamVolume(float)>(f0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setSurface(android.view.Surface, android.media.tv.TvStreamConfig)
    {
        android.media.tv.TvInputManager$Hardware r0;
        android.media.tv.TvStreamConfig r1;
        boolean z0;
        android.media.tv.ITvInputHardware $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.view.Surface r5;

        r0 := @this: android.media.tv.TvInputManager$Hardware;

        r5 := @parameter0: android.view.Surface;

        r1 := @parameter1: android.media.tv.TvStreamConfig;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager$Hardware: android.media.tv.ITvInputHardware mInterface>;

        z0 = interfaceinvoke $r2.<android.media.tv.ITvInputHardware: boolean setSurface(android.view.Surface,android.media.tv.TvStreamConfig)>(r5, r1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
