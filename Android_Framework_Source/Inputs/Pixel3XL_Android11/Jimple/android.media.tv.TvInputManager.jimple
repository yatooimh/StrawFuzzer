public final class android.media.tv.TvInputManager extends java.lang.Object
{
    public static final java.lang.String ACTION_BLOCKED_RATINGS_CHANGED;
    public static final java.lang.String ACTION_PARENTAL_CONTROLS_ENABLED_CHANGED;
    public static final java.lang.String ACTION_QUERY_CONTENT_RATING_SYSTEMS;
    public static final java.lang.String ACTION_SETUP_INPUTS;
    public static final java.lang.String ACTION_VIEW_RECORDING_SCHEDULES;
    public static final int DVB_DEVICE_DEMUX;
    public static final int DVB_DEVICE_DVR;
    static final int DVB_DEVICE_END;
    public static final int DVB_DEVICE_FRONTEND;
    static final int DVB_DEVICE_START;
    public static final int INPUT_STATE_CONNECTED;
    public static final int INPUT_STATE_CONNECTED_STANDBY;
    public static final int INPUT_STATE_DISCONNECTED;
    public static final java.lang.String META_DATA_CONTENT_RATING_SYSTEMS;
    static final int RECORDING_ERROR_END;
    public static final int RECORDING_ERROR_INSUFFICIENT_SPACE;
    public static final int RECORDING_ERROR_RESOURCE_BUSY;
    static final int RECORDING_ERROR_START;
    public static final int RECORDING_ERROR_UNKNOWN;
    private static final java.lang.String TAG;
    public static final long TIME_SHIFT_INVALID_TIME;
    public static final int TIME_SHIFT_STATUS_AVAILABLE;
    public static final int TIME_SHIFT_STATUS_UNAVAILABLE;
    public static final int TIME_SHIFT_STATUS_UNKNOWN;
    public static final int TIME_SHIFT_STATUS_UNSUPPORTED;
    public static final int UNKNOWN_CLIENT_PID;
    public static final int VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY;
    public static final int VIDEO_UNAVAILABLE_REASON_BUFFERING;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_BLACKOUT;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_CARD_INVALID;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_CARD_MUTE;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_INSUFFICIENT_OUTPUT_PROTECTION;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_LICENSE_EXPIRED;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_NEED_ACTIVATION;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_NEED_PAIRING;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_NO_CARD;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_NO_LICENSE;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_PVR_RECORDING_NOT_ALLOWED;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_REBOOTING;
    public static final int VIDEO_UNAVAILABLE_REASON_CAS_UNKNOWN;
    static final int VIDEO_UNAVAILABLE_REASON_END;
    public static final int VIDEO_UNAVAILABLE_REASON_INSUFFICIENT_RESOURCE;
    public static final int VIDEO_UNAVAILABLE_REASON_NOT_CONNECTED;
    static final int VIDEO_UNAVAILABLE_REASON_START;
    public static final int VIDEO_UNAVAILABLE_REASON_TUNING;
    public static final int VIDEO_UNAVAILABLE_REASON_UNKNOWN;
    public static final int VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL;
    private final java.util.List mCallbackRecords;
    private final android.media.tv.ITvInputClient mClient;
    private final java.lang.Object mLock;
    private int mNextSeq;
    private final android.media.tv.ITvInputManager mService;
    private final android.util.SparseArray mSessionCallbackRecordMap;
    private final java.util.Map mStateMap;
    private final int mUserId;

    public void <init>(android.media.tv.ITvInputManager, int)
    {
        android.media.tv.TvInputManager r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r1;
        java.lang.Object $r2, $r11, r23;
        java.util.LinkedList $r3;
        android.util.ArrayMap $r4;
        android.util.SparseArray $r5;
        android.media.tv.TvInputManager$1 $r6;
        android.media.tv.TvInputManager$2 $r7;
        android.media.tv.ITvInputManager $r8, $r9, $r10, $r13, r20;
        boolean $z0;
        android.media.tv.TvInputInfo $r12;
        java.util.Map $r14;
        java.lang.Integer $r15;
        android.os.RemoteException $r17;
        java.lang.RuntimeException $r18;
        java.lang.Throwable $r19;
        java.util.List r22;
        java.util.Iterator r24;

        r0 := @this: android.media.tv.TvInputManager;

        r20 := @parameter0: android.media.tv.ITvInputManager;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.TvInputManager: java.lang.Object mLock> = $r2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<android.media.tv.TvInputManager: java.util.List mCallbackRecords> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<android.media.tv.TvInputManager: java.util.Map mStateMap> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<android.media.tv.TvInputManager: android.util.SparseArray mSessionCallbackRecordMap> = $r5;

        r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService> = r20;

        r0.<android.media.tv.TvInputManager: int mUserId> = i0;

        $r6 = new android.media.tv.TvInputManager$1;

        specialinvoke $r6.<android.media.tv.TvInputManager$1: void <init>(android.media.tv.TvInputManager)>(r0);

        r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputClient mClient> = $r6;

        $r7 = new android.media.tv.TvInputManager$2;

        specialinvoke $r7.<android.media.tv.TvInputManager$2: void <init>(android.media.tv.TvInputManager)>(r0);

     label01:
        $r8 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        if $r8 == null goto label10;

        $r9 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i1 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r9.<android.media.tv.ITvInputManager: void registerCallback(android.media.tv.ITvInputManagerCallback,int)>($r7, $i1);

        $r10 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i2 = r0.<android.media.tv.TvInputManager: int mUserId>;

        r22 = interfaceinvoke $r10.<android.media.tv.ITvInputManager: java.util.List getTvInputList(int)>($i2);

        r23 = r0.<android.media.tv.TvInputManager: java.lang.Object mLock>;

        entermonitor r23;

     label02:
        r24 = interfaceinvoke r22.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r11 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (android.media.tv.TvInputInfo) $r11;

        r1 = virtualinvoke $r12.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        $r14 = r0.<android.media.tv.TvInputManager: java.util.Map mStateMap>;

        $r13 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i3 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $i4 = interfaceinvoke $r13.<android.media.tv.ITvInputManager: int getTvInputState(java.lang.String,int)>(r1, $i3);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r15);

     label04:
        goto label03;

     label05:
        exitmonitor r23;

     label06:
        goto label10;

     label07:
        $r19 := @caughtexception;

     label08:
        exitmonitor r23;

     label09:
        throw $r19;

     label10:
        return;

     label11:
        $r17 := @caughtexception;

        $r18 = virtualinvoke $r17.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r18;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    static java.util.List access$1000(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        java.util.List $r1;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $r1 = r0.<android.media.tv.TvInputManager: java.util.List mCallbackRecords>;

        return $r1;
    }

    static android.util.SparseArray access$300(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $r1 = r0.<android.media.tv.TvInputManager: android.util.SparseArray mSessionCallbackRecordMap>;

        return $r1;
    }

    static android.media.tv.ITvInputManager access$400(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.ITvInputManager $r1;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $r1 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        return $r1;
    }

    static int access$500(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        int $i0;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        return $i0;
    }

    static java.lang.Object access$800(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $r1 = r0.<android.media.tv.TvInputManager: java.lang.Object mLock>;

        return $r1;
    }

    static java.util.Map access$900(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        java.util.Map $r1;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $r1 = r0.<android.media.tv.TvInputManager: java.util.Map mStateMap>;

        return $r1;
    }

    private android.media.tv.TvInputManager$Hardware acquireTvInputHardwareInternal(int, android.media.tv.TvInputInfo, java.lang.String, int, java.util.concurrent.Executor, android.media.tv.TvInputManager$HardwareCallback)
    {
        android.media.tv.TvInputManager r0;
        int i0, i1, $i2;
        java.lang.String r1;
        java.util.concurrent.Executor r2;
        android.media.tv.TvInputManager$HardwareCallback r3;
        android.media.tv.ITvInputManager r4;
        android.media.tv.TvInputManager$4 r5;
        android.media.tv.TvInputManager$Hardware $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.media.tv.TvInputInfo r9;
        android.media.tv.ITvInputHardware r10;

        r0 := @this: android.media.tv.TvInputManager;

        i0 := @parameter0: int;

        r9 := @parameter1: android.media.tv.TvInputInfo;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r2 := @parameter4: java.util.concurrent.Executor;

        r3 := @parameter5: android.media.tv.TvInputManager$HardwareCallback;

     label1:
        r4 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        r5 = new android.media.tv.TvInputManager$4;

        specialinvoke r5.<android.media.tv.TvInputManager$4: void <init>(android.media.tv.TvInputManager,java.util.concurrent.Executor,android.media.tv.TvInputManager$HardwareCallback)>(r0, r2, r3);

        $i2 = r0.<android.media.tv.TvInputManager: int mUserId>;

        r10 = interfaceinvoke r4.<android.media.tv.ITvInputManager: android.media.tv.ITvInputHardware acquireTvInputHardware(int,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,int,java.lang.String,int)>(i0, r5, r9, $i2, r1, i1);

     label2:
        if r10 != null goto label3;

        return null;

     label3:
        $r6 = new android.media.tv.TvInputManager$Hardware;

        specialinvoke $r6.<android.media.tv.TvInputManager$Hardware: void <init>(android.media.tv.ITvInputHardware,android.media.tv.TvInputManager$1)>(r10, null);

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void createSessionInternal(java.lang.String, boolean, android.media.tv.TvInputManager$SessionCallback, android.os.Handler)
    {
        android.media.tv.TvInputManager r0;
        boolean z0;
        int i0, $i1, $i2;
        android.media.tv.TvInputManager$SessionCallbackRecord $r4;
        android.util.SparseArray $r5, r15;
        android.media.tv.ITvInputClient $r6;
        android.media.tv.ITvInputManager $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        java.lang.RuntimeException $r10;
        java.lang.String r11;
        android.media.tv.TvInputManager$SessionCallback r12;
        android.os.Handler r13;

        r0 := @this: android.media.tv.TvInputManager;

        r11 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r12 := @parameter2: android.media.tv.TvInputManager$SessionCallback;

        r13 := @parameter3: android.os.Handler;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r11);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r12);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r13);

        $r4 = new android.media.tv.TvInputManager$SessionCallbackRecord;

        specialinvoke $r4.<android.media.tv.TvInputManager$SessionCallbackRecord: void <init>(android.media.tv.TvInputManager$SessionCallback,android.os.Handler)>(r12, r13);

        r15 = r0.<android.media.tv.TvInputManager: android.util.SparseArray mSessionCallbackRecordMap>;

        entermonitor r15;

     label1:
        i0 = r0.<android.media.tv.TvInputManager: int mNextSeq>;

        $i1 = i0 + 1;

        r0.<android.media.tv.TvInputManager: int mNextSeq> = $i1;

        $r5 = r0.<android.media.tv.TvInputManager: android.util.SparseArray mSessionCallbackRecordMap>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label2:
        $r7 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r6 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputClient mClient>;

        $i2 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r7.<android.media.tv.ITvInputManager: void createSession(android.media.tv.ITvInputClient,java.lang.String,boolean,int,int)>($r6, r11, z0, i0, $i2);

     label3:
        exitmonitor r15;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

     label6:
        $r10 = virtualinvoke $r9.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r10;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r15;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private int getClientPidInternal(java.lang.String)
    {
        android.media.tv.TvInputManager r0;
        int i0;
        android.media.tv.ITvInputManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;

        r0 := @this: android.media.tv.TvInputManager;

        r5 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        i0 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: int getClientPid(java.lang.String)>(r5);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.media.tv.TvInputManager$Hardware acquireTvInputHardware(int, android.media.tv.TvInputInfo, android.media.tv.TvInputManager$HardwareCallback)
    {
        android.media.tv.TvInputManager r0;
        int i0;
        android.media.tv.TvInputInfo r1;
        android.media.tv.TvInputManager$HardwareCallback r2;
        android.media.tv.TvInputManager$3 $r5;
        android.media.tv.TvInputManager$Hardware $r6;

        r0 := @this: android.media.tv.TvInputManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        r2 := @parameter2: android.media.tv.TvInputManager$HardwareCallback;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = new android.media.tv.TvInputManager$3;

        specialinvoke $r5.<android.media.tv.TvInputManager$3: void <init>(android.media.tv.TvInputManager)>(r0);

        $r6 = specialinvoke r0.<android.media.tv.TvInputManager: android.media.tv.TvInputManager$Hardware acquireTvInputHardwareInternal(int,android.media.tv.TvInputInfo,java.lang.String,int,java.util.concurrent.Executor,android.media.tv.TvInputManager$HardwareCallback)>(i0, r1, null, 400, $r5, r2);

        return $r6;
    }

    public android.media.tv.TvInputManager$Hardware acquireTvInputHardware(int, android.media.tv.TvInputInfo, java.lang.String, int, java.util.concurrent.Executor, android.media.tv.TvInputManager$HardwareCallback)
    {
        android.media.tv.TvInputManager r0;
        int i0, i1;
        android.media.tv.TvInputInfo r1;
        java.lang.String r2;
        java.util.concurrent.Executor r3;
        android.media.tv.TvInputManager$HardwareCallback r4;
        android.media.tv.TvInputManager$Hardware $r7;

        r0 := @this: android.media.tv.TvInputManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r3 := @parameter4: java.util.concurrent.Executor;

        r4 := @parameter5: android.media.tv.TvInputManager$HardwareCallback;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r7 = specialinvoke r0.<android.media.tv.TvInputManager: android.media.tv.TvInputManager$Hardware acquireTvInputHardwareInternal(int,android.media.tv.TvInputInfo,java.lang.String,int,java.util.concurrent.Executor,android.media.tv.TvInputManager$HardwareCallback)>(i0, r1, r2, i1, r3, r4);

        return $r7;
    }

    public android.media.tv.TvInputManager$Hardware acquireTvInputHardware(int, android.media.tv.TvInputManager$HardwareCallback, android.media.tv.TvInputInfo)
    {
        android.media.tv.TvInputManager r0;
        int i0;
        android.media.tv.TvInputManager$HardwareCallback r1;
        android.media.tv.TvInputInfo r2;
        android.media.tv.TvInputManager$Hardware $r3;

        r0 := @this: android.media.tv.TvInputManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputManager$HardwareCallback;

        r2 := @parameter2: android.media.tv.TvInputInfo;

        $r3 = virtualinvoke r0.<android.media.tv.TvInputManager: android.media.tv.TvInputManager$Hardware acquireTvInputHardware(int,android.media.tv.TvInputInfo,android.media.tv.TvInputManager$HardwareCallback)>(i0, r2, r1);

        return $r3;
    }

    public void addBlockedRating(android.media.tv.TvContentRating)
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.ITvInputManager $r2;
        java.lang.String $r3;
        int $i0;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.media.tv.TvContentRating r6;

        r0 := @this: android.media.tv.TvInputManager;

        r6 := @parameter0: android.media.tv.TvContentRating;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r3 = virtualinvoke r6.<android.media.tv.TvContentRating: java.lang.String flattenToString()>();

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r2.<android.media.tv.ITvInputManager: void addBlockedRating(java.lang.String,int)>($r3, $i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addHardwareDevice(int)
    {
        android.media.tv.TvInputManager r0;
        int i0;
        android.media.tv.ITvInputManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.media.tv.TvInputManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        interfaceinvoke $r2.<android.media.tv.ITvInputManager: void addHardwareDevice(int)>(i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean captureFrame(java.lang.String, android.view.Surface, android.media.tv.TvStreamConfig)
    {
        android.media.tv.TvInputManager r0;
        android.view.Surface r1;
        android.media.tv.TvStreamConfig r2;
        boolean z0;
        int $i0;
        android.media.tv.ITvInputManager $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.lang.String r6;

        r0 := @this: android.media.tv.TvInputManager;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: android.view.Surface;

        r2 := @parameter2: android.media.tv.TvStreamConfig;

     label1:
        $r3 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        z0 = interfaceinvoke $r3.<android.media.tv.ITvInputManager: boolean captureFrame(java.lang.String,android.view.Surface,android.media.tv.TvStreamConfig,int)>(r6, r1, r2, $i0);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void createRecordingSession(java.lang.String, android.media.tv.TvInputManager$SessionCallback, android.os.Handler)
    {
        android.media.tv.TvInputManager r0;
        java.lang.String r1;
        android.media.tv.TvInputManager$SessionCallback r2;
        android.os.Handler r3;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.media.tv.TvInputManager$SessionCallback;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<android.media.tv.TvInputManager: void createSessionInternal(java.lang.String,boolean,android.media.tv.TvInputManager$SessionCallback,android.os.Handler)>(r1, 1, r2, r3);

        return;
    }

    public void createSession(java.lang.String, android.media.tv.TvInputManager$SessionCallback, android.os.Handler)
    {
        android.media.tv.TvInputManager r0;
        java.lang.String r1;
        android.media.tv.TvInputManager$SessionCallback r2;
        android.os.Handler r3;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.media.tv.TvInputManager$SessionCallback;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<android.media.tv.TvInputManager: void createSessionInternal(java.lang.String,boolean,android.media.tv.TvInputManager$SessionCallback,android.os.Handler)>(r1, 0, r2, r3);

        return;
    }

    public java.util.List getAvailableTvStreamConfigList(java.lang.String)
    {
        android.media.tv.TvInputManager r0;
        int $i0;
        android.media.tv.ITvInputManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;
        java.util.List r5;

        r0 := @this: android.media.tv.TvInputManager;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        r5 = interfaceinvoke $r1.<android.media.tv.ITvInputManager: java.util.List getAvailableTvStreamConfigList(java.lang.String,int)>(r4, $i0);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getBlockedRatings()
    {
        android.media.tv.TvInputManager r0;
        java.util.ArrayList r1;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String $r5;
        android.media.tv.TvContentRating $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        java.util.Iterator r9;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $r3 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: java.util.List getBlockedRatings(int)>($i0);

        r9 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $r6 = staticinvoke <android.media.tv.TvContentRating: android.media.tv.TvContentRating unflattenFromString(java.lang.String)>($r5);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        goto label2;

     label4:
        return r1;

     label5:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public int getClientPid(java.lang.String)
    {
        android.media.tv.TvInputManager r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: java.lang.String;

        $i0 = specialinvoke r0.<android.media.tv.TvInputManager: int getClientPidInternal(java.lang.String)>(r1);

        return $i0;
    }

    public java.util.List getDvbDeviceList()
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.ITvInputManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r1 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        r4 = interfaceinvoke $r1.<android.media.tv.ITvInputManager: java.util.List getDvbDeviceList()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getHardwareList()
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.ITvInputManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r1 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        r4 = interfaceinvoke $r1.<android.media.tv.ITvInputManager: java.util.List getHardwareList()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getInputState(java.lang.String)
    {
        android.media.tv.TvInputManager r0;
        java.lang.Object r1, $r4;
        int i0;
        java.util.Map $r3;
        java.lang.String $r7, r9;
        java.lang.Throwable $r8;
        java.lang.Integer r10;
        java.lang.StringBuilder r11;

        r0 := @this: android.media.tv.TvInputManager;

        r9 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r9);

        r1 = r0.<android.media.tv.TvInputManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.media.tv.TvInputManager: java.util.Map mStateMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (java.lang.Integer) $r4;

     label2:
        if r10 != null goto label5;

     label3:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized input ID: ");

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r7 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TvInputManager", $r7);

        exitmonitor r1;

     label4:
        return 2;

     label5:
        i0 = virtualinvoke r10.<java.lang.Integer: int intValue()>();

        exitmonitor r1;

     label6:
        return i0;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.util.List getTvContentRatingSystemList()
    {
        android.media.tv.TvInputManager r0;
        int $i0;
        android.media.tv.ITvInputManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r1 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        r4 = interfaceinvoke $r1.<android.media.tv.ITvInputManager: java.util.List getTvContentRatingSystemList(int)>($i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)
    {
        android.media.tv.TvInputManager r0;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;
        android.media.tv.TvInputInfo r6;

        r0 := @this: android.media.tv.TvInputManager;

        r5 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        r6 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String,int)>(r5, $i0);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getTvInputList()
    {
        android.media.tv.TvInputManager r0;
        int $i0;
        android.media.tv.ITvInputManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r1 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        r4 = interfaceinvoke $r1.<android.media.tv.ITvInputManager: java.util.List getTvInputList(int)>($i0);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isParentalControlsEnabled()
    {
        android.media.tv.TvInputManager r0;
        boolean z0;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        z0 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: boolean isParentalControlsEnabled(int)>($i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isRatingBlocked(android.media.tv.TvContentRating)
    {
        android.media.tv.TvInputManager r0;
        boolean z0;
        android.media.tv.ITvInputManager $r2;
        java.lang.String $r3;
        int $i0;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.media.tv.TvContentRating r6;

        r0 := @this: android.media.tv.TvInputManager;

        r6 := @parameter0: android.media.tv.TvContentRating;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r3 = virtualinvoke r6.<android.media.tv.TvContentRating: java.lang.String flattenToString()>();

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        z0 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: boolean isRatingBlocked(java.lang.String,int)>($r3, $i0);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSingleSessionActive()
    {
        android.media.tv.TvInputManager r0;
        boolean z0;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        z0 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: boolean isSingleSessionActive(int)>($i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void notifyPreviewProgramAddedToWatchNext(java.lang.String, long, long)
    {
        android.media.tv.TvInputManager r0;
        long l0, l1;
        android.content.Intent $r2;
        int $i2;
        android.media.tv.ITvInputManager $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        java.lang.String r10;

        r0 := @this: android.media.tv.TvInputManager;

        r10 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.media.tv.action.PREVIEW_PROGRAM_ADDED_TO_WATCH_NEXT");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("android.media.tv.extra.PREVIEW_PROGRAM_ID", l0);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("android.media.tv.extra.WATCH_NEXT_PROGRAM_ID", l1);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r10);

     label1:
        $r7 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i2 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r7.<android.media.tv.ITvInputManager: void sendTvInputNotifyIntent(android.content.Intent,int)>($r2, $i2);

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void notifyPreviewProgramBrowsableDisabled(java.lang.String, long)
    {
        android.media.tv.TvInputManager r0;
        long l0;
        android.content.Intent $r2;
        int $i1;
        android.media.tv.ITvInputManager $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        java.lang.String r9;

        r0 := @this: android.media.tv.TvInputManager;

        r9 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.media.tv.action.PREVIEW_PROGRAM_BROWSABLE_DISABLED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("android.media.tv.extra.PREVIEW_PROGRAM_ID", l0);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r9);

     label1:
        $r6 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i1 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r6.<android.media.tv.ITvInputManager: void sendTvInputNotifyIntent(android.content.Intent,int)>($r2, $i1);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void notifyWatchNextProgramBrowsableDisabled(java.lang.String, long)
    {
        android.media.tv.TvInputManager r0;
        long l0;
        android.content.Intent $r2;
        int $i1;
        android.media.tv.ITvInputManager $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        java.lang.String r9;

        r0 := @this: android.media.tv.TvInputManager;

        r9 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.media.tv.action.WATCH_NEXT_PROGRAM_BROWSABLE_DISABLED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("android.media.tv.extra.WATCH_NEXT_PROGRAM_ID", l0);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r9);

     label1:
        $r6 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i1 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r6.<android.media.tv.ITvInputManager: void sendTvInputNotifyIntent(android.content.Intent,int)>($r2, $i1);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.ParcelFileDescriptor openDvbDevice(android.media.tv.DvbDeviceInfo, int)
    {
        android.media.tv.TvInputManager r0;
        int i0;
        java.lang.IllegalArgumentException r1;
        java.lang.String $r4;
        android.media.tv.ITvInputManager $r5;
        android.os.ParcelFileDescriptor $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.media.tv.DvbDeviceInfo r9;
        java.lang.StringBuilder r10;

        r0 := @this: android.media.tv.TvInputManager;

        r9 := @parameter0: android.media.tv.DvbDeviceInfo;

        i0 := @parameter1: int;

        if i0 < 0 goto label2;

        if 2 < i0 goto label2;

     label1:
        $r5 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r6 = interfaceinvoke $r5.<android.media.tv.ITvInputManager: android.os.ParcelFileDescriptor openDvbDevice(android.media.tv.DvbDeviceInfo,int)>(r9, i0);

        return $r6;

     label2:
        r1 = new java.lang.IllegalArgumentException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid DVB device: ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw r1;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label2 to label3 with label3;
    }

    public void registerCallback(android.media.tv.TvInputManager$TvInputCallback, android.os.Handler)
    {
        android.media.tv.TvInputManager r0;
        android.os.Handler r1;
        java.lang.Object r2;
        java.util.List r3;
        android.media.tv.TvInputManager$TvInputCallbackRecord r4;
        java.lang.Throwable $r7;
        android.media.tv.TvInputManager$TvInputCallback r8;

        r0 := @this: android.media.tv.TvInputManager;

        r8 := @parameter0: android.media.tv.TvInputManager$TvInputCallback;

        r1 := @parameter1: android.os.Handler;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r8);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = r0.<android.media.tv.TvInputManager: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        r3 = r0.<android.media.tv.TvInputManager: java.util.List mCallbackRecords>;

        r4 = new android.media.tv.TvInputManager$TvInputCallbackRecord;

        specialinvoke r4.<android.media.tv.TvInputManager$TvInputCallbackRecord: void <init>(android.media.tv.TvInputManager$TvInputCallback,android.os.Handler)>(r8, r1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void releaseTvInputHardware(int, android.media.tv.TvInputManager$Hardware)
    {
        android.media.tv.TvInputManager r0;
        int i0, $i1;
        android.media.tv.ITvInputManager $r1;
        android.media.tv.ITvInputHardware $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.media.tv.TvInputManager$Hardware r5;

        r0 := @this: android.media.tv.TvInputManager;

        i0 := @parameter0: int;

        r5 := @parameter1: android.media.tv.TvInputManager$Hardware;

     label1:
        $r1 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r2 = staticinvoke <android.media.tv.TvInputManager$Hardware: android.media.tv.ITvInputHardware access$1200(android.media.tv.TvInputManager$Hardware)>(r5);

        $i1 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r1.<android.media.tv.ITvInputManager: void releaseTvInputHardware(int,android.media.tv.ITvInputHardware,int)>(i0, $r2, $i1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removeBlockedRating(android.media.tv.TvContentRating)
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.ITvInputManager $r2;
        java.lang.String $r3;
        int $i0;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.media.tv.TvContentRating r6;

        r0 := @this: android.media.tv.TvInputManager;

        r6 := @parameter0: android.media.tv.TvContentRating;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r3 = virtualinvoke r6.<android.media.tv.TvContentRating: java.lang.String flattenToString()>();

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r2.<android.media.tv.ITvInputManager: void removeBlockedRating(java.lang.String,int)>($r3, $i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removeHardwareDevice(int)
    {
        android.media.tv.TvInputManager r0;
        int i0;
        android.media.tv.ITvInputManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.media.tv.TvInputManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        interfaceinvoke $r2.<android.media.tv.ITvInputManager: void removeHardwareDevice(int)>(i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestChannelBrowsable(android.net.Uri)
    {
        android.media.tv.TvInputManager r0;
        int $i0;
        android.media.tv.ITvInputManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.net.Uri r4;

        r0 := @this: android.media.tv.TvInputManager;

        r4 := @parameter0: android.net.Uri;

     label1:
        $r1 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r1.<android.media.tv.ITvInputManager: void requestChannelBrowsable(android.net.Uri,int)>(r4, $i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setParentalControlsEnabled(boolean)
    {
        android.media.tv.TvInputManager r0;
        boolean z0;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.media.tv.TvInputManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r2.<android.media.tv.ITvInputManager: void setParentalControlsEnabled(boolean,int)>(z0, $i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterCallback(android.media.tv.TvInputManager$TvInputCallback)
    {
        android.media.tv.TvInputManager r0;
        java.lang.Object r1, $r5;
        java.util.Iterator r2;
        java.util.List $r4;
        boolean $z0;
        android.media.tv.TvInputManager$TvInputCallbackRecord $r6;
        android.media.tv.TvInputManager$TvInputCallback $r7, r9;
        java.lang.Throwable $r8;

        r0 := @this: android.media.tv.TvInputManager;

        r9 := @parameter0: android.media.tv.TvInputManager$TvInputCallback;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r9);

        r1 = r0.<android.media.tv.TvInputManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.media.tv.TvInputManager: java.util.List mCallbackRecords>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.media.tv.TvInputManager$TvInputCallbackRecord) $r5;

        $r7 = virtualinvoke $r6.<android.media.tv.TvInputManager$TvInputCallbackRecord: android.media.tv.TvInputManager$TvInputCallback getCallback()>();

        if $r7 != r9 goto label4;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label3:
        goto label5;

     label4:
        goto label2;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void updateTvInputInfo(android.media.tv.TvInputInfo)
    {
        android.media.tv.TvInputManager r0;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        android.media.tv.TvInputInfo r5;

        r0 := @this: android.media.tv.TvInputManager;

        r5 := @parameter0: android.media.tv.TvInputInfo;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r2.<android.media.tv.ITvInputManager: void updateTvInputInfo(android.media.tv.TvInputInfo,int)>(r5, $i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL> = 2;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_UNKNOWN> = 0;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_TUNING> = 1;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_START> = 0;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_NOT_CONNECTED> = 5;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_INSUFFICIENT_RESOURCE> = 6;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_END> = 18;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_UNKNOWN> = 18;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_REBOOTING> = 17;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_PVR_RECORDING_NOT_ALLOWED> = 8;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_NO_LICENSE> = 9;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_NO_CARD> = 13;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_NEED_PAIRING> = 12;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_NEED_ACTIVATION> = 11;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_LICENSE_EXPIRED> = 10;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_INSUFFICIENT_OUTPUT_PROTECTION> = 7;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_CARD_MUTE> = 14;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_CARD_INVALID> = 15;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_CAS_BLACKOUT> = 16;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_BUFFERING> = 3;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY> = 4;

        <android.media.tv.TvInputManager: int UNKNOWN_CLIENT_PID> = -1;

        <android.media.tv.TvInputManager: int TIME_SHIFT_STATUS_UNSUPPORTED> = 1;

        <android.media.tv.TvInputManager: int TIME_SHIFT_STATUS_UNKNOWN> = 0;

        <android.media.tv.TvInputManager: int TIME_SHIFT_STATUS_UNAVAILABLE> = 2;

        <android.media.tv.TvInputManager: int TIME_SHIFT_STATUS_AVAILABLE> = 3;

        <android.media.tv.TvInputManager: long TIME_SHIFT_INVALID_TIME> = -9223372036854775808L;

        <android.media.tv.TvInputManager: java.lang.String TAG> = "TvInputManager";

        <android.media.tv.TvInputManager: int RECORDING_ERROR_UNKNOWN> = 0;

        <android.media.tv.TvInputManager: int RECORDING_ERROR_START> = 0;

        <android.media.tv.TvInputManager: int RECORDING_ERROR_RESOURCE_BUSY> = 2;

        <android.media.tv.TvInputManager: int RECORDING_ERROR_INSUFFICIENT_SPACE> = 1;

        <android.media.tv.TvInputManager: int RECORDING_ERROR_END> = 2;

        <android.media.tv.TvInputManager: java.lang.String META_DATA_CONTENT_RATING_SYSTEMS> = "android.media.tv.metadata.CONTENT_RATING_SYSTEMS";

        <android.media.tv.TvInputManager: int INPUT_STATE_DISCONNECTED> = 2;

        <android.media.tv.TvInputManager: int INPUT_STATE_CONNECTED_STANDBY> = 1;

        <android.media.tv.TvInputManager: int INPUT_STATE_CONNECTED> = 0;

        <android.media.tv.TvInputManager: int DVB_DEVICE_START> = 0;

        <android.media.tv.TvInputManager: int DVB_DEVICE_FRONTEND> = 2;

        <android.media.tv.TvInputManager: int DVB_DEVICE_END> = 2;

        <android.media.tv.TvInputManager: int DVB_DEVICE_DVR> = 1;

        <android.media.tv.TvInputManager: int DVB_DEVICE_DEMUX> = 0;

        <android.media.tv.TvInputManager: java.lang.String ACTION_VIEW_RECORDING_SCHEDULES> = "android.media.tv.action.VIEW_RECORDING_SCHEDULES";

        <android.media.tv.TvInputManager: java.lang.String ACTION_SETUP_INPUTS> = "android.media.tv.action.SETUP_INPUTS";

        <android.media.tv.TvInputManager: java.lang.String ACTION_QUERY_CONTENT_RATING_SYSTEMS> = "android.media.tv.action.QUERY_CONTENT_RATING_SYSTEMS";

        <android.media.tv.TvInputManager: java.lang.String ACTION_PARENTAL_CONTROLS_ENABLED_CHANGED> = "android.media.tv.action.PARENTAL_CONTROLS_ENABLED_CHANGED";

        <android.media.tv.TvInputManager: java.lang.String ACTION_BLOCKED_RATINGS_CHANGED> = "android.media.tv.action.BLOCKED_RATINGS_CHANGED";

        return;
    }
}
