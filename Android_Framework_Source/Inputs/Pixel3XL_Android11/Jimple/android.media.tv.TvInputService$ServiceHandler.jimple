final class android.media.tv.TvInputService$ServiceHandler extends android.os.Handler
{
    private static final int DO_ADD_HARDWARE_INPUT;
    private static final int DO_ADD_HDMI_INPUT;
    private static final int DO_CREATE_RECORDING_SESSION;
    private static final int DO_CREATE_SESSION;
    private static final int DO_NOTIFY_SESSION_CREATED;
    private static final int DO_REMOVE_HARDWARE_INPUT;
    private static final int DO_REMOVE_HDMI_INPUT;
    private static final int DO_UPDATE_HDMI_INPUT;
    final android.media.tv.TvInputService this$0;

    private void <init>(android.media.tv.TvInputService)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        android.media.tv.TvInputService r1;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        r1 := @parameter0: android.media.tv.TvInputService;

        r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

    void <init>(android.media.tv.TvInputService, android.media.tv.TvInputService$1)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        android.media.tv.TvInputService r1;
        android.media.tv.TvInputService$1 r2;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        r1 := @parameter0: android.media.tv.TvInputService;

        r2 := @parameter1: android.media.tv.TvInputService$1;

        specialinvoke r0.<android.media.tv.TvInputService$ServiceHandler: void <init>(android.media.tv.TvInputService)>(r1);

        return;
    }

    private void broadcastAddHardwareInput(int, android.media.tv.TvInputInfo)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        int i0, i1, i3;
        android.media.tv.TvInputInfo r1;
        android.media.tv.TvInputService $r3, $r5, $r7;
        android.os.RemoteCallbackList $r4, $r6, $r8;
        android.os.IInterface $r9;
        android.media.tv.ITvInputServiceCallback $r10;
        android.os.RemoteException $r11;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        $r3 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r4 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r3);

        i1 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label6;

     label2:
        $r7 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r8 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r7);

        $r9 = virtualinvoke $r8.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        $r10 = (android.media.tv.ITvInputServiceCallback) $r9;

        interfaceinvoke $r10.<android.media.tv.ITvInputServiceCallback: void addHardwareInput(int,android.media.tv.TvInputInfo)>(i0, r1);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "error in broadcastAddHardwareInput", $r11);

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        $r5 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r6 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r5);

        virtualinvoke $r6.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void broadcastAddHdmiInput(int, android.media.tv.TvInputInfo)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        int i0, i1, i3;
        android.media.tv.TvInputInfo r1;
        android.media.tv.TvInputService $r3, $r5, $r7;
        android.os.RemoteCallbackList $r4, $r6, $r8;
        android.os.IInterface $r9;
        android.media.tv.ITvInputServiceCallback $r10;
        android.os.RemoteException $r11;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        $r3 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r4 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r3);

        i1 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label6;

     label2:
        $r7 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r8 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r7);

        $r9 = virtualinvoke $r8.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        $r10 = (android.media.tv.ITvInputServiceCallback) $r9;

        interfaceinvoke $r10.<android.media.tv.ITvInputServiceCallback: void addHdmiInput(int,android.media.tv.TvInputInfo)>(i0, r1);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "error in broadcastAddHdmiInput", $r11);

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        $r5 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r6 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r5);

        virtualinvoke $r6.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void broadcastRemoveHardwareInput(java.lang.String)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        java.lang.String r1;
        int i0, i2;
        android.media.tv.TvInputService $r3, $r5, $r7;
        android.os.RemoteCallbackList $r4, $r6, $r8;
        android.os.IInterface $r9;
        android.media.tv.ITvInputServiceCallback $r10;
        android.os.RemoteException $r11;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r4 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r3);

        i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

     label2:
        $r7 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r8 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r7);

        $r9 = virtualinvoke $r8.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r10 = (android.media.tv.ITvInputServiceCallback) $r9;

        interfaceinvoke $r10.<android.media.tv.ITvInputServiceCallback: void removeHardwareInput(java.lang.String)>(r1);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "error in broadcastRemoveHardwareInput", $r11);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r5 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r6 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r5);

        virtualinvoke $r6.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public final void handleMessage(android.os.Message)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        int $i0, $i1, $i2, $i5;
        java.lang.Object $r1, $r3, $r5, $r7, $r9, $r11, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r45;
        android.media.tv.TvInputService $r2, $r4, $r6, $r8, $r10, $r15, $r17, $r28, $r30, $r31, $r38, $r41, $r44, $r47;
        android.media.tv.ITvInputSessionWrapper $r16, $r29;
        boolean $z0, $z1, $z2, $z3;
        android.os.Handler $r32, $r42, $r48;
        android.os.Message $r33, r58;
        java.lang.StringBuilder $r34, $r49;
        java.lang.String $r37, $r52, r62, r66, r71, r72, r86, r87, r92;
        android.media.tv.TvInputManager$SessionCallback $r46;
        android.os.RemoteException $r53, $r54, $r55, $r56, $r57;
        android.hardware.hdmi.HdmiDeviceInfo r60, r61, r63;
        android.media.tv.TvInputInfo r64, r68;
        android.media.tv.TvInputHardwareInfo r65, r67;
        com.android.internal.os.SomeArgs r69, r77, r83, r96;
        android.media.tv.ITvInputSessionCallback r70, r80, r85;
        android.media.tv.TvInputService$RecordingSession r73;
        android.media.tv.TvInputService$Session r78, r88;
        android.media.tv.ITvInputSession r79;
        android.os.IBinder r81;
        android.view.InputChannel r84;
        android.media.tv.TvInputService$HardwareSession r91;
        android.media.tv.TvInputManager r93;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        r58 := @parameter0: android.os.Message;

        $i0 = r58.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 1: goto label27;
            case 2: goto label21;
            case 3: goto label11;
            case 4: goto label09;
            case 5: goto label07;
            case 6: goto label05;
            case 7: goto label03;
            case 8: goto label02;
            default: goto label01;
        };

     label01:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message code: ");

        $i5 = r58.<android.os.Message: int what>;

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TvInputService", $r52);

        return;

     label02:
        $r1 = r58.<android.os.Message: java.lang.Object obj>;

        r60 = (android.hardware.hdmi.HdmiDeviceInfo) $r1;

        $r2 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        virtualinvoke $r2.<android.media.tv.TvInputService: void onHdmiDeviceUpdated(android.hardware.hdmi.HdmiDeviceInfo)>(r60);

        return;

     label03:
        $r3 = r58.<android.os.Message: java.lang.Object obj>;

        r61 = (android.hardware.hdmi.HdmiDeviceInfo) $r3;

        $r4 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r62 = virtualinvoke $r4.<android.media.tv.TvInputService: java.lang.String onHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>(r61);

        if r62 == null goto label04;

        specialinvoke r0.<android.media.tv.TvInputService$ServiceHandler: void broadcastRemoveHardwareInput(java.lang.String)>(r62);

     label04:
        return;

     label05:
        $r5 = r58.<android.os.Message: java.lang.Object obj>;

        r63 = (android.hardware.hdmi.HdmiDeviceInfo) $r5;

        $r6 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r64 = virtualinvoke $r6.<android.media.tv.TvInputService: android.media.tv.TvInputInfo onHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>(r63);

        if r64 == null goto label06;

        $i1 = virtualinvoke r63.<android.hardware.hdmi.HdmiDeviceInfo: int getId()>();

        specialinvoke r0.<android.media.tv.TvInputService$ServiceHandler: void broadcastAddHdmiInput(int,android.media.tv.TvInputInfo)>($i1, r64);

     label06:
        return;

     label07:
        $r7 = r58.<android.os.Message: java.lang.Object obj>;

        r65 = (android.media.tv.TvInputHardwareInfo) $r7;

        $r8 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r66 = virtualinvoke $r8.<android.media.tv.TvInputService: java.lang.String onHardwareRemoved(android.media.tv.TvInputHardwareInfo)>(r65);

        if r66 == null goto label08;

        specialinvoke r0.<android.media.tv.TvInputService$ServiceHandler: void broadcastRemoveHardwareInput(java.lang.String)>(r66);

     label08:
        return;

     label09:
        $r9 = r58.<android.os.Message: java.lang.Object obj>;

        r67 = (android.media.tv.TvInputHardwareInfo) $r9;

        $r10 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r68 = virtualinvoke $r10.<android.media.tv.TvInputService: android.media.tv.TvInputInfo onHardwareAdded(android.media.tv.TvInputHardwareInfo)>(r67);

        if r68 == null goto label10;

        $i2 = virtualinvoke r67.<android.media.tv.TvInputHardwareInfo: int getDeviceId()>();

        specialinvoke r0.<android.media.tv.TvInputService$ServiceHandler: void broadcastAddHardwareInput(int,android.media.tv.TvInputInfo)>($i2, r68);

     label10:
        return;

     label11:
        $r11 = r58.<android.os.Message: java.lang.Object obj>;

        r69 = (com.android.internal.os.SomeArgs) $r11;

        $r12 = r69.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r70 = (android.media.tv.ITvInputSessionCallback) $r12;

        $r13 = r69.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r71 = (java.lang.String) $r13;

        $r14 = r69.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r72 = (java.lang.String) $r14;

        virtualinvoke r69.<com.android.internal.os.SomeArgs: void recycle()>();

        $r15 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r73 = virtualinvoke $r15.<android.media.tv.TvInputService: android.media.tv.TvInputService$RecordingSession onCreateRecordingSession(java.lang.String,java.lang.String)>(r71, r72);

        if r73 != null goto label16;

     label12:
        interfaceinvoke r70.<android.media.tv.ITvInputSessionCallback: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>(null, null);

     label13:
        goto label15;

     label14:
        $r55 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "error in onSessionCreated", $r55);

     label15:
        return;

     label16:
        $r16 = new android.media.tv.ITvInputSessionWrapper;

        $r17 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        specialinvoke $r16.<android.media.tv.ITvInputSessionWrapper: void <init>(android.content.Context,android.media.tv.TvInputService$RecordingSession)>($r17, r73);

     label17:
        interfaceinvoke r70.<android.media.tv.ITvInputSessionCallback: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>($r16, null);

     label18:
        goto label20;

     label19:
        $r56 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "error in onSessionCreated", $r56);

     label20:
        staticinvoke <android.media.tv.TvInputService$RecordingSession: void access$2200(android.media.tv.TvInputService$RecordingSession,android.media.tv.ITvInputSessionCallback)>(r73, r70);

        return;

     label21:
        $r18 = r58.<android.os.Message: java.lang.Object obj>;

        r77 = (com.android.internal.os.SomeArgs) $r18;

        $r19 = r77.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r78 = (android.media.tv.TvInputService$Session) $r19;

        $r20 = r77.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r79 = (android.media.tv.ITvInputSession) $r20;

        $r21 = r77.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r80 = (android.media.tv.ITvInputSessionCallback) $r21;

        $r22 = r77.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r81 = (android.os.IBinder) $r22;

     label22:
        interfaceinvoke r80.<android.media.tv.ITvInputSessionCallback: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>(r79, r81);

     label23:
        goto label25;

     label24:
        $r57 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "error in onSessionCreated", $r57);

     label25:
        if r78 == null goto label26;

        staticinvoke <android.media.tv.TvInputService$Session: void access$2100(android.media.tv.TvInputService$Session,android.media.tv.ITvInputSessionCallback)>(r78, r80);

     label26:
        virtualinvoke r77.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label27:
        $r23 = r58.<android.os.Message: java.lang.Object obj>;

        r83 = (com.android.internal.os.SomeArgs) $r23;

        $r24 = r83.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r84 = (android.view.InputChannel) $r24;

        $r25 = r83.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r85 = (android.media.tv.ITvInputSessionCallback) $r25;

        $r26 = r83.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r86 = (java.lang.String) $r26;

        $r27 = r83.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r87 = (java.lang.String) $r27;

        virtualinvoke r83.<com.android.internal.os.SomeArgs: void recycle()>();

        $r28 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r88 = virtualinvoke $r28.<android.media.tv.TvInputService: android.media.tv.TvInputService$Session onCreateSession(java.lang.String,java.lang.String)>(r86, r87);

        if r88 != null goto label32;

     label28:
        interfaceinvoke r85.<android.media.tv.ITvInputSessionCallback: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>(null, null);

     label29:
        goto label31;

     label30:
        $r53 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "error in onSessionCreated", $r53);

     label31:
        return;

     label32:
        $r29 = new android.media.tv.ITvInputSessionWrapper;

        $r30 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        specialinvoke $r29.<android.media.tv.ITvInputSessionWrapper: void <init>(android.content.Context,android.media.tv.TvInputService$Session,android.view.InputChannel)>($r30, r88, r84);

        $z0 = r88 instanceof android.media.tv.TvInputService$HardwareSession;

        if $z0 == 0 goto label41;

        r91 = (android.media.tv.TvInputService$HardwareSession) r88;

        r92 = virtualinvoke r91.<android.media.tv.TvInputService$HardwareSession: java.lang.String getHardwareInputId()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r92);

        if $z1 != 0 goto label34;

        $r38 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $z3 = staticinvoke <android.media.tv.TvInputService: boolean access$1900(android.media.tv.TvInputService,java.lang.String)>($r38, r92);

        if $z3 != 0 goto label33;

        goto label34;

     label33:
        staticinvoke <android.media.tv.TvInputService$HardwareSession: android.media.tv.ITvInputSession access$1602(android.media.tv.TvInputService$HardwareSession,android.media.tv.ITvInputSession)>(r91, $r29);

        staticinvoke <android.media.tv.TvInputService$HardwareSession: android.media.tv.ITvInputSessionCallback access$1702(android.media.tv.TvInputService$HardwareSession,android.media.tv.ITvInputSessionCallback)>(r91, r85);

        $r41 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r42 = staticinvoke <android.media.tv.TvInputService: android.os.Handler access$200(android.media.tv.TvInputService)>($r41);

        staticinvoke <android.media.tv.TvInputService$HardwareSession: android.os.Handler access$1802(android.media.tv.TvInputService$HardwareSession,android.os.Handler)>(r91, $r42);

        $r44 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r45 = virtualinvoke $r44.<android.media.tv.TvInputService: java.lang.Object getSystemService(java.lang.String)>("tv_input");

        r93 = (android.media.tv.TvInputManager) $r45;

        $r46 = staticinvoke <android.media.tv.TvInputService$HardwareSession: android.media.tv.TvInputManager$SessionCallback access$2000(android.media.tv.TvInputService$HardwareSession)>(r91);

        $r47 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r48 = staticinvoke <android.media.tv.TvInputService: android.os.Handler access$200(android.media.tv.TvInputService)>($r47);

        virtualinvoke r93.<android.media.tv.TvInputManager: void createSession(java.lang.String,android.media.tv.TvInputManager$SessionCallback,android.os.Handler)>(r92, $r46, $r48);

        goto label42;

     label34:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r92);

        if $z2 == 0 goto label35;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TvInputService", "Hardware input id is not setup yet.");

        goto label36;

     label35:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid hardware input id : ");

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r92);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TvInputService", $r37);

     label36:
        virtualinvoke r88.<android.media.tv.TvInputService$Session: void onRelease()>();

     label37:
        interfaceinvoke r85.<android.media.tv.ITvInputSessionCallback: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>(null, null);

     label38:
        goto label40;

     label39:
        $r54 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "error in onSessionCreated", $r54);

     label40:
        return;

     label41:
        r96 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r96.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r88;

        r96.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = $r29;

        r96.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r85;

        r96.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = null;

        $r31 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r32 = staticinvoke <android.media.tv.TvInputService: android.os.Handler access$200(android.media.tv.TvInputService)>($r31);

        $r33 = virtualinvoke $r32.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r96);

        virtualinvoke $r33.<android.os.Message: void sendToTarget()>();

     label42:
        return;

        catch android.os.RemoteException from label12 to label13 with label14;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch android.os.RemoteException from label22 to label23 with label24;
        catch android.os.RemoteException from label28 to label29 with label30;
        catch android.os.RemoteException from label37 to label38 with label39;
    }

    public static void <clinit>()
    {
        <android.media.tv.TvInputService$ServiceHandler: int DO_UPDATE_HDMI_INPUT> = 8;

        <android.media.tv.TvInputService$ServiceHandler: int DO_REMOVE_HDMI_INPUT> = 7;

        <android.media.tv.TvInputService$ServiceHandler: int DO_REMOVE_HARDWARE_INPUT> = 5;

        <android.media.tv.TvInputService$ServiceHandler: int DO_NOTIFY_SESSION_CREATED> = 2;

        <android.media.tv.TvInputService$ServiceHandler: int DO_CREATE_SESSION> = 1;

        <android.media.tv.TvInputService$ServiceHandler: int DO_CREATE_RECORDING_SESSION> = 3;

        <android.media.tv.TvInputService$ServiceHandler: int DO_ADD_HDMI_INPUT> = 6;

        <android.media.tv.TvInputService$ServiceHandler: int DO_ADD_HARDWARE_INPUT> = 4;

        return;
    }
}
