public final class android.media.tv.TvTrackInfo$Builder extends java.lang.Object
{
    private int mAudioChannelCount;
    private boolean mAudioDescription;
    private int mAudioSampleRate;
    private java.lang.CharSequence mDescription;
    private java.lang.String mEncoding;
    private boolean mEncrypted;
    private android.os.Bundle mExtra;
    private boolean mHardOfHearing;
    private final java.lang.String mId;
    private java.lang.String mLanguage;
    private boolean mSpokenSubtitle;
    private final int mType;
    private byte mVideoActiveFormatDescription;
    private float mVideoFrameRate;
    private int mVideoHeight;
    private float mVideoPixelAspectRatio;
    private int mVideoWidth;

    public void <init>(int, java.lang.String)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6, r7;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.TvTrackInfo$Builder: float mVideoPixelAspectRatio> = 1.0F;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r7);

        r0.<android.media.tv.TvTrackInfo$Builder: int mType> = i0;

        r0.<android.media.tv.TvTrackInfo$Builder: java.lang.String mId> = r7;

        return;
    }

    public android.media.tv.TvTrackInfo build()
    {
        android.media.tv.TvTrackInfo$Builder r0;
        android.media.tv.TvTrackInfo $r1;
        android.os.Bundle $r2;
        byte $b0;
        float $f0, $f1;
        int $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3, $r5, $r6;
        java.lang.CharSequence $r4;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        $r1 = new android.media.tv.TvTrackInfo;

        $i5 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        $r6 = r0.<android.media.tv.TvTrackInfo$Builder: java.lang.String mId>;

        $r5 = r0.<android.media.tv.TvTrackInfo$Builder: java.lang.String mLanguage>;

        $r4 = r0.<android.media.tv.TvTrackInfo$Builder: java.lang.CharSequence mDescription>;

        $r3 = r0.<android.media.tv.TvTrackInfo$Builder: java.lang.String mEncoding>;

        $z3 = r0.<android.media.tv.TvTrackInfo$Builder: boolean mEncrypted>;

        $i4 = r0.<android.media.tv.TvTrackInfo$Builder: int mAudioChannelCount>;

        $i3 = r0.<android.media.tv.TvTrackInfo$Builder: int mAudioSampleRate>;

        $z2 = r0.<android.media.tv.TvTrackInfo$Builder: boolean mAudioDescription>;

        $z1 = r0.<android.media.tv.TvTrackInfo$Builder: boolean mHardOfHearing>;

        $z0 = r0.<android.media.tv.TvTrackInfo$Builder: boolean mSpokenSubtitle>;

        $i2 = r0.<android.media.tv.TvTrackInfo$Builder: int mVideoWidth>;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mVideoHeight>;

        $f1 = r0.<android.media.tv.TvTrackInfo$Builder: float mVideoFrameRate>;

        $f0 = r0.<android.media.tv.TvTrackInfo$Builder: float mVideoPixelAspectRatio>;

        $b0 = r0.<android.media.tv.TvTrackInfo$Builder: byte mVideoActiveFormatDescription>;

        $r2 = r0.<android.media.tv.TvTrackInfo$Builder: android.os.Bundle mExtra>;

        specialinvoke $r1.<android.media.tv.TvTrackInfo: void <init>(int,java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String,boolean,int,int,boolean,boolean,boolean,int,int,float,float,byte,android.os.Bundle,android.media.tv.TvTrackInfo$1)>($i5, $r6, $r5, $r4, $r3, $z3, $i4, $i3, $z2, $z1, $z0, $i2, $i1, $f1, $f0, $b0, $r2, null);

        return $r1;
    }

    public android.media.tv.TvTrackInfo$Builder setAudioChannelCount(int)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        int i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i1 != 0 goto label1;

        r0.<android.media.tv.TvTrackInfo$Builder: int mAudioChannelCount> = i0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not an audio track");

        throw $r1;
    }

    public android.media.tv.TvTrackInfo$Builder setAudioDescription(boolean)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        boolean z0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i0 != 0 goto label1;

        r0.<android.media.tv.TvTrackInfo$Builder: boolean mAudioDescription> = z0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not an audio track");

        throw $r1;
    }

    public android.media.tv.TvTrackInfo$Builder setAudioSampleRate(int)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        int i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i1 != 0 goto label1;

        r0.<android.media.tv.TvTrackInfo$Builder: int mAudioSampleRate> = i0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not an audio track");

        throw $r1;
    }

    public android.media.tv.TvTrackInfo$Builder setDescription(java.lang.CharSequence)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        java.lang.CharSequence r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<android.media.tv.TvTrackInfo$Builder: java.lang.CharSequence mDescription> = r1;

        return r0;
    }

    public android.media.tv.TvTrackInfo$Builder setEncoding(java.lang.String)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        java.lang.String r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.media.tv.TvTrackInfo$Builder: java.lang.String mEncoding> = r1;

        return r0;
    }

    public android.media.tv.TvTrackInfo$Builder setEncrypted(boolean)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        boolean z0;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        z0 := @parameter0: boolean;

        r0.<android.media.tv.TvTrackInfo$Builder: boolean mEncrypted> = z0;

        return r0;
    }

    public android.media.tv.TvTrackInfo$Builder setExtra(android.os.Bundle)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        android.os.Bundle r1, $r3;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

        r0.<android.media.tv.TvTrackInfo$Builder: android.os.Bundle mExtra> = $r3;

        return r0;
    }

    public android.media.tv.TvTrackInfo$Builder setHardOfHearing(boolean)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        boolean z0;
        int i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        z0 := @parameter0: boolean;

        i0 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if i0 == 0 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not an audio track or a subtitle track");

        throw $r1;

     label2:
        r0.<android.media.tv.TvTrackInfo$Builder: boolean mHardOfHearing> = z0;

        return r0;
    }

    public android.media.tv.TvTrackInfo$Builder setLanguage(java.lang.String)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        java.lang.String r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<android.media.tv.TvTrackInfo$Builder: java.lang.String mLanguage> = r1;

        return r0;
    }

    public android.media.tv.TvTrackInfo$Builder setSpokenSubtitle(boolean)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        boolean z0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i0 != 0 goto label1;

        r0.<android.media.tv.TvTrackInfo$Builder: boolean mSpokenSubtitle> = z0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not an audio track");

        throw $r1;
    }

    public android.media.tv.TvTrackInfo$Builder setVideoActiveFormatDescription(byte)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        byte b0, $b2;
        int $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        b0 := @parameter0: byte;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i1 != 1 goto label1;

        $b2 = (byte) b0;

        r0.<android.media.tv.TvTrackInfo$Builder: byte mVideoActiveFormatDescription> = $b2;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a video track");

        throw $r1;
    }

    public android.media.tv.TvTrackInfo$Builder setVideoFrameRate(float)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        float f0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        f0 := @parameter0: float;

        $i0 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i0 != 1 goto label1;

        r0.<android.media.tv.TvTrackInfo$Builder: float mVideoFrameRate> = f0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a video track");

        throw $r1;
    }

    public android.media.tv.TvTrackInfo$Builder setVideoHeight(int)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        int i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i1 != 1 goto label1;

        r0.<android.media.tv.TvTrackInfo$Builder: int mVideoHeight> = i0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a video track");

        throw $r1;
    }

    public android.media.tv.TvTrackInfo$Builder setVideoPixelAspectRatio(float)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        float f0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        f0 := @parameter0: float;

        $i0 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i0 != 1 goto label1;

        r0.<android.media.tv.TvTrackInfo$Builder: float mVideoPixelAspectRatio> = f0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a video track");

        throw $r1;
    }

    public android.media.tv.TvTrackInfo$Builder setVideoWidth(int)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        int i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i1 != 1 goto label1;

        r0.<android.media.tv.TvTrackInfo$Builder: int mVideoWidth> = i0;

        return r0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a video track");

        throw $r1;
    }
}
