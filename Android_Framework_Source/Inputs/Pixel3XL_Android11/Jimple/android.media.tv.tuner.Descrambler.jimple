public class android.media.tv.tuner.Descrambler extends java.lang.Object implements java.lang.AutoCloseable
{
    public static final int PID_TYPE_MMTP;
    public static final int PID_TYPE_T;
    private static final java.lang.String TAG;
    private boolean mIsClosed;
    private final java.lang.Object mLock;
    private long mNativeContext;

    private void <init>()
    {
        android.media.tv.tuner.Descrambler r0;
        java.lang.Object $r1;

        r0 := @this: android.media.tv.tuner.Descrambler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.tuner.Descrambler: boolean mIsClosed> = 0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.tuner.Descrambler: java.lang.Object mLock> = $r1;

        return;
    }

    private native int nativeAddPid(int, int, android.media.tv.tuner.filter.Filter);

    private native int nativeClose();

    private native int nativeRemovePid(int, int, android.media.tv.tuner.filter.Filter);

    private native int nativeSetKeyToken(byte[]);

    public int addPid(int, int, android.media.tv.tuner.filter.Filter)
    {
        android.media.tv.tuner.Descrambler r0;
        int i0, i1, i2;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r2;
        android.media.tv.tuner.filter.Filter r3;

        r0 := @this: android.media.tv.tuner.Descrambler;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r3 := @parameter2: android.media.tv.tuner.filter.Filter;

        r1 = r0.<android.media.tv.tuner.Descrambler: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.media.tv.tuner.Descrambler: boolean mIsClosed>;

        staticinvoke <android.media.tv.tuner.TunerUtils: void checkResourceState(java.lang.String,boolean)>("Descrambler", $z0);

        i2 = specialinvoke r0.<android.media.tv.tuner.Descrambler: int nativeAddPid(int,int,android.media.tv.tuner.filter.Filter)>(i1, i0, r3);

        exitmonitor r1;

     label2:
        return i2;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void close()
    {
        android.media.tv.tuner.Descrambler r0;
        java.lang.Object r1;
        int i0;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: android.media.tv.tuner.Descrambler;

        r1 = r0.<android.media.tv.tuner.Descrambler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.media.tv.tuner.Descrambler: boolean mIsClosed>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        i0 = specialinvoke r0.<android.media.tv.tuner.Descrambler: int nativeClose()>();

     label04:
        if i0 == 0 goto label07;

     label05:
        staticinvoke <android.media.tv.tuner.TunerUtils: void throwExceptionForResult(int,java.lang.String)>(i0, "Failed to close descrambler");

     label06:
        goto label08;

     label07:
        r0.<android.media.tv.tuner.Descrambler: boolean mIsClosed> = 1;

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r3 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int removePid(int, int, android.media.tv.tuner.filter.Filter)
    {
        android.media.tv.tuner.Descrambler r0;
        int i0, i1, i2;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Throwable $r2;
        android.media.tv.tuner.filter.Filter r3;

        r0 := @this: android.media.tv.tuner.Descrambler;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r3 := @parameter2: android.media.tv.tuner.filter.Filter;

        r1 = r0.<android.media.tv.tuner.Descrambler: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.media.tv.tuner.Descrambler: boolean mIsClosed>;

        staticinvoke <android.media.tv.tuner.TunerUtils: void checkResourceState(java.lang.String,boolean)>("Descrambler", $z0);

        i2 = specialinvoke r0.<android.media.tv.tuner.Descrambler: int nativeRemovePid(int,int,android.media.tv.tuner.filter.Filter)>(i1, i0, r3);

        exitmonitor r1;

     label2:
        return i2;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int setKeyToken(byte[])
    {
        android.media.tv.tuner.Descrambler r0;
        java.lang.Object r1;
        int i0;
        boolean $z0;
        java.lang.Throwable $r3;
        byte[] r4;

        r0 := @this: android.media.tv.tuner.Descrambler;

        r4 := @parameter0: byte[];

        r1 = r0.<android.media.tv.tuner.Descrambler: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.media.tv.tuner.Descrambler: boolean mIsClosed>;

        staticinvoke <android.media.tv.tuner.TunerUtils: void checkResourceState(java.lang.String,boolean)>("Descrambler", $z0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r4, "key token must not be null");

        i0 = specialinvoke r0.<android.media.tv.tuner.Descrambler: int nativeSetKeyToken(byte[])>(r4);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <android.media.tv.tuner.Descrambler: java.lang.String TAG> = "Descrambler";

        <android.media.tv.tuner.Descrambler: int PID_TYPE_T> = 1;

        <android.media.tv.tuner.Descrambler: int PID_TYPE_MMTP> = 2;

        return;
    }
}
