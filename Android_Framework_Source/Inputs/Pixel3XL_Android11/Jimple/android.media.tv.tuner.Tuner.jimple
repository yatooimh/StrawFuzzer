public class android.media.tv.tuner.Tuner extends java.lang.Object implements java.lang.AutoCloseable
{
    private static final boolean DEBUG;
    public static final int DVR_TYPE_PLAYBACK;
    public static final int DVR_TYPE_RECORD;
    public static final int INVALID_AV_SYNC_ID;
    public static final int INVALID_FILTER_ID;
    public static final int INVALID_STREAM_ID;
    public static final long INVALID_TIMESTAMP;
    public static final int INVALID_TS_PID;
    private static final int MSG_ON_FILTER_EVENT;
    private static final int MSG_ON_FILTER_STATUS;
    private static final int MSG_ON_LNB_EVENT;
    private static final int MSG_RESOURCE_LOST;
    public static final int RESULT_INVALID_ARGUMENT;
    public static final int RESULT_INVALID_STATE;
    public static final int RESULT_NOT_INITIALIZED;
    public static final int RESULT_OUT_OF_MEMORY;
    public static final int RESULT_SUCCESS;
    public static final int RESULT_UNAVAILABLE;
    public static final int RESULT_UNKNOWN_ERROR;
    public static final int SCAN_TYPE_AUTO;
    public static final int SCAN_TYPE_BLIND;
    public static final int SCAN_TYPE_UNDEFINED;
    private static final java.lang.String TAG;
    private final int mClientId;
    private final android.content.Context mContext;
    private java.lang.Integer mDemuxHandle;
    private java.util.Map mDescramblers;
    private java.util.List mFilters;
    private android.media.tv.tuner.Tuner$Frontend mFrontend;
    private java.lang.Integer mFrontendHandle;
    private android.media.tv.tuner.frontend.FrontendInfo mFrontendInfo;
    private int mFrontendType;
    private android.media.tv.tuner.Tuner$EventHandler mHandler;
    private android.media.tv.tuner.Lnb mLnb;
    private java.lang.Integer mLnbHandle;
    private long mNativeContext;
    private android.media.tv.tuner.Tuner$OnResourceLostListener mOnResourceLostListener;
    private java.util.concurrent.Executor mOnResourceLostListenerExecutor;
    private android.media.tv.tuner.frontend.OnTuneEventListener mOnTuneEventListener;
    private java.util.concurrent.Executor mOnTunerEventExecutor;
    private final android.media.tv.tunerresourcemanager.TunerResourceManager$ResourcesReclaimListener mResourceListener;
    private android.media.tv.tuner.frontend.ScanCallback mScanCallback;
    private java.util.concurrent.Executor mScanCallbackExecutor;
    private final android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager;
    private int mUserId;

    static void <clinit>()
    {
        java.lang.UnsatisfiedLinkError $r1;

        <android.media.tv.tuner.Tuner: java.lang.String TAG> = "MediaTvTuner";

        <android.media.tv.tuner.Tuner: int SCAN_TYPE_UNDEFINED> = 0;

        <android.media.tv.tuner.Tuner: int SCAN_TYPE_BLIND> = 2;

        <android.media.tv.tuner.Tuner: int SCAN_TYPE_AUTO> = 1;

        <android.media.tv.tuner.Tuner: int RESULT_UNKNOWN_ERROR> = 6;

        <android.media.tv.tuner.Tuner: int RESULT_UNAVAILABLE> = 1;

        <android.media.tv.tuner.Tuner: int RESULT_SUCCESS> = 0;

        <android.media.tv.tuner.Tuner: int RESULT_OUT_OF_MEMORY> = 5;

        <android.media.tv.tuner.Tuner: int RESULT_NOT_INITIALIZED> = 2;

        <android.media.tv.tuner.Tuner: int RESULT_INVALID_STATE> = 3;

        <android.media.tv.tuner.Tuner: int RESULT_INVALID_ARGUMENT> = 4;

        <android.media.tv.tuner.Tuner: int MSG_RESOURCE_LOST> = 1;

        <android.media.tv.tuner.Tuner: int MSG_ON_LNB_EVENT> = 4;

        <android.media.tv.tuner.Tuner: int MSG_ON_FILTER_STATUS> = 3;

        <android.media.tv.tuner.Tuner: int MSG_ON_FILTER_EVENT> = 2;

        <android.media.tv.tuner.Tuner: int INVALID_TS_PID> = 65535;

        <android.media.tv.tuner.Tuner: long INVALID_TIMESTAMP> = -1L;

        <android.media.tv.tuner.Tuner: int INVALID_STREAM_ID> = 65535;

        <android.media.tv.tuner.Tuner: int INVALID_FILTER_ID> = -1;

        <android.media.tv.tuner.Tuner: int INVALID_AV_SYNC_ID> = -1;

        <android.media.tv.tuner.Tuner: int DVR_TYPE_RECORD> = 0;

        <android.media.tv.tuner.Tuner: int DVR_TYPE_PLAYBACK> = 1;

        <android.media.tv.tuner.Tuner: boolean DEBUG> = 0;

     label1:
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_tv_tuner");

        staticinvoke <android.media.tv.tuner.Tuner: void nativeInit()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaTvTuner", "tuner JNI library not found!");

     label4:
        return;

        catch java.lang.UnsatisfiedLinkError from label1 to label2 with label3;
    }

    public void <init>(android.content.Context, java.lang.String, int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0, $i1, $i2;
        java.util.HashMap $r1;
        java.util.ArrayList $r2;
        android.media.tv.tuner.Tuner$1 $r3;
        java.lang.Object $r4;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r5, $r11;
        android.media.tv.tuner.Tuner$EventHandler $r6, $r7, $r10, $r13;
        android.media.tv.tunerresourcemanager.ResourceClientProfile $r8;
        android.os.HandlerExecutor $r9;
        android.media.tv.tunerresourcemanager.TunerResourceManager$ResourcesReclaimListener $r12;
        android.content.Context r14;
        java.lang.String r15;
        int[] r16;

        r0 := @this: android.media.tv.tuner.Tuner;

        r14 := @parameter0: android.content.Context;

        r15 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.tuner.Tuner: int mFrontendType> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.media.tv.tuner.Tuner: java.util.Map mDescramblers> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.media.tv.tuner.Tuner: java.util.List mFilters> = $r2;

        $r3 = new android.media.tv.tuner.Tuner$1;

        specialinvoke $r3.<android.media.tv.tuner.Tuner$1: void <init>(android.media.tv.tuner.Tuner)>(r0);

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager$ResourcesReclaimListener mResourceListener> = $r3;

        specialinvoke r0.<android.media.tv.tuner.Tuner: void nativeSetup()>();

        r0.<android.media.tv.tuner.Tuner: android.content.Context mContext> = r14;

        $r4 = virtualinvoke r14.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("tv_tuner_resource_mgr");

        $r5 = (android.media.tv.tunerresourcemanager.TunerResourceManager) $r4;

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager> = $r5;

        $r6 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$EventHandler mHandler>;

        if $r6 != null goto label1;

        $r13 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$EventHandler createEventHandler()>();

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$EventHandler mHandler> = $r13;

     label1:
        $r7 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$EventHandler createEventHandler()>();

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$EventHandler mHandler> = $r7;

        r16 = newarray (int)[1];

        $r8 = new android.media.tv.tunerresourcemanager.ResourceClientProfile;

        specialinvoke $r8.<android.media.tv.tunerresourcemanager.ResourceClientProfile: void <init>(java.lang.String,int)>(r15, i0);

        $r11 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        $r9 = new android.os.HandlerExecutor;

        $r10 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$EventHandler mHandler>;

        specialinvoke $r9.<android.os.HandlerExecutor: void <init>(android.os.Handler)>($r10);

        $r12 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager$ResourcesReclaimListener mResourceListener>;

        virtualinvoke $r11.<android.media.tv.tunerresourcemanager.TunerResourceManager: void registerClientProfile(android.media.tv.tunerresourcemanager.ResourceClientProfile,java.util.concurrent.Executor,android.media.tv.tunerresourcemanager.TunerResourceManager$ResourcesReclaimListener,int[])>($r8, $r9, $r12, r16);

        $i1 = r16[0];

        r0.<android.media.tv.tuner.Tuner: int mClientId> = $i1;

        $i2 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        r0.<android.media.tv.tuner.Tuner: int mUserId> = $i2;

        specialinvoke r0.<android.media.tv.tuner.Tuner: void setFrontendInfoList()>();

        specialinvoke r0.<android.media.tv.tuner.Tuner: void setLnbIds()>();

        return;
    }

    static android.media.tv.tuner.Tuner$Frontend access$000(android.media.tv.tuner.Tuner)
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.Tuner$Frontend $r1;

        r0 := @parameter0: android.media.tv.tuner.Tuner;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$Frontend mFrontend>;

        return $r1;
    }

    static int access$100(android.media.tv.tuner.Tuner)
    {
        android.media.tv.tuner.Tuner r0;
        int $i0;

        r0 := @parameter0: android.media.tv.tuner.Tuner;

        $i0 = r0.<android.media.tv.tuner.Tuner: int mUserId>;

        return $i0;
    }

    static android.media.tv.tuner.Tuner$EventHandler access$200(android.media.tv.tuner.Tuner)
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.Tuner$EventHandler $r1;

        r0 := @parameter0: android.media.tv.tuner.Tuner;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$EventHandler mHandler>;

        return $r1;
    }

    static android.media.tv.tuner.Tuner$OnResourceLostListener access$400(android.media.tv.tuner.Tuner)
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.Tuner$OnResourceLostListener $r1;

        r0 := @parameter0: android.media.tv.tuner.Tuner;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$OnResourceLostListener mOnResourceLostListener>;

        return $r1;
    }

    static java.util.concurrent.Executor access$500(android.media.tv.tuner.Tuner)
    {
        android.media.tv.tuner.Tuner r0;
        java.util.concurrent.Executor $r1;

        r0 := @parameter0: android.media.tv.tuner.Tuner;

        $r1 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mOnResourceLostListenerExecutor>;

        return $r1;
    }

    private boolean checkResource(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        java.lang.Integer $r1, $r2;
        boolean $z0, $z1, $z2;
        android.media.tv.tuner.Lnb $r3;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        if i0 == 0 goto label3;

        if i0 == 1 goto label2;

        if i0 == 3 goto label1;

        return 0;

     label1:
        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb>;

        if $r3 != null goto label4;

        $z2 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean requestLnb()>();

        if $z2 != 0 goto label4;

        return 0;

     label2:
        $r2 = r0.<android.media.tv.tuner.Tuner: java.lang.Integer mDemuxHandle>;

        if $r2 != null goto label4;

        $z1 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean requestDemux()>();

        if $z1 != 0 goto label4;

        return 0;

     label3:
        $r1 = r0.<android.media.tv.tuner.Tuner: java.lang.Integer mFrontendHandle>;

        if $r1 != null goto label4;

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean requestFrontend()>();

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    private android.media.tv.tuner.Tuner$EventHandler createEventHandler()
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.Tuner$EventHandler $r1, $r2;
        android.os.Looper r3, r4;

        r0 := @this: android.media.tv.tuner.Tuner;

        r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r3 == null goto label1;

        $r2 = new android.media.tv.tuner.Tuner$EventHandler;

        specialinvoke $r2.<android.media.tv.tuner.Tuner$EventHandler: void <init>(android.media.tv.tuner.Tuner,android.os.Looper,android.media.tv.tuner.Tuner$1)>(r0, r3, null);

        return $r2;

     label1:
        r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if r4 == null goto label2;

        $r1 = new android.media.tv.tuner.Tuner$EventHandler;

        specialinvoke $r1.<android.media.tv.tuner.Tuner$EventHandler: void <init>(android.media.tv.tuner.Tuner,android.os.Looper,android.media.tv.tuner.Tuner$1)>(r0, r4, null);

        return $r1;

     label2:
        return null;
    }

    private native int nativeClose();

    private native int nativeCloseDemux(int);

    private native int nativeCloseFrontend(int);

    private native int nativeCloseFrontendByHandle(int);

    private native int nativeConnectCiCam(int);

    private native int nativeDisconnectCiCam();

    private native java.lang.Integer nativeGetAvSyncHwId(android.media.tv.tuner.filter.Filter);

    private native java.lang.Long nativeGetAvSyncTime(int);

    private native android.media.tv.tuner.DemuxCapabilities nativeGetDemuxCapabilities();

    private native java.util.List nativeGetFrontendIds();

    private native android.media.tv.tuner.frontend.FrontendInfo nativeGetFrontendInfo(int);

    private native android.media.tv.tuner.frontend.FrontendStatus nativeGetFrontendStatus(int[]);

    private native int[] nativeGetLnbIds();

    private static native void nativeInit();

    private native int nativeOpenDemuxByhandle(int);

    private native android.media.tv.tuner.Descrambler nativeOpenDescramblerByHandle(int);

    private native android.media.tv.tuner.dvr.DvrPlayback nativeOpenDvrPlayback(long);

    private native android.media.tv.tuner.dvr.DvrRecorder nativeOpenDvrRecorder(long);

    private native android.media.tv.tuner.filter.Filter nativeOpenFilter(int, int, long);

    private native android.media.tv.tuner.Tuner$Frontend nativeOpenFrontendByHandle(int);

    private native android.media.tv.tuner.Lnb nativeOpenLnbByHandle(int);

    private native android.media.tv.tuner.Lnb nativeOpenLnbByName(java.lang.String);

    private native android.media.tv.tuner.filter.TimeFilter nativeOpenTimeFilter();

    private native int nativeScan(int, android.media.tv.tuner.frontend.FrontendSettings, int);

    private native int nativeSetLna(boolean);

    private native int nativeSetLnb(int);

    private native void nativeSetup();

    private native int nativeStopScan();

    private native int nativeStopTune();

    private native int nativeTune(int, android.media.tv.tuner.frontend.FrontendSettings);

    private void onAnalogSifStandard(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;
        android.media.tv.tuner._$$Lambda$Tuner$H2MeyMgstu2_FkYFyyhEuqcpaOM $r3;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        r1 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r1 == null goto label1;

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r2 == null goto label1;

        $r3 = new android.media.tv.tuner._$$Lambda$Tuner$H2MeyMgstu2_FkYFyyhEuqcpaOM;

        specialinvoke $r3.<android.media.tv.tuner._$$Lambda$Tuner$H2MeyMgstu2_FkYFyyhEuqcpaOM: void <init>(android.media.tv.tuner.Tuner,int)>(r0, i0);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void onAtsc3PlpInfos(android.media.tv.tuner.frontend.Atsc3PlpInfo[])
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.frontend.Atsc3PlpInfo[] r1;
        java.util.concurrent.Executor r2;
        android.media.tv.tuner.frontend.ScanCallback $r3;
        android.media.tv.tuner._$$Lambda$Tuner$vA8r09mS8B2Xp9N33dOsBZ4Y_0g $r4;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: android.media.tv.tuner.frontend.Atsc3PlpInfo[];

        r2 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r2 == null goto label1;

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r3 == null goto label1;

        $r4 = new android.media.tv.tuner._$$Lambda$Tuner$vA8r09mS8B2Xp9N33dOsBZ4Y_0g;

        specialinvoke $r4.<android.media.tv.tuner._$$Lambda$Tuner$vA8r09mS8B2Xp9N33dOsBZ4Y_0g: void <init>(android.media.tv.tuner.Tuner,android.media.tv.tuner.frontend.Atsc3PlpInfo[])>(r0, r1);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    private void onDvbsStandard(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;
        android.media.tv.tuner._$$Lambda$Tuner$6JzdHyaum_wXts_YXYS69zQbClY $r3;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        r1 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r1 == null goto label1;

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r2 == null goto label1;

        $r3 = new android.media.tv.tuner._$$Lambda$Tuner$6JzdHyaum_wXts_YXYS69zQbClY;

        specialinvoke $r3.<android.media.tv.tuner._$$Lambda$Tuner$6JzdHyaum_wXts_YXYS69zQbClY: void <init>(android.media.tv.tuner.Tuner,int)>(r0, i0);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void onDvbtStandard(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;
        android.media.tv.tuner._$$Lambda$Tuner$0UUd7kSDwJbNOtYJHcznNHjL2vI $r3;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        r1 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r1 == null goto label1;

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r2 == null goto label1;

        $r3 = new android.media.tv.tuner._$$Lambda$Tuner$0UUd7kSDwJbNOtYJHcznNHjL2vI;

        specialinvoke $r3.<android.media.tv.tuner._$$Lambda$Tuner$0UUd7kSDwJbNOtYJHcznNHjL2vI: void <init>(android.media.tv.tuner.Tuner,int)>(r0, i0);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void onFrequenciesReport(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        java.util.concurrent.Executor r2;
        android.media.tv.tuner.frontend.ScanCallback $r3;
        android.media.tv.tuner._$$Lambda$Tuner$cO3VZA6A_FG0wouIFcyFrkppVKQ $r4;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        r2 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r2 == null goto label1;

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r3 == null goto label1;

        $r4 = new android.media.tv.tuner._$$Lambda$Tuner$cO3VZA6A_FG0wouIFcyFrkppVKQ;

        specialinvoke $r4.<android.media.tv.tuner._$$Lambda$Tuner$cO3VZA6A_FG0wouIFcyFrkppVKQ: void <init>(android.media.tv.tuner.Tuner,int[])>(r0, r1);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    private void onFrontendEvent(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0, $i3, $i4, $i5;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        android.media.tv.tuner.frontend.OnTuneEventListener $r5;
        android.media.tv.tuner._$$Lambda$Tuner$W0RSFCXzyS_Nm5JhUoyHO4_gtHc $r6;
        java.util.concurrent.Executor r8;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got event from tuning. Event type: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaTvTuner", $r4);

        r8 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mOnTunerEventExecutor>;

        if r8 == null goto label1;

        $r5 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.OnTuneEventListener mOnTuneEventListener>;

        if $r5 == null goto label1;

        $r6 = new android.media.tv.tuner._$$Lambda$Tuner$W0RSFCXzyS_Nm5JhUoyHO4_gtHc;

        specialinvoke $r6.<android.media.tv.tuner._$$Lambda$Tuner$W0RSFCXzyS_Nm5JhUoyHO4_gtHc: void <init>(android.media.tv.tuner.Tuner,int)>(r0, i0);

        interfaceinvoke r8.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaTvTuner", "Wrote Stats Log for the events from tuning.");

        if i0 != 0 goto label2;

        $i5 = r0.<android.media.tv.tuner.Tuner: int mUserId>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(276, $i5, 2);

        goto label4;

     label2:
        if i0 != 1 goto label3;

        $i4 = r0.<android.media.tv.tuner.Tuner: int mUserId>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(276, $i4, 3);

        goto label4;

     label3:
        if i0 != 2 goto label4;

        $i3 = r0.<android.media.tv.tuner.Tuner: int mUserId>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(276, $i3, 4);

     label4:
        return;
    }

    private void onGroupIds(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        java.util.concurrent.Executor r2;
        android.media.tv.tuner.frontend.ScanCallback $r3;
        android.media.tv.tuner._$$Lambda$Tuner$Br0QGgsEJkvWiWGajrBIp9UhcI4 $r4;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        r2 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r2 == null goto label1;

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r3 == null goto label1;

        $r4 = new android.media.tv.tuner._$$Lambda$Tuner$Br0QGgsEJkvWiWGajrBIp9UhcI4;

        specialinvoke $r4.<android.media.tv.tuner._$$Lambda$Tuner$Br0QGgsEJkvWiWGajrBIp9UhcI4: void <init>(android.media.tv.tuner.Tuner,int[])>(r0, r1);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    private void onHierarchy(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;
        android.media.tv.tuner._$$Lambda$Tuner$kZB5DmQFvVQLdFFRG1ICjIXzxIg $r3;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        r1 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r1 == null goto label1;

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r2 == null goto label1;

        $r3 = new android.media.tv.tuner._$$Lambda$Tuner$kZB5DmQFvVQLdFFRG1ICjIXzxIg;

        specialinvoke $r3.<android.media.tv.tuner._$$Lambda$Tuner$kZB5DmQFvVQLdFFRG1ICjIXzxIg: void <init>(android.media.tv.tuner.Tuner,int)>(r0, i0);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void onInputStreamIds(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        java.util.concurrent.Executor r2;
        android.media.tv.tuner.frontend.ScanCallback $r3;
        android.media.tv.tuner._$$Lambda$Tuner$97hY_kdBewG88N1_oDJVJ_0tzGU $r4;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        r2 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r2 == null goto label1;

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r3 == null goto label1;

        $r4 = new android.media.tv.tuner._$$Lambda$Tuner$97hY_kdBewG88N1_oDJVJ_0tzGU;

        specialinvoke $r4.<android.media.tv.tuner._$$Lambda$Tuner$97hY_kdBewG88N1_oDJVJ_0tzGU: void <init>(android.media.tv.tuner.Tuner,int[])>(r0, r1);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    private void onLocked()
    {
        android.media.tv.tuner.Tuner r0;
        java.util.concurrent.Executor r1;
        int $i1;
        android.media.tv.tuner.frontend.ScanCallback $r2;
        android.media.tv.tuner._$$Lambda$Tuner$7LyXqscGIcs4FBunPKfBAgBWBPc $r3;

        r0 := @this: android.media.tv.tuner.Tuner;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaTvTuner", "Wrote Stats Log for locked event from scanning.");

        $i1 = r0.<android.media.tv.tuner.Tuner: int mUserId>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(276, $i1, 2);

        r1 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r1 == null goto label1;

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r2 == null goto label1;

        $r3 = new android.media.tv.tuner._$$Lambda$Tuner$7LyXqscGIcs4FBunPKfBAgBWBPc;

        specialinvoke $r3.<android.media.tv.tuner._$$Lambda$Tuner$7LyXqscGIcs4FBunPKfBAgBWBPc: void <init>(android.media.tv.tuner.Tuner)>(r0);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void onPlpIds(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        java.util.concurrent.Executor r2;
        android.media.tv.tuner.frontend.ScanCallback $r3;
        android.media.tv.tuner._$$Lambda$Tuner$NJZQL7FtM6GTMGzFfc6hPmY8a_A $r4;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        r2 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r2 == null goto label1;

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r3 == null goto label1;

        $r4 = new android.media.tv.tuner._$$Lambda$Tuner$NJZQL7FtM6GTMGzFfc6hPmY8a_A;

        specialinvoke $r4.<android.media.tv.tuner._$$Lambda$Tuner$NJZQL7FtM6GTMGzFfc6hPmY8a_A: void <init>(android.media.tv.tuner.Tuner,int[])>(r0, r1);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    private void onProgress(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;
        android.media.tv.tuner._$$Lambda$Tuner$EpB_abkPzm4k9y4f_ckGHE7hk_Y $r3;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        r1 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r1 == null goto label1;

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r2 == null goto label1;

        $r3 = new android.media.tv.tuner._$$Lambda$Tuner$EpB_abkPzm4k9y4f_ckGHE7hk_Y;

        specialinvoke $r3.<android.media.tv.tuner._$$Lambda$Tuner$EpB_abkPzm4k9y4f_ckGHE7hk_Y: void <init>(android.media.tv.tuner.Tuner,int)>(r0, i0);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void onScanStopped()
    {
        android.media.tv.tuner.Tuner r0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;
        android.media.tv.tuner._$$Lambda$Tuner$iNLvb_AT8Ni5vDrCZXOvhTYUE1U $r3;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r1 == null goto label1;

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r2 == null goto label1;

        $r3 = new android.media.tv.tuner._$$Lambda$Tuner$iNLvb_AT8Ni5vDrCZXOvhTYUE1U;

        specialinvoke $r3.<android.media.tv.tuner._$$Lambda$Tuner$iNLvb_AT8Ni5vDrCZXOvhTYUE1U: void <init>(android.media.tv.tuner.Tuner)>(r0);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void onSignalType(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;
        android.media.tv.tuner._$$Lambda$Tuner$bvxMLDowJ_umoo__NEeXgXWz0Gw $r3;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        r1 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r1 == null goto label1;

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r2 == null goto label1;

        $r3 = new android.media.tv.tuner._$$Lambda$Tuner$bvxMLDowJ_umoo__NEeXgXWz0Gw;

        specialinvoke $r3.<android.media.tv.tuner._$$Lambda$Tuner$bvxMLDowJ_umoo__NEeXgXWz0Gw: void <init>(android.media.tv.tuner.Tuner,int)>(r0, i0);

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private void onSymbolRates(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        java.util.concurrent.Executor r2;
        android.media.tv.tuner.frontend.ScanCallback $r3;
        android.media.tv.tuner._$$Lambda$Tuner$qLBwtqwgHR4JTsJuxl0FSPNFPuA $r4;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        r2 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if r2 == null goto label1;

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r3 == null goto label1;

        $r4 = new android.media.tv.tuner._$$Lambda$Tuner$qLBwtqwgHR4JTsJuxl0FSPNFPuA;

        specialinvoke $r4.<android.media.tv.tuner._$$Lambda$Tuner$qLBwtqwgHR4JTsJuxl0FSPNFPuA: void <init>(android.media.tv.tuner.Tuner,int[])>(r0, r1);

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    private boolean requestDemux()
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        boolean z0;
        android.media.tv.tunerresourcemanager.TunerDemuxRequest $r2;
        int $i0, $i1, $i2;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r3;
        java.lang.Integer r5;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 = newarray (int)[1];

        $r2 = new android.media.tv.tunerresourcemanager.TunerDemuxRequest;

        $i0 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        specialinvoke $r2.<android.media.tv.tunerresourcemanager.TunerDemuxRequest: void <init>(int)>($i0);

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        z0 = virtualinvoke $r3.<android.media.tv.tunerresourcemanager.TunerResourceManager: boolean requestDemux(android.media.tv.tunerresourcemanager.TunerDemuxRequest,int[])>($r2, r1);

        if z0 == 0 goto label1;

        $i1 = r1[0];

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r0.<android.media.tv.tuner.Tuner: java.lang.Integer mDemuxHandle> = r5;

        $i2 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeOpenDemuxByhandle(int)>($i2);

     label1:
        return z0;
    }

    private android.media.tv.tuner.Descrambler requestDescrambler()
    {
        android.media.tv.tuner.Tuner r0;
        int i0, $i1, $i2;
        android.media.tv.tunerresourcemanager.TunerDescramblerRequest $r2;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r3, $r4;
        boolean $z0;
        java.util.Map $r5;
        java.lang.Integer $r6;
        int[] r8;
        android.media.tv.tuner.Descrambler r9;

        r0 := @this: android.media.tv.tuner.Tuner;

        r8 = newarray (int)[1];

        $r2 = new android.media.tv.tunerresourcemanager.TunerDescramblerRequest;

        $i1 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        specialinvoke $r2.<android.media.tv.tunerresourcemanager.TunerDescramblerRequest: void <init>(int)>($i1);

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        $z0 = virtualinvoke $r3.<android.media.tv.tunerresourcemanager.TunerResourceManager: boolean requestDescrambler(android.media.tv.tunerresourcemanager.TunerDescramblerRequest,int[])>($r2, r8);

        if $z0 != 0 goto label1;

        return null;

     label1:
        i0 = r8[0];

        r9 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Descrambler nativeOpenDescramblerByHandle(int)>(i0);

        if r9 == null goto label2;

        $r5 = r0.<android.media.tv.tuner.Tuner: java.util.Map mDescramblers>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r9);

        goto label3;

     label2:
        $r4 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        $i2 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        virtualinvoke $r4.<android.media.tv.tunerresourcemanager.TunerResourceManager: void releaseDescrambler(int,int)>(i0, $i2);

     label3:
        return r9;
    }

    private boolean requestFrontend()
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        boolean z0;
        android.media.tv.tunerresourcemanager.TunerFrontendRequest $r2;
        int $i0, $i1, $i2, $i3;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r3;
        android.media.tv.tuner.Tuner$Frontend $r4;
        java.lang.Integer r6;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 = newarray (int)[1];

        $r2 = new android.media.tv.tunerresourcemanager.TunerFrontendRequest;

        $i1 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        $i0 = r0.<android.media.tv.tuner.Tuner: int mFrontendType>;

        specialinvoke $r2.<android.media.tv.tunerresourcemanager.TunerFrontendRequest: void <init>(int,int)>($i1, $i0);

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        z0 = virtualinvoke $r3.<android.media.tv.tunerresourcemanager.TunerResourceManager: boolean requestFrontend(android.media.tv.tunerresourcemanager.TunerFrontendRequest,int[])>($r2, r1);

        if z0 == 0 goto label1;

        $i2 = r1[0];

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r0.<android.media.tv.tuner.Tuner: java.lang.Integer mFrontendHandle> = r6;

        $i3 = virtualinvoke r6.<java.lang.Integer: int intValue()>();

        $r4 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$Frontend nativeOpenFrontendByHandle(int)>($i3);

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$Frontend mFrontend> = $r4;

     label1:
        return z0;
    }

    private boolean requestLnb()
    {
        android.media.tv.tuner.Tuner r0;
        boolean z0;
        android.media.tv.tunerresourcemanager.TunerLnbRequest $r2;
        int $i0, $i1, $i2;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r3;
        android.media.tv.tuner.Lnb $r4;
        int[] r5;
        java.lang.Integer r6;

        r0 := @this: android.media.tv.tuner.Tuner;

        r5 = newarray (int)[1];

        $r2 = new android.media.tv.tunerresourcemanager.TunerLnbRequest;

        $i0 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        specialinvoke $r2.<android.media.tv.tunerresourcemanager.TunerLnbRequest: void <init>(int)>($i0);

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        z0 = virtualinvoke $r3.<android.media.tv.tunerresourcemanager.TunerResourceManager: boolean requestLnb(android.media.tv.tunerresourcemanager.TunerLnbRequest,int[])>($r2, r5);

        if z0 == 0 goto label1;

        $i1 = r5[0];

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r0.<android.media.tv.tuner.Tuner: java.lang.Integer mLnbHandle> = r6;

        $i2 = virtualinvoke r6.<java.lang.Integer: int intValue()>();

        $r4 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb nativeOpenLnbByHandle(int)>($i2);

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb> = $r4;

     label1:
        return z0;
    }

    private void setFrontendInfoList()
    {
        android.media.tv.tuner.Tuner r0;
        java.util.List r1;
        android.media.tv.tunerresourcemanager.TunerFrontendInfo[] r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        android.media.tv.tuner.frontend.FrontendInfo r3;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        android.media.tv.tunerresourcemanager.TunerFrontendInfo $r7;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 = virtualinvoke r0.<android.media.tv.tuner.Tuner: java.util.List getFrontendIds()>();

        if r1 != null goto label1;

        return;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        r2 = newarray (android.media.tv.tunerresourcemanager.TunerFrontendInfo)[$i1];

        i5 = 0;

     label2:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i5 >= $i2 goto label5;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        $r6 = (java.lang.Integer) $r5;

        i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        r3 = virtualinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.FrontendInfo getFrontendInfoById(int)>(i0);

        if r3 != null goto label3;

        goto label4;

     label3:
        $r7 = new android.media.tv.tunerresourcemanager.TunerFrontendInfo;

        $i3 = virtualinvoke r3.<android.media.tv.tuner.frontend.FrontendInfo: int getType()>();

        $i4 = virtualinvoke r3.<android.media.tv.tuner.frontend.FrontendInfo: int getExclusiveGroupId()>();

        specialinvoke $r7.<android.media.tv.tunerresourcemanager.TunerFrontendInfo: void <init>(int,int,int)>(i0, $i3, $i4);

        r2[i5] = $r7;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        $r4 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        virtualinvoke $r4.<android.media.tv.tunerresourcemanager.TunerResourceManager: void setFrontendInfoList(android.media.tv.tunerresourcemanager.TunerFrontendInfo[])>(r2);

        return;
    }

    private int setLnb(android.media.tv.tuner.Lnb)
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.Lnb r1;
        int $i0, $i1;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: android.media.tv.tuner.Lnb;

        $i0 = r1.<android.media.tv.tuner.Lnb: int mId>;

        $i1 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeSetLnb(int)>($i0);

        return $i1;
    }

    private void setLnbIds()
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r2;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 = specialinvoke r0.<android.media.tv.tuner.Tuner: int[] nativeGetLnbIds()>();

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        virtualinvoke $r2.<android.media.tv.tunerresourcemanager.TunerResourceManager: void setLnbInfoList(int[])>(r1);

        return;
    }

    public int cancelScanning()
    {
        android.media.tv.tuner.Tuner r0;
        int i0, $i1;

        r0 := @this: android.media.tv.tuner.Tuner;

        $i1 = r0.<android.media.tv.tuner.Tuner: int mUserId>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(276, $i1, 6);

        i0 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeStopScan()>();

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback> = null;

        r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor> = null;

        return i0;
    }

    public int cancelTuning()
    {
        android.media.tv.tuner.Tuner r0;
        int $i0;

        r0 := @this: android.media.tv.tuner.Tuner;

        $i0 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeStopTune()>();

        return $i0;
    }

    public void clearOnTuneEventListener()
    {
        android.media.tv.tuner.Tuner r0;

        r0 := @this: android.media.tv.tuner.Tuner;

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.OnTuneEventListener mOnTuneEventListener> = null;

        r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mOnTunerEventExecutor> = null;

        return;
    }

    public void clearResourceLostListener()
    {
        android.media.tv.tuner.Tuner r0;

        r0 := @this: android.media.tv.tuner.Tuner;

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$OnResourceLostListener mOnResourceLostListener> = null;

        r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mOnResourceLostListenerExecutor> = null;

        return;
    }

    public void close()
    {
        android.media.tv.tuner.Tuner r0;
        java.util.Iterator r1, r24;
        java.util.Map $r2, $r10, $r12;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r3, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11;
        java.lang.Integer $r4, $r18, $r19, r21, r25;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r5, $r16, $r20;
        java.lang.Object $r8, $r13, $r14, $r17;
        android.media.tv.tuner.filter.Filter $r9;
        java.util.Set $r11;
        android.media.tv.tuner.Descrambler $r15;
        android.media.tv.tuner.Lnb r22;
        java.util.Map$Entry r23;

        r0 := @this: android.media.tv.tuner.Tuner;

        r21 = r0.<android.media.tv.tuner.Tuner: java.lang.Integer mFrontendHandle>;

        if r21 == null goto label02;

        $i5 = virtualinvoke r21.<java.lang.Integer: int intValue()>();

        i9 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeCloseFrontend(int)>($i5);

        if i9 == 0 goto label01;

        staticinvoke <android.media.tv.tuner.TunerUtils: void throwExceptionForResult(int,java.lang.String)>(i9, "failed to close frontend");

     label01:
        $r20 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        $r19 = r0.<android.media.tv.tuner.Tuner: java.lang.Integer mFrontendHandle>;

        $i6 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        $i7 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        virtualinvoke $r20.<android.media.tv.tunerresourcemanager.TunerResourceManager: void releaseFrontend(int,int)>($i6, $i7);

        $i8 = r0.<android.media.tv.tuner.Tuner: int mUserId>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(276, $i8, 0);

        r0.<android.media.tv.tuner.Tuner: java.lang.Integer mFrontendHandle> = null;

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$Frontend mFrontend> = null;

     label02:
        r22 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb>;

        if r22 == null goto label03;

        virtualinvoke r22.<android.media.tv.tuner.Lnb: void close()>();

     label03:
        $r2 = r0.<android.media.tv.tuner.Tuner: java.util.Map mDescramblers>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $r10 = r0.<android.media.tv.tuner.Tuner: java.util.Map mDescramblers>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r13 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.Map$Entry) $r13;

        $r14 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (android.media.tv.tuner.Descrambler) $r14;

        virtualinvoke $r15.<android.media.tv.tuner.Descrambler: void close()>();

        $r16 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        $r17 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.Integer) $r17;

        $i3 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $i4 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        virtualinvoke $r16.<android.media.tv.tunerresourcemanager.TunerResourceManager: void releaseDescrambler(int,int)>($i3, $i4);

        goto label04;

     label05:
        $r12 = r0.<android.media.tv.tuner.Tuner: java.util.Map mDescramblers>;

        interfaceinvoke $r12.<java.util.Map: void clear()>();

     label06:
        $r3 = r0.<android.media.tv.tuner.Tuner: java.util.List mFilters>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label09;

        $r6 = r0.<android.media.tv.tuner.Tuner: java.util.List mFilters>;

        r24 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r8 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.media.tv.tuner.filter.Filter) $r8;

        virtualinvoke $r9.<android.media.tv.tuner.filter.Filter: void close()>();

        goto label07;

     label08:
        $r7 = r0.<android.media.tv.tuner.Tuner: java.util.List mFilters>;

        interfaceinvoke $r7.<java.util.List: void clear()>();

     label09:
        r25 = r0.<android.media.tv.tuner.Tuner: java.lang.Integer mDemuxHandle>;

        if r25 == null goto label11;

        $i0 = virtualinvoke r25.<java.lang.Integer: int intValue()>();

        i10 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeCloseDemux(int)>($i0);

        if i10 == 0 goto label10;

        staticinvoke <android.media.tv.tuner.TunerUtils: void throwExceptionForResult(int,java.lang.String)>(i10, "failed to close demux");

     label10:
        $r5 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        $r4 = r0.<android.media.tv.tuner.Tuner: java.lang.Integer mDemuxHandle>;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i2 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        virtualinvoke $r5.<android.media.tv.tunerresourcemanager.TunerResourceManager: void releaseDemux(int,int)>($i1, $i2);

        r0.<android.media.tv.tuner.Tuner: java.lang.Integer mFrontendHandle> = null;

     label11:
        $i11 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeClose()>();

        staticinvoke <android.media.tv.tuner.TunerUtils: void throwExceptionForResult(int,java.lang.String)>($i11, "failed to close tuner");

        return;
    }

    public int connectCiCam(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(1);

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeConnectCiCam(int)>(i0);

        return $i1;

     label1:
        return 1;
    }

    public int disconnectCiCam()
    {
        android.media.tv.tuner.Tuner r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.media.tv.tuner.Tuner;

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(1);

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeDisconnectCiCam()>();

        return $i0;

     label1:
        return 1;
    }

    public int getAvSyncHwId(android.media.tv.tuner.filter.Filter)
    {
        android.media.tv.tuner.Tuner r0;
        boolean z0;
        android.media.tv.tuner.filter.Filter r1;
        int i0;
        java.lang.Integer r2;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: android.media.tv.tuner.filter.Filter;

        z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(1);

        i0 = -1;

        if z0 != 0 goto label1;

        return -1;

     label1:
        r2 = specialinvoke r0.<android.media.tv.tuner.Tuner: java.lang.Integer nativeGetAvSyncHwId(android.media.tv.tuner.filter.Filter)>(r1);

        if r2 != null goto label2;

        goto label3;

     label2:
        i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

     label3:
        return i0;
    }

    public long getAvSyncTime(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        boolean z0;
        java.lang.Long r1;
        long l1;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(1);

        l1 = -1L;

        if z0 != 0 goto label1;

        return -1L;

     label1:
        r1 = specialinvoke r0.<android.media.tv.tuner.Tuner: java.lang.Long nativeGetAvSyncTime(int)>(i0);

        if r1 != null goto label2;

        goto label3;

     label2:
        l1 = virtualinvoke r1.<java.lang.Long: long longValue()>();

     label3:
        return l1;
    }

    public android.media.tv.tuner.DemuxCapabilities getDemuxCapabilities()
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.DemuxCapabilities $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        $r1 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.DemuxCapabilities nativeGetDemuxCapabilities()>();

        return $r1;
    }

    public java.util.List getFrontendIds()
    {
        android.media.tv.tuner.Tuner r0;
        java.util.List $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        $r1 = specialinvoke r0.<android.media.tv.tuner.Tuner: java.util.List nativeGetFrontendIds()>();

        return $r1;
    }

    public android.media.tv.tuner.frontend.FrontendInfo getFrontendInfo()
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.Tuner$Frontend r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        android.media.tv.tuner.frontend.FrontendInfo $r3, $r4, $r5;
        int $i0;

        r0 := @this: android.media.tv.tuner.Tuner;

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$Frontend mFrontend>;

        if r1 == null goto label3;

        $r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.FrontendInfo mFrontendInfo>;

        if $r3 != null goto label2;

        $i0 = staticinvoke <android.media.tv.tuner.Tuner$Frontend: int access$600(android.media.tv.tuner.Tuner$Frontend)>(r1);

        $r5 = virtualinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.FrontendInfo getFrontendInfoById(int)>($i0);

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.FrontendInfo mFrontendInfo> = $r5;

     label2:
        $r4 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.FrontendInfo mFrontendInfo>;

        return $r4;

     label3:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("frontend is not initialized");

        throw $r2;
    }

    public android.media.tv.tuner.frontend.FrontendInfo getFrontendInfoById(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        android.media.tv.tuner.frontend.FrontendInfo $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.FrontendInfo nativeGetFrontendInfo(int)>(i0);

        return $r1;
    }

    public android.media.tv.tuner.frontend.FrontendStatus getFrontendStatus(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        android.media.tv.tuner.Tuner$Frontend $r2;
        java.lang.IllegalStateException $r3;
        android.media.tv.tuner.frontend.FrontendStatus $r4;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$Frontend mFrontend>;

        if $r2 == null goto label1;

        $r4 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.FrontendStatus nativeGetFrontendStatus(int[])>(r1);

        return $r4;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("frontend is not initialized");

        throw $r3;
    }

    public void lambda$onAnalogSifStandard$13$Tuner(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        android.media.tv.tuner.frontend.ScanCallback $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r1.<android.media.tv.tuner.frontend.ScanCallback: void onAnalogSifStandardReported(int)>(i0);

        return;
    }

    public void lambda$onAtsc3PlpInfos$14$Tuner(android.media.tv.tuner.frontend.Atsc3PlpInfo[])
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.frontend.Atsc3PlpInfo[] r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: android.media.tv.tuner.frontend.Atsc3PlpInfo[];

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r2.<android.media.tv.tuner.frontend.ScanCallback: void onAtsc3PlpInfosReported(android.media.tv.tuner.frontend.Atsc3PlpInfo[])>(r1);

        return;
    }

    public void lambda$onDvbsStandard$11$Tuner(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        android.media.tv.tuner.frontend.ScanCallback $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r1.<android.media.tv.tuner.frontend.ScanCallback: void onDvbsStandardReported(int)>(i0);

        return;
    }

    public void lambda$onDvbtStandard$12$Tuner(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        android.media.tv.tuner.frontend.ScanCallback $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r1.<android.media.tv.tuner.frontend.ScanCallback: void onDvbtStandardReported(int)>(i0);

        return;
    }

    public void lambda$onFrequenciesReport$4$Tuner(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r2.<android.media.tv.tuner.frontend.ScanCallback: void onFrequenciesReported(int[])>(r1);

        return;
    }

    public void lambda$onFrontendEvent$0$Tuner(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        android.media.tv.tuner.frontend.OnTuneEventListener $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.OnTuneEventListener mOnTuneEventListener>;

        interfaceinvoke $r1.<android.media.tv.tuner.frontend.OnTuneEventListener: void onTuneEvent(int)>(i0);

        return;
    }

    public void lambda$onGroupIds$9$Tuner(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r2.<android.media.tv.tuner.frontend.ScanCallback: void onGroupIdsReported(int[])>(r1);

        return;
    }

    public void lambda$onHierarchy$6$Tuner(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        android.media.tv.tuner.frontend.ScanCallback $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r1.<android.media.tv.tuner.frontend.ScanCallback: void onHierarchyReported(int)>(i0);

        return;
    }

    public void lambda$onInputStreamIds$10$Tuner(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r2.<android.media.tv.tuner.frontend.ScanCallback: void onInputStreamIdsReported(int[])>(r1);

        return;
    }

    public void lambda$onLocked$1$Tuner()
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.frontend.ScanCallback $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r1.<android.media.tv.tuner.frontend.ScanCallback: void onLocked()>();

        return;
    }

    public void lambda$onPlpIds$8$Tuner(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r2.<android.media.tv.tuner.frontend.ScanCallback: void onPlpIdsReported(int[])>(r1);

        return;
    }

    public void lambda$onProgress$3$Tuner(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        android.media.tv.tuner.frontend.ScanCallback $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r1.<android.media.tv.tuner.frontend.ScanCallback: void onProgress(int)>(i0);

        return;
    }

    public void lambda$onScanStopped$2$Tuner()
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.frontend.ScanCallback $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r1.<android.media.tv.tuner.frontend.ScanCallback: void onScanStopped()>();

        return;
    }

    public void lambda$onSignalType$7$Tuner(int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0;
        android.media.tv.tuner.frontend.ScanCallback $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r1.<android.media.tv.tuner.frontend.ScanCallback: void onSignalTypeReported(int)>(i0);

        return;
    }

    public void lambda$onSymbolRates$5$Tuner(int[])
    {
        android.media.tv.tuner.Tuner r0;
        int[] r1;
        android.media.tv.tuner.frontend.ScanCallback $r2;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: int[];

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        interfaceinvoke $r2.<android.media.tv.tuner.frontend.ScanCallback: void onSymbolRatesReported(int[])>(r1);

        return;
    }

    public android.media.tv.tuner.Descrambler openDescrambler()
    {
        android.media.tv.tuner.Tuner r0;
        boolean $z0;
        android.media.tv.tuner.Descrambler $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Descrambler requestDescrambler()>();

        return $r1;
    }

    public android.media.tv.tuner.dvr.DvrPlayback openDvrPlayback(long, java.util.concurrent.Executor, android.media.tv.tuner.dvr.OnPlaybackStatusChangedListener)
    {
        android.media.tv.tuner.Tuner r0;
        long l0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.dvr.OnPlaybackStatusChangedListener r2;
        android.media.tv.tuner.dvr.DvrPlayback r3;
        boolean $z0;

        r0 := @this: android.media.tv.tuner.Tuner;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: android.media.tv.tuner.dvr.OnPlaybackStatusChangedListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "executor must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "OnPlaybackStatusChangedListener must not be null");

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.dvr.DvrPlayback nativeOpenDvrPlayback(long)>(l0);

        virtualinvoke r3.<android.media.tv.tuner.dvr.DvrPlayback: void setListener(java.util.concurrent.Executor,android.media.tv.tuner.dvr.OnPlaybackStatusChangedListener)>(r1, r2);

        return r3;
    }

    public android.media.tv.tuner.dvr.DvrRecorder openDvrRecorder(long, java.util.concurrent.Executor, android.media.tv.tuner.dvr.OnRecordStatusChangedListener)
    {
        android.media.tv.tuner.Tuner r0;
        long l0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.dvr.OnRecordStatusChangedListener r2;
        android.media.tv.tuner.dvr.DvrRecorder r3;
        boolean $z0;

        r0 := @this: android.media.tv.tuner.Tuner;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: android.media.tv.tuner.dvr.OnRecordStatusChangedListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "executor must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "OnRecordStatusChangedListener must not be null");

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.dvr.DvrRecorder nativeOpenDvrRecorder(long)>(l0);

        virtualinvoke r3.<android.media.tv.tuner.dvr.DvrRecorder: void setListener(java.util.concurrent.Executor,android.media.tv.tuner.dvr.OnRecordStatusChangedListener)>(r1, r2);

        return r3;
    }

    public android.media.tv.tuner.filter.Filter openFilter(int, int, long, java.util.concurrent.Executor, android.media.tv.tuner.filter.FilterCallback)
    {
        android.media.tv.tuner.Tuner r0;
        int i0, i1, $i3;
        long l2;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.filter.FilterCallback r2;
        android.media.tv.tuner.filter.Filter r3;
        boolean $z0;
        android.media.tv.tuner.Tuner$EventHandler $r4, $r6;
        java.util.List $r5;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r1 := @parameter3: java.util.concurrent.Executor;

        r2 := @parameter4: android.media.tv.tuner.filter.FilterCallback;

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i3 = staticinvoke <android.media.tv.tuner.TunerUtils: int getFilterSubtype(int,int)>(i0, i1);

        r3 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.filter.Filter nativeOpenFilter(int,int,long)>(i0, $i3, l2);

        if r3 == null goto label3;

        virtualinvoke r3.<android.media.tv.tuner.filter.Filter: void setType(int,int)>(i0, i1);

        virtualinvoke r3.<android.media.tv.tuner.filter.Filter: void setCallback(android.media.tv.tuner.filter.FilterCallback,java.util.concurrent.Executor)>(r2, r1);

        $r4 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$EventHandler mHandler>;

        if $r4 != null goto label2;

        $r6 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$EventHandler createEventHandler()>();

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$EventHandler mHandler> = $r6;

     label2:
        $r5 = r0.<android.media.tv.tuner.Tuner: java.util.List mFilters>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

     label3:
        return r3;
    }

    public android.media.tv.tuner.Lnb openLnb(java.util.concurrent.Executor, android.media.tv.tuner.LnbCallback)
    {
        android.media.tv.tuner.Tuner r0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.LnbCallback r2;
        boolean $z0;
        android.media.tv.tuner.Lnb $r5, $r6, $r7, r8, r9;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.media.tv.tuner.LnbCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "executor must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "LnbCallback must not be null");

        r8 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb>;

        if r8 == null goto label1;

        virtualinvoke r8.<android.media.tv.tuner.Lnb: void setCallback(java.util.concurrent.Executor,android.media.tv.tuner.LnbCallback,android.media.tv.tuner.Tuner)>(r1, r2, r0);

        $r7 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb>;

        return $r7;

     label1:
        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(3);

        if $z0 == 0 goto label2;

        r9 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb>;

        if r9 == null goto label2;

        virtualinvoke r9.<android.media.tv.tuner.Lnb: void setCallback(java.util.concurrent.Executor,android.media.tv.tuner.LnbCallback,android.media.tv.tuner.Tuner)>(r1, r2, r0);

        $r5 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb>;

        specialinvoke r0.<android.media.tv.tuner.Tuner: int setLnb(android.media.tv.tuner.Lnb)>($r5);

        $r6 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb>;

        return $r6;

     label2:
        return null;
    }

    public android.media.tv.tuner.Lnb openLnbByName(java.lang.String, java.util.concurrent.Executor, android.media.tv.tuner.LnbCallback)
    {
        android.media.tv.tuner.Tuner r0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.LnbCallback r2;
        android.media.tv.tuner.Lnb r3, $r7, r9, $r10;
        java.lang.String r8;

        r0 := @this: android.media.tv.tuner.Tuner;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: android.media.tv.tuner.LnbCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r8, "LNB name must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "executor must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "LnbCallback must not be null");

        r9 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb nativeOpenLnbByName(java.lang.String)>(r8);

        if r9 == null goto label2;

        r3 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.media.tv.tuner.Lnb: void close()>();

        r0.<android.media.tv.tuner.Tuner: java.lang.Integer mLnbHandle> = null;

     label1:
        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb> = r9;

        virtualinvoke r9.<android.media.tv.tuner.Lnb: void setCallback(java.util.concurrent.Executor,android.media.tv.tuner.LnbCallback,android.media.tv.tuner.Tuner)>(r1, r2, r0);

        $r7 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb>;

        specialinvoke r0.<android.media.tv.tuner.Tuner: int setLnb(android.media.tv.tuner.Lnb)>($r7);

     label2:
        $r10 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb>;

        return $r10;
    }

    public android.media.tv.tuner.filter.TimeFilter openTimeFilter()
    {
        android.media.tv.tuner.Tuner r0;
        boolean $z0;
        android.media.tv.tuner.filter.TimeFilter $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.filter.TimeFilter nativeOpenTimeFilter()>();

        return $r1;
    }

    void releaseLnb()
    {
        android.media.tv.tuner.Tuner r0;
        java.lang.Integer r1;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r2;
        int $i0, $i1;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 = r0.<android.media.tv.tuner.Tuner: java.lang.Integer mLnbHandle>;

        if r1 == null goto label1;

        $r2 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        virtualinvoke $r2.<android.media.tv.tunerresourcemanager.TunerResourceManager: void releaseLnb(int,int)>($i0, $i1);

        r0.<android.media.tv.tuner.Tuner: java.lang.Integer mLnbHandle> = null;

     label1:
        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Lnb mLnb> = null;

        return;
    }

    public int scan(android.media.tv.tuner.frontend.FrontendSettings, int, java.util.concurrent.Executor, android.media.tv.tuner.frontend.ScanCallback)
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.frontend.FrontendSettings r1;
        int i0, $i1, $i2, $i3, $i4;
        java.util.concurrent.Executor r2, $r6;
        android.media.tv.tuner.frontend.ScanCallback r3, $r4;
        java.lang.IllegalStateException $r5;
        boolean $z0;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: android.media.tv.tuner.frontend.FrontendSettings;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: android.media.tv.tuner.frontend.ScanCallback;

        $r4 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback>;

        if $r4 != null goto label2;

        $r6 = r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor>;

        if $r6 != null goto label2;

        $i1 = virtualinvoke r1.<android.media.tv.tuner.frontend.FrontendSettings: int getType()>();

        r0.<android.media.tv.tuner.Tuner: int mFrontendType> = $i1;

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(0);

        if $z0 == 0 goto label1;

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.ScanCallback mScanCallback> = r3;

        r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mScanCallbackExecutor> = r2;

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.FrontendInfo mFrontendInfo> = null;

        $i2 = r0.<android.media.tv.tuner.Tuner: int mUserId>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(276, $i2, 5);

        $i3 = virtualinvoke r1.<android.media.tv.tuner.frontend.FrontendSettings: int getType()>();

        $i4 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeScan(int,android.media.tv.tuner.frontend.FrontendSettings,int)>($i3, r1, i0);

        return $i4;

     label1:
        return 1;

     label2:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Scan already in progress.  stopScan must be called before a new scan can be started.");

        throw $r5;
    }

    public int setLnaEnabled(boolean)
    {
        android.media.tv.tuner.Tuner r0;
        boolean z0;
        int $i0;

        r0 := @this: android.media.tv.tuner.Tuner;

        z0 := @parameter0: boolean;

        $i0 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeSetLna(boolean)>(z0);

        return $i0;
    }

    public void setOnTuneEventListener(java.util.concurrent.Executor, android.media.tv.tuner.frontend.OnTuneEventListener)
    {
        android.media.tv.tuner.Tuner r0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.frontend.OnTuneEventListener r2;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.media.tv.tuner.frontend.OnTuneEventListener;

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.OnTuneEventListener mOnTuneEventListener> = r2;

        r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mOnTunerEventExecutor> = r1;

        return;
    }

    public void setResourceLostListener(java.util.concurrent.Executor, android.media.tv.tuner.Tuner$OnResourceLostListener)
    {
        android.media.tv.tuner.Tuner r0;
        java.util.concurrent.Executor r1;
        android.media.tv.tuner.Tuner$OnResourceLostListener r2;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: android.media.tv.tuner.Tuner$OnResourceLostListener;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "OnResourceLostListener must not be null");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "executor must not be null");

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$OnResourceLostListener mOnResourceLostListener> = r2;

        r0.<android.media.tv.tuner.Tuner: java.util.concurrent.Executor mOnResourceLostListenerExecutor> = r1;

        return;
    }

    public void shareFrontendFromTuner(android.media.tv.tuner.Tuner)
    {
        android.media.tv.tuner.Tuner r0, r3;
        int $i0, $i1, $i2;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r1;
        android.media.tv.tuner.Tuner$Frontend $r2;
        java.lang.Integer r4;

        r0 := @this: android.media.tv.tuner.Tuner;

        r3 := @parameter0: android.media.tv.tuner.Tuner;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        $i1 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        $i0 = r3.<android.media.tv.tuner.Tuner: int mClientId>;

        virtualinvoke $r1.<android.media.tv.tunerresourcemanager.TunerResourceManager: void shareFrontend(int,int)>($i1, $i0);

        r4 = r3.<android.media.tv.tuner.Tuner: java.lang.Integer mFrontendHandle>;

        r0.<android.media.tv.tuner.Tuner: java.lang.Integer mFrontendHandle> = r4;

        $i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $r2 = specialinvoke r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$Frontend nativeOpenFrontendByHandle(int)>($i2);

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.Tuner$Frontend mFrontend> = $r2;

        return;
    }

    public int tune(android.media.tv.tuner.frontend.FrontendSettings)
    {
        android.media.tv.tuner.Tuner r0;
        android.media.tv.tuner.frontend.FrontendSettings r1;
        java.lang.StringBuilder $r3;
        int $i0, $i2, $i4, $i5, $i6;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: android.media.tv.tuner.Tuner;

        r1 := @parameter0: android.media.tv.tuner.frontend.FrontendSettings;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tune to ");

        $i0 = virtualinvoke r1.<android.media.tv.tuner.frontend.FrontendSettings: int getFrequency()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaTvTuner", $r6);

        $i2 = virtualinvoke r1.<android.media.tv.tuner.frontend.FrontendSettings: int getType()>();

        r0.<android.media.tv.tuner.Tuner: int mFrontendType> = $i2;

        $z0 = specialinvoke r0.<android.media.tv.tuner.Tuner: boolean checkResource(int)>(0);

        if $z0 == 0 goto label1;

        r0.<android.media.tv.tuner.Tuner: android.media.tv.tuner.frontend.FrontendInfo mFrontendInfo> = null;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaTvTuner", "Write Stats Log for tuning.");

        $i4 = r0.<android.media.tv.tuner.Tuner: int mUserId>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(276, $i4, 1);

        $i5 = virtualinvoke r1.<android.media.tv.tuner.frontend.FrontendSettings: int getType()>();

        $i6 = specialinvoke r0.<android.media.tv.tuner.Tuner: int nativeTune(int,android.media.tv.tuner.frontend.FrontendSettings)>($i5, r1);

        return $i6;

     label1:
        return 1;
    }

    public void updateResourcePriority(int, int)
    {
        android.media.tv.tuner.Tuner r0;
        int i0, i1, $i2;
        android.media.tv.tunerresourcemanager.TunerResourceManager $r1;

        r0 := @this: android.media.tv.tuner.Tuner;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.media.tv.tuner.Tuner: android.media.tv.tunerresourcemanager.TunerResourceManager mTunerResourceManager>;

        $i2 = r0.<android.media.tv.tuner.Tuner: int mClientId>;

        virtualinvoke $r1.<android.media.tv.tunerresourcemanager.TunerResourceManager: boolean updateClientPriority(int,int,int)>($i2, i0, i1);

        return;
    }
}
