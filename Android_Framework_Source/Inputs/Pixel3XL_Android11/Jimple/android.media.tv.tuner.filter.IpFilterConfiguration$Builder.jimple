public final class android.media.tv.tuner.filter.IpFilterConfiguration$Builder extends java.lang.Object
{
    private byte[] mDstIpAddress;
    private int mDstPort;
    private boolean mPassthrough;
    private android.media.tv.tuner.filter.Settings mSettings;
    private byte[] mSrcIpAddress;
    private int mSrcPort;

    private void <init>()
    {
        android.media.tv.tuner.filter.IpFilterConfiguration$Builder r0;
        byte[] $r1, $r2;

        r0 := @this: android.media.tv.tuner.filter.IpFilterConfiguration$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[4];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: byte[] mSrcIpAddress> = $r1;

        $r2 = newarray (byte)[4];

        $r2[0] = 0;

        $r2[1] = 0;

        $r2[2] = 0;

        $r2[3] = 0;

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: byte[] mDstIpAddress> = $r2;

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: int mSrcPort> = 0;

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: int mDstPort> = 0;

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: boolean mPassthrough> = 0;

        return;
    }

    void <init>(android.media.tv.tuner.filter.IpFilterConfiguration$1)
    {
        android.media.tv.tuner.filter.IpFilterConfiguration$Builder r0;
        android.media.tv.tuner.filter.IpFilterConfiguration$1 r1;

        r0 := @this: android.media.tv.tuner.filter.IpFilterConfiguration$Builder;

        r1 := @parameter0: android.media.tv.tuner.filter.IpFilterConfiguration$1;

        specialinvoke r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: void <init>()>();

        return;
    }

    public android.media.tv.tuner.filter.IpFilterConfiguration build()
    {
        android.media.tv.tuner.filter.IpFilterConfiguration$Builder r0;
        int i0, $i1, $i2, $i3, $i4;
        byte[] $r2, $r3, $r8, $r13, $r14;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r10;
        java.lang.String $r11;
        android.media.tv.tuner.filter.IpFilterConfiguration $r12;
        boolean $z0;
        android.media.tv.tuner.filter.Settings $r15;

        r0 := @this: android.media.tv.tuner.filter.IpFilterConfiguration$Builder;

        $r2 = r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: byte[] mSrcIpAddress>;

        i0 = lengthof $r2;

        $r3 = r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: byte[] mDstIpAddress>;

        $i1 = lengthof $r3;

        if i0 != $i1 goto label2;

        if i0 == 4 goto label1;

        if i0 != 16 goto label2;

     label1:
        $r12 = new android.media.tv.tuner.filter.IpFilterConfiguration;

        $r15 = r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: android.media.tv.tuner.filter.Settings mSettings>;

        $r14 = r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: byte[] mSrcIpAddress>;

        $r13 = r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: byte[] mDstIpAddress>;

        $i4 = r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: int mSrcPort>;

        $i3 = r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: int mDstPort>;

        $z0 = r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: boolean mPassthrough>;

        specialinvoke $r12.<android.media.tv.tuner.filter.IpFilterConfiguration: void <init>(android.media.tv.tuner.filter.Settings,byte[],byte[],int,int,boolean,android.media.tv.tuner.filter.IpFilterConfiguration$1)>($r15, $r14, $r13, $i4, $i3, $z0, null);

        return $r12;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The lengths of src and dst IP address must be 4 or 16 and must be the same.srcLength=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dstLength=");

        $r8 = r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: byte[] mDstIpAddress>;

        $i2 = lengthof $r8;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    public android.media.tv.tuner.filter.IpFilterConfiguration$Builder setDstIpAddress(byte[])
    {
        android.media.tv.tuner.filter.IpFilterConfiguration$Builder r0;
        byte[] r1;

        r0 := @this: android.media.tv.tuner.filter.IpFilterConfiguration$Builder;

        r1 := @parameter0: byte[];

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: byte[] mDstIpAddress> = r1;

        return r0;
    }

    public android.media.tv.tuner.filter.IpFilterConfiguration$Builder setDstPort(int)
    {
        android.media.tv.tuner.filter.IpFilterConfiguration$Builder r0;
        int i0;

        r0 := @this: android.media.tv.tuner.filter.IpFilterConfiguration$Builder;

        i0 := @parameter0: int;

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: int mDstPort> = i0;

        return r0;
    }

    public android.media.tv.tuner.filter.IpFilterConfiguration$Builder setPassthrough(boolean)
    {
        android.media.tv.tuner.filter.IpFilterConfiguration$Builder r0;
        boolean z0;

        r0 := @this: android.media.tv.tuner.filter.IpFilterConfiguration$Builder;

        z0 := @parameter0: boolean;

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: boolean mPassthrough> = z0;

        return r0;
    }

    public android.media.tv.tuner.filter.IpFilterConfiguration$Builder setSettings(android.media.tv.tuner.filter.Settings)
    {
        android.media.tv.tuner.filter.IpFilterConfiguration$Builder r0;
        android.media.tv.tuner.filter.Settings r1;

        r0 := @this: android.media.tv.tuner.filter.IpFilterConfiguration$Builder;

        r1 := @parameter0: android.media.tv.tuner.filter.Settings;

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: android.media.tv.tuner.filter.Settings mSettings> = r1;

        return r0;
    }

    public android.media.tv.tuner.filter.IpFilterConfiguration$Builder setSrcIpAddress(byte[])
    {
        android.media.tv.tuner.filter.IpFilterConfiguration$Builder r0;
        byte[] r1;

        r0 := @this: android.media.tv.tuner.filter.IpFilterConfiguration$Builder;

        r1 := @parameter0: byte[];

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: byte[] mSrcIpAddress> = r1;

        return r0;
    }

    public android.media.tv.tuner.filter.IpFilterConfiguration$Builder setSrcPort(int)
    {
        android.media.tv.tuner.filter.IpFilterConfiguration$Builder r0;
        int i0;

        r0 := @this: android.media.tv.tuner.filter.IpFilterConfiguration$Builder;

        i0 := @parameter0: int;

        r0.<android.media.tv.tuner.filter.IpFilterConfiguration$Builder: int mSrcPort> = i0;

        return r0;
    }
}
