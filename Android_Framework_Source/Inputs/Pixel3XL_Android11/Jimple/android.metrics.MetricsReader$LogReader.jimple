public class android.metrics.MetricsReader$LogReader extends java.lang.Object
{

    public void <init>()
    {
        android.metrics.MetricsReader$LogReader r0;

        r0 := @this: android.metrics.MetricsReader$LogReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void readEvents(int[], long, java.util.Collection) throws java.io.IOException
    {
        android.metrics.MetricsReader$LogReader r0;
        long l0, $l1;
        java.util.Collection r1;
        java.util.ArrayList $r3;
        java.util.concurrent.TimeUnit $r4, $r5;
        boolean $z0;
        android.metrics.MetricsReader$Event $r6;
        java.lang.Object $r7;
        android.util.EventLog$Event $r8;
        int[] r9;
        java.util.Iterator r10;

        r0 := @this: android.metrics.MetricsReader$LogReader;

        r9 := @parameter0: int[];

        l0 := @parameter1: long;

        r1 := @parameter2: java.util.Collection;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l1 = virtualinvoke $r5.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(l0, $r4);

        staticinvoke <android.util.EventLog: void readEventsOnWrapping(int[],long,java.util.Collection)>(r9, $l1, $r3);

        r10 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = new android.metrics.MetricsReader$Event;

        $r7 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.util.EventLog$Event) $r7;

        specialinvoke $r6.<android.metrics.MetricsReader$Event: void <init>(android.util.EventLog$Event)>($r8);

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return;
    }

    public void writeCheckpoint(int)
    {
        android.metrics.MetricsReader$LogReader r0;
        int i0;
        com.android.internal.logging.MetricsLogger $r1;

        r0 := @this: android.metrics.MetricsReader$LogReader;

        i0 := @parameter0: int;

        $r1 = new com.android.internal.logging.MetricsLogger;

        specialinvoke $r1.<com.android.internal.logging.MetricsLogger: void <init>()>();

        virtualinvoke $r1.<com.android.internal.logging.MetricsLogger: void action(int,int)>(920, i0);

        return;
    }
}
