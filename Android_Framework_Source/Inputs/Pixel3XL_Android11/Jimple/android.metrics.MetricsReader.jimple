public class android.metrics.MetricsReader extends java.lang.Object
{
    private int[] LOGTAGS;
    private int mCheckpointTag;
    private java.util.Queue mPendingQueue;
    private android.metrics.MetricsReader$LogReader mReader;
    private java.util.Queue mSeenQueue;

    public void <init>()
    {
        android.metrics.MetricsReader r0;
        java.util.LinkedList $r1, $r2;
        int[] $r3;
        android.metrics.MetricsReader$LogReader $r4;

        r0 := @this: android.metrics.MetricsReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue> = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<android.metrics.MetricsReader: java.util.Queue mSeenQueue> = $r2;

        $r3 = newarray (int)[1];

        $r3[0] = 524292;

        r0.<android.metrics.MetricsReader: int[] LOGTAGS> = $r3;

        $r4 = new android.metrics.MetricsReader$LogReader;

        specialinvoke $r4.<android.metrics.MetricsReader$LogReader: void <init>()>();

        r0.<android.metrics.MetricsReader: android.metrics.MetricsReader$LogReader mReader> = $r4;

        r0.<android.metrics.MetricsReader: int mCheckpointTag> = -1;

        return;
    }

    public void checkpoint()
    {
        android.metrics.MetricsReader r0;
        int i0;
        long $l1, $l2;
        android.metrics.MetricsReader$LogReader $r1;
        java.util.Queue $r2, $r3;

        r0 := @this: android.metrics.MetricsReader;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 % 2147483647L;

        i0 = (int) $l2;

        r0.<android.metrics.MetricsReader: int mCheckpointTag> = i0;

        $r1 = r0.<android.metrics.MetricsReader: android.metrics.MetricsReader$LogReader mReader>;

        virtualinvoke $r1.<android.metrics.MetricsReader$LogReader: void writeCheckpoint(int)>(i0);

        $r2 = r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue>;

        interfaceinvoke $r2.<java.util.Queue: void clear()>();

        $r3 = r0.<android.metrics.MetricsReader: java.util.Queue mSeenQueue>;

        interfaceinvoke $r3.<java.util.Queue: void clear()>();

        return;
    }

    public boolean hasNext()
    {
        android.metrics.MetricsReader r0;
        java.util.Queue $r1;
        boolean $z0, $z1;

        r0 := @this: android.metrics.MetricsReader;

        $r1 = r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue>;

        $z0 = interfaceinvoke $r1.<java.util.Queue: boolean isEmpty()>();

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public android.metrics.LogMaker next()
    {
        android.metrics.MetricsReader r0;
        android.metrics.LogMaker r1;
        java.util.Queue $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.metrics.MetricsReader;

        $r2 = r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

        r1 = (android.metrics.LogMaker) $r3;

        if r1 == null goto label1;

        $r4 = r0.<android.metrics.MetricsReader: java.util.Queue mSeenQueue>;

        interfaceinvoke $r4.<java.util.Queue: boolean offer(java.lang.Object)>(r1);

     label1:
        return r1;
    }

    public void read(long)
    {
        android.metrics.MetricsReader r0;
        android.metrics.MetricsReader$Event r1;
        java.lang.Object r2, $r8;
        int[] $r4;
        android.metrics.MetricsReader$LogReader $r5;
        java.util.Queue $r6, $r7, $r12, $r13;
        boolean $z0, $z2;
        android.metrics.LogMaker $r10, $r11, r19, r21;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable $r14;
        long l5, l6;
        java.util.Iterator r17;
        java.lang.Object[] r18;
        java.util.ArrayList r20;
        java.io.IOException r22;

        r0 := @this: android.metrics.MetricsReader;

        l5 := @parameter0: long;

        r20 = new java.util.ArrayList;

        specialinvoke r20.<java.util.ArrayList: void <init>()>();

     label01:
        $r5 = r0.<android.metrics.MetricsReader: android.metrics.MetricsReader$LogReader mReader>;

        $r4 = r0.<android.metrics.MetricsReader: int[] LOGTAGS>;

        virtualinvoke $r5.<android.metrics.MetricsReader$LogReader: void readEvents(int[],long,java.util.Collection)>($r4, l5, r20);

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

        r22 = (java.io.IOException) $r14;

        virtualinvoke r22.<java.io.IOException: void printStackTrace()>();

     label04:
        $r6 = r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue>;

        interfaceinvoke $r6.<java.util.Queue: void clear()>();

        $r7 = r0.<android.metrics.MetricsReader: java.util.Queue mSeenQueue>;

        interfaceinvoke $r7.<java.util.Queue: void clear()>();

        r17 = virtualinvoke r20.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r8 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.metrics.MetricsReader$Event) $r8;

        l6 = virtualinvoke r1.<android.metrics.MetricsReader$Event: long getTimeMillis()>();

        r2 = virtualinvoke r1.<android.metrics.MetricsReader$Event: java.lang.Object getData()>();

        $z0 = r2 instanceof java.lang.Object[];

        if $z0 == 0 goto label06;

        r18 = (java.lang.Object[]) r2;

        goto label07;

     label06:
        r18 = newarray (java.lang.Object)[1];

        r18[0] = r2;

     label07:
        r21 = new android.metrics.LogMaker;

        specialinvoke r21.<android.metrics.LogMaker: void <init>(java.lang.Object[])>(r18);

        $r10 = virtualinvoke r21.<android.metrics.LogMaker: android.metrics.LogMaker setTimestamp(long)>(l6);

        $i0 = virtualinvoke r1.<android.metrics.MetricsReader$Event: int getUid()>();

        $r11 = virtualinvoke $r10.<android.metrics.LogMaker: android.metrics.LogMaker setUid(int)>($i0);

        $i1 = virtualinvoke r1.<android.metrics.MetricsReader$Event: int getProcessId()>();

        r19 = virtualinvoke $r11.<android.metrics.LogMaker: android.metrics.LogMaker setProcessId(int)>($i1);

        $i2 = virtualinvoke r19.<android.metrics.LogMaker: int getCategory()>();

        if $i2 != 920 goto label08;

        $i3 = virtualinvoke r19.<android.metrics.LogMaker: int getSubtype()>();

        $i4 = r0.<android.metrics.MetricsReader: int mCheckpointTag>;

        if $i3 != $i4 goto label09;

        $r13 = r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue>;

        interfaceinvoke $r13.<java.util.Queue: void clear()>();

        goto label09;

     label08:
        $r12 = r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue>;

        interfaceinvoke $r12.<java.util.Queue: boolean offer(java.lang.Object)>(r19);

     label09:
        goto label05;

     label10:
        return;

        catch java.io.IOException from label01 to label02 with label03;
    }

    public void reset()
    {
        android.metrics.MetricsReader r0;
        java.util.Queue r1, $r2, $r3, $r4, $r5;

        r0 := @this: android.metrics.MetricsReader;

        $r3 = r0.<android.metrics.MetricsReader: java.util.Queue mSeenQueue>;

        $r2 = r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue>;

        interfaceinvoke $r3.<java.util.Queue: boolean addAll(java.util.Collection)>($r2);

        $r4 = r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue>;

        interfaceinvoke $r4.<java.util.Queue: void clear()>();

        r0.<android.metrics.MetricsReader: int mCheckpointTag> = -1;

        r1 = r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue>;

        $r5 = r0.<android.metrics.MetricsReader: java.util.Queue mSeenQueue>;

        r0.<android.metrics.MetricsReader: java.util.Queue mPendingQueue> = $r5;

        r0.<android.metrics.MetricsReader: java.util.Queue mSeenQueue> = r1;

        return;
    }

    public void setLogReader(android.metrics.MetricsReader$LogReader)
    {
        android.metrics.MetricsReader r0;
        android.metrics.MetricsReader$LogReader r1;

        r0 := @this: android.metrics.MetricsReader;

        r1 := @parameter0: android.metrics.MetricsReader$LogReader;

        r0.<android.metrics.MetricsReader: android.metrics.MetricsReader$LogReader mReader> = r1;

        return;
    }
}
