public class android.mtp.MtpStorage extends java.lang.Object
{
    private final java.lang.String mDescription;
    private final long mMaxFileSize;
    private final java.lang.String mPath;
    private final boolean mRemovable;
    private final int mStorageId;
    private final java.lang.String mVolumeName;

    public void <init>(android.os.storage.StorageVolume, int)
    {
        android.mtp.MtpStorage r0;
        android.os.storage.StorageVolume r1;
        int i0;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;
        long $l1;

        r0 := @this: android.mtp.MtpStorage;

        r1 := @parameter0: android.os.storage.StorageVolume;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.mtp.MtpStorage: int mStorageId> = i0;

        $r2 = virtualinvoke r1.<android.os.storage.StorageVolume: java.lang.String getPath()>();

        r0.<android.mtp.MtpStorage: java.lang.String mPath> = $r2;

        $r3 = virtualinvoke r1.<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)>(null);

        r0.<android.mtp.MtpStorage: java.lang.String mDescription> = $r3;

        $z0 = virtualinvoke r1.<android.os.storage.StorageVolume: boolean isRemovable()>();

        r0.<android.mtp.MtpStorage: boolean mRemovable> = $z0;

        $l1 = virtualinvoke r1.<android.os.storage.StorageVolume: long getMaxFileSize()>();

        r0.<android.mtp.MtpStorage: long mMaxFileSize> = $l1;

        $r4 = virtualinvoke r1.<android.os.storage.StorageVolume: java.lang.String getMediaStoreVolumeName()>();

        r0.<android.mtp.MtpStorage: java.lang.String mVolumeName> = $r4;

        return;
    }

    public final java.lang.String getDescription()
    {
        android.mtp.MtpStorage r0;
        java.lang.String $r1;

        r0 := @this: android.mtp.MtpStorage;

        $r1 = r0.<android.mtp.MtpStorage: java.lang.String mDescription>;

        return $r1;
    }

    public long getMaxFileSize()
    {
        android.mtp.MtpStorage r0;
        long $l0;

        r0 := @this: android.mtp.MtpStorage;

        $l0 = r0.<android.mtp.MtpStorage: long mMaxFileSize>;

        return $l0;
    }

    public final java.lang.String getPath()
    {
        android.mtp.MtpStorage r0;
        java.lang.String $r1;

        r0 := @this: android.mtp.MtpStorage;

        $r1 = r0.<android.mtp.MtpStorage: java.lang.String mPath>;

        return $r1;
    }

    public final int getStorageId()
    {
        android.mtp.MtpStorage r0;
        int $i0;

        r0 := @this: android.mtp.MtpStorage;

        $i0 = r0.<android.mtp.MtpStorage: int mStorageId>;

        return $i0;
    }

    public java.lang.String getVolumeName()
    {
        android.mtp.MtpStorage r0;
        java.lang.String $r1;

        r0 := @this: android.mtp.MtpStorage;

        $r1 = r0.<android.mtp.MtpStorage: java.lang.String mVolumeName>;

        return $r1;
    }

    public final boolean isRemovable()
    {
        android.mtp.MtpStorage r0;
        boolean $z0;

        r0 := @this: android.mtp.MtpStorage;

        $z0 = r0.<android.mtp.MtpStorage: boolean mRemovable>;

        return $z0;
    }
}
