public final class android.net.ConnectivityDiagnosticsManager$ConnectivityReport extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final java.lang.String KEY_NETWORK_PROBES_ATTEMPTED_BITMASK;
    public static final java.lang.String KEY_NETWORK_PROBES_SUCCEEDED_BITMASK;
    public static final java.lang.String KEY_NETWORK_VALIDATION_RESULT;
    public static final int NETWORK_PROBE_DNS;
    public static final int NETWORK_PROBE_FALLBACK;
    public static final int NETWORK_PROBE_HTTP;
    public static final int NETWORK_PROBE_HTTPS;
    public static final int NETWORK_PROBE_PRIVATE_DNS;
    public static final int NETWORK_VALIDATION_RESULT_INVALID;
    public static final int NETWORK_VALIDATION_RESULT_PARTIALLY_VALID;
    public static final int NETWORK_VALIDATION_RESULT_SKIPPED;
    public static final int NETWORK_VALIDATION_RESULT_VALID;
    private final android.os.PersistableBundle mAdditionalInfo;
    private final android.net.LinkProperties mLinkProperties;
    private final android.net.Network mNetwork;
    private final android.net.NetworkCapabilities mNetworkCapabilities;
    private final long mReportTimestamp;

    static void <clinit>()
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport$1 $r0;

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int NETWORK_VALIDATION_RESULT_VALID> = 1;

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int NETWORK_VALIDATION_RESULT_SKIPPED> = 3;

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int NETWORK_VALIDATION_RESULT_PARTIALLY_VALID> = 2;

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int NETWORK_VALIDATION_RESULT_INVALID> = 0;

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int NETWORK_PROBE_PRIVATE_DNS> = 64;

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int NETWORK_PROBE_HTTPS> = 16;

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int NETWORK_PROBE_HTTP> = 8;

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int NETWORK_PROBE_FALLBACK> = 32;

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: int NETWORK_PROBE_DNS> = 4;

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: java.lang.String KEY_NETWORK_VALIDATION_RESULT> = "networkValidationResult";

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: java.lang.String KEY_NETWORK_PROBES_SUCCEEDED_BITMASK> = "networkProbesSucceeded";

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: java.lang.String KEY_NETWORK_PROBES_ATTEMPTED_BITMASK> = "networkProbesAttempted";

        $r0 = new android.net.ConnectivityDiagnosticsManager$ConnectivityReport$1;

        specialinvoke $r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport$1: void <init>()>();

        <android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.net.Network, long, android.net.LinkProperties, android.net.NetworkCapabilities, android.os.PersistableBundle)
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport r0;
        android.net.Network r1;
        long l0;
        android.net.LinkProperties r2, $r5;
        android.net.NetworkCapabilities r3, $r6;
        android.os.PersistableBundle r4;

        r0 := @this: android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        r1 := @parameter0: android.net.Network;

        l0 := @parameter1: long;

        r2 := @parameter2: android.net.LinkProperties;

        r3 := @parameter3: android.net.NetworkCapabilities;

        r4 := @parameter4: android.os.PersistableBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.Network mNetwork> = r1;

        r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: long mReportTimestamp> = l0;

        $r5 = new android.net.LinkProperties;

        specialinvoke $r5.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>(r2);

        r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.LinkProperties mLinkProperties> = $r5;

        $r6 = new android.net.NetworkCapabilities;

        specialinvoke $r6.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>(r3);

        r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.NetworkCapabilities mNetworkCapabilities> = $r6;

        r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.os.PersistableBundle mAdditionalInfo> = r4;

        return;
    }

    public int describeContents()
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport r0;

        r0 := @this: android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport r0, r10;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        long $l0, $l1;
        byte $b2;
        android.net.Network $r1, $r2;
        android.net.LinkProperties $r3, $r4;
        android.net.NetworkCapabilities $r5, $r6;
        android.os.PersistableBundle $r7, $r8;
        java.lang.Object r9;

        r0 := @this: android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        r9 := @parameter0: java.lang.Object;

        z5 = 1;

        if r0 != r9 goto label1;

        return 1;

     label1:
        $z0 = r9 instanceof android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r10 = (android.net.ConnectivityDiagnosticsManager$ConnectivityReport) r9;

        $l1 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: long mReportTimestamp>;

        $l0 = r10.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: long mReportTimestamp>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        $r2 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.Network mNetwork>;

        $r1 = r10.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.Network mNetwork>;

        $z1 = virtualinvoke $r2.<android.net.Network: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        $r4 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.LinkProperties mLinkProperties>;

        $r3 = r10.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.LinkProperties mLinkProperties>;

        $z2 = virtualinvoke $r4.<android.net.LinkProperties: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        $r6 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.NetworkCapabilities mNetworkCapabilities>;

        $r5 = r10.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.NetworkCapabilities mNetworkCapabilities>;

        $z3 = virtualinvoke $r6.<android.net.NetworkCapabilities: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label3;

        $r8 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.os.PersistableBundle mAdditionalInfo>;

        $r7 = r10.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.os.PersistableBundle mAdditionalInfo>;

        $z4 = staticinvoke <android.net.ConnectivityDiagnosticsManager: boolean persistableBundleEquals(android.os.PersistableBundle,android.os.PersistableBundle)>($r8, $r7);

        if $z4 == 0 goto label3;

        goto label4;

     label3:
        z5 = 0;

     label4:
        return z5;
    }

    public android.os.PersistableBundle getAdditionalInfo()
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport r0;
        android.os.PersistableBundle $r1, $r2;

        r0 := @this: android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        $r1 = new android.os.PersistableBundle;

        $r2 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.os.PersistableBundle mAdditionalInfo>;

        specialinvoke $r1.<android.os.PersistableBundle: void <init>(android.os.PersistableBundle)>($r2);

        return $r1;
    }

    public android.net.LinkProperties getLinkProperties()
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport r0;
        android.net.LinkProperties $r1, $r2;

        r0 := @this: android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        $r1 = new android.net.LinkProperties;

        $r2 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.LinkProperties mLinkProperties>;

        specialinvoke $r1.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r2);

        return $r1;
    }

    public android.net.Network getNetwork()
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport r0;
        android.net.Network $r1;

        r0 := @this: android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        $r1 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.Network mNetwork>;

        return $r1;
    }

    public android.net.NetworkCapabilities getNetworkCapabilities()
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport r0;
        android.net.NetworkCapabilities $r1, $r2;

        r0 := @this: android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        $r1 = new android.net.NetworkCapabilities;

        $r2 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.NetworkCapabilities mNetworkCapabilities>;

        specialinvoke $r1.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>($r2);

        return $r1;
    }

    public long getReportTimestamp()
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport r0;
        long $l0;

        r0 := @this: android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        $l0 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: long mReportTimestamp>;

        return $l0;
    }

    public int hashCode()
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport r0;
        java.lang.Object[] $r1;
        android.net.Network $r2;
        long $l0;
        java.lang.Long $r3;
        android.net.LinkProperties $r4;
        android.net.NetworkCapabilities $r5;
        android.os.PersistableBundle $r6;
        int $i1;

        r0 := @this: android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        $r1 = newarray (java.lang.Object)[5];

        $r2 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.Network mNetwork>;

        $r1[0] = $r2;

        $l0 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: long mReportTimestamp>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[1] = $r3;

        $r4 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.LinkProperties mLinkProperties>;

        $r1[2] = $r4;

        $r5 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.NetworkCapabilities mNetworkCapabilities>;

        $r1[3] = $r5;

        $r6 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.os.PersistableBundle mAdditionalInfo>;

        $r1[4] = $r6;

        $i1 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.ConnectivityDiagnosticsManager$ConnectivityReport r0;
        android.os.Parcel r1;
        int i0;
        android.net.Network $r2;
        long $l1;
        android.net.LinkProperties $r3;
        android.net.NetworkCapabilities $r4;
        android.os.PersistableBundle $r5;

        r0 := @this: android.net.ConnectivityDiagnosticsManager$ConnectivityReport;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.Network mNetwork>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, i0);

        $l1 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: long mReportTimestamp>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $r3 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.LinkProperties mLinkProperties>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r3, i0);

        $r4 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r4, i0);

        $r5 = r0.<android.net.ConnectivityDiagnosticsManager$ConnectivityReport: android.os.PersistableBundle mAdditionalInfo>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r5, i0);

        return;
    }
}
