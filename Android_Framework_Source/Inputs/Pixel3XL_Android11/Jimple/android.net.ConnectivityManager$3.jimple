class android.net.ConnectivityManager$3 extends java.lang.Object implements android.net.TetheringManager$StartTetheringCallback
{
    final android.net.ConnectivityManager this$0;
    final android.net.ConnectivityManager$OnStartTetheringCallback val$callback;

    void <init>(android.net.ConnectivityManager, android.net.ConnectivityManager$OnStartTetheringCallback)
    {
        android.net.ConnectivityManager$3 r0;
        android.net.ConnectivityManager r1;
        android.net.ConnectivityManager$OnStartTetheringCallback r2;

        r0 := @this: android.net.ConnectivityManager$3;

        r1 := @parameter0: android.net.ConnectivityManager;

        r2 := @parameter1: android.net.ConnectivityManager$OnStartTetheringCallback;

        r0.<android.net.ConnectivityManager$3: android.net.ConnectivityManager this$0> = r1;

        r0.<android.net.ConnectivityManager$3: android.net.ConnectivityManager$OnStartTetheringCallback val$callback> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onTetheringFailed(int)
    {
        android.net.ConnectivityManager$3 r0;
        int i0;
        android.net.ConnectivityManager$OnStartTetheringCallback $r1;

        r0 := @this: android.net.ConnectivityManager$3;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.ConnectivityManager$3: android.net.ConnectivityManager$OnStartTetheringCallback val$callback>;

        virtualinvoke $r1.<android.net.ConnectivityManager$OnStartTetheringCallback: void onTetheringFailed()>();

        return;
    }

    public void onTetheringStarted()
    {
        android.net.ConnectivityManager$3 r0;
        android.net.ConnectivityManager$OnStartTetheringCallback $r1;

        r0 := @this: android.net.ConnectivityManager$3;

        $r1 = r0.<android.net.ConnectivityManager$3: android.net.ConnectivityManager$OnStartTetheringCallback val$callback>;

        virtualinvoke $r1.<android.net.ConnectivityManager$OnStartTetheringCallback: void onTetheringStarted()>();

        return;
    }
}
