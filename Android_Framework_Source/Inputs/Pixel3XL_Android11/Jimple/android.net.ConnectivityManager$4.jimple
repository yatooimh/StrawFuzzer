class android.net.ConnectivityManager$4 extends java.lang.Object implements android.net.TetheringManager$TetheringEventCallback
{
    final android.net.ConnectivityManager this$0;
    final android.net.ConnectivityManager$OnTetheringEventCallback val$callback;

    void <init>(android.net.ConnectivityManager, android.net.ConnectivityManager$OnTetheringEventCallback)
    {
        android.net.ConnectivityManager$4 r0;
        android.net.ConnectivityManager r1;
        android.net.ConnectivityManager$OnTetheringEventCallback r2;

        r0 := @this: android.net.ConnectivityManager$4;

        r1 := @parameter0: android.net.ConnectivityManager;

        r2 := @parameter1: android.net.ConnectivityManager$OnTetheringEventCallback;

        r0.<android.net.ConnectivityManager$4: android.net.ConnectivityManager this$0> = r1;

        r0.<android.net.ConnectivityManager$4: android.net.ConnectivityManager$OnTetheringEventCallback val$callback> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onUpstreamChanged(android.net.Network)
    {
        android.net.ConnectivityManager$4 r0;
        android.net.Network r1;
        android.net.ConnectivityManager$OnTetheringEventCallback $r2;

        r0 := @this: android.net.ConnectivityManager$4;

        r1 := @parameter0: android.net.Network;

        $r2 = r0.<android.net.ConnectivityManager$4: android.net.ConnectivityManager$OnTetheringEventCallback val$callback>;

        virtualinvoke $r2.<android.net.ConnectivityManager$OnTetheringEventCallback: void onUpstreamChanged(android.net.Network)>(r1);

        return;
    }
}
