class android.net.ConnectivityManager$5 extends android.os.ResultReceiver
{
    final android.net.ConnectivityManager this$0;
    final java.util.concurrent.Executor val$executor;
    final android.net.ConnectivityManager$OnTetheringEntitlementResultListener val$listener;

    void <init>(android.net.ConnectivityManager, android.os.Handler, java.util.concurrent.Executor, android.net.ConnectivityManager$OnTetheringEntitlementResultListener)
    {
        android.net.ConnectivityManager$5 r0;
        android.net.ConnectivityManager r1;
        android.os.Handler r2;
        java.util.concurrent.Executor r3;
        android.net.ConnectivityManager$OnTetheringEntitlementResultListener r4;

        r0 := @this: android.net.ConnectivityManager$5;

        r1 := @parameter0: android.net.ConnectivityManager;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: android.net.ConnectivityManager$OnTetheringEntitlementResultListener;

        r0.<android.net.ConnectivityManager$5: android.net.ConnectivityManager this$0> = r1;

        r0.<android.net.ConnectivityManager$5: java.util.concurrent.Executor val$executor> = r3;

        r0.<android.net.ConnectivityManager$5: android.net.ConnectivityManager$OnTetheringEntitlementResultListener val$listener> = r4;

        specialinvoke r0.<android.os.ResultReceiver: void <init>(android.os.Handler)>(r2);

        return;
    }

    static void lambda$onReceiveResult$0(android.net.ConnectivityManager$OnTetheringEntitlementResultListener, int)
    {
        android.net.ConnectivityManager$OnTetheringEntitlementResultListener r0;
        int i0;

        r0 := @parameter0: android.net.ConnectivityManager$OnTetheringEntitlementResultListener;

        i0 := @parameter1: int;

        interfaceinvoke r0.<android.net.ConnectivityManager$OnTetheringEntitlementResultListener: void onTetheringEntitlementResult(int)>(i0);

        return;
    }

    static void lambda$onReceiveResult$1(java.util.concurrent.Executor, android.net.ConnectivityManager$OnTetheringEntitlementResultListener, int) throws java.lang.Exception
    {
        java.util.concurrent.Executor r0;
        android.net.ConnectivityManager$OnTetheringEntitlementResultListener r1;
        int i0;
        android.net._$$Lambda$ConnectivityManager$5$OMSqRWp_UPz6QSkiXvLAuEDgkhc $r2;

        r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: android.net.ConnectivityManager$OnTetheringEntitlementResultListener;

        i0 := @parameter2: int;

        $r2 = new android.net._$$Lambda$ConnectivityManager$5$OMSqRWp_UPz6QSkiXvLAuEDgkhc;

        specialinvoke $r2.<android.net._$$Lambda$ConnectivityManager$5$OMSqRWp_UPz6QSkiXvLAuEDgkhc: void <init>(android.net.ConnectivityManager$OnTetheringEntitlementResultListener,int)>(r1, i0);

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    protected void onReceiveResult(int, android.os.Bundle)
    {
        android.net.ConnectivityManager$5 r0;
        int i0;
        android.os.Bundle r1;
        android.net._$$Lambda$ConnectivityManager$5$KgnVAIsLrj_uzlbjjmtk8vq4TCc $r2;
        android.net.ConnectivityManager$OnTetheringEntitlementResultListener $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: android.net.ConnectivityManager$5;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = new android.net._$$Lambda$ConnectivityManager$5$KgnVAIsLrj_uzlbjjmtk8vq4TCc;

        $r4 = r0.<android.net.ConnectivityManager$5: java.util.concurrent.Executor val$executor>;

        $r3 = r0.<android.net.ConnectivityManager$5: android.net.ConnectivityManager$OnTetheringEntitlementResultListener val$listener>;

        specialinvoke $r2.<android.net._$$Lambda$ConnectivityManager$5$KgnVAIsLrj_uzlbjjmtk8vq4TCc: void <init>(java.util.concurrent.Executor,android.net.ConnectivityManager$OnTetheringEntitlementResultListener,int)>($r4, $r3, i0);

        staticinvoke <android.os.Binder: void withCleanCallingIdentity(com.android.internal.util.FunctionalUtils$ThrowingRunnable)>($r2);

        return;
    }
}
