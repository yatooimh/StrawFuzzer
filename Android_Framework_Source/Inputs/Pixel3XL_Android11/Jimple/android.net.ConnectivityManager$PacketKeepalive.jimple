public class android.net.ConnectivityManager$PacketKeepalive extends java.lang.Object
{
    public static final int BINDER_DIED;
    public static final int ERROR_HARDWARE_ERROR;
    public static final int ERROR_HARDWARE_UNSUPPORTED;
    public static final int ERROR_INVALID_INTERVAL;
    public static final int ERROR_INVALID_IP_ADDRESS;
    public static final int ERROR_INVALID_LENGTH;
    public static final int ERROR_INVALID_NETWORK;
    public static final int ERROR_INVALID_PORT;
    public static final int MIN_INTERVAL;
    public static final int NATT_PORT;
    public static final int NO_KEEPALIVE;
    public static final int SUCCESS;
    private static final java.lang.String TAG;
    private final android.net.ISocketKeepaliveCallback mCallback;
    private final java.util.concurrent.ExecutorService mExecutor;
    private final android.net.Network mNetwork;
    private volatile java.lang.Integer mSlot;
    final android.net.ConnectivityManager this$0;

    private void <init>(android.net.ConnectivityManager, android.net.Network, android.net.ConnectivityManager$PacketKeepaliveCallback)
    {
        android.net.ConnectivityManager$PacketKeepalive r0;
        android.net.ConnectivityManager r1;
        android.net.Network r2;
        android.net.ConnectivityManager$PacketKeepaliveCallback r3;
        java.util.concurrent.ExecutorService $r6;
        android.net.ConnectivityManager$PacketKeepalive$1 $r7;

        r0 := @this: android.net.ConnectivityManager$PacketKeepalive;

        r1 := @parameter0: android.net.ConnectivityManager;

        r2 := @parameter1: android.net.Network;

        r3 := @parameter2: android.net.ConnectivityManager$PacketKeepaliveCallback;

        r0.<android.net.ConnectivityManager$PacketKeepalive: android.net.ConnectivityManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "network cannot be null");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "callback cannot be null");

        r0.<android.net.ConnectivityManager$PacketKeepalive: android.net.Network mNetwork> = r2;

        $r6 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        r0.<android.net.ConnectivityManager$PacketKeepalive: java.util.concurrent.ExecutorService mExecutor> = $r6;

        $r7 = new android.net.ConnectivityManager$PacketKeepalive$1;

        specialinvoke $r7.<android.net.ConnectivityManager$PacketKeepalive$1: void <init>(android.net.ConnectivityManager$PacketKeepalive,android.net.ConnectivityManager,android.net.ConnectivityManager$PacketKeepaliveCallback)>(r0, r1, r3);

        r0.<android.net.ConnectivityManager$PacketKeepalive: android.net.ISocketKeepaliveCallback mCallback> = $r7;

        return;
    }

    void <init>(android.net.ConnectivityManager, android.net.Network, android.net.ConnectivityManager$PacketKeepaliveCallback, android.net.ConnectivityManager$1)
    {
        android.net.ConnectivityManager$PacketKeepalive r0;
        android.net.ConnectivityManager r1;
        android.net.Network r2;
        android.net.ConnectivityManager$PacketKeepaliveCallback r3;
        android.net.ConnectivityManager$1 r4;

        r0 := @this: android.net.ConnectivityManager$PacketKeepalive;

        r1 := @parameter0: android.net.ConnectivityManager;

        r2 := @parameter1: android.net.Network;

        r3 := @parameter2: android.net.ConnectivityManager$PacketKeepaliveCallback;

        r4 := @parameter3: android.net.ConnectivityManager$1;

        specialinvoke r0.<android.net.ConnectivityManager$PacketKeepalive: void <init>(android.net.ConnectivityManager,android.net.Network,android.net.ConnectivityManager$PacketKeepaliveCallback)>(r1, r2, r3);

        return;
    }

    static java.util.concurrent.ExecutorService access$200(android.net.ConnectivityManager$PacketKeepalive)
    {
        android.net.ConnectivityManager$PacketKeepalive r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @parameter0: android.net.ConnectivityManager$PacketKeepalive;

        $r1 = r0.<android.net.ConnectivityManager$PacketKeepalive: java.util.concurrent.ExecutorService mExecutor>;

        return $r1;
    }

    static java.lang.Integer access$302(android.net.ConnectivityManager$PacketKeepalive, java.lang.Integer)
    {
        android.net.ConnectivityManager$PacketKeepalive r0;
        java.lang.Integer r1;

        r0 := @parameter0: android.net.ConnectivityManager$PacketKeepalive;

        r1 := @parameter1: java.lang.Integer;

        r0.<android.net.ConnectivityManager$PacketKeepalive: java.lang.Integer mSlot> = r1;

        return r1;
    }

    static android.net.ISocketKeepaliveCallback access$600(android.net.ConnectivityManager$PacketKeepalive)
    {
        android.net.ConnectivityManager$PacketKeepalive r0;
        android.net.ISocketKeepaliveCallback $r1;

        r0 := @parameter0: android.net.ConnectivityManager$PacketKeepalive;

        $r1 = r0.<android.net.ConnectivityManager$PacketKeepalive: android.net.ISocketKeepaliveCallback mCallback>;

        return $r1;
    }

    public void lambda$stop$0$ConnectivityManager$PacketKeepalive()
    {
        android.net.ConnectivityManager$PacketKeepalive r0;
        java.lang.Integer $r2, $r5;
        android.net.ConnectivityManager $r3;
        android.net.IConnectivityManager $r4;
        android.net.Network $r6;
        int $i0;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;

        r0 := @this: android.net.ConnectivityManager$PacketKeepalive;

     label1:
        $r2 = r0.<android.net.ConnectivityManager$PacketKeepalive: java.lang.Integer mSlot>;

        if $r2 == null goto label2;

        $r3 = r0.<android.net.ConnectivityManager$PacketKeepalive: android.net.ConnectivityManager this$0>;

        $r4 = staticinvoke <android.net.ConnectivityManager: android.net.IConnectivityManager access$400(android.net.ConnectivityManager)>($r3);

        $r6 = r0.<android.net.ConnectivityManager$PacketKeepalive: android.net.Network mNetwork>;

        $r5 = r0.<android.net.ConnectivityManager$PacketKeepalive: java.lang.Integer mSlot>;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r4.<android.net.IConnectivityManager: void stopKeepalive(android.net.Network,int)>($r6, $i0);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PacketKeepalive", "Error stopping packet keepalive: ", $r7);

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stop()
    {
        android.net.ConnectivityManager$PacketKeepalive r0;
        java.util.concurrent.ExecutorService r1;
        java.lang.Throwable $r2;
        android.net._$$Lambda$ConnectivityManager$PacketKeepalive$__8nwufwzyblnuYRFEYIKx7L4Vg r3;

        r0 := @this: android.net.ConnectivityManager$PacketKeepalive;

     label1:
        r1 = r0.<android.net.ConnectivityManager$PacketKeepalive: java.util.concurrent.ExecutorService mExecutor>;

        r3 = new android.net._$$Lambda$ConnectivityManager$PacketKeepalive$__8nwufwzyblnuYRFEYIKx7L4Vg;

        specialinvoke r3.<android.net._$$Lambda$ConnectivityManager$PacketKeepalive$__8nwufwzyblnuYRFEYIKx7L4Vg: void <init>(android.net.ConnectivityManager$PacketKeepalive)>(r0);

        interfaceinvoke r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.net.ConnectivityManager$PacketKeepalive: java.lang.String TAG> = "PacketKeepalive";

        <android.net.ConnectivityManager$PacketKeepalive: int SUCCESS> = 0;

        <android.net.ConnectivityManager$PacketKeepalive: int NO_KEEPALIVE> = -1;

        <android.net.ConnectivityManager$PacketKeepalive: int NATT_PORT> = 4500;

        <android.net.ConnectivityManager$PacketKeepalive: int MIN_INTERVAL> = 10;

        <android.net.ConnectivityManager$PacketKeepalive: int ERROR_INVALID_PORT> = -22;

        <android.net.ConnectivityManager$PacketKeepalive: int ERROR_INVALID_NETWORK> = -20;

        <android.net.ConnectivityManager$PacketKeepalive: int ERROR_INVALID_LENGTH> = -23;

        <android.net.ConnectivityManager$PacketKeepalive: int ERROR_INVALID_IP_ADDRESS> = -21;

        <android.net.ConnectivityManager$PacketKeepalive: int ERROR_INVALID_INTERVAL> = -24;

        <android.net.ConnectivityManager$PacketKeepalive: int ERROR_HARDWARE_UNSUPPORTED> = -30;

        <android.net.ConnectivityManager$PacketKeepalive: int ERROR_HARDWARE_ERROR> = -31;

        <android.net.ConnectivityManager$PacketKeepalive: int BINDER_DIED> = -10;

        return;
    }
}
