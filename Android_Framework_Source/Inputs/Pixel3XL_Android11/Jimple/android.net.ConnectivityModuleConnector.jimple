public class android.net.ConnectivityModuleConnector extends java.lang.Object
{
    private static final java.lang.String CONFIG_ALWAYS_RATELIMIT_NETWORKSTACK_CRASH;
    private static final java.lang.String CONFIG_MIN_CRASH_INTERVAL_MS;
    private static final java.lang.String CONFIG_MIN_UPTIME_BEFORE_CRASH_MS;
    private static final long DEFAULT_MIN_CRASH_INTERVAL_MS;
    private static final long DEFAULT_MIN_UPTIME_BEFORE_CRASH_MS;
    private static final java.lang.String IN_PROCESS_SUFFIX;
    private static final java.lang.String PREFS_FILE;
    private static final java.lang.String PREF_KEY_LAST_CRASH_TIME;
    private static final java.lang.String TAG;
    private static android.net.ConnectivityModuleConnector sInstance;
    private android.content.Context mContext;
    private final android.net.ConnectivityModuleConnector$Dependencies mDeps;
    private final android.util.ArraySet mHealthListeners;
    private final android.net.util.SharedLog mLog;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.net.ConnectivityModuleConnector: java.lang.String PREF_KEY_LAST_CRASH_TIME> = "lastcrash_time";

        <android.net.ConnectivityModuleConnector: java.lang.String PREFS_FILE> = "ConnectivityModuleConnector.xml";

        <android.net.ConnectivityModuleConnector: java.lang.String IN_PROCESS_SUFFIX> = ".InProcess";

        <android.net.ConnectivityModuleConnector: long DEFAULT_MIN_UPTIME_BEFORE_CRASH_MS> = 1800000L;

        <android.net.ConnectivityModuleConnector: long DEFAULT_MIN_CRASH_INTERVAL_MS> = 21600000L;

        <android.net.ConnectivityModuleConnector: java.lang.String CONFIG_MIN_UPTIME_BEFORE_CRASH_MS> = "min_uptime_before_crash";

        <android.net.ConnectivityModuleConnector: java.lang.String CONFIG_MIN_CRASH_INTERVAL_MS> = "min_crash_interval";

        <android.net.ConnectivityModuleConnector: java.lang.String CONFIG_ALWAYS_RATELIMIT_NETWORKSTACK_CRASH> = "always_ratelimit_networkstack_crash";

        $r0 = class "Landroid/net/ConnectivityModuleConnector;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.net.ConnectivityModuleConnector: java.lang.String TAG> = $r1;

        return;
    }

    private void <init>()
    {
        android.net.ConnectivityModuleConnector r0;
        android.net.ConnectivityModuleConnector$DependenciesImpl $r1;

        r0 := @this: android.net.ConnectivityModuleConnector;

        $r1 = new android.net.ConnectivityModuleConnector$DependenciesImpl;

        specialinvoke $r1.<android.net.ConnectivityModuleConnector$DependenciesImpl: void <init>(android.net.ConnectivityModuleConnector$1)>(null);

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void <init>(android.net.ConnectivityModuleConnector$Dependencies)>($r1);

        return;
    }

    void <init>(android.net.ConnectivityModuleConnector$Dependencies)
    {
        android.net.ConnectivityModuleConnector r0;
        android.net.ConnectivityModuleConnector$Dependencies r1;
        android.net.util.SharedLog $r2;
        java.lang.String $r3;
        android.util.ArraySet $r4;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r1 := @parameter0: android.net.ConnectivityModuleConnector$Dependencies;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.net.util.SharedLog;

        $r3 = <android.net.ConnectivityModuleConnector: java.lang.String TAG>;

        specialinvoke $r2.<android.net.util.SharedLog: void <init>(java.lang.String)>($r3);

        r0.<android.net.ConnectivityModuleConnector: android.net.util.SharedLog mLog> = $r2;

        $r4 = new android.util.ArraySet;

        specialinvoke $r4.<android.util.ArraySet: void <init>()>();

        r0.<android.net.ConnectivityModuleConnector: android.util.ArraySet mHealthListeners> = $r4;

        r0.<android.net.ConnectivityModuleConnector: android.net.ConnectivityModuleConnector$Dependencies mDeps> = r1;

        return;
    }

    static void access$100(android.content.pm.PackageManager, android.content.ComponentName, java.lang.String)
    {
        android.content.pm.PackageManager r0;
        android.content.ComponentName r1;
        java.lang.String r2;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: java.lang.String;

        staticinvoke <android.net.ConnectivityModuleConnector: void checkModuleServicePermission(android.content.pm.PackageManager,android.content.ComponentName,java.lang.String)>(r0, r1, r2);

        return;
    }

    static void access$300(android.net.ConnectivityModuleConnector, java.lang.String)
    {
        android.net.ConnectivityModuleConnector r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.ConnectivityModuleConnector;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void logi(java.lang.String)>(r1);

        return;
    }

    static void access$400(android.net.ConnectivityModuleConnector, java.lang.String, java.lang.String)
    {
        android.net.ConnectivityModuleConnector r0;
        java.lang.String r1, r2;

        r0 := @parameter0: android.net.ConnectivityModuleConnector;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void maybeCrashWithTerribleFailure(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    private static void checkModuleServicePermission(android.content.pm.PackageManager, android.content.ComponentName, java.lang.String)
    {
        android.content.ComponentName r0;
        java.lang.String r1, $r2, $r7;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r6;
        android.content.pm.PackageManager r8;

        r8 := @parameter0: android.content.pm.PackageManager;

        r0 := @parameter1: android.content.ComponentName;

        r1 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.ComponentName: java.lang.String getPackageName()>();

        $i0 = virtualinvoke r8.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>(r1, $r2);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Networking module does not have permission ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static android.net.ConnectivityModuleConnector getInstance()
    {
        android.net.ConnectivityModuleConnector $r0, r2, r3;
        java.lang.Throwable $r1;

        entermonitor class "Landroid/net/ConnectivityModuleConnector;";

     label1:
        $r0 = <android.net.ConnectivityModuleConnector: android.net.ConnectivityModuleConnector sInstance>;

        if $r0 != null goto label2;

        r2 = new android.net.ConnectivityModuleConnector;

        specialinvoke r2.<android.net.ConnectivityModuleConnector: void <init>()>();

        <android.net.ConnectivityModuleConnector: android.net.ConnectivityModuleConnector sInstance> = r2;

     label2:
        r3 = <android.net.ConnectivityModuleConnector: android.net.ConnectivityModuleConnector sInstance>;

     label3:
        exitmonitor class "Landroid/net/ConnectivityModuleConnector;";

        return r3;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Landroid/net/ConnectivityModuleConnector;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private android.content.SharedPreferences getSharedPreferences()
    {
        android.net.ConnectivityModuleConnector r0;
        java.io.File $r1, r5;
        android.content.Context $r2, $r3;
        java.lang.Throwable $r4;
        android.content.SharedPreferences r6;

        r0 := @this: android.net.ConnectivityModuleConnector;

     label1:
        r5 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataSystemDeDirectory(int)>(0);

        specialinvoke r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "ConnectivityModuleConnector.xml");

        $r2 = r0.<android.net.ConnectivityModuleConnector: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.Context createDeviceProtectedStorageContext()>();

        r6 = virtualinvoke $r3.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.io.File,int)>(r5, 0);

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void logWtf(java.lang.String,java.lang.Throwable)>("Error loading shared preferences", $r4);

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void log(java.lang.String)
    {
        android.net.ConnectivityModuleConnector r0;
        android.net.util.SharedLog r1, $r3;
        java.lang.String $r2, r5;
        java.lang.Throwable $r4;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r5 := @parameter0: java.lang.String;

        $r2 = <android.net.ConnectivityModuleConnector: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r2, r5);

        r1 = r0.<android.net.ConnectivityModuleConnector: android.net.util.SharedLog mLog>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.ConnectivityModuleConnector: android.net.util.SharedLog mLog>;

        virtualinvoke $r3.<android.net.util.SharedLog: void log(java.lang.String)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void logWtf(java.lang.String, java.lang.Throwable)
    {
        android.net.ConnectivityModuleConnector r0;
        java.lang.String $r1, r4;
        android.net.util.SharedLog $r2, r6;
        java.lang.Throwable $r3, r5;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Throwable;

        $r1 = <android.net.ConnectivityModuleConnector: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, r4, r5);

        r6 = r0.<android.net.ConnectivityModuleConnector: android.net.util.SharedLog mLog>;

        entermonitor r6;

     label1:
        $r2 = r0.<android.net.ConnectivityModuleConnector: android.net.util.SharedLog mLog>;

        virtualinvoke $r2.<android.net.util.SharedLog: void e(java.lang.String)>(r4);

        exitmonitor r6;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void loge(java.lang.String, java.lang.Throwable)
    {
        android.net.ConnectivityModuleConnector r0;
        java.lang.String $r1, r4;
        android.net.util.SharedLog $r2, r6;
        java.lang.Throwable $r3, r5;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Throwable;

        $r1 = <android.net.ConnectivityModuleConnector: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, r4, r5);

        r6 = r0.<android.net.ConnectivityModuleConnector: android.net.util.SharedLog mLog>;

        entermonitor r6;

     label1:
        $r2 = r0.<android.net.ConnectivityModuleConnector: android.net.util.SharedLog mLog>;

        virtualinvoke $r2.<android.net.util.SharedLog: void e(java.lang.String)>(r4);

        exitmonitor r6;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void logi(java.lang.String)
    {
        android.net.ConnectivityModuleConnector r0;
        android.net.util.SharedLog r1, $r3;
        java.lang.String $r2, r5;
        java.lang.Throwable $r4;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r5 := @parameter0: java.lang.String;

        $r2 = <android.net.ConnectivityModuleConnector: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r2, r5);

        r1 = r0.<android.net.ConnectivityModuleConnector: android.net.util.SharedLog mLog>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.ConnectivityModuleConnector: android.net.util.SharedLog mLog>;

        virtualinvoke $r3.<android.net.util.SharedLog: void i(java.lang.String)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void maybeCrashWithTerribleFailure(java.lang.String, java.lang.String)
    {
        android.net.ConnectivityModuleConnector r0;
        long l0, l1, l2, l3, l4, $l6;
        boolean z1, $z2, $z3, z4, z5, z6, z7;
        byte $b5, $b7, $b8, $b9;
        android.util.ArraySet $r1, r9, r10;
        java.lang.Object $r2;
        android.net.ConnectivityModuleConnector$ConnectivityModuleHealthListener $r3;
        java.lang.Throwable $r4, $r5;
        java.lang.String r6, r7;
        android.content.SharedPreferences r8;
        java.util.Iterator r11;
        java.lang.IllegalStateException r13;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        entermonitor r0;

     label01:
        specialinvoke r0.<android.net.ConnectivityModuleConnector: void logWtf(java.lang.String,java.lang.Throwable)>(r6, null);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = staticinvoke <android.provider.DeviceConfig: long getLong(java.lang.String,java.lang.String,long)>("connectivity", "min_crash_interval", 21600000L);

        l3 = staticinvoke <android.provider.DeviceConfig: long getLong(java.lang.String,java.lang.String,long)>("connectivity", "min_uptime_before_crash", 1800000L);

     label02:
        z1 = staticinvoke <android.provider.DeviceConfig: boolean getBoolean(java.lang.String,java.lang.String,boolean)>("connectivity", "always_ratelimit_networkstack_crash", 0);

        r8 = specialinvoke r0.<android.net.ConnectivityModuleConnector: android.content.SharedPreferences getSharedPreferences()>();

        l4 = specialinvoke r0.<android.net.ConnectivityModuleConnector: long tryGetLastCrashTime(android.content.SharedPreferences)>(r8);

        $z2 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z2 == 0 goto label04;

     label03:
        if z1 != 0 goto label04;

        z4 = 1;

        goto label05;

     label04:
        z4 = 0;

     label05:
        $b9 = l0 cmp l3;

        if $b9 >= 0 goto label06;

        z5 = 1;

        goto label07;

     label06:
        z5 = 0;

     label07:
        $b5 = l4 cmp 0L;

        if $b5 == 0 goto label08;

        $b8 = l4 cmp l1;

        if $b8 >= 0 goto label08;

        z6 = 1;

        goto label09;

     label08:
        z6 = 0;

     label09:
        z7 = 0;

        if z6 == 0 goto label10;

        z7 = 0;

        $l6 = l4 + l2;

        $b7 = l1 cmp $l6;

        if $b7 >= 0 goto label10;

        z7 = 1;

     label10:
        if z4 != 0 goto label22;

        if z5 != 0 goto label12;

        if z7 == 0 goto label11;

        goto label12;

     label11:
        goto label22;

     label12:
        if r7 == null goto label21;

     label13:
        r9 = r0.<android.net.ConnectivityModuleConnector: android.util.ArraySet mHealthListeners>;

        entermonitor r9;

     label14:
        r10 = new android.util.ArraySet;

        $r1 = r0.<android.net.ConnectivityModuleConnector: android.util.ArraySet mHealthListeners>;

        specialinvoke r10.<android.util.ArraySet: void <init>(android.util.ArraySet)>($r1);

        exitmonitor r9;

     label15:
        r11 = virtualinvoke r10.<android.util.ArraySet: java.util.Iterator iterator()>();

     label16:
        $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        $r2 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.net.ConnectivityModuleConnector$ConnectivityModuleHealthListener) $r2;

        interfaceinvoke $r3.<android.net.ConnectivityModuleConnector$ConnectivityModuleHealthListener: void onNetworkStackFailure(java.lang.String)>(r7);

     label17:
        goto label16;

     label18:
        $r5 := @caughtexception;

     label19:
        exitmonitor r9;

     label20:
        throw $r5;

     label21:
        exitmonitor r0;

        return;

     label22:
        specialinvoke r0.<android.net.ConnectivityModuleConnector: void tryWriteLastCrashTime(android.content.SharedPreferences,long)>(r8, l1);

        r13 = new java.lang.IllegalStateException;

        specialinvoke r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r6);

        throw r13;

     label23:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label22 to label23 with label23;
    }

    private long tryGetLastCrashTime(android.content.SharedPreferences)
    {
        android.net.ConnectivityModuleConnector r0;
        long l0;
        java.lang.Throwable $r1;
        android.content.SharedPreferences r2;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r2 := @parameter0: android.content.SharedPreferences;

        if r2 != null goto label1;

        return 0L;

     label1:
        l0 = interfaceinvoke r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("lastcrash_time", 0L);

     label2:
        return l0;

     label3:
        $r1 := @caughtexception;

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void logWtf(java.lang.String,java.lang.Throwable)>("Error getting last crash time", $r1);

        return 0L;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void tryWriteLastCrashTime(android.content.SharedPreferences, long)
    {
        android.net.ConnectivityModuleConnector r0;
        long l0;
        android.content.SharedPreferences$Editor $r1, $r2;
        java.lang.Throwable $r3;
        android.content.SharedPreferences r4;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r4 := @parameter0: android.content.SharedPreferences;

        l0 := @parameter1: long;

        if r4 != null goto label1;

        return;

     label1:
        $r1 = interfaceinvoke r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("lastcrash_time", l0);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: boolean commit()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void logWtf(java.lang.String,java.lang.Throwable)>("Error writing last crash time", $r3);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void dump(java.io.PrintWriter)
    {
        android.net.ConnectivityModuleConnector r0;
        java.io.PrintWriter r1;
        android.net.util.SharedLog $r2;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<android.net.ConnectivityModuleConnector: android.net.util.SharedLog mLog>;

        virtualinvoke $r2.<android.net.util.SharedLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(null, r1, null);

        return;
    }

    public void init(android.content.Context)
    {
        android.net.ConnectivityModuleConnector r0;
        android.content.Context r1;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void log(java.lang.String)>("Network stack init");

        r0.<android.net.ConnectivityModuleConnector: android.content.Context mContext> = r1;

        return;
    }

    public void registerHealthListener(android.net.ConnectivityModuleConnector$ConnectivityModuleHealthListener)
    {
        android.net.ConnectivityModuleConnector r0;
        android.util.ArraySet r1, $r2;
        java.lang.Throwable $r3;
        android.net.ConnectivityModuleConnector$ConnectivityModuleHealthListener r4;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r4 := @parameter0: android.net.ConnectivityModuleConnector$ConnectivityModuleHealthListener;

        r1 = r0.<android.net.ConnectivityModuleConnector: android.util.ArraySet mHealthListeners>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.net.ConnectivityModuleConnector: android.util.ArraySet mHealthListeners>;

        virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void startModuleService(java.lang.String, java.lang.String, android.net.ConnectivityModuleConnector$ModuleServiceCallback)
    {
        android.net.ConnectivityModuleConnector r0;
        android.content.pm.PackageManager r1;
        java.lang.StringBuilder $r2, $r12;
        java.lang.String $r5, $r15, r17, r18, r23;
        android.content.Context $r6, $r10;
        android.net.ConnectivityModuleConnector$Dependencies $r7, $r16;
        android.content.ComponentName $r8;
        android.net.ConnectivityModuleConnector$ModuleServiceConnection $r9;
        android.os.UserHandle $r11;
        boolean $z0;
        android.net.ConnectivityModuleConnector$ModuleServiceCallback r19;
        android.content.Intent r21, r22;

        r0 := @this: android.net.ConnectivityModuleConnector;

        r17 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

        r19 := @parameter2: android.net.ConnectivityModuleConnector$ModuleServiceCallback;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting networking module ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void log(java.lang.String)>($r5);

        $r6 = r0.<android.net.ConnectivityModuleConnector: android.content.Context mContext>;

        r1 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = r0.<android.net.ConnectivityModuleConnector: android.net.ConnectivityModuleConnector$Dependencies mDeps>;

        r21 = interfaceinvoke $r7.<android.net.ConnectivityModuleConnector$Dependencies: android.content.Intent getModuleServiceIntent(android.content.pm.PackageManager,java.lang.String,java.lang.String,boolean)>(r1, r17, r18, 1);

        if r21 != null goto label1;

        $r16 = r0.<android.net.ConnectivityModuleConnector: android.net.ConnectivityModuleConnector$Dependencies mDeps>;

        r22 = interfaceinvoke $r16.<android.net.ConnectivityModuleConnector$Dependencies: android.content.Intent getModuleServiceIntent(android.content.pm.PackageManager,java.lang.String,java.lang.String,boolean)>(r1, r17, r18, 0);

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void log(java.lang.String)>("Starting networking module in network_stack process");

        goto label2;

     label1:
        specialinvoke r0.<android.net.ConnectivityModuleConnector: void log(java.lang.String)>("Starting networking module in system_server process");

        r22 = r21;

     label2:
        if r22 != null goto label3;

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void maybeCrashWithTerribleFailure(java.lang.String,java.lang.String)>("Could not resolve the networking module", null);

        return;

     label3:
        $r8 = virtualinvoke r22.<android.content.Intent: android.content.ComponentName getComponent()>();

        r23 = virtualinvoke $r8.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r10 = r0.<android.net.ConnectivityModuleConnector: android.content.Context mContext>;

        $r9 = new android.net.ConnectivityModuleConnector$ModuleServiceConnection;

        specialinvoke $r9.<android.net.ConnectivityModuleConnector$ModuleServiceConnection: void <init>(android.net.ConnectivityModuleConnector,java.lang.String,android.net.ConnectivityModuleConnector$ModuleServiceCallback,android.net.ConnectivityModuleConnector$1)>(r0, r23, r19, null);

        $r11 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        $z0 = virtualinvoke $r10.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r22, $r9, 65, $r11);

        if $z0 != 0 goto label4;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not bind to networking module in-process, or in app with ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.ConnectivityModuleConnector: void maybeCrashWithTerribleFailure(java.lang.String,java.lang.String)>($r15, r23);

        return;

     label4:
        specialinvoke r0.<android.net.ConnectivityModuleConnector: void log(java.lang.String)>("Networking module service start requested");

        return;
    }
}
