public final class android.net.DhcpResults extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    public java.lang.String captivePortalApiUrl;
    public final java.util.ArrayList dnsServers;
    public java.lang.String domains;
    public java.net.InetAddress gateway;
    public android.net.LinkAddress ipAddress;
    public int leaseDuration;
    public int mtu;
    public java.net.Inet4Address serverAddress;
    public java.lang.String serverHostName;
    public java.lang.String vendorInfo;

    static void <clinit>()
    {
        android.net.DhcpResults$1 $r0;

        <android.net.DhcpResults: java.lang.String TAG> = "DhcpResults";

        $r0 = new android.net.DhcpResults$1;

        specialinvoke $r0.<android.net.DhcpResults$1: void <init>()>();

        <android.net.DhcpResults: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.net.DhcpResults r0;
        java.util.ArrayList $r1;

        r0 := @this: android.net.DhcpResults;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.net.DhcpResults: java.util.ArrayList dnsServers> = $r1;

        return;
    }

    public void <init>(android.net.DhcpResults)
    {
        android.net.DhcpResults r0, r1;
        java.net.Inet4Address $r2;
        java.lang.String $r3, $r4, $r5;
        int $i0, $i1;
        android.net.StaticIpConfiguration r6;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: android.net.DhcpResults;

        if r1 != null goto label1;

        r6 = null;

        goto label2;

     label1:
        r6 = virtualinvoke r1.<android.net.DhcpResults: android.net.StaticIpConfiguration toStaticIpConfiguration()>();

     label2:
        specialinvoke r0.<android.net.DhcpResults: void <init>(android.net.StaticIpConfiguration)>(r6);

        if r1 == null goto label3;

        $r2 = r1.<android.net.DhcpResults: java.net.Inet4Address serverAddress>;

        r0.<android.net.DhcpResults: java.net.Inet4Address serverAddress> = $r2;

        $r3 = r1.<android.net.DhcpResults: java.lang.String vendorInfo>;

        r0.<android.net.DhcpResults: java.lang.String vendorInfo> = $r3;

        $i0 = r1.<android.net.DhcpResults: int leaseDuration>;

        r0.<android.net.DhcpResults: int leaseDuration> = $i0;

        $i1 = r1.<android.net.DhcpResults: int mtu>;

        r0.<android.net.DhcpResults: int mtu> = $i1;

        $r4 = r1.<android.net.DhcpResults: java.lang.String serverHostName>;

        r0.<android.net.DhcpResults: java.lang.String serverHostName> = $r4;

        $r5 = r1.<android.net.DhcpResults: java.lang.String captivePortalApiUrl>;

        r0.<android.net.DhcpResults: java.lang.String captivePortalApiUrl> = $r5;

     label3:
        return;
    }

    public void <init>(android.net.StaticIpConfiguration)
    {
        android.net.DhcpResults r0;
        android.net.StaticIpConfiguration r1;
        java.util.ArrayList $r2, $r5;
        android.net.LinkAddress $r3;
        java.net.InetAddress $r4;
        java.util.List $r6;
        java.lang.String $r7;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: android.net.StaticIpConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.net.DhcpResults: java.util.ArrayList dnsServers> = $r2;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.net.StaticIpConfiguration: android.net.LinkAddress getIpAddress()>();

        r0.<android.net.DhcpResults: android.net.LinkAddress ipAddress> = $r3;

        $r4 = virtualinvoke r1.<android.net.StaticIpConfiguration: java.net.InetAddress getGateway()>();

        r0.<android.net.DhcpResults: java.net.InetAddress gateway> = $r4;

        $r5 = r0.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        $r6 = virtualinvoke r1.<android.net.StaticIpConfiguration: java.util.List getDnsServers()>();

        virtualinvoke $r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r6);

        $r7 = virtualinvoke r1.<android.net.StaticIpConfiguration: java.lang.String getDomains()>();

        r0.<android.net.DhcpResults: java.lang.String domains> = $r7;

     label1:
        return;
    }

    static android.net.DhcpResults access$000(android.os.Parcel)
    {
        android.os.Parcel r0;
        android.net.DhcpResults $r1;

        r0 := @parameter0: android.os.Parcel;

        $r1 = staticinvoke <android.net.DhcpResults: android.net.DhcpResults readFromParcel(android.os.Parcel)>(r0);

        return $r1;
    }

    private static android.net.DhcpResults readFromParcel(android.os.Parcel)
    {
        android.os.Parcel r0;
        android.net.DhcpResults $r2;
        android.os.Parcelable$Creator $r3;
        java.lang.Object $r4;
        android.net.StaticIpConfiguration $r5;
        int $i0, $i1;
        java.net.InetAddress $r6;
        java.net.Inet4Address $r7;
        java.lang.String $r8, $r9, $r10;

        r0 := @parameter0: android.os.Parcel;

        $r2 = new android.net.DhcpResults;

        $r3 = <android.net.StaticIpConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r5 = (android.net.StaticIpConfiguration) $r4;

        specialinvoke $r2.<android.net.DhcpResults: void <init>(android.net.StaticIpConfiguration)>($r5);

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r2.<android.net.DhcpResults: int leaseDuration> = $i0;

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r2.<android.net.DhcpResults: int mtu> = $i1;

        $r6 = staticinvoke <com.android.net.module.util.InetAddressUtils: java.net.InetAddress unparcelInetAddress(android.os.Parcel)>(r0);

        $r7 = (java.net.Inet4Address) $r6;

        $r2.<android.net.DhcpResults: java.net.Inet4Address serverAddress> = $r7;

        $r8 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        $r2.<android.net.DhcpResults: java.lang.String vendorInfo> = $r8;

        $r9 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        $r2.<android.net.DhcpResults: java.lang.String serverHostName> = $r9;

        $r10 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        $r2.<android.net.DhcpResults: java.lang.String captivePortalApiUrl> = $r10;

        return $r2;
    }

    public boolean addDns(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1, $r8;
        boolean $z0;
        java.util.ArrayList $r2;
        java.net.InetAddress $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label4;

     label1:
        $r2 = r0.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        $r3 = staticinvoke <android.net.InetAddresses: java.net.InetAddress parseNumericAddress(java.lang.String)>(r1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addDns failed with addrString ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DhcpResults", $r8);

        return 1;

     label4:
        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void addDnsServer(java.net.InetAddress)
    {
        android.net.DhcpResults r0;
        java.net.InetAddress r1;
        java.util.ArrayList $r2;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.net.InetAddress;

        $r2 = r0.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void clear()
    {
        android.net.DhcpResults r0;
        java.util.ArrayList $r1;

        r0 := @this: android.net.DhcpResults;

        r0.<android.net.DhcpResults: android.net.LinkAddress ipAddress> = null;

        r0.<android.net.DhcpResults: java.net.InetAddress gateway> = null;

        $r1 = r0.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<android.net.DhcpResults: java.lang.String domains> = null;

        r0.<android.net.DhcpResults: java.net.Inet4Address serverAddress> = null;

        r0.<android.net.DhcpResults: java.lang.String vendorInfo> = null;

        r0.<android.net.DhcpResults: int leaseDuration> = 0;

        r0.<android.net.DhcpResults: int mtu> = 0;

        r0.<android.net.DhcpResults: java.lang.String serverHostName> = null;

        r0.<android.net.DhcpResults: java.lang.String captivePortalApiUrl> = null;

        return;
    }

    public int describeContents()
    {
        android.net.DhcpResults r0;

        r0 := @this: android.net.DhcpResults;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.DhcpResults r0, r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        android.net.StaticIpConfiguration $r1, $r2;
        java.net.Inet4Address $r3, $r4;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r11;

        r0 := @this: android.net.DhcpResults;

        r11 := @parameter0: java.lang.Object;

        z6 = 1;

        if r0 != r11 goto label1;

        return 1;

     label1:
        $z0 = r11 instanceof android.net.DhcpResults;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r12 = (android.net.DhcpResults) r11;

        $r1 = virtualinvoke r0.<android.net.DhcpResults: android.net.StaticIpConfiguration toStaticIpConfiguration()>();

        $r2 = virtualinvoke r12.<android.net.DhcpResults: android.net.StaticIpConfiguration toStaticIpConfiguration()>();

        $z1 = virtualinvoke $r1.<android.net.StaticIpConfiguration: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label3;

        $r4 = r0.<android.net.DhcpResults: java.net.Inet4Address serverAddress>;

        $r3 = r12.<android.net.DhcpResults: java.net.Inet4Address serverAddress>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 == 0 goto label3;

        $r6 = r0.<android.net.DhcpResults: java.lang.String vendorInfo>;

        $r5 = r12.<android.net.DhcpResults: java.lang.String vendorInfo>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z3 == 0 goto label3;

        $r8 = r0.<android.net.DhcpResults: java.lang.String serverHostName>;

        $r7 = r12.<android.net.DhcpResults: java.lang.String serverHostName>;

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z4 == 0 goto label3;

        $i1 = r0.<android.net.DhcpResults: int leaseDuration>;

        $i0 = r12.<android.net.DhcpResults: int leaseDuration>;

        if $i1 != $i0 goto label3;

        $i3 = r0.<android.net.DhcpResults: int mtu>;

        $i2 = r12.<android.net.DhcpResults: int mtu>;

        if $i3 != $i2 goto label3;

        $r10 = r0.<android.net.DhcpResults: java.lang.String captivePortalApiUrl>;

        $r9 = r12.<android.net.DhcpResults: java.lang.String captivePortalApiUrl>;

        $z5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z5 == 0 goto label3;

        goto label4;

     label3:
        z6 = 0;

     label4:
        return z6;
    }

    public java.lang.String getCaptivePortalApiUrl()
    {
        android.net.DhcpResults r0;
        java.lang.String $r1;

        r0 := @this: android.net.DhcpResults;

        $r1 = r0.<android.net.DhcpResults: java.lang.String captivePortalApiUrl>;

        return $r1;
    }

    public java.util.List getDnsServers()
    {
        android.net.DhcpResults r0;
        java.util.ArrayList $r1;

        r0 := @this: android.net.DhcpResults;

        $r1 = r0.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        return $r1;
    }

    public java.lang.String getDomains()
    {
        android.net.DhcpResults r0;
        java.lang.String $r1;

        r0 := @this: android.net.DhcpResults;

        $r1 = r0.<android.net.DhcpResults: java.lang.String domains>;

        return $r1;
    }

    public java.net.InetAddress getGateway()
    {
        android.net.DhcpResults r0;
        java.net.InetAddress $r1;

        r0 := @this: android.net.DhcpResults;

        $r1 = r0.<android.net.DhcpResults: java.net.InetAddress gateway>;

        return $r1;
    }

    public android.net.LinkAddress getIpAddress()
    {
        android.net.DhcpResults r0;
        android.net.LinkAddress $r1;

        r0 := @this: android.net.DhcpResults;

        $r1 = r0.<android.net.DhcpResults: android.net.LinkAddress ipAddress>;

        return $r1;
    }

    public int getLeaseDuration()
    {
        android.net.DhcpResults r0;
        int $i0;

        r0 := @this: android.net.DhcpResults;

        $i0 = r0.<android.net.DhcpResults: int leaseDuration>;

        return $i0;
    }

    public int getMtu()
    {
        android.net.DhcpResults r0;
        int $i0;

        r0 := @this: android.net.DhcpResults;

        $i0 = r0.<android.net.DhcpResults: int mtu>;

        return $i0;
    }

    public java.util.List getRoutes(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1;
        android.net.StaticIpConfiguration $r2;
        java.util.List $r3;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.net.DhcpResults: android.net.StaticIpConfiguration toStaticIpConfiguration()>();

        $r3 = virtualinvoke $r2.<android.net.StaticIpConfiguration: java.util.List getRoutes(java.lang.String)>(r1);

        return $r3;
    }

    public java.net.Inet4Address getServerAddress()
    {
        android.net.DhcpResults r0;
        java.net.Inet4Address $r1;

        r0 := @this: android.net.DhcpResults;

        $r1 = r0.<android.net.DhcpResults: java.net.Inet4Address serverAddress>;

        return $r1;
    }

    public java.lang.String getVendorInfo()
    {
        android.net.DhcpResults r0;
        java.lang.String $r1;

        r0 := @this: android.net.DhcpResults;

        $r1 = r0.<android.net.DhcpResults: java.lang.String vendorInfo>;

        return $r1;
    }

    public boolean hasMeteredHint()
    {
        android.net.DhcpResults r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.net.DhcpResults;

        r1 = r0.<android.net.DhcpResults: java.lang.String vendorInfo>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("ANDROID_METERED");

        return $z0;

     label1:
        return 0;
    }

    public void setCaptivePortalApiUrl(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.DhcpResults: java.lang.String captivePortalApiUrl> = r1;

        return;
    }

    public void setDomains(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.DhcpResults: java.lang.String domains> = r1;

        return;
    }

    public void setGateway(java.net.InetAddress)
    {
        android.net.DhcpResults r0;
        java.net.InetAddress r1;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.net.InetAddress;

        r0.<android.net.DhcpResults: java.net.InetAddress gateway> = r1;

        return;
    }

    public boolean setGateway(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1, $r7;
        java.net.InetAddress $r2;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <android.net.InetAddresses: java.net.InetAddress parseNumericAddress(java.lang.String)>(r1);

        r0.<android.net.DhcpResults: java.net.InetAddress gateway> = $r2;

     label2:
        return 0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setGateway failed with addrString ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DhcpResults", $r7);

        return 1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void setIpAddress(android.net.LinkAddress)
    {
        android.net.DhcpResults r0;
        android.net.LinkAddress r1;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: android.net.LinkAddress;

        r0.<android.net.DhcpResults: android.net.LinkAddress ipAddress> = r1;

        return;
    }

    public boolean setIpAddress(java.lang.String, int)
    {
        android.net.DhcpResults r0;
        java.lang.String r1, $r10;
        int i0;
        android.net.LinkAddress r2;
        java.net.InetAddress $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;
        java.net.Inet4Address r11;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r3 = staticinvoke <android.net.InetAddresses: java.net.InetAddress parseNumericAddress(java.lang.String)>(r1);

        r11 = (java.net.Inet4Address) $r3;

        r2 = new android.net.LinkAddress;

        specialinvoke r2.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>(r11, i0);

        r0.<android.net.DhcpResults: android.net.LinkAddress ipAddress> = r2;

     label2:
        return 0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setIpAddress failed with addrString ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DhcpResults", $r10);

        return 1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public void setLeaseDuration(int)
    {
        android.net.DhcpResults r0;
        int i0;

        r0 := @this: android.net.DhcpResults;

        i0 := @parameter0: int;

        r0.<android.net.DhcpResults: int leaseDuration> = i0;

        return;
    }

    public void setMtu(int)
    {
        android.net.DhcpResults r0;
        int i0;

        r0 := @this: android.net.DhcpResults;

        i0 := @parameter0: int;

        r0.<android.net.DhcpResults: int mtu> = i0;

        return;
    }

    public void setServerAddress(java.net.Inet4Address)
    {
        android.net.DhcpResults r0;
        java.net.Inet4Address r1;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.net.Inet4Address;

        r0.<android.net.DhcpResults: java.net.Inet4Address serverAddress> = r1;

        return;
    }

    public void setVendorInfo(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.DhcpResults: java.lang.String vendorInfo> = r1;

        return;
    }

    public android.net.StaticIpConfiguration toStaticIpConfiguration()
    {
        android.net.DhcpResults r0;
        android.net.StaticIpConfiguration$Builder $r1, $r3, $r5, $r7, $r9;
        android.net.LinkAddress $r2;
        java.net.InetAddress $r4;
        java.util.ArrayList $r6;
        java.lang.String $r8;
        android.net.StaticIpConfiguration $r10;

        r0 := @this: android.net.DhcpResults;

        $r1 = new android.net.StaticIpConfiguration$Builder;

        specialinvoke $r1.<android.net.StaticIpConfiguration$Builder: void <init>()>();

        $r2 = r0.<android.net.DhcpResults: android.net.LinkAddress ipAddress>;

        $r3 = virtualinvoke $r1.<android.net.StaticIpConfiguration$Builder: android.net.StaticIpConfiguration$Builder setIpAddress(android.net.LinkAddress)>($r2);

        $r4 = r0.<android.net.DhcpResults: java.net.InetAddress gateway>;

        $r5 = virtualinvoke $r3.<android.net.StaticIpConfiguration$Builder: android.net.StaticIpConfiguration$Builder setGateway(java.net.InetAddress)>($r4);

        $r6 = r0.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        $r7 = virtualinvoke $r5.<android.net.StaticIpConfiguration$Builder: android.net.StaticIpConfiguration$Builder setDnsServers(java.lang.Iterable)>($r6);

        $r8 = r0.<android.net.DhcpResults: java.lang.String domains>;

        $r9 = virtualinvoke $r7.<android.net.StaticIpConfiguration$Builder: android.net.StaticIpConfiguration$Builder setDomains(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<android.net.StaticIpConfiguration$Builder: android.net.StaticIpConfiguration build()>();

        return $r10;
    }

    public java.lang.String toString()
    {
        android.net.DhcpResults r0;
        java.lang.StringBuffer $r2;
        java.lang.String $r3, $r8, $r14, $r16, $r17, $r19;
        java.net.Inet4Address $r5;
        int $i0, $i1, $i2;

        r0 := @this: android.net.DhcpResults;

        $r2 = new java.lang.StringBuffer;

        $r3 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" DHCP server ");

        $r5 = r0.<android.net.DhcpResults: java.net.Inet4Address serverAddress>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Vendor info ");

        $r8 = r0.<android.net.DhcpResults: java.lang.String vendorInfo>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" lease ");

        $i0 = r0.<android.net.DhcpResults: int leaseDuration>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" seconds");

        $i1 = r0.<android.net.DhcpResults: int mtu>;

        if $i1 == 0 goto label1;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" MTU ");

        $i2 = r0.<android.net.DhcpResults: int mtu>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

     label1:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Servername ");

        $r14 = r0.<android.net.DhcpResults: java.lang.String serverHostName>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = r0.<android.net.DhcpResults: java.lang.String captivePortalApiUrl>;

        if $r16 == null goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" CaptivePortalApiUrl ");

        $r19 = r0.<android.net.DhcpResults: java.lang.String captivePortalApiUrl>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

     label2:
        $r17 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.DhcpResults r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        android.net.StaticIpConfiguration $r2;
        java.net.Inet4Address $r3;
        java.lang.String $r4, $r5, $r6;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.net.DhcpResults: android.net.StaticIpConfiguration toStaticIpConfiguration()>();

        virtualinvoke $r2.<android.net.StaticIpConfiguration: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $i1 = r0.<android.net.DhcpResults: int leaseDuration>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.net.DhcpResults: int mtu>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r3 = r0.<android.net.DhcpResults: java.net.Inet4Address serverAddress>;

        staticinvoke <com.android.net.module.util.InetAddressUtils: void parcelInetAddress(android.os.Parcel,java.net.InetAddress,int)>(r1, $r3, i0);

        $r4 = r0.<android.net.DhcpResults: java.lang.String vendorInfo>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = r0.<android.net.DhcpResults: java.lang.String serverHostName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r6 = r0.<android.net.DhcpResults: java.lang.String captivePortalApiUrl>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        return;
    }
}
