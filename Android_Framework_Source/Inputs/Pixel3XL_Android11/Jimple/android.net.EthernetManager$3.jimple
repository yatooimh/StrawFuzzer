class android.net.EthernetManager$3 extends android.net.ITetheredInterfaceCallback$Stub
{
    final android.net.EthernetManager this$0;
    final android.net.EthernetManager$TetheredInterfaceCallback val$callback;
    final java.util.concurrent.Executor val$executor;

    void <init>(android.net.EthernetManager, java.util.concurrent.Executor, android.net.EthernetManager$TetheredInterfaceCallback)
    {
        android.net.EthernetManager$3 r0;
        android.net.EthernetManager r1;
        java.util.concurrent.Executor r2;
        android.net.EthernetManager$TetheredInterfaceCallback r3;

        r0 := @this: android.net.EthernetManager$3;

        r1 := @parameter0: android.net.EthernetManager;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.net.EthernetManager$TetheredInterfaceCallback;

        r0.<android.net.EthernetManager$3: android.net.EthernetManager this$0> = r1;

        r0.<android.net.EthernetManager$3: java.util.concurrent.Executor val$executor> = r2;

        r0.<android.net.EthernetManager$3: android.net.EthernetManager$TetheredInterfaceCallback val$callback> = r3;

        specialinvoke r0.<android.net.ITetheredInterfaceCallback$Stub: void <init>()>();

        return;
    }

    static void lambda$onAvailable$0(android.net.EthernetManager$TetheredInterfaceCallback, java.lang.String)
    {
        android.net.EthernetManager$TetheredInterfaceCallback r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.EthernetManager$TetheredInterfaceCallback;

        r1 := @parameter1: java.lang.String;

        interfaceinvoke r0.<android.net.EthernetManager$TetheredInterfaceCallback: void onAvailable(java.lang.String)>(r1);

        return;
    }

    static void lambda$onUnavailable$1(android.net.EthernetManager$TetheredInterfaceCallback)
    {
        android.net.EthernetManager$TetheredInterfaceCallback r0;

        r0 := @parameter0: android.net.EthernetManager$TetheredInterfaceCallback;

        interfaceinvoke r0.<android.net.EthernetManager$TetheredInterfaceCallback: void onUnavailable()>();

        return;
    }

    public void onAvailable(java.lang.String)
    {
        android.net.EthernetManager$3 r0;
        java.lang.String r1;
        android.net._$$Lambda$EthernetManager$3$wNl0ng6S_4pOA1JjJrcBQ_pxSQU $r2;
        android.net.EthernetManager$TetheredInterfaceCallback $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: android.net.EthernetManager$3;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<android.net.EthernetManager$3: java.util.concurrent.Executor val$executor>;

        $r2 = new android.net._$$Lambda$EthernetManager$3$wNl0ng6S_4pOA1JjJrcBQ_pxSQU;

        $r3 = r0.<android.net.EthernetManager$3: android.net.EthernetManager$TetheredInterfaceCallback val$callback>;

        specialinvoke $r2.<android.net._$$Lambda$EthernetManager$3$wNl0ng6S_4pOA1JjJrcBQ_pxSQU: void <init>(android.net.EthernetManager$TetheredInterfaceCallback,java.lang.String)>($r3, r1);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void onUnavailable()
    {
        android.net.EthernetManager$3 r0;
        android.net._$$Lambda$EthernetManager$3$7jKVTVFMKx3pBO9_KkSYZmxOBm0 $r1;
        android.net.EthernetManager$TetheredInterfaceCallback $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: android.net.EthernetManager$3;

        $r3 = r0.<android.net.EthernetManager$3: java.util.concurrent.Executor val$executor>;

        $r1 = new android.net._$$Lambda$EthernetManager$3$7jKVTVFMKx3pBO9_KkSYZmxOBm0;

        $r2 = r0.<android.net.EthernetManager$3: android.net.EthernetManager$TetheredInterfaceCallback val$callback>;

        specialinvoke $r1.<android.net._$$Lambda$EthernetManager$3$7jKVTVFMKx3pBO9_KkSYZmxOBm0: void <init>(android.net.EthernetManager$TetheredInterfaceCallback)>($r2);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

        return;
    }
}
