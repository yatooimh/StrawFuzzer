class android.net.IConnectivityManager$Stub$Proxy extends java.lang.Object implements android.net.IConnectivityManager
{
    public static android.net.IConnectivityManager sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public boolean addVpnAddress(java.lang.String, int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(73, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.IConnectivityManager: boolean addVpnAddress(java.lang.String,int)>(r7, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public android.os.IBinder asBinder()
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        $r1 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public int checkMobileProvisioning(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.net.IConnectivityManager: int checkMobileProvisioning(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void declareNetworkRequestUnfulfillable(android.net.NetworkRequest) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.NetworkRequest r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.NetworkRequest;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(56, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void deleteVpnProfile(java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void deleteVpnProfile(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        com.android.internal.net.VpnConfig r9;
        android.os.ParcelFileDescriptor r10, r11;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r9 := @parameter0: com.android.internal.net.VpnConfig;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<com.android.internal.net.VpnConfig: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>(r9);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r4 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.os.ParcelFileDescriptor) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public void factoryReset() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(76, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.IConnectivityManager: void factoryReset()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.LinkProperties getActiveLinkProperties() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.LinkProperties r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.net.LinkProperties: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.LinkProperties) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.Network getActiveNetwork() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.Network r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.Network getActiveNetwork()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.Network) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.Network getActiveNetworkForUid(int, boolean) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, $i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        byte b2;
        android.net.Network r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if z0 == 0 goto label03;

        b2 = 1;

        goto label04;

     label03:
        b2 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label06;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.Network getActiveNetworkForUid(int,boolean)>(i0, z0);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label08;

        $r4 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.Network) $r5;

     label07:
        goto label09;

     label08:
        r10 = null;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public android.net.NetworkInfo getActiveNetworkInfo() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkInfo r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.net.NetworkInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.NetworkInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.NetworkInfo getActiveNetworkInfoForUid(int, boolean) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, $i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        byte b2;
        android.net.NetworkInfo r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if z0 == 0 goto label03;

        b2 = 1;

        goto label04;

     label03:
        b2 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label06;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int,boolean)>(i0, z0);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label08;

        $r4 = <android.net.NetworkInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.NetworkInfo) $r5;

     label07:
        goto label09;

     label08:
        r10 = null;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkQuotaInfo r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.net.NetworkQuotaInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.NetworkQuotaInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.NetworkInfo[] getAllNetworkInfo() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkInfo[] r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.net.NetworkInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.net.NetworkInfo[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.NetworkState[] getAllNetworkState() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkState[] r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.NetworkState[] getAllNetworkState()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.net.NetworkState: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.net.NetworkState[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.Network[] getAllNetworks() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.Network[] r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.Network[] getAllNetworks()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.net.Network[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getAlwaysOnVpnPackage(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: java.lang.String getAlwaysOnVpnPackage(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getCaptivePortalServerUrl() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(81, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: java.lang.String getCaptivePortalServerUrl()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getConnectionOwnerUid(android.net.ConnectionInfo) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.ConnectionInfo r7;
        int i0, i1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.ConnectionInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.ConnectionInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(83, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.net.IConnectivityManager: int getConnectionOwnerUid(android.net.ConnectionInfo)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.net.NetworkCapabilities[] r10, r11;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int,java.lang.String)>(i0, r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.net.NetworkCapabilities: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r11 = (android.net.NetworkCapabilities[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.NetworkRequest getDefaultRequest() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkRequest r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(71, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.NetworkRequest getDefaultRequest()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.net.NetworkRequest: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.NetworkRequest) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.ProxyInfo getGlobalProxy() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.ProxyInfo r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.ProxyInfo getGlobalProxy()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.net.ProxyInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.ProxyInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.IConnectivityManager$Stub$Proxy r0;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        return "android.net.IConnectivityManager";
    }

    public int getLastTetherError(java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.net.IConnectivityManager: int getLastTetherError(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        com.android.internal.net.LegacyVpnInfo r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <com.android.internal.net.LegacyVpnInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (com.android.internal.net.LegacyVpnInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.LinkProperties getLinkProperties(android.net.Network) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.Network r9;
        android.net.LinkProperties r10, r11;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r9 := @parameter0: android.net.Network;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.LinkProperties getLinkProperties(android.net.Network)>(r9);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r4 = <android.net.LinkProperties: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.LinkProperties) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public android.net.LinkProperties getLinkPropertiesForType(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.LinkProperties r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.LinkProperties getLinkPropertiesForType(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.net.LinkProperties: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.LinkProperties) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getMobileProvisioningUrl() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: java.lang.String getMobileProvisioningUrl()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getMultipathPreference(android.net.Network) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Network r7;
        int i0, i1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.Network;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(70, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        i0 = interfaceinvoke $r5.<android.net.IConnectivityManager: int getMultipathPreference(android.net.Network)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.net.IConnectivityManager $r7, $r8;
        java.lang.Throwable $r9;
        android.net.Network r10;
        android.net.NetworkCapabilities r11, r12;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r10 := @parameter0: android.net.Network;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r10 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r7 == null goto label08;

        $r8 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<android.net.IConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network,java.lang.String)>(r10, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r5 = <android.net.NetworkCapabilities: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r12 = (android.net.NetworkCapabilities) $r6;

     label09:
        goto label11;

     label10:
        r12 = null;

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label12:
        $r9 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public android.net.Network getNetworkForType(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.Network r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.Network getNetworkForType(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.Network) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.NetworkInfo getNetworkInfo(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkInfo r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.net.NetworkInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.NetworkInfo) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.NetworkInfo getNetworkInfoForUid(android.net.Network, int, boolean) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, $i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.Network r9;
        byte b2;
        android.net.NetworkInfo r10, r11;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r9 := @parameter0: android.net.Network;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        b2 = 1;

        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if z0 == 0 goto label08;

        goto label09;

     label08:
        b2 = 0;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z1 != 0 goto label11;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label11;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.NetworkInfo getNetworkInfoForUid(android.net.Network,int,boolean)>(r9, i0, z0);

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label11:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label13;

        $r4 = <android.net.NetworkInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.NetworkInfo) $r5;

     label12:
        goto label14;

     label13:
        r11 = null;

     label14:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
    }

    public byte[] getNetworkWatchlistConfigHash() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7, r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(82, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: byte[] getNetworkWatchlistConfigHash()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: byte[] createByteArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.ProxyInfo getProxyForNetwork(android.net.Network) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.Network r9;
        android.net.ProxyInfo r10, r11;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r9 := @parameter0: android.net.Network;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.IConnectivityManager: android.net.ProxyInfo getProxyForNetwork(android.net.Network)>(r9);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

        $r4 = <android.net.ProxyInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.ProxyInfo) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public int getRestoreDefaultNetworkDelay(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(72, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.net.IConnectivityManager: int getRestoreDefaultNetworkDelay(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getTetherableIfaces() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: java.lang.String[] getTetherableIfaces()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getTetherableUsbRegexs() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getTetherableWifiRegexs() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getTetheredIfaces() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: java.lang.String[] getTetheredIfaces()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getTetheringErroredIfaces() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public com.android.internal.net.VpnConfig getVpnConfig(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        com.android.internal.net.VpnConfig r9, r10;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.IConnectivityManager: com.android.internal.net.VpnConfig getVpnConfig(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <com.android.internal.net.VpnConfig: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (com.android.internal.net.VpnConfig) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.util.List getVpnLockdownWhitelist(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;
        java.util.ArrayList r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: java.util.List getVpnLockdownWhitelist(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isActiveNetworkMetered() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        r6 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.IConnectivityManager: boolean isActiveNetworkMetered()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isAlwaysOnVpnPackageSupported(int, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        java.lang.String r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.IConnectivityManager: boolean isAlwaysOnVpnPackageSupported(int,java.lang.String)>(i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isCallerCurrentAlwaysOnVpnApp() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        r6 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(84, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.IConnectivityManager: boolean isCallerCurrentAlwaysOnVpnApp()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isCallerCurrentAlwaysOnVpnLockdownApp() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        r6 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(85, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.IConnectivityManager: boolean isCallerCurrentAlwaysOnVpnLockdownApp()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isNetworkSupported(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.IConnectivityManager: boolean isNetworkSupported(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isVpnLockdownEnabled(int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.IConnectivityManager: boolean isVpnLockdownEnabled(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities, android.os.Messenger, android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Messenger r1;
        android.os.IBinder r2, $r6;
        java.lang.String r3;
        android.os.Parcel r4, r5;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;
        android.net.IConnectivityManager $r9, $r10;
        java.lang.Throwable $r11;
        android.net.NetworkCapabilities r12;
        android.net.NetworkRequest r13, r14;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r12 := @parameter0: android.net.NetworkCapabilities;

        r1 := @parameter1: android.os.Messenger;

        r2 := @parameter2: android.os.IBinder;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r12 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r12.<android.net.NetworkCapabilities: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r6 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(61, r4, r5, 0);

        if $z0 != 0 goto label12;

        $r9 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r9 == null goto label12;

        $r10 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r13 = interfaceinvoke $r10.<android.net.IConnectivityManager: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>(r12, r1, r2, r3);

     label11:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r13;

     label12:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label14;

        $r7 = <android.net.NetworkRequest: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r5);

        r14 = (android.net.NetworkRequest) $r8;

     label13:
        goto label15;

     label14:
        r14 = null;

     label15:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r14;

     label16:
        $r11 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
    }

    public void pendingListenForNetwork(android.net.NetworkCapabilities, android.app.PendingIntent, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.app.PendingIntent r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkCapabilities r9;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r9 := @parameter0: android.net.NetworkCapabilities;

        r1 := @parameter1: android.app.PendingIntent;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.net.NetworkCapabilities: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(62, r3, r4, 0);

        if $z0 != 0 goto label12;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label12;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.IConnectivityManager: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>(r9, r1, r2);

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities, android.app.PendingIntent, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.app.PendingIntent r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;
        android.net.IConnectivityManager $r8, $r9;
        java.lang.Throwable $r10;
        android.net.NetworkCapabilities r11;
        android.net.NetworkRequest r12, r13;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r11 := @parameter0: android.net.NetworkCapabilities;

        r1 := @parameter1: android.app.PendingIntent;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r11 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r11.<android.net.NetworkCapabilities: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(59, r3, r4, 0);

        if $z0 != 0 goto label12;

        $r8 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r8 == null goto label12;

        $r9 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r12 = interfaceinvoke $r9.<android.net.IConnectivityManager: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>(r11, r1, r2);

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r12;

     label12:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label14;

        $r6 = <android.net.NetworkRequest: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r4);

        r13 = (android.net.NetworkRequest) $r7;

     label13:
        goto label15;

     label14:
        r13 = null;

     label15:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r13;

     label16:
        $r10 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
    }

    public boolean prepareVpn(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        java.lang.String r1, r8;
        android.os.Parcel r2, r3;
        android.os.IBinder r4;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r2, r3, 0);

        if $z0 != 0 goto label5;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.net.IConnectivityManager: boolean prepareVpn(java.lang.String,java.lang.String,int)>(r8, r1, i0);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean provisionVpnProfile(com.android.internal.net.VpnProfile, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        int i0;
        android.os.IBinder $r4;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;
        com.android.internal.net.VpnProfile r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r8 := @parameter0: com.android.internal.net.VpnProfile;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        z1 = 1;

        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<com.android.internal.net.VpnProfile: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r6.<android.net.IConnectivityManager: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback, android.net.NetworkRequest, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.net.NetworkRequest r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10;
        boolean $z0;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.IConnectivityDiagnosticsCallback r9;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r9 := @parameter0: android.net.IConnectivityDiagnosticsCallback;

        r1 := @parameter1: android.net.NetworkRequest;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.net.IConnectivityDiagnosticsCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(86, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.IConnectivityManager: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>(r9, r1, r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public android.net.Network registerNetworkAgent(android.os.Messenger, android.net.NetworkInfo, android.net.LinkProperties, android.net.NetworkCapabilities, int, android.net.NetworkAgentConfig, int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.net.NetworkInfo r1;
        android.net.LinkProperties r2;
        android.net.NetworkCapabilities r3;
        int i0, i1, $i2;
        android.net.NetworkAgentConfig r4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7;
        boolean $z0;
        android.os.Parcelable$Creator $r8;
        java.lang.Object $r9;
        android.net.IConnectivityManager $r10, $r11;
        java.lang.Throwable $r12;
        android.os.Messenger r13;
        android.net.Network r14, r15;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r13 := @parameter0: android.os.Messenger;

        r1 := @parameter1: android.net.NetworkInfo;

        r2 := @parameter2: android.net.LinkProperties;

        r3 := @parameter3: android.net.NetworkCapabilities;

        i0 := @parameter4: int;

        r4 := @parameter5: android.net.NetworkAgentConfig;

        i1 := @parameter6: int;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r13 == null goto label05;

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r13.<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        if r2 == null goto label13;

     label11:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label12:
        goto label14;

     label13:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        if r3 == null goto label17;

     label15:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.net.NetworkCapabilities: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label16:
        goto label18;

     label17:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label18:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

     label19:
        if r4 == null goto label22;

     label20:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.net.NetworkAgentConfig: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label21:
        goto label23;

     label22:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label23:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i1);

        $r7 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(57, r5, r6, 0);

        if $z0 != 0 goto label25;

        $r10 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r10 == null goto label25;

        $r11 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r14 = interfaceinvoke $r11.<android.net.IConnectivityManager: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>(r13, r1, r2, r3, i0, r4, i1);

     label24:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return r14;

     label25:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label27;

        $r8 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r6);

        r15 = (android.net.Network) $r9;

     label26:
        goto label28;

     label27:
        r15 = null;

     label28:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return r15;

     label29:
        $r12 := @caughtexception;

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label29;
        catch java.lang.Throwable from label03 to label04 with label29;
        catch java.lang.Throwable from label05 to label06 with label29;
        catch java.lang.Throwable from label07 to label08 with label29;
        catch java.lang.Throwable from label09 to label10 with label29;
        catch java.lang.Throwable from label11 to label12 with label29;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label15 to label16 with label29;
        catch java.lang.Throwable from label17 to label18 with label29;
        catch java.lang.Throwable from label18 to label19 with label29;
        catch java.lang.Throwable from label20 to label21 with label29;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label23 to label24 with label29;
        catch java.lang.Throwable from label25 to label26 with label29;
    }

    public int registerNetworkFactory(android.os.Messenger, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;
        android.os.Messenger r8;
        int i0, i1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r8 := @parameter0: android.os.Messenger;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(52, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.net.IConnectivityManager: int registerNetworkFactory(android.os.Messenger,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int registerNetworkProvider(android.os.Messenger, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;
        android.os.Messenger r8;
        int i0, i1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r8 := @parameter0: android.os.Messenger;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(54, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        i0 = interfaceinvoke $r6.<android.net.IConnectivityManager: int registerNetworkProvider(android.os.Messenger,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void releaseNetworkRequest(android.net.NetworkRequest) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.NetworkRequest r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.NetworkRequest;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(63, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void releaseNetworkRequest(android.net.NetworkRequest)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void releasePendingNetworkRequest(android.app.PendingIntent) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.app.PendingIntent r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.app.PendingIntent;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(60, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void releasePendingNetworkRequest(android.app.PendingIntent)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean removeVpnAddress(java.lang.String, int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        int i0, i1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(74, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.IConnectivityManager: boolean removeVpnAddress(java.lang.String,int)>(r7, i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void reportInetCondition(int, int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.IConnectivityManager: void reportInetCondition(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void reportNetworkConnectivity(android.net.Network, boolean) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Network r7;
        byte b0;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.Network;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        b0 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        goto label08;

     label07:
        b0 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z1 != 0 goto label10;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label10;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void reportNetworkConnectivity(android.net.Network,boolean)>(r7, z0);

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public boolean requestBandwidthUpdate(android.net.Network) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Network r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.Network;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(51, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.IConnectivityManager: boolean requestBandwidthUpdate(android.net.Network)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities, android.os.Messenger, int, android.os.IBinder, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Messenger r1;
        int i0, i1, $i2;
        android.os.IBinder r2, $r6;
        java.lang.String r3;
        android.os.Parcel r4, r5;
        boolean $z0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;
        android.net.IConnectivityManager $r9, $r10;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, r19;
        android.net.NetworkCapabilities r16;
        android.net.NetworkRequest r17, r18;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r16 := @parameter0: android.net.NetworkCapabilities;

        r1 := @parameter1: android.os.Messenger;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.IBinder;

        i1 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r16 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r16.<android.net.NetworkCapabilities: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

     label11:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

     label13:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r6 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(58, r4, r5, 0);

        if $z0 != 0 goto label15;

        $r9 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r9 == null goto label15;

        $r10 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r17 = interfaceinvoke $r10.<android.net.IConnectivityManager: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>(r16, r1, i0, r2, i1, r3);

     label14:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r17;

     label15:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label17;

        $r7 = <android.net.NetworkRequest: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r5);

        r18 = (android.net.NetworkRequest) $r8;

     label16:
        goto label18;

     label17:
        r18 = null;

     label18:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r18;

     label19:
        $r11 := @caughtexception;

        r19 = $r11;

        goto label24;

     label20:
        $r12 := @caughtexception;

        r19 = $r12;

        goto label24;

     label21:
        $r13 := @caughtexception;

        r19 = $r13;

        goto label24;

     label22:
        $r15 := @caughtexception;

        r19 = $r15;

        goto label24;

     label23:
        $r14 := @caughtexception;

        r19 = $r14;

     label24:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r19;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
    }

    public boolean requestRouteToHostAddress(int, byte[]) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        byte[] r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

        r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.IConnectivityManager: boolean requestRouteToHostAddress(int,byte[])>(i0, r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void setAcceptPartialConnectivity(android.net.Network, boolean, boolean) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        boolean z0, z1, $z2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Network r7;
        byte b1, b2;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.Network;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        b1 = 1;

        goto label08;

     label07:
        b1 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

     label09:
        if z1 == 0 goto label10;

        b2 = 1;

        goto label11;

     label10:
        b2 = 0;

     label11:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(65, r1, r2, 0);

        if $z2 != 0 goto label13;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label13;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void setAcceptPartialConnectivity(android.net.Network,boolean,boolean)>(r7, z0, z1);

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void setAcceptUnvalidated(android.net.Network, boolean, boolean) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        boolean z0, z1, $z2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Network r7;
        byte b1, b2;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.Network;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if z0 == 0 goto label07;

        b1 = 1;

        goto label08;

     label07:
        b1 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

     label09:
        if z1 == 0 goto label10;

        b2 = 1;

        goto label11;

     label10:
        b2 = 0;

     label11:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z2 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(64, r1, r2, 0);

        if $z2 != 0 goto label13;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label13;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void setAcceptUnvalidated(android.net.Network,boolean,boolean)>(r7, z0, z1);

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void setAirplaneMode(boolean) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.IConnectivityManager: void setAirplaneMode(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean setAlwaysOnVpnPackage(int, java.lang.String, boolean, java.util.List) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        java.util.List r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z1, z2, z3, z4;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i2;
        java.lang.String r8;
        byte b1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        z2 := @parameter2: boolean;

        r1 := @parameter3: java.util.List;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label02:
        if z2 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r2.<android.os.Parcel: void writeStringList(java.util.List)>(r1);

        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r2, r3, 0);

        if $z1 != 0 goto label06;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label06;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z3 = interfaceinvoke $r6.<android.net.IConnectivityManager: boolean setAlwaysOnVpnPackage(int,java.lang.String,boolean,java.util.List)>(i0, r8, z2, r1);

     label05:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label07:
        if i2 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void setAvoidUnvalidated(android.net.Network) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Network r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.Network;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(66, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void setAvoidUnvalidated(android.net.Network)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setGlobalProxy(android.net.ProxyInfo) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.ProxyInfo r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.ProxyInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.ProxyInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void setGlobalProxy(android.net.ProxyInfo)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setProvisioningNotificationVisible(boolean, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        boolean z0, $z1;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        byte b1;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void setProvisioningNotificationVisible(boolean,int,java.lang.String)>(z0, i0, r7);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean setUnderlyingNetworksForVpn(android.net.Network[]) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Network[] r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.Network[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label2:
        z1 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r7, 0);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(75, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.IConnectivityManager: boolean setUnderlyingNetworksForVpn(android.net.Network[])>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void setVpnPackageAuthorization(java.lang.String, int, int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void setVpnPackageAuthorization(java.lang.String,int,int)>(r7, i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean shouldAvoidBadWifi() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        r6 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(69, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.IConnectivityManager: boolean shouldAvoidBadWifi()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void simulateDataStall(int, long, android.net.Network, android.os.PersistableBundle) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.PersistableBundle r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;
        android.net.Network r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r8 := @parameter2: android.net.Network;

        r1 := @parameter3: android.os.PersistableBundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l1);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.PersistableBundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(89, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.IConnectivityManager: void simulateDataStall(int,long,android.net.Network,android.os.PersistableBundle)>(i0, l1, r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void startCaptivePortalApp(android.net.Network) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Network r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.Network;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(67, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void startCaptivePortalApp(android.net.Network)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void startCaptivePortalAppInternal(android.net.Network, android.os.Bundle) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IConnectivityManager $r5, $r6;
        java.lang.Throwable $r7;
        android.net.Network r8;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r8 := @parameter0: android.net.Network;

        r1 := @parameter1: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r1 == null goto label09;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r4 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(68, r2, r3, 0);

        if $z0 != 0 goto label12;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r5 == null goto label12;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.IConnectivityManager: void startCaptivePortalAppInternal(android.net.Network,android.os.Bundle)>(r8, r1);

     label11:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void startLegacyVpn(com.android.internal.net.VpnProfile) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        com.android.internal.net.VpnProfile r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: com.android.internal.net.VpnProfile;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<com.android.internal.net.VpnProfile: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void startLegacyVpn(com.android.internal.net.VpnProfile)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void startNattKeepalive(android.net.Network, int, android.net.ISocketKeepaliveCallback, java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0, i1;
        android.net.ISocketKeepaliveCallback r1;
        java.lang.String r2, r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6, r16;
        boolean $z0;
        android.net.IConnectivityManager $r7, $r8;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14, r17;
        android.net.Network r15;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r15 := @parameter0: android.net.Network;

        i0 := @parameter1: int;

        r1 := @parameter2: android.net.ISocketKeepaliveCallback;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r15 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r15.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r1 == null goto label10;

     label08:
        r16 = interfaceinvoke r1.<android.net.ISocketKeepaliveCallback: android.os.IBinder asBinder()>();

     label09:
        goto label11;

     label10:
        r16 = null;

     label11:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r16);

     label12:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label13:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

     label14:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

     label15:
        $r6 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(77, r4, r5, 0);

        if $z0 != 0 goto label17;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r7 == null goto label17;

        $r8 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.IConnectivityManager: void startNattKeepalive(android.net.Network,int,android.net.ISocketKeepaliveCallback,java.lang.String,int,java.lang.String)>(r15, i0, r1, r2, i1, r3);

     label16:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label17:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label18:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label19:
        $r9 := @caughtexception;

        r17 = $r9;

        goto label25;

     label20:
        $r13 := @caughtexception;

        r17 = $r13;

        goto label25;

     label21:
        $r11 := @caughtexception;

        r17 = $r11;

        goto label25;

     label22:
        $r10 := @caughtexception;

        r17 = $r10;

        goto label25;

     label23:
        $r12 := @caughtexception;

        r17 = $r12;

        goto label25;

     label24:
        $r14 := @caughtexception;

        r17 = $r14;

     label25:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r17;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    public void startNattKeepaliveWithFd(android.net.Network, java.io.FileDescriptor, int, int, android.net.ISocketKeepaliveCallback, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        java.io.FileDescriptor r1;
        int i0, i1;
        android.net.ISocketKeepaliveCallback r2;
        java.lang.String r3, r4;
        android.os.Parcel r5, r6;
        android.os.IBinder $r7, r16;
        boolean $z0;
        android.net.IConnectivityManager $r8, $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, r17;
        android.net.Network r15;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r15 := @parameter0: android.net.Network;

        r1 := @parameter1: java.io.FileDescriptor;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: android.net.ISocketKeepaliveCallback;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: java.lang.String;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r15 == null goto label05;

     label03:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r15.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r5.<android.os.Parcel: void writeRawFileDescriptor(java.io.FileDescriptor)>(r1);

     label07:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

     label08:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i1);

     label09:
        if r2 == null goto label12;

     label10:
        r16 = interfaceinvoke r2.<android.net.ISocketKeepaliveCallback: android.os.IBinder asBinder()>();

     label11:
        goto label13;

     label12:
        r16 = null;

     label13:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r16);

     label14:
        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r7 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(78, r5, r6, 0);

        if $z0 != 0 goto label16;

        $r8 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r8 == null goto label16;

        $r9 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r9.<android.net.IConnectivityManager: void startNattKeepaliveWithFd(android.net.Network,java.io.FileDescriptor,int,int,android.net.ISocketKeepaliveCallback,java.lang.String,java.lang.String)>(r15, r1, i0, i1, r2, r3, r4);

     label15:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label16:
        virtualinvoke r6.<android.os.Parcel: void readException()>();

     label17:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label18:
        $r11 := @caughtexception;

        r17 = $r11;

        goto label23;

     label19:
        $r12 := @caughtexception;

        r17 = $r12;

        goto label23;

     label20:
        $r10 := @caughtexception;

        r17 = $r10;

        goto label23;

     label21:
        $r14 := @caughtexception;

        r17 = $r14;

        goto label23;

     label22:
        $r13 := @caughtexception;

        r17 = $r13;

     label23:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r17;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public android.os.IBinder startOrGetTestNetworkService() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r7, r8;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(88, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.IConnectivityManager: android.os.IBinder startOrGetTestNetworkService()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void startTcpKeepalive(android.net.Network, java.io.FileDescriptor, int, android.net.ISocketKeepaliveCallback) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        java.io.FileDescriptor r1;
        int i0;
        android.net.ISocketKeepaliveCallback r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10;
        boolean $z0;
        android.net.IConnectivityManager $r6, $r7;
        java.lang.Throwable $r8;
        android.net.Network r9;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r9 := @parameter0: android.net.Network;

        r1 := @parameter1: java.io.FileDescriptor;

        i0 := @parameter2: int;

        r2 := @parameter3: android.net.ISocketKeepaliveCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeRawFileDescriptor(java.io.FileDescriptor)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        if r2 == null goto label10;

     label08:
        r10 = interfaceinvoke r2.<android.net.ISocketKeepaliveCallback: android.os.IBinder asBinder()>();

     label09:
        goto label11;

     label10:
        r10 = null;

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r5 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(79, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.IConnectivityManager: void startTcpKeepalive(android.net.Network,java.io.FileDescriptor,int,android.net.ISocketKeepaliveCallback)>(r9, r1, i0, r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void startVpnProfile(java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void startVpnProfile(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void stopKeepalive(android.net.Network, int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.Network r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.Network;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(80, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void stopKeepalive(android.net.Network,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void stopVpnProfile(java.lang.String) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void stopVpnProfile(java.lang.String)>(r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void unregisterConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.net.IConnectivityDiagnosticsCallback r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.net.IConnectivityDiagnosticsCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.net.IConnectivityDiagnosticsCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(87, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void unregisterConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterNetworkFactory(android.os.Messenger) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.Messenger r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.os.Messenger;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(53, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void unregisterNetworkFactory(android.os.Messenger)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void unregisterNetworkProvider(android.os.Messenger) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.IConnectivityManager $r4, $r5;
        java.lang.Throwable $r6;
        android.os.Messenger r7;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r7 := @parameter0: android.os.Messenger;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(55, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.IConnectivityManager: void unregisterNetworkProvider(android.os.Messenger)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean updateLockdownVpn() throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.net.IConnectivityManager $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.net.IConnectivityManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.IConnectivityManager");

        r6 = r0.<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.IConnectivityManager: boolean updateLockdownVpn()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }
}
