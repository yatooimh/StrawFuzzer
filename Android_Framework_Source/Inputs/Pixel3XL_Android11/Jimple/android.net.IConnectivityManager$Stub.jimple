public abstract class android.net.IConnectivityManager$Stub extends android.os.Binder implements android.net.IConnectivityManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addVpnAddress;
    static final int TRANSACTION_checkMobileProvisioning;
    static final int TRANSACTION_declareNetworkRequestUnfulfillable;
    static final int TRANSACTION_deleteVpnProfile;
    static final int TRANSACTION_establishVpn;
    static final int TRANSACTION_factoryReset;
    static final int TRANSACTION_getActiveLinkProperties;
    static final int TRANSACTION_getActiveNetwork;
    static final int TRANSACTION_getActiveNetworkForUid;
    static final int TRANSACTION_getActiveNetworkInfo;
    static final int TRANSACTION_getActiveNetworkInfoForUid;
    static final int TRANSACTION_getActiveNetworkQuotaInfo;
    static final int TRANSACTION_getAllNetworkInfo;
    static final int TRANSACTION_getAllNetworkState;
    static final int TRANSACTION_getAllNetworks;
    static final int TRANSACTION_getAlwaysOnVpnPackage;
    static final int TRANSACTION_getCaptivePortalServerUrl;
    static final int TRANSACTION_getConnectionOwnerUid;
    static final int TRANSACTION_getDefaultNetworkCapabilitiesForUser;
    static final int TRANSACTION_getDefaultRequest;
    static final int TRANSACTION_getGlobalProxy;
    static final int TRANSACTION_getLastTetherError;
    static final int TRANSACTION_getLegacyVpnInfo;
    static final int TRANSACTION_getLinkProperties;
    static final int TRANSACTION_getLinkPropertiesForType;
    static final int TRANSACTION_getMobileProvisioningUrl;
    static final int TRANSACTION_getMultipathPreference;
    static final int TRANSACTION_getNetworkCapabilities;
    static final int TRANSACTION_getNetworkForType;
    static final int TRANSACTION_getNetworkInfo;
    static final int TRANSACTION_getNetworkInfoForUid;
    static final int TRANSACTION_getNetworkWatchlistConfigHash;
    static final int TRANSACTION_getProxyForNetwork;
    static final int TRANSACTION_getRestoreDefaultNetworkDelay;
    static final int TRANSACTION_getTetherableIfaces;
    static final int TRANSACTION_getTetherableUsbRegexs;
    static final int TRANSACTION_getTetherableWifiRegexs;
    static final int TRANSACTION_getTetheredIfaces;
    static final int TRANSACTION_getTetheringErroredIfaces;
    static final int TRANSACTION_getVpnConfig;
    static final int TRANSACTION_getVpnLockdownWhitelist;
    static final int TRANSACTION_isActiveNetworkMetered;
    static final int TRANSACTION_isAlwaysOnVpnPackageSupported;
    static final int TRANSACTION_isCallerCurrentAlwaysOnVpnApp;
    static final int TRANSACTION_isCallerCurrentAlwaysOnVpnLockdownApp;
    static final int TRANSACTION_isNetworkSupported;
    static final int TRANSACTION_isVpnLockdownEnabled;
    static final int TRANSACTION_listenForNetwork;
    static final int TRANSACTION_pendingListenForNetwork;
    static final int TRANSACTION_pendingRequestForNetwork;
    static final int TRANSACTION_prepareVpn;
    static final int TRANSACTION_provisionVpnProfile;
    static final int TRANSACTION_registerConnectivityDiagnosticsCallback;
    static final int TRANSACTION_registerNetworkAgent;
    static final int TRANSACTION_registerNetworkFactory;
    static final int TRANSACTION_registerNetworkProvider;
    static final int TRANSACTION_releaseNetworkRequest;
    static final int TRANSACTION_releasePendingNetworkRequest;
    static final int TRANSACTION_removeVpnAddress;
    static final int TRANSACTION_reportInetCondition;
    static final int TRANSACTION_reportNetworkConnectivity;
    static final int TRANSACTION_requestBandwidthUpdate;
    static final int TRANSACTION_requestNetwork;
    static final int TRANSACTION_requestRouteToHostAddress;
    static final int TRANSACTION_setAcceptPartialConnectivity;
    static final int TRANSACTION_setAcceptUnvalidated;
    static final int TRANSACTION_setAirplaneMode;
    static final int TRANSACTION_setAlwaysOnVpnPackage;
    static final int TRANSACTION_setAvoidUnvalidated;
    static final int TRANSACTION_setGlobalProxy;
    static final int TRANSACTION_setProvisioningNotificationVisible;
    static final int TRANSACTION_setUnderlyingNetworksForVpn;
    static final int TRANSACTION_setVpnPackageAuthorization;
    static final int TRANSACTION_shouldAvoidBadWifi;
    static final int TRANSACTION_simulateDataStall;
    static final int TRANSACTION_startCaptivePortalApp;
    static final int TRANSACTION_startCaptivePortalAppInternal;
    static final int TRANSACTION_startLegacyVpn;
    static final int TRANSACTION_startNattKeepalive;
    static final int TRANSACTION_startNattKeepaliveWithFd;
    static final int TRANSACTION_startOrGetTestNetworkService;
    static final int TRANSACTION_startTcpKeepalive;
    static final int TRANSACTION_startVpnProfile;
    static final int TRANSACTION_stopKeepalive;
    static final int TRANSACTION_stopVpnProfile;
    static final int TRANSACTION_unregisterConnectivityDiagnosticsCallback;
    static final int TRANSACTION_unregisterNetworkFactory;
    static final int TRANSACTION_unregisterNetworkProvider;
    static final int TRANSACTION_updateLockdownVpn;

    public void <init>()
    {
        android.net.IConnectivityManager$Stub r0;

        r0 := @this: android.net.IConnectivityManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.net.IConnectivityManager");

        return;
    }

    public static android.net.IConnectivityManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.net.IConnectivityManager$Stub$Proxy $r2;
        boolean $z0;
        android.net.IConnectivityManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.net.IConnectivityManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.net.IConnectivityManager;

        if $z0 == 0 goto label2;

        $r3 = (android.net.IConnectivityManager) r1;

        return $r3;

     label2:
        $r2 = new android.net.IConnectivityManager$Stub$Proxy;

        specialinvoke $r2.<android.net.IConnectivityManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.net.IConnectivityManager getDefaultImpl()
    {
        android.net.IConnectivityManager $r0;

        $r0 = <android.net.IConnectivityManager$Stub$Proxy: android.net.IConnectivityManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label90;
            case 2: goto label89;
            case 3: goto label88;
            case 4: goto label87;
            case 5: goto label86;
            case 6: goto label85;
            case 7: goto label84;
            case 8: goto label83;
            case 9: goto label82;
            case 10: goto label81;
            case 11: goto label80;
            case 12: goto label79;
            case 13: goto label78;
            case 14: goto label77;
            case 15: goto label76;
            case 16: goto label75;
            case 17: goto label74;
            case 18: goto label73;
            case 19: goto label72;
            case 20: goto label71;
            case 21: goto label70;
            case 22: goto label69;
            case 23: goto label68;
            case 24: goto label67;
            case 25: goto label66;
            case 26: goto label65;
            case 27: goto label64;
            case 28: goto label63;
            case 29: goto label62;
            case 30: goto label61;
            case 31: goto label60;
            case 32: goto label59;
            case 33: goto label58;
            case 34: goto label57;
            case 35: goto label56;
            case 36: goto label55;
            case 37: goto label54;
            case 38: goto label53;
            case 39: goto label52;
            case 40: goto label51;
            case 41: goto label50;
            case 42: goto label49;
            case 43: goto label48;
            case 44: goto label47;
            case 45: goto label46;
            case 46: goto label45;
            case 47: goto label44;
            case 48: goto label43;
            case 49: goto label42;
            case 50: goto label41;
            case 51: goto label40;
            case 52: goto label39;
            case 53: goto label38;
            case 54: goto label37;
            case 55: goto label36;
            case 56: goto label35;
            case 57: goto label34;
            case 58: goto label33;
            case 59: goto label32;
            case 60: goto label31;
            case 61: goto label30;
            case 62: goto label29;
            case 63: goto label28;
            case 64: goto label27;
            case 65: goto label26;
            case 66: goto label25;
            case 67: goto label24;
            case 68: goto label23;
            case 69: goto label22;
            case 70: goto label21;
            case 71: goto label20;
            case 72: goto label19;
            case 73: goto label18;
            case 74: goto label17;
            case 75: goto label16;
            case 76: goto label15;
            case 77: goto label14;
            case 78: goto label13;
            case 79: goto label12;
            case 80: goto label11;
            case 81: goto label10;
            case 82: goto label09;
            case 83: goto label08;
            case 84: goto label07;
            case 85: goto label06;
            case 86: goto label05;
            case 87: goto label04;
            case 88: goto label03;
            case 89: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "simulateDataStall";

     label03:
        return "startOrGetTestNetworkService";

     label04:
        return "unregisterConnectivityDiagnosticsCallback";

     label05:
        return "registerConnectivityDiagnosticsCallback";

     label06:
        return "isCallerCurrentAlwaysOnVpnLockdownApp";

     label07:
        return "isCallerCurrentAlwaysOnVpnApp";

     label08:
        return "getConnectionOwnerUid";

     label09:
        return "getNetworkWatchlistConfigHash";

     label10:
        return "getCaptivePortalServerUrl";

     label11:
        return "stopKeepalive";

     label12:
        return "startTcpKeepalive";

     label13:
        return "startNattKeepaliveWithFd";

     label14:
        return "startNattKeepalive";

     label15:
        return "factoryReset";

     label16:
        return "setUnderlyingNetworksForVpn";

     label17:
        return "removeVpnAddress";

     label18:
        return "addVpnAddress";

     label19:
        return "getRestoreDefaultNetworkDelay";

     label20:
        return "getDefaultRequest";

     label21:
        return "getMultipathPreference";

     label22:
        return "shouldAvoidBadWifi";

     label23:
        return "startCaptivePortalAppInternal";

     label24:
        return "startCaptivePortalApp";

     label25:
        return "setAvoidUnvalidated";

     label26:
        return "setAcceptPartialConnectivity";

     label27:
        return "setAcceptUnvalidated";

     label28:
        return "releaseNetworkRequest";

     label29:
        return "pendingListenForNetwork";

     label30:
        return "listenForNetwork";

     label31:
        return "releasePendingNetworkRequest";

     label32:
        return "pendingRequestForNetwork";

     label33:
        return "requestNetwork";

     label34:
        return "registerNetworkAgent";

     label35:
        return "declareNetworkRequestUnfulfillable";

     label36:
        return "unregisterNetworkProvider";

     label37:
        return "registerNetworkProvider";

     label38:
        return "unregisterNetworkFactory";

     label39:
        return "registerNetworkFactory";

     label40:
        return "requestBandwidthUpdate";

     label41:
        return "setAirplaneMode";

     label42:
        return "setProvisioningNotificationVisible";

     label43:
        return "getMobileProvisioningUrl";

     label44:
        return "checkMobileProvisioning";

     label45:
        return "getVpnLockdownWhitelist";

     label46:
        return "isVpnLockdownEnabled";

     label47:
        return "getAlwaysOnVpnPackage";

     label48:
        return "setAlwaysOnVpnPackage";

     label49:
        return "isAlwaysOnVpnPackageSupported";

     label50:
        return "updateLockdownVpn";

     label51:
        return "getLegacyVpnInfo";

     label52:
        return "startLegacyVpn";

     label53:
        return "getVpnConfig";

     label54:
        return "stopVpnProfile";

     label55:
        return "startVpnProfile";

     label56:
        return "deleteVpnProfile";

     label57:
        return "provisionVpnProfile";

     label58:
        return "establishVpn";

     label59:
        return "setVpnPackageAuthorization";

     label60:
        return "prepareVpn";

     label61:
        return "getProxyForNetwork";

     label62:
        return "setGlobalProxy";

     label63:
        return "getGlobalProxy";

     label64:
        return "reportNetworkConnectivity";

     label65:
        return "reportInetCondition";

     label66:
        return "getTetherableWifiRegexs";

     label67:
        return "getTetherableUsbRegexs";

     label68:
        return "getTetheringErroredIfaces";

     label69:
        return "getTetheredIfaces";

     label70:
        return "getTetherableIfaces";

     label71:
        return "getLastTetherError";

     label72:
        return "requestRouteToHostAddress";

     label73:
        return "isActiveNetworkMetered";

     label74:
        return "getActiveNetworkQuotaInfo";

     label75:
        return "getAllNetworkState";

     label76:
        return "getNetworkCapabilities";

     label77:
        return "getLinkProperties";

     label78:
        return "getLinkPropertiesForType";

     label79:
        return "getActiveLinkProperties";

     label80:
        return "isNetworkSupported";

     label81:
        return "getDefaultNetworkCapabilitiesForUser";

     label82:
        return "getAllNetworks";

     label83:
        return "getNetworkForType";

     label84:
        return "getAllNetworkInfo";

     label85:
        return "getNetworkInfoForUid";

     label86:
        return "getNetworkInfo";

     label87:
        return "getActiveNetworkInfoForUid";

     label88:
        return "getActiveNetworkInfo";

     label89:
        return "getActiveNetworkForUid";

     label90:
        return "getActiveNetwork";
    }

    public static boolean setDefaultImpl(android.net.IConnectivityManager)
    {
        android.net.IConnectivityManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.net.IConnectivityManager;

        $r1 = <android.net.IConnectivityManager$Stub$Proxy: android.net.IConnectivityManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.net.IConnectivityManager$Stub$Proxy: android.net.IConnectivityManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.net.IConnectivityManager$Stub r0;

        r0 := @this: android.net.IConnectivityManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.net.IConnectivityManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.net.IConnectivityManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.net.IConnectivityManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.net.IConnectivityManager$Stub r0;
        android.os.Parcel r1, r135;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, i89, i90, i91, i92, i93, i94, i95, i96, i97, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118;
        long l1;
        android.os.Parcelable$Creator $r2, $r4, $r10, $r12, $r14, $r19, $r26, $r32, $r34, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r56, $r58, $r62, $r64, $r66, $r69, $r71, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89, $r91, $r94, $r96, $r99, $r101, $r106, $r112, $r114, $r119, $r121, $r123, $r128, $r130, $r133;
        java.lang.Object $r3, $r5, $r11, $r13, $r15, $r20, $r27, $r33, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r57, $r59, $r63, $r65, $r67, $r70, $r72, $r76, $r78, $r80, $r82, $r84, $r86, $r88, $r90, $r92, $r95, $r97, $r100, $r102, $r107, $r113, $r115, $r120, $r122, $r124, $r129, $r131, $r134;
        android.os.IBinder $r6, $r8, $r17, $r22, $r28, $r60, $r73, r138;
        android.net.IConnectivityDiagnosticsCallback $r7, r139;
        java.lang.String $r9, $r24, $r25, $r30, $r31, $r37, $r38, $r55, $r61, $r68, $r74, $r93, $r98, $r103, $r105, $r108, $r109, $r110, $r111, $r116, $r117, $r118, $r125, $r127, $r132, r143, r181, r183, r184;
        java.io.FileDescriptor $r16, $r21;
        android.net.ISocketKeepaliveCallback $r18, $r23, $r29;
        java.lang.Object[] $r35;
        android.net.Network[] $r36, r210;
        java.util.ArrayList $r104;
        byte[] $r126, r142;
        boolean $z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27, z28, z29, z30, z31;
        android.net.Network r136, r144, r145, r146, r147, r149, r150, r152, r153, r154, r155, r174, r180, r191, r195, r203, r205, r211, r213, r218, r219;
        android.os.PersistableBundle r137;
        android.net.NetworkRequest r140, r148, r156, r161, r165, r168, r175;
        android.net.ConnectionInfo r141;
        android.os.Bundle r151;
        android.net.NetworkCapabilities r157, r159, r163, r166, r172, r204;
        android.app.PendingIntent r158, r162, r164;
        android.os.Messenger r160, r167, r169, r176, r177, r178, r179;
        android.net.NetworkInfo r170, r214, r215, r216, r217;
        android.net.LinkProperties r171, r206, r207, r208;
        android.net.NetworkAgentConfig r173;
        java.util.List r182;
        com.android.internal.net.LegacyVpnInfo r185;
        com.android.internal.net.VpnProfile r186, r188;
        com.android.internal.net.VpnConfig r187, r189;
        android.os.ParcelFileDescriptor r190;
        android.net.ProxyInfo r192, r193, r194;
        java.lang.String[] r196, r197, r198, r199, r200;
        android.net.NetworkQuotaInfo r201;
        android.net.NetworkState[] r202;
        android.net.NetworkCapabilities[] r209;
        android.net.NetworkInfo[] r212;

        r0 := @this: android.net.IConnectivityManager$Stub;

        i89 := @parameter0: int;

        r135 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i89 == 1598968902 goto label241;

        z5 = 0;

        z6 = 0;

        tableswitch(i89)
        {
            case 1: goto label238;
            case 2: goto label233;
            case 3: goto label230;
            case 4: goto label225;
            case 5: goto label222;
            case 6: goto label215;
            case 7: goto label214;
            case 8: goto label211;
            case 9: goto label210;
            case 10: goto label209;
            case 11: goto label208;
            case 12: goto label205;
            case 13: goto label202;
            case 14: goto label197;
            case 15: goto label192;
            case 16: goto label191;
            case 17: goto label188;
            case 18: goto label187;
            case 19: goto label186;
            case 20: goto label185;
            case 21: goto label184;
            case 22: goto label183;
            case 23: goto label182;
            case 24: goto label181;
            case 25: goto label180;
            case 26: goto label179;
            case 27: goto label175;
            case 28: goto label172;
            case 29: goto label169;
            case 30: goto label164;
            case 31: goto label163;
            case 32: goto label162;
            case 33: goto label157;
            case 34: goto label154;
            case 35: goto label153;
            case 36: goto label152;
            case 37: goto label151;
            case 38: goto label148;
            case 39: goto label145;
            case 40: goto label142;
            case 41: goto label141;
            case 42: goto label140;
            case 43: goto label138;
            case 44: goto label137;
            case 45: goto label136;
            case 46: goto label135;
            case 47: goto label134;
            case 48: goto label133;
            case 49: goto label131;
            case 50: goto label129;
            case 51: goto label126;
            case 52: goto label123;
            case 53: goto label120;
            case 54: goto label117;
            case 55: goto label114;
            case 56: goto label111;
            case 57: goto label098;
            case 58: goto label091;
            case 59: goto label084;
            case 60: goto label081;
            case 61: goto label074;
            case 62: goto label069;
            case 63: goto label066;
            case 64: goto label060;
            case 65: goto label054;
            case 66: goto label051;
            case 67: goto label048;
            case 68: goto label043;
            case 69: goto label042;
            case 70: goto label039;
            case 71: goto label036;
            case 72: goto label035;
            case 73: goto label034;
            case 74: goto label033;
            case 75: goto label032;
            case 76: goto label031;
            case 77: goto label028;
            case 78: goto label025;
            case 79: goto label022;
            case 80: goto label019;
            case 81: goto label018;
            case 82: goto label017;
            case 83: goto label014;
            case 84: goto label013;
            case 85: goto label012;
            case 86: goto label009;
            case 87: goto label008;
            case 88: goto label007;
            case 89: goto label002;
            default: goto label001;
        };

     label001:
        $z4 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i89, r135, r1, i0);

        return $z4;

     label002:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        i90 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        l1 = virtualinvoke r135.<android.os.Parcel: long readLong()>();

        $i2 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label003;

        $r4 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r136 = (android.net.Network) $r5;

        goto label004;

     label003:
        r136 = null;

     label004:
        $i3 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label005;

        $r2 = <android.os.PersistableBundle: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r137 = (android.os.PersistableBundle) $r3;

        goto label006;

     label005:
        r137 = null;

     label006:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void simulateDataStall(int,long,android.net.Network,android.os.PersistableBundle)>(i90, l1, r136, r137);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label007:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r138 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.os.IBinder startOrGetTestNetworkService()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r138);

        return 1;

     label008:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r6 = virtualinvoke r135.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r7 = staticinvoke <android.net.IConnectivityDiagnosticsCallback$Stub: android.net.IConnectivityDiagnosticsCallback asInterface(android.os.IBinder)>($r6);

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void unregisterConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback)>($r7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label009:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r8 = virtualinvoke r135.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r139 = staticinvoke <android.net.IConnectivityDiagnosticsCallback$Stub: android.net.IConnectivityDiagnosticsCallback asInterface(android.os.IBinder)>($r8);

        $i4 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label010;

        $r10 = <android.net.NetworkRequest: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r140 = (android.net.NetworkRequest) $r11;

        goto label011;

     label010:
        r140 = null;

     label011:
        $r9 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>(r139, r140, $r9);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label012:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        z7 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean isCallerCurrentAlwaysOnVpnLockdownApp()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i103 = (int) z7;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i103);

        return 1;

     label013:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        z8 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean isCallerCurrentAlwaysOnVpnApp()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i104 = (int) z8;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i104);

        return 1;

     label014:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i5 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label015;

        $r12 = <android.net.ConnectionInfo: android.os.Parcelable$Creator CREATOR>;

        $r13 = interfaceinvoke $r12.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r141 = (android.net.ConnectionInfo) $r13;

        goto label016;

     label015:
        r141 = null;

     label016:
        i91 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: int getConnectionOwnerUid(android.net.ConnectionInfo)>(r141);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i91);

        return 1;

     label017:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r142 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: byte[] getNetworkWatchlistConfigHash()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r142);

        return 1;

     label018:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r143 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: java.lang.String getCaptivePortalServerUrl()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r143);

        return 1;

     label019:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i6 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label020;

        $r14 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r15 = interfaceinvoke $r14.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r144 = (android.net.Network) $r15;

        goto label021;

     label020:
        r144 = null;

     label021:
        $i7 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void stopKeepalive(android.net.Network,int)>(r144, $i7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label022:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i8 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i8 == 0 goto label023;

        $r19 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r20 = interfaceinvoke $r19.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r145 = (android.net.Network) $r20;

        goto label024;

     label023:
        r145 = null;

     label024:
        $r16 = virtualinvoke r135.<android.os.Parcel: java.io.FileDescriptor readRawFileDescriptor()>();

        $i9 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $r17 = virtualinvoke r135.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r18 = staticinvoke <android.net.ISocketKeepaliveCallback$Stub: android.net.ISocketKeepaliveCallback asInterface(android.os.IBinder)>($r17);

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void startTcpKeepalive(android.net.Network,java.io.FileDescriptor,int,android.net.ISocketKeepaliveCallback)>(r145, $r16, $i9, $r18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label025:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i10 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i10 == 0 goto label026;

        $r26 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r27 = interfaceinvoke $r26.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r146 = (android.net.Network) $r27;

        goto label027;

     label026:
        r146 = null;

     label027:
        $r21 = virtualinvoke r135.<android.os.Parcel: java.io.FileDescriptor readRawFileDescriptor()>();

        $i11 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $i12 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $r22 = virtualinvoke r135.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r23 = staticinvoke <android.net.ISocketKeepaliveCallback$Stub: android.net.ISocketKeepaliveCallback asInterface(android.os.IBinder)>($r22);

        $r24 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        $r25 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void startNattKeepaliveWithFd(android.net.Network,java.io.FileDescriptor,int,int,android.net.ISocketKeepaliveCallback,java.lang.String,java.lang.String)>(r146, $r21, $i11, $i12, $r23, $r24, $r25);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label028:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i13 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i13 == 0 goto label029;

        $r32 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r33 = interfaceinvoke $r32.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r147 = (android.net.Network) $r33;

        goto label030;

     label029:
        r147 = null;

     label030:
        $i14 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $r28 = virtualinvoke r135.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r29 = staticinvoke <android.net.ISocketKeepaliveCallback$Stub: android.net.ISocketKeepaliveCallback asInterface(android.os.IBinder)>($r28);

        $r30 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        $i15 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $r31 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void startNattKeepalive(android.net.Network,int,android.net.ISocketKeepaliveCallback,java.lang.String,int,java.lang.String)>(r147, $i14, $r29, $r30, $i15, $r31);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label031:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void factoryReset()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label032:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r34 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r35 = virtualinvoke r135.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r34);

        $r36 = (android.net.Network[]) $r35;

        z9 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean setUnderlyingNetworksForVpn(android.net.Network[])>($r36);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i105 = (int) z9;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i105);

        return 1;

     label033:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r37 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        $i16 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        z10 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean removeVpnAddress(java.lang.String,int)>($r37, $i16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i106 = (int) z10;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i106);

        return 1;

     label034:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r38 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        $i17 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        z11 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean addVpnAddress(java.lang.String,int)>($r38, $i17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i107 = (int) z11;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i107);

        return 1;

     label035:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i18 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        i92 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: int getRestoreDefaultNetworkDelay(int)>($i18);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i92);

        return 1;

     label036:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r148 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkRequest getDefaultRequest()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r148 == null goto label037;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r148.<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label038;

     label037:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label038:
        return 1;

     label039:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i19 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i19 == 0 goto label040;

        $r39 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r40 = interfaceinvoke $r39.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r149 = (android.net.Network) $r40;

        goto label041;

     label040:
        r149 = null;

     label041:
        i93 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: int getMultipathPreference(android.net.Network)>(r149);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i93);

        return 1;

     label042:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        z12 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean shouldAvoidBadWifi()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i108 = (int) z12;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i108);

        return 1;

     label043:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i20 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i20 == 0 goto label044;

        $r43 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r44 = interfaceinvoke $r43.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r150 = (android.net.Network) $r44;

        goto label045;

     label044:
        r150 = null;

     label045:
        $i21 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i21 == 0 goto label046;

        $r41 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r42 = interfaceinvoke $r41.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r151 = (android.os.Bundle) $r42;

        goto label047;

     label046:
        r151 = null;

     label047:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void startCaptivePortalAppInternal(android.net.Network,android.os.Bundle)>(r150, r151);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label048:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i22 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i22 == 0 goto label049;

        $r45 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r46 = interfaceinvoke $r45.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r152 = (android.net.Network) $r46;

        goto label050;

     label049:
        r152 = null;

     label050:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void startCaptivePortalApp(android.net.Network)>(r152);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label051:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i23 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i23 == 0 goto label052;

        $r47 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r48 = interfaceinvoke $r47.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r153 = (android.net.Network) $r48;

        goto label053;

     label052:
        r153 = null;

     label053:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void setAvoidUnvalidated(android.net.Network)>(r153);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label054:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i24 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i24 == 0 goto label055;

        $r49 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r50 = interfaceinvoke $r49.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r154 = (android.net.Network) $r50;

        goto label056;

     label055:
        r154 = null;

     label056:
        $i25 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i25 == 0 goto label057;

        z13 = 1;

        goto label058;

     label057:
        z13 = 0;

     label058:
        $i26 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i26 == 0 goto label059;

        z6 = 1;

     label059:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void setAcceptPartialConnectivity(android.net.Network,boolean,boolean)>(r154, z13, z6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label060:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i27 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i27 == 0 goto label061;

        $r51 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r52 = interfaceinvoke $r51.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r155 = (android.net.Network) $r52;

        goto label062;

     label061:
        r155 = null;

     label062:
        $i28 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i28 == 0 goto label063;

        z14 = 1;

        goto label064;

     label063:
        z14 = 0;

     label064:
        z15 = 0;

        $i29 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i29 == 0 goto label065;

        z15 = 1;

     label065:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void setAcceptUnvalidated(android.net.Network,boolean,boolean)>(r155, z14, z15);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label066:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i30 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i30 == 0 goto label067;

        $r53 = <android.net.NetworkRequest: android.os.Parcelable$Creator CREATOR>;

        $r54 = interfaceinvoke $r53.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r156 = (android.net.NetworkRequest) $r54;

        goto label068;

     label067:
        r156 = null;

     label068:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void releaseNetworkRequest(android.net.NetworkRequest)>(r156);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label069:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i31 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i31 == 0 goto label070;

        $r58 = <android.net.NetworkCapabilities: android.os.Parcelable$Creator CREATOR>;

        $r59 = interfaceinvoke $r58.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r157 = (android.net.NetworkCapabilities) $r59;

        goto label071;

     label070:
        r157 = null;

     label071:
        $i32 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i32 == 0 goto label072;

        $r56 = <android.app.PendingIntent: android.os.Parcelable$Creator CREATOR>;

        $r57 = interfaceinvoke $r56.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r158 = (android.app.PendingIntent) $r57;

        goto label073;

     label072:
        r158 = null;

     label073:
        $r55 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>(r157, r158, $r55);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label074:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i33 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i33 == 0 goto label075;

        $r64 = <android.net.NetworkCapabilities: android.os.Parcelable$Creator CREATOR>;

        $r65 = interfaceinvoke $r64.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r159 = (android.net.NetworkCapabilities) $r65;

        goto label076;

     label075:
        r159 = null;

     label076:
        $i34 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i34 == 0 goto label077;

        $r62 = <android.os.Messenger: android.os.Parcelable$Creator CREATOR>;

        $r63 = interfaceinvoke $r62.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r160 = (android.os.Messenger) $r63;

        goto label078;

     label077:
        r160 = null;

     label078:
        $r60 = virtualinvoke r135.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r61 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        r161 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>(r159, r160, $r60, $r61);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r161 == null goto label079;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r161.<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label080;

     label079:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label080:
        return 1;

     label081:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i35 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i35 == 0 goto label082;

        $r66 = <android.app.PendingIntent: android.os.Parcelable$Creator CREATOR>;

        $r67 = interfaceinvoke $r66.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r162 = (android.app.PendingIntent) $r67;

        goto label083;

     label082:
        r162 = null;

     label083:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void releasePendingNetworkRequest(android.app.PendingIntent)>(r162);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label084:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i36 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i36 == 0 goto label085;

        $r71 = <android.net.NetworkCapabilities: android.os.Parcelable$Creator CREATOR>;

        $r72 = interfaceinvoke $r71.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r163 = (android.net.NetworkCapabilities) $r72;

        goto label086;

     label085:
        r163 = null;

     label086:
        $i37 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i37 == 0 goto label087;

        $r69 = <android.app.PendingIntent: android.os.Parcelable$Creator CREATOR>;

        $r70 = interfaceinvoke $r69.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r164 = (android.app.PendingIntent) $r70;

        goto label088;

     label087:
        r164 = null;

     label088:
        $r68 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        r165 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>(r163, r164, $r68);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r165 == null goto label089;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r165.<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label090;

     label089:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label090:
        return 1;

     label091:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i38 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i38 == 0 goto label092;

        $r77 = <android.net.NetworkCapabilities: android.os.Parcelable$Creator CREATOR>;

        $r78 = interfaceinvoke $r77.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r166 = (android.net.NetworkCapabilities) $r78;

        goto label093;

     label092:
        r166 = null;

     label093:
        $i39 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i39 == 0 goto label094;

        $r75 = <android.os.Messenger: android.os.Parcelable$Creator CREATOR>;

        $r76 = interfaceinvoke $r75.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r167 = (android.os.Messenger) $r76;

        goto label095;

     label094:
        r167 = null;

     label095:
        $i40 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $r73 = virtualinvoke r135.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i41 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $r74 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        r168 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>(r166, r167, $i40, $r73, $i41, $r74);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r168 == null goto label096;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r168.<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label097;

     label096:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label097:
        return 1;

     label098:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i42 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i42 == 0 goto label099;

        $r87 = <android.os.Messenger: android.os.Parcelable$Creator CREATOR>;

        $r88 = interfaceinvoke $r87.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r169 = (android.os.Messenger) $r88;

        goto label100;

     label099:
        r169 = null;

     label100:
        $i43 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i43 == 0 goto label101;

        $r85 = <android.net.NetworkInfo: android.os.Parcelable$Creator CREATOR>;

        $r86 = interfaceinvoke $r85.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r170 = (android.net.NetworkInfo) $r86;

        goto label102;

     label101:
        r170 = null;

     label102:
        $i44 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i44 == 0 goto label103;

        $r83 = <android.net.LinkProperties: android.os.Parcelable$Creator CREATOR>;

        $r84 = interfaceinvoke $r83.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r171 = (android.net.LinkProperties) $r84;

        goto label104;

     label103:
        r171 = null;

     label104:
        $i45 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i45 == 0 goto label105;

        $r81 = <android.net.NetworkCapabilities: android.os.Parcelable$Creator CREATOR>;

        $r82 = interfaceinvoke $r81.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r172 = (android.net.NetworkCapabilities) $r82;

        goto label106;

     label105:
        r172 = null;

     label106:
        i94 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $i46 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i46 == 0 goto label107;

        $r79 = <android.net.NetworkAgentConfig: android.os.Parcelable$Creator CREATOR>;

        $r80 = interfaceinvoke $r79.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r173 = (android.net.NetworkAgentConfig) $r80;

        goto label108;

     label107:
        r173 = null;

     label108:
        $i47 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        r174 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>(r169, r170, r171, r172, i94, r173, $i47);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r174 == null goto label109;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r174.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label110;

     label109:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label110:
        return 1;

     label111:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i48 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i48 == 0 goto label112;

        $r89 = <android.net.NetworkRequest: android.os.Parcelable$Creator CREATOR>;

        $r90 = interfaceinvoke $r89.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r175 = (android.net.NetworkRequest) $r90;

        goto label113;

     label112:
        r175 = null;

     label113:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>(r175);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label114:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i49 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i49 == 0 goto label115;

        $r91 = <android.os.Messenger: android.os.Parcelable$Creator CREATOR>;

        $r92 = interfaceinvoke $r91.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r176 = (android.os.Messenger) $r92;

        goto label116;

     label115:
        r176 = null;

     label116:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void unregisterNetworkProvider(android.os.Messenger)>(r176);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label117:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i50 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i50 == 0 goto label118;

        $r94 = <android.os.Messenger: android.os.Parcelable$Creator CREATOR>;

        $r95 = interfaceinvoke $r94.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r177 = (android.os.Messenger) $r95;

        goto label119;

     label118:
        r177 = null;

     label119:
        $r93 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        i95 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: int registerNetworkProvider(android.os.Messenger,java.lang.String)>(r177, $r93);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i95);

        return 1;

     label120:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i51 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i51 == 0 goto label121;

        $r96 = <android.os.Messenger: android.os.Parcelable$Creator CREATOR>;

        $r97 = interfaceinvoke $r96.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r178 = (android.os.Messenger) $r97;

        goto label122;

     label121:
        r178 = null;

     label122:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void unregisterNetworkFactory(android.os.Messenger)>(r178);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label123:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i52 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i52 == 0 goto label124;

        $r99 = <android.os.Messenger: android.os.Parcelable$Creator CREATOR>;

        $r100 = interfaceinvoke $r99.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r179 = (android.os.Messenger) $r100;

        goto label125;

     label124:
        r179 = null;

     label125:
        $r98 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        i96 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: int registerNetworkFactory(android.os.Messenger,java.lang.String)>(r179, $r98);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i96);

        return 1;

     label126:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i53 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i53 == 0 goto label127;

        $r101 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r102 = interfaceinvoke $r101.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r180 = (android.net.Network) $r102;

        goto label128;

     label127:
        r180 = null;

     label128:
        z16 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean requestBandwidthUpdate(android.net.Network)>(r180);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i109 = (int) z16;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i109);

        return 1;

     label129:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i54 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i54 == 0 goto label130;

        z5 = 1;

     label130:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void setAirplaneMode(boolean)>(z5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label131:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        z17 = 0;

        $i55 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i55 == 0 goto label132;

        z17 = 1;

     label132:
        $i56 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $r103 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void setProvisioningNotificationVisible(boolean,int,java.lang.String)>(z17, $i56, $r103);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label133:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r181 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: java.lang.String getMobileProvisioningUrl()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r181);

        return 1;

     label134:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i57 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        i97 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: int checkMobileProvisioning(int)>($i57);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i97);

        return 1;

     label135:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i58 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        r182 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: java.util.List getVpnLockdownWhitelist(int)>($i58);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>(r182);

        return 1;

     label136:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i59 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        z18 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean isVpnLockdownEnabled(int)>($i59);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i110 = (int) z18;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i110);

        return 1;

     label137:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i60 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        r183 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: java.lang.String getAlwaysOnVpnPackage(int)>($i60);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r183);

        return 1;

     label138:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        i98 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        r184 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        z19 = 0;

        $i61 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i61 == 0 goto label139;

        z19 = 1;

     label139:
        $r104 = virtualinvoke r135.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        z20 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean setAlwaysOnVpnPackage(int,java.lang.String,boolean,java.util.List)>(i98, r184, z19, $r104);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i111 = (int) z20;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i111);

        return 1;

     label140:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i62 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $r105 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        z21 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean isAlwaysOnVpnPackageSupported(int,java.lang.String)>($i62, $r105);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i112 = (int) z21;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i112);

        return 1;

     label141:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        z22 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean updateLockdownVpn()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i113 = (int) z22;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i113);

        return 1;

     label142:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i63 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        r185 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int)>($i63);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r185 == null goto label143;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r185.<com.android.internal.net.LegacyVpnInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label144;

     label143:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label144:
        return 1;

     label145:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i64 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i64 == 0 goto label146;

        $r106 = <com.android.internal.net.VpnProfile: android.os.Parcelable$Creator CREATOR>;

        $r107 = interfaceinvoke $r106.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r186 = (com.android.internal.net.VpnProfile) $r107;

        goto label147;

     label146:
        r186 = null;

     label147:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void startLegacyVpn(com.android.internal.net.VpnProfile)>(r186);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label148:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i65 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        r187 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: com.android.internal.net.VpnConfig getVpnConfig(int)>($i65);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r187 == null goto label149;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r187.<com.android.internal.net.VpnConfig: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label150;

     label149:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label150:
        return 1;

     label151:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r108 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void stopVpnProfile(java.lang.String)>($r108);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label152:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r109 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void startVpnProfile(java.lang.String)>($r109);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label153:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r110 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void deleteVpnProfile(java.lang.String)>($r110);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label154:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i66 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i66 == 0 goto label155;

        $r112 = <com.android.internal.net.VpnProfile: android.os.Parcelable$Creator CREATOR>;

        $r113 = interfaceinvoke $r112.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r188 = (com.android.internal.net.VpnProfile) $r113;

        goto label156;

     label155:
        r188 = null;

     label156:
        $r111 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        z23 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>(r188, $r111);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i114 = (int) z23;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i114);

        return 1;

     label157:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i67 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i67 == 0 goto label158;

        $r114 = <com.android.internal.net.VpnConfig: android.os.Parcelable$Creator CREATOR>;

        $r115 = interfaceinvoke $r114.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r189 = (com.android.internal.net.VpnConfig) $r115;

        goto label159;

     label158:
        r189 = null;

     label159:
        r190 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>(r189);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r190 == null goto label160;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r190.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label161;

     label160:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label161:
        return 1;

     label162:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r116 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        $i68 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $i69 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void setVpnPackageAuthorization(java.lang.String,int,int)>($r116, $i68, $i69);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label163:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r117 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        $r118 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        $i70 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        z24 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean prepareVpn(java.lang.String,java.lang.String,int)>($r117, $r118, $i70);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i115 = (int) z24;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i115);

        return 1;

     label164:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i71 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i71 == 0 goto label165;

        $r119 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r120 = interfaceinvoke $r119.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r191 = (android.net.Network) $r120;

        goto label166;

     label165:
        r191 = null;

     label166:
        r192 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.ProxyInfo getProxyForNetwork(android.net.Network)>(r191);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r192 == null goto label167;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r192.<android.net.ProxyInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label168;

     label167:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label168:
        return 1;

     label169:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i72 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i72 == 0 goto label170;

        $r121 = <android.net.ProxyInfo: android.os.Parcelable$Creator CREATOR>;

        $r122 = interfaceinvoke $r121.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r193 = (android.net.ProxyInfo) $r122;

        goto label171;

     label170:
        r193 = null;

     label171:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void setGlobalProxy(android.net.ProxyInfo)>(r193);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label172:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r194 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.ProxyInfo getGlobalProxy()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r194 == null goto label173;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r194.<android.net.ProxyInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label174;

     label173:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label174:
        return 1;

     label175:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i73 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i73 == 0 goto label176;

        $r123 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r124 = interfaceinvoke $r123.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r195 = (android.net.Network) $r124;

        goto label177;

     label176:
        r195 = null;

     label177:
        z25 = 0;

        $i74 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i74 == 0 goto label178;

        z25 = 1;

     label178:
        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void reportNetworkConnectivity(android.net.Network,boolean)>(r195, z25);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label179:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i75 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $i76 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.IConnectivityManager$Stub: void reportInetCondition(int,int)>($i75, $i76);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label180:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r196 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: java.lang.String[] getTetherableWifiRegexs()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r196);

        return 1;

     label181:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r197 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: java.lang.String[] getTetherableUsbRegexs()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r197);

        return 1;

     label182:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r198 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: java.lang.String[] getTetheringErroredIfaces()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r198);

        return 1;

     label183:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r199 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: java.lang.String[] getTetheredIfaces()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r199);

        return 1;

     label184:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r200 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: java.lang.String[] getTetherableIfaces()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r200);

        return 1;

     label185:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $r125 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        i99 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: int getLastTetherError(java.lang.String)>($r125);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i99);

        return 1;

     label186:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i77 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $r126 = virtualinvoke r135.<android.os.Parcel: byte[] createByteArray()>();

        z26 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean requestRouteToHostAddress(int,byte[])>($i77, $r126);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i116 = (int) z26;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i116);

        return 1;

     label187:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        z27 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean isActiveNetworkMetered()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i117 = (int) z27;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i117);

        return 1;

     label188:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r201 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r201 == null goto label189;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r201.<android.net.NetworkQuotaInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label190;

     label189:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label190:
        return 1;

     label191:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r202 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkState[] getAllNetworkState()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r202, 1);

        return 1;

     label192:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i78 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i78 == 0 goto label193;

        $r128 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r129 = interfaceinvoke $r128.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r203 = (android.net.Network) $r129;

        goto label194;

     label193:
        r203 = null;

     label194:
        $r127 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        r204 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network,java.lang.String)>(r203, $r127);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r204 == null goto label195;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r204.<android.net.NetworkCapabilities: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label196;

     label195:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label196:
        return 1;

     label197:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i79 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i79 == 0 goto label198;

        $r130 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r131 = interfaceinvoke $r130.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r205 = (android.net.Network) $r131;

        goto label199;

     label198:
        r205 = null;

     label199:
        r206 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.LinkProperties getLinkProperties(android.net.Network)>(r205);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r206 == null goto label200;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r206.<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label201;

     label200:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label201:
        return 1;

     label202:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i80 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        r207 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.LinkProperties getLinkPropertiesForType(int)>($i80);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r207 == null goto label203;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r207.<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label204;

     label203:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label204:
        return 1;

     label205:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r208 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.LinkProperties getActiveLinkProperties()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r208 == null goto label206;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r208.<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label207;

     label206:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label207:
        return 1;

     label208:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i81 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        z28 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: boolean isNetworkSupported(int)>($i81);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i118 = (int) z28;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i118);

        return 1;

     label209:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i82 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $r132 = virtualinvoke r135.<android.os.Parcel: java.lang.String readString()>();

        r209 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int,java.lang.String)>($i82, $r132);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r209, 1);

        return 1;

     label210:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r210 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.Network[] getAllNetworks()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r210, 1);

        return 1;

     label211:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i83 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        r211 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.Network getNetworkForType(int)>($i83);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r211 == null goto label212;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r211.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label213;

     label212:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label213:
        return 1;

     label214:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r212 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkInfo[] getAllNetworkInfo()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r212, 1);

        return 1;

     label215:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i84 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i84 == 0 goto label216;

        $r133 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r134 = interfaceinvoke $r133.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r135);

        r213 = (android.net.Network) $r134;

        goto label217;

     label216:
        r213 = null;

     label217:
        i100 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $i85 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i85 == 0 goto label218;

        z29 = 1;

        goto label219;

     label218:
        z29 = 0;

     label219:
        r214 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkInfo getNetworkInfoForUid(android.net.Network,int,boolean)>(r213, i100, z29);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r214 == null goto label220;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r214.<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label221;

     label220:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label221:
        return 1;

     label222:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        $i86 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        r215 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkInfo getNetworkInfo(int)>($i86);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r215 == null goto label223;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r215.<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label224;

     label223:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label224:
        return 1;

     label225:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        i101 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $i87 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i87 == 0 goto label226;

        z30 = 1;

        goto label227;

     label226:
        z30 = 0;

     label227:
        r216 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkInfo getActiveNetworkInfoForUid(int,boolean)>(i101, z30);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r216 == null goto label228;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r216.<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label229;

     label228:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label229:
        return 1;

     label230:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r217 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.NetworkInfo getActiveNetworkInfo()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r217 == null goto label231;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r217.<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label232;

     label231:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label232:
        return 1;

     label233:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        i102 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        $i88 = virtualinvoke r135.<android.os.Parcel: int readInt()>();

        if $i88 == 0 goto label234;

        z31 = 1;

        goto label235;

     label234:
        z31 = 0;

     label235:
        r218 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.Network getActiveNetworkForUid(int,boolean)>(i102, z31);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r218 == null goto label236;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r218.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label237;

     label236:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label237:
        return 1;

     label238:
        virtualinvoke r135.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IConnectivityManager");

        r219 = virtualinvoke r0.<android.net.IConnectivityManager$Stub: android.net.Network getActiveNetwork()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r219 == null goto label239;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r219.<android.net.Network: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label240;

     label239:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label240:
        return 1;

     label241:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.net.IConnectivityManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.net.IConnectivityManager$Stub: int TRANSACTION_updateLockdownVpn> = 41;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_unregisterNetworkProvider> = 55;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_unregisterNetworkFactory> = 53;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_unregisterConnectivityDiagnosticsCallback> = 87;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_stopVpnProfile> = 37;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_stopKeepalive> = 80;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_startVpnProfile> = 36;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_startTcpKeepalive> = 79;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_startOrGetTestNetworkService> = 88;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_startNattKeepaliveWithFd> = 78;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_startNattKeepalive> = 77;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_startLegacyVpn> = 39;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_startCaptivePortalAppInternal> = 68;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_startCaptivePortalApp> = 67;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_simulateDataStall> = 89;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_shouldAvoidBadWifi> = 69;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_setVpnPackageAuthorization> = 32;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_setUnderlyingNetworksForVpn> = 75;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_setProvisioningNotificationVisible> = 49;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_setGlobalProxy> = 29;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_setAvoidUnvalidated> = 66;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_setAlwaysOnVpnPackage> = 43;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_setAirplaneMode> = 50;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_setAcceptUnvalidated> = 64;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_setAcceptPartialConnectivity> = 65;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_requestRouteToHostAddress> = 19;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_requestNetwork> = 58;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_requestBandwidthUpdate> = 51;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_reportNetworkConnectivity> = 27;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_reportInetCondition> = 26;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_removeVpnAddress> = 74;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_releasePendingNetworkRequest> = 60;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_releaseNetworkRequest> = 63;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_registerNetworkProvider> = 54;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_registerNetworkFactory> = 52;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_registerNetworkAgent> = 57;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_registerConnectivityDiagnosticsCallback> = 86;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_provisionVpnProfile> = 34;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_prepareVpn> = 31;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_pendingRequestForNetwork> = 59;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_pendingListenForNetwork> = 62;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_listenForNetwork> = 61;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_isVpnLockdownEnabled> = 45;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_isNetworkSupported> = 11;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_isCallerCurrentAlwaysOnVpnLockdownApp> = 85;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_isCallerCurrentAlwaysOnVpnApp> = 84;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_isAlwaysOnVpnPackageSupported> = 42;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_isActiveNetworkMetered> = 18;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getVpnLockdownWhitelist> = 46;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getVpnConfig> = 38;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getTetheringErroredIfaces> = 23;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getTetheredIfaces> = 22;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getTetherableWifiRegexs> = 25;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getTetherableUsbRegexs> = 24;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getTetherableIfaces> = 21;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getRestoreDefaultNetworkDelay> = 72;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getProxyForNetwork> = 30;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getNetworkWatchlistConfigHash> = 82;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getNetworkInfoForUid> = 6;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getNetworkInfo> = 5;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getNetworkForType> = 8;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getNetworkCapabilities> = 15;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getMultipathPreference> = 70;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getMobileProvisioningUrl> = 48;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getLinkPropertiesForType> = 13;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getLinkProperties> = 14;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getLegacyVpnInfo> = 40;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getLastTetherError> = 20;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getGlobalProxy> = 28;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getDefaultRequest> = 71;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getDefaultNetworkCapabilitiesForUser> = 10;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getConnectionOwnerUid> = 83;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getCaptivePortalServerUrl> = 81;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getAlwaysOnVpnPackage> = 44;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getAllNetworks> = 9;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getAllNetworkState> = 16;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getAllNetworkInfo> = 7;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getActiveNetworkQuotaInfo> = 17;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getActiveNetworkInfoForUid> = 4;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getActiveNetworkInfo> = 3;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getActiveNetworkForUid> = 2;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getActiveNetwork> = 1;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_getActiveLinkProperties> = 12;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_factoryReset> = 76;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_establishVpn> = 33;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_deleteVpnProfile> = 35;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_declareNetworkRequestUnfulfillable> = 56;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_checkMobileProvisioning> = 47;

        <android.net.IConnectivityManager$Stub: int TRANSACTION_addVpnAddress> = 73;

        <android.net.IConnectivityManager$Stub: java.lang.String DESCRIPTOR> = "android.net.IConnectivityManager";

        return;
    }
}
