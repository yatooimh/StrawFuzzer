public interface  android.net.IConnectivityManager extends java.lang.Object implements android.os.IInterface
{

    public abstract boolean addVpnAddress(java.lang.String, int) throws android.os.RemoteException;

    public abstract int checkMobileProvisioning(int) throws android.os.RemoteException;

    public abstract void declareNetworkRequestUnfulfillable(android.net.NetworkRequest) throws android.os.RemoteException;

    public abstract void deleteVpnProfile(java.lang.String) throws android.os.RemoteException;

    public abstract android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig) throws android.os.RemoteException;

    public abstract void factoryReset() throws android.os.RemoteException;

    public abstract android.net.LinkProperties getActiveLinkProperties() throws android.os.RemoteException;

    public abstract android.net.Network getActiveNetwork() throws android.os.RemoteException;

    public abstract android.net.Network getActiveNetworkForUid(int, boolean) throws android.os.RemoteException;

    public abstract android.net.NetworkInfo getActiveNetworkInfo() throws android.os.RemoteException;

    public abstract android.net.NetworkInfo getActiveNetworkInfoForUid(int, boolean) throws android.os.RemoteException;

    public abstract android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo() throws android.os.RemoteException;

    public abstract android.net.NetworkInfo[] getAllNetworkInfo() throws android.os.RemoteException;

    public abstract android.net.NetworkState[] getAllNetworkState() throws android.os.RemoteException;

    public abstract android.net.Network[] getAllNetworks() throws android.os.RemoteException;

    public abstract java.lang.String getAlwaysOnVpnPackage(int) throws android.os.RemoteException;

    public abstract java.lang.String getCaptivePortalServerUrl() throws android.os.RemoteException;

    public abstract int getConnectionOwnerUid(android.net.ConnectionInfo) throws android.os.RemoteException;

    public abstract android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int, java.lang.String) throws android.os.RemoteException;

    public abstract android.net.NetworkRequest getDefaultRequest() throws android.os.RemoteException;

    public abstract android.net.ProxyInfo getGlobalProxy() throws android.os.RemoteException;

    public abstract int getLastTetherError(java.lang.String) throws android.os.RemoteException;

    public abstract com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int) throws android.os.RemoteException;

    public abstract android.net.LinkProperties getLinkProperties(android.net.Network) throws android.os.RemoteException;

    public abstract android.net.LinkProperties getLinkPropertiesForType(int) throws android.os.RemoteException;

    public abstract java.lang.String getMobileProvisioningUrl() throws android.os.RemoteException;

    public abstract int getMultipathPreference(android.net.Network) throws android.os.RemoteException;

    public abstract android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network, java.lang.String) throws android.os.RemoteException;

    public abstract android.net.Network getNetworkForType(int) throws android.os.RemoteException;

    public abstract android.net.NetworkInfo getNetworkInfo(int) throws android.os.RemoteException;

    public abstract android.net.NetworkInfo getNetworkInfoForUid(android.net.Network, int, boolean) throws android.os.RemoteException;

    public abstract byte[] getNetworkWatchlistConfigHash() throws android.os.RemoteException;

    public abstract android.net.ProxyInfo getProxyForNetwork(android.net.Network) throws android.os.RemoteException;

    public abstract int getRestoreDefaultNetworkDelay(int) throws android.os.RemoteException;

    public abstract java.lang.String[] getTetherableIfaces() throws android.os.RemoteException;

    public abstract java.lang.String[] getTetherableUsbRegexs() throws android.os.RemoteException;

    public abstract java.lang.String[] getTetherableWifiRegexs() throws android.os.RemoteException;

    public abstract java.lang.String[] getTetheredIfaces() throws android.os.RemoteException;

    public abstract java.lang.String[] getTetheringErroredIfaces() throws android.os.RemoteException;

    public abstract com.android.internal.net.VpnConfig getVpnConfig(int) throws android.os.RemoteException;

    public abstract java.util.List getVpnLockdownWhitelist(int) throws android.os.RemoteException;

    public abstract boolean isActiveNetworkMetered() throws android.os.RemoteException;

    public abstract boolean isAlwaysOnVpnPackageSupported(int, java.lang.String) throws android.os.RemoteException;

    public abstract boolean isCallerCurrentAlwaysOnVpnApp() throws android.os.RemoteException;

    public abstract boolean isCallerCurrentAlwaysOnVpnLockdownApp() throws android.os.RemoteException;

    public abstract boolean isNetworkSupported(int) throws android.os.RemoteException;

    public abstract boolean isVpnLockdownEnabled(int) throws android.os.RemoteException;

    public abstract android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities, android.os.Messenger, android.os.IBinder, java.lang.String) throws android.os.RemoteException;

    public abstract void pendingListenForNetwork(android.net.NetworkCapabilities, android.app.PendingIntent, java.lang.String) throws android.os.RemoteException;

    public abstract android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities, android.app.PendingIntent, java.lang.String) throws android.os.RemoteException;

    public abstract boolean prepareVpn(java.lang.String, java.lang.String, int) throws android.os.RemoteException;

    public abstract boolean provisionVpnProfile(com.android.internal.net.VpnProfile, java.lang.String) throws android.os.RemoteException;

    public abstract void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback, android.net.NetworkRequest, java.lang.String) throws android.os.RemoteException;

    public abstract android.net.Network registerNetworkAgent(android.os.Messenger, android.net.NetworkInfo, android.net.LinkProperties, android.net.NetworkCapabilities, int, android.net.NetworkAgentConfig, int) throws android.os.RemoteException;

    public abstract int registerNetworkFactory(android.os.Messenger, java.lang.String) throws android.os.RemoteException;

    public abstract int registerNetworkProvider(android.os.Messenger, java.lang.String) throws android.os.RemoteException;

    public abstract void releaseNetworkRequest(android.net.NetworkRequest) throws android.os.RemoteException;

    public abstract void releasePendingNetworkRequest(android.app.PendingIntent) throws android.os.RemoteException;

    public abstract boolean removeVpnAddress(java.lang.String, int) throws android.os.RemoteException;

    public abstract void reportInetCondition(int, int) throws android.os.RemoteException;

    public abstract void reportNetworkConnectivity(android.net.Network, boolean) throws android.os.RemoteException;

    public abstract boolean requestBandwidthUpdate(android.net.Network) throws android.os.RemoteException;

    public abstract android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities, android.os.Messenger, int, android.os.IBinder, int, java.lang.String) throws android.os.RemoteException;

    public abstract boolean requestRouteToHostAddress(int, byte[]) throws android.os.RemoteException;

    public abstract void setAcceptPartialConnectivity(android.net.Network, boolean, boolean) throws android.os.RemoteException;

    public abstract void setAcceptUnvalidated(android.net.Network, boolean, boolean) throws android.os.RemoteException;

    public abstract void setAirplaneMode(boolean) throws android.os.RemoteException;

    public abstract boolean setAlwaysOnVpnPackage(int, java.lang.String, boolean, java.util.List) throws android.os.RemoteException;

    public abstract void setAvoidUnvalidated(android.net.Network) throws android.os.RemoteException;

    public abstract void setGlobalProxy(android.net.ProxyInfo) throws android.os.RemoteException;

    public abstract void setProvisioningNotificationVisible(boolean, int, java.lang.String) throws android.os.RemoteException;

    public abstract boolean setUnderlyingNetworksForVpn(android.net.Network[]) throws android.os.RemoteException;

    public abstract void setVpnPackageAuthorization(java.lang.String, int, int) throws android.os.RemoteException;

    public abstract boolean shouldAvoidBadWifi() throws android.os.RemoteException;

    public abstract void simulateDataStall(int, long, android.net.Network, android.os.PersistableBundle) throws android.os.RemoteException;

    public abstract void startCaptivePortalApp(android.net.Network) throws android.os.RemoteException;

    public abstract void startCaptivePortalAppInternal(android.net.Network, android.os.Bundle) throws android.os.RemoteException;

    public abstract void startLegacyVpn(com.android.internal.net.VpnProfile) throws android.os.RemoteException;

    public abstract void startNattKeepalive(android.net.Network, int, android.net.ISocketKeepaliveCallback, java.lang.String, int, java.lang.String) throws android.os.RemoteException;

    public abstract void startNattKeepaliveWithFd(android.net.Network, java.io.FileDescriptor, int, int, android.net.ISocketKeepaliveCallback, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract android.os.IBinder startOrGetTestNetworkService() throws android.os.RemoteException;

    public abstract void startTcpKeepalive(android.net.Network, java.io.FileDescriptor, int, android.net.ISocketKeepaliveCallback) throws android.os.RemoteException;

    public abstract void startVpnProfile(java.lang.String) throws android.os.RemoteException;

    public abstract void stopKeepalive(android.net.Network, int) throws android.os.RemoteException;

    public abstract void stopVpnProfile(java.lang.String) throws android.os.RemoteException;

    public abstract void unregisterConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback) throws android.os.RemoteException;

    public abstract void unregisterNetworkFactory(android.os.Messenger) throws android.os.RemoteException;

    public abstract void unregisterNetworkProvider(android.os.Messenger) throws android.os.RemoteException;

    public abstract boolean updateLockdownVpn() throws android.os.RemoteException;
}
