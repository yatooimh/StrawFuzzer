class android.net.IDnsResolver$Stub$Proxy extends java.lang.Object implements android.net.IDnsResolver
{
    public static android.net.IDnsResolver sDefaultImpl;
    private java.lang.String mCachedHash;
    private int mCachedVersion;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.IDnsResolver$Stub$Proxy: int mCachedVersion> = -1;

        r0.<android.net.IDnsResolver$Stub$Proxy: java.lang.String mCachedHash> = "-1";

        r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        $r1 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void createNetworkCache(int) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.IDnsResolver $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.IDnsResolver: void createNetworkCache(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void destroyNetworkCache(int) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.IDnsResolver $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.IDnsResolver: void destroyNetworkCache(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void flushNetworkCache(int) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.IDnsResolver $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.IDnsResolver: void flushNetworkCache(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        java.lang.String $r1;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        $r1 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        return $r1;
    }

    public java.lang.String getInterfaceHash() throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        android.os.Parcel r1, r11;
        java.lang.String $r2, $r3, $r4, $r6, r12, r14;
        boolean $z0, $z1;
        android.os.IBinder $r5;
        android.net.IDnsResolver $r7, $r8;
        java.lang.Throwable $r9, $r10;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        entermonitor r0;

     label01:
        $r3 = "-1";

        $r2 = r0.<android.net.IDnsResolver$Stub$Proxy: java.lang.String mCachedHash>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label10;

        r11 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label02:
        $r4 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r11.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        $r5 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16777214, r11, r1, 0);

        if $z1 != 0 goto label05;

        $r7 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r7 == null goto label05;

        $r8 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        r12 = interfaceinvoke $r8.<android.net.IDnsResolver: java.lang.String getInterfaceHash()>();

     label03:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

     label04:
        exitmonitor r0;

        return r12;

     label05:
        virtualinvoke r1.<android.os.Parcel: void readException()>();

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.net.IDnsResolver$Stub$Proxy: java.lang.String mCachedHash> = $r6;

     label06:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

     label09:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

        throw $r10;

     label10:
        r14 = r0.<android.net.IDnsResolver$Stub$Proxy: java.lang.String mCachedHash>;

     label11:
        exitmonitor r0;

        return r14;

     label12:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public int getInterfaceVersion() throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0, $i1, $i2, $i3;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.IDnsResolver $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        $i1 = r0.<android.net.IDnsResolver$Stub$Proxy: int mCachedVersion>;

        if $i1 != -1 goto label6;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        $r5 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16777215, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        i0 = interfaceinvoke $r7.<android.net.IDnsResolver: int getInterfaceVersion()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<android.net.IDnsResolver$Stub$Proxy: int mCachedVersion> = $i3;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

     label6:
        $i2 = r0.<android.net.IDnsResolver$Stub$Proxy: int mCachedVersion>;

        return $i2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getPrefix64(int) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8, r9;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IDnsResolver $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.net.IDnsResolver: java.lang.String getPrefix64(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void getResolverInfo(int, java.lang.String[], java.lang.String[], java.lang.String[], int[], int[], int[]) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String[] r1, r2, r17;
        int[] r3, r4, r5;
        android.os.Parcel r6, r7;
        boolean z0;
        java.lang.String $r8;
        android.os.IBinder $r9;
        android.net.IDnsResolver $r10, r19;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, $r16, r18;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        i0 := @parameter0: int;

        r17 := @parameter1: java.lang.String[];

        r1 := @parameter2: java.lang.String[];

        r2 := @parameter3: java.lang.String[];

        r3 := @parameter4: int[];

        r4 := @parameter5: int[];

        r5 := @parameter6: int[];

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r8 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r8);

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r17 != null goto label06;

     label03:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(-1);

     label04:
        goto label07;

     label05:
        $r14 := @caughtexception;

        r18 = $r14;

        goto label40;

     label06:
        $i1 = lengthof r17;

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>($i1);

     label07:
        if r1 != null goto label10;

     label08:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(-1);

     label09:
        goto label11;

     label10:
        $i2 = lengthof r1;

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>($i2);

     label11:
        if r2 != null goto label14;

     label12:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(-1);

     label13:
        goto label15;

     label14:
        $i3 = lengthof r2;

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>($i3);

     label15:
        if r3 != null goto label18;

     label16:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(-1);

     label17:
        goto label19;

     label18:
        $i4 = lengthof r3;

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>($i4);

     label19:
        if r4 != null goto label22;

     label20:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(-1);

     label21:
        goto label23;

     label22:
        $i5 = lengthof r4;

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>($i5);

     label23:
        if r5 != null goto label26;

     label24:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(-1);

     label25:
        goto label27;

     label26:
        $i6 = lengthof r5;

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>($i6);

     label27:
        $r9 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r9.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r6, r7, 0);

     label28:
        if z0 != 0 goto label34;

     label29:
        $r10 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r10 == null goto label34;

        r19 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

     label30:
        interfaceinvoke r19.<android.net.IDnsResolver: void getResolverInfo(int,java.lang.String[],java.lang.String[],java.lang.String[],int[],int[],int[])>(i0, r17, r1, r2, r3, r4, r5);

     label31:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return;

     label32:
        $r11 := @caughtexception;

        r18 = $r11;

        goto label40;

     label33:
        $r13 := @caughtexception;

        r18 = $r13;

        goto label40;

     label34:
        virtualinvoke r7.<android.os.Parcel: void readException()>();

     label35:
        virtualinvoke r7.<android.os.Parcel: void readStringArray(java.lang.String[])>(r17);

        virtualinvoke r7.<android.os.Parcel: void readStringArray(java.lang.String[])>(r1);

        virtualinvoke r7.<android.os.Parcel: void readStringArray(java.lang.String[])>(r2);

        virtualinvoke r7.<android.os.Parcel: void readIntArray(int[])>(r3);

        virtualinvoke r7.<android.os.Parcel: void readIntArray(int[])>(r4);

        virtualinvoke r7.<android.os.Parcel: void readIntArray(int[])>(r5);

     label36:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return;

     label37:
        $r12 := @caughtexception;

        r18 = $r12;

        goto label40;

     label38:
        $r15 := @caughtexception;

        r18 = $r15;

        goto label40;

     label39:
        $r16 := @caughtexception;

        r18 = $r16;

     label40:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r18;

        catch java.lang.Throwable from label01 to label02 with label39;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label39;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label10 to label11 with label39;
        catch java.lang.Throwable from label12 to label13 with label05;
        catch java.lang.Throwable from label14 to label15 with label39;
        catch java.lang.Throwable from label16 to label17 with label05;
        catch java.lang.Throwable from label18 to label19 with label39;
        catch java.lang.Throwable from label20 to label21 with label05;
        catch java.lang.Throwable from label22 to label23 with label39;
        catch java.lang.Throwable from label24 to label25 with label05;
        catch java.lang.Throwable from label26 to label27 with label39;
        catch java.lang.Throwable from label27 to label28 with label39;
        catch java.lang.Throwable from label29 to label30 with label33;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label34 to label35 with label38;
        catch java.lang.Throwable from label35 to label36 with label37;
    }

    public boolean isAlive() throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.String $r3;
        boolean $z0, z1, z2;
        android.net.IDnsResolver $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IBinder r7;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        r7 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.IDnsResolver: boolean isAlive()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void registerEventListener(android.net.metrics.INetdEventListener) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.net.IDnsResolver $r5, $r6;
        java.lang.Throwable $r7;
        android.net.metrics.INetdEventListener r8;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        r8 := @parameter0: android.net.metrics.INetdEventListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.net.metrics.INetdEventListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.IDnsResolver: void registerEventListener(android.net.metrics.INetdEventListener)>(r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setLogSeverity(int) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.IDnsResolver $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.IDnsResolver: void setLogSeverity(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setPrefix64(int, java.lang.String) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IDnsResolver $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.IDnsResolver: void setPrefix64(int,java.lang.String)>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setResolverConfiguration(android.net.ResolverParamsParcel) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.IDnsResolver $r5, $r6;
        java.lang.Throwable $r7;
        android.net.ResolverParamsParcel r8;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        r8 := @parameter0: android.net.ResolverParamsParcel;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.net.ResolverParamsParcel: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.IDnsResolver: void setResolverConfiguration(android.net.ResolverParamsParcel)>(r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void startPrefix64Discovery(int) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.IDnsResolver $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.IDnsResolver: void startPrefix64Discovery(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void stopPrefix64Discovery(int) throws android.os.RemoteException
    {
        android.net.IDnsResolver$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.IDnsResolver $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.IDnsResolver$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.IDnsResolver$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.IDnsResolver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.IDnsResolver$Stub: android.net.IDnsResolver getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.IDnsResolver: void stopPrefix64Discovery(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
