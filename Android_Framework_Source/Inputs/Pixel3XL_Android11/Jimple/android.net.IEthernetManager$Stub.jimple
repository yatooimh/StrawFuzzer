public abstract class android.net.IEthernetManager$Stub extends android.os.Binder implements android.net.IEthernetManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addListener;
    static final int TRANSACTION_getAvailableInterfaces;
    static final int TRANSACTION_getConfiguration;
    static final int TRANSACTION_isAvailable;
    static final int TRANSACTION_releaseTetheredInterface;
    static final int TRANSACTION_removeListener;
    static final int TRANSACTION_requestTetheredInterface;
    static final int TRANSACTION_setConfiguration;
    static final int TRANSACTION_setIncludeTestInterfaces;

    public void <init>()
    {
        android.net.IEthernetManager$Stub r0;

        r0 := @this: android.net.IEthernetManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.net.IEthernetManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.net.IEthernetManager");

        return;
    }

    public static android.net.IEthernetManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.net.IEthernetManager$Stub$Proxy $r2;
        boolean $z0;
        android.net.IEthernetManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.net.IEthernetManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.net.IEthernetManager;

        if $z0 == 0 goto label2;

        $r3 = (android.net.IEthernetManager) r1;

        return $r3;

     label2:
        $r2 = new android.net.IEthernetManager$Stub$Proxy;

        specialinvoke $r2.<android.net.IEthernetManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.net.IEthernetManager getDefaultImpl()
    {
        android.net.IEthernetManager $r0;

        $r0 = <android.net.IEthernetManager$Stub$Proxy: android.net.IEthernetManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label10;
            case 2: goto label09;
            case 3: goto label08;
            case 4: goto label07;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label04;
            case 8: goto label03;
            case 9: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "releaseTetheredInterface";

     label03:
        return "requestTetheredInterface";

     label04:
        return "setIncludeTestInterfaces";

     label05:
        return "removeListener";

     label06:
        return "addListener";

     label07:
        return "isAvailable";

     label08:
        return "setConfiguration";

     label09:
        return "getConfiguration";

     label10:
        return "getAvailableInterfaces";
    }

    public static boolean setDefaultImpl(android.net.IEthernetManager)
    {
        android.net.IEthernetManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.net.IEthernetManager;

        $r1 = <android.net.IEthernetManager$Stub$Proxy: android.net.IEthernetManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.net.IEthernetManager$Stub$Proxy: android.net.IEthernetManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.net.IEthernetManager$Stub r0;

        r0 := @this: android.net.IEthernetManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.net.IEthernetManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.net.IEthernetManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.net.IEthernetManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.net.IEthernetManager$Stub r0;
        android.os.Parcel r1, r15;
        int i0, $i1, $i2, i3, i4;
        java.lang.String r2, $r11, $r14;
        android.os.IBinder $r3, $r5, $r7, $r9;
        android.net.ITetheredInterfaceCallback $r4, $r6;
        android.net.IEthernetServiceListener $r8, $r10;
        android.os.Parcelable$Creator $r12;
        java.lang.Object $r13;
        boolean $z0, z1, z2;
        android.net.IpConfiguration r16, r17;
        java.lang.String[] r18;

        r0 := @this: android.net.IEthernetManager$Stub;

        i3 := @parameter0: int;

        r15 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i3 == 1598968902 goto label16;

        z1 = 0;

        tableswitch(i3)
        {
            case 1: goto label15;
            case 2: goto label12;
            case 3: goto label09;
            case 4: goto label08;
            case 5: goto label07;
            case 6: goto label06;
            case 7: goto label04;
            case 8: goto label03;
            case 9: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i3, r15, r1, i0);

        return $z0;

     label02:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IEthernetManager");

        $r3 = virtualinvoke r15.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r4 = staticinvoke <android.net.ITetheredInterfaceCallback$Stub: android.net.ITetheredInterfaceCallback asInterface(android.os.IBinder)>($r3);

        virtualinvoke r0.<android.net.IEthernetManager$Stub: void releaseTetheredInterface(android.net.ITetheredInterfaceCallback)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label03:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IEthernetManager");

        $r5 = virtualinvoke r15.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r6 = staticinvoke <android.net.ITetheredInterfaceCallback$Stub: android.net.ITetheredInterfaceCallback asInterface(android.os.IBinder)>($r5);

        virtualinvoke r0.<android.net.IEthernetManager$Stub: void requestTetheredInterface(android.net.ITetheredInterfaceCallback)>($r6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label04:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IEthernetManager");

        $i1 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label05;

        z1 = 1;

     label05:
        virtualinvoke r0.<android.net.IEthernetManager$Stub: void setIncludeTestInterfaces(boolean)>(z1);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label06:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IEthernetManager");

        $r7 = virtualinvoke r15.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r8 = staticinvoke <android.net.IEthernetServiceListener$Stub: android.net.IEthernetServiceListener asInterface(android.os.IBinder)>($r7);

        virtualinvoke r0.<android.net.IEthernetManager$Stub: void removeListener(android.net.IEthernetServiceListener)>($r8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label07:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IEthernetManager");

        $r9 = virtualinvoke r15.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r10 = staticinvoke <android.net.IEthernetServiceListener$Stub: android.net.IEthernetServiceListener asInterface(android.os.IBinder)>($r9);

        virtualinvoke r0.<android.net.IEthernetManager$Stub: void addListener(android.net.IEthernetServiceListener)>($r10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label08:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IEthernetManager");

        $r11 = virtualinvoke r15.<android.os.Parcel: java.lang.String readString()>();

        z2 = virtualinvoke r0.<android.net.IEthernetManager$Stub: boolean isAvailable(java.lang.String)>($r11);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i4 = (int) z2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        return 1;

     label09:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IEthernetManager");

        r2 = virtualinvoke r15.<android.os.Parcel: java.lang.String readString()>();

        $i2 = virtualinvoke r15.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label10;

        $r12 = <android.net.IpConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r13 = interfaceinvoke $r12.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r15);

        r16 = (android.net.IpConfiguration) $r13;

        goto label11;

     label10:
        r16 = null;

     label11:
        virtualinvoke r0.<android.net.IEthernetManager$Stub: void setConfiguration(java.lang.String,android.net.IpConfiguration)>(r2, r16);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label12:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IEthernetManager");

        $r14 = virtualinvoke r15.<android.os.Parcel: java.lang.String readString()>();

        r17 = virtualinvoke r0.<android.net.IEthernetManager$Stub: android.net.IpConfiguration getConfiguration(java.lang.String)>($r14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r17 == null goto label13;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r17.<android.net.IpConfiguration: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label14;

     label13:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        return 1;

     label15:
        virtualinvoke r15.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.IEthernetManager");

        r18 = virtualinvoke r0.<android.net.IEthernetManager$Stub: java.lang.String[] getAvailableInterfaces()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r18);

        return 1;

     label16:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.net.IEthernetManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.net.IEthernetManager$Stub: int TRANSACTION_setIncludeTestInterfaces> = 7;

        <android.net.IEthernetManager$Stub: int TRANSACTION_setConfiguration> = 3;

        <android.net.IEthernetManager$Stub: int TRANSACTION_requestTetheredInterface> = 8;

        <android.net.IEthernetManager$Stub: int TRANSACTION_removeListener> = 6;

        <android.net.IEthernetManager$Stub: int TRANSACTION_releaseTetheredInterface> = 9;

        <android.net.IEthernetManager$Stub: int TRANSACTION_isAvailable> = 4;

        <android.net.IEthernetManager$Stub: int TRANSACTION_getConfiguration> = 2;

        <android.net.IEthernetManager$Stub: int TRANSACTION_getAvailableInterfaces> = 1;

        <android.net.IEthernetManager$Stub: int TRANSACTION_addListener> = 5;

        <android.net.IEthernetManager$Stub: java.lang.String DESCRIPTOR> = "android.net.IEthernetManager";

        return;
    }
}
