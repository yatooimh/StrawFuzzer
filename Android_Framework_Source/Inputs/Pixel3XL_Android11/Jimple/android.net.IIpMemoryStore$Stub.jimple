public abstract class android.net.IIpMemoryStore$Stub extends android.os.Binder implements android.net.IIpMemoryStore
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_delete;
    static final int TRANSACTION_deleteCluster;
    static final int TRANSACTION_factoryReset;
    static final int TRANSACTION_findL2Key;
    static final int TRANSACTION_getInterfaceHash;
    static final int TRANSACTION_getInterfaceVersion;
    static final int TRANSACTION_isSameNetwork;
    static final int TRANSACTION_retrieveBlob;
    static final int TRANSACTION_retrieveNetworkAttributes;
    static final int TRANSACTION_storeBlob;
    static final int TRANSACTION_storeNetworkAttributes;

    static void <clinit>()
    {
        java.lang.String $r0, $r1;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_storeNetworkAttributes> = 1;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_storeBlob> = 2;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_retrieveNetworkAttributes> = 5;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_retrieveBlob> = 6;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_isSameNetwork> = 4;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_getInterfaceVersion> = 16777215;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_getInterfaceHash> = 16777214;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_findL2Key> = 3;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_factoryReset> = 7;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_deleteCluster> = 9;

        <android.net.IIpMemoryStore$Stub: int TRANSACTION_delete> = 8;

        $r0 = "android$net$IIpMemoryStore";

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        <android.net.IIpMemoryStore$Stub: java.lang.String DESCRIPTOR> = $r1;

        return;
    }

    public void <init>()
    {
        android.net.IIpMemoryStore$Stub r0;
        java.lang.String $r1;

        r0 := @this: android.net.IIpMemoryStore$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        $r1 = <android.net.IIpMemoryStore$Stub: java.lang.String DESCRIPTOR>;

        virtualinvoke r0.<android.net.IIpMemoryStore$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, $r1);

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <android.net.IIpMemoryStore$Stub: java.lang.String DESCRIPTOR>;

        return $r0;
    }

    public static android.net.IIpMemoryStore asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        java.lang.String $r2;
        android.net.IIpMemoryStore$Stub$Proxy $r3;
        boolean $z0;
        android.net.IIpMemoryStore $r4;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = <android.net.IIpMemoryStore$Stub: java.lang.String DESCRIPTOR>;

        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>($r2);

        if r1 == null goto label2;

        $z0 = r1 instanceof android.net.IIpMemoryStore;

        if $z0 == 0 goto label2;

        $r4 = (android.net.IIpMemoryStore) r1;

        return $r4;

     label2:
        $r3 = new android.net.IIpMemoryStore$Stub$Proxy;

        specialinvoke $r3.<android.net.IIpMemoryStore$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r3;
    }

    public static android.net.IIpMemoryStore getDefaultImpl()
    {
        android.net.IIpMemoryStore $r0;

        $r0 = <android.net.IIpMemoryStore$Stub$Proxy: android.net.IIpMemoryStore sDefaultImpl>;

        return $r0;
    }

    public static boolean setDefaultImpl(android.net.IIpMemoryStore)
    {
        android.net.IIpMemoryStore r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.net.IIpMemoryStore;

        $r1 = <android.net.IIpMemoryStore$Stub$Proxy: android.net.IIpMemoryStore sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.net.IIpMemoryStore$Stub$Proxy: android.net.IIpMemoryStore sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.net.IIpMemoryStore$Stub r0;

        r0 := @this: android.net.IIpMemoryStore$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.net.IIpMemoryStore$Stub r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.os.Parcel r1, r33;
        java.lang.String r2, r3, $r8, $r9, $r10, $r13, $r16, $r17, $r32, r34, r35, r36, r38, r40;
        android.os.IBinder $r4, $r6, $r11, $r14, $r18, $r20, $r24, $r28;
        android.net.ipmemorystore.IOnStatusAndCountListener $r5, $r7;
        android.net.ipmemorystore.IOnBlobRetrievedListener $r12;
        android.net.ipmemorystore.IOnNetworkAttributesRetrievedListener $r15;
        android.net.ipmemorystore.IOnSameL3NetworkResponseListener $r19;
        android.net.ipmemorystore.IOnL2KeyResponseListener $r21;
        android.os.Parcelable$Creator $r22, $r26, $r30;
        java.lang.Object $r23, $r27, $r31;
        android.net.ipmemorystore.IOnStatusListener $r25, $r29;
        boolean $z1, z2, z3;
        android.net.ipmemorystore.NetworkAttributesParcelable r37, r41;
        android.net.ipmemorystore.Blob r39;

        r0 := @this: android.net.IIpMemoryStore$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r33 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r34 = <android.net.IIpMemoryStore$Stub: java.lang.String DESCRIPTOR>;

        if i0 == 1598968902 goto label22;

        z2 = 0;

        tableswitch(i0)
        {
            case 1: goto label19;
            case 2: goto label16;
            case 3: goto label13;
            case 4: goto label12;
            case 5: goto label11;
            case 6: goto label10;
            case 7: goto label09;
            case 8: goto label07;
            case 9: goto label05;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case 16777214: goto label04;
            case 16777215: goto label03;
            default: goto label02;
        };

     label02:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r33, i1);

        return $z1;

     label03:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        virtualinvoke r33.<android.os.Parcel: void writeNoException()>();

        $i7 = virtualinvoke r0.<android.net.IIpMemoryStore$Stub: int getInterfaceVersion()>();

        virtualinvoke r33.<android.os.Parcel: void writeInt(int)>($i7);

        return 1;

     label04:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        virtualinvoke r33.<android.os.Parcel: void writeNoException()>();

        $r32 = virtualinvoke r0.<android.net.IIpMemoryStore$Stub: java.lang.String getInterfaceHash()>();

        virtualinvoke r33.<android.os.Parcel: void writeString(java.lang.String)>($r32);

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        r35 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label06;

        z2 = 1;

     label06:
        $r4 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r5 = staticinvoke <android.net.ipmemorystore.IOnStatusAndCountListener$Stub: android.net.ipmemorystore.IOnStatusAndCountListener asInterface(android.os.IBinder)>($r4);

        virtualinvoke r0.<android.net.IIpMemoryStore$Stub: void deleteCluster(java.lang.String,boolean,android.net.ipmemorystore.IOnStatusAndCountListener)>(r35, z2, $r5);

        return 1;

     label07:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        r36 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        z3 = 0;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label08;

        z3 = 1;

     label08:
        $r6 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r7 = staticinvoke <android.net.ipmemorystore.IOnStatusAndCountListener$Stub: android.net.ipmemorystore.IOnStatusAndCountListener asInterface(android.os.IBinder)>($r6);

        virtualinvoke r0.<android.net.IIpMemoryStore$Stub: void delete(java.lang.String,boolean,android.net.ipmemorystore.IOnStatusAndCountListener)>(r36, z3, $r7);

        return 1;

     label09:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        virtualinvoke r0.<android.net.IIpMemoryStore$Stub: void factoryReset()>();

        return 1;

     label10:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r11 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r12 = staticinvoke <android.net.ipmemorystore.IOnBlobRetrievedListener$Stub: android.net.ipmemorystore.IOnBlobRetrievedListener asInterface(android.os.IBinder)>($r11);

        virtualinvoke r0.<android.net.IIpMemoryStore$Stub: void retrieveBlob(java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.IOnBlobRetrievedListener)>($r8, $r9, $r10, $r12);

        return 1;

     label11:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r14 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r15 = staticinvoke <android.net.ipmemorystore.IOnNetworkAttributesRetrievedListener$Stub: android.net.ipmemorystore.IOnNetworkAttributesRetrievedListener asInterface(android.os.IBinder)>($r14);

        virtualinvoke r0.<android.net.IIpMemoryStore$Stub: void retrieveNetworkAttributes(java.lang.String,android.net.ipmemorystore.IOnNetworkAttributesRetrievedListener)>($r13, $r15);

        return 1;

     label12:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        $r16 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r17 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r18 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r19 = staticinvoke <android.net.ipmemorystore.IOnSameL3NetworkResponseListener$Stub: android.net.ipmemorystore.IOnSameL3NetworkResponseListener asInterface(android.os.IBinder)>($r18);

        virtualinvoke r0.<android.net.IIpMemoryStore$Stub: void isSameNetwork(java.lang.String,java.lang.String,android.net.ipmemorystore.IOnSameL3NetworkResponseListener)>($r16, $r17, $r19);

        return 1;

     label13:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label14;

        $r22 = <android.net.ipmemorystore.NetworkAttributesParcelable: android.os.Parcelable$Creator CREATOR>;

        $r23 = interfaceinvoke $r22.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r37 = (android.net.ipmemorystore.NetworkAttributesParcelable) $r23;

        goto label15;

     label14:
        r37 = null;

     label15:
        $r20 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r21 = staticinvoke <android.net.ipmemorystore.IOnL2KeyResponseListener$Stub: android.net.ipmemorystore.IOnL2KeyResponseListener asInterface(android.os.IBinder)>($r20);

        virtualinvoke r0.<android.net.IIpMemoryStore$Stub: void findL2Key(android.net.ipmemorystore.NetworkAttributesParcelable,android.net.ipmemorystore.IOnL2KeyResponseListener)>(r37, $r21);

        return 1;

     label16:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r38 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label17;

        $r26 = <android.net.ipmemorystore.Blob: android.os.Parcelable$Creator CREATOR>;

        $r27 = interfaceinvoke $r26.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r39 = (android.net.ipmemorystore.Blob) $r27;

        goto label18;

     label17:
        r39 = null;

     label18:
        $r24 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r25 = staticinvoke <android.net.ipmemorystore.IOnStatusListener$Stub: android.net.ipmemorystore.IOnStatusListener asInterface(android.os.IBinder)>($r24);

        virtualinvoke r0.<android.net.IIpMemoryStore$Stub: void storeBlob(java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.Blob,android.net.ipmemorystore.IOnStatusListener)>(r2, r38, r3, r39, $r25);

        return 1;

     label19:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r34);

        r40 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label20;

        $r30 = <android.net.ipmemorystore.NetworkAttributesParcelable: android.os.Parcelable$Creator CREATOR>;

        $r31 = interfaceinvoke $r30.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r41 = (android.net.ipmemorystore.NetworkAttributesParcelable) $r31;

        goto label21;

     label20:
        r41 = null;

     label21:
        $r28 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r29 = staticinvoke <android.net.ipmemorystore.IOnStatusListener$Stub: android.net.ipmemorystore.IOnStatusListener asInterface(android.os.IBinder)>($r28);

        virtualinvoke r0.<android.net.IIpMemoryStore$Stub: void storeNetworkAttributes(java.lang.String,android.net.ipmemorystore.NetworkAttributesParcelable,android.net.ipmemorystore.IOnStatusListener)>(r40, r41, $r29);

        return 1;

     label22:
        virtualinvoke r33.<android.os.Parcel: void writeString(java.lang.String)>(r34);

        return 1;
    }
}
