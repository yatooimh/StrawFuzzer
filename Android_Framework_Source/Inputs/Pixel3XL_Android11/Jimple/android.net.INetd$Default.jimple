public class android.net.INetd$Default extends java.lang.Object implements android.net.INetd
{

    public void <init>()
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return null;
    }

    public void bandwidthAddNaughtyApp(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return;
    }

    public void bandwidthAddNiceApp(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return;
    }

    public boolean bandwidthEnableDataSaver(boolean) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        boolean z0;

        r0 := @this: android.net.INetd$Default;

        z0 := @parameter0: boolean;

        return 0;
    }

    public void bandwidthRemoveInterfaceAlert(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void bandwidthRemoveInterfaceQuota(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void bandwidthRemoveNaughtyApp(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return;
    }

    public void bandwidthRemoveNiceApp(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return;
    }

    public void bandwidthSetGlobalAlert(long) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        long l0;

        r0 := @this: android.net.INetd$Default;

        l0 := @parameter0: long;

        return;
    }

    public void bandwidthSetInterfaceAlert(java.lang.String, long) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;
        long l0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        return;
    }

    public void bandwidthSetInterfaceQuota(java.lang.String, long) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;
        long l0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        return;
    }

    public java.lang.String clatdStart(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public void clatdStop(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void firewallAddUidInterfaceRules(java.lang.String, int[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;
        int[] r2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        return;
    }

    public void firewallEnableChildChain(int, boolean) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        boolean z0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void firewallRemoveUidInterfaceRules(int[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int[] r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: int[];

        return;
    }

    public boolean firewallReplaceUidChain(java.lang.String, boolean, int[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;
        boolean z0;
        int[] r2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: int[];

        return 0;
    }

    public void firewallSetFirewallType(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return;
    }

    public void firewallSetInterfaceRule(java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return;
    }

    public void firewallSetUidRule(int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1, i2;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return;
    }

    public android.net.MarkMaskParcel getFwmarkForNetwork(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return null;
    }

    public java.lang.String getInterfaceHash()
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return "";
    }

    public int getInterfaceVersion()
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return 0;
    }

    public android.os.IBinder getOemNetd() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return null;
    }

    public java.lang.String getProcSysNet(int, int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        return null;
    }

    public void idletimerAddInterface(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        return;
    }

    public void idletimerRemoveInterface(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        return;
    }

    public void interfaceAddAddress(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return;
    }

    public void interfaceClearAddrs(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void interfaceDelAddress(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return;
    }

    public android.net.InterfaceConfigurationParcel interfaceGetCfg(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String[] interfaceGetList() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return null;
    }

    public void interfaceSetCfg(android.net.InterfaceConfigurationParcel) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        android.net.InterfaceConfigurationParcel r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: android.net.InterfaceConfigurationParcel;

        return;
    }

    public void interfaceSetEnableIPv6(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        return;
    }

    public void interfaceSetIPv6PrivacyExtensions(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        return;
    }

    public void interfaceSetMtu(java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return;
    }

    public void ipSecAddSecurityAssociation(int, int, java.lang.String, java.lang.String, int, int, int, int, java.lang.String, byte[], int, java.lang.String, byte[], int, java.lang.String, byte[], int, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12;
        java.lang.String r1, r2, r3, r5, r7;
        byte[] r4, r6, r8;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        r3 := @parameter8: java.lang.String;

        r4 := @parameter9: byte[];

        i6 := @parameter10: int;

        r5 := @parameter11: java.lang.String;

        r6 := @parameter12: byte[];

        i7 := @parameter13: int;

        r7 := @parameter14: java.lang.String;

        r8 := @parameter15: byte[];

        i8 := @parameter16: int;

        i9 := @parameter17: int;

        i10 := @parameter18: int;

        i11 := @parameter19: int;

        i12 := @parameter20: int;

        return;
    }

    public void ipSecAddSecurityPolicy(int, int, int, java.lang.String, java.lang.String, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        i6 := @parameter8: int;

        return;
    }

    public void ipSecAddTunnelInterface(java.lang.String, java.lang.String, java.lang.String, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2, r3;
        int i0, i1, i2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        return;
    }

    public int ipSecAllocateSpi(int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        return 0;
    }

    public void ipSecApplyTransportModeTransform(android.os.ParcelFileDescriptor, int, int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        android.os.ParcelFileDescriptor r1;
        int i0, i1, i2;
        java.lang.String r2, r3;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        return;
    }

    public void ipSecDeleteSecurityAssociation(int, java.lang.String, java.lang.String, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        return;
    }

    public void ipSecDeleteSecurityPolicy(int, int, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        return;
    }

    public void ipSecRemoveTransportModeTransform(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        android.os.ParcelFileDescriptor r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        return;
    }

    public void ipSecRemoveTunnelInterface(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void ipSecSetEncapSocketOwner(android.os.ParcelFileDescriptor, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        android.os.ParcelFileDescriptor r1;
        int i0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        i0 := @parameter1: int;

        return;
    }

    public void ipSecUpdateSecurityPolicy(int, int, int, java.lang.String, java.lang.String, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        i6 := @parameter8: int;

        return;
    }

    public void ipSecUpdateTunnelInterface(java.lang.String, java.lang.String, java.lang.String, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2, r3;
        int i0, i1, i2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        return;
    }

    public void ipfwdAddInterfaceForward(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void ipfwdDisableForwarding(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void ipfwdEnableForwarding(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public boolean ipfwdEnabled() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return 0;
    }

    public java.lang.String[] ipfwdGetRequesterList() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return null;
    }

    public void ipfwdRemoveInterfaceForward(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public boolean isAlive() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return 0;
    }

    public void networkAddInterface(int, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void networkAddLegacyRoute(int, java.lang.String, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1;
        java.lang.String r1, r2, r3;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        return;
    }

    public void networkAddRoute(int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        return;
    }

    public void networkAddRouteParcel(int, android.net.RouteInfoParcel) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        android.net.RouteInfoParcel r1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.RouteInfoParcel;

        return;
    }

    public void networkAddUidRanges(int, android.net.UidRangeParcel[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        android.net.UidRangeParcel[] r1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.UidRangeParcel[];

        return;
    }

    public boolean networkCanProtect(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return 0;
    }

    public void networkClearDefault() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return;
    }

    public void networkClearPermissionForUser(int[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int[] r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: int[];

        return;
    }

    public void networkCreatePhysical(int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void networkCreateVpn(int, boolean) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        boolean z0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void networkDestroy(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return;
    }

    public int networkGetDefault() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return 0;
    }

    public void networkRejectNonSecureVpn(boolean, android.net.UidRangeParcel[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        boolean z0;
        android.net.UidRangeParcel[] r1;

        r0 := @this: android.net.INetd$Default;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.UidRangeParcel[];

        return;
    }

    public void networkRemoveInterface(int, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void networkRemoveLegacyRoute(int, java.lang.String, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1;
        java.lang.String r1, r2, r3;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        return;
    }

    public void networkRemoveRoute(int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        return;
    }

    public void networkRemoveRouteParcel(int, android.net.RouteInfoParcel) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        android.net.RouteInfoParcel r1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.RouteInfoParcel;

        return;
    }

    public void networkRemoveUidRanges(int, android.net.UidRangeParcel[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        android.net.UidRangeParcel[] r1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.UidRangeParcel[];

        return;
    }

    public void networkSetDefault(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return;
    }

    public void networkSetPermissionForNetwork(int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void networkSetPermissionForUser(int, int[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        int[] r1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        return;
    }

    public void networkSetProtectAllow(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return;
    }

    public void networkSetProtectDeny(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return;
    }

    public void networkUpdateRouteParcel(int, android.net.RouteInfoParcel) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        android.net.RouteInfoParcel r1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.RouteInfoParcel;

        return;
    }

    public void registerUnsolicitedEventListener(android.net.INetdUnsolicitedEventListener) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        android.net.INetdUnsolicitedEventListener r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: android.net.INetdUnsolicitedEventListener;

        return;
    }

    public void setIPv6AddrGenMode(java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return;
    }

    public void setProcSysNet(int, int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1;
        java.lang.String r1, r2, r3;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        return;
    }

    public void setTcpRWmemorySize(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void socketDestroy(android.net.UidRangeParcel[], int[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        android.net.UidRangeParcel[] r1;
        int[] r2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: android.net.UidRangeParcel[];

        r2 := @parameter1: int[];

        return;
    }

    public void strictUidCleartextPenalty(int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0, i1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void tetherAddForward(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public boolean tetherApplyDnsInterfaces() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return 0;
    }

    public java.lang.String[] tetherDnsList() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return null;
    }

    public void tetherDnsSet(int, java.lang.String[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        java.lang.String[] r1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        return;
    }

    public android.net.TetherStatsParcel[] tetherGetStats() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return null;
    }

    public void tetherInterfaceAdd(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public java.lang.String[] tetherInterfaceList() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return null;
    }

    public void tetherInterfaceRemove(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public boolean tetherIsEnabled() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return 0;
    }

    public android.net.TetherStatsParcel tetherOffloadGetAndClearStats(int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        return null;
    }

    public android.net.TetherStatsParcel[] tetherOffloadGetStats() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return null;
    }

    public void tetherOffloadRuleAdd(android.net.TetherOffloadRuleParcel) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        android.net.TetherOffloadRuleParcel r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: android.net.TetherOffloadRuleParcel;

        return;
    }

    public void tetherOffloadRuleRemove(android.net.TetherOffloadRuleParcel) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        android.net.TetherOffloadRuleParcel r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: android.net.TetherOffloadRuleParcel;

        return;
    }

    public void tetherOffloadSetInterfaceQuota(int, long) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        long l1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        return;
    }

    public void tetherRemoveForward(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void tetherStart(java.lang.String[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String[] r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String[];

        return;
    }

    public void tetherStartWithConfiguration(android.net.TetherConfigParcel) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        android.net.TetherConfigParcel r1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: android.net.TetherConfigParcel;

        return;
    }

    public void tetherStop() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return;
    }

    public void trafficSetNetPermForUids(int, int[]) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        int i0;
        int[] r1;

        r0 := @this: android.net.INetd$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        return;
    }

    public void trafficSwapActiveStatsMap() throws android.os.RemoteException
    {
        android.net.INetd$Default r0;

        r0 := @this: android.net.INetd$Default;

        return;
    }

    public void wakeupAddInterface(java.lang.String, java.lang.String, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;
        int i0, i1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }

    public void wakeupDelInterface(java.lang.String, java.lang.String, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Default r0;
        java.lang.String r1, r2;
        int i0, i1;

        r0 := @this: android.net.INetd$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }
}
