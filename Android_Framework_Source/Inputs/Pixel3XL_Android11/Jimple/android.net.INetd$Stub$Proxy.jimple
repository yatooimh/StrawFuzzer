class android.net.INetd$Stub$Proxy extends java.lang.Object implements android.net.INetd
{
    public static android.net.INetd sDefaultImpl;
    private java.lang.String mCachedHash;
    private int mCachedVersion;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.INetd$Stub$Proxy: int mCachedVersion> = -1;

        r0.<android.net.INetd$Stub$Proxy: java.lang.String mCachedHash> = "-1";

        r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.INetd$Stub$Proxy;

        $r1 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void bandwidthAddNaughtyApp(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void bandwidthAddNaughtyApp(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void bandwidthAddNiceApp(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(52, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void bandwidthAddNiceApp(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean bandwidthEnableDataSaver(boolean) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z1, z2, z3, z4;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;
        byte b0;
        int i1;

        r0 := @this: android.net.INetd$Stub$Proxy;

        z2 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

     label02:
        if z2 == 0 goto label03;

        b0 = 1;

        goto label04;

     label03:
        b0 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label06;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        z3 = interfaceinvoke $r7.<android.net.INetd: boolean bandwidthEnableDataSaver(boolean)>(z2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label07:
        if i1 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void bandwidthRemoveInterfaceAlert(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void bandwidthRemoveInterfaceAlert(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void bandwidthRemoveInterfaceQuota(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void bandwidthRemoveInterfaceQuota(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void bandwidthRemoveNaughtyApp(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(51, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void bandwidthRemoveNaughtyApp(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void bandwidthRemoveNiceApp(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(53, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void bandwidthRemoveNiceApp(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void bandwidthSetGlobalAlert(long) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void bandwidthSetGlobalAlert(long)>(l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void bandwidthSetInterfaceAlert(java.lang.String, long) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void bandwidthSetInterfaceAlert(java.lang.String,long)>(r8, l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void bandwidthSetInterfaceQuota(java.lang.String, long) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        long l0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void bandwidthSetInterfaceQuota(java.lang.String,long)>(r8, l0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String clatdStart(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9, r10, r11;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.INetd: java.lang.String clatdStart(java.lang.String,java.lang.String)>(r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r11 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void clatdStop(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void clatdStop(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void firewallAddUidInterfaceRules(java.lang.String, int[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int[] r1;
        android.os.Parcel r2, r3;
        java.lang.String $r4, r9;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: int[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(91, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void firewallAddUidInterfaceRules(java.lang.String,int[])>(r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void firewallEnableChildChain(int, boolean) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;
        byte b1;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(79, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label6;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void firewallEnableChildChain(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void firewallRemoveUidInterfaceRules(int[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        int[] r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(92, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void firewallRemoveUidInterfaceRules(int[])>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean firewallReplaceUidChain(java.lang.String, boolean, int[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int[] r1;
        android.os.Parcel r2, r3;
        java.lang.String $r4, r9;
        android.os.IBinder $r5;
        boolean $z1, z2, z3, z4;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;
        byte b0;
        int i1;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        z2 := @parameter1: boolean;

        r1 := @parameter2: int[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

     label02:
        if z2 == 0 goto label03;

        b0 = 1;

        goto label04;

     label03:
        b0 = 0;

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        if $z1 != 0 goto label06;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label06;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        z3 = interfaceinvoke $r7.<android.net.INetd: boolean firewallReplaceUidChain(java.lang.String,boolean,int[])>(r9, z2, r1);

     label05:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z3;

     label06:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label07:
        if i1 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z4;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void firewallSetFirewallType(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(76, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void firewallSetFirewallType(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void firewallSetInterfaceRule(java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(77, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void firewallSetInterfaceRule(java.lang.String,int)>(r8, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void firewallSetUidRule(int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(78, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void firewallSetUidRule(int,int,int)>(i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.MarkMaskParcel getFwmarkForNetwork(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9;
        android.net.MarkMaskParcel r10, r11;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(96, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r10 = interfaceinvoke $r8.<android.net.INetd: android.net.MarkMaskParcel getFwmarkForNetwork(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r5 = <android.net.MarkMaskParcel: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.MarkMaskParcel) $r6;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String $r1;

        r0 := @this: android.net.INetd$Stub$Proxy;

        $r1 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        return $r1;
    }

    public java.lang.String getInterfaceHash() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r11;
        java.lang.String $r2, $r3, $r4, $r6, r12, r14;
        boolean $z0, $z1;
        android.os.IBinder $r5;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9, $r10;

        r0 := @this: android.net.INetd$Stub$Proxy;

        entermonitor r0;

     label01:
        $r3 = "-1";

        $r2 = r0.<android.net.INetd$Stub$Proxy: java.lang.String mCachedHash>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label10;

        r11 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label02:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r11.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16777214, r11, r1, 0);

        if $z1 != 0 goto label05;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label05;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r12 = interfaceinvoke $r8.<android.net.INetd: java.lang.String getInterfaceHash()>();

     label03:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

     label04:
        exitmonitor r0;

        return r12;

     label05:
        virtualinvoke r1.<android.os.Parcel: void readException()>();

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.net.INetd$Stub$Proxy: java.lang.String mCachedHash> = $r6;

     label06:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

     label09:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

        throw $r9;

     label10:
        r14 = r0.<android.net.INetd$Stub$Proxy: java.lang.String mCachedHash>;

     label11:
        exitmonitor r0;

        return r14;

     label12:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public int getInterfaceVersion() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0, $i1, $i2, $i3;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        $i1 = r0.<android.net.INetd$Stub$Proxy: int mCachedVersion>;

        if $i1 != -1 goto label6;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16777215, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        i0 = interfaceinvoke $r7.<android.net.INetd: int getInterfaceVersion()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<android.net.INetd$Stub$Proxy: int mCachedVersion> = $i3;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

     label6:
        $i2 = r0.<android.net.INetd$Stub$Proxy: int mCachedVersion>;

        return $i2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder getOemNetd() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4, r8, r9;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(94, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.net.INetd: android.os.IBinder getOemNetd()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getProcSysNet(int, int, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1, $r4, r9, r10, r11;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r9 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.INetd: java.lang.String getProcSysNet(int,int,java.lang.String,java.lang.String)>(i0, i1, r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r11 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void idletimerAddInterface(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        java.lang.String r1, $r4, r9;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void idletimerAddInterface(java.lang.String,int,java.lang.String)>(r9, i0, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void idletimerRemoveInterface(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        java.lang.String r1, $r4, r9;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void idletimerRemoveInterface(java.lang.String,int,java.lang.String)>(r9, i0, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void interfaceAddAddress(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void interfaceAddAddress(java.lang.String,java.lang.String,int)>(r9, r1, i0);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void interfaceClearAddrs(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(84, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void interfaceClearAddrs(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void interfaceDelAddress(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9;
        int i0;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void interfaceDelAddress(java.lang.String,java.lang.String,int)>(r9, r1, i0);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.InterfaceConfigurationParcel interfaceGetCfg(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r10;
        android.os.IBinder $r4;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9;
        android.net.InterfaceConfigurationParcel r11, r12;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r10 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(81, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r11 = interfaceinvoke $r8.<android.net.INetd: android.net.InterfaceConfigurationParcel interfaceGetCfg(java.lang.String)>(r10);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r5 = <android.net.InterfaceConfigurationParcel: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r12 = (android.net.InterfaceConfigurationParcel) $r6;

     label4:
        goto label6;

     label5:
        r12 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r12;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String[] interfaceGetList() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8, r9;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(80, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.net.INetd: java.lang.String[] interfaceGetList()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void interfaceSetCfg(android.net.InterfaceConfigurationParcel) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.InterfaceConfigurationParcel r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: android.net.InterfaceConfigurationParcel;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.net.InterfaceConfigurationParcel: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(82, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void interfaceSetCfg(android.net.InterfaceConfigurationParcel)>(r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void interfaceSetEnableIPv6(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(85, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void interfaceSetEnableIPv6(java.lang.String,boolean)>(r8, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void interfaceSetIPv6PrivacyExtensions(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(83, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void interfaceSetIPv6PrivacyExtensions(java.lang.String,boolean)>(r8, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void interfaceSetMtu(java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(86, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void interfaceSetMtu(java.lang.String,int)>(r8, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void ipSecAddSecurityAssociation(int, int, java.lang.String, java.lang.String, int, int, int, int, java.lang.String, byte[], int, java.lang.String, byte[], int, java.lang.String, byte[], int, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12;
        java.lang.String r1, r2, r4, r6, $r10, r15;
        byte[] r3, r5, r7;
        android.os.Parcel r8, r9;
        android.os.IBinder $r11;
        boolean $z0;
        android.net.INetd $r12, $r13;
        java.lang.Throwable $r14;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r15 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        r2 := @parameter8: java.lang.String;

        r3 := @parameter9: byte[];

        i6 := @parameter10: int;

        r4 := @parameter11: java.lang.String;

        r5 := @parameter12: byte[];

        i7 := @parameter13: int;

        r6 := @parameter14: java.lang.String;

        r7 := @parameter15: byte[];

        i8 := @parameter16: int;

        i9 := @parameter17: int;

        i10 := @parameter18: int;

        i11 := @parameter19: int;

        i12 := @parameter20: int;

        r8 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r9 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r10 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r8.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r10);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r8.<android.os.Parcel: void writeString(java.lang.String)>(r15);

        virtualinvoke r8.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i5);

        virtualinvoke r8.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r8.<android.os.Parcel: void writeByteArray(byte[])>(r3);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i6);

        virtualinvoke r8.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        virtualinvoke r8.<android.os.Parcel: void writeByteArray(byte[])>(r5);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i7);

        virtualinvoke r8.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        virtualinvoke r8.<android.os.Parcel: void writeByteArray(byte[])>(r7);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i8);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i9);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i10);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i11);

        virtualinvoke r8.<android.os.Parcel: void writeInt(int)>(i12);

        $r11 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r11.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r8, r9, 0);

        if $z0 != 0 goto label3;

        $r12 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r12 == null goto label3;

        $r13 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r13.<android.net.INetd: void ipSecAddSecurityAssociation(int,int,java.lang.String,java.lang.String,int,int,int,int,java.lang.String,byte[],int,java.lang.String,byte[],int,java.lang.String,byte[],int,int,int,int,int)>(i0, i1, r15, r1, i2, i3, i4, i5, r2, r3, i6, r4, r5, i7, r6, r7, i8, i9, i10, i11, i12);

     label2:
        virtualinvoke r9.<android.os.Parcel: void recycle()>();

        virtualinvoke r8.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r9.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r9.<android.os.Parcel: void recycle()>();

        virtualinvoke r8.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r14 := @caughtexception;

        virtualinvoke r9.<android.os.Parcel: void recycle()>();

        virtualinvoke r8.<android.os.Parcel: void recycle()>();

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void ipSecAddSecurityPolicy(int, int, int, java.lang.String, java.lang.String, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.String r1, $r4, r12;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, r13;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r12 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        i6 := @parameter8: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r12);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i5);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i6);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r2, r3, 0);

        if $z0 != 0 goto label06;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label06;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void ipSecAddSecurityPolicy(int,int,int,java.lang.String,java.lang.String,int,int,int,int)>(i0, i1, i2, r12, r1, i3, i4, i5, i6);

     label05:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label06:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        $r8 := @caughtexception;

        r13 = $r8;

        goto label12;

     label09:
        $r9 := @caughtexception;

        r13 = $r9;

        goto label12;

     label10:
        $r10 := @caughtexception;

        r13 = $r10;

        goto label12;

     label11:
        $r11 := @caughtexception;

        r13 = $r11;

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    public void ipSecAddTunnelInterface(java.lang.String, java.lang.String, java.lang.String, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, r2, $r5, r16;
        int i0, i1, i2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r6;
        boolean $z0;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14, $r15, r17;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r16 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r5 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r5);

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r16);

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

        $r6 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r3, r4, 0);

        if $z0 != 0 goto label09;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label09;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.INetd: void ipSecAddTunnelInterface(java.lang.String,java.lang.String,java.lang.String,int,int,int)>(r16, r1, r2, i0, i1, i2);

     label08:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label10:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label11:
        $r12 := @caughtexception;

        r17 = $r12;

        goto label18;

     label12:
        $r10 := @caughtexception;

        r17 = $r10;

        goto label18;

     label13:
        $r14 := @caughtexception;

        r17 = $r14;

        goto label18;

     label14:
        $r9 := @caughtexception;

        r17 = $r9;

        goto label18;

     label15:
        $r15 := @caughtexception;

        r17 = $r15;

        goto label18;

     label16:
        $r13 := @caughtexception;

        r17 = $r13;

        goto label18;

     label17:
        $r11 := @caughtexception;

        r17 = $r11;

     label18:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r17;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public int ipSecAllocateSpi(int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9;
        int i0, i1, i2, i3;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i1 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        i2 = interfaceinvoke $r7.<android.net.INetd: int ipSecAllocateSpi(int,java.lang.String,java.lang.String,int)>(i1, r9, r1, i0);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void ipSecApplyTransportModeTransform(android.os.ParcelFileDescriptor, int, int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1, i2;
        java.lang.String r1, r2, $r5;
        android.os.Parcel r3, r4;
        android.os.IBinder $r6;
        boolean $z0;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14, r16;
        android.os.ParcelFileDescriptor r15;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r15 := @parameter0: android.os.ParcelFileDescriptor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r5 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r5);

     label02:
        if r15 == null goto label05;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r15.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

        $r6 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r3, r4, 0);

        if $z0 != 0 goto label12;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label12;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.INetd: void ipSecApplyTransportModeTransform(android.os.ParcelFileDescriptor,int,int,java.lang.String,java.lang.String,int)>(r15, i0, i1, r1, r2, i2);

     label11:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label12:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label13:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label14:
        $r11 := @caughtexception;

        r16 = $r11;

        goto label20;

     label15:
        $r14 := @caughtexception;

        r16 = $r14;

        goto label20;

     label16:
        $r12 := @caughtexception;

        r16 = $r12;

        goto label20;

     label17:
        $r13 := @caughtexception;

        r16 = $r13;

        goto label20;

     label18:
        $r9 := @caughtexception;

        r16 = $r9;

        goto label20;

     label19:
        $r10 := @caughtexception;

        r16 = $r10;

     label20:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r16;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public void ipSecDeleteSecurityAssociation(int, java.lang.String, java.lang.String, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, $r4, r14;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, $r13, r15;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r14 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r14);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i4);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void ipSecDeleteSecurityAssociation(int,java.lang.String,java.lang.String,int,int,int,int)>(i0, r14, r1, i1, i2, i3, i4);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r12 := @caughtexception;

        r15 = $r12;

        goto label16;

     label11:
        $r13 := @caughtexception;

        r15 = $r13;

        goto label16;

     label12:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label16;

     label13:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label16;

     label14:
        $r10 := @caughtexception;

        r15 = $r10;

        goto label16;

     label15:
        $r11 := @caughtexception;

        r15 = $r11;

     label16:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void ipSecDeleteSecurityPolicy(int, int, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, $r12, $r13, r14;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        if $z0 != 0 goto label09;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label09;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void ipSecDeleteSecurityPolicy(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        $r9 := @caughtexception;

        r14 = $r9;

        goto label18;

     label12:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label18;

     label13:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label18;

     label14:
        $r13 := @caughtexception;

        r14 = $r13;

        goto label18;

     label15:
        $r11 := @caughtexception;

        r14 = $r11;

        goto label18;

     label16:
        $r12 := @caughtexception;

        r14 = $r12;

        goto label18;

     label17:
        $r7 := @caughtexception;

        r14 = $r7;

     label18:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void ipSecRemoveTransportModeTransform(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.os.ParcelFileDescriptor r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: android.os.ParcelFileDescriptor;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void ipSecRemoveTransportModeTransform(android.os.ParcelFileDescriptor)>(r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void ipSecRemoveTunnelInterface(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void ipSecRemoveTunnelInterface(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void ipSecSetEncapSocketOwner(android.os.ParcelFileDescriptor, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.os.ParcelFileDescriptor r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: android.os.ParcelFileDescriptor;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void ipSecSetEncapSocketOwner(android.os.ParcelFileDescriptor,int)>(r8, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void ipSecUpdateSecurityPolicy(int, int, int, java.lang.String, java.lang.String, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.lang.String r1, $r4, r12;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, r13;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r12 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        i6 := @parameter8: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r12);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i5);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i6);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r2, r3, 0);

        if $z0 != 0 goto label06;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label06;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void ipSecUpdateSecurityPolicy(int,int,int,java.lang.String,java.lang.String,int,int,int,int)>(i0, i1, i2, r12, r1, i3, i4, i5, i6);

     label05:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label06:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        $r8 := @caughtexception;

        r13 = $r8;

        goto label12;

     label09:
        $r10 := @caughtexception;

        r13 = $r10;

        goto label12;

     label10:
        $r11 := @caughtexception;

        r13 = $r11;

        goto label12;

     label11:
        $r9 := @caughtexception;

        r13 = $r9;

     label12:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    public void ipSecUpdateTunnelInterface(java.lang.String, java.lang.String, java.lang.String, int, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, r2, $r5, r16;
        int i0, i1, i2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r6;
        boolean $z0;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14, $r15, r17;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r16 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r5 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r5);

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r16);

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

        $r6 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r3, r4, 0);

        if $z0 != 0 goto label09;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label09;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.INetd: void ipSecUpdateTunnelInterface(java.lang.String,java.lang.String,java.lang.String,int,int,int)>(r16, r1, r2, i0, i1, i2);

     label08:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label10:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label11:
        $r11 := @caughtexception;

        r17 = $r11;

        goto label18;

     label12:
        $r15 := @caughtexception;

        r17 = $r15;

        goto label18;

     label13:
        $r9 := @caughtexception;

        r17 = $r9;

        goto label18;

     label14:
        $r12 := @caughtexception;

        r17 = $r12;

        goto label18;

     label15:
        $r10 := @caughtexception;

        r17 = $r10;

        goto label18;

     label16:
        $r13 := @caughtexception;

        r17 = $r13;

        goto label18;

     label17:
        $r14 := @caughtexception;

        r17 = $r14;

     label18:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r17;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void ipfwdAddInterfaceForward(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void ipfwdAddInterfaceForward(java.lang.String,java.lang.String)>(r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void ipfwdDisableForwarding(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void ipfwdDisableForwarding(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void ipfwdEnableForwarding(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void ipfwdEnableForwarding(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean ipfwdEnabled() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.String $r3;
        boolean $z0, z1, z2;
        android.net.INetd $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IBinder r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        r7 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.INetd: boolean ipfwdEnabled()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public java.lang.String[] ipfwdGetRequesterList() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8, r9;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.net.INetd: java.lang.String[] ipfwdGetRequesterList()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void ipfwdRemoveInterfaceForward(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void ipfwdRemoveInterfaceForward(java.lang.String,java.lang.String)>(r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isAlive() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.String $r3;
        boolean $z0, z1, z2;
        android.net.INetd $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IBinder r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        r7 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.INetd: boolean isAlive()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void networkAddInterface(int, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void networkAddInterface(int,java.lang.String)>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkAddLegacyRoute(int, java.lang.String, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1, r2, $r5, r10;
        android.os.Parcel r3, r4;
        android.os.IBinder $r6;
        boolean $z0;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r5 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r5);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r6 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(64, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.INetd: void networkAddLegacyRoute(int,java.lang.String,java.lang.String,java.lang.String,int)>(i0, r10, r1, r2, i1);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkAddRoute(int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r2, $r5, r10;
        android.os.Parcel r3, r4;
        android.os.IBinder $r6;
        boolean $z0;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r5 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r5);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(62, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.INetd: void networkAddRoute(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r10, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkAddRouteParcel(int, android.net.RouteInfoParcel) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.RouteInfoParcel r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.net.RouteInfoParcel;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.net.RouteInfoParcel: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(97, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void networkAddRouteParcel(int,android.net.RouteInfoParcel)>(i0, r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void networkAddUidRanges(int, android.net.UidRangeParcel[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.UidRangeParcel[] r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.net.UidRangeParcel[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r8, 0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void networkAddUidRanges(int,android.net.UidRangeParcel[])>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean networkCanProtect(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        boolean $z0, z1, z2;
        android.net.INetd $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1;
        android.os.IBinder r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r7 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(75, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.INetd: boolean networkCanProtect(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void networkClearDefault() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(68, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void networkClearDefault()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkClearPermissionForUser(int[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        int[] r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(71, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void networkClearPermissionForUser(int[])>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkCreatePhysical(int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void networkCreatePhysical(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkCreateVpn(int, boolean) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;
        byte b1;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label6;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void networkCreateVpn(int,boolean)>(i0, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void networkDestroy(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void networkDestroy(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int networkGetDefault() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;
        int i0, i1;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(66, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        i0 = interfaceinvoke $r7.<android.net.INetd: int networkGetDefault()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkRejectNonSecureVpn(boolean, android.net.UidRangeParcel[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.UidRangeParcel[] r8;
        byte b0;

        r0 := @this: android.net.INetd$Stub$Proxy;

        z0 := @parameter0: boolean;

        r8 := @parameter1: android.net.UidRangeParcel[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r8, 0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void networkRejectNonSecureVpn(boolean,android.net.UidRangeParcel[])>(z0, r8);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void networkRemoveInterface(int, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void networkRemoveInterface(int,java.lang.String)>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkRemoveLegacyRoute(int, java.lang.String, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1, r2, $r5, r10;
        android.os.Parcel r3, r4;
        android.os.IBinder $r6;
        boolean $z0;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r5 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r5);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r6 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(65, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.INetd: void networkRemoveLegacyRoute(int,java.lang.String,java.lang.String,java.lang.String,int)>(i0, r10, r1, r2, i1);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkRemoveRoute(int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r2, $r5, r10;
        android.os.Parcel r3, r4;
        android.os.IBinder $r6;
        boolean $z0;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r5 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r5);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(63, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.INetd: void networkRemoveRoute(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r10, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkRemoveRouteParcel(int, android.net.RouteInfoParcel) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.RouteInfoParcel r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.net.RouteInfoParcel;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.net.RouteInfoParcel: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(99, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void networkRemoveRouteParcel(int,android.net.RouteInfoParcel)>(i0, r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void networkRemoveUidRanges(int, android.net.UidRangeParcel[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.UidRangeParcel[] r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.net.UidRangeParcel[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r8, 0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void networkRemoveUidRanges(int,android.net.UidRangeParcel[])>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkSetDefault(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(67, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void networkSetDefault(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkSetPermissionForNetwork(int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(69, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void networkSetPermissionForNetwork(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkSetPermissionForUser(int, int[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        int[] r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(70, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void networkSetPermissionForUser(int,int[])>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkSetProtectAllow(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(73, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void networkSetProtectAllow(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkSetProtectDeny(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(74, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void networkSetProtectDeny(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void networkUpdateRouteParcel(int, android.net.RouteInfoParcel) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.RouteInfoParcel r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: android.net.RouteInfoParcel;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.net.RouteInfoParcel: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(98, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void networkUpdateRouteParcel(int,android.net.RouteInfoParcel)>(i0, r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void registerUnsolicitedEventListener(android.net.INetdUnsolicitedEventListener) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.INetdUnsolicitedEventListener r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: android.net.INetdUnsolicitedEventListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.net.INetdUnsolicitedEventListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(90, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void registerUnsolicitedEventListener(android.net.INetdUnsolicitedEventListener)>(r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void setIPv6AddrGenMode(java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void setIPv6AddrGenMode(java.lang.String,int)>(r8, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setProcSysNet(int, int, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1, r2, $r5, r10;
        android.os.Parcel r3, r4;
        android.os.IBinder $r6;
        boolean $z0;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r10 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r5 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r5);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r10);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r3, r4, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.INetd: void setProcSysNet(int,int,java.lang.String,java.lang.String,java.lang.String)>(i0, i1, r10, r1, r2);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setTcpRWmemorySize(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(89, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void setTcpRWmemorySize(java.lang.String,java.lang.String)>(r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void socketDestroy(android.net.UidRangeParcel[], int[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int[] r1;
        android.os.Parcel r2, r3;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;
        android.net.UidRangeParcel[] r9;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: android.net.UidRangeParcel[];

        r1 := @parameter1: int[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r9, 0);

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void socketDestroy(android.net.UidRangeParcel[],int[])>(r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void strictUidCleartextPenalty(int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void strictUidCleartextPenalty(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void tetherAddForward(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(87, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void tetherAddForward(java.lang.String,java.lang.String)>(r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean tetherApplyDnsInterfaces() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.String $r3;
        boolean $z0, z1, z2;
        android.net.INetd $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IBinder r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        r7 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.INetd: boolean tetherApplyDnsInterfaces()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public java.lang.String[] tetherDnsList() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8, r9;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(61, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.net.INetd: java.lang.String[] tetherDnsList()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void tetherDnsSet(int, java.lang.String[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(60, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void tetherDnsSet(int,java.lang.String[])>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.TetherStatsParcel[] tetherGetStats() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object[] $r6;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9;
        android.net.TetherStatsParcel[] r10, r11;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r10 = interfaceinvoke $r8.<android.net.INetd: android.net.TetherStatsParcel[] tetherGetStats()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r5 = <android.net.TetherStatsParcel: android.os.Parcelable$Creator CREATOR>;

        $r6 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r5);

        r11 = (android.net.TetherStatsParcel[]) $r6;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void tetherInterfaceAdd(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(57, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void tetherInterfaceAdd(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] tetherInterfaceList() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8, r9;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(59, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.net.INetd: java.lang.String[] tetherInterfaceList()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void tetherInterfaceRemove(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3, r8;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(58, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void tetherInterfaceRemove(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean tetherIsEnabled() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.String $r3;
        boolean $z0, z1, z2;
        android.net.INetd $r4, $r5;
        java.lang.Throwable $r6;
        android.os.IBinder r7;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        r7 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(56, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.INetd: boolean tetherIsEnabled()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public android.net.TetherStatsParcel tetherOffloadGetAndClearStats(int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9;
        android.net.TetherStatsParcel r10, r11;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(104, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r10 = interfaceinvoke $r8.<android.net.INetd: android.net.TetherStatsParcel tetherOffloadGetAndClearStats(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r5 = <android.net.TetherStatsParcel: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.TetherStatsParcel) $r6;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r9 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.TetherStatsParcel[] tetherOffloadGetStats() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.Parcelable$Creator $r5;
        java.lang.Object[] $r6;
        android.net.INetd $r7, $r8;
        java.lang.Throwable $r9;
        android.net.TetherStatsParcel[] r10, r11;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(102, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        r10 = interfaceinvoke $r8.<android.net.INetd: android.net.TetherStatsParcel[] tetherOffloadGetStats()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r5 = <android.net.TetherStatsParcel: android.os.Parcelable$Creator CREATOR>;

        $r6 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r5);

        r11 = (android.net.TetherStatsParcel[]) $r6;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void tetherOffloadRuleAdd(android.net.TetherOffloadRuleParcel) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.TetherOffloadRuleParcel r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: android.net.TetherOffloadRuleParcel;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.net.TetherOffloadRuleParcel: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(100, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void tetherOffloadRuleAdd(android.net.TetherOffloadRuleParcel)>(r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void tetherOffloadRuleRemove(android.net.TetherOffloadRuleParcel) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.TetherOffloadRuleParcel r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: android.net.TetherOffloadRuleParcel;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.net.TetherOffloadRuleParcel: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(101, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void tetherOffloadRuleRemove(android.net.TetherOffloadRuleParcel)>(r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void tetherOffloadSetInterfaceQuota(int, long) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(103, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void tetherOffloadSetInterfaceQuota(int,long)>(i0, l1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void tetherRemoveForward(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(88, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void tetherRemoveForward(java.lang.String,java.lang.String)>(r9, r1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void tetherStart(java.lang.String[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String[] r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(54, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void tetherStart(java.lang.String[])>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void tetherStartWithConfiguration(android.net.TetherConfigParcel) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        android.net.TetherConfigParcel r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r8 := @parameter0: android.net.TetherConfigParcel;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        if r8 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<android.net.TetherConfigParcel: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(95, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void tetherStartWithConfiguration(android.net.TetherConfigParcel)>(r8);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void tetherStop() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(55, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void tetherStop()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void trafficSetNetPermForUids(int, int[]) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetd $r5, $r6;
        java.lang.Throwable $r7;
        int[] r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: int[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r8);

        $r4 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(72, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetd: void trafficSetNetPermForUids(int,int[])>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void trafficSwapActiveStatsMap() throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(93, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void trafficSwapActiveStatsMap()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void wakeupAddInterface(java.lang.String, java.lang.String, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9;
        int i0, i1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void wakeupAddInterface(java.lang.String,java.lang.String,int,int)>(r9, r1, i0, i1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void wakeupDelInterface(java.lang.String, java.lang.String, int, int) throws android.os.RemoteException
    {
        android.net.INetd$Stub$Proxy r0;
        java.lang.String r1, $r4, r9;
        int i0, i1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.INetd $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.INetd$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.INetd$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.net.INetd$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r2, r3, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetd$Stub: android.net.INetd getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.INetd: void wakeupDelInterface(java.lang.String,java.lang.String,int,int)>(r9, r1, i0, i1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
