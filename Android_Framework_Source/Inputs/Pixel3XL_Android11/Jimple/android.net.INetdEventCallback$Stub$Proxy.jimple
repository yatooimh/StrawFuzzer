class android.net.INetdEventCallback$Stub$Proxy extends java.lang.Object implements android.net.INetdEventCallback
{
    public static android.net.INetdEventCallback sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.INetdEventCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.INetdEventCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.INetdEventCallback$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetdEventCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.INetdEventCallback$Stub$Proxy;

        $r1 = r0.<android.net.INetdEventCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.INetdEventCallback$Stub$Proxy r0;

        r0 := @this: android.net.INetdEventCallback$Stub$Proxy;

        return "android.net.INetdEventCallback";
    }

    public void onConnectEvent(java.lang.String, int, long, int) throws android.os.RemoteException
    {
        android.net.INetdEventCallback$Stub$Proxy r0;
        int i0, i2;
        long l1;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.net.INetdEventCallback $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.net.INetdEventCallback$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetdEventCallback");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r2 = r0.<android.net.INetdEventCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.net.INetdEventCallback$Stub: android.net.INetdEventCallback getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.net.INetdEventCallback$Stub: android.net.INetdEventCallback getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.INetdEventCallback: void onConnectEvent(java.lang.String,int,long,int)>(r6, i0, l1, i2);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onDnsEvent(int, int, int, java.lang.String, java.lang.String[], int, long, int) throws android.os.RemoteException
    {
        android.net.INetdEventCallback$Stub$Proxy r0;
        int i0, i1, i2, i3, i5;
        java.lang.String[] r1;
        long l4;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.INetdEventCallback $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, r12;
        java.lang.String r11;

        r0 := @this: android.net.INetdEventCallback$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r11 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String[];

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        i5 := @parameter7: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetdEventCallback");

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r11);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l4);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i5);

        $r3 = r0.<android.net.INetdEventCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, null, 1);

        if $z0 != 0 goto label07;

        $r4 = staticinvoke <android.net.INetdEventCallback$Stub: android.net.INetdEventCallback getDefaultImpl()>();

        if $r4 == null goto label07;

        $r5 = staticinvoke <android.net.INetdEventCallback$Stub: android.net.INetdEventCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.INetdEventCallback: void onDnsEvent(int,int,int,java.lang.String,java.lang.String[],int,long,int)>(i0, i1, i2, r11, r1, i3, l4, i5);

     label06:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        $r8 := @caughtexception;

        r12 = $r8;

        goto label13;

     label09:
        $r7 := @caughtexception;

        r12 = $r7;

        goto label13;

     label10:
        $r10 := @caughtexception;

        r12 = $r10;

        goto label13;

     label11:
        $r9 := @caughtexception;

        r12 = $r9;

        goto label13;

     label12:
        $r6 := @caughtexception;

        r12 = $r6;

     label13:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r12;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label08;
    }

    public void onNat64PrefixEvent(int, boolean, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetdEventCallback$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        android.net.INetdEventCallback $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        byte b2;

        r0 := @this: android.net.INetdEventCallback$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r6 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetdEventCallback");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r2 = r0.<android.net.INetdEventCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z1 != 0 goto label6;

        $r3 = staticinvoke <android.net.INetdEventCallback$Stub: android.net.INetdEventCallback getDefaultImpl()>();

        if $r3 == null goto label6;

        $r4 = staticinvoke <android.net.INetdEventCallback$Stub: android.net.INetdEventCallback getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.INetdEventCallback: void onNat64PrefixEvent(int,boolean,java.lang.String,int)>(i0, z0, r6, i1);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void onPrivateDnsValidationEvent(int, java.lang.String, java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.INetdEventCallback$Stub$Proxy r0;
        int i0;
        java.lang.String r1, r7;
        boolean z0, $z1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        android.net.INetdEventCallback $r4, $r5;
        java.lang.Throwable $r6;
        byte b1;

        r0 := @this: android.net.INetdEventCallback$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetdEventCallback");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

        $r3 = r0.<android.net.INetdEventCallback$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.net.INetdEventCallback$Stub: android.net.INetdEventCallback getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.net.INetdEventCallback$Stub: android.net.INetdEventCallback getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.INetdEventCallback: void onPrivateDnsValidationEvent(int,java.lang.String,java.lang.String,boolean)>(i0, r7, r1, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }
}
