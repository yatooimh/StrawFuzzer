class android.net.INetworkManagementEventObserver$Stub$Proxy extends java.lang.Object implements android.net.INetworkManagementEventObserver
{
    public static android.net.INetworkManagementEventObserver sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addressRemoved(java.lang.String, android.net.LinkAddress) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        android.net.LinkAddress r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.INetworkManagementEventObserver $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.LinkAddress;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.LinkAddress: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.INetworkManagementEventObserver: void addressRemoved(java.lang.String,android.net.LinkAddress)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void addressUpdated(java.lang.String, android.net.LinkAddress) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        android.net.LinkAddress r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.INetworkManagementEventObserver $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.LinkAddress;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

     label2:
        if r1 == null goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.LinkAddress: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r3 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, null, 1);

        if $z0 != 0 goto label8;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r4 == null goto label8;

        $r5 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.INetworkManagementEventObserver: void addressUpdated(java.lang.String,android.net.LinkAddress)>(r7, r1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        $r1 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        return "android.net.INetworkManagementEventObserver";
    }

    public void interfaceAdded(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.net.INetworkManagementEventObserver $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.INetworkManagementEventObserver: void interfaceAdded(java.lang.String)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void interfaceClassDataActivityChanged(java.lang.String, boolean, long) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        boolean z0, $z1;
        long l0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        android.net.INetworkManagementEventObserver $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        byte b1;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r2 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if $z1 != 0 goto label6;

        $r3 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r3 == null goto label6;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.INetworkManagementEventObserver: void interfaceClassDataActivityChanged(java.lang.String,boolean,long)>(r6, z0, l0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void interfaceDnsServerInfo(java.lang.String, long, java.lang.String[]) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        long l0;
        java.lang.String[] r1;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.INetworkManagementEventObserver $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r3 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.INetworkManagementEventObserver: void interfaceDnsServerInfo(java.lang.String,long,java.lang.String[])>(r7, l0, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void interfaceLinkStateChanged(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        android.net.INetworkManagementEventObserver $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        byte b0;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r2 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

        if $z1 != 0 goto label6;

        $r3 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r3 == null goto label6;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.INetworkManagementEventObserver: void interfaceLinkStateChanged(java.lang.String,boolean)>(r6, z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void interfaceRemoved(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.net.INetworkManagementEventObserver $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r2 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.INetworkManagementEventObserver: void interfaceRemoved(java.lang.String)>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void interfaceStatusChanged(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        android.net.INetworkManagementEventObserver $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        byte b0;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r6 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r2 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

        if $z1 != 0 goto label6;

        $r3 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r3 == null goto label6;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.INetworkManagementEventObserver: void interfaceStatusChanged(java.lang.String,boolean)>(r6, z0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void limitReached(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        java.lang.String r1, r7;
        android.os.Parcel r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.INetworkManagementEventObserver $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r3 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.INetworkManagementEventObserver: void limitReached(java.lang.String,java.lang.String)>(r7, r1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void routeRemoved(android.net.RouteInfo) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.net.INetworkManagementEventObserver $r3, $r4;
        java.lang.Throwable $r5;
        android.net.RouteInfo r6;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r6 := @parameter0: android.net.RouteInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.net.RouteInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.INetworkManagementEventObserver: void routeRemoved(android.net.RouteInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void routeUpdated(android.net.RouteInfo) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.net.INetworkManagementEventObserver $r3, $r4;
        java.lang.Throwable $r5;
        android.net.RouteInfo r6;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r6 := @parameter0: android.net.RouteInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.net.RouteInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.INetworkManagementEventObserver: void routeUpdated(android.net.RouteInfo)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }
}
