public abstract class android.net.INetworkPolicyManager$Stub extends android.os.Binder implements android.net.INetworkPolicyManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addUidPolicy;
    static final int TRANSACTION_factoryReset;
    static final int TRANSACTION_getNetworkPolicies;
    static final int TRANSACTION_getNetworkQuotaInfo;
    static final int TRANSACTION_getRestrictBackground;
    static final int TRANSACTION_getRestrictBackgroundByCaller;
    static final int TRANSACTION_getSubscriptionPlans;
    static final int TRANSACTION_getSubscriptionPlansOwner;
    static final int TRANSACTION_getUidPolicy;
    static final int TRANSACTION_getUidsWithPolicy;
    static final int TRANSACTION_isUidNetworkingBlocked;
    static final int TRANSACTION_registerListener;
    static final int TRANSACTION_removeUidPolicy;
    static final int TRANSACTION_setDeviceIdleMode;
    static final int TRANSACTION_setNetworkPolicies;
    static final int TRANSACTION_setRestrictBackground;
    static final int TRANSACTION_setSubscriptionOverride;
    static final int TRANSACTION_setSubscriptionPlans;
    static final int TRANSACTION_setUidPolicy;
    static final int TRANSACTION_setWifiMeteredOverride;
    static final int TRANSACTION_snoozeLimit;
    static final int TRANSACTION_unregisterListener;

    public void <init>()
    {
        android.net.INetworkPolicyManager$Stub r0;

        r0 := @this: android.net.INetworkPolicyManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.net.INetworkPolicyManager");

        return;
    }

    public static android.net.INetworkPolicyManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.net.INetworkPolicyManager$Stub$Proxy $r2;
        boolean $z0;
        android.net.INetworkPolicyManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.net.INetworkPolicyManager;

        if $z0 == 0 goto label2;

        $r3 = (android.net.INetworkPolicyManager) r1;

        return $r3;

     label2:
        $r2 = new android.net.INetworkPolicyManager$Stub$Proxy;

        specialinvoke $r2.<android.net.INetworkPolicyManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public static android.net.INetworkPolicyManager getDefaultImpl()
    {
        android.net.INetworkPolicyManager $r0;

        $r0 = <android.net.INetworkPolicyManager$Stub$Proxy: android.net.INetworkPolicyManager sDefaultImpl>;

        return $r0;
    }

    public static java.lang.String getDefaultTransactionName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label23;
            case 2: goto label22;
            case 3: goto label21;
            case 4: goto label20;
            case 5: goto label19;
            case 6: goto label18;
            case 7: goto label17;
            case 8: goto label16;
            case 9: goto label15;
            case 10: goto label14;
            case 11: goto label13;
            case 12: goto label12;
            case 13: goto label11;
            case 14: goto label10;
            case 15: goto label09;
            case 16: goto label08;
            case 17: goto label07;
            case 18: goto label06;
            case 19: goto label05;
            case 20: goto label04;
            case 21: goto label03;
            case 22: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        return "isUidNetworkingBlocked";

     label03:
        return "factoryReset";

     label04:
        return "setSubscriptionOverride";

     label05:
        return "getSubscriptionPlansOwner";

     label06:
        return "setSubscriptionPlans";

     label07:
        return "getSubscriptionPlans";

     label08:
        return "getNetworkQuotaInfo";

     label09:
        return "setWifiMeteredOverride";

     label10:
        return "setDeviceIdleMode";

     label11:
        return "getRestrictBackgroundByCaller";

     label12:
        return "getRestrictBackground";

     label13:
        return "setRestrictBackground";

     label14:
        return "snoozeLimit";

     label15:
        return "getNetworkPolicies";

     label16:
        return "setNetworkPolicies";

     label17:
        return "unregisterListener";

     label18:
        return "registerListener";

     label19:
        return "getUidsWithPolicy";

     label20:
        return "getUidPolicy";

     label21:
        return "removeUidPolicy";

     label22:
        return "addUidPolicy";

     label23:
        return "setUidPolicy";
    }

    public static boolean setDefaultImpl(android.net.INetworkPolicyManager)
    {
        android.net.INetworkPolicyManager r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.net.INetworkPolicyManager;

        $r1 = <android.net.INetworkPolicyManager$Stub$Proxy: android.net.INetworkPolicyManager sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.net.INetworkPolicyManager$Stub$Proxy: android.net.INetworkPolicyManager sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetworkPolicyManager$Stub r0;

        r0 := @this: android.net.INetworkPolicyManager$Stub;

        return r0;
    }

    public java.lang.String getTransactionName(int)
    {
        android.net.INetworkPolicyManager$Stub r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.net.INetworkPolicyManager$Stub;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.net.INetworkPolicyManager$Stub: java.lang.String getDefaultTransactionName(int)>(i0);

        return $r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.net.INetworkPolicyManager$Stub r0;
        android.os.Parcel r1, r22;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i27;
        java.lang.String $r2, $r3, $r7, $r8, $r11, $r14, r23;
        long $l5;
        android.os.Parcelable$Creator $r4, $r9, $r12, $r15;
        java.lang.Object[] $r5, $r16;
        android.telephony.SubscriptionPlan[] $r6, r24;
        java.lang.Object $r10, $r13;
        android.net.NetworkPolicy[] $r17, r28;
        android.os.IBinder $r18, $r20;
        android.net.INetworkPolicyListener $r19, $r21;
        boolean $z2, z3, z4, z5, z6, z7;
        android.net.NetworkState r25;
        android.net.NetworkQuotaInfo r26;
        android.net.NetworkTemplate r27;
        int[] r29;

        r0 := @this: android.net.INetworkPolicyManager$Stub;

        i22 := @parameter0: int;

        r22 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i0 := @parameter3: int;

        if i22 == 1598968902 goto label33;

        z3 = 0;

        tableswitch(i22)
        {
            case 1: goto label32;
            case 2: goto label31;
            case 3: goto label30;
            case 4: goto label29;
            case 5: goto label28;
            case 6: goto label27;
            case 7: goto label26;
            case 8: goto label25;
            case 9: goto label24;
            case 10: goto label21;
            case 11: goto label19;
            case 12: goto label18;
            case 13: goto label17;
            case 14: goto label15;
            case 15: goto label14;
            case 16: goto label09;
            case 17: goto label08;
            case 18: goto label07;
            case 19: goto label06;
            case 20: goto label05;
            case 21: goto label04;
            case 22: goto label02;
            default: goto label01;
        };

     label01:
        $z2 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i22, r22, r1, i0);

        return $z2;

     label02:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        i23 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label03;

        z3 = 1;

     label03:
        z4 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: boolean isUidNetworkingBlocked(int,boolean)>(i23, z3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i26 = (int) z4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i26);

        return 1;

     label04:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r2 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void factoryReset(java.lang.String)>($r2);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label05:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i2 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $l5 = virtualinvoke r22.<android.os.Parcel: long readLong()>();

        $r3 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setSubscriptionOverride(int,int,int,long,java.lang.String)>($i2, $i3, $i4, $l5, $r3);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label06:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i6 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        r23 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: java.lang.String getSubscriptionPlansOwner(int)>($i6);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r23);

        return 1;

     label07:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i7 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $r4 = <android.telephony.SubscriptionPlan: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r22.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        $r6 = (android.telephony.SubscriptionPlan[]) $r5;

        $r7 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setSubscriptionPlans(int,android.telephony.SubscriptionPlan[],java.lang.String)>($i7, $r6, $r7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label08:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i8 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $r8 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        r24 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: android.telephony.SubscriptionPlan[] getSubscriptionPlans(int,java.lang.String)>($i8, $r8);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r24, 1);

        return 1;

     label09:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i9 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i9 == 0 goto label10;

        $r9 = <android.net.NetworkState: android.os.Parcelable$Creator CREATOR>;

        $r10 = interfaceinvoke $r9.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r22);

        r25 = (android.net.NetworkState) $r10;

        goto label11;

     label10:
        r25 = null;

     label11:
        r26 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>(r25);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        if r26 == null goto label12;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r26.<android.net.NetworkQuotaInfo: void writeToParcel(android.os.Parcel,int)>(r1, 1);

        goto label13;

     label12:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label13:
        return 1;

     label14:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r11 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        $i10 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setWifiMeteredOverride(java.lang.String,int)>($r11, $i10);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label15:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        z5 = 0;

        $i11 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i11 == 0 goto label16;

        z5 = 1;

     label16:
        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setDeviceIdleMode(boolean)>(z5);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        i24 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: int getRestrictBackgroundByCaller()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i24);

        return 1;

     label18:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        z6 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: boolean getRestrictBackground()>();

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        i27 = (int) z6;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i27);

        return 1;

     label19:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        z7 = 0;

        $i12 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i12 == 0 goto label20;

        z7 = 1;

     label20:
        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setRestrictBackground(boolean)>(z7);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label21:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i13 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        if $i13 == 0 goto label22;

        $r12 = <android.net.NetworkTemplate: android.os.Parcelable$Creator CREATOR>;

        $r13 = interfaceinvoke $r12.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r22);

        r27 = (android.net.NetworkTemplate) $r13;

        goto label23;

     label22:
        r27 = null;

     label23:
        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void snoozeLimit(android.net.NetworkTemplate)>(r27);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label24:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r14 = virtualinvoke r22.<android.os.Parcel: java.lang.String readString()>();

        r28 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: android.net.NetworkPolicy[] getNetworkPolicies(java.lang.String)>($r14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r28, 1);

        return 1;

     label25:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r15 = <android.net.NetworkPolicy: android.os.Parcelable$Creator CREATOR>;

        $r16 = virtualinvoke r22.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r15);

        $r17 = (android.net.NetworkPolicy[]) $r16;

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setNetworkPolicies(android.net.NetworkPolicy[])>($r17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label26:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r18 = virtualinvoke r22.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r19 = staticinvoke <android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener asInterface(android.os.IBinder)>($r18);

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void unregisterListener(android.net.INetworkPolicyListener)>($r19);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label27:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r20 = virtualinvoke r22.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r21 = staticinvoke <android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener asInterface(android.os.IBinder)>($r20);

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void registerListener(android.net.INetworkPolicyListener)>($r21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label28:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i14 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        r29 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: int[] getUidsWithPolicy(int)>($i14);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>(r29);

        return 1;

     label29:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i15 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        i25 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: int getUidPolicy(int)>($i15);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i25);

        return 1;

     label30:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i16 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $i17 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void removeUidPolicy(int,int)>($i16, $i17);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label31:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i18 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $i19 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void addUidPolicy(int,int)>($i18, $i19);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label32:
        virtualinvoke r22.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i20 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        $i21 = virtualinvoke r22.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setUidPolicy(int,int)>($i20, $i21);

        virtualinvoke r1.<android.os.Parcel: void writeNoException()>();

        return 1;

     label33:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("android.net.INetworkPolicyManager");

        return 1;
    }

    public static void <clinit>()
    {
        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_unregisterListener> = 7;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_snoozeLimit> = 10;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setWifiMeteredOverride> = 15;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setUidPolicy> = 1;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setSubscriptionPlans> = 18;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setSubscriptionOverride> = 20;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setRestrictBackground> = 11;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setNetworkPolicies> = 8;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setDeviceIdleMode> = 14;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_removeUidPolicy> = 3;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_registerListener> = 6;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_isUidNetworkingBlocked> = 22;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getUidsWithPolicy> = 5;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getUidPolicy> = 4;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getSubscriptionPlansOwner> = 19;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getSubscriptionPlans> = 17;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getRestrictBackgroundByCaller> = 13;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getRestrictBackground> = 12;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getNetworkQuotaInfo> = 16;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getNetworkPolicies> = 9;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_factoryReset> = 21;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_addUidPolicy> = 2;

        <android.net.INetworkPolicyManager$Stub: java.lang.String DESCRIPTOR> = "android.net.INetworkPolicyManager";

        return;
    }
}
