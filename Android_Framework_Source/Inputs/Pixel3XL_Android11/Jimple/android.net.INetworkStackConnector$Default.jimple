public class android.net.INetworkStackConnector$Default extends java.lang.Object implements android.net.INetworkStackConnector
{

    public void <init>()
    {
        android.net.INetworkStackConnector$Default r0;

        r0 := @this: android.net.INetworkStackConnector$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetworkStackConnector$Default r0;

        r0 := @this: android.net.INetworkStackConnector$Default;

        return null;
    }

    public void fetchIpMemoryStore(android.net.IIpMemoryStoreCallbacks) throws android.os.RemoteException
    {
        android.net.INetworkStackConnector$Default r0;
        android.net.IIpMemoryStoreCallbacks r1;

        r0 := @this: android.net.INetworkStackConnector$Default;

        r1 := @parameter0: android.net.IIpMemoryStoreCallbacks;

        return;
    }

    public java.lang.String getInterfaceHash()
    {
        android.net.INetworkStackConnector$Default r0;

        r0 := @this: android.net.INetworkStackConnector$Default;

        return "";
    }

    public int getInterfaceVersion()
    {
        android.net.INetworkStackConnector$Default r0;

        r0 := @this: android.net.INetworkStackConnector$Default;

        return 0;
    }

    public void makeDhcpServer(java.lang.String, android.net.dhcp.DhcpServingParamsParcel, android.net.dhcp.IDhcpServerCallbacks) throws android.os.RemoteException
    {
        android.net.INetworkStackConnector$Default r0;
        java.lang.String r1;
        android.net.dhcp.DhcpServingParamsParcel r2;
        android.net.dhcp.IDhcpServerCallbacks r3;

        r0 := @this: android.net.INetworkStackConnector$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.dhcp.DhcpServingParamsParcel;

        r3 := @parameter2: android.net.dhcp.IDhcpServerCallbacks;

        return;
    }

    public void makeIpClient(java.lang.String, android.net.ip.IIpClientCallbacks) throws android.os.RemoteException
    {
        android.net.INetworkStackConnector$Default r0;
        java.lang.String r1;
        android.net.ip.IIpClientCallbacks r2;

        r0 := @this: android.net.INetworkStackConnector$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.ip.IIpClientCallbacks;

        return;
    }

    public void makeNetworkMonitor(android.net.Network, java.lang.String, android.net.INetworkMonitorCallbacks) throws android.os.RemoteException
    {
        android.net.INetworkStackConnector$Default r0;
        android.net.Network r1;
        java.lang.String r2;
        android.net.INetworkMonitorCallbacks r3;

        r0 := @this: android.net.INetworkStackConnector$Default;

        r1 := @parameter0: android.net.Network;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.INetworkMonitorCallbacks;

        return;
    }
}
