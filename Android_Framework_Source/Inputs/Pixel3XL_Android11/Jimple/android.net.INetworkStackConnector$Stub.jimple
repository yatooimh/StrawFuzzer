public abstract class android.net.INetworkStackConnector$Stub extends android.os.Binder implements android.net.INetworkStackConnector
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_fetchIpMemoryStore;
    static final int TRANSACTION_getInterfaceHash;
    static final int TRANSACTION_getInterfaceVersion;
    static final int TRANSACTION_makeDhcpServer;
    static final int TRANSACTION_makeIpClient;
    static final int TRANSACTION_makeNetworkMonitor;

    static void <clinit>()
    {
        java.lang.String $r0, $r1;

        <android.net.INetworkStackConnector$Stub: int TRANSACTION_makeNetworkMonitor> = 2;

        <android.net.INetworkStackConnector$Stub: int TRANSACTION_makeIpClient> = 3;

        <android.net.INetworkStackConnector$Stub: int TRANSACTION_makeDhcpServer> = 1;

        <android.net.INetworkStackConnector$Stub: int TRANSACTION_getInterfaceVersion> = 16777215;

        <android.net.INetworkStackConnector$Stub: int TRANSACTION_getInterfaceHash> = 16777214;

        <android.net.INetworkStackConnector$Stub: int TRANSACTION_fetchIpMemoryStore> = 4;

        $r0 = "android$net$INetworkStackConnector";

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        <android.net.INetworkStackConnector$Stub: java.lang.String DESCRIPTOR> = $r1;

        return;
    }

    public void <init>()
    {
        android.net.INetworkStackConnector$Stub r0;
        java.lang.String $r1;

        r0 := @this: android.net.INetworkStackConnector$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        $r1 = <android.net.INetworkStackConnector$Stub: java.lang.String DESCRIPTOR>;

        virtualinvoke r0.<android.net.INetworkStackConnector$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, $r1);

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <android.net.INetworkStackConnector$Stub: java.lang.String DESCRIPTOR>;

        return $r0;
    }

    public static android.net.INetworkStackConnector asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        java.lang.String $r2;
        android.net.INetworkStackConnector$Stub$Proxy $r3;
        boolean $z0;
        android.net.INetworkStackConnector $r4;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = <android.net.INetworkStackConnector$Stub: java.lang.String DESCRIPTOR>;

        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>($r2);

        if r1 == null goto label2;

        $z0 = r1 instanceof android.net.INetworkStackConnector;

        if $z0 == 0 goto label2;

        $r4 = (android.net.INetworkStackConnector) r1;

        return $r4;

     label2:
        $r3 = new android.net.INetworkStackConnector$Stub$Proxy;

        specialinvoke $r3.<android.net.INetworkStackConnector$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r3;
    }

    public static android.net.INetworkStackConnector getDefaultImpl()
    {
        android.net.INetworkStackConnector $r0;

        $r0 = <android.net.INetworkStackConnector$Stub$Proxy: android.net.INetworkStackConnector sDefaultImpl>;

        return $r0;
    }

    public static boolean setDefaultImpl(android.net.INetworkStackConnector)
    {
        android.net.INetworkStackConnector r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.net.INetworkStackConnector;

        $r1 = <android.net.INetworkStackConnector$Stub$Proxy: android.net.INetworkStackConnector sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.net.INetworkStackConnector$Stub$Proxy: android.net.INetworkStackConnector sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetworkStackConnector$Stub r0;

        r0 := @this: android.net.INetworkStackConnector$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.net.INetworkStackConnector$Stub r0;
        int i0, i1, $i2, $i3, $i4;
        android.os.Parcel r1, r17;
        android.os.IBinder $r2, $r7, $r12, $r14;
        android.net.dhcp.IDhcpServerCallbacks $r3;
        android.os.Parcelable$Creator $r4, $r9;
        java.lang.Object $r5, $r10;
        java.lang.String $r6, $r11, $r16, r18, r20;
        android.net.INetworkMonitorCallbacks $r8;
        android.net.ip.IIpClientCallbacks $r13;
        android.net.IIpMemoryStoreCallbacks $r15;
        boolean $z0;
        android.net.Network r19;
        android.net.dhcp.DhcpServingParamsParcel r21;

        r0 := @this: android.net.INetworkStackConnector$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r17 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r18 = <android.net.INetworkStackConnector$Stub: java.lang.String DESCRIPTOR>;

        if i0 == 1 goto label10;

        if i0 == 2 goto label07;

        if i0 == 3 goto label06;

        if i0 == 4 goto label05;

        if i0 == 1598968902 goto label04;

        tableswitch(i0)
        {
            case 16777214: goto label03;
            case 16777215: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r17, i1);

        return $z0;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r18);

        virtualinvoke r17.<android.os.Parcel: void writeNoException()>();

        $i4 = virtualinvoke r0.<android.net.INetworkStackConnector$Stub: int getInterfaceVersion()>();

        virtualinvoke r17.<android.os.Parcel: void writeInt(int)>($i4);

        return 1;

     label03:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r18);

        virtualinvoke r17.<android.os.Parcel: void writeNoException()>();

        $r16 = virtualinvoke r0.<android.net.INetworkStackConnector$Stub: java.lang.String getInterfaceHash()>();

        virtualinvoke r17.<android.os.Parcel: void writeString(java.lang.String)>($r16);

        return 1;

     label04:
        virtualinvoke r17.<android.os.Parcel: void writeString(java.lang.String)>(r18);

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r18);

        $r14 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r15 = staticinvoke <android.net.IIpMemoryStoreCallbacks$Stub: android.net.IIpMemoryStoreCallbacks asInterface(android.os.IBinder)>($r14);

        virtualinvoke r0.<android.net.INetworkStackConnector$Stub: void fetchIpMemoryStore(android.net.IIpMemoryStoreCallbacks)>($r15);

        return 1;

     label06:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r18);

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r12 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r13 = staticinvoke <android.net.ip.IIpClientCallbacks$Stub: android.net.ip.IIpClientCallbacks asInterface(android.os.IBinder)>($r12);

        virtualinvoke r0.<android.net.INetworkStackConnector$Stub: void makeIpClient(java.lang.String,android.net.ip.IIpClientCallbacks)>($r11, $r13);

        return 1;

     label07:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r18);

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label08;

        $r9 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r10 = interfaceinvoke $r9.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r19 = (android.net.Network) $r10;

        goto label09;

     label08:
        r19 = null;

     label09:
        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r7 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r8 = staticinvoke <android.net.INetworkMonitorCallbacks$Stub: android.net.INetworkMonitorCallbacks asInterface(android.os.IBinder)>($r7);

        virtualinvoke r0.<android.net.INetworkStackConnector$Stub: void makeNetworkMonitor(android.net.Network,java.lang.String,android.net.INetworkMonitorCallbacks)>(r19, $r6, $r8);

        return 1;

     label10:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r18);

        r20 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label11;

        $r4 = <android.net.dhcp.DhcpServingParamsParcel: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r21 = (android.net.dhcp.DhcpServingParamsParcel) $r5;

        goto label12;

     label11:
        r21 = null;

     label12:
        $r2 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r3 = staticinvoke <android.net.dhcp.IDhcpServerCallbacks$Stub: android.net.dhcp.IDhcpServerCallbacks asInterface(android.os.IBinder)>($r2);

        virtualinvoke r0.<android.net.INetworkStackConnector$Stub: void makeDhcpServer(java.lang.String,android.net.dhcp.DhcpServingParamsParcel,android.net.dhcp.IDhcpServerCallbacks)>(r20, r21, $r3);

        return 1;
    }
}
