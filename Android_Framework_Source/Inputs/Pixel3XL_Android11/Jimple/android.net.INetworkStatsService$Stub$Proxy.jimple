class android.net.INetworkStatsService$Stub$Proxy extends java.lang.Object implements android.net.INetworkStatsService
{
    public static android.net.INetworkStatsService sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        $r1 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void forceUpdate() throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetworkStatsService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        $r4 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetworkStatsService: void forceUpdate()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void forceUpdateIfaces(android.net.Network[], android.net.NetworkState[], java.lang.String, com.android.internal.net.VpnInfo[]) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        android.net.NetworkState[] r1;
        java.lang.String r2;
        com.android.internal.net.VpnInfo[] r3;
        android.os.Parcel r4, r5;
        android.os.IBinder $r6;
        boolean $z0;
        android.net.INetworkStatsService $r7, $r8;
        java.lang.Throwable $r9;
        android.net.Network[] r10;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        r10 := @parameter0: android.net.Network[];

        r1 := @parameter1: android.net.NetworkState[];

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: com.android.internal.net.VpnInfo[];

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        virtualinvoke r4.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r10, 0);

        virtualinvoke r4.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r1, 0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r3, 0);

        $r6 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r4, r5, 0);

        if $z0 != 0 goto label3;

        $r7 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r7 == null goto label3;

        $r8 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.INetworkStatsService: void forceUpdateIfaces(android.net.Network[],android.net.NetworkState[],java.lang.String,com.android.internal.net.VpnInfo[])>(r10, r1, r2, r3);

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r9 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.NetworkStats getDataLayerSnapshotForUid(int) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.INetworkStatsService $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkStats r9, r10;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.INetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.net.NetworkStats: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.NetworkStats) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.NetworkStats getDetailedUidStats(java.lang.String[]) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.INetworkStatsService $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String[] r9;
        android.net.NetworkStats r10, r11;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        r9 := @parameter0: java.lang.String[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r9);

        $r3 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.INetworkStatsService: android.net.NetworkStats getDetailedUidStats(java.lang.String[])>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.net.NetworkStats: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.NetworkStats) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public long getIfaceStats(java.lang.String, int) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.INetworkStatsService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        long l1, l2;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        l1 = interfaceinvoke $r5.<android.net.INetworkStatsService: long getIfaceStats(java.lang.String,int)>(r7, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.INetworkStatsService$Stub$Proxy r0;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        return "android.net.INetworkStatsService";
    }

    public java.lang.String[] getMobileIfaces() throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.INetworkStatsService $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        $r3 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.INetworkStatsService: java.lang.String[] getMobileIfaces()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getTotalStats(int) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetworkStatsService $r5, $r6;
        java.lang.Throwable $r7;
        long l1, l2;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        l1 = interfaceinvoke $r6.<android.net.INetworkStatsService: long getTotalStats(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public long getUidStats(int, int) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetworkStatsService $r5, $r6;
        java.lang.Throwable $r7;
        long l2, l3;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        l2 = interfaceinvoke $r6.<android.net.INetworkStatsService: long getUidStats(int,int)>(i0, i1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l3 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void incrementOperationCount(int, int, int) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetworkStatsService $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        $r4 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetworkStatsService: void incrementOperationCount(int,int,int)>(i0, i1, i2);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.INetworkStatsSession openSession() throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.net.INetworkStatsService $r5, $r6;
        java.lang.Throwable $r7;
        android.net.INetworkStatsSession r8, r9;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        $r3 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        r8 = interfaceinvoke $r6.<android.net.INetworkStatsService: android.net.INetworkStatsSession openSession()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r9 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.INetworkStatsSession openSessionForUsageStats(int, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.net.INetworkStatsService $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.net.INetworkStatsSession r9, r10;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r3 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.net.INetworkStatsService: android.net.INetworkStatsSession openSessionForUsageStats(int,java.lang.String)>(i0, r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r10 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.netstats.provider.INetworkStatsProviderCallback registerNetworkStatsProvider(java.lang.String, android.net.netstats.provider.INetworkStatsProvider) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        android.net.netstats.provider.INetworkStatsProvider r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, $r5, r10;
        boolean $z0;
        android.net.INetworkStatsService $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.net.netstats.provider.INetworkStatsProviderCallback r11, r12;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.netstats.provider.INetworkStatsProvider;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r9);

     label02:
        if r1 == null goto label05;

     label03:
        r10 = interfaceinvoke r1.<android.net.netstats.provider.INetworkStatsProvider: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

        $r4 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        r11 = interfaceinvoke $r7.<android.net.INetworkStatsService: android.net.netstats.provider.INetworkStatsProviderCallback registerNetworkStatsProvider(java.lang.String,android.net.netstats.provider.INetworkStatsProvider)>(r9, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r11;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r5 = virtualinvoke r3.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r12 = staticinvoke <android.net.netstats.provider.INetworkStatsProviderCallback$Stub: android.net.netstats.provider.INetworkStatsProviderCallback asInterface(android.os.IBinder)>($r5);

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r12;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.net.DataUsageRequest registerUsageCallback(java.lang.String, android.net.DataUsageRequest, android.os.Messenger, android.os.IBinder) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        android.net.DataUsageRequest r1, r13, r14;
        android.os.Messenger r2;
        android.os.IBinder r3, $r6;
        android.os.Parcel r4, r5;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;
        android.net.INetworkStatsService $r9, $r10;
        java.lang.Throwable $r11;
        java.lang.String r12;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.DataUsageRequest;

        r2 := @parameter2: android.os.Messenger;

        r3 := @parameter3: android.os.IBinder;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r12);

     label02:
        if r1 == null goto label05;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.DataUsageRequest: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        if r2 == null goto label09;

     label07:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label08:
        goto label10;

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r3);

        $r6 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r4, r5, 0);

        if $z0 != 0 goto label12;

        $r9 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r9 == null goto label12;

        $r10 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        r13 = interfaceinvoke $r10.<android.net.INetworkStatsService: android.net.DataUsageRequest registerUsageCallback(java.lang.String,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder)>(r12, r1, r2, r3);

     label11:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r13;

     label12:
        virtualinvoke r5.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label14;

        $r7 = <android.net.DataUsageRequest: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r5);

        r14 = (android.net.DataUsageRequest) $r8;

     label13:
        goto label15;

     label14:
        r14 = null;

     label15:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r14;

     label16:
        $r11 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
    }

    public void unregisterUsageRequest(android.net.DataUsageRequest) throws android.os.RemoteException
    {
        android.net.INetworkStatsService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.INetworkStatsService $r4, $r5;
        java.lang.Throwable $r6;
        android.net.DataUsageRequest r7;

        r0 := @this: android.net.INetworkStatsService$Stub$Proxy;

        r7 := @parameter0: android.net.DataUsageRequest;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsService");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.DataUsageRequest: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.INetworkStatsService$Stub: android.net.INetworkStatsService getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.INetworkStatsService: void unregisterUsageRequest(android.net.DataUsageRequest)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
