class android.net.INetworkStatsSession$Stub$Proxy extends java.lang.Object implements android.net.INetworkStatsSession
{
    public static android.net.INetworkStatsSession sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        $r1 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void close() throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.INetworkStatsSession $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

        $r4 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.INetworkStatsSession: void close()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.NetworkStats getDeviceSummaryForNetwork(android.net.NetworkTemplate, long, long) throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        long l0, l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i2;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.INetworkStatsSession $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkTemplate r9;
        android.net.NetworkStats r10, r11;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r9 := @parameter0: android.net.NetworkTemplate;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r3 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.INetworkStatsSession: android.net.NetworkStats getDeviceSummaryForNetwork(android.net.NetworkTemplate,long,long)>(r9, l0, l1);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label10;

        $r4 = <android.net.NetworkStats: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.NetworkStats) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate, int) throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.INetworkStatsSession $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkTemplate r9;
        android.net.NetworkStatsHistory r10, r11;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r9 := @parameter0: android.net.NetworkTemplate;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.INetworkStatsSession: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>(r9, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label10;

        $r4 = <android.net.NetworkStatsHistory: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.NetworkStatsHistory) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        int i0, i1, i2, i3, $i4;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.INetworkStatsSession $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkTemplate r9;
        android.net.NetworkStatsHistory r10, r11;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r9 := @parameter0: android.net.NetworkTemplate;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        $r3 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.INetworkStatsSession: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>(r9, i0, i1, i2, i3);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i4 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label10;

        $r4 = <android.net.NetworkStatsHistory: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.NetworkStatsHistory) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public android.net.NetworkStatsHistory getHistoryIntervalForUid(android.net.NetworkTemplate, int, int, int, int, long, long) throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        int i0, i1, i2, i3, $i6;
        long l4, l5;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.INetworkStatsSession $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, r14;
        android.net.NetworkTemplate r11;
        android.net.NetworkStatsHistory r12, r13;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r11 := @parameter0: android.net.NetworkTemplate;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        l4 := @parameter5: long;

        l5 := @parameter6: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

     label02:
        if r11 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r11.<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l4);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l5);

        $r3 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label09;

        $r6 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        if $r6 == null goto label09;

        $r7 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        r12 = interfaceinvoke $r7.<android.net.INetworkStatsSession: android.net.NetworkStatsHistory getHistoryIntervalForUid(android.net.NetworkTemplate,int,int,int,int,long,long)>(r11, i0, i1, i2, i3, l4, l5);

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r12;

     label09:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i6 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label11;

        $r4 = <android.net.NetworkStatsHistory: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r13 = (android.net.NetworkStatsHistory) $r5;

     label10:
        goto label12;

     label11:
        r13 = null;

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r13;

     label13:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label16;

     label14:
        $r9 := @caughtexception;

        r14 = $r9;

        goto label16;

     label15:
        $r10 := @caughtexception;

        r14 = $r10;

     label16:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        return "android.net.INetworkStatsSession";
    }

    public int[] getRelevantUids() throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.INetworkStatsSession $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

        $r3 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.INetworkStatsSession: int[] getRelevantUids()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate, long, long, boolean) throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        long l0, l1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        int $i2;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.INetworkStatsSession $r6, $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, r15;
        android.net.NetworkTemplate r12;
        byte b3;
        android.net.NetworkStats r13, r14;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r12 := @parameter0: android.net.NetworkTemplate;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

     label02:
        b3 = 1;

        if r12 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r12.<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

     label08:
        if z0 == 0 goto label09;

        goto label10;

     label09:
        b3 = 0;

     label10:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b3);

     label11:
        $r3 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z1 != 0 goto label13;

        $r6 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        r13 = interfaceinvoke $r7.<android.net.INetworkStatsSession: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>(r12, l0, l1, z0);

     label12:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r13;

     label13:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label15;

        $r4 = <android.net.NetworkStats: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r14 = (android.net.NetworkStats) $r5;

     label14:
        goto label16;

     label15:
        r14 = null;

     label16:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r14;

     label17:
        $r8 := @caughtexception;

        r15 = $r8;

        goto label21;

     label18:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label21;

     label19:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label21;

     label20:
        $r10 := @caughtexception;

        r15 = $r10;

     label21:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
    }

    public android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate, long, long) throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        long l0, l1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i2;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.INetworkStatsSession $r6, $r7;
        java.lang.Throwable $r8;
        android.net.NetworkTemplate r9;
        android.net.NetworkStats r10, r11;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r9 := @parameter0: android.net.NetworkTemplate;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

     label02:
        if r9 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r9.<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r3 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r6 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        if $r6 == null goto label08;

        $r7 = staticinvoke <android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.INetworkStatsSession: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>(r9, l0, l1);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label10;

        $r4 = <android.net.NetworkStats: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.NetworkStats) $r5;

     label09:
        goto label11;

     label10:
        r11 = null;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label12:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }
}
