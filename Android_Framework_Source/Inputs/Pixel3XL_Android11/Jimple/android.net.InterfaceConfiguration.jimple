public class android.net.InterfaceConfiguration extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String[] EMPTY_STRING_ARRAY;
    private static final java.lang.String FLAG_DOWN;
    private static final java.lang.String FLAG_UP;
    private android.net.LinkAddress mAddr;
    private java.util.HashSet mFlags;
    private java.lang.String mHwAddr;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.net.InterfaceConfiguration$1 $r1;

        <android.net.InterfaceConfiguration: java.lang.String FLAG_UP> = "up";

        <android.net.InterfaceConfiguration: java.lang.String FLAG_DOWN> = "down";

        $r0 = newarray (java.lang.String)[0];

        <android.net.InterfaceConfiguration: java.lang.String[] EMPTY_STRING_ARRAY> = $r0;

        $r1 = new android.net.InterfaceConfiguration$1;

        specialinvoke $r1.<android.net.InterfaceConfiguration$1: void <init>()>();

        <android.net.InterfaceConfiguration: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    public void <init>()
    {
        android.net.InterfaceConfiguration r0;
        java.util.HashSet $r1;

        r0 := @this: android.net.InterfaceConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags> = $r1;

        return;
    }

    static java.lang.String access$002(android.net.InterfaceConfiguration, java.lang.String)
    {
        android.net.InterfaceConfiguration r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.InterfaceConfiguration;

        r1 := @parameter1: java.lang.String;

        r0.<android.net.InterfaceConfiguration: java.lang.String mHwAddr> = r1;

        return r1;
    }

    static android.net.LinkAddress access$102(android.net.InterfaceConfiguration, android.net.LinkAddress)
    {
        android.net.InterfaceConfiguration r0;
        android.net.LinkAddress r1;

        r0 := @parameter0: android.net.InterfaceConfiguration;

        r1 := @parameter1: android.net.LinkAddress;

        r0.<android.net.InterfaceConfiguration: android.net.LinkAddress mAddr> = r1;

        return r1;
    }

    static java.util.HashSet access$200(android.net.InterfaceConfiguration)
    {
        android.net.InterfaceConfiguration r0;
        java.util.HashSet $r1;

        r0 := @parameter0: android.net.InterfaceConfiguration;

        $r1 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        return $r1;
    }

    private static void validateFlag(java.lang.String)
    {
        java.lang.String r0, $r6;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(32);

        if $i0 >= 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flag contains space: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void clearFlag(java.lang.String)
    {
        android.net.InterfaceConfiguration r0;
        java.lang.String r1;
        java.util.HashSet $r2;

        r0 := @this: android.net.InterfaceConfiguration;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.net.InterfaceConfiguration: void validateFlag(java.lang.String)>(r1);

        $r2 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public int describeContents()
    {
        android.net.InterfaceConfiguration r0;

        r0 := @this: android.net.InterfaceConfiguration;

        return 0;
    }

    public java.lang.Iterable getFlags()
    {
        android.net.InterfaceConfiguration r0;
        java.util.HashSet $r1;

        r0 := @this: android.net.InterfaceConfiguration;

        $r1 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        return $r1;
    }

    public java.lang.String getHardwareAddress()
    {
        android.net.InterfaceConfiguration r0;
        java.lang.String $r1;

        r0 := @this: android.net.InterfaceConfiguration;

        $r1 = r0.<android.net.InterfaceConfiguration: java.lang.String mHwAddr>;

        return $r1;
    }

    public android.net.LinkAddress getLinkAddress()
    {
        android.net.InterfaceConfiguration r0;
        android.net.LinkAddress $r1;

        r0 := @this: android.net.InterfaceConfiguration;

        $r1 = r0.<android.net.InterfaceConfiguration: android.net.LinkAddress mAddr>;

        return $r1;
    }

    public boolean hasFlag(java.lang.String)
    {
        android.net.InterfaceConfiguration r0;
        java.lang.String r1;
        java.util.HashSet $r2;
        boolean $z0;

        r0 := @this: android.net.InterfaceConfiguration;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.net.InterfaceConfiguration: void validateFlag(java.lang.String)>(r1);

        $r2 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        $z0 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public void ignoreInterfaceUpDownStatus()
    {
        android.net.InterfaceConfiguration r0;
        java.util.HashSet $r1, $r2;

        r0 := @this: android.net.InterfaceConfiguration;

        $r1 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        virtualinvoke $r1.<java.util.HashSet: boolean remove(java.lang.Object)>("up");

        $r2 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>("down");

        return;
    }

    public boolean isActive()
    {
        android.net.InterfaceConfiguration r0;
        int i0, i2;
        byte b1;
        boolean $z0;
        android.net.LinkAddress $r1;
        java.net.InetAddress $r2;
        java.lang.NullPointerException $r3;
        byte[] r4;

        r0 := @this: android.net.InterfaceConfiguration;

     label1:
        $z0 = virtualinvoke r0.<android.net.InterfaceConfiguration: boolean isUp()>();

        if $z0 == 0 goto label5;

        $r1 = r0.<android.net.InterfaceConfiguration: android.net.LinkAddress mAddr>;

        $r2 = virtualinvoke $r1.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        r4 = virtualinvoke $r2.<java.net.InetAddress: byte[] getAddress()>();

        i0 = lengthof r4;

     label2:
        i2 = 0;

     label3:
        if i2 >= i0 goto label5;

        b1 = r4[i2];

        if b1 == 0 goto label4;

        return 1;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return 0;

     label6:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.NullPointerException from label1 to label2 with label6;
    }

    public boolean isUp()
    {
        android.net.InterfaceConfiguration r0;
        boolean $z0;

        r0 := @this: android.net.InterfaceConfiguration;

        $z0 = virtualinvoke r0.<android.net.InterfaceConfiguration: boolean hasFlag(java.lang.String)>("up");

        return $z0;
    }

    public void setFlag(java.lang.String)
    {
        android.net.InterfaceConfiguration r0;
        java.lang.String r1;
        java.util.HashSet $r2;

        r0 := @this: android.net.InterfaceConfiguration;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.net.InterfaceConfiguration: void validateFlag(java.lang.String)>(r1);

        $r2 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void setHardwareAddress(java.lang.String)
    {
        android.net.InterfaceConfiguration r0;
        java.lang.String r1;

        r0 := @this: android.net.InterfaceConfiguration;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.InterfaceConfiguration: java.lang.String mHwAddr> = r1;

        return;
    }

    public void setInterfaceDown()
    {
        android.net.InterfaceConfiguration r0;
        java.util.HashSet $r1, $r2;

        r0 := @this: android.net.InterfaceConfiguration;

        $r1 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        virtualinvoke $r1.<java.util.HashSet: boolean remove(java.lang.Object)>("up");

        $r2 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>("down");

        return;
    }

    public void setInterfaceUp()
    {
        android.net.InterfaceConfiguration r0;
        java.util.HashSet $r1, $r2;

        r0 := @this: android.net.InterfaceConfiguration;

        $r1 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        virtualinvoke $r1.<java.util.HashSet: boolean remove(java.lang.Object)>("down");

        $r2 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>("up");

        return;
    }

    public void setLinkAddress(android.net.LinkAddress)
    {
        android.net.InterfaceConfiguration r0;
        android.net.LinkAddress r1;

        r0 := @this: android.net.InterfaceConfiguration;

        r1 := @parameter0: android.net.LinkAddress;

        r0.<android.net.InterfaceConfiguration: android.net.LinkAddress mAddr> = r1;

        return;
    }

    public java.lang.String toString()
    {
        android.net.InterfaceConfiguration r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r8, $r13;
        android.net.LinkAddress $r7;
        java.lang.Iterable $r11;

        r0 := @this: android.net.InterfaceConfiguration;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mHwAddr=");

        $r4 = r0.<android.net.InterfaceConfiguration: java.lang.String mHwAddr>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAddr=");

        $r7 = r0.<android.net.InterfaceConfiguration: android.net.LinkAddress mAddr>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFlags=");

        $r11 = virtualinvoke r0.<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.InterfaceConfiguration r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.util.Iterator r2;
        java.lang.String $r3, $r8;
        android.net.LinkAddress $r4, $r9;
        java.util.HashSet $r5, $r6;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: android.net.InterfaceConfiguration;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r3 = r0.<android.net.InterfaceConfiguration: java.lang.String mHwAddr>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<android.net.InterfaceConfiguration: android.net.LinkAddress mAddr>;

        if $r4 == null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(1);

        $r9 = r0.<android.net.InterfaceConfiguration: android.net.LinkAddress mAddr>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r9, i0);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(0);

     label2:
        $r5 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        $i1 = virtualinvoke $r5.<java.util.HashSet: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r6 = r0.<android.net.InterfaceConfiguration: java.util.HashSet mFlags>;

        r2 = virtualinvoke $r6.<java.util.HashSet: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) $r7;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r8);

        goto label3;

     label4:
        return;
    }
}
