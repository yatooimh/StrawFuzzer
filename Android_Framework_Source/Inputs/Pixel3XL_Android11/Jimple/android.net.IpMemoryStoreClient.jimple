public abstract class android.net.IpMemoryStoreClient extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/net/IpMemoryStoreClient;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.net.IpMemoryStoreClient: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.net.IpMemoryStoreClient r0;
        android.content.Context r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        r0.<android.net.IpMemoryStoreClient: android.content.Context mContext> = r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("missing context");

        throw $r2;
    }

    private void ignoringRemoteException(android.net.IpMemoryStoreClient$ThrowingRunnable)
    {
        android.net.IpMemoryStoreClient r0;
        android.net.IpMemoryStoreClient$ThrowingRunnable r1;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: android.net.IpMemoryStoreClient$ThrowingRunnable;

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(java.lang.String,android.net.IpMemoryStoreClient$ThrowingRunnable)>("Failed to execute remote procedure call", r1);

        return;
    }

    private void ignoringRemoteException(java.lang.String, android.net.IpMemoryStoreClient$ThrowingRunnable)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1, $r3;
        android.os.RemoteException $r2;
        android.net.IpMemoryStoreClient$ThrowingRunnable r4;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: android.net.IpMemoryStoreClient$ThrowingRunnable;

     label1:
        interfaceinvoke r4.<android.net.IpMemoryStoreClient$ThrowingRunnable: void run()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <android.net.IpMemoryStoreClient: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, r1, $r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void lambda$delete$18(android.net.IIpMemoryStore, java.lang.String, boolean, android.net.ipmemorystore.OnDeleteStatusListener) throws android.os.RemoteException
    {
        android.net.IIpMemoryStore r0;
        java.lang.String r1;
        boolean z0;
        android.net.ipmemorystore.OnDeleteStatusListener r2;
        android.net.ipmemorystore.IOnStatusAndCountListener $r3;

        r0 := @parameter0: android.net.IIpMemoryStore;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.net.ipmemorystore.OnDeleteStatusListener;

        $r3 = staticinvoke <android.net.ipmemorystore.OnDeleteStatusListener: android.net.ipmemorystore.IOnStatusAndCountListener toAIDL(android.net.ipmemorystore.OnDeleteStatusListener)>(r2);

        interfaceinvoke r0.<android.net.IIpMemoryStore: void delete(java.lang.String,boolean,android.net.ipmemorystore.IOnStatusAndCountListener)>(r1, z0, $r3);

        return;
    }

    static void lambda$delete$20(android.net.ipmemorystore.OnDeleteStatusListener) throws android.os.RemoteException
    {
        android.net.ipmemorystore.OnDeleteStatusListener r0;
        android.net.ipmemorystore.Status $r1;

        r0 := @parameter0: android.net.ipmemorystore.OnDeleteStatusListener;

        $r1 = new android.net.ipmemorystore.Status;

        specialinvoke $r1.<android.net.ipmemorystore.Status: void <init>(int)>(-5);

        interfaceinvoke r0.<android.net.ipmemorystore.OnDeleteStatusListener: void onComplete(android.net.ipmemorystore.Status,int)>($r1, 0);

        return;
    }

    static void lambda$deleteCluster$21(android.net.IIpMemoryStore, java.lang.String, boolean, android.net.ipmemorystore.OnDeleteStatusListener) throws android.os.RemoteException
    {
        android.net.IIpMemoryStore r0;
        java.lang.String r1;
        boolean z0;
        android.net.ipmemorystore.OnDeleteStatusListener r2;
        android.net.ipmemorystore.IOnStatusAndCountListener $r3;

        r0 := @parameter0: android.net.IIpMemoryStore;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.net.ipmemorystore.OnDeleteStatusListener;

        $r3 = staticinvoke <android.net.ipmemorystore.OnDeleteStatusListener: android.net.ipmemorystore.IOnStatusAndCountListener toAIDL(android.net.ipmemorystore.OnDeleteStatusListener)>(r2);

        interfaceinvoke r0.<android.net.IIpMemoryStore: void deleteCluster(java.lang.String,boolean,android.net.ipmemorystore.IOnStatusAndCountListener)>(r1, z0, $r3);

        return;
    }

    static void lambda$deleteCluster$23(android.net.ipmemorystore.OnDeleteStatusListener) throws android.os.RemoteException
    {
        android.net.ipmemorystore.OnDeleteStatusListener r0;
        android.net.ipmemorystore.Status $r1;

        r0 := @parameter0: android.net.ipmemorystore.OnDeleteStatusListener;

        $r1 = new android.net.ipmemorystore.Status;

        specialinvoke $r1.<android.net.ipmemorystore.Status: void <init>(int)>(-5);

        interfaceinvoke r0.<android.net.ipmemorystore.OnDeleteStatusListener: void onComplete(android.net.ipmemorystore.Status,int)>($r1, 0);

        return;
    }

    static void lambda$factoryReset$24(android.net.IIpMemoryStore) throws android.os.RemoteException
    {
        android.net.IIpMemoryStore r0;

        r0 := @parameter0: android.net.IIpMemoryStore;

        interfaceinvoke r0.<android.net.IIpMemoryStore: void factoryReset()>();

        return;
    }

    static void lambda$findL2Key$6(android.net.IIpMemoryStore, android.net.ipmemorystore.NetworkAttributes, android.net.ipmemorystore.OnL2KeyResponseListener) throws android.os.RemoteException
    {
        android.net.IIpMemoryStore r0;
        android.net.ipmemorystore.NetworkAttributes r1;
        android.net.ipmemorystore.OnL2KeyResponseListener r2;
        android.net.ipmemorystore.NetworkAttributesParcelable $r3;
        android.net.ipmemorystore.IOnL2KeyResponseListener $r4;

        r0 := @parameter0: android.net.IIpMemoryStore;

        r1 := @parameter1: android.net.ipmemorystore.NetworkAttributes;

        r2 := @parameter2: android.net.ipmemorystore.OnL2KeyResponseListener;

        $r3 = virtualinvoke r1.<android.net.ipmemorystore.NetworkAttributes: android.net.ipmemorystore.NetworkAttributesParcelable toParcelable()>();

        $r4 = staticinvoke <android.net.ipmemorystore.OnL2KeyResponseListener: android.net.ipmemorystore.IOnL2KeyResponseListener toAIDL(android.net.ipmemorystore.OnL2KeyResponseListener)>(r2);

        interfaceinvoke r0.<android.net.IIpMemoryStore: void findL2Key(android.net.ipmemorystore.NetworkAttributesParcelable,android.net.ipmemorystore.IOnL2KeyResponseListener)>($r3, $r4);

        return;
    }

    static void lambda$findL2Key$8(android.net.ipmemorystore.OnL2KeyResponseListener) throws android.os.RemoteException
    {
        android.net.ipmemorystore.OnL2KeyResponseListener r0;
        android.net.ipmemorystore.Status $r1;

        r0 := @parameter0: android.net.ipmemorystore.OnL2KeyResponseListener;

        $r1 = new android.net.ipmemorystore.Status;

        specialinvoke $r1.<android.net.ipmemorystore.Status: void <init>(int)>(-5);

        interfaceinvoke r0.<android.net.ipmemorystore.OnL2KeyResponseListener: void onL2KeyResponse(android.net.ipmemorystore.Status,java.lang.String)>($r1, null);

        return;
    }

    static void lambda$isSameNetwork$11(android.net.ipmemorystore.OnSameL3NetworkResponseListener) throws android.os.RemoteException
    {
        android.net.ipmemorystore.OnSameL3NetworkResponseListener r0;
        android.net.ipmemorystore.Status $r1;

        r0 := @parameter0: android.net.ipmemorystore.OnSameL3NetworkResponseListener;

        $r1 = new android.net.ipmemorystore.Status;

        specialinvoke $r1.<android.net.ipmemorystore.Status: void <init>(int)>(-5);

        interfaceinvoke r0.<android.net.ipmemorystore.OnSameL3NetworkResponseListener: void onSameL3NetworkResponse(android.net.ipmemorystore.Status,android.net.ipmemorystore.SameL3NetworkResponse)>($r1, null);

        return;
    }

    static void lambda$isSameNetwork$9(android.net.IIpMemoryStore, java.lang.String, java.lang.String, android.net.ipmemorystore.OnSameL3NetworkResponseListener) throws android.os.RemoteException
    {
        android.net.IIpMemoryStore r0;
        java.lang.String r1, r2;
        android.net.ipmemorystore.OnSameL3NetworkResponseListener r3;
        android.net.ipmemorystore.IOnSameL3NetworkResponseListener $r4;

        r0 := @parameter0: android.net.IIpMemoryStore;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.net.ipmemorystore.OnSameL3NetworkResponseListener;

        $r4 = staticinvoke <android.net.ipmemorystore.OnSameL3NetworkResponseListener: android.net.ipmemorystore.IOnSameL3NetworkResponseListener toAIDL(android.net.ipmemorystore.OnSameL3NetworkResponseListener)>(r3);

        interfaceinvoke r0.<android.net.IIpMemoryStore: void isSameNetwork(java.lang.String,java.lang.String,android.net.ipmemorystore.IOnSameL3NetworkResponseListener)>(r1, r2, $r4);

        return;
    }

    static void lambda$retrieveBlob$15(android.net.IIpMemoryStore, java.lang.String, java.lang.String, java.lang.String, android.net.ipmemorystore.OnBlobRetrievedListener) throws android.os.RemoteException
    {
        android.net.IIpMemoryStore r0;
        java.lang.String r1, r2, r3;
        android.net.ipmemorystore.OnBlobRetrievedListener r4;
        android.net.ipmemorystore.IOnBlobRetrievedListener $r5;

        r0 := @parameter0: android.net.IIpMemoryStore;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.net.ipmemorystore.OnBlobRetrievedListener;

        $r5 = staticinvoke <android.net.ipmemorystore.OnBlobRetrievedListener: android.net.ipmemorystore.IOnBlobRetrievedListener toAIDL(android.net.ipmemorystore.OnBlobRetrievedListener)>(r4);

        interfaceinvoke r0.<android.net.IIpMemoryStore: void retrieveBlob(java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.IOnBlobRetrievedListener)>(r1, r2, r3, $r5);

        return;
    }

    static void lambda$retrieveBlob$17(android.net.ipmemorystore.OnBlobRetrievedListener) throws android.os.RemoteException
    {
        android.net.ipmemorystore.OnBlobRetrievedListener r0;
        android.net.ipmemorystore.Status $r1;

        r0 := @parameter0: android.net.ipmemorystore.OnBlobRetrievedListener;

        $r1 = new android.net.ipmemorystore.Status;

        specialinvoke $r1.<android.net.ipmemorystore.Status: void <init>(int)>(-5);

        interfaceinvoke r0.<android.net.ipmemorystore.OnBlobRetrievedListener: void onBlobRetrieved(android.net.ipmemorystore.Status,java.lang.String,java.lang.String,android.net.ipmemorystore.Blob)>($r1, null, null, null);

        return;
    }

    static void lambda$retrieveNetworkAttributes$12(android.net.IIpMemoryStore, java.lang.String, android.net.ipmemorystore.OnNetworkAttributesRetrievedListener) throws android.os.RemoteException
    {
        android.net.IIpMemoryStore r0;
        java.lang.String r1;
        android.net.ipmemorystore.OnNetworkAttributesRetrievedListener r2;
        android.net.ipmemorystore.IOnNetworkAttributesRetrievedListener $r3;

        r0 := @parameter0: android.net.IIpMemoryStore;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.ipmemorystore.OnNetworkAttributesRetrievedListener;

        $r3 = staticinvoke <android.net.ipmemorystore.OnNetworkAttributesRetrievedListener: android.net.ipmemorystore.IOnNetworkAttributesRetrievedListener toAIDL(android.net.ipmemorystore.OnNetworkAttributesRetrievedListener)>(r2);

        interfaceinvoke r0.<android.net.IIpMemoryStore: void retrieveNetworkAttributes(java.lang.String,android.net.ipmemorystore.IOnNetworkAttributesRetrievedListener)>(r1, $r3);

        return;
    }

    static void lambda$retrieveNetworkAttributes$14(android.net.ipmemorystore.OnNetworkAttributesRetrievedListener) throws android.os.RemoteException
    {
        android.net.ipmemorystore.OnNetworkAttributesRetrievedListener r0;
        android.net.ipmemorystore.Status $r1;

        r0 := @parameter0: android.net.ipmemorystore.OnNetworkAttributesRetrievedListener;

        $r1 = new android.net.ipmemorystore.Status;

        specialinvoke $r1.<android.net.ipmemorystore.Status: void <init>(int)>(-5);

        interfaceinvoke r0.<android.net.ipmemorystore.OnNetworkAttributesRetrievedListener: void onNetworkAttributesRetrieved(android.net.ipmemorystore.Status,java.lang.String,android.net.ipmemorystore.NetworkAttributes)>($r1, null, null);

        return;
    }

    static void lambda$storeBlob$3(android.net.IIpMemoryStore, java.lang.String, java.lang.String, java.lang.String, android.net.ipmemorystore.Blob, android.net.ipmemorystore.OnStatusListener) throws android.os.RemoteException
    {
        android.net.IIpMemoryStore r0;
        java.lang.String r1, r2, r3;
        android.net.ipmemorystore.Blob r4;
        android.net.ipmemorystore.OnStatusListener r5;
        android.net.ipmemorystore.IOnStatusListener $r6;

        r0 := @parameter0: android.net.IIpMemoryStore;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.net.ipmemorystore.Blob;

        r5 := @parameter5: android.net.ipmemorystore.OnStatusListener;

        $r6 = staticinvoke <android.net.ipmemorystore.OnStatusListener: android.net.ipmemorystore.IOnStatusListener toAIDL(android.net.ipmemorystore.OnStatusListener)>(r5);

        interfaceinvoke r0.<android.net.IIpMemoryStore: void storeBlob(java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.Blob,android.net.ipmemorystore.IOnStatusListener)>(r1, r2, r3, r4, $r6);

        return;
    }

    static void lambda$storeBlob$5(android.net.ipmemorystore.OnStatusListener) throws android.os.RemoteException
    {
        android.net.ipmemorystore.OnStatusListener r0;
        android.net.ipmemorystore.Status $r1;

        r0 := @parameter0: android.net.ipmemorystore.OnStatusListener;

        $r1 = new android.net.ipmemorystore.Status;

        specialinvoke $r1.<android.net.ipmemorystore.Status: void <init>(int)>(-5);

        interfaceinvoke r0.<android.net.ipmemorystore.OnStatusListener: void onComplete(android.net.ipmemorystore.Status)>($r1);

        return;
    }

    static void lambda$storeNetworkAttributes$0(android.net.IIpMemoryStore, java.lang.String, android.net.ipmemorystore.NetworkAttributes, android.net.ipmemorystore.OnStatusListener) throws android.os.RemoteException
    {
        android.net.IIpMemoryStore r0;
        java.lang.String r1;
        android.net.ipmemorystore.NetworkAttributes r2;
        android.net.ipmemorystore.OnStatusListener r3;
        android.net.ipmemorystore.NetworkAttributesParcelable $r4;
        android.net.ipmemorystore.IOnStatusListener $r5;

        r0 := @parameter0: android.net.IIpMemoryStore;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.ipmemorystore.NetworkAttributes;

        r3 := @parameter3: android.net.ipmemorystore.OnStatusListener;

        $r4 = virtualinvoke r2.<android.net.ipmemorystore.NetworkAttributes: android.net.ipmemorystore.NetworkAttributesParcelable toParcelable()>();

        $r5 = staticinvoke <android.net.ipmemorystore.OnStatusListener: android.net.ipmemorystore.IOnStatusListener toAIDL(android.net.ipmemorystore.OnStatusListener)>(r3);

        interfaceinvoke r0.<android.net.IIpMemoryStore: void storeNetworkAttributes(java.lang.String,android.net.ipmemorystore.NetworkAttributesParcelable,android.net.ipmemorystore.IOnStatusListener)>(r1, $r4, $r5);

        return;
    }

    static void lambda$storeNetworkAttributes$2(android.net.ipmemorystore.OnStatusListener) throws android.os.RemoteException
    {
        android.net.ipmemorystore.OnStatusListener r0;
        android.net.ipmemorystore.Status $r1;

        r0 := @parameter0: android.net.ipmemorystore.OnStatusListener;

        $r1 = new android.net.ipmemorystore.Status;

        specialinvoke $r1.<android.net.ipmemorystore.Status: void <init>(int)>(-5);

        interfaceinvoke r0.<android.net.ipmemorystore.OnStatusListener: void onComplete(android.net.ipmemorystore.Status)>($r1);

        return;
    }

    public void delete(java.lang.String, boolean, android.net.ipmemorystore.OnDeleteStatusListener)
    {
        android.net.IpMemoryStoreClient r0;
        boolean z0;
        android.net.ipmemorystore.OnDeleteStatusListener r1;
        android.net._$$Lambda$IpMemoryStoreClient$a8c2GwoXcCl__sEog7RVlSk_ceg r2;
        java.lang.Throwable $r3;
        android.net._$$Lambda$IpMemoryStoreClient$QtZ59p2ym62gf590YlnfhqMCuvs $r4;
        java.lang.String r5;

        r0 := @this: android.net.IpMemoryStoreClient;

        r5 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.net.ipmemorystore.OnDeleteStatusListener;

     label1:
        r2 = new android.net._$$Lambda$IpMemoryStoreClient$a8c2GwoXcCl__sEog7RVlSk_ceg;

        specialinvoke r2.<android.net._$$Lambda$IpMemoryStoreClient$a8c2GwoXcCl__sEog7RVlSk_ceg: void <init>(android.net.IpMemoryStoreClient,java.lang.String,boolean,android.net.ipmemorystore.OnDeleteStatusListener)>(r0, r5, z0, r1);

        virtualinvoke r0.<android.net.IpMemoryStoreClient: void runWhenServiceReady(java.util.function.Consumer)>(r2);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        if r1 != null goto label4;

        return;

     label4:
        $r4 = new android.net._$$Lambda$IpMemoryStoreClient$QtZ59p2ym62gf590YlnfhqMCuvs;

        specialinvoke $r4.<android.net._$$Lambda$IpMemoryStoreClient$QtZ59p2ym62gf590YlnfhqMCuvs: void <init>(android.net.ipmemorystore.OnDeleteStatusListener)>(r1);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(java.lang.String,android.net.IpMemoryStoreClient$ThrowingRunnable)>("Error deleting from the memory store", $r4);

     label5:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    public void deleteCluster(java.lang.String, boolean, android.net.ipmemorystore.OnDeleteStatusListener)
    {
        android.net.IpMemoryStoreClient r0;
        boolean z0;
        android.net.ipmemorystore.OnDeleteStatusListener r1;
        android.net._$$Lambda$IpMemoryStoreClient$HZ4eDRlSSn3cUdwF2DXBPHIJgvY r2;
        java.lang.Throwable $r3;
        android.net._$$Lambda$IpMemoryStoreClient$L08s_WnZzlkHdu2WoxmH38FuUQg $r4;
        java.lang.String r5;

        r0 := @this: android.net.IpMemoryStoreClient;

        r5 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.net.ipmemorystore.OnDeleteStatusListener;

     label1:
        r2 = new android.net._$$Lambda$IpMemoryStoreClient$HZ4eDRlSSn3cUdwF2DXBPHIJgvY;

        specialinvoke r2.<android.net._$$Lambda$IpMemoryStoreClient$HZ4eDRlSSn3cUdwF2DXBPHIJgvY: void <init>(android.net.IpMemoryStoreClient,java.lang.String,boolean,android.net.ipmemorystore.OnDeleteStatusListener)>(r0, r5, z0, r1);

        virtualinvoke r0.<android.net.IpMemoryStoreClient: void runWhenServiceReady(java.util.function.Consumer)>(r2);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        if r1 != null goto label4;

        return;

     label4:
        $r4 = new android.net._$$Lambda$IpMemoryStoreClient$L08s_WnZzlkHdu2WoxmH38FuUQg;

        specialinvoke $r4.<android.net._$$Lambda$IpMemoryStoreClient$L08s_WnZzlkHdu2WoxmH38FuUQg: void <init>(android.net.ipmemorystore.OnDeleteStatusListener)>(r1);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(java.lang.String,android.net.IpMemoryStoreClient$ThrowingRunnable)>("Error deleting from the memory store", $r4);

     label5:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    public void factoryReset()
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        android.net._$$Lambda$IpMemoryStoreClient$HDF9y_EeiuVlo2_HJE_8sOk7nMk r3;

        r0 := @this: android.net.IpMemoryStoreClient;

     label1:
        r3 = new android.net._$$Lambda$IpMemoryStoreClient$HDF9y_EeiuVlo2_HJE_8sOk7nMk;

        specialinvoke r3.<android.net._$$Lambda$IpMemoryStoreClient$HDF9y_EeiuVlo2_HJE_8sOk7nMk: void <init>(android.net.IpMemoryStoreClient)>(r0);

        virtualinvoke r0.<android.net.IpMemoryStoreClient: void runWhenServiceReady(java.util.function.Consumer)>(r3);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = <android.net.IpMemoryStoreClient: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Error executing factory reset", $r1);

     label4:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    public void findL2Key(android.net.ipmemorystore.NetworkAttributes, android.net.ipmemorystore.OnL2KeyResponseListener)
    {
        android.net.IpMemoryStoreClient r0;
        android.net.ipmemorystore.OnL2KeyResponseListener r1;
        android.net._$$Lambda$IpMemoryStoreClient$uI7nYxd7GfJucRXO9KcNTbbWOlc r2;
        java.lang.Throwable $r3;
        android.net._$$Lambda$IpMemoryStoreClient$xx1upXTRGTVc0003KEhaxwIwwN8 $r4;
        android.net.ipmemorystore.NetworkAttributes r5;

        r0 := @this: android.net.IpMemoryStoreClient;

        r5 := @parameter0: android.net.ipmemorystore.NetworkAttributes;

        r1 := @parameter1: android.net.ipmemorystore.OnL2KeyResponseListener;

     label1:
        r2 = new android.net._$$Lambda$IpMemoryStoreClient$uI7nYxd7GfJucRXO9KcNTbbWOlc;

        specialinvoke r2.<android.net._$$Lambda$IpMemoryStoreClient$uI7nYxd7GfJucRXO9KcNTbbWOlc: void <init>(android.net.IpMemoryStoreClient,android.net.ipmemorystore.NetworkAttributes,android.net.ipmemorystore.OnL2KeyResponseListener)>(r0, r5, r1);

        virtualinvoke r0.<android.net.IpMemoryStoreClient: void runWhenServiceReady(java.util.function.Consumer)>(r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new android.net._$$Lambda$IpMemoryStoreClient$xx1upXTRGTVc0003KEhaxwIwwN8;

        specialinvoke $r4.<android.net._$$Lambda$IpMemoryStoreClient$xx1upXTRGTVc0003KEhaxwIwwN8: void <init>(android.net.ipmemorystore.OnL2KeyResponseListener)>(r1);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(java.lang.String,android.net.IpMemoryStoreClient$ThrowingRunnable)>("Error finding L2 Key", $r4);

     label4:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    public void isSameNetwork(java.lang.String, java.lang.String, android.net.ipmemorystore.OnSameL3NetworkResponseListener)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1, r6;
        android.net.ipmemorystore.OnSameL3NetworkResponseListener r2;
        android.net._$$Lambda$IpMemoryStoreClient$uHUebZ3pZ1jD5N1tZNdyTy8zBCE r3;
        java.lang.Throwable $r4;
        android.net._$$Lambda$IpMemoryStoreClient$V28n1xp79cKTZf0npS_vzf7FUo8 $r5;

        r0 := @this: android.net.IpMemoryStoreClient;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.ipmemorystore.OnSameL3NetworkResponseListener;

     label1:
        r3 = new android.net._$$Lambda$IpMemoryStoreClient$uHUebZ3pZ1jD5N1tZNdyTy8zBCE;

        specialinvoke r3.<android.net._$$Lambda$IpMemoryStoreClient$uHUebZ3pZ1jD5N1tZNdyTy8zBCE: void <init>(android.net.IpMemoryStoreClient,java.lang.String,java.lang.String,android.net.ipmemorystore.OnSameL3NetworkResponseListener)>(r0, r6, r1, r2);

        virtualinvoke r0.<android.net.IpMemoryStoreClient: void runWhenServiceReady(java.util.function.Consumer)>(r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new android.net._$$Lambda$IpMemoryStoreClient$V28n1xp79cKTZf0npS_vzf7FUo8;

        specialinvoke $r5.<android.net._$$Lambda$IpMemoryStoreClient$V28n1xp79cKTZf0npS_vzf7FUo8: void <init>(android.net.ipmemorystore.OnSameL3NetworkResponseListener)>(r2);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(java.lang.String,android.net.IpMemoryStoreClient$ThrowingRunnable)>("Error checking for network sameness", $r5);

     label4:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    public void lambda$delete$19$IpMemoryStoreClient(java.lang.String, boolean, android.net.ipmemorystore.OnDeleteStatusListener, android.net.IIpMemoryStore)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1;
        boolean z0;
        android.net.ipmemorystore.OnDeleteStatusListener r2;
        android.net.IIpMemoryStore r3;
        android.net._$$Lambda$IpMemoryStoreClient$EROyQL0gB8UDAPPZPb6g61OzIOY $r4;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.net.ipmemorystore.OnDeleteStatusListener;

        r3 := @parameter3: android.net.IIpMemoryStore;

        $r4 = new android.net._$$Lambda$IpMemoryStoreClient$EROyQL0gB8UDAPPZPb6g61OzIOY;

        specialinvoke $r4.<android.net._$$Lambda$IpMemoryStoreClient$EROyQL0gB8UDAPPZPb6g61OzIOY: void <init>(android.net.IIpMemoryStore,java.lang.String,boolean,android.net.ipmemorystore.OnDeleteStatusListener)>(r3, r1, z0, r2);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(android.net.IpMemoryStoreClient$ThrowingRunnable)>($r4);

        return;
    }

    public void lambda$deleteCluster$22$IpMemoryStoreClient(java.lang.String, boolean, android.net.ipmemorystore.OnDeleteStatusListener, android.net.IIpMemoryStore)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1;
        boolean z0;
        android.net.ipmemorystore.OnDeleteStatusListener r2;
        android.net.IIpMemoryStore r3;
        android.net._$$Lambda$IpMemoryStoreClient$idEqoYRvV5eEJx3wft06F3h5j5k $r4;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.net.ipmemorystore.OnDeleteStatusListener;

        r3 := @parameter3: android.net.IIpMemoryStore;

        $r4 = new android.net._$$Lambda$IpMemoryStoreClient$idEqoYRvV5eEJx3wft06F3h5j5k;

        specialinvoke $r4.<android.net._$$Lambda$IpMemoryStoreClient$idEqoYRvV5eEJx3wft06F3h5j5k: void <init>(android.net.IIpMemoryStore,java.lang.String,boolean,android.net.ipmemorystore.OnDeleteStatusListener)>(r3, r1, z0, r2);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(android.net.IpMemoryStoreClient$ThrowingRunnable)>($r4);

        return;
    }

    public void lambda$factoryReset$25$IpMemoryStoreClient(android.net.IIpMemoryStore)
    {
        android.net.IpMemoryStoreClient r0;
        android.net.IIpMemoryStore r1;
        android.net._$$Lambda$IpMemoryStoreClient$6cTsI8p06zitBaVklP4K_8kixMc $r2;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: android.net.IIpMemoryStore;

        $r2 = new android.net._$$Lambda$IpMemoryStoreClient$6cTsI8p06zitBaVklP4K_8kixMc;

        specialinvoke $r2.<android.net._$$Lambda$IpMemoryStoreClient$6cTsI8p06zitBaVklP4K_8kixMc: void <init>(android.net.IIpMemoryStore)>(r1);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(android.net.IpMemoryStoreClient$ThrowingRunnable)>($r2);

        return;
    }

    public void lambda$findL2Key$7$IpMemoryStoreClient(android.net.ipmemorystore.NetworkAttributes, android.net.ipmemorystore.OnL2KeyResponseListener, android.net.IIpMemoryStore)
    {
        android.net.IpMemoryStoreClient r0;
        android.net.ipmemorystore.NetworkAttributes r1;
        android.net.ipmemorystore.OnL2KeyResponseListener r2;
        android.net.IIpMemoryStore r3;
        android.net._$$Lambda$IpMemoryStoreClient$2bQLFhsJeYf5bkZg0_91OSOTEJY $r4;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: android.net.ipmemorystore.NetworkAttributes;

        r2 := @parameter1: android.net.ipmemorystore.OnL2KeyResponseListener;

        r3 := @parameter2: android.net.IIpMemoryStore;

        $r4 = new android.net._$$Lambda$IpMemoryStoreClient$2bQLFhsJeYf5bkZg0_91OSOTEJY;

        specialinvoke $r4.<android.net._$$Lambda$IpMemoryStoreClient$2bQLFhsJeYf5bkZg0_91OSOTEJY: void <init>(android.net.IIpMemoryStore,android.net.ipmemorystore.NetworkAttributes,android.net.ipmemorystore.OnL2KeyResponseListener)>(r3, r1, r2);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(android.net.IpMemoryStoreClient$ThrowingRunnable)>($r4);

        return;
    }

    public void lambda$isSameNetwork$10$IpMemoryStoreClient(java.lang.String, java.lang.String, android.net.ipmemorystore.OnSameL3NetworkResponseListener, android.net.IIpMemoryStore)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1, r2;
        android.net.ipmemorystore.OnSameL3NetworkResponseListener r3;
        android.net.IIpMemoryStore r4;
        android.net._$$Lambda$IpMemoryStoreClient$A2hOjZriLOXFq3Aij0wHaYZQOSc $r5;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.ipmemorystore.OnSameL3NetworkResponseListener;

        r4 := @parameter3: android.net.IIpMemoryStore;

        $r5 = new android.net._$$Lambda$IpMemoryStoreClient$A2hOjZriLOXFq3Aij0wHaYZQOSc;

        specialinvoke $r5.<android.net._$$Lambda$IpMemoryStoreClient$A2hOjZriLOXFq3Aij0wHaYZQOSc: void <init>(android.net.IIpMemoryStore,java.lang.String,java.lang.String,android.net.ipmemorystore.OnSameL3NetworkResponseListener)>(r4, r1, r2, r3);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(android.net.IpMemoryStoreClient$ThrowingRunnable)>($r5);

        return;
    }

    public void lambda$retrieveBlob$16$IpMemoryStoreClient(java.lang.String, java.lang.String, java.lang.String, android.net.ipmemorystore.OnBlobRetrievedListener, android.net.IIpMemoryStore)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1, r2, r3;
        android.net.ipmemorystore.OnBlobRetrievedListener r4;
        android.net.IIpMemoryStore r5;
        android.net._$$Lambda$IpMemoryStoreClient$284VFgqq7BBkkwVNFLIrF3c59Es $r6;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.ipmemorystore.OnBlobRetrievedListener;

        r5 := @parameter4: android.net.IIpMemoryStore;

        $r6 = new android.net._$$Lambda$IpMemoryStoreClient$284VFgqq7BBkkwVNFLIrF3c59Es;

        specialinvoke $r6.<android.net._$$Lambda$IpMemoryStoreClient$284VFgqq7BBkkwVNFLIrF3c59Es: void <init>(android.net.IIpMemoryStore,java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.OnBlobRetrievedListener)>(r5, r1, r2, r3, r4);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(android.net.IpMemoryStoreClient$ThrowingRunnable)>($r6);

        return;
    }

    public void lambda$retrieveNetworkAttributes$13$IpMemoryStoreClient(java.lang.String, android.net.ipmemorystore.OnNetworkAttributesRetrievedListener, android.net.IIpMemoryStore)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1;
        android.net.ipmemorystore.OnNetworkAttributesRetrievedListener r2;
        android.net.IIpMemoryStore r3;
        android.net._$$Lambda$IpMemoryStoreClient$Uc0QFR5a_MhzwuvUoWpz73NAAEs $r4;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.ipmemorystore.OnNetworkAttributesRetrievedListener;

        r3 := @parameter2: android.net.IIpMemoryStore;

        $r4 = new android.net._$$Lambda$IpMemoryStoreClient$Uc0QFR5a_MhzwuvUoWpz73NAAEs;

        specialinvoke $r4.<android.net._$$Lambda$IpMemoryStoreClient$Uc0QFR5a_MhzwuvUoWpz73NAAEs: void <init>(android.net.IIpMemoryStore,java.lang.String,android.net.ipmemorystore.OnNetworkAttributesRetrievedListener)>(r3, r1, r2);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(android.net.IpMemoryStoreClient$ThrowingRunnable)>($r4);

        return;
    }

    public void lambda$storeBlob$4$IpMemoryStoreClient(java.lang.String, java.lang.String, java.lang.String, android.net.ipmemorystore.Blob, android.net.ipmemorystore.OnStatusListener, android.net.IIpMemoryStore)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1, r2, r3;
        android.net.ipmemorystore.Blob r4;
        android.net.ipmemorystore.OnStatusListener r5;
        android.net.IIpMemoryStore r6;
        android.net._$$Lambda$IpMemoryStoreClient$4eqT_tDGA25PNMyU_1yqQCF2gOo $r7;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.ipmemorystore.Blob;

        r5 := @parameter4: android.net.ipmemorystore.OnStatusListener;

        r6 := @parameter5: android.net.IIpMemoryStore;

        $r7 = new android.net._$$Lambda$IpMemoryStoreClient$4eqT_tDGA25PNMyU_1yqQCF2gOo;

        specialinvoke $r7.<android.net._$$Lambda$IpMemoryStoreClient$4eqT_tDGA25PNMyU_1yqQCF2gOo: void <init>(android.net.IIpMemoryStore,java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.Blob,android.net.ipmemorystore.OnStatusListener)>(r6, r1, r2, r3, r4, r5);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(android.net.IpMemoryStoreClient$ThrowingRunnable)>($r7);

        return;
    }

    public void lambda$storeNetworkAttributes$1$IpMemoryStoreClient(java.lang.String, android.net.ipmemorystore.NetworkAttributes, android.net.ipmemorystore.OnStatusListener, android.net.IIpMemoryStore)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1;
        android.net.ipmemorystore.NetworkAttributes r2;
        android.net.ipmemorystore.OnStatusListener r3;
        android.net.IIpMemoryStore r4;
        android.net._$$Lambda$IpMemoryStoreClient$4LLLcxcDI48Nnc_rkm7mdSQsa2U $r5;

        r0 := @this: android.net.IpMemoryStoreClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.ipmemorystore.NetworkAttributes;

        r3 := @parameter2: android.net.ipmemorystore.OnStatusListener;

        r4 := @parameter3: android.net.IIpMemoryStore;

        $r5 = new android.net._$$Lambda$IpMemoryStoreClient$4LLLcxcDI48Nnc_rkm7mdSQsa2U;

        specialinvoke $r5.<android.net._$$Lambda$IpMemoryStoreClient$4LLLcxcDI48Nnc_rkm7mdSQsa2U: void <init>(android.net.IIpMemoryStore,java.lang.String,android.net.ipmemorystore.NetworkAttributes,android.net.ipmemorystore.OnStatusListener)>(r4, r1, r2, r3);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(android.net.IpMemoryStoreClient$ThrowingRunnable)>($r5);

        return;
    }

    public void retrieveBlob(java.lang.String, java.lang.String, java.lang.String, android.net.ipmemorystore.OnBlobRetrievedListener)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1, r2, r7;
        android.net.ipmemorystore.OnBlobRetrievedListener r3;
        android.net._$$Lambda$IpMemoryStoreClient$3VeddAdCuqfXquVC2DlGvI3eVPM r4;
        java.lang.Throwable $r5;
        android.net._$$Lambda$IpMemoryStoreClient$hPxh_gsDi3P_N7OFwwZBxGXYZTs $r6;

        r0 := @this: android.net.IpMemoryStoreClient;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.net.ipmemorystore.OnBlobRetrievedListener;

     label1:
        r4 = new android.net._$$Lambda$IpMemoryStoreClient$3VeddAdCuqfXquVC2DlGvI3eVPM;

        specialinvoke r4.<android.net._$$Lambda$IpMemoryStoreClient$3VeddAdCuqfXquVC2DlGvI3eVPM: void <init>(android.net.IpMemoryStoreClient,java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.OnBlobRetrievedListener)>(r0, r7, r1, r2, r3);

        virtualinvoke r0.<android.net.IpMemoryStoreClient: void runWhenServiceReady(java.util.function.Consumer)>(r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new android.net._$$Lambda$IpMemoryStoreClient$hPxh_gsDi3P_N7OFwwZBxGXYZTs;

        specialinvoke $r6.<android.net._$$Lambda$IpMemoryStoreClient$hPxh_gsDi3P_N7OFwwZBxGXYZTs: void <init>(android.net.ipmemorystore.OnBlobRetrievedListener)>(r3);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(java.lang.String,android.net.IpMemoryStoreClient$ThrowingRunnable)>("Error retrieving blob", $r6);

     label4:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    public void retrieveNetworkAttributes(java.lang.String, android.net.ipmemorystore.OnNetworkAttributesRetrievedListener)
    {
        android.net.IpMemoryStoreClient r0;
        android.net.ipmemorystore.OnNetworkAttributesRetrievedListener r1;
        android.net._$$Lambda$IpMemoryStoreClient$OnrcybvxwSrQUBY_VqGsD_5lQfI r2;
        java.lang.Throwable $r3;
        android.net._$$Lambda$IpMemoryStoreClient$JTvBo0T3ntOmEDS60qZyBJUlJio $r4;
        java.lang.String r5;

        r0 := @this: android.net.IpMemoryStoreClient;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.ipmemorystore.OnNetworkAttributesRetrievedListener;

     label1:
        r2 = new android.net._$$Lambda$IpMemoryStoreClient$OnrcybvxwSrQUBY_VqGsD_5lQfI;

        specialinvoke r2.<android.net._$$Lambda$IpMemoryStoreClient$OnrcybvxwSrQUBY_VqGsD_5lQfI: void <init>(android.net.IpMemoryStoreClient,java.lang.String,android.net.ipmemorystore.OnNetworkAttributesRetrievedListener)>(r0, r5, r1);

        virtualinvoke r0.<android.net.IpMemoryStoreClient: void runWhenServiceReady(java.util.function.Consumer)>(r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new android.net._$$Lambda$IpMemoryStoreClient$JTvBo0T3ntOmEDS60qZyBJUlJio;

        specialinvoke $r4.<android.net._$$Lambda$IpMemoryStoreClient$JTvBo0T3ntOmEDS60qZyBJUlJio: void <init>(android.net.ipmemorystore.OnNetworkAttributesRetrievedListener)>(r1);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(java.lang.String,android.net.IpMemoryStoreClient$ThrowingRunnable)>("Error retrieving network attributes", $r4);

     label4:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    protected abstract void runWhenServiceReady(java.util.function.Consumer) throws java.util.concurrent.ExecutionException;

    public void storeBlob(java.lang.String, java.lang.String, java.lang.String, android.net.ipmemorystore.Blob, android.net.ipmemorystore.OnStatusListener)
    {
        android.net.IpMemoryStoreClient r0;
        java.lang.String r1, r2, r8;
        android.net.ipmemorystore.Blob r3;
        android.net.ipmemorystore.OnStatusListener r4;
        android.net._$$Lambda$IpMemoryStoreClient$OI4Zw2djhZoG0D4IE2ujC0Iv6G4 r5;
        java.lang.Throwable $r6;
        android.net._$$Lambda$IpMemoryStoreClient$Rs7okZ0ViR35WkNSGbyhqEXxJxc $r7;

        r0 := @this: android.net.IpMemoryStoreClient;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.net.ipmemorystore.Blob;

        r4 := @parameter4: android.net.ipmemorystore.OnStatusListener;

     label1:
        r5 = new android.net._$$Lambda$IpMemoryStoreClient$OI4Zw2djhZoG0D4IE2ujC0Iv6G4;

        specialinvoke r5.<android.net._$$Lambda$IpMemoryStoreClient$OI4Zw2djhZoG0D4IE2ujC0Iv6G4: void <init>(android.net.IpMemoryStoreClient,java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.Blob,android.net.ipmemorystore.OnStatusListener)>(r0, r8, r1, r2, r3, r4);

        virtualinvoke r0.<android.net.IpMemoryStoreClient: void runWhenServiceReady(java.util.function.Consumer)>(r5);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        if r4 != null goto label4;

        return;

     label4:
        $r7 = new android.net._$$Lambda$IpMemoryStoreClient$Rs7okZ0ViR35WkNSGbyhqEXxJxc;

        specialinvoke $r7.<android.net._$$Lambda$IpMemoryStoreClient$Rs7okZ0ViR35WkNSGbyhqEXxJxc: void <init>(android.net.ipmemorystore.OnStatusListener)>(r4);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(java.lang.String,android.net.IpMemoryStoreClient$ThrowingRunnable)>("Error storing blob", $r7);

     label5:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    public void storeNetworkAttributes(java.lang.String, android.net.ipmemorystore.NetworkAttributes, android.net.ipmemorystore.OnStatusListener)
    {
        android.net.IpMemoryStoreClient r0;
        android.net.ipmemorystore.NetworkAttributes r1;
        android.net.ipmemorystore.OnStatusListener r2;
        android.net._$$Lambda$IpMemoryStoreClient$0LhXdcPG7yJtV5UggjyJkRbARKU r3;
        java.lang.Throwable $r4;
        android.net._$$Lambda$IpMemoryStoreClient$FjB7dm6lAwZ6pH1lqvrhxtLFOm8 $r5;
        java.lang.String r6;

        r0 := @this: android.net.IpMemoryStoreClient;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.ipmemorystore.NetworkAttributes;

        r2 := @parameter2: android.net.ipmemorystore.OnStatusListener;

     label1:
        r3 = new android.net._$$Lambda$IpMemoryStoreClient$0LhXdcPG7yJtV5UggjyJkRbARKU;

        specialinvoke r3.<android.net._$$Lambda$IpMemoryStoreClient$0LhXdcPG7yJtV5UggjyJkRbARKU: void <init>(android.net.IpMemoryStoreClient,java.lang.String,android.net.ipmemorystore.NetworkAttributes,android.net.ipmemorystore.OnStatusListener)>(r0, r6, r1, r2);

        virtualinvoke r0.<android.net.IpMemoryStoreClient: void runWhenServiceReady(java.util.function.Consumer)>(r3);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        if r2 != null goto label4;

        return;

     label4:
        $r5 = new android.net._$$Lambda$IpMemoryStoreClient$FjB7dm6lAwZ6pH1lqvrhxtLFOm8;

        specialinvoke $r5.<android.net._$$Lambda$IpMemoryStoreClient$FjB7dm6lAwZ6pH1lqvrhxtLFOm8: void <init>(android.net.ipmemorystore.OnStatusListener)>(r2);

        specialinvoke r0.<android.net.IpMemoryStoreClient: void ignoringRemoteException(java.lang.String,android.net.IpMemoryStoreClient$ThrowingRunnable)>("Error storing network attributes", $r5);

     label5:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }
}
