class android.net.IpPrefix$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        android.net.IpPrefix$1 r0;

        r0 := @this: android.net.IpPrefix$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(android.net.IpPrefix, android.net.IpPrefix)
    {
        android.net.IpPrefix$1 r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, i8, i9, i10, i11;
        byte $b4, $b5, $b6, $b7;
        android.net.IpPrefix r1, r2;
        byte[] r3, r4;

        r0 := @this: android.net.IpPrefix$1;

        r1 := @parameter0: android.net.IpPrefix;

        r2 := @parameter1: android.net.IpPrefix;

        $z0 = virtualinvoke r1.<android.net.IpPrefix: boolean isIPv4()>();

        if $z0 == 0 goto label01;

        $z2 = virtualinvoke r2.<android.net.IpPrefix: boolean isIPv6()>();

        if $z2 == 0 goto label02;

        return -1;

     label01:
        $z1 = virtualinvoke r2.<android.net.IpPrefix: boolean isIPv4()>();

        if $z1 == 0 goto label02;

        return 1;

     label02:
        i8 = virtualinvoke r1.<android.net.IpPrefix: int getPrefixLength()>();

        i9 = virtualinvoke r2.<android.net.IpPrefix: int getPrefixLength()>();

        if i8 >= i9 goto label03;

        return -1;

     label03:
        if i9 >= i8 goto label04;

        return 1;

     label04:
        r3 = staticinvoke <android.net.IpPrefix: byte[] access$000(android.net.IpPrefix)>(r1);

        r4 = staticinvoke <android.net.IpPrefix: byte[] access$000(android.net.IpPrefix)>(r2);

        $i1 = lengthof r3;

        $i0 = lengthof r4;

        if $i1 >= $i0 goto label05;

        i10 = lengthof r3;

        goto label06;

     label05:
        i10 = lengthof r4;

     label06:
        i11 = 0;

     label07:
        if i11 >= i10 goto label10;

        $b5 = r3[i11];

        $b4 = r4[i11];

        if $b5 >= $b4 goto label08;

        return -1;

     label08:
        $b7 = r3[i11];

        $b6 = r4[i11];

        if $b7 <= $b6 goto label09;

        return 1;

     label09:
        i11 = i11 + 1;

        goto label07;

     label10:
        $i2 = lengthof r4;

        if $i2 >= i10 goto label11;

        return 1;

     label11:
        $i3 = lengthof r3;

        if $i3 >= i10 goto label12;

        return -1;

     label12:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        android.net.IpPrefix$1 r0;
        java.lang.Object r1, r2;
        android.net.IpPrefix $r3, $r4;
        int $i0;

        r0 := @this: android.net.IpPrefix$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.net.IpPrefix) r1;

        $r3 = (android.net.IpPrefix) r2;

        $i0 = virtualinvoke r0.<android.net.IpPrefix$1: int compare(android.net.IpPrefix,android.net.IpPrefix)>($r4, $r3);

        return $i0;
    }
}
