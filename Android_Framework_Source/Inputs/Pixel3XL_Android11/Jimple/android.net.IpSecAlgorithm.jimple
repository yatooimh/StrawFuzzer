public final class android.net.IpSecAlgorithm extends java.lang.Object implements android.os.Parcelable
{
    public static final java.lang.String AUTH_CRYPT_AES_GCM;
    public static final java.lang.String AUTH_HMAC_MD5;
    public static final java.lang.String AUTH_HMAC_SHA1;
    public static final java.lang.String AUTH_HMAC_SHA256;
    public static final java.lang.String AUTH_HMAC_SHA384;
    public static final java.lang.String AUTH_HMAC_SHA512;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final java.lang.String CRYPT_AES_CBC;
    public static final java.lang.String CRYPT_NULL;
    private static final java.lang.String TAG;
    private final byte[] mKey;
    private final java.lang.String mName;
    private final int mTruncLenBits;

    static void <clinit>()
    {
        android.net.IpSecAlgorithm$1 $r0;

        <android.net.IpSecAlgorithm: java.lang.String TAG> = "IpSecAlgorithm";

        <android.net.IpSecAlgorithm: java.lang.String CRYPT_NULL> = "ecb(cipher_null)";

        <android.net.IpSecAlgorithm: java.lang.String CRYPT_AES_CBC> = "cbc(aes)";

        <android.net.IpSecAlgorithm: java.lang.String AUTH_HMAC_SHA512> = "hmac(sha512)";

        <android.net.IpSecAlgorithm: java.lang.String AUTH_HMAC_SHA384> = "hmac(sha384)";

        <android.net.IpSecAlgorithm: java.lang.String AUTH_HMAC_SHA256> = "hmac(sha256)";

        <android.net.IpSecAlgorithm: java.lang.String AUTH_HMAC_SHA1> = "hmac(sha1)";

        <android.net.IpSecAlgorithm: java.lang.String AUTH_HMAC_MD5> = "hmac(md5)";

        <android.net.IpSecAlgorithm: java.lang.String AUTH_CRYPT_AES_GCM> = "rfc4106(gcm(aes))";

        $r0 = new android.net.IpSecAlgorithm$1;

        specialinvoke $r0.<android.net.IpSecAlgorithm$1: void <init>()>();

        <android.net.IpSecAlgorithm: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(java.lang.String, byte[])
    {
        android.net.IpSecAlgorithm r0;
        java.lang.String r1;
        byte[] r2;

        r0 := @this: android.net.IpSecAlgorithm;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        specialinvoke r0.<android.net.IpSecAlgorithm: void <init>(java.lang.String,byte[],int)>(r1, r2, 0);

        return;
    }

    public void <init>(java.lang.String, byte[], int)
    {
        android.net.IpSecAlgorithm r0;
        byte[] r1, r5;
        int i0, $i1, $i2;
        java.lang.Object $r2;
        java.lang.String $r3, r4;

        r0 := @this: android.net.IpSecAlgorithm;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.IpSecAlgorithm: java.lang.String mName> = r4;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        r5 = (byte[]) $r2;

        r0.<android.net.IpSecAlgorithm: byte[] mKey> = r5;

        r0.<android.net.IpSecAlgorithm: int mTruncLenBits> = i0;

        $r3 = r0.<android.net.IpSecAlgorithm: java.lang.String mName>;

        $i1 = lengthof r5;

        $i2 = $i1 * 8;

        staticinvoke <android.net.IpSecAlgorithm: void checkValidOrThrow(java.lang.String,int,int)>($r3, $i2, i0);

        return;
    }

    private static void checkValidOrThrow(java.lang.String, int, int)
    {
        int i0, i1, i2;
        boolean $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z15, z16, z17, z19, z20, z21, z22, z24, z25, z26, z28, z29, z30, z32, z33, z34, z36, z37, z38;
        java.lang.StringBuilder $r1, $r6, $r11;
        java.lang.IllegalArgumentException $r4, $r9, $r14;
        java.lang.String $r5, $r10, $r15, r16;
        byte b3;

        r16 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z13 = 1;

        i2 = virtualinvoke r16.<java.lang.String: int hashCode()>();

        lookupswitch(i2)
        {
            case -1137603038: goto label08;
            case 394796030: goto label07;
            case 559425185: goto label06;
            case 559457797: goto label05;
            case 559510590: goto label04;
            case 759177996: goto label03;
            case 2065384259: goto label02;
            default: goto label01;
        };

     label01:
        goto label09;

     label02:
        $z6 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("hmac(sha1)");

        if $z6 == 0 goto label01;

        b3 = 2;

        goto label10;

     label03:
        $z7 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("hmac(md5)");

        if $z7 == 0 goto label01;

        b3 = 1;

        goto label10;

     label04:
        $z8 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("hmac(sha512)");

        if $z8 == 0 goto label01;

        b3 = 5;

        goto label10;

     label05:
        $z9 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("hmac(sha384)");

        if $z9 == 0 goto label01;

        b3 = 4;

        goto label10;

     label06:
        $z10 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("hmac(sha256)");

        if $z10 == 0 goto label01;

        b3 = 3;

        goto label10;

     label07:
        $z11 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("cbc(aes)");

        if $z11 == 0 goto label01;

        b3 = 0;

        goto label10;

     label08:
        $z12 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("rfc4106(gcm(aes))");

        if $z12 == 0 goto label01;

        b3 = 6;

        goto label10;

     label09:
        b3 = -1;

     label10:
        tableswitch(b3)
        {
            case 0: goto label43;
            case 1: goto label38;
            case 2: goto label33;
            case 3: goto label28;
            case 4: goto label23;
            case 5: goto label18;
            case 6: goto label12;
            default: goto label11;
        };

     label11:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find an algorithm: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label12:
        if i0 == 160 goto label14;

        if i0 == 224 goto label14;

        if i0 != 288 goto label13;

        goto label14;

     label13:
        z15 = 0;

        goto label15;

     label14:
        z15 = 1;

     label15:
        z16 = z15;

        z17 = 1;

        if i1 == 64 goto label17;

        z17 = 1;

        if i1 == 96 goto label17;

        if i1 != 128 goto label16;

        z17 = 1;

        goto label17;

     label16:
        z17 = 0;

     label17:
        z19 = z16;

        z13 = z17;

        goto label45;

     label18:
        if i0 != 512 goto label19;

        z20 = 1;

        goto label20;

     label19:
        z20 = 0;

     label20:
        z21 = z20;

        if i1 < 256 goto label21;

        if i1 > 512 goto label21;

        z22 = 1;

        goto label22;

     label21:
        z22 = 0;

     label22:
        z19 = z21;

        z13 = z22;

        goto label45;

     label23:
        if i0 != 384 goto label24;

        z24 = 1;

        goto label25;

     label24:
        z24 = 0;

     label25:
        z25 = z24;

        if i1 < 192 goto label26;

        if i1 > 384 goto label26;

        z26 = 1;

        goto label27;

     label26:
        z26 = 0;

     label27:
        z19 = z25;

        z13 = z26;

        goto label45;

     label28:
        if i0 != 256 goto label29;

        z28 = 1;

        goto label30;

     label29:
        z28 = 0;

     label30:
        z29 = z28;

        if i1 < 96 goto label31;

        if i1 > 256 goto label31;

        z30 = 1;

        goto label32;

     label31:
        z30 = 0;

     label32:
        z19 = z29;

        z13 = z30;

        goto label45;

     label33:
        if i0 != 160 goto label34;

        z32 = 1;

        goto label35;

     label34:
        z32 = 0;

     label35:
        z33 = z32;

        if i1 < 96 goto label36;

        if i1 > 160 goto label36;

        z34 = 1;

        goto label37;

     label36:
        z34 = 0;

     label37:
        z19 = z33;

        z13 = z34;

        goto label45;

     label38:
        if i0 != 128 goto label39;

        z36 = 1;

        goto label40;

     label39:
        z36 = 0;

     label40:
        z37 = z36;

        if i1 < 96 goto label41;

        if i1 > 128 goto label41;

        z38 = 1;

        goto label42;

     label41:
        z38 = 0;

     label42:
        z19 = z37;

        z13 = z38;

        goto label45;

     label43:
        z19 = 1;

        if i0 == 128 goto label45;

        z19 = 1;

        if i0 == 192 goto label45;

        if i0 != 256 goto label44;

        z19 = 1;

        goto label45;

     label44:
        z19 = 0;

     label45:
        if z19 == 0 goto label47;

        if z13 == 0 goto label46;

        return;

     label46:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid truncation keyLength: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label47:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key material keyLength: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static boolean equals(android.net.IpSecAlgorithm, android.net.IpSecAlgorithm)
    {
        android.net.IpSecAlgorithm r0, r1;
        java.lang.String $r2, $r3;
        boolean $z1, $z2, z3, z4;
        byte[] $r4, $r5;
        int $i0, $i1;

        r0 := @parameter0: android.net.IpSecAlgorithm;

        r1 := @parameter1: android.net.IpSecAlgorithm;

        z3 = 1;

        if r0 == null goto label4;

        if r1 != null goto label1;

        goto label4;

     label1:
        $r3 = r0.<android.net.IpSecAlgorithm: java.lang.String mName>;

        $r2 = r1.<android.net.IpSecAlgorithm: java.lang.String mName>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        $r5 = r0.<android.net.IpSecAlgorithm: byte[] mKey>;

        $r4 = r1.<android.net.IpSecAlgorithm: byte[] mKey>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r5, $r4);

        if $z2 == 0 goto label2;

        $i1 = r0.<android.net.IpSecAlgorithm: int mTruncLenBits>;

        $i0 = r1.<android.net.IpSecAlgorithm: int mTruncLenBits>;

        if $i1 != $i0 goto label2;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;

     label4:
        if r0 != r1 goto label5;

        z4 = 1;

        goto label6;

     label5:
        z4 = 0;

     label6:
        return z4;
    }

    private static boolean isUnsafeBuild()
    {
        boolean $z0, $z1, z2;

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label1;

        $z1 = <android.os.Build: boolean IS_ENG>;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public int describeContents()
    {
        android.net.IpSecAlgorithm r0;

        r0 := @this: android.net.IpSecAlgorithm;

        return 0;
    }

    public byte[] getKey()
    {
        android.net.IpSecAlgorithm r0;
        byte[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.net.IpSecAlgorithm;

        $r1 = r0.<android.net.IpSecAlgorithm: byte[] mKey>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (byte[]) $r2;

        return $r3;
    }

    public java.lang.String getName()
    {
        android.net.IpSecAlgorithm r0;
        java.lang.String $r1;

        r0 := @this: android.net.IpSecAlgorithm;

        $r1 = r0.<android.net.IpSecAlgorithm: java.lang.String mName>;

        return $r1;
    }

    public int getTruncationLengthBits()
    {
        android.net.IpSecAlgorithm r0;
        int $i0;

        r0 := @this: android.net.IpSecAlgorithm;

        $i0 = r0.<android.net.IpSecAlgorithm: int mTruncLenBits>;

        return $i0;
    }

    public boolean isAead()
    {
        android.net.IpSecAlgorithm r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: android.net.IpSecAlgorithm;

        $r1 = virtualinvoke r0.<android.net.IpSecAlgorithm: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("rfc4106(gcm(aes))");

        return $z0;
    }

    public boolean isAuthentication()
    {
        android.net.IpSecAlgorithm r0;
        java.lang.String r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte b1;

        r0 := @this: android.net.IpSecAlgorithm;

        r1 = virtualinvoke r0.<android.net.IpSecAlgorithm: java.lang.String getName()>();

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case 559425185: goto label6;
            case 559457797: goto label5;
            case 559510590: goto label4;
            case 759177996: goto label3;
            case 2065384259: goto label2;
            default: goto label1;
        };

     label1:
        goto label7;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("hmac(sha1)");

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label8;

     label3:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("hmac(md5)");

        if $z1 == 0 goto label1;

        b1 = 0;

        goto label8;

     label4:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("hmac(sha512)");

        if $z2 == 0 goto label1;

        b1 = 4;

        goto label8;

     label5:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("hmac(sha384)");

        if $z3 == 0 goto label1;

        b1 = 3;

        goto label8;

     label6:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("hmac(sha256)");

        if $z4 == 0 goto label1;

        b1 = 2;

        goto label8;

     label7:
        b1 = -1;

     label8:
        if b1 == 0 goto label9;

        if b1 == 1 goto label9;

        if b1 == 2 goto label9;

        if b1 == 3 goto label9;

        if b1 == 4 goto label9;

        return 0;

     label9:
        return 1;
    }

    public boolean isEncryption()
    {
        android.net.IpSecAlgorithm r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: android.net.IpSecAlgorithm;

        $r1 = virtualinvoke r0.<android.net.IpSecAlgorithm: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("cbc(aes)");

        return $z0;
    }

    public java.lang.String toString()
    {
        android.net.IpSecAlgorithm r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r11, r13;
        boolean $z0;
        int $i0;
        byte[] $r12;

        r0 := @this: android.net.IpSecAlgorithm;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{mName=");

        $r4 = r0.<android.net.IpSecAlgorithm: java.lang.String mName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mKey=");

        $z0 = staticinvoke <android.net.IpSecAlgorithm: boolean isUnsafeBuild()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<android.net.IpSecAlgorithm: byte[] mKey>;

        r13 = staticinvoke <com.android.internal.util.HexDump: java.lang.String toHexString(byte[])>($r12);

        goto label2;

     label1:
        r13 = "<hidden>";

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mTruncLenBits=");

        $i0 = r0.<android.net.IpSecAlgorithm: int mTruncLenBits>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.IpSecAlgorithm r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.String $r2;
        byte[] $r3;

        r0 := @this: android.net.IpSecAlgorithm;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.net.IpSecAlgorithm: java.lang.String mName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.net.IpSecAlgorithm: byte[] mKey>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r3);

        $i1 = r0.<android.net.IpSecAlgorithm: int mTruncLenBits>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        return;
    }
}
