public final class android.net.IpSecManager$UdpEncapsulationSocket extends java.lang.Object implements java.lang.AutoCloseable
{
    private final dalvik.system.CloseGuard mCloseGuard;
    private final android.os.ParcelFileDescriptor mPfd;
    private final int mPort;
    private int mResourceId;
    private final android.net.IIpSecService mService;

    private void <init>(android.net.IIpSecService, int) throws android.net.IpSecManager$ResourceUnavailableException, java.io.IOException
    {
        android.net.IpSecManager$UdpEncapsulationSocket r0;
        java.lang.StringBuilder r1;
        dalvik.system.CloseGuard $r2, $r4;
        int $i0, $i1, $i2, i3, i4;
        android.os.ParcelFileDescriptor $r3;
        java.lang.String $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9, r13;
        android.net.IIpSecService r10;
        android.os.Binder r11;
        android.net.IpSecUdpEncapResponse r12;
        android.net.IpSecManager$ResourceUnavailableException r14;

        r0 := @this: android.net.IpSecManager$UdpEncapsulationSocket;

        r10 := @parameter0: android.net.IIpSecService;

        i3 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mResourceId> = -1;

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.net.IpSecManager$UdpEncapsulationSocket: dalvik.system.CloseGuard mCloseGuard> = $r2;

        r0.<android.net.IpSecManager$UdpEncapsulationSocket: android.net.IIpSecService mService> = r10;

     label1:
        r11 = new android.os.Binder;

        specialinvoke r11.<android.os.Binder: void <init>()>();

        r12 = interfaceinvoke r10.<android.net.IIpSecService: android.net.IpSecUdpEncapResponse openUdpEncapsulationSocket(int,android.os.IBinder)>(i3, r11);

        i4 = r12.<android.net.IpSecUdpEncapResponse: int status>;

     label2:
        if i4 == 0 goto label5;

        if i4 == 1 goto label4;

     label3:
        r13 = new java.lang.RuntimeException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown status returned by IpSecService: ");

        $i2 = r12.<android.net.IpSecUdpEncapResponse: int status>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw r13;

     label4:
        r14 = new android.net.IpSecManager$ResourceUnavailableException;

        specialinvoke r14.<android.net.IpSecManager$ResourceUnavailableException: void <init>(java.lang.String)>("No more Sockets may be allocated by this requester.");

        throw r14;

     label5:
        $i0 = r12.<android.net.IpSecUdpEncapResponse: int resourceId>;

        r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mResourceId> = $i0;

        $i1 = r12.<android.net.IpSecUdpEncapResponse: int port>;

        r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mPort> = $i1;

        $r3 = r12.<android.net.IpSecUdpEncapResponse: android.os.ParcelFileDescriptor fileDescriptor>;

        r0.<android.net.IpSecManager$UdpEncapsulationSocket: android.os.ParcelFileDescriptor mPfd> = $r3;

     label6:
        $r4 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void open(java.lang.String)>("constructor");

        return;

     label7:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label4 to label5 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    void <init>(android.net.IIpSecService, int, android.net.IpSecManager$1) throws android.net.IpSecManager$ResourceUnavailableException, java.io.IOException
    {
        android.net.IpSecManager$UdpEncapsulationSocket r0;
        android.net.IIpSecService r1;
        int i0;
        android.net.IpSecManager$1 r2;

        r0 := @this: android.net.IpSecManager$UdpEncapsulationSocket;

        r1 := @parameter0: android.net.IIpSecService;

        i0 := @parameter1: int;

        r2 := @parameter2: android.net.IpSecManager$1;

        specialinvoke r0.<android.net.IpSecManager$UdpEncapsulationSocket: void <init>(android.net.IIpSecService,int)>(r1, i0);

        return;
    }

    public void close() throws java.io.IOException
    {
        android.net.IpSecManager$UdpEncapsulationSocket r0;
        int $i0, $i2;
        android.net.IIpSecService $r1;
        dalvik.system.CloseGuard $r2, $r5;
        android.os.ParcelFileDescriptor $r3;
        java.lang.Throwable $r4, $r14;
        java.lang.Exception $r6;
        java.lang.String $r11, $r18;
        android.os.RemoteException $r12;
        java.lang.RuntimeException $r13;
        java.lang.StringBuilder $r15, r21;

        r0 := @this: android.net.IpSecManager$UdpEncapsulationSocket;

     label01:
        $r1 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: android.net.IIpSecService mService>;

        $i0 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mResourceId>;

        interfaceinvoke $r1.<android.net.IIpSecService: void closeUdpEncapsulationSocket(int)>($i0);

        r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mResourceId> = -1;

     label02:
        r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mResourceId> = -1;

        $r2 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void close()>();

        goto label07;

     label03:
        $r4 := @caughtexception;

        goto label12;

     label04:
        $r6 := @caughtexception;

     label05:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Exception=");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r11 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IpSecManager", $r11);

     label06:
        goto label02;

     label07:
        $r3 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: android.os.ParcelFileDescriptor mPfd>;

        virtualinvoke $r3.<android.os.ParcelFileDescriptor: void close()>();

     label08:
        return;

     label09:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close UDP Encapsulation Socket with Port= ");

        $i2 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mPort>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IpSecManager", $r18);

        throw $r14;

     label10:
        $r12 := @caughtexception;

     label11:
        $r13 = virtualinvoke $r12.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r13;

     label12:
        r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mResourceId> = -1;

        $r5 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r5.<dalvik.system.CloseGuard: void close()>();

        throw $r4;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label03;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.net.IpSecManager$UdpEncapsulationSocket r0;
        dalvik.system.CloseGuard r1;

        r0 := @this: android.net.IpSecManager$UdpEncapsulationSocket;

        r1 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: dalvik.system.CloseGuard mCloseGuard>;

        if r1 == null goto label1;

        virtualinvoke r1.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label1:
        virtualinvoke r0.<android.net.IpSecManager$UdpEncapsulationSocket: void close()>();

        return;
    }

    public java.io.FileDescriptor getFileDescriptor()
    {
        android.net.IpSecManager$UdpEncapsulationSocket r0;
        android.os.ParcelFileDescriptor r1;
        java.io.FileDescriptor $r2;

        r0 := @this: android.net.IpSecManager$UdpEncapsulationSocket;

        r1 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: android.os.ParcelFileDescriptor mPfd>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        return $r2;
    }

    public int getPort()
    {
        android.net.IpSecManager$UdpEncapsulationSocket r0;
        int $i0;

        r0 := @this: android.net.IpSecManager$UdpEncapsulationSocket;

        $i0 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mPort>;

        return $i0;
    }

    public int getResourceId()
    {
        android.net.IpSecManager$UdpEncapsulationSocket r0;
        int $i0;

        r0 := @this: android.net.IpSecManager$UdpEncapsulationSocket;

        $i0 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mResourceId>;

        return $i0;
    }

    public java.lang.String toString()
    {
        android.net.IpSecManager$UdpEncapsulationSocket r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r8;

        r0 := @this: android.net.IpSecManager$UdpEncapsulationSocket;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UdpEncapsulationSocket{port=");

        $i0 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mPort>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",resourceId=");

        $i1 = r0.<android.net.IpSecManager$UdpEncapsulationSocket: int mResourceId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
