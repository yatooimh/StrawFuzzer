public class android.net.IpSecTransform$Builder extends java.lang.Object
{
    private android.net.IpSecConfig mConfig;
    private android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        android.net.IpSecTransform$Builder r0;
        android.content.Context r1;
        android.net.IpSecConfig $r3;

        r0 := @this: android.net.IpSecTransform$Builder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<android.net.IpSecTransform$Builder: android.content.Context mContext> = r1;

        $r3 = new android.net.IpSecConfig;

        specialinvoke $r3.<android.net.IpSecConfig: void <init>()>();

        r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig> = $r3;

        return;
    }

    public android.net.IpSecTransform buildTransportModeTransform(java.net.InetAddress, android.net.IpSecManager$SecurityParameterIndex) throws android.net.IpSecManager$ResourceUnavailableException, android.net.IpSecManager$SpiUnavailableException, java.io.IOException
    {
        android.net.IpSecTransform$Builder r0;
        java.net.InetAddress r1;
        android.net.IpSecManager$SecurityParameterIndex r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r5;
        android.net.IpSecConfig $r6, $r7, $r9, $r11;
        java.lang.String $r8;
        android.net.IpSecTransform $r10, $r13;
        android.content.Context $r12;

        r0 := @this: android.net.IpSecTransform$Builder;

        r1 := @parameter0: java.net.InetAddress;

        r2 := @parameter1: android.net.IpSecManager$SecurityParameterIndex;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $i0 = virtualinvoke r2.<android.net.IpSecManager$SecurityParameterIndex: int getResourceId()>();

        if $i0 == -1 goto label1;

        $r6 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        virtualinvoke $r6.<android.net.IpSecConfig: void setMode(int)>(0);

        $r7 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        $r8 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r7.<android.net.IpSecConfig: void setSourceAddress(java.lang.String)>($r8);

        $r9 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        $i1 = virtualinvoke r2.<android.net.IpSecManager$SecurityParameterIndex: int getResourceId()>();

        virtualinvoke $r9.<android.net.IpSecConfig: void setSpiResourceId(int)>($i1);

        $r10 = new android.net.IpSecTransform;

        $r12 = r0.<android.net.IpSecTransform$Builder: android.content.Context mContext>;

        $r11 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        specialinvoke $r10.<android.net.IpSecTransform: void <init>(android.content.Context,android.net.IpSecConfig)>($r12, $r11);

        $r13 = staticinvoke <android.net.IpSecTransform: android.net.IpSecTransform access$300(android.net.IpSecTransform)>($r10);

        return $r13;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid SecurityParameterIndex");

        throw $r5;
    }

    public android.net.IpSecTransform buildTunnelModeTransform(java.net.InetAddress, android.net.IpSecManager$SecurityParameterIndex) throws android.net.IpSecManager$ResourceUnavailableException, android.net.IpSecManager$SpiUnavailableException, java.io.IOException
    {
        android.net.IpSecTransform$Builder r0;
        java.net.InetAddress r1;
        android.net.IpSecManager$SecurityParameterIndex r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r5;
        android.net.IpSecConfig $r6, $r7, $r9, $r11;
        java.lang.String $r8;
        android.net.IpSecTransform $r10, $r13;
        android.content.Context $r12;

        r0 := @this: android.net.IpSecTransform$Builder;

        r1 := @parameter0: java.net.InetAddress;

        r2 := @parameter1: android.net.IpSecManager$SecurityParameterIndex;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $i0 = virtualinvoke r2.<android.net.IpSecManager$SecurityParameterIndex: int getResourceId()>();

        if $i0 == -1 goto label1;

        $r6 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        virtualinvoke $r6.<android.net.IpSecConfig: void setMode(int)>(1);

        $r7 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        $r8 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r7.<android.net.IpSecConfig: void setSourceAddress(java.lang.String)>($r8);

        $r9 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        $i1 = virtualinvoke r2.<android.net.IpSecManager$SecurityParameterIndex: int getResourceId()>();

        virtualinvoke $r9.<android.net.IpSecConfig: void setSpiResourceId(int)>($i1);

        $r10 = new android.net.IpSecTransform;

        $r12 = r0.<android.net.IpSecTransform$Builder: android.content.Context mContext>;

        $r11 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        specialinvoke $r10.<android.net.IpSecTransform: void <init>(android.content.Context,android.net.IpSecConfig)>($r12, $r11);

        $r13 = staticinvoke <android.net.IpSecTransform: android.net.IpSecTransform access$300(android.net.IpSecTransform)>($r10);

        return $r13;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid SecurityParameterIndex");

        throw $r5;
    }

    public android.net.IpSecTransform$Builder setAuthenticatedEncryption(android.net.IpSecAlgorithm)
    {
        android.net.IpSecTransform$Builder r0;
        android.net.IpSecAlgorithm r1;
        android.net.IpSecConfig $r3;

        r0 := @this: android.net.IpSecTransform$Builder;

        r1 := @parameter0: android.net.IpSecAlgorithm;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        virtualinvoke $r3.<android.net.IpSecConfig: void setAuthenticatedEncryption(android.net.IpSecAlgorithm)>(r1);

        return r0;
    }

    public android.net.IpSecTransform$Builder setAuthentication(android.net.IpSecAlgorithm)
    {
        android.net.IpSecTransform$Builder r0;
        android.net.IpSecAlgorithm r1;
        android.net.IpSecConfig $r3;

        r0 := @this: android.net.IpSecTransform$Builder;

        r1 := @parameter0: android.net.IpSecAlgorithm;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        virtualinvoke $r3.<android.net.IpSecConfig: void setAuthentication(android.net.IpSecAlgorithm)>(r1);

        return r0;
    }

    public android.net.IpSecTransform$Builder setEncryption(android.net.IpSecAlgorithm)
    {
        android.net.IpSecTransform$Builder r0;
        android.net.IpSecAlgorithm r1;
        android.net.IpSecConfig $r3;

        r0 := @this: android.net.IpSecTransform$Builder;

        r1 := @parameter0: android.net.IpSecAlgorithm;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        virtualinvoke $r3.<android.net.IpSecConfig: void setEncryption(android.net.IpSecAlgorithm)>(r1);

        return r0;
    }

    public android.net.IpSecTransform$Builder setIpv4Encapsulation(android.net.IpSecManager$UdpEncapsulationSocket, int)
    {
        android.net.IpSecTransform$Builder r0;
        android.net.IpSecManager$UdpEncapsulationSocket r1;
        int i0, $i1, $i2;
        android.net.IpSecConfig $r3, $r5, $r6;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.net.IpSecTransform$Builder;

        r1 := @parameter0: android.net.IpSecManager$UdpEncapsulationSocket;

        i0 := @parameter1: int;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        virtualinvoke $r3.<android.net.IpSecConfig: void setEncapType(int)>(2);

        $i1 = virtualinvoke r1.<android.net.IpSecManager$UdpEncapsulationSocket: int getResourceId()>();

        if $i1 == -1 goto label1;

        $r5 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        $i2 = virtualinvoke r1.<android.net.IpSecManager$UdpEncapsulationSocket: int getResourceId()>();

        virtualinvoke $r5.<android.net.IpSecConfig: void setEncapSocketResourceId(int)>($i2);

        $r6 = r0.<android.net.IpSecTransform$Builder: android.net.IpSecConfig mConfig>;

        virtualinvoke $r6.<android.net.IpSecConfig: void setEncapRemotePort(int)>(i0);

        return r0;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid UdpEncapsulationSocket");

        throw $r4;
    }
}
