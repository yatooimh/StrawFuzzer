public class android.net.KeepalivePacketData extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.net.InetAddress mDstAddress;
    private final int mDstPort;
    private final byte[] mPacket;
    private final java.net.InetAddress mSrcAddress;
    private final int mSrcPort;

    protected void <init>(java.net.InetAddress, int, java.net.InetAddress, int, byte[]) throws android.net.InvalidPacketException
    {
        android.net.KeepalivePacketData r0;
        java.net.InetAddress r1, r2;
        int i0, i1;
        byte[] r3;
        java.lang.Class $r4, $r6;
        java.lang.String $r5, $r7;
        boolean $z0, $z1, $z2;
        android.net.InvalidPacketException $r8, $r9;

        r0 := @this: android.net.KeepalivePacketData;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r2 := @parameter2: java.net.InetAddress;

        i1 := @parameter3: int;

        r3 := @parameter4: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.KeepalivePacketData: java.net.InetAddress mSrcAddress> = r1;

        r0.<android.net.KeepalivePacketData: java.net.InetAddress mDstAddress> = r2;

        r0.<android.net.KeepalivePacketData: int mSrcPort> = i0;

        r0.<android.net.KeepalivePacketData: int mDstPort> = i1;

        r0.<android.net.KeepalivePacketData: byte[] mPacket> = r3;

        if r1 == null goto label2;

        if r2 == null goto label2;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <android.net.util.IpUtils: boolean isValidUdpOrTcpPort(int)>(i0);

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <android.net.util.IpUtils: boolean isValidUdpOrTcpPort(int)>(i1);

        if $z2 == 0 goto label1;

        return;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeepalivePacketData", "Invalid ports in KeepalivePacketData");

        $r8 = new android.net.InvalidPacketException;

        specialinvoke $r8.<android.net.InvalidPacketException: void <init>(int)>(-22);

        throw $r8;

     label2:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("KeepalivePacketData", "Invalid or mismatched InetAddresses in KeepalivePacketData");

        $r9 = new android.net.InvalidPacketException;

        specialinvoke $r9.<android.net.InvalidPacketException: void <init>(int)>(-21);

        throw $r9;
    }

    public java.net.InetAddress getDstAddress()
    {
        android.net.KeepalivePacketData r0;
        java.net.InetAddress $r1;

        r0 := @this: android.net.KeepalivePacketData;

        $r1 = r0.<android.net.KeepalivePacketData: java.net.InetAddress mDstAddress>;

        return $r1;
    }

    public int getDstPort()
    {
        android.net.KeepalivePacketData r0;
        int $i0;

        r0 := @this: android.net.KeepalivePacketData;

        $i0 = r0.<android.net.KeepalivePacketData: int mDstPort>;

        return $i0;
    }

    public byte[] getPacket()
    {
        android.net.KeepalivePacketData r0;
        byte[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.net.KeepalivePacketData;

        $r1 = r0.<android.net.KeepalivePacketData: byte[] mPacket>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (byte[]) $r2;

        return $r3;
    }

    public java.net.InetAddress getSrcAddress()
    {
        android.net.KeepalivePacketData r0;
        java.net.InetAddress $r1;

        r0 := @this: android.net.KeepalivePacketData;

        $r1 = r0.<android.net.KeepalivePacketData: java.net.InetAddress mSrcAddress>;

        return $r1;
    }

    public int getSrcPort()
    {
        android.net.KeepalivePacketData r0;
        int $i0;

        r0 := @this: android.net.KeepalivePacketData;

        $i0 = r0.<android.net.KeepalivePacketData: int mSrcPort>;

        return $i0;
    }

    public static void <clinit>()
    {
        <android.net.KeepalivePacketData: java.lang.String TAG> = "KeepalivePacketData";

        return;
    }
}
