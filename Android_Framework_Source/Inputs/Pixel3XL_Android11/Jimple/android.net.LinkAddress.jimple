public class android.net.LinkAddress extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final long LIFETIME_PERMANENT;
    public static final long LIFETIME_UNKNOWN;
    private java.net.InetAddress address;
    private long deprecationTime;
    private long expirationTime;
    private int flags;
    private int prefixLength;
    private int scope;

    static void <clinit>()
    {
        android.net.LinkAddress$1 $r0;

        <android.net.LinkAddress: long LIFETIME_UNKNOWN> = -1L;

        <android.net.LinkAddress: long LIFETIME_PERMANENT> = 9223372036854775807L;

        $r0 = new android.net.LinkAddress$1;

        specialinvoke $r0.<android.net.LinkAddress$1: void <init>()>();

        <android.net.LinkAddress: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        android.net.LinkAddress r0;
        java.lang.String r1;
        java.net.InetAddress $r2;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.net.LinkAddress: void <init>(java.lang.String,int,int)>(r1, 0, 0);

        $r2 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $i0 = staticinvoke <android.net.LinkAddress: int scopeForUnicastAddress(java.net.InetAddress)>($r2);

        r0.<android.net.LinkAddress: int scope> = $i0;

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        android.net.LinkAddress r0;
        int i0, i1, $i2;
        java.lang.Object $r1, $r2;
        java.lang.Integer $r3;
        java.net.InetAddress $r4;
        java.lang.String r5;
        android.util.Pair r6;

        r0 := @this: android.net.LinkAddress;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r6 = staticinvoke <android.net.NetworkUtils: android.util.Pair parseIpAndMask(java.lang.String)>(r5);

        $r1 = r6.<android.util.Pair: java.lang.Object first>;

        $r4 = (java.net.InetAddress) $r1;

        $r2 = r6.<android.util.Pair: java.lang.Object second>;

        $r3 = (java.lang.Integer) $r2;

        $i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<android.net.LinkAddress: void init(java.net.InetAddress,int,int,int,long,long)>($r4, $i2, i0, i1, -1L, -1L);

        return;
    }

    public void <init>(java.net.InetAddress, int)
    {
        android.net.LinkAddress r0;
        java.net.InetAddress r1;
        int i0, $i1;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        specialinvoke r0.<android.net.LinkAddress: void <init>(java.net.InetAddress,int,int,int)>(r1, i0, 0, 0);

        $i1 = staticinvoke <android.net.LinkAddress: int scopeForUnicastAddress(java.net.InetAddress)>(r1);

        r0.<android.net.LinkAddress: int scope> = $i1;

        return;
    }

    public void <init>(java.net.InetAddress, int, int, int)
    {
        android.net.LinkAddress r0;
        java.net.InetAddress r1;
        int i0, i1, i2;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.net.LinkAddress: void init(java.net.InetAddress,int,int,int,long,long)>(r1, i0, i1, i2, -1L, -1L);

        return;
    }

    public void <init>(java.net.InetAddress, int, int, int, long, long)
    {
        android.net.LinkAddress r0;
        java.net.InetAddress r1;
        int i0, i1, i2;
        long l3, l4;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        l4 := @parameter5: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.net.LinkAddress: void init(java.net.InetAddress,int,int,int,long,long)>(r1, i0, i1, i2, l3, l4);

        return;
    }

    public void <init>(java.net.InterfaceAddress)
    {
        android.net.LinkAddress r0;
        java.net.InterfaceAddress r1;
        java.net.InetAddress $r2;
        short $s0;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InterfaceAddress;

        $r2 = virtualinvoke r1.<java.net.InterfaceAddress: java.net.InetAddress getAddress()>();

        $s0 = virtualinvoke r1.<java.net.InterfaceAddress: short getNetworkPrefixLength()>();

        specialinvoke r0.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>($r2, $s0);

        return;
    }

    private void init(java.net.InetAddress, int, int, int, long, long)
    {
        android.net.LinkAddress r0;
        int i0, i1, i2;
        long l3, l4;
        boolean $z0, $z1, z2, z3;
        byte $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13;
        java.lang.IllegalArgumentException $r6, $r13, $r18, $r23, $r30;
        java.lang.StringBuilder $r7, $r15, $r20, $r29;
        java.lang.String $r14, $r19, $r24, $r31;
        java.net.InetAddress r25;

        r0 := @this: android.net.LinkAddress;

        r25 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        l4 := @parameter5: long;

        if r25 == null goto label13;

        $z0 = virtualinvoke r25.<java.net.InetAddress: boolean isMulticastAddress()>();

        if $z0 != 0 goto label13;

        if i0 < 0 goto label13;

        $z1 = r25 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label01;

        if i0 > 32 goto label13;

     label01:
        if i0 > 128 goto label13;

        z2 = 1;

        $b5 = l3 cmp -1L;

        if $b5 != 0 goto label02;

        z3 = 1;

        goto label03;

     label02:
        z3 = 0;

     label03:
        $b6 = l4 cmp -1L;

        if $b6 != 0 goto label04;

        goto label05;

     label04:
        z2 = 0;

     label05:
        if z3 != z2 goto label12;

        $b7 = l3 cmp -1L;

        if $b7 == 0 goto label07;

        $b13 = l3 cmp 0L;

        if $b13 < 0 goto label06;

        goto label07;

     label06:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid deprecation time ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label07:
        $b8 = l4 cmp -1L;

        if $b8 == 0 goto label09;

        $b12 = l4 cmp 0L;

        if $b12 < 0 goto label08;

        goto label09;

     label08:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid expiration time ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label09:
        $b9 = l3 cmp -1L;

        if $b9 == 0 goto label11;

        $b10 = l4 cmp -1L;

        if $b10 == 0 goto label11;

        $b11 = l4 cmp l3;

        if $b11 < 0 goto label10;

        goto label11;

     label10:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expiration earlier than deprecation (");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label11:
        r0.<android.net.LinkAddress: java.net.InetAddress address> = r25;

        r0.<android.net.LinkAddress: int prefixLength> = i0;

        r0.<android.net.LinkAddress: int flags> = i1;

        r0.<android.net.LinkAddress: int scope> = i2;

        r0.<android.net.LinkAddress: long deprecationTime> = l3;

        r0.<android.net.LinkAddress: long expirationTime> = l4;

        return;

     label12:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must not specify only one of deprecation time and expiration time");

        throw $r6;

     label13:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad LinkAddress params ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r30 = new java.lang.IllegalArgumentException;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r30;
    }

    private boolean isIpv6ULA()
    {
        android.net.LinkAddress r0;
        boolean z0, z1;
        java.net.InetAddress $r1;
        byte[] $r2;
        byte $b0, $b1;

        r0 := @this: android.net.LinkAddress;

        z0 = virtualinvoke r0.<android.net.LinkAddress: boolean isIpv6()>();

        z1 = 0;

        if z0 == 0 goto label2;

        $r1 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r2 = virtualinvoke $r1.<java.net.InetAddress: byte[] getAddress()>();

        $b0 = $r2[0];

        $b1 = $b0 & -2;

        if $b1 != -4 goto label1;

        z1 = 1;

     label1:
        return z1;

     label2:
        return 0;
    }

    private static int scopeForUnicastAddress(java.net.InetAddress)
    {
        java.net.InetAddress r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: java.net.InetAddress;

        $z0 = virtualinvoke r0.<java.net.InetAddress: boolean isAnyLocalAddress()>();

        if $z0 == 0 goto label1;

        $i3 = <android.system.OsConstants: int RT_SCOPE_HOST>;

        return $i3;

     label1:
        $z1 = virtualinvoke r0.<java.net.InetAddress: boolean isLoopbackAddress()>();

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke r0.<java.net.InetAddress: boolean isLinkLocalAddress()>();

        if $z2 == 0 goto label2;

        goto label4;

     label2:
        $z3 = r0 instanceof java.net.Inet4Address;

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r0.<java.net.InetAddress: boolean isSiteLocalAddress()>();

        if $z4 == 0 goto label3;

        $i2 = <android.system.OsConstants: int RT_SCOPE_SITE>;

        return $i2;

     label3:
        $i1 = <android.system.OsConstants: int RT_SCOPE_UNIVERSE>;

        return $i1;

     label4:
        $i0 = <android.system.OsConstants: int RT_SCOPE_LINK>;

        return $i0;
    }

    public int describeContents()
    {
        android.net.LinkAddress r0;

        r0 := @this: android.net.LinkAddress;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.LinkAddress r0, r4;
        java.net.InetAddress $r1, $r2;
        boolean $z1, z2, z3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        long $l6, $l7, $l9, $l10;
        byte $b8, $b11;
        java.lang.Object r3;

        r0 := @this: android.net.LinkAddress;

        r3 := @parameter0: java.lang.Object;

        z2 = r3 instanceof android.net.LinkAddress;

        if z2 != 0 goto label1;

        return 0;

     label1:
        r4 = (android.net.LinkAddress) r3;

        z3 = 0;

        $r2 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r1 = r4.<android.net.LinkAddress: java.net.InetAddress address>;

        $z1 = virtualinvoke $r2.<java.net.InetAddress: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        z3 = 0;

        $i1 = r0.<android.net.LinkAddress: int prefixLength>;

        $i0 = r4.<android.net.LinkAddress: int prefixLength>;

        if $i1 != $i0 goto label2;

        z3 = 0;

        $i3 = r0.<android.net.LinkAddress: int flags>;

        $i2 = r4.<android.net.LinkAddress: int flags>;

        if $i3 != $i2 goto label2;

        z3 = 0;

        $i5 = r0.<android.net.LinkAddress: int scope>;

        $i4 = r4.<android.net.LinkAddress: int scope>;

        if $i5 != $i4 goto label2;

        z3 = 0;

        $l7 = r0.<android.net.LinkAddress: long deprecationTime>;

        $l6 = r4.<android.net.LinkAddress: long deprecationTime>;

        $b8 = $l7 cmp $l6;

        if $b8 != 0 goto label2;

        z3 = 0;

        $l10 = r0.<android.net.LinkAddress: long expirationTime>;

        $l9 = r4.<android.net.LinkAddress: long expirationTime>;

        $b11 = $l10 cmp $l9;

        if $b11 != 0 goto label2;

        z3 = 1;

     label2:
        return z3;
    }

    public java.net.InetAddress getAddress()
    {
        android.net.LinkAddress r0;
        java.net.InetAddress $r1;

        r0 := @this: android.net.LinkAddress;

        $r1 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        return $r1;
    }

    public long getDeprecationTime()
    {
        android.net.LinkAddress r0;
        long $l0;

        r0 := @this: android.net.LinkAddress;

        $l0 = r0.<android.net.LinkAddress: long deprecationTime>;

        return $l0;
    }

    public long getExpirationTime()
    {
        android.net.LinkAddress r0;
        long $l0;

        r0 := @this: android.net.LinkAddress;

        $l0 = r0.<android.net.LinkAddress: long expirationTime>;

        return $l0;
    }

    public int getFlags()
    {
        android.net.LinkAddress r0;
        long l0, $l1, $l6, $l7;
        byte $b2, $b3, $b8, $b13;
        int $i4, $i5, $i9, $i10, i11, i12, i14;

        r0 := @this: android.net.LinkAddress;

        i11 = r0.<android.net.LinkAddress: int flags>;

        i12 = i11;

        $l1 = r0.<android.net.LinkAddress: long deprecationTime>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label2;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l7 = r0.<android.net.LinkAddress: long deprecationTime>;

        $b8 = $l6 cmp $l7;

        if $b8 < 0 goto label1;

        $i10 = <android.system.OsConstants: int IFA_F_DEPRECATED>;

        i12 = i11 | $i10;

        goto label2;

     label1:
        $i9 = <android.system.OsConstants: int IFA_F_DEPRECATED>;

        i12 = i11 & $i9;

     label2:
        l0 = r0.<android.net.LinkAddress: long expirationTime>;

        $b13 = l0 cmp 9223372036854775807L;

        if $b13 != 0 goto label3;

        $i5 = <android.system.OsConstants: int IFA_F_PERMANENT>;

        i14 = i12 | $i5;

        goto label4;

     label3:
        i14 = i12;

        $b3 = l0 cmp -1L;

        if $b3 == 0 goto label4;

        $i4 = <android.system.OsConstants: int IFA_F_PERMANENT>;

        i14 = i12 & $i4;

     label4:
        return i14;
    }

    public int getNetworkPrefixLength()
    {
        android.net.LinkAddress r0;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $i0 = virtualinvoke r0.<android.net.LinkAddress: int getPrefixLength()>();

        return $i0;
    }

    public int getPrefixLength()
    {
        android.net.LinkAddress r0;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $i0 = r0.<android.net.LinkAddress: int prefixLength>;

        return $i0;
    }

    public int getScope()
    {
        android.net.LinkAddress r0;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $i0 = r0.<android.net.LinkAddress: int scope>;

        return $i0;
    }

    public int hashCode()
    {
        android.net.LinkAddress r0;
        java.lang.Object[] $r1;
        java.net.InetAddress $r2;
        int $i0, $i1, $i2, $i5;
        java.lang.Integer $r3, $r4, $r5;
        long $l3, $l4;
        java.lang.Long $r6, $r7;

        r0 := @this: android.net.LinkAddress;

        $r1 = newarray (java.lang.Object)[6];

        $r2 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r1[0] = $r2;

        $i0 = r0.<android.net.LinkAddress: int prefixLength>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r3;

        $i1 = r0.<android.net.LinkAddress: int flags>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[2] = $r4;

        $i2 = r0.<android.net.LinkAddress: int scope>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[3] = $r5;

        $l3 = r0.<android.net.LinkAddress: long deprecationTime>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r1[4] = $r6;

        $l4 = r0.<android.net.LinkAddress: long expirationTime>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r1[5] = $r7;

        $i5 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i5;
    }

    public boolean isGlobalPreferred()
    {
        android.net.LinkAddress r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i13, $i14;
        boolean $z0, z1;
        long $l7, $l11, $l15;
        byte $b8, $b12, $b16;

        r0 := @this: android.net.LinkAddress;

        i0 = virtualinvoke r0.<android.net.LinkAddress: int getFlags()>();

        $i2 = r0.<android.net.LinkAddress: int scope>;

        $i1 = <android.system.OsConstants: int RT_SCOPE_UNIVERSE>;

        if $i2 != $i1 goto label2;

        $z0 = specialinvoke r0.<android.net.LinkAddress: boolean isIpv6ULA()>();

        if $z0 != 0 goto label2;

        $i4 = <android.system.OsConstants: int IFA_F_DADFAILED>;

        $i3 = <android.system.OsConstants: int IFA_F_DEPRECATED>;

        $i5 = $i4 | $i3;

        $i6 = $i5 & i0;

        $l7 = (long) $i6;

        $b8 = $l7 cmp 0L;

        if $b8 != 0 goto label2;

        $i9 = <android.system.OsConstants: int IFA_F_TENTATIVE>;

        $i10 = $i9 & i0;

        $l11 = (long) $i10;

        $b12 = $l11 cmp 0L;

        if $b12 == 0 goto label1;

        $i13 = <android.system.OsConstants: int IFA_F_OPTIMISTIC>;

        $i14 = $i13 & i0;

        $l15 = (long) $i14;

        $b16 = $l15 cmp 0L;

        if $b16 == 0 goto label2;

     label1:
        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    public boolean isIPv6()
    {
        android.net.LinkAddress r0;
        boolean $z0;

        r0 := @this: android.net.LinkAddress;

        $z0 = virtualinvoke r0.<android.net.LinkAddress: boolean isIpv6()>();

        return $z0;
    }

    public boolean isIpv4()
    {
        android.net.LinkAddress r0;
        java.net.InetAddress $r1;
        boolean $z0;

        r0 := @this: android.net.LinkAddress;

        $r1 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $z0 = $r1 instanceof java.net.Inet4Address;

        return $z0;
    }

    public boolean isIpv6()
    {
        android.net.LinkAddress r0;
        java.net.InetAddress $r1;
        boolean $z0;

        r0 := @this: android.net.LinkAddress;

        $r1 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $z0 = $r1 instanceof java.net.Inet6Address;

        return $z0;
    }

    public boolean isSameAddressAs(android.net.LinkAddress)
    {
        android.net.LinkAddress r0, r1;
        java.net.InetAddress $r2, $r3;
        boolean $z1, z2;
        int $i0, $i1;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: android.net.LinkAddress;

        if r1 != null goto label1;

        return 0;

     label1:
        z2 = 0;

        $r3 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r2 = r1.<android.net.LinkAddress: java.net.InetAddress address>;

        $z1 = virtualinvoke $r3.<java.net.InetAddress: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        z2 = 0;

        $i1 = r0.<android.net.LinkAddress: int prefixLength>;

        $i0 = r1.<android.net.LinkAddress: int prefixLength>;

        if $i1 != $i0 goto label2;

        z2 = 1;

     label2:
        return z2;
    }

    public java.lang.String toString()
    {
        android.net.LinkAddress r0;
        java.lang.StringBuilder $r2;
        java.net.InetAddress $r3;
        java.lang.String $r4, $r8;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r4 = virtualinvoke $r3.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = r0.<android.net.LinkAddress: int prefixLength>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.LinkAddress r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        java.net.InetAddress $r2;
        byte[] $r3;
        long $l4, $l5;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r3 = virtualinvoke $r2.<java.net.InetAddress: byte[] getAddress()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r3);

        $i1 = r0.<android.net.LinkAddress: int prefixLength>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.net.LinkAddress: int flags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.net.LinkAddress: int scope>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $l4 = r0.<android.net.LinkAddress: long deprecationTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $l5 = r0.<android.net.LinkAddress: long expirationTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        return;
    }
}
