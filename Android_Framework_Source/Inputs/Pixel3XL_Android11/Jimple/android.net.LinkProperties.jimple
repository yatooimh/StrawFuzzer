public final class android.net.LinkProperties extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int INET6_ADDR_LENGTH;
    private static final int MAX_MTU;
    private static final int MIN_MTU;
    static final int MIN_MTU_V6;
    private android.net.Uri mCaptivePortalApiUrl;
    private android.net.CaptivePortalData mCaptivePortalData;
    private java.net.Inet4Address mDhcpServerAddress;
    private final java.util.ArrayList mDnses;
    private java.lang.String mDomains;
    private android.net.ProxyInfo mHttpProxy;
    private java.lang.String mIfaceName;
    private final java.util.ArrayList mLinkAddresses;
    private int mMtu;
    private android.net.IpPrefix mNat64Prefix;
    private final transient boolean mParcelSensitiveFields;
    private final java.util.ArrayList mPcscfs;
    private java.lang.String mPrivateDnsServerName;
    private java.util.ArrayList mRoutes;
    private java.util.Hashtable mStackedLinks;
    private java.lang.String mTcpBufferSizes;
    private boolean mUsePrivateDns;
    private final java.util.ArrayList mValidatedPrivateDnses;
    private boolean mWakeOnLanSupported;

    static void <clinit>()
    {
        android.net.LinkProperties$1 $r0;

        <android.net.LinkProperties: int MIN_MTU_V6> = 1280;

        <android.net.LinkProperties: int MIN_MTU> = 68;

        <android.net.LinkProperties: int MAX_MTU> = 10000;

        <android.net.LinkProperties: int INET6_ADDR_LENGTH> = 16;

        $r0 = new android.net.LinkProperties$1;

        specialinvoke $r0.<android.net.LinkProperties$1: void <init>()>();

        <android.net.LinkProperties: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r5;
        java.util.Hashtable $r6;

        r0 := @this: android.net.LinkProperties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.net.LinkProperties: java.util.ArrayList mDnses> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.net.LinkProperties: java.util.ArrayList mRoutes> = $r5;

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks> = $r6;

        r0.<android.net.LinkProperties: boolean mParcelSensitiveFields> = 0;

        return;
    }

    public void <init>(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        specialinvoke r0.<android.net.LinkProperties: void <init>(android.net.LinkProperties,boolean)>(r1, 0);

        return;
    }

    public void <init>(android.net.LinkProperties, boolean)
    {
        android.net.LinkProperties r0, r1, $r32;
        boolean z0, $z4, $z7, $z9;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r19, $r20;
        java.util.Hashtable $r7, $r24;
        java.lang.String $r8, $r15, $r18, $r27;
        android.net.ProxyInfo $r21, $r22, $r23, r33;
        java.util.Collection $r25;
        int $i0;
        java.net.Inet4Address $r26;
        android.net.IpPrefix $r28;
        android.net.Uri $r29;
        android.net.CaptivePortalData $r30;
        java.lang.Object $r31;
        java.util.Iterator r34;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.net.LinkProperties: java.util.ArrayList mDnses> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.net.LinkProperties: java.util.ArrayList mRoutes> = $r6;

        $r7 = new java.util.Hashtable;

        specialinvoke $r7.<java.util.Hashtable: void <init>()>();

        r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks> = $r7;

        r0.<android.net.LinkProperties: boolean mParcelSensitiveFields> = z0;

        if r1 != null goto label1;

        return;

     label1:
        $r8 = r1.<android.net.LinkProperties: java.lang.String mIfaceName>;

        r0.<android.net.LinkProperties: java.lang.String mIfaceName> = $r8;

        $r10 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        $r9 = r1.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        virtualinvoke $r10.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r9);

        $r12 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        $r11 = r1.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        virtualinvoke $r12.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r11);

        $r14 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        $r13 = r1.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        virtualinvoke $r14.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r13);

        $z4 = r1.<android.net.LinkProperties: boolean mUsePrivateDns>;

        r0.<android.net.LinkProperties: boolean mUsePrivateDns> = $z4;

        $r15 = r1.<android.net.LinkProperties: java.lang.String mPrivateDnsServerName>;

        r0.<android.net.LinkProperties: java.lang.String mPrivateDnsServerName> = $r15;

        $r17 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        $r16 = r1.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        virtualinvoke $r17.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r16);

        $r18 = r1.<android.net.LinkProperties: java.lang.String mDomains>;

        r0.<android.net.LinkProperties: java.lang.String mDomains> = $r18;

        $r20 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        $r19 = r1.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        virtualinvoke $r20.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r19);

        $r21 = r1.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy>;

        if $r21 != null goto label2;

        r33 = null;

        goto label3;

     label2:
        $r22 = new android.net.ProxyInfo;

        $r23 = r1.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy>;

        specialinvoke $r22.<android.net.ProxyInfo: void <init>(android.net.ProxyInfo)>($r23);

        r33 = $r22;

     label3:
        r0.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy> = r33;

        $r24 = r1.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r25 = virtualinvoke $r24.<java.util.Hashtable: java.util.Collection values()>();

        r34 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z9 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label5;

        $r31 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        $r32 = (android.net.LinkProperties) $r31;

        virtualinvoke r0.<android.net.LinkProperties: boolean addStackedLink(android.net.LinkProperties)>($r32);

        goto label4;

     label5:
        $i0 = r1.<android.net.LinkProperties: int mMtu>;

        virtualinvoke r0.<android.net.LinkProperties: void setMtu(int)>($i0);

        $r26 = virtualinvoke r1.<android.net.LinkProperties: java.net.Inet4Address getDhcpServerAddress()>();

        virtualinvoke r0.<android.net.LinkProperties: void setDhcpServerAddress(java.net.Inet4Address)>($r26);

        $r27 = r1.<android.net.LinkProperties: java.lang.String mTcpBufferSizes>;

        r0.<android.net.LinkProperties: java.lang.String mTcpBufferSizes> = $r27;

        $r28 = r1.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix>;

        r0.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix> = $r28;

        $z7 = r1.<android.net.LinkProperties: boolean mWakeOnLanSupported>;

        r0.<android.net.LinkProperties: boolean mWakeOnLanSupported> = $z7;

        $r29 = r1.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl>;

        r0.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl> = $r29;

        $r30 = r1.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData>;

        r0.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData> = $r30;

        return;
    }

    static java.net.InetAddress access$000(android.os.Parcel) throws java.net.UnknownHostException
    {
        android.os.Parcel r0;
        java.net.InetAddress $r1;

        r0 := @parameter0: android.os.Parcel;

        $r1 = staticinvoke <android.net.LinkProperties: java.net.InetAddress readAddress(android.os.Parcel)>(r0);

        return $r1;
    }

    public static android.net.LinkProperties$ProvisioningChange compareProvisioning(android.net.LinkProperties, android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.net.LinkProperties$ProvisioningChange $r2, $r3, $r4, $r5, $r6;

        r0 := @parameter0: android.net.LinkProperties;

        r1 := @parameter1: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean isProvisioned()>();

        if $z0 == 0 goto label4;

        $z5 = virtualinvoke r1.<android.net.LinkProperties: boolean isProvisioned()>();

        if $z5 == 0 goto label4;

        $z6 = virtualinvoke r0.<android.net.LinkProperties: boolean isIpv4Provisioned()>();

        if $z6 == 0 goto label1;

        $z9 = virtualinvoke r1.<android.net.LinkProperties: boolean isIpv4Provisioned()>();

        if $z9 == 0 goto label2;

     label1:
        $z7 = virtualinvoke r0.<android.net.LinkProperties: boolean isIpv6Provisioned()>();

        if $z7 == 0 goto label3;

        $z8 = virtualinvoke r1.<android.net.LinkProperties: boolean isIpv6Provisioned()>();

        if $z8 != 0 goto label3;

     label2:
        $r6 = <android.net.LinkProperties$ProvisioningChange: android.net.LinkProperties$ProvisioningChange LOST_PROVISIONING>;

        return $r6;

     label3:
        $r5 = <android.net.LinkProperties$ProvisioningChange: android.net.LinkProperties$ProvisioningChange STILL_PROVISIONED>;

        return $r5;

     label4:
        $z1 = virtualinvoke r0.<android.net.LinkProperties: boolean isProvisioned()>();

        if $z1 == 0 goto label5;

        $z4 = virtualinvoke r1.<android.net.LinkProperties: boolean isProvisioned()>();

        if $z4 != 0 goto label5;

        $r4 = <android.net.LinkProperties$ProvisioningChange: android.net.LinkProperties$ProvisioningChange LOST_PROVISIONING>;

        return $r4;

     label5:
        $z2 = virtualinvoke r0.<android.net.LinkProperties: boolean isProvisioned()>();

        if $z2 != 0 goto label6;

        $z3 = virtualinvoke r1.<android.net.LinkProperties: boolean isProvisioned()>();

        if $z3 == 0 goto label6;

        $r3 = <android.net.LinkProperties$ProvisioningChange: android.net.LinkProperties$ProvisioningChange GAINED_PROVISIONING>;

        return $r3;

     label6:
        $r2 = <android.net.LinkProperties$ProvisioningChange: android.net.LinkProperties$ProvisioningChange STILL_NOT_PROVISIONED>;

        return $r2;
    }

    private int findLinkAddressIndex(android.net.LinkAddress)
    {
        android.net.LinkProperties r0;
        android.net.LinkAddress r1, $r5;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkAddress;

        i1 = 0;

     label1:
        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.net.LinkAddress) $r4;

        $z0 = virtualinvoke $r5.<android.net.LinkAddress: boolean isSameAddressAs(android.net.LinkAddress)>(r1);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private int findRouteIndexByRouteKey(android.net.RouteInfo)
    {
        android.net.LinkProperties r0;
        android.net.RouteInfo r1, $r5;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.net.RouteInfo$RouteKey $r6, $r7;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.RouteInfo;

        i1 = 0;

     label1:
        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.net.RouteInfo) $r4;

        $r6 = virtualinvoke $r5.<android.net.RouteInfo: android.net.RouteInfo$RouteKey getRouteKey()>();

        $r7 = virtualinvoke r1.<android.net.RouteInfo: android.net.RouteInfo$RouteKey getRouteKey()>();

        $z0 = virtualinvoke $r6.<android.net.RouteInfo$RouteKey: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private boolean hasIpv4AddressOnInterface(java.lang.String)
    {
        android.net.LinkProperties r0, $r6;
        java.lang.String r1, $r2;
        boolean $z0, $z1, $z2, $z3, z4;
        java.util.Hashtable $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv4Address()>();

        if $z3 != 0 goto label2;

     label1:
        if r1 == null goto label3;

        $r3 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $z1 = virtualinvoke $r3.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r4 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (android.net.LinkProperties) $r5;

        $z2 = virtualinvoke $r6.<android.net.LinkProperties: boolean hasIpv4Address()>();

        if $z2 == 0 goto label3;

     label2:
        z4 = 1;

        goto label4;

     label3:
        z4 = 0;

     label4:
        return z4;
    }

    public static boolean isValidMtu(int, boolean)
    {
        int i0;
        boolean z2, z3, z4;

        i0 := @parameter0: int;

        z2 := @parameter1: boolean;

        if z2 == 0 goto label3;

        if i0 < 1280 goto label1;

        if i0 > 10000 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;

     label3:
        if i0 < 68 goto label4;

        if i0 > 10000 goto label4;

        z4 = 1;

        goto label5;

     label4:
        z4 = 0;

     label5:
        return z4;
    }

    private static java.net.InetAddress readAddress(android.os.Parcel) throws java.net.UnknownHostException
    {
        android.os.Parcel r0;
        byte[] r1;
        int $i0, i1;
        java.net.InetAddress $r2;
        boolean $z0;
        java.net.Inet6Address $r3;

        r0 := @parameter0: android.os.Parcel;

        r1 = virtualinvoke r0.<android.os.Parcel: byte[] createByteArray()>();

        if r1 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r1;

        if $i0 != 16 goto label4;

        $z0 = virtualinvoke r0.<android.os.Parcel: boolean readBoolean()>();

        if $z0 == 0 goto label2;

        i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        goto label3;

     label2:
        i1 = 0;

     label3:
        $r3 = staticinvoke <java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],int)>(null, r1, i1);

        return $r3;

     label4:
        $r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>(r1);

        return $r2;
    }

    private android.net.RouteInfo routeWithInterface(android.net.RouteInfo)
    {
        android.net.LinkProperties r0;
        android.net.RouteInfo r1, $r2;
        android.net.IpPrefix $r3;
        java.net.InetAddress $r4;
        java.lang.String $r5;
        int $i0, $i1;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.RouteInfo;

        $r2 = new android.net.RouteInfo;

        $r3 = virtualinvoke r1.<android.net.RouteInfo: android.net.IpPrefix getDestination()>();

        $r4 = virtualinvoke r1.<android.net.RouteInfo: java.net.InetAddress getGateway()>();

        $r5 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        $i0 = virtualinvoke r1.<android.net.RouteInfo: int getType()>();

        $i1 = virtualinvoke r1.<android.net.RouteInfo: int getMtu()>();

        specialinvoke $r2.<android.net.RouteInfo: void <init>(android.net.IpPrefix,java.net.InetAddress,java.lang.String,int,int)>($r3, $r4, $r5, $i0, $i1);

        return $r2;
    }

    private static void writeAddress(android.os.Parcel, java.net.InetAddress)
    {
        android.os.Parcel r0;
        boolean $z0, z1;
        int $i0, $i1;
        java.net.InetAddress r1;
        byte[] r2;
        java.net.Inet6Address r3;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: java.net.InetAddress;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = virtualinvoke r1.<java.net.InetAddress: byte[] getAddress()>();

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeByteArray(byte[])>(r2);

        $z0 = r1 instanceof java.net.Inet6Address;

        if $z0 == 0 goto label5;

        r3 = (java.net.Inet6Address) r1;

        $i0 = virtualinvoke r3.<java.net.Inet6Address: int getScopeId()>();

        if $i0 == 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        virtualinvoke r0.<android.os.Parcel: void writeBoolean(boolean)>(z1);

        if z1 == 0 goto label5;

        $i1 = virtualinvoke r3.<java.net.Inet6Address: int getScopeId()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i1);

     label5:
        return;
    }

    private static void writeAddresses(android.os.Parcel, java.util.List)
    {
        android.os.Parcel r0;
        int $i0;
        boolean $z0;
        java.lang.Object $r1;
        java.net.InetAddress $r2;
        java.util.List r3;
        java.util.Iterator r4;

        r0 := @parameter0: android.os.Parcel;

        r3 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i0);

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.net.InetAddress) $r1;

        staticinvoke <android.net.LinkProperties: void writeAddress(android.os.Parcel,java.net.InetAddress)>(r0, $r2);

        goto label1;

     label2:
        return;
    }

    public boolean addDnsServer(java.net.InetAddress)
    {
        android.net.LinkProperties r0;
        java.net.InetAddress r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.net.InetAddress;

        if r1 == null goto label1;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return 1;

     label1:
        return 0;
    }

    public boolean addLinkAddress(android.net.LinkAddress)
    {
        android.net.LinkProperties r0;
        android.net.LinkAddress r1, $r4;
        int i0;
        java.util.ArrayList $r2, $r5, $r7;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkAddress;

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = specialinvoke r0.<android.net.LinkProperties: int findLinkAddressIndex(android.net.LinkAddress)>(r1);

        if i0 >= 0 goto label2;

        $r7 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return 1;

     label2:
        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (android.net.LinkAddress) $r3;

        $z0 = virtualinvoke $r4.<android.net.LinkAddress: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return 0;

     label3:
        $r5 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return 1;
    }

    public boolean addPcscfServer(java.net.InetAddress)
    {
        android.net.LinkProperties r0;
        java.net.InetAddress r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.net.InetAddress;

        if r1 == null goto label1;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return 1;

     label1:
        return 0;
    }

    public boolean addRoute(android.net.RouteInfo)
    {
        android.net.LinkProperties r0;
        java.lang.String r1, $r8, $r13, $r16;
        int i0;
        java.util.ArrayList $r2, $r5, $r7;
        java.lang.Object $r3;
        android.net.RouteInfo $r4, r17, r19;
        boolean $z0, $z2;
        java.lang.StringBuilder $r9;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: android.net.LinkProperties;

        r17 := @parameter0: android.net.RouteInfo;

        r1 = virtualinvoke r17.<android.net.RouteInfo: java.lang.String getInterface()>();

        if r1 == null goto label2;

        $r8 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Route added with non-matching interface: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs. ");

        $r13 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label2:
        r19 = specialinvoke r0.<android.net.LinkProperties: android.net.RouteInfo routeWithInterface(android.net.RouteInfo)>(r17);

        i0 = specialinvoke r0.<android.net.LinkProperties: int findRouteIndexByRouteKey(android.net.RouteInfo)>(r19);

        if i0 != -1 goto label3;

        $r7 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r19);

        return 1;

     label3:
        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (android.net.RouteInfo) $r3;

        $z0 = virtualinvoke $r4.<android.net.RouteInfo: boolean equals(java.lang.Object)>(r19);

        if $z0 == 0 goto label4;

        return 0;

     label4:
        $r5 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r19);

        return 1;
    }

    public boolean addStackedLink(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        java.lang.String $r2, $r4;
        java.util.Hashtable $r3;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $r2 = virtualinvoke r1.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        if $r2 == null goto label1;

        $r3 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r4 = virtualinvoke r1.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1);

        return 1;

     label1:
        return 0;
    }

    public boolean addValidatedPrivateDnsServer(java.net.InetAddress)
    {
        android.net.LinkProperties r0;
        java.net.InetAddress r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.net.InetAddress;

        if r1 == null goto label1;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return 1;

     label1:
        return 0;
    }

    public void clear()
    {
        android.net.LinkProperties r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        java.util.Hashtable $r6;

        r0 := @this: android.net.LinkProperties;

        $z0 = r0.<android.net.LinkProperties: boolean mParcelSensitiveFields>;

        if $z0 != 0 goto label1;

        r0.<android.net.LinkProperties: java.lang.String mIfaceName> = null;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        r0.<android.net.LinkProperties: boolean mUsePrivateDns> = 0;

        r0.<android.net.LinkProperties: java.lang.String mPrivateDnsServerName> = null;

        $r4 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        r0.<android.net.LinkProperties: java.lang.String mDomains> = null;

        $r5 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        r0.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy> = null;

        $r6 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        virtualinvoke $r6.<java.util.Hashtable: void clear()>();

        r0.<android.net.LinkProperties: int mMtu> = 0;

        r0.<android.net.LinkProperties: java.net.Inet4Address mDhcpServerAddress> = null;

        r0.<android.net.LinkProperties: java.lang.String mTcpBufferSizes> = null;

        r0.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix> = null;

        r0.<android.net.LinkProperties: boolean mWakeOnLanSupported> = 0;

        r0.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl> = null;

        r0.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData> = null;

        return;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot clear LinkProperties when parcelSensitiveFields is set");

        throw $r1;
    }

    public android.net.util.LinkPropertiesUtils$CompareResult compareAllInterfaceNames(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r3;
        java.util.List r1, r4;
        android.net.util.LinkPropertiesUtils$CompareResult $r2;

        r0 := @this: android.net.LinkProperties;

        r3 := @parameter0: android.net.LinkProperties;

        r1 = virtualinvoke r0.<android.net.LinkProperties: java.util.List getAllInterfaceNames()>();

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<android.net.LinkProperties: java.util.List getAllInterfaceNames()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        $r2 = new android.net.util.LinkPropertiesUtils$CompareResult;

        specialinvoke $r2.<android.net.util.LinkPropertiesUtils$CompareResult: void <init>(java.util.Collection,java.util.Collection)>(r1, r4);

        return $r2;
    }

    public android.net.util.LinkPropertiesUtils$CompareResult compareAllRoutes(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r3;
        java.util.List r1, r4;
        android.net.util.LinkPropertiesUtils$CompareResult $r2;

        r0 := @this: android.net.LinkProperties;

        r3 := @parameter0: android.net.LinkProperties;

        r1 = virtualinvoke r0.<android.net.LinkProperties: java.util.List getAllRoutes()>();

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<android.net.LinkProperties: java.util.List getAllRoutes()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        $r2 = new android.net.util.LinkPropertiesUtils$CompareResult;

        specialinvoke $r2.<android.net.util.LinkPropertiesUtils$CompareResult: void <init>(java.util.Collection,java.util.Collection)>(r1, r4);

        return $r2;
    }

    public android.net.util.LinkPropertiesUtils$CompareResult compareDnses(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r3;
        java.util.ArrayList r1;
        android.net.util.LinkPropertiesUtils$CompareResult $r2;
        java.util.List r4;

        r0 := @this: android.net.LinkProperties;

        r3 := @parameter0: android.net.LinkProperties;

        r1 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<android.net.LinkProperties: java.util.List getDnsServers()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        $r2 = new android.net.util.LinkPropertiesUtils$CompareResult;

        specialinvoke $r2.<android.net.util.LinkPropertiesUtils$CompareResult: void <init>(java.util.Collection,java.util.Collection)>(r1, r4);

        return $r2;
    }

    public android.net.util.LinkPropertiesUtils$CompareResult compareValidatedPrivateDnses(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r3;
        java.util.ArrayList r1;
        android.net.util.LinkPropertiesUtils$CompareResult $r2;
        java.util.List r4;

        r0 := @this: android.net.LinkProperties;

        r3 := @parameter0: android.net.LinkProperties;

        r1 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<android.net.LinkProperties: java.util.List getValidatedPrivateDnsServers()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        $r2 = new android.net.util.LinkPropertiesUtils$CompareResult;

        specialinvoke $r2.<android.net.util.LinkPropertiesUtils$CompareResult: void <init>(java.util.Collection,java.util.Collection)>(r1, r4);

        return $r2;
    }

    public int describeContents()
    {
        android.net.LinkProperties r0;

        r0 := @this: android.net.LinkProperties;

        return 0;
    }

    public void ensureDirectlyConnectedRoutes()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        android.net.RouteInfo $r3;
        java.lang.Object $r4;
        java.lang.String $r5;
        android.net.LinkAddress $r6;

        r0 := @this: android.net.LinkProperties;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = new android.net.RouteInfo;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.net.LinkAddress) $r4;

        $r5 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        specialinvoke $r3.<android.net.RouteInfo: void <init>(android.net.LinkAddress,java.net.InetAddress,java.lang.String)>($r6, null, $r5);

        virtualinvoke r0.<android.net.LinkProperties: boolean addRoute(android.net.RouteInfo)>($r3);

        goto label1;

     label2:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.LinkProperties r0, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17;
        java.lang.Object r1;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.lang.Object;

        z17 = 1;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof android.net.LinkProperties;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (android.net.LinkProperties) r1;

        $z1 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalInterfaceName(android.net.LinkProperties)>(r2);

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalAddresses(android.net.LinkProperties)>(r2);

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalDhcpServerAddress(android.net.LinkProperties)>(r2);

        if $z3 == 0 goto label3;

        $z4 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalDnses(android.net.LinkProperties)>(r2);

        if $z4 == 0 goto label3;

        $z5 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalPrivateDns(android.net.LinkProperties)>(r2);

        if $z5 == 0 goto label3;

        $z6 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalValidatedPrivateDnses(android.net.LinkProperties)>(r2);

        if $z6 == 0 goto label3;

        $z7 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalPcscfs(android.net.LinkProperties)>(r2);

        if $z7 == 0 goto label3;

        $z8 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalRoutes(android.net.LinkProperties)>(r2);

        if $z8 == 0 goto label3;

        $z9 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalHttpProxy(android.net.LinkProperties)>(r2);

        if $z9 == 0 goto label3;

        $z10 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalStackedLinks(android.net.LinkProperties)>(r2);

        if $z10 == 0 goto label3;

        $z11 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalMtu(android.net.LinkProperties)>(r2);

        if $z11 == 0 goto label3;

        $z12 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalTcpBufferSizes(android.net.LinkProperties)>(r2);

        if $z12 == 0 goto label3;

        $z13 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalNat64Prefix(android.net.LinkProperties)>(r2);

        if $z13 == 0 goto label3;

        $z14 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalWakeOnLan(android.net.LinkProperties)>(r2);

        if $z14 == 0 goto label3;

        $z15 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalCaptivePortalApiUrl(android.net.LinkProperties)>(r2);

        if $z15 == 0 goto label3;

        $z16 = virtualinvoke r0.<android.net.LinkProperties: boolean isIdenticalCaptivePortalData(android.net.LinkProperties)>(r2);

        if $z16 == 0 goto label3;

        goto label4;

     label3:
        z17 = 0;

     label4:
        return z17;
    }

    public java.util.List getAddresses()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r2;
        java.util.ArrayList $r3, $r4;
        boolean $z0;
        java.util.List $r5;
        java.lang.Object $r6;
        android.net.LinkAddress $r7;
        java.net.InetAddress $r8;

        r0 := @this: android.net.LinkProperties;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.net.LinkAddress) $r6;

        $r8 = virtualinvoke $r7.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        return $r5;
    }

    public java.util.List getAllAddresses()
    {
        android.net.LinkProperties r0, $r7;
        java.util.ArrayList $r2, $r3;
        boolean $z0, $z1;
        java.util.Hashtable $r4;
        java.util.Collection $r5;
        java.lang.Object $r6, $r9;
        java.util.List $r8;
        android.net.LinkAddress $r10;
        java.net.InetAddress $r11;
        java.util.Iterator r12, r13;

        r0 := @this: android.net.LinkProperties;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        r12 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.net.LinkAddress) $r9;

        $r11 = virtualinvoke $r10.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $r4 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.util.Collection values()>();

        r13 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.net.LinkProperties) $r6;

        $r8 = virtualinvoke $r7.<android.net.LinkProperties: java.util.List getAllAddresses()>();

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        goto label3;

     label4:
        return $r2;
    }

    public java.util.List getAllInterfaceNames()
    {
        android.net.LinkProperties r0, $r7;
        java.util.ArrayList $r2;
        java.util.Hashtable $r3, $r4;
        int $i0, $i1;
        java.util.Collection $r5;
        java.lang.Object $r6;
        java.util.List $r8;
        java.lang.String r9;
        java.util.Iterator r10;
        boolean $z2;

        r0 := @this: android.net.LinkProperties;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $i0 = virtualinvoke $r3.<java.util.Hashtable: int size()>();

        $i1 = $i0 + 1;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i1);

        r9 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        if r9 == null goto label1;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r9);

     label1:
        $r4 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.util.Collection values()>();

        r10 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r6 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.net.LinkProperties) $r6;

        $r8 = virtualinvoke $r7.<android.net.LinkProperties: java.util.List getAllInterfaceNames()>();

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        goto label2;

     label3:
        return $r2;
    }

    public java.util.List getAllLinkAddresses()
    {
        android.net.LinkProperties r0, $r8;
        java.util.Iterator r2;
        java.util.ArrayList $r3, $r4;
        java.util.Hashtable $r5;
        java.util.Collection $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.util.List $r9;

        r0 := @this: android.net.LinkProperties;

        $r3 = new java.util.ArrayList;

        $r4 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r5 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.net.LinkProperties) $r7;

        $r9 = virtualinvoke $r8.<android.net.LinkProperties: java.util.List getAllLinkAddresses()>();

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        goto label1;

     label2:
        return $r3;
    }

    public java.util.List getAllRoutes()
    {
        android.net.LinkProperties r0, $r8;
        java.util.Iterator r2;
        java.util.ArrayList $r3, $r4;
        java.util.Hashtable $r5;
        java.util.Collection $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.util.List $r9;

        r0 := @this: android.net.LinkProperties;

        $r3 = new java.util.ArrayList;

        $r4 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r5 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.net.LinkProperties) $r7;

        $r9 = virtualinvoke $r8.<android.net.LinkProperties: java.util.List getAllRoutes()>();

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        goto label1;

     label2:
        return $r3;
    }

    public android.net.Uri getCaptivePortalApiUrl()
    {
        android.net.LinkProperties r0;
        android.net.Uri $r1;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl>;

        return $r1;
    }

    public android.net.CaptivePortalData getCaptivePortalData()
    {
        android.net.LinkProperties r0;
        android.net.CaptivePortalData $r1;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData>;

        return $r1;
    }

    public java.net.Inet4Address getDhcpServerAddress()
    {
        android.net.LinkProperties r0;
        java.net.Inet4Address $r1;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: java.net.Inet4Address mDhcpServerAddress>;

        return $r1;
    }

    public java.util.List getDnsServers()
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.lang.String getDomains()
    {
        android.net.LinkProperties r0;
        java.lang.String $r1;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: java.lang.String mDomains>;

        return $r1;
    }

    public android.net.ProxyInfo getHttpProxy()
    {
        android.net.LinkProperties r0;
        android.net.ProxyInfo $r1;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy>;

        return $r1;
    }

    public java.lang.String getInterfaceName()
    {
        android.net.LinkProperties r0;
        java.lang.String $r1;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        return $r1;
    }

    public java.util.List getLinkAddresses()
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public int getMtu()
    {
        android.net.LinkProperties r0;
        int $i0;

        r0 := @this: android.net.LinkProperties;

        $i0 = r0.<android.net.LinkProperties: int mMtu>;

        return $i0;
    }

    public android.net.IpPrefix getNat64Prefix()
    {
        android.net.LinkProperties r0;
        android.net.IpPrefix $r1;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix>;

        return $r1;
    }

    public java.util.List getPcscfServers()
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.lang.String getPrivateDnsServerName()
    {
        android.net.LinkProperties r0;
        java.lang.String $r1;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: java.lang.String mPrivateDnsServerName>;

        return $r1;
    }

    public java.util.List getRoutes()
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getStackedLinks()
    {
        android.net.LinkProperties r0, $r8, $r10;
        java.util.Iterator r2;
        java.util.Hashtable $r3, $r5;
        boolean $z0, $z1;
        java.util.ArrayList $r4;
        java.util.Collection $r6;
        java.util.List $r7, $r11;
        java.lang.Object $r9;

        r0 := @this: android.net.LinkProperties;

        $r3 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $z0 = virtualinvoke $r3.<java.util.Hashtable: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r11;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = new android.net.LinkProperties;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.net.LinkProperties) $r9;

        specialinvoke $r8.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r10);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        return $r7;
    }

    public java.lang.String getTcpBufferSizes()
    {
        android.net.LinkProperties r0;
        java.lang.String $r1;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: java.lang.String mTcpBufferSizes>;

        return $r1;
    }

    public java.util.List getValidatedPrivateDnsServers()
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: android.net.LinkProperties;

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public boolean hasGlobalIPv6Address()
    {
        android.net.LinkProperties r0;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean hasGlobalIpv6Address()>();

        return $z0;
    }

    public boolean hasGlobalIpv6Address()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        android.net.LinkAddress r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        java.net.InetAddress $r5;

        r0 := @this: android.net.LinkProperties;

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.LinkAddress) $r4;

        $r5 = virtualinvoke r2.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        $z1 = $r5 instanceof java.net.Inet6Address;

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r2.<android.net.LinkAddress: boolean isGlobalPreferred()>();

        if $z2 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasIPv4Address()
    {
        android.net.LinkProperties r0;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv4Address()>();

        return $z0;
    }

    public boolean hasIPv4DefaultRoute()
    {
        android.net.LinkProperties r0;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv4DefaultRoute()>();

        return $z0;
    }

    public boolean hasIPv4DnsServer()
    {
        android.net.LinkProperties r0;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv4DnsServer()>();

        return $z0;
    }

    public boolean hasIPv6DefaultRoute()
    {
        android.net.LinkProperties r0;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv6DefaultRoute()>();

        return $z0;
    }

    public boolean hasIPv6DnsServer()
    {
        android.net.LinkProperties r0;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv6DnsServer()>();

        return $z0;
    }

    public boolean hasIpv4Address()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.net.LinkAddress $r4;
        java.net.InetAddress $r5;

        r0 := @this: android.net.LinkProperties;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.net.LinkAddress) $r3;

        $r5 = virtualinvoke $r4.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        $z1 = $r5 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasIpv4DefaultRoute()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.net.RouteInfo $r4;

        r0 := @this: android.net.LinkProperties;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.net.RouteInfo) $r3;

        $z1 = virtualinvoke $r4.<android.net.RouteInfo: boolean isIPv4Default()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasIpv4DnsServer()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.net.InetAddress $r4;

        r0 := @this: android.net.LinkProperties;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.net.InetAddress) $r3;

        $z1 = $r4 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasIpv4PcscfServer()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.net.InetAddress $r4;

        r0 := @this: android.net.LinkProperties;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.net.InetAddress) $r3;

        $z1 = $r4 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasIpv4UnreachableDefaultRoute()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.net.RouteInfo $r4;

        r0 := @this: android.net.LinkProperties;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.net.RouteInfo) $r3;

        $z1 = virtualinvoke $r4.<android.net.RouteInfo: boolean isIPv4UnreachableDefault()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasIpv6DefaultRoute()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.net.RouteInfo $r4;

        r0 := @this: android.net.LinkProperties;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.net.RouteInfo) $r3;

        $z1 = virtualinvoke $r4.<android.net.RouteInfo: boolean isIPv6Default()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasIpv6DnsServer()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.net.InetAddress $r4;

        r0 := @this: android.net.LinkProperties;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.net.InetAddress) $r3;

        $z1 = $r4 instanceof java.net.Inet6Address;

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasIpv6PcscfServer()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.net.InetAddress $r4;

        r0 := @this: android.net.LinkProperties;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.net.InetAddress) $r3;

        $z1 = $r4 instanceof java.net.Inet6Address;

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean hasIpv6UnreachableDefaultRoute()
    {
        android.net.LinkProperties r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.net.RouteInfo $r4;

        r0 := @this: android.net.LinkProperties;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.net.RouteInfo) $r3;

        $z1 = virtualinvoke $r4.<android.net.RouteInfo: boolean isIPv6UnreachableDefault()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        android.net.LinkProperties r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i37, i38;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r6;
        java.util.Hashtable $r5;
        boolean $z0, $z1;
        java.lang.Object[] $r7, $r9;
        android.net.IpPrefix $r8;
        android.net.Uri $r10;
        android.net.CaptivePortalData $r11;
        java.lang.String r12, r13, r15, r17;
        android.net.ProxyInfo r14;
        byte b36, b39;
        java.net.Inet4Address r16;

        r0 := @this: android.net.LinkProperties;

        r12 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        if r12 != null goto label01;

        i26 = 0;

        goto label06;

     label01:
        i27 = virtualinvoke r12.<java.lang.String: int hashCode()>();

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        i28 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        i29 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        i30 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        r13 = r0.<android.net.LinkProperties: java.lang.String mDomains>;

        if r13 != null goto label02;

        i31 = 0;

        goto label03;

     label02:
        i31 = virtualinvoke r13.<java.lang.String: int hashCode()>();

     label03:
        $r4 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        i32 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r14 = r0.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy>;

        if r14 != null goto label04;

        i33 = 0;

        goto label05;

     label04:
        i33 = virtualinvoke r14.<android.net.ProxyInfo: int hashCode()>();

     label05:
        $i2 = i28 * 31;

        $i4 = i27 + $i2;

        $i3 = i29 * 37;

        $i6 = $i4 + $i3;

        $i5 = i30 * 61;

        $i7 = $i6 + $i5;

        $i9 = $i7 + i31;

        $i8 = i32 * 41;

        $i10 = $i9 + $i8;

        $i11 = $i10 + i33;

        $r5 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $i12 = virtualinvoke $r5.<java.util.Hashtable: int hashCode()>();

        $i13 = $i12 * 47;

        i26 = $i11 + $i13;

     label06:
        i34 = r0.<android.net.LinkProperties: int mMtu>;

        r15 = r0.<android.net.LinkProperties: java.lang.String mTcpBufferSizes>;

        if r15 != null goto label07;

        i35 = 0;

        goto label08;

     label07:
        i35 = virtualinvoke r15.<java.lang.String: int hashCode()>();

     label08:
        $z0 = r0.<android.net.LinkProperties: boolean mUsePrivateDns>;

        if $z0 == 0 goto label09;

        b36 = 57;

        goto label10;

     label09:
        b36 = 0;

     label10:
        r16 = r0.<android.net.LinkProperties: java.net.Inet4Address mDhcpServerAddress>;

        if r16 != null goto label11;

        i37 = 0;

        goto label12;

     label11:
        i37 = virtualinvoke r16.<java.net.Inet4Address: int hashCode()>();

     label12:
        $r6 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        r17 = r0.<android.net.LinkProperties: java.lang.String mPrivateDnsServerName>;

        if r17 != null goto label13;

        i38 = 0;

        goto label14;

     label13:
        i38 = virtualinvoke r17.<java.lang.String: int hashCode()>();

     label14:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = r0.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix>;

        $r7[0] = $r8;

        i1 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r7);

        $z1 = r0.<android.net.LinkProperties: boolean mWakeOnLanSupported>;

        if $z1 == 0 goto label15;

        b39 = 71;

        goto label16;

     label15:
        b39 = 0;

     label16:
        $i14 = i34 * 51;

        $i15 = i26 + $i14;

        $i16 = $i15 + i35;

        $i17 = $i16 + b36;

        $i19 = $i17 + i37;

        $i18 = i0 * 67;

        $i20 = $i19 + $i18;

        $i21 = $i20 + i38;

        $i22 = $i21 + i1;

        $i23 = $i22 + b39;

        $r9 = newarray (java.lang.Object)[2];

        $r10 = r0.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl>;

        $r9[0] = $r10;

        $r11 = r0.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData>;

        $r9[1] = $r11;

        $i24 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r9);

        $i25 = $i23 + $i24;

        return $i25;
    }

    public boolean isIPv6Provisioned()
    {
        android.net.LinkProperties r0;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean isIpv6Provisioned()>();

        return $z0;
    }

    public boolean isIdenticalAddresses(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $z0 = staticinvoke <android.net.util.LinkPropertiesUtils: boolean isIdenticalAddresses(android.net.LinkProperties,android.net.LinkProperties)>(r1, r0);

        return $z0;
    }

    public boolean isIdenticalCaptivePortalApiUrl(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        android.net.Uri $r2, $r3;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $r3 = r0.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl>;

        $r2 = r1.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $z0;
    }

    public boolean isIdenticalCaptivePortalData(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        android.net.CaptivePortalData $r2, $r3;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $r3 = r0.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData>;

        $r2 = r1.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $z0;
    }

    public boolean isIdenticalDhcpServerAddress(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        java.net.Inet4Address $r2, $r3;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $r3 = r0.<android.net.LinkProperties: java.net.Inet4Address mDhcpServerAddress>;

        $r2 = r1.<android.net.LinkProperties: java.net.Inet4Address mDhcpServerAddress>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $z0;
    }

    public boolean isIdenticalDnses(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $z0 = staticinvoke <android.net.util.LinkPropertiesUtils: boolean isIdenticalDnses(android.net.LinkProperties,android.net.LinkProperties)>(r1, r0);

        return $z0;
    }

    public boolean isIdenticalHttpProxy(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $z0 = staticinvoke <android.net.util.LinkPropertiesUtils: boolean isIdenticalHttpProxy(android.net.LinkProperties,android.net.LinkProperties)>(r1, r0);

        return $z0;
    }

    public boolean isIdenticalInterfaceName(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $z0 = staticinvoke <android.net.util.LinkPropertiesUtils: boolean isIdenticalInterfaceName(android.net.LinkProperties,android.net.LinkProperties)>(r1, r0);

        return $z0;
    }

    public boolean isIdenticalMtu(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $i0 = virtualinvoke r0.<android.net.LinkProperties: int getMtu()>();

        $i1 = virtualinvoke r1.<android.net.LinkProperties: int getMtu()>();

        if $i0 != $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isIdenticalNat64Prefix(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        android.net.IpPrefix $r2, $r3;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $r3 = r0.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix>;

        $r2 = r1.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $z0;
    }

    public boolean isIdenticalPcscfs(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r3;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1;
        java.util.List r4;
        boolean z0;

        r0 := @this: android.net.LinkProperties;

        r3 := @parameter0: android.net.LinkProperties;

        r4 = virtualinvoke r3.<android.net.LinkProperties: java.util.List getPcscfServers()>();

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = interfaceinvoke r4.<java.util.Collection: int size()>();

        if $i0 != $i1 goto label1;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        z0 = virtualinvoke $r2.<java.util.ArrayList: boolean containsAll(java.util.Collection)>(r4);

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isIdenticalPrivateDns(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        boolean $z0, $z1, $z2, z3;
        java.lang.String $r2, $r3;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean isPrivateDnsActive()>();

        $z1 = virtualinvoke r1.<android.net.LinkProperties: boolean isPrivateDnsActive()>();

        if $z0 != $z1 goto label1;

        $r2 = virtualinvoke r0.<android.net.LinkProperties: java.lang.String getPrivateDnsServerName()>();

        $r3 = virtualinvoke r1.<android.net.LinkProperties: java.lang.String getPrivateDnsServerName()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r2, $r3);

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public boolean isIdenticalRoutes(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $z0 = staticinvoke <android.net.util.LinkPropertiesUtils: boolean isIdenticalRoutes(android.net.LinkProperties,android.net.LinkProperties)>(r1, r0);

        return $z0;
    }

    public boolean isIdenticalStackedLinks(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1, r3;
        java.util.Iterator r2;
        java.lang.String r4;
        java.util.Hashtable $r5, $r7, $r9, $r12;
        java.util.Set $r6, $r8;
        boolean $z0, $z1, $z2;
        java.util.Collection $r10;
        java.lang.Object $r11, $r13;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $r5 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.util.Set keySet()>();

        $r7 = r1.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r8 = virtualinvoke $r7.<java.util.Hashtable: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r9 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r10 = virtualinvoke $r9.<java.util.Hashtable: java.util.Collection values()>();

        r2 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.LinkProperties) $r11;

        r4 = virtualinvoke r3.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        $r12 = r1.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r13 = virtualinvoke $r12.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);

        $z2 = virtualinvoke r3.<android.net.LinkProperties: boolean equals(java.lang.Object)>($r13);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        goto label2;

     label4:
        return 1;
    }

    public boolean isIdenticalTcpBufferSizes(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $r3 = r0.<android.net.LinkProperties: java.lang.String mTcpBufferSizes>;

        $r2 = r1.<android.net.LinkProperties: java.lang.String mTcpBufferSizes>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $z0;
    }

    public boolean isIdenticalValidatedPrivateDnses(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r3;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1;
        java.util.List r4;
        boolean z0;

        r0 := @this: android.net.LinkProperties;

        r3 := @parameter0: android.net.LinkProperties;

        r4 = virtualinvoke r3.<android.net.LinkProperties: java.util.List getValidatedPrivateDnsServers()>();

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = interfaceinvoke r4.<java.util.Collection: int size()>();

        if $i0 != $i1 goto label1;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        z0 = virtualinvoke $r2.<java.util.ArrayList: boolean containsAll(java.util.Collection)>(r4);

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isIdenticalWakeOnLan(android.net.LinkProperties)
    {
        android.net.LinkProperties r0, r1;
        boolean $z0, $z1, z2;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean isWakeOnLanSupported()>();

        $z1 = virtualinvoke r1.<android.net.LinkProperties: boolean isWakeOnLanSupported()>();

        if $z0 != $z1 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean isIpv4Provisioned()
    {
        android.net.LinkProperties r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv4Address()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv4DefaultRoute()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv4DnsServer()>();

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public boolean isIpv6Provisioned()
    {
        android.net.LinkProperties r0;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean hasGlobalIpv6Address()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv6DefaultRoute()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.net.LinkProperties: boolean hasIpv6DnsServer()>();

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    public boolean isPrivateDnsActive()
    {
        android.net.LinkProperties r0;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        $z0 = r0.<android.net.LinkProperties: boolean mUsePrivateDns>;

        return $z0;
    }

    public boolean isProvisioned()
    {
        android.net.LinkProperties r0;
        boolean $z0, $z1, z2;

        r0 := @this: android.net.LinkProperties;

        $z0 = virtualinvoke r0.<android.net.LinkProperties: boolean isIpv4Provisioned()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<android.net.LinkProperties: boolean isIpv6Provisioned()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public boolean isReachable(java.net.InetAddress)
    {
        android.net.LinkProperties r0;
        java.net.InetAddress r1;
        android.net.RouteInfo r2;
        java.util.List $r3;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, z7, z8;
        java.net.Inet6Address $r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.net.InetAddress;

        $r3 = virtualinvoke r0.<android.net.LinkProperties: java.util.List getAllRoutes()>();

        r2 = staticinvoke <android.net.RouteInfo: android.net.RouteInfo selectBestRoute(java.util.Collection,java.net.InetAddress)>($r3, r1);

        z7 = 0;

        if r2 != null goto label1;

        return 0;

     label1:
        $z1 = r1 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r2.<android.net.RouteInfo: java.lang.String getInterface()>();

        $z6 = specialinvoke r0.<android.net.LinkProperties: boolean hasIpv4AddressOnInterface(java.lang.String)>($r5);

        return $z6;

     label2:
        $z2 = r1 instanceof java.net.Inet6Address;

        if $z2 == 0 goto label7;

        $z3 = virtualinvoke r1.<java.net.InetAddress: boolean isLinkLocalAddress()>();

        if $z3 == 0 goto label4;

        $r4 = (java.net.Inet6Address) r1;

        $i0 = virtualinvoke $r4.<java.net.Inet6Address: int getScopeId()>();

        if $i0 == 0 goto label3;

        z7 = 1;

     label3:
        return z7;

     label4:
        $z4 = virtualinvoke r2.<android.net.RouteInfo: boolean hasGateway()>();

        if $z4 == 0 goto label5;

        z8 = 0;

        $z5 = virtualinvoke r0.<android.net.LinkProperties: boolean hasGlobalIpv6Address()>();

        if $z5 == 0 goto label6;

     label5:
        z8 = 1;

     label6:
        return z8;

     label7:
        return 0;
    }

    public boolean isWakeOnLanSupported()
    {
        android.net.LinkProperties r0;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        $z0 = r0.<android.net.LinkProperties: boolean mWakeOnLanSupported>;

        return $z0;
    }

    public boolean removeDnsServer(java.net.InetAddress)
    {
        android.net.LinkProperties r0;
        java.net.InetAddress r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.net.InetAddress;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean removeLinkAddress(android.net.LinkAddress)
    {
        android.net.LinkProperties r0;
        android.net.LinkAddress r1;
        int i0;
        java.util.ArrayList $r2;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.LinkAddress;

        i0 = specialinvoke r0.<android.net.LinkProperties: int findLinkAddressIndex(android.net.LinkAddress)>(r1);

        if i0 < 0 goto label1;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        return 1;

     label1:
        return 0;
    }

    public boolean removePcscfServer(java.net.InetAddress)
    {
        android.net.LinkProperties r0;
        java.net.InetAddress r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.net.InetAddress;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean removeRoute(android.net.RouteInfo)
    {
        android.net.LinkProperties r0;
        android.net.RouteInfo r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, z2;
        java.util.ArrayList $r4;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.RouteInfo;

        $r2 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        $r3 = virtualinvoke r1.<android.net.RouteInfo: java.lang.String getInterface()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean removeStackedLink(java.lang.String)
    {
        android.net.LinkProperties r0, $r4;
        java.lang.String r1;
        java.util.Hashtable $r2;
        java.lang.Object $r3;
        boolean z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (android.net.LinkProperties) $r3;

        if $r4 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean removeValidatedPrivateDnsServer(java.net.InetAddress)
    {
        android.net.LinkProperties r0;
        java.net.InetAddress r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.net.InetAddress;

        $r2 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public void setCaptivePortalApiUrl(android.net.Uri)
    {
        android.net.LinkProperties r0;
        android.net.Uri r1;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.Uri;

        r0.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl> = r1;

        return;
    }

    public void setCaptivePortalData(android.net.CaptivePortalData)
    {
        android.net.LinkProperties r0;
        android.net.CaptivePortalData r1;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.CaptivePortalData;

        r0.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData> = r1;

        return;
    }

    public void setDhcpServerAddress(java.net.Inet4Address)
    {
        android.net.LinkProperties r0;
        java.net.Inet4Address r1;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.net.Inet4Address;

        r0.<android.net.LinkProperties: java.net.Inet4Address mDhcpServerAddress> = r1;

        return;
    }

    public void setDnsServers(java.util.Collection)
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.net.InetAddress $r3;
        java.util.Collection r4;
        java.util.Iterator r5;

        r0 := @this: android.net.LinkProperties;

        r4 := @parameter0: java.util.Collection;

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.net.InetAddress) $r2;

        virtualinvoke r0.<android.net.LinkProperties: boolean addDnsServer(java.net.InetAddress)>($r3);

        goto label1;

     label2:
        return;
    }

    public void setDomains(java.lang.String)
    {
        android.net.LinkProperties r0;
        java.lang.String r1;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.LinkProperties: java.lang.String mDomains> = r1;

        return;
    }

    public void setHttpProxy(android.net.ProxyInfo)
    {
        android.net.LinkProperties r0;
        android.net.ProxyInfo r1;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.ProxyInfo;

        r0.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy> = r1;

        return;
    }

    public void setInterfaceName(java.lang.String)
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0;
        boolean $z0;
        java.lang.Object $r5;
        android.net.RouteInfo $r6, $r7;
        java.lang.String r8;
        java.util.Iterator r9;

        r0 := @this: android.net.LinkProperties;

        r8 := @parameter0: java.lang.String;

        r0.<android.net.LinkProperties: java.lang.String mIfaceName> = r8;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        r9 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.net.RouteInfo) $r5;

        $r7 = specialinvoke r0.<android.net.LinkProperties: android.net.RouteInfo routeWithInterface(android.net.RouteInfo)>($r6);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        r0.<android.net.LinkProperties: java.util.ArrayList mRoutes> = $r2;

        return;
    }

    public void setLinkAddresses(java.util.Collection)
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.net.LinkAddress $r3;
        java.util.Collection r4;
        java.util.Iterator r5;

        r0 := @this: android.net.LinkProperties;

        r4 := @parameter0: java.util.Collection;

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (android.net.LinkAddress) $r2;

        virtualinvoke r0.<android.net.LinkProperties: boolean addLinkAddress(android.net.LinkAddress)>($r3);

        goto label1;

     label2:
        return;
    }

    public void setMtu(int)
    {
        android.net.LinkProperties r0;
        int i0;

        r0 := @this: android.net.LinkProperties;

        i0 := @parameter0: int;

        r0.<android.net.LinkProperties: int mMtu> = i0;

        return;
    }

    public void setNat64Prefix(android.net.IpPrefix)
    {
        android.net.LinkProperties r0;
        android.net.IpPrefix r1;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.net.IpPrefix;

        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<android.net.IpPrefix: int getPrefixLength()>();

        if $i0 != 96 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only 96-bit prefixes are supported: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        r0.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix> = r1;

        return;
    }

    public void setPcscfServers(java.util.Collection)
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.net.InetAddress $r3;
        java.util.Collection r4;
        java.util.Iterator r5;

        r0 := @this: android.net.LinkProperties;

        r4 := @parameter0: java.util.Collection;

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.net.InetAddress) $r2;

        virtualinvoke r0.<android.net.LinkProperties: boolean addPcscfServer(java.net.InetAddress)>($r3);

        goto label1;

     label2:
        return;
    }

    public void setPrivateDnsServerName(java.lang.String)
    {
        android.net.LinkProperties r0;
        java.lang.String r1;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.LinkProperties: java.lang.String mPrivateDnsServerName> = r1;

        return;
    }

    public void setTcpBufferSizes(java.lang.String)
    {
        android.net.LinkProperties r0;
        java.lang.String r1;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.LinkProperties: java.lang.String mTcpBufferSizes> = r1;

        return;
    }

    public void setUsePrivateDns(boolean)
    {
        android.net.LinkProperties r0;
        boolean z0;

        r0 := @this: android.net.LinkProperties;

        z0 := @parameter0: boolean;

        r0.<android.net.LinkProperties: boolean mUsePrivateDns> = z0;

        return;
    }

    public void setValidatedPrivateDnsServers(java.util.Collection)
    {
        android.net.LinkProperties r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.net.InetAddress $r3;
        java.util.Collection r4;
        java.util.Iterator r5;

        r0 := @this: android.net.LinkProperties;

        r4 := @parameter0: java.util.Collection;

        $r1 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.net.InetAddress) $r2;

        virtualinvoke r0.<android.net.LinkProperties: boolean addValidatedPrivateDnsServer(java.net.InetAddress)>($r3);

        goto label1;

     label2:
        return;
    }

    public void setWakeOnLanSupported(boolean)
    {
        android.net.LinkProperties r0;
        boolean z0;

        r0 := @this: android.net.LinkProperties;

        z0 := @parameter0: boolean;

        r0.<android.net.LinkProperties: boolean mWakeOnLanSupported> = z0;

        return;
    }

    public java.lang.String toString()
    {
        android.net.LinkProperties r0, r105;
        java.util.Iterator r2, r100;
        java.util.StringJoiner $r4, $r32, $r73;
        java.lang.String $r5, $r12, $r16, $r19, $r24, $r31, $r33, $r40, $r44, $r48, $r51, $r54, $r60, $r66, $r70, $r75, $r79, $r83, $r87, $r91, $r94, $r97;
        java.util.ArrayList $r7, $r10, $r13, $r14, $r26, $r50, $r74, $r82, $r90, $r93;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int $i0;
        java.net.Inet4Address $r21, $r69;
        android.net.Uri $r22, $r64;
        android.net.CaptivePortalData $r23, $r58;
        android.net.ProxyInfo $r28, $r47;
        android.net.IpPrefix $r29, $r43;
        java.util.Hashtable $r30;
        java.lang.Object $r35, $r77;
        java.lang.StringBuilder $r36, $r56, $r62;
        java.net.InetAddress $r78;
        java.util.Collection r103;

        r0 := @this: android.net.LinkProperties;

        $r4 = new java.util.StringJoiner;

        specialinvoke $r4.<java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>(" ", "{", "}");

        $r5 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        if $r5 == null goto label01;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("InterfaceName:");

        $r97 = r0.<android.net.LinkProperties: java.lang.String mIfaceName>;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r97);

     label01:
        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("LinkAddresses: [");

        $r7 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label02;

        $r93 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        $r94 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $r93);

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r94);

     label02:
        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("]");

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("DnsAddresses: [");

        $r10 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        $z1 = virtualinvoke $r10.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label03;

        $r90 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        $r91 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $r90);

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r91);

     label03:
        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("]");

        $z2 = r0.<android.net.LinkProperties: boolean mUsePrivateDns>;

        if $z2 == 0 goto label04;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("UsePrivateDns: true");

     label04:
        $r12 = r0.<android.net.LinkProperties: java.lang.String mPrivateDnsServerName>;

        if $r12 == null goto label05;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("PrivateDnsServerName:");

        $r87 = r0.<android.net.LinkProperties: java.lang.String mPrivateDnsServerName>;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r87);

     label05:
        $r13 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        $z3 = virtualinvoke $r13.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 != 0 goto label06;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("PcscfAddresses: [");

        $r82 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        $r83 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $r82);

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r83);

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("]");

     label06:
        $r14 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        $z4 = virtualinvoke $r14.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 != 0 goto label09;

        $r73 = new java.util.StringJoiner;

        specialinvoke $r73.<java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>(",", "ValidatedPrivateDnsAddresses: [", "]");

        $r74 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        r100 = virtualinvoke $r74.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z9 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label08;

        $r77 = interfaceinvoke r100.<java.util.Iterator: java.lang.Object next()>();

        $r78 = (java.net.InetAddress) $r77;

        $r79 = virtualinvoke $r78.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r73.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r79);

        goto label07;

     label08:
        $r75 = virtualinvoke $r73.<java.util.StringJoiner: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r75);

     label09:
        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("Domains:");

        $r16 = r0.<android.net.LinkProperties: java.lang.String mDomains>;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r16);

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("MTU:");

        $i0 = r0.<android.net.LinkProperties: int mMtu>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r19);

        $z5 = r0.<android.net.LinkProperties: boolean mWakeOnLanSupported>;

        if $z5 == 0 goto label10;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("WakeOnLanSupported: true");

     label10:
        $r21 = r0.<android.net.LinkProperties: java.net.Inet4Address mDhcpServerAddress>;

        if $r21 == null goto label11;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("ServerAddress:");

        $r69 = r0.<android.net.LinkProperties: java.net.Inet4Address mDhcpServerAddress>;

        $r70 = virtualinvoke $r69.<java.net.Inet4Address: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r70);

     label11:
        $r22 = r0.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl>;

        if $r22 == null goto label12;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CaptivePortalApiUrl: ");

        $r64 = r0.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl>;

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r64);

        $r66 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r66);

     label12:
        $r23 = r0.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData>;

        if $r23 == null goto label13;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CaptivePortalData: ");

        $r58 = r0.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData>;

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r60 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r60);

     label13:
        $r24 = r0.<android.net.LinkProperties: java.lang.String mTcpBufferSizes>;

        if $r24 == null goto label14;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("TcpBufferSizes:");

        $r54 = r0.<android.net.LinkProperties: java.lang.String mTcpBufferSizes>;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r54);

     label14:
        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("Routes: [");

        $r26 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        $z6 = virtualinvoke $r26.<java.util.ArrayList: boolean isEmpty()>();

        if $z6 != 0 goto label15;

        $r50 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        $r51 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $r50);

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r51);

     label15:
        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("]");

        $r28 = r0.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy>;

        if $r28 == null goto label16;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("HttpProxy:");

        $r47 = r0.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy>;

        $r48 = virtualinvoke $r47.<android.net.ProxyInfo: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r48);

     label16:
        $r29 = r0.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix>;

        if $r29 == null goto label17;

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("Nat64Prefix:");

        $r43 = r0.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix>;

        $r44 = virtualinvoke $r43.<android.net.IpPrefix: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r44);

     label17:
        $r30 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        r103 = virtualinvoke $r30.<java.util.Hashtable: java.util.Collection values()>();

        $z7 = interfaceinvoke r103.<java.util.Collection: boolean isEmpty()>();

        if $z7 != 0 goto label20;

        $r32 = new java.util.StringJoiner;

        specialinvoke $r32.<java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>(",", "Stacked: [", "]");

        r2 = interfaceinvoke r103.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z8 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label19;

        $r35 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r105 = (android.net.LinkProperties) $r35;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ ");

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r105);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r40);

        goto label18;

     label19:
        $r33 = virtualinvoke $r32.<java.util.StringJoiner: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r33);

     label20:
        $r31 = virtualinvoke $r4.<java.util.StringJoiner: java.lang.String toString()>();

        return $r31;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.LinkProperties r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r2, $r7, $r9, $r11;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r8, $r12, $r13, $r16;
        java.net.Inet4Address $r10;
        android.net.ProxyInfo $r14, $r19;
        android.net.IpPrefix $r15;
        java.util.Hashtable $r17;
        java.util.Collection $r18;
        java.lang.Object $r20, $r22;
        android.net.RouteInfo $r21;
        android.net.LinkAddress $r23;
        java.util.Iterator r24, r25;
        android.net.Uri r26;
        android.net.CaptivePortalData r27;

        r0 := @this: android.net.LinkProperties;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r4 = r0.<android.net.LinkProperties: java.util.ArrayList mLinkAddresses>;

        r24 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r22 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (android.net.LinkAddress) $r22;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r23, i0);

        goto label1;

     label2:
        $r5 = r0.<android.net.LinkProperties: java.util.ArrayList mDnses>;

        staticinvoke <android.net.LinkProperties: void writeAddresses(android.os.Parcel,java.util.List)>(r1, $r5);

        $r6 = r0.<android.net.LinkProperties: java.util.ArrayList mValidatedPrivateDnses>;

        staticinvoke <android.net.LinkProperties: void writeAddresses(android.os.Parcel,java.util.List)>(r1, $r6);

        $z2 = r0.<android.net.LinkProperties: boolean mUsePrivateDns>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $r7 = r0.<android.net.LinkProperties: java.lang.String mPrivateDnsServerName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r8 = r0.<android.net.LinkProperties: java.util.ArrayList mPcscfs>;

        staticinvoke <android.net.LinkProperties: void writeAddresses(android.os.Parcel,java.util.List)>(r1, $r8);

        $r9 = r0.<android.net.LinkProperties: java.lang.String mDomains>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $r10 = r0.<android.net.LinkProperties: java.net.Inet4Address mDhcpServerAddress>;

        staticinvoke <android.net.LinkProperties: void writeAddress(android.os.Parcel,java.net.InetAddress)>(r1, $r10);

        $i2 = r0.<android.net.LinkProperties: int mMtu>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r11 = r0.<android.net.LinkProperties: java.lang.String mTcpBufferSizes>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r11);

        $r12 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        $i3 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r13 = r0.<android.net.LinkProperties: java.util.ArrayList mRoutes>;

        r25 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r20 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (android.net.RouteInfo) $r20;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r21, i0);

        goto label3;

     label4:
        $r14 = r0.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy>;

        if $r14 == null goto label5;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(1);

        $r19 = r0.<android.net.LinkProperties: android.net.ProxyInfo mHttpProxy>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r19, i0);

        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(0);

     label6:
        $r15 = r0.<android.net.LinkProperties: android.net.IpPrefix mNat64Prefix>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r15, 0);

        $r16 = new java.util.ArrayList;

        $r17 = r0.<android.net.LinkProperties: java.util.Hashtable mStackedLinks>;

        $r18 = virtualinvoke $r17.<java.util.Hashtable: java.util.Collection values()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(java.util.Collection)>($r18);

        virtualinvoke r1.<android.os.Parcel: void writeList(java.util.List)>($r16);

        $z4 = r0.<android.net.LinkProperties: boolean mWakeOnLanSupported>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z4);

        z0 = r0.<android.net.LinkProperties: boolean mParcelSensitiveFields>;

        if z0 == 0 goto label7;

        r26 = r0.<android.net.LinkProperties: android.net.Uri mCaptivePortalApiUrl>;

        goto label8;

     label7:
        r26 = null;

     label8:
        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>(r26, 0);

        r27 = null;

        $z5 = r0.<android.net.LinkProperties: boolean mParcelSensitiveFields>;

        if $z5 == 0 goto label9;

        r27 = r0.<android.net.LinkProperties: android.net.CaptivePortalData mCaptivePortalData>;

     label9:
        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>(r27, 0);

        return;
    }
}
