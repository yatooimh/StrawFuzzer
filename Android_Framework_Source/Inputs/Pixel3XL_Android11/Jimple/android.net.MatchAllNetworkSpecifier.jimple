public final class android.net.MatchAllNetworkSpecifier extends android.net.NetworkSpecifier implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;

    static void <clinit>()
    {
        android.net.MatchAllNetworkSpecifier$1 $r0;

        $r0 = new android.net.MatchAllNetworkSpecifier$1;

        specialinvoke $r0.<android.net.MatchAllNetworkSpecifier$1: void <init>()>();

        <android.net.MatchAllNetworkSpecifier: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.net.MatchAllNetworkSpecifier r0;

        r0 := @this: android.net.MatchAllNetworkSpecifier;

        specialinvoke r0.<android.net.NetworkSpecifier: void <init>()>();

        return;
    }

    public static void checkNotMatchAllNetworkSpecifier(android.net.NetworkSpecifier)
    {
        android.net.NetworkSpecifier r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: android.net.NetworkSpecifier;

        $z0 = r0 instanceof android.net.MatchAllNetworkSpecifier;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A MatchAllNetworkSpecifier is not permitted");

        throw $r1;
    }

    public int describeContents()
    {
        android.net.MatchAllNetworkSpecifier r0;

        r0 := @this: android.net.MatchAllNetworkSpecifier;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.MatchAllNetworkSpecifier r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: android.net.MatchAllNetworkSpecifier;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.net.MatchAllNetworkSpecifier;

        return $z0;
    }

    public int hashCode()
    {
        android.net.MatchAllNetworkSpecifier r0;

        r0 := @this: android.net.MatchAllNetworkSpecifier;

        return 0;
    }

    public boolean satisfiedBy(android.net.NetworkSpecifier)
    {
        android.net.MatchAllNetworkSpecifier r0;
        android.net.NetworkSpecifier r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.net.MatchAllNetworkSpecifier;

        r1 := @parameter0: android.net.NetworkSpecifier;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("MatchAllNetworkSpecifier must not be used in NetworkRequests");

        throw $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.MatchAllNetworkSpecifier r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: android.net.MatchAllNetworkSpecifier;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        return;
    }
}
