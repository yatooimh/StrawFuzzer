public final class android.net.NattKeepalivePacketData extends android.net.KeepalivePacketData implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int IPV4_HEADER_LENGTH;
    private static final int UDP_HEADER_LENGTH;

    static void <clinit>()
    {
        android.net.NattKeepalivePacketData$1 $r0;

        <android.net.NattKeepalivePacketData: int UDP_HEADER_LENGTH> = 8;

        <android.net.NattKeepalivePacketData: int IPV4_HEADER_LENGTH> = 20;

        $r0 = new android.net.NattKeepalivePacketData$1;

        specialinvoke $r0.<android.net.NattKeepalivePacketData$1: void <init>()>();

        <android.net.NattKeepalivePacketData: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(java.net.InetAddress, int, java.net.InetAddress, int, byte[]) throws android.net.InvalidPacketException
    {
        android.net.NattKeepalivePacketData r0;
        java.net.InetAddress r1, r2;
        int i0, i1;
        byte[] r3;

        r0 := @this: android.net.NattKeepalivePacketData;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r2 := @parameter2: java.net.InetAddress;

        i1 := @parameter3: int;

        r3 := @parameter4: byte[];

        specialinvoke r0.<android.net.KeepalivePacketData: void <init>(java.net.InetAddress,int,java.net.InetAddress,int,byte[])>(r1, i0, r2, i1, r3);

        return;
    }

    public static android.net.NattKeepalivePacketData nattKeepalivePacket(java.net.InetAddress, int, java.net.InetAddress, int) throws android.net.InvalidPacketException
    {
        java.net.InetAddress r0, r1;
        int i0, i1, i2, i3, $i5, $i9;
        java.nio.ByteBuffer r2;
        boolean $z0, $z1;
        android.net.InvalidPacketException $r3, $r4;
        java.nio.ByteOrder $r5;
        short $s4, $s7, $s8, $s10, $s11, $s12;
        byte $b6;
        byte[] $r13, $r15, $r25;
        android.net.NattKeepalivePacketData $r24;

        r0 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r1 := @parameter2: java.net.InetAddress;

        i1 := @parameter3: int;

        $z0 = r0 instanceof java.net.Inet4Address;

        if $z0 == 0 goto label2;

        $z1 = r1 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label2;

        if i1 != 4500 goto label1;

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(29);

        $r5 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r5);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(17664);

        $s4 = (short) 29;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s4);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(0);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(64);

        $i5 = <android.system.OsConstants: int IPPROTO_UDP>;

        $b6 = (byte) $i5;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        i2 = virtualinvoke r2.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(0);

        $r13 = virtualinvoke r0.<java.net.InetAddress: byte[] getAddress()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r13);

        $r15 = virtualinvoke r1.<java.net.InetAddress: byte[] getAddress()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r15);

        $s7 = (short) i0;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s7);

        $s8 = (short) i1;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s8);

        $i9 = 29 - 20;

        $s10 = (short) $i9;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s10);

        i3 = virtualinvoke r2.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(0);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(-1);

        $s11 = staticinvoke <android.net.util.IpUtils: short ipChecksum(java.nio.ByteBuffer,int)>(r2, 0);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(i2, $s11);

        $s12 = staticinvoke <android.net.util.IpUtils: short udpChecksum(java.nio.ByteBuffer,int,int)>(r2, 0, 20);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(i3, $s12);

        $r24 = new android.net.NattKeepalivePacketData;

        $r25 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r24.<android.net.NattKeepalivePacketData: void <init>(java.net.InetAddress,int,java.net.InetAddress,int,byte[])>(r0, i0, r1, i1, $r25);

        return $r24;

     label1:
        $r4 = new android.net.InvalidPacketException;

        specialinvoke $r4.<android.net.InvalidPacketException: void <init>(int)>(-22);

        throw $r4;

     label2:
        $r3 = new android.net.InvalidPacketException;

        specialinvoke $r3.<android.net.InvalidPacketException: void <init>(int)>(-21);

        throw $r3;
    }

    public int describeContents()
    {
        android.net.NattKeepalivePacketData r0;

        r0 := @this: android.net.NattKeepalivePacketData;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.NattKeepalivePacketData r0, r1;
        boolean z0, $z1, $z2, z3;
        java.net.InetAddress r2, $r3, $r4, r6;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r5;

        r0 := @this: android.net.NattKeepalivePacketData;

        r5 := @parameter0: java.lang.Object;

        z0 = r5 instanceof android.net.NattKeepalivePacketData;

        z3 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (android.net.NattKeepalivePacketData) r5;

        r6 = virtualinvoke r0.<android.net.NattKeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        r2 = virtualinvoke r0.<android.net.NattKeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $r3 = virtualinvoke r1.<android.net.NattKeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        $z1 = virtualinvoke r6.<java.net.InetAddress: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r1.<android.net.NattKeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $z2 = virtualinvoke r2.<java.net.InetAddress: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label2;

        $i0 = virtualinvoke r0.<android.net.NattKeepalivePacketData: int getSrcPort()>();

        $i1 = virtualinvoke r1.<android.net.NattKeepalivePacketData: int getSrcPort()>();

        if $i0 != $i1 goto label2;

        $i2 = virtualinvoke r0.<android.net.NattKeepalivePacketData: int getDstPort()>();

        $i3 = virtualinvoke r1.<android.net.NattKeepalivePacketData: int getDstPort()>();

        if $i2 != $i3 goto label2;

        z3 = 1;

        goto label2;

     label2:
        return z3;
    }

    public int hashCode()
    {
        android.net.NattKeepalivePacketData r0;
        java.lang.Object[] $r1;
        java.net.InetAddress $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Integer $r4, $r5;

        r0 := @this: android.net.NattKeepalivePacketData;

        $r1 = newarray (java.lang.Object)[4];

        $r2 = virtualinvoke r0.<android.net.NattKeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<android.net.NattKeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $r1[1] = $r3;

        $i0 = virtualinvoke r0.<android.net.NattKeepalivePacketData: int getSrcPort()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[2] = $r4;

        $i1 = virtualinvoke r0.<android.net.NattKeepalivePacketData: int getDstPort()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[3] = $r5;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.NattKeepalivePacketData r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        java.net.InetAddress $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: android.net.NattKeepalivePacketData;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.net.NattKeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        $r3 = virtualinvoke $r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<android.net.NattKeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $r5 = virtualinvoke $r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $i1 = virtualinvoke r0.<android.net.NattKeepalivePacketData: int getSrcPort()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = virtualinvoke r0.<android.net.NattKeepalivePacketData: int getDstPort()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        return;
    }
}
