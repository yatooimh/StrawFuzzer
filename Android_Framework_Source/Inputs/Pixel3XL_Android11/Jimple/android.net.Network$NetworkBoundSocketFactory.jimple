class android.net.Network$NetworkBoundSocketFactory extends javax.net.SocketFactory
{
    final android.net.Network this$0;

    private void <init>(android.net.Network)
    {
        android.net.Network$NetworkBoundSocketFactory r0;
        android.net.Network r1;

        r0 := @this: android.net.Network$NetworkBoundSocketFactory;

        r1 := @parameter0: android.net.Network;

        r0.<android.net.Network$NetworkBoundSocketFactory: android.net.Network this$0> = r1;

        specialinvoke r0.<javax.net.SocketFactory: void <init>()>();

        return;
    }

    void <init>(android.net.Network, android.net.Network$1)
    {
        android.net.Network$NetworkBoundSocketFactory r0;
        android.net.Network r1;
        android.net.Network$1 r2;

        r0 := @this: android.net.Network$NetworkBoundSocketFactory;

        r1 := @parameter0: android.net.Network;

        r2 := @parameter1: android.net.Network$1;

        specialinvoke r0.<android.net.Network$NetworkBoundSocketFactory: void <init>(android.net.Network)>(r1);

        return;
    }

    private java.net.Socket connectToHost(java.lang.String, int, java.net.SocketAddress) throws java.io.IOException
    {
        android.net.Network$NetworkBoundSocketFactory r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, i4;
        java.net.SocketAddress r2;
        java.net.InetAddress[] r3;
        android.net.Network $r4;
        java.net.UnknownHostException $r5;
        java.net.InetAddress $r6;
        java.lang.Throwable $r7, $r8;
        java.net.Socket r9;
        java.net.InetSocketAddress r10;

        r0 := @this: android.net.Network$NetworkBoundSocketFactory;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.net.SocketAddress;

        $r4 = r0.<android.net.Network$NetworkBoundSocketFactory: android.net.Network this$0>;

        r3 = virtualinvoke $r4.<android.net.Network: java.net.InetAddress[] getAllByName(java.lang.String)>(r1);

        i4 = 0;

     label01:
        $i1 = lengthof r3;

        if i4 >= $i1 goto label13;

     label02:
        r9 = virtualinvoke r0.<android.net.Network$NetworkBoundSocketFactory: java.net.Socket createSocket()>();

     label03:
        if r2 == null goto label05;

     label04:
        virtualinvoke r9.<java.net.Socket: void bind(java.net.SocketAddress)>(r2);

     label05:
        r10 = new java.net.InetSocketAddress;

        $r6 = r3[i4];

        specialinvoke r10.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r6, i0);

        virtualinvoke r9.<java.net.Socket: void connect(java.net.SocketAddress)>(r10);

     label06:
        goto label07;

     label07:
        return r9;

     label08:
        $r7 := @caughtexception;

     label09:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.net.Socket)>(r9);

     label10:
        throw $r7;

     label11:
        $r8 := @caughtexception;

        $i2 = lengthof r3;

        $i3 = $i2 - 1;

        if i4 == $i3 goto label12;

        i4 = i4 + 1;

        goto label01;

     label12:
        throw $r8;

     label13:
        $r5 = new java.net.UnknownHostException;

        specialinvoke $r5.<java.net.UnknownHostException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch java.io.IOException from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.io.IOException from label07 to label07 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label10 to label11 with label11;
    }

    public java.net.Socket createSocket() throws java.io.IOException
    {
        android.net.Network$NetworkBoundSocketFactory r0;
        java.net.Socket $r3;
        android.net.Network $r4;
        java.lang.Throwable $r5;

        r0 := @this: android.net.Network$NetworkBoundSocketFactory;

        $r3 = new java.net.Socket;

        specialinvoke $r3.<java.net.Socket: void <init>()>();

     label1:
        $r4 = r0.<android.net.Network$NetworkBoundSocketFactory: android.net.Network this$0>;

        virtualinvoke $r4.<android.net.Network: void bindSocket(java.net.Socket)>($r3);

     label2:
        goto label3;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.net.Socket)>($r3);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.net.Socket createSocket(java.lang.String, int) throws java.io.IOException
    {
        android.net.Network$NetworkBoundSocketFactory r0;
        java.lang.String r1;
        int i0;
        java.net.Socket $r2;

        r0 := @this: android.net.Network$NetworkBoundSocketFactory;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<android.net.Network$NetworkBoundSocketFactory: java.net.Socket connectToHost(java.lang.String,int,java.net.SocketAddress)>(r1, i0, null);

        return $r2;
    }

    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException
    {
        android.net.Network$NetworkBoundSocketFactory r0;
        java.lang.String r1;
        int i0, i1;
        java.net.InetAddress r2;
        java.net.InetSocketAddress $r3;
        java.net.Socket $r4;

        r0 := @this: android.net.Network$NetworkBoundSocketFactory;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.net.InetAddress;

        i1 := @parameter3: int;

        $r3 = new java.net.InetSocketAddress;

        specialinvoke $r3.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r2, i1);

        $r4 = specialinvoke r0.<android.net.Network$NetworkBoundSocketFactory: java.net.Socket connectToHost(java.lang.String,int,java.net.SocketAddress)>(r1, i0, $r3);

        return $r4;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int) throws java.io.IOException
    {
        android.net.Network$NetworkBoundSocketFactory r0;
        int i0;
        java.net.Socket r1;
        java.net.InetSocketAddress r2;
        java.lang.Throwable $r3;
        java.net.InetAddress r4;

        r0 := @this: android.net.Network$NetworkBoundSocketFactory;

        r4 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<android.net.Network$NetworkBoundSocketFactory: java.net.Socket createSocket()>();

     label1:
        r2 = new java.net.InetSocketAddress;

        specialinvoke r2.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r4, i0);

        virtualinvoke r1.<java.net.Socket: void connect(java.net.SocketAddress)>(r2);

     label2:
        goto label3;

     label3:
        return r1;

     label4:
        $r3 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.net.Socket)>(r1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int) throws java.io.IOException
    {
        android.net.Network$NetworkBoundSocketFactory r0;
        int i0, i1;
        java.net.Socket r1;
        java.net.InetSocketAddress r2, r6;
        java.lang.Throwable $r3;
        java.net.InetAddress r4, r5;

        r0 := @this: android.net.Network$NetworkBoundSocketFactory;

        r4 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r5 := @parameter2: java.net.InetAddress;

        i1 := @parameter3: int;

        r1 = virtualinvoke r0.<android.net.Network$NetworkBoundSocketFactory: java.net.Socket createSocket()>();

     label1:
        r2 = new java.net.InetSocketAddress;

        specialinvoke r2.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r5, i1);

        virtualinvoke r1.<java.net.Socket: void bind(java.net.SocketAddress)>(r2);

        r6 = new java.net.InetSocketAddress;

        specialinvoke r6.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r4, i0);

        virtualinvoke r1.<java.net.Socket: void connect(java.net.SocketAddress)>(r6);

     label2:
        goto label3;

     label3:
        return r1;

     label4:
        $r3 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.net.Socket)>(r1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
