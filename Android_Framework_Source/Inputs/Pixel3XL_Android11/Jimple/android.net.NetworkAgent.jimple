public abstract class android.net.NetworkAgent extends java.lang.Object
{
    private static final int BASE;
    private static final long BW_REFRESH_MIN_WIN_MS;
    public static final int CMD_ADD_KEEPALIVE_PACKET_FILTER;
    public static final int CMD_PREVENT_AUTOMATIC_RECONNECT;
    public static final int CMD_REMOVE_KEEPALIVE_PACKET_FILTER;
    public static final int CMD_REPORT_NETWORK_STATUS;
    public static final int CMD_REQUEST_BANDWIDTH_UPDATE;
    public static final int CMD_SAVE_ACCEPT_UNVALIDATED;
    public static final int CMD_SET_SIGNAL_STRENGTH_THRESHOLDS;
    public static final int CMD_START_SOCKET_KEEPALIVE;
    public static final int CMD_STOP_SOCKET_KEEPALIVE;
    public static final int CMD_SUSPECT_BAD;
    private static final boolean DBG;
    public static final int EVENT_NETWORK_CAPABILITIES_CHANGED;
    public static final int EVENT_NETWORK_INFO_CHANGED;
    public static final int EVENT_NETWORK_PROPERTIES_CHANGED;
    public static final int EVENT_NETWORK_SCORE_CHANGED;
    public static final int EVENT_SET_EXPLICITLY_SELECTED;
    public static final int EVENT_SOCKET_KEEPALIVE;
    public static final int INVALID_NETWORK;
    public static java.lang.String REDIRECT_URL_KEY;
    public static final int VALIDATION_STATUS_NOT_VALID;
    public static final int VALIDATION_STATUS_VALID;
    public static final int VALID_NETWORK;
    private static final boolean VDBG;
    public static final int WIFI_BASE_SCORE;
    private final java.lang.String LOG_TAG;
    private volatile com.android.internal.util.AsyncChannel mAsyncChannel;
    private java.util.concurrent.atomic.AtomicBoolean mBandwidthUpdatePending;
    private boolean mBandwidthUpdateScheduled;
    private final android.os.Handler mHandler;
    private volatile android.net.NetworkAgent$InitialConfiguration mInitialConfiguration;
    private final boolean mIsLegacy;
    private volatile long mLastBwRefreshTime;
    private volatile android.net.Network mNetwork;
    private android.net.NetworkInfo mNetworkInfo;
    private final java.util.ArrayList mPreConnectedQueue;
    private final java.lang.Object mRegisterLock;
    public final int providerId;

    static void <clinit>()
    {
        <android.net.NetworkAgent: int WIFI_BASE_SCORE> = 60;

        <android.net.NetworkAgent: boolean VDBG> = 0;

        <android.net.NetworkAgent: int VALID_NETWORK> = 1;

        <android.net.NetworkAgent: int VALIDATION_STATUS_VALID> = 1;

        <android.net.NetworkAgent: int VALIDATION_STATUS_NOT_VALID> = 2;

        <android.net.NetworkAgent: int INVALID_NETWORK> = 2;

        <android.net.NetworkAgent: int EVENT_SOCKET_KEEPALIVE> = 528397;

        <android.net.NetworkAgent: int EVENT_SET_EXPLICITLY_SELECTED> = 528392;

        <android.net.NetworkAgent: int EVENT_NETWORK_SCORE_CHANGED> = 528388;

        <android.net.NetworkAgent: int EVENT_NETWORK_PROPERTIES_CHANGED> = 528387;

        <android.net.NetworkAgent: int EVENT_NETWORK_INFO_CHANGED> = 528385;

        <android.net.NetworkAgent: int EVENT_NETWORK_CAPABILITIES_CHANGED> = 528386;

        <android.net.NetworkAgent: boolean DBG> = 1;

        <android.net.NetworkAgent: int CMD_SUSPECT_BAD> = 528384;

        <android.net.NetworkAgent: int CMD_STOP_SOCKET_KEEPALIVE> = 528396;

        <android.net.NetworkAgent: int CMD_START_SOCKET_KEEPALIVE> = 528395;

        <android.net.NetworkAgent: int CMD_SET_SIGNAL_STRENGTH_THRESHOLDS> = 528398;

        <android.net.NetworkAgent: int CMD_SAVE_ACCEPT_UNVALIDATED> = 528393;

        <android.net.NetworkAgent: int CMD_REQUEST_BANDWIDTH_UPDATE> = 528394;

        <android.net.NetworkAgent: int CMD_REPORT_NETWORK_STATUS> = 528391;

        <android.net.NetworkAgent: int CMD_REMOVE_KEEPALIVE_PACKET_FILTER> = 528401;

        <android.net.NetworkAgent: int CMD_PREVENT_AUTOMATIC_RECONNECT> = 528399;

        <android.net.NetworkAgent: int CMD_ADD_KEEPALIVE_PACKET_FILTER> = 528400;

        <android.net.NetworkAgent: long BW_REFRESH_MIN_WIN_MS> = 500L;

        <android.net.NetworkAgent: int BASE> = 528384;

        <android.net.NetworkAgent: java.lang.String REDIRECT_URL_KEY> = "redirect URL";

        return;
    }

    public void <init>(android.content.Context, android.os.Looper, java.lang.String, android.net.NetworkCapabilities, android.net.LinkProperties, int, android.net.NetworkAgentConfig, android.net.NetworkProvider)
    {
        android.net.NetworkAgent r0;
        android.content.Context r1;
        android.os.Looper r2;
        java.lang.String r3;
        android.net.NetworkCapabilities r4;
        android.net.LinkProperties r5;
        int i0, i1;
        android.net.NetworkAgentConfig r6;
        android.net.NetworkProvider r7;
        android.net.NetworkInfo $r8;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.NetworkCapabilities;

        r5 := @parameter4: android.net.LinkProperties;

        i0 := @parameter5: int;

        r6 := @parameter6: android.net.NetworkAgentConfig;

        r7 := @parameter7: android.net.NetworkProvider;

        if r7 != null goto label1;

        i1 = -1;

        goto label2;

     label1:
        i1 = virtualinvoke r7.<android.net.NetworkProvider: int getProviderId()>();

     label2:
        $r8 = staticinvoke <android.net.NetworkAgent: android.net.NetworkInfo getLegacyNetworkInfo(android.net.NetworkAgentConfig)>(r6);

        specialinvoke r0.<android.net.NetworkAgent: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkAgentConfig,int,android.net.NetworkInfo,boolean)>(r2, r1, r3, r4, r5, i0, r6, i1, $r8, 0);

        return;
    }

    private void <init>(android.os.Looper, android.content.Context, java.lang.String, android.net.NetworkCapabilities, android.net.LinkProperties, int, android.net.NetworkAgentConfig, int, android.net.NetworkInfo, boolean)
    {
        android.net.NetworkAgent r0;
        android.os.Looper r1;
        android.content.Context r2;
        java.lang.String r3;
        android.net.NetworkCapabilities r4, $r14;
        android.net.LinkProperties r5, $r15;
        int i0, i1;
        android.net.NetworkAgentConfig r6;
        android.net.NetworkInfo r7, $r12;
        boolean z0;
        java.util.ArrayList $r8;
        java.util.concurrent.atomic.AtomicBoolean $r9;
        java.lang.Object $r10;
        android.net.NetworkAgent$NetworkAgentHandler $r11;
        android.net.NetworkAgent$InitialConfiguration $r13;
        java.lang.IllegalArgumentException $r16;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.NetworkCapabilities;

        r5 := @parameter4: android.net.LinkProperties;

        i0 := @parameter5: int;

        r6 := @parameter6: android.net.NetworkAgentConfig;

        i1 := @parameter7: int;

        r7 := @parameter8: android.net.NetworkInfo;

        z0 := @parameter9: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.net.NetworkAgent: java.util.ArrayList mPreConnectedQueue> = $r8;

        r0.<android.net.NetworkAgent: long mLastBwRefreshTime> = 0L;

        r0.<android.net.NetworkAgent: boolean mBandwidthUpdateScheduled> = 0;

        $r9 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r9.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<android.net.NetworkAgent: java.util.concurrent.atomic.AtomicBoolean mBandwidthUpdatePending> = $r9;

        $r10 = new java.lang.Object;

        specialinvoke $r10.<java.lang.Object: void <init>()>();

        r0.<android.net.NetworkAgent: java.lang.Object mRegisterLock> = $r10;

        $r11 = new android.net.NetworkAgent$NetworkAgentHandler;

        specialinvoke $r11.<android.net.NetworkAgent$NetworkAgentHandler: void <init>(android.net.NetworkAgent,android.os.Looper)>(r0, r1);

        r0.<android.net.NetworkAgent: android.os.Handler mHandler> = $r11;

        r0.<android.net.NetworkAgent: java.lang.String LOG_TAG> = r3;

        r0.<android.net.NetworkAgent: boolean mIsLegacy> = z0;

        $r12 = new android.net.NetworkInfo;

        specialinvoke $r12.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>(r7);

        r0.<android.net.NetworkAgent: android.net.NetworkInfo mNetworkInfo> = $r12;

        r0.<android.net.NetworkAgent: int providerId> = i1;

        if r7 == null goto label1;

        if r4 == null goto label1;

        if r5 == null goto label1;

        $r13 = new android.net.NetworkAgent$InitialConfiguration;

        $r14 = new android.net.NetworkCapabilities;

        specialinvoke $r14.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>(r4);

        $r15 = new android.net.LinkProperties;

        specialinvoke $r15.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>(r5);

        specialinvoke $r13.<android.net.NetworkAgent$InitialConfiguration: void <init>(android.content.Context,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkAgentConfig,android.net.NetworkInfo)>(r2, $r14, $r15, i0, r6, r7);

        r0.<android.net.NetworkAgent: android.net.NetworkAgent$InitialConfiguration mInitialConfiguration> = $r13;

        return;

     label1:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r16;
    }

    public void <init>(android.os.Looper, android.content.Context, java.lang.String, android.net.NetworkInfo, android.net.NetworkCapabilities, android.net.LinkProperties, int)
    {
        android.net.NetworkAgent r0;
        android.os.Looper r1;
        android.content.Context r2;
        java.lang.String r3;
        android.net.NetworkInfo r4;
        android.net.NetworkCapabilities r5;
        android.net.LinkProperties r6;
        int i0;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.NetworkInfo;

        r5 := @parameter4: android.net.NetworkCapabilities;

        r6 := @parameter5: android.net.LinkProperties;

        i0 := @parameter6: int;

        specialinvoke r0.<android.net.NetworkAgent: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkInfo,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkAgentConfig,int)>(r1, r2, r3, r4, r5, r6, i0, null, -1);

        return;
    }

    public void <init>(android.os.Looper, android.content.Context, java.lang.String, android.net.NetworkInfo, android.net.NetworkCapabilities, android.net.LinkProperties, int, int)
    {
        android.net.NetworkAgent r0;
        android.os.Looper r1;
        android.content.Context r2;
        java.lang.String r3;
        android.net.NetworkInfo r4;
        android.net.NetworkCapabilities r5;
        android.net.LinkProperties r6;
        int i0, i1;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.NetworkInfo;

        r5 := @parameter4: android.net.NetworkCapabilities;

        r6 := @parameter5: android.net.LinkProperties;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        specialinvoke r0.<android.net.NetworkAgent: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkInfo,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkAgentConfig,int)>(r1, r2, r3, r4, r5, r6, i0, null, i1);

        return;
    }

    public void <init>(android.os.Looper, android.content.Context, java.lang.String, android.net.NetworkInfo, android.net.NetworkCapabilities, android.net.LinkProperties, int, android.net.NetworkAgentConfig)
    {
        android.net.NetworkAgent r0;
        android.os.Looper r1;
        android.content.Context r2;
        java.lang.String r3;
        android.net.NetworkInfo r4;
        android.net.NetworkCapabilities r5;
        android.net.LinkProperties r6;
        int i0;
        android.net.NetworkAgentConfig r7;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.NetworkInfo;

        r5 := @parameter4: android.net.NetworkCapabilities;

        r6 := @parameter5: android.net.LinkProperties;

        i0 := @parameter6: int;

        r7 := @parameter7: android.net.NetworkAgentConfig;

        specialinvoke r0.<android.net.NetworkAgent: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkInfo,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkAgentConfig,int)>(r1, r2, r3, r4, r5, r6, i0, r7, -1);

        return;
    }

    public void <init>(android.os.Looper, android.content.Context, java.lang.String, android.net.NetworkInfo, android.net.NetworkCapabilities, android.net.LinkProperties, int, android.net.NetworkAgentConfig, int)
    {
        android.net.NetworkAgent r0;
        android.os.Looper r1;
        android.content.Context r2;
        java.lang.String r3;
        android.net.NetworkInfo r4;
        android.net.NetworkCapabilities r5;
        android.net.LinkProperties r6;
        int i0, i1;
        android.net.NetworkAgentConfig r7;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.NetworkInfo;

        r5 := @parameter4: android.net.NetworkCapabilities;

        r6 := @parameter5: android.net.LinkProperties;

        i0 := @parameter6: int;

        r7 := @parameter7: android.net.NetworkAgentConfig;

        i1 := @parameter8: int;

        specialinvoke r0.<android.net.NetworkAgent: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkAgentConfig,int,android.net.NetworkInfo,boolean)>(r1, r2, r3, r5, r6, i0, r7, i1, r4, 1);

        virtualinvoke r0.<android.net.NetworkAgent: android.net.Network register()>();

        return;
    }

    static com.android.internal.util.AsyncChannel access$000(android.net.NetworkAgent)
    {
        android.net.NetworkAgent r0;
        com.android.internal.util.AsyncChannel $r1;

        r0 := @parameter0: android.net.NetworkAgent;

        $r1 = r0.<android.net.NetworkAgent: com.android.internal.util.AsyncChannel mAsyncChannel>;

        return $r1;
    }

    static com.android.internal.util.AsyncChannel access$002(android.net.NetworkAgent, com.android.internal.util.AsyncChannel)
    {
        android.net.NetworkAgent r0;
        com.android.internal.util.AsyncChannel r1;

        r0 := @parameter0: android.net.NetworkAgent;

        r1 := @parameter1: com.android.internal.util.AsyncChannel;

        r0.<android.net.NetworkAgent: com.android.internal.util.AsyncChannel mAsyncChannel> = r1;

        return r1;
    }

    static java.util.ArrayList access$100(android.net.NetworkAgent)
    {
        android.net.NetworkAgent r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.net.NetworkAgent;

        $r1 = r0.<android.net.NetworkAgent: java.util.ArrayList mPreConnectedQueue>;

        return $r1;
    }

    static long access$200(android.net.NetworkAgent)
    {
        android.net.NetworkAgent r0;
        long $l0;

        r0 := @parameter0: android.net.NetworkAgent;

        $l0 = r0.<android.net.NetworkAgent: long mLastBwRefreshTime>;

        return $l0;
    }

    static boolean access$300(android.net.NetworkAgent)
    {
        android.net.NetworkAgent r0;
        boolean $z0;

        r0 := @parameter0: android.net.NetworkAgent;

        $z0 = r0.<android.net.NetworkAgent: boolean mBandwidthUpdateScheduled>;

        return $z0;
    }

    static boolean access$302(android.net.NetworkAgent, boolean)
    {
        android.net.NetworkAgent r0;
        boolean z0;

        r0 := @parameter0: android.net.NetworkAgent;

        z0 := @parameter1: boolean;

        r0.<android.net.NetworkAgent: boolean mBandwidthUpdateScheduled> = z0;

        return z0;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$400(android.net.NetworkAgent)
    {
        android.net.NetworkAgent r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: android.net.NetworkAgent;

        $r1 = r0.<android.net.NetworkAgent: java.util.concurrent.atomic.AtomicBoolean mBandwidthUpdatePending>;

        return $r1;
    }

    static java.lang.String access$500(android.net.NetworkAgent)
    {
        android.net.NetworkAgent r0;
        java.lang.String $r1;

        r0 := @parameter0: android.net.NetworkAgent;

        $r1 = r0.<android.net.NetworkAgent: java.lang.String LOG_TAG>;

        return $r1;
    }

    private static android.net.NetworkInfo getLegacyNetworkInfo(android.net.NetworkAgentConfig)
    {
        android.net.NetworkAgentConfig r0;
        android.net.NetworkInfo $r2;
        java.lang.String $r3, $r4;
        int $i0;

        r0 := @parameter0: android.net.NetworkAgentConfig;

        $r2 = new android.net.NetworkInfo;

        $i0 = r0.<android.net.NetworkAgentConfig: int legacyType>;

        $r3 = r0.<android.net.NetworkAgentConfig: java.lang.String legacyTypeName>;

        specialinvoke $r2.<android.net.NetworkInfo: void <init>(int,int,java.lang.String,java.lang.String)>($i0, 0, $r3, "");

        virtualinvoke $r2.<android.net.NetworkInfo: void setIsAvailable(boolean)>(1);

        $r4 = virtualinvoke r0.<android.net.NetworkAgentConfig: java.lang.String getLegacyExtraInfo()>();

        virtualinvoke $r2.<android.net.NetworkInfo: void setExtraInfo(java.lang.String)>($r4);

        return $r2;
    }

    private void queueOrSendMessage(int, int, int)
    {
        android.net.NetworkAgent r0;
        int i0, i1, i2;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,int,int,java.lang.Object)>(i0, i1, i2, null);

        return;
    }

    private void queueOrSendMessage(int, int, int, java.lang.Object)
    {
        android.net.NetworkAgent r0;
        int i0, i1, i2;
        java.lang.Object r1;
        android.os.Message r2;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: int arg1> = i1;

        r2.<android.os.Message: int arg2> = i2;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(android.os.Message)>(r2);

        return;
    }

    private void queueOrSendMessage(int, java.lang.Object)
    {
        android.net.NetworkAgent r0;
        int i0;
        java.lang.Object r1;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,int,int,java.lang.Object)>(i0, 0, 0, r1);

        return;
    }

    private void queueOrSendMessage(android.os.Message)
    {
        android.net.NetworkAgent r0;
        java.util.ArrayList r1, $r3;
        com.android.internal.util.AsyncChannel $r2, $r4;
        java.lang.Throwable $r5;
        android.os.Message r6;

        r0 := @this: android.net.NetworkAgent;

        r6 := @parameter0: android.os.Message;

        r1 = r0.<android.net.NetworkAgent: java.util.ArrayList mPreConnectedQueue>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.net.NetworkAgent: com.android.internal.util.AsyncChannel mAsyncChannel>;

        if $r2 == null goto label3;

        $r4 = r0.<android.net.NetworkAgent: com.android.internal.util.AsyncChannel mAsyncChannel>;

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>(r6);

     label2:
        goto label4;

     label3:
        $r3 = r0.<android.net.NetworkAgent: java.util.ArrayList mPreConnectedQueue>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    protected void addKeepalivePacketFilter(android.os.Message)
    {
        android.net.NetworkAgent r0;
        android.os.Message r1;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.os.Message;

        return;
    }

    public void explicitlySelected(boolean)
    {
        android.net.NetworkAgent r0;
        boolean z0;

        r0 := @this: android.net.NetworkAgent;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.net.NetworkAgent: void explicitlySelected(boolean,boolean)>(1, z0);

        return;
    }

    public void explicitlySelected(boolean, boolean)
    {
        android.net.NetworkAgent r0;
        boolean z0, z1;
        int i0, i1;

        r0 := @this: android.net.NetworkAgent;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 = (int) z0;

        i1 = (int) z1;

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,int,int)>(528392, i0, i1);

        return;
    }

    public android.net.Network getNetwork()
    {
        android.net.NetworkAgent r0;
        android.net.Network $r1;

        r0 := @this: android.net.NetworkAgent;

        $r1 = r0.<android.net.NetworkAgent: android.net.Network mNetwork>;

        return $r1;
    }

    protected void log(java.lang.String)
    {
        android.net.NetworkAgent r0;
        java.lang.String r1, r2, $r7;
        java.lang.StringBuilder $r4;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<android.net.NetworkAgent: java.lang.String LOG_TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NetworkAgent: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r2, $r7);

        return;
    }

    public void markConnected()
    {
        android.net.NetworkAgent r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        android.net.NetworkInfo $r2, $r3, $r6;
        android.net.NetworkInfo$DetailedState $r4;
        java.lang.String $r5;

        r0 := @this: android.net.NetworkAgent;

        $z0 = r0.<android.net.NetworkAgent: boolean mIsLegacy>;

        if $z0 != 0 goto label1;

        $r3 = r0.<android.net.NetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        $r4 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        $r2 = r0.<android.net.NetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        $r5 = virtualinvoke $r2.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        virtualinvoke $r3.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r4, null, $r5);

        $r6 = r0.<android.net.NetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,java.lang.Object)>(528385, $r6);

        return;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Legacy agents can\'t call markConnected.");

        throw $r1;
    }

    protected void networkStatus(int, java.lang.String)
    {
        android.net.NetworkAgent r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void onAddKeepalivePacketFilter(int, android.net.KeepalivePacketData)
    {
        android.net.NetworkAgent r0;
        int i0;
        android.os.Handler $r1;
        android.net.KeepalivePacketData r2;
        android.os.Message r3;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        r2 := @parameter1: android.net.KeepalivePacketData;

        $r1 = r0.<android.net.NetworkAgent: android.os.Handler mHandler>;

        r3 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(528400, i0, 0, r2);

        virtualinvoke r0.<android.net.NetworkAgent: void addKeepalivePacketFilter(android.os.Message)>(r3);

        virtualinvoke r3.<android.os.Message: void recycle()>();

        return;
    }

    public void onAutomaticReconnectDisabled()
    {
        android.net.NetworkAgent r0;

        r0 := @this: android.net.NetworkAgent;

        virtualinvoke r0.<android.net.NetworkAgent: void preventAutomaticReconnect()>();

        return;
    }

    public void onBandwidthUpdateRequested()
    {
        android.net.NetworkAgent r0;

        r0 := @this: android.net.NetworkAgent;

        virtualinvoke r0.<android.net.NetworkAgent: void pollLceData()>();

        return;
    }

    public void onNetworkUnwanted()
    {
        android.net.NetworkAgent r0;

        r0 := @this: android.net.NetworkAgent;

        virtualinvoke r0.<android.net.NetworkAgent: void unwanted()>();

        return;
    }

    public void onRemoveKeepalivePacketFilter(int)
    {
        android.net.NetworkAgent r0;
        int i0;
        android.os.Message r1;
        android.os.Handler $r2;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        $r2 = r0.<android.net.NetworkAgent: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(528401, i0, 0, null);

        virtualinvoke r0.<android.net.NetworkAgent: void removeKeepalivePacketFilter(android.os.Message)>(r1);

        virtualinvoke r1.<android.os.Message: void recycle()>();

        return;
    }

    public void onSaveAcceptUnvalidated(boolean)
    {
        android.net.NetworkAgent r0;
        boolean z0;

        r0 := @this: android.net.NetworkAgent;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.net.NetworkAgent: void saveAcceptUnvalidated(boolean)>(z0);

        return;
    }

    public void onSignalStrengthThresholdsUpdated(int[])
    {
        android.net.NetworkAgent r0;
        int[] r1;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: int[];

        virtualinvoke r0.<android.net.NetworkAgent: void setSignalStrengthThresholds(int[])>(r1);

        return;
    }

    public void onSocketKeepaliveEvent(int, int)
    {
        android.net.NetworkAgent r0;
        int i0, i1;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.net.NetworkAgent: void sendSocketKeepaliveEvent(int,int)>(i0, i1);

        return;
    }

    public void onStartSocketKeepalive(int, java.time.Duration, android.net.KeepalivePacketData)
    {
        android.net.NetworkAgent r0;
        int i0, $i4;
        android.net.KeepalivePacketData r1;
        long l1;
        byte $b2, $b3;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.os.Handler $r7;
        java.time.Duration r8;
        android.os.Message r9;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        r8 := @parameter1: java.time.Duration;

        r1 := @parameter2: android.net.KeepalivePacketData;

        l1 = virtualinvoke r8.<java.time.Duration: long getSeconds()>();

        $b2 = l1 cmp 10L;

        if $b2 < 0 goto label1;

        $b3 = l1 cmp 3600L;

        if $b3 > 0 goto label1;

        $r7 = r0.<android.net.NetworkAgent: android.os.Handler mHandler>;

        $i4 = (int) l1;

        r9 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(528395, i0, $i4, r1);

        virtualinvoke r0.<android.net.NetworkAgent: void startSocketKeepalive(android.os.Message)>(r9);

        virtualinvoke r9.<android.os.Message: void recycle()>();

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interval needs to be comprised between 10 and 3600 but was ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void onStopSocketKeepalive(int)
    {
        android.net.NetworkAgent r0;
        int i0;
        android.os.Message r1;
        android.os.Handler $r2;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        $r2 = r0.<android.net.NetworkAgent: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(528396, i0, 0, null);

        virtualinvoke r0.<android.net.NetworkAgent: void stopSocketKeepalive(android.os.Message)>(r1);

        virtualinvoke r1.<android.os.Message: void recycle()>();

        return;
    }

    public void onValidationStatus(int, android.net.Uri)
    {
        android.net.NetworkAgent r0;
        int i0;
        android.net.Uri r1;
        java.lang.String r2;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        if r1 != null goto label1;

        r2 = "";

        goto label2;

     label1:
        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

     label2:
        virtualinvoke r0.<android.net.NetworkAgent: void networkStatus(int,java.lang.String)>(i0, r2);

        return;
    }

    protected void pollLceData()
    {
        android.net.NetworkAgent r0;

        r0 := @this: android.net.NetworkAgent;

        return;
    }

    protected void preventAutomaticReconnect()
    {
        android.net.NetworkAgent r0;

        r0 := @this: android.net.NetworkAgent;

        return;
    }

    public android.net.Network register()
    {
        android.net.NetworkAgent r0;
        java.lang.Object r1, $r7;
        android.net.ConnectivityManager r2;
        android.os.Messenger r3;
        android.net.Network $r4, $r18, $r19;
        android.net.NetworkAgent$InitialConfiguration $r5, $r9, $r11, $r12, $r13, $r14;
        android.content.Context $r6;
        android.os.Handler $r8;
        android.net.NetworkInfo $r10, r21;
        int $i0, $i1;
        android.net.NetworkAgentConfig $r15;
        android.net.NetworkCapabilities $r16;
        android.net.LinkProperties $r17;
        java.lang.Throwable $r20;
        java.lang.IllegalStateException r22;

        r0 := @this: android.net.NetworkAgent;

        r1 = r0.<android.net.NetworkAgent: java.lang.Object mRegisterLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.net.NetworkAgent: android.net.Network mNetwork>;

        if $r4 != null goto label3;

        $r5 = r0.<android.net.NetworkAgent: android.net.NetworkAgent$InitialConfiguration mInitialConfiguration>;

        $r6 = $r5.<android.net.NetworkAgent$InitialConfiguration: android.content.Context context>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r7;

        r3 = new android.os.Messenger;

        $r8 = r0.<android.net.NetworkAgent: android.os.Handler mHandler>;

        specialinvoke r3.<android.os.Messenger: void <init>(android.os.Handler)>($r8);

        r21 = new android.net.NetworkInfo;

        $r9 = r0.<android.net.NetworkAgent: android.net.NetworkAgent$InitialConfiguration mInitialConfiguration>;

        $r10 = $r9.<android.net.NetworkAgent$InitialConfiguration: android.net.NetworkInfo info>;

        specialinvoke r21.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>($r10);

        $r11 = r0.<android.net.NetworkAgent: android.net.NetworkAgent$InitialConfiguration mInitialConfiguration>;

        $r17 = $r11.<android.net.NetworkAgent$InitialConfiguration: android.net.LinkProperties properties>;

        $r12 = r0.<android.net.NetworkAgent: android.net.NetworkAgent$InitialConfiguration mInitialConfiguration>;

        $r16 = $r12.<android.net.NetworkAgent$InitialConfiguration: android.net.NetworkCapabilities capabilities>;

        $r13 = r0.<android.net.NetworkAgent: android.net.NetworkAgent$InitialConfiguration mInitialConfiguration>;

        $i1 = $r13.<android.net.NetworkAgent$InitialConfiguration: int score>;

        $r14 = r0.<android.net.NetworkAgent: android.net.NetworkAgent$InitialConfiguration mInitialConfiguration>;

        $r15 = $r14.<android.net.NetworkAgent$InitialConfiguration: android.net.NetworkAgentConfig config>;

        $i0 = r0.<android.net.NetworkAgent: int providerId>;

        $r18 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>(r3, r21, $r17, $r16, $i1, $r15, $i0);

        r0.<android.net.NetworkAgent: android.net.Network mNetwork> = $r18;

        r0.<android.net.NetworkAgent: android.net.NetworkAgent$InitialConfiguration mInitialConfiguration> = null;

        exitmonitor r1;

     label2:
        $r19 = r0.<android.net.NetworkAgent: android.net.Network mNetwork>;

        return $r19;

     label3:
        r22 = new java.lang.IllegalStateException;

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Agent already registered");

        throw r22;

     label4:
        $r20 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r20;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.os.Messenger registerForTest(android.net.Network)
    {
        android.net.NetworkAgent r0;
        java.lang.Object r1;
        android.os.Messenger $r2;
        android.os.Handler $r3;
        java.lang.Throwable $r4;
        android.net.Network r5;

        r0 := @this: android.net.NetworkAgent;

        r5 := @parameter0: android.net.Network;

        virtualinvoke r0.<android.net.NetworkAgent: void log(java.lang.String)>("Registering NetworkAgent for test");

        r1 = r0.<android.net.NetworkAgent: java.lang.Object mRegisterLock>;

        entermonitor r1;

     label1:
        r0.<android.net.NetworkAgent: android.net.Network mNetwork> = r5;

        r0.<android.net.NetworkAgent: android.net.NetworkAgent$InitialConfiguration mInitialConfiguration> = null;

        exitmonitor r1;

     label2:
        $r2 = new android.os.Messenger;

        $r3 = r0.<android.net.NetworkAgent: android.os.Handler mHandler>;

        specialinvoke $r2.<android.os.Messenger: void <init>(android.os.Handler)>($r3);

        return $r2;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void removeKeepalivePacketFilter(android.os.Message)
    {
        android.net.NetworkAgent r0;
        android.os.Message r1;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.os.Message;

        return;
    }

    protected void saveAcceptUnvalidated(boolean)
    {
        android.net.NetworkAgent r0;
        boolean z0;

        r0 := @this: android.net.NetworkAgent;

        z0 := @parameter0: boolean;

        return;
    }

    public final void sendLinkProperties(android.net.LinkProperties)
    {
        android.net.NetworkAgent r0;
        android.net.LinkProperties r1, $r3;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.net.LinkProperties;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = new android.net.LinkProperties;

        specialinvoke $r3.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>(r1);

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,java.lang.Object)>(528387, $r3);

        return;
    }

    public final void sendNetworkCapabilities(android.net.NetworkCapabilities)
    {
        android.net.NetworkAgent r0;
        android.net.NetworkCapabilities r1, $r4;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        long $l0;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.net.NetworkCapabilities;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<android.net.NetworkAgent: java.util.concurrent.atomic.AtomicBoolean mBandwidthUpdatePending>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.net.NetworkAgent: long mLastBwRefreshTime> = $l0;

        $r4 = new android.net.NetworkCapabilities;

        specialinvoke $r4.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>(r1);

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,java.lang.Object)>(528386, $r4);

        return;
    }

    public final void sendNetworkInfo(android.net.NetworkInfo)
    {
        android.net.NetworkAgent r0;
        android.net.NetworkInfo r1, $r3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.net.NetworkInfo;

        $z0 = r0.<android.net.NetworkAgent: boolean mIsLegacy>;

        if $z0 == 0 goto label1;

        $r3 = new android.net.NetworkInfo;

        specialinvoke $r3.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>(r1);

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,java.lang.Object)>(528385, $r3);

        return;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Only legacy agents can call sendNetworkInfo.");

        throw $r2;
    }

    public final void sendNetworkScore(int)
    {
        android.net.NetworkAgent r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,int,int)>(528388, i0, 0);

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Score must be >= 0");

        throw $r1;
    }

    public final void sendSocketKeepaliveEvent(int, int)
    {
        android.net.NetworkAgent r0;
        int i0, i1;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,int,int)>(528397, i0, i1);

        return;
    }

    public void setLegacyExtraInfo(java.lang.String)
    {
        android.net.NetworkAgent r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.UnsupportedOperationException $r2;
        android.net.NetworkInfo $r3, $r4;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<android.net.NetworkAgent: boolean mIsLegacy>;

        if $z0 != 0 goto label1;

        $r3 = r0.<android.net.NetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        virtualinvoke $r3.<android.net.NetworkInfo: void setExtraInfo(java.lang.String)>(r1);

        $r4 = r0.<android.net.NetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,java.lang.Object)>(528385, $r4);

        return;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Legacy agents can\'t call setLegacyExtraInfo.");

        throw $r2;
    }

    public void setLegacySubtype(int, java.lang.String)
    {
        android.net.NetworkAgent r0;
        int i0;
        java.lang.String r1;
        boolean $z0;
        java.lang.UnsupportedOperationException $r2;
        android.net.NetworkInfo $r3, $r4;

        r0 := @this: android.net.NetworkAgent;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = r0.<android.net.NetworkAgent: boolean mIsLegacy>;

        if $z0 != 0 goto label1;

        $r3 = r0.<android.net.NetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        virtualinvoke $r3.<android.net.NetworkInfo: void setSubtype(int,java.lang.String)>(i0, r1);

        $r4 = r0.<android.net.NetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,java.lang.Object)>(528385, $r4);

        return;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Legacy agents can\'t call setLegacySubtype.");

        throw $r2;
    }

    protected void setSignalStrengthThresholds(int[])
    {
        android.net.NetworkAgent r0;
        int[] r1;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: int[];

        return;
    }

    protected void startSocketKeepalive(android.os.Message)
    {
        android.net.NetworkAgent r0;
        android.os.Message r1;
        int $i0;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int arg1>;

        virtualinvoke r0.<android.net.NetworkAgent: void onSocketKeepaliveEvent(int,int)>($i0, -30);

        return;
    }

    protected void stopSocketKeepalive(android.os.Message)
    {
        android.net.NetworkAgent r0;
        android.os.Message r1;
        int $i0;

        r0 := @this: android.net.NetworkAgent;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int arg1>;

        virtualinvoke r0.<android.net.NetworkAgent: void onSocketKeepaliveEvent(int,int)>($i0, -30);

        return;
    }

    public void unregister()
    {
        android.net.NetworkAgent r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        android.net.NetworkInfo$DetailedState $r2;
        android.net.NetworkInfo $r3, $r4;

        r0 := @this: android.net.NetworkAgent;

        $z0 = r0.<android.net.NetworkAgent: boolean mIsLegacy>;

        if $z0 != 0 goto label1;

        $r3 = r0.<android.net.NetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        $r2 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        virtualinvoke $r3.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r2, null, null);

        $r4 = r0.<android.net.NetworkAgent: android.net.NetworkInfo mNetworkInfo>;

        specialinvoke r0.<android.net.NetworkAgent: void queueOrSendMessage(int,java.lang.Object)>(528385, $r4);

        return;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Legacy agents can\'t call unregister.");

        throw $r1;
    }

    protected void unwanted()
    {
        android.net.NetworkAgent r0;

        r0 := @this: android.net.NetworkAgent;

        return;
    }

    public boolean waitForIdle(long)
    {
        android.net.NetworkAgent r0;
        long l0;
        android.os.Handler r2;
        android.os.ConditionVariable $r3;
        android.net._$$Lambda$xEDVsWySjOhZCU_CTVGu6ziJ2xc $r5;
        boolean $z1;

        r0 := @this: android.net.NetworkAgent;

        l0 := @parameter0: long;

        $r3 = new android.os.ConditionVariable;

        specialinvoke $r3.<android.os.ConditionVariable: void <init>(boolean)>(0);

        r2 = r0.<android.net.NetworkAgent: android.os.Handler mHandler>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r3);

        $r5 = new android.net._$$Lambda$xEDVsWySjOhZCU_CTVGu6ziJ2xc;

        specialinvoke $r5.<android.net._$$Lambda$xEDVsWySjOhZCU_CTVGu6ziJ2xc: void <init>(android.os.ConditionVariable)>($r3);

        virtualinvoke r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        $z1 = virtualinvoke $r3.<android.os.ConditionVariable: boolean block(long)>(l0);

        return $z1;
    }
}
