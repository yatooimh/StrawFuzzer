public final class android.net.NetworkCapabilities$Builder extends java.lang.Object
{
    private final android.net.NetworkCapabilities mCaps;

    public void <init>()
    {
        android.net.NetworkCapabilities$Builder r0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.net.NetworkCapabilities;

        specialinvoke $r1.<android.net.NetworkCapabilities: void <init>()>();

        r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps> = $r1;

        return;
    }

    public void <init>(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities$Builder r0;
        android.net.NetworkCapabilities r1, $r3;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        r1 := @parameter0: android.net.NetworkCapabilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = new android.net.NetworkCapabilities;

        specialinvoke $r3.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>(r1);

        r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps> = $r3;

        return;
    }

    public android.net.NetworkCapabilities$Builder addCapability(int)
    {
        android.net.NetworkCapabilities$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setCapability(int,boolean)>(i0, 1);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder addTransportType(int)
    {
        android.net.NetworkCapabilities$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        i0 := @parameter0: int;

        staticinvoke <android.net.NetworkCapabilities: void access$1400(int)>(i0);

        $r1 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addTransportType(int)>(i0);

        return r0;
    }

    public android.net.NetworkCapabilities build()
    {
        android.net.NetworkCapabilities$Builder r0;
        android.net.NetworkCapabilities $r1, $r2, $r3, $r4, $r6;
        int $i0, $i1;
        int[] $r5;
        boolean $z0;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        $r1 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        $i0 = virtualinvoke $r1.<android.net.NetworkCapabilities: int getOwnerUid()>();

        if $i0 == -1 goto label2;

        $r4 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        $r5 = virtualinvoke $r4.<android.net.NetworkCapabilities: int[] getAdministratorUids()>();

        $r6 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        $i1 = virtualinvoke $r6.<android.net.NetworkCapabilities: int getOwnerUid()>();

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>($r5, $i1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The owner UID must be included in  administrator UIDs.");

        throw $r7;

     label2:
        $r2 = new android.net.NetworkCapabilities;

        $r3 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        specialinvoke $r2.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>($r3);

        return $r2;
    }

    public android.net.NetworkCapabilities$Builder removeCapability(int)
    {
        android.net.NetworkCapabilities$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setCapability(int,boolean)>(i0, 0);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder removeTransportType(int)
    {
        android.net.NetworkCapabilities$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        i0 := @parameter0: int;

        staticinvoke <android.net.NetworkCapabilities: void access$1400(int)>(i0);

        $r1 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities removeTransportType(int)>(i0);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder setAdministratorUids(int[])
    {
        android.net.NetworkCapabilities$Builder r0;
        int[] r1;
        android.net.NetworkCapabilities $r3;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        r1 := @parameter0: int[];

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r3.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setAdministratorUids(int[])>(r1);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder setLinkDownstreamBandwidthKbps(int)
    {
        android.net.NetworkCapabilities$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setLinkDownstreamBandwidthKbps(int)>(i0);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder setLinkUpstreamBandwidthKbps(int)
    {
        android.net.NetworkCapabilities$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setLinkUpstreamBandwidthKbps(int)>(i0);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder setNetworkSpecifier(android.net.NetworkSpecifier)
    {
        android.net.NetworkCapabilities$Builder r0;
        android.net.NetworkSpecifier r1;
        android.net.NetworkCapabilities $r2;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        r1 := @parameter0: android.net.NetworkSpecifier;

        $r2 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setNetworkSpecifier(android.net.NetworkSpecifier)>(r1);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder setOwnerUid(int)
    {
        android.net.NetworkCapabilities$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setOwnerUid(int)>(i0);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder setRequestorPackageName(java.lang.String)
    {
        android.net.NetworkCapabilities$Builder r0;
        java.lang.String r1;
        android.net.NetworkCapabilities $r2;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setRequestorPackageName(java.lang.String)>(r1);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder setRequestorUid(int)
    {
        android.net.NetworkCapabilities$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setRequestorUid(int)>(i0);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder setSignalStrength(int)
    {
        android.net.NetworkCapabilities$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setSignalStrength(int)>(i0);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder setSsid(java.lang.String)
    {
        android.net.NetworkCapabilities$Builder r0;
        java.lang.String r1;
        android.net.NetworkCapabilities $r2;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setSSID(java.lang.String)>(r1);

        return r0;
    }

    public android.net.NetworkCapabilities$Builder setTransportInfo(android.net.TransportInfo)
    {
        android.net.NetworkCapabilities$Builder r0;
        android.net.TransportInfo r1;
        android.net.NetworkCapabilities $r2;

        r0 := @this: android.net.NetworkCapabilities$Builder;

        r1 := @parameter0: android.net.TransportInfo;

        $r2 = r0.<android.net.NetworkCapabilities$Builder: android.net.NetworkCapabilities mCaps>;

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setTransportInfo(android.net.TransportInfo)>(r1);

        return r0;
    }
}
