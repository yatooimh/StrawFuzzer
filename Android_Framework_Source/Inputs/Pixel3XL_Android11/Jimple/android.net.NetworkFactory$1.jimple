class android.net.NetworkFactory$1 extends android.net.NetworkProvider
{
    final android.net.NetworkFactory this$0;

    void <init>(android.net.NetworkFactory, android.content.Context, android.os.Looper, java.lang.String)
    {
        android.net.NetworkFactory$1 r0;
        android.net.NetworkFactory r1;
        android.content.Context r2;
        android.os.Looper r3;
        java.lang.String r4;

        r0 := @this: android.net.NetworkFactory$1;

        r1 := @parameter0: android.net.NetworkFactory;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Looper;

        r4 := @parameter3: java.lang.String;

        r0.<android.net.NetworkFactory$1: android.net.NetworkFactory this$0> = r1;

        specialinvoke r0.<android.net.NetworkProvider: void <init>(android.content.Context,android.os.Looper,java.lang.String)>(r2, r3, r4);

        return;
    }

    public void onNetworkRequestWithdrawn(android.net.NetworkRequest)
    {
        android.net.NetworkFactory$1 r0;
        android.net.NetworkRequest r1;
        android.net.NetworkFactory $r2;

        r0 := @this: android.net.NetworkFactory$1;

        r1 := @parameter0: android.net.NetworkRequest;

        $r2 = r0.<android.net.NetworkFactory$1: android.net.NetworkFactory this$0>;

        virtualinvoke $r2.<android.net.NetworkFactory: void handleRemoveRequest(android.net.NetworkRequest)>(r1);

        return;
    }

    public void onNetworkRequested(android.net.NetworkRequest, int, int)
    {
        android.net.NetworkFactory$1 r0;
        android.net.NetworkRequest r1;
        int i0, i1;
        android.net.NetworkFactory $r2;

        r0 := @this: android.net.NetworkFactory$1;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.net.NetworkFactory$1: android.net.NetworkFactory this$0>;

        virtualinvoke $r2.<android.net.NetworkFactory: void handleAddRequest(android.net.NetworkRequest,int,int)>(r1, i0, i1);

        return;
    }
}
