public class android.net.NetworkKey extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    public static final int TYPE_WIFI;
    public final int type;
    public final android.net.WifiKey wifiKey;

    static void <clinit>()
    {
        android.net.NetworkKey$1 $r0;

        <android.net.NetworkKey: int TYPE_WIFI> = 1;

        <android.net.NetworkKey: java.lang.String TAG> = "NetworkKey";

        $r0 = new android.net.NetworkKey$1;

        specialinvoke $r0.<android.net.NetworkKey$1: void <init>()>();

        <android.net.NetworkKey: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.net.WifiKey)
    {
        android.net.NetworkKey r0;
        android.net.WifiKey r1;

        r0 := @this: android.net.NetworkKey;

        r1 := @parameter0: android.net.WifiKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.NetworkKey: int type> = 1;

        r0.<android.net.NetworkKey: android.net.WifiKey wifiKey> = r1;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.net.NetworkKey r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;
        android.net.WifiKey $r8;
        android.os.Parcel r9;

        r0 := @this: android.net.NetworkKey;

        r9 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = virtualinvoke r9.<android.os.Parcel: int readInt()>();

        r0.<android.net.NetworkKey: int type> = i0;

        if i0 != 1 goto label1;

        $r6 = <android.net.WifiKey: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r9);

        $r8 = (android.net.WifiKey) $r7;

        r0.<android.net.NetworkKey: android.net.WifiKey wifiKey> = $r8;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcel has unknown type: ");

        $i1 = r0.<android.net.NetworkKey: int type>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    void <init>(android.os.Parcel, android.net.NetworkKey$1)
    {
        android.net.NetworkKey r0;
        android.os.Parcel r1;
        android.net.NetworkKey$1 r2;

        r0 := @this: android.net.NetworkKey;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.net.NetworkKey$1;

        specialinvoke r0.<android.net.NetworkKey: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public static android.net.NetworkKey createFromScanResult(android.net.wifi.ScanResult)
    {
        java.lang.String r0, $r4, r8;
        android.net.WifiKey r1;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r3;
        android.net.NetworkKey $r5;
        java.lang.Throwable $r6;
        android.net.wifi.ScanResult r7;

        r7 := @parameter0: android.net.wifi.ScanResult;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r7);

        r0 = r7.<android.net.wifi.ScanResult: java.lang.String SSID>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("<unknown ssid>");

        if $z1 == 0 goto label1;

        goto label5;

     label1:
        r8 = r7.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z2 == 0 goto label2;

        return null;

     label2:
        r1 = new android.net.WifiKey;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\"%s\"", $r3);

        specialinvoke r1.<android.net.WifiKey: void <init>(java.lang.String,java.lang.String)>($r4, r8);

        $r5 = new android.net.NetworkKey;

        specialinvoke $r5.<android.net.NetworkKey: void <init>(android.net.WifiKey)>(r1);

     label3:
        return $r5;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NetworkKey", "Unable to create WifiKey.", $r6);

        return null;

     label5:
        return null;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    public static android.net.NetworkKey createFromWifiInfo(android.net.wifi.WifiInfo)
    {
        java.lang.String r0, r5;
        boolean $z0, $z1, $z2;
        android.net.WifiKey $r1;
        android.net.NetworkKey $r2;
        java.lang.Throwable $r3;
        android.net.wifi.WifiInfo r4;

        r4 := @parameter0: android.net.wifi.WifiInfo;

        if r4 == null goto label4;

        r0 = virtualinvoke r4.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        r5 = virtualinvoke r4.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("<unknown ssid>");

        if $z1 != 0 goto label4;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z2 != 0 goto label4;

     label1:
        $r1 = new android.net.WifiKey;

        specialinvoke $r1.<android.net.WifiKey: void <init>(java.lang.String,java.lang.String)>(r0, r5);

     label2:
        $r2 = new android.net.NetworkKey;

        specialinvoke $r2.<android.net.NetworkKey: void <init>(android.net.WifiKey)>($r1);

        return $r2;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NetworkKey", "Unable to create WifiKey.", $r3);

        return null;

     label4:
        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public int describeContents()
    {
        android.net.NetworkKey r0;

        r0 := @this: android.net.NetworkKey;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.NetworkKey r0, r6;
        java.lang.Class $r1, $r2;
        int $i0, $i1;
        android.net.WifiKey $r3, $r4;
        boolean $z0, z1;
        java.lang.Object r5;

        r0 := @this: android.net.NetworkKey;

        r5 := @parameter0: java.lang.Object;

        z1 = 1;

        if r0 != r5 goto label1;

        return 1;

     label1:
        if r5 == null goto label5;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label5;

     label2:
        r6 = (android.net.NetworkKey) r5;

        $i1 = r0.<android.net.NetworkKey: int type>;

        $i0 = r6.<android.net.NetworkKey: int type>;

        if $i1 != $i0 goto label3;

        $r4 = r0.<android.net.NetworkKey: android.net.WifiKey wifiKey>;

        $r3 = r6.<android.net.NetworkKey: android.net.WifiKey wifiKey>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 0;
    }

    public int hashCode()
    {
        android.net.NetworkKey r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Integer $r2;
        android.net.WifiKey $r3;

        r0 := @this: android.net.NetworkKey;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = r0.<android.net.NetworkKey: int type>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = r0.<android.net.NetworkKey: android.net.WifiKey wifiKey>;

        $r1[1] = $r3;

        $i1 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i1;
    }

    public java.lang.String toString()
    {
        android.net.NetworkKey r0;
        int $i0;
        android.net.WifiKey $r1;
        java.lang.String $r2;

        r0 := @this: android.net.NetworkKey;

        $i0 = r0.<android.net.NetworkKey: int type>;

        if $i0 == 1 goto label1;

        return "InvalidKey";

     label1:
        $r1 = r0.<android.net.NetworkKey: android.net.WifiKey wifiKey>;

        $r2 = virtualinvoke $r1.<android.net.WifiKey: java.lang.String toString()>();

        return $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.NetworkKey r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        android.net.WifiKey $r6;
        android.os.Parcel r7;

        r0 := @this: android.net.NetworkKey;

        r7 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.net.NetworkKey: int type>;

        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.net.NetworkKey: int type>;

        if $i2 != 1 goto label1;

        $r6 = r0.<android.net.NetworkKey: android.net.WifiKey wifiKey>;

        virtualinvoke $r6.<android.net.WifiKey: void writeToParcel(android.os.Parcel,int)>(r7, i0);

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NetworkKey has unknown type ");

        $i3 = r0.<android.net.NetworkKey: int type>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }
}
