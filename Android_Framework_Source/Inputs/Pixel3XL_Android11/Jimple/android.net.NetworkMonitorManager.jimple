public class android.net.NetworkMonitorManager extends java.lang.Object
{
    private final android.net.INetworkMonitor mNetworkMonitor;
    private final java.lang.String mTag;

    public void <init>(android.net.INetworkMonitor)
    {
        android.net.NetworkMonitorManager r0;
        android.net.INetworkMonitor r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.net.NetworkMonitorManager;

        r1 := @parameter0: android.net.INetworkMonitor;

        $r2 = class "Landroid/net/NetworkMonitorManager;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke r0.<android.net.NetworkMonitorManager: void <init>(android.net.INetworkMonitor,java.lang.String)>(r1, $r3);

        return;
    }

    public void <init>(android.net.INetworkMonitor, java.lang.String)
    {
        android.net.NetworkMonitorManager r0;
        android.net.INetworkMonitor r1;
        java.lang.String r2;

        r0 := @this: android.net.NetworkMonitorManager;

        r1 := @parameter0: android.net.INetworkMonitor;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor> = r1;

        r0.<android.net.NetworkMonitorManager: java.lang.String mTag> = r2;

        return;
    }

    private void log(java.lang.String, java.lang.Throwable)
    {
        android.net.NetworkMonitorManager r0;
        java.lang.String r1, $r3;
        java.lang.Throwable r2;

        r0 := @this: android.net.NetworkMonitorManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = r0.<android.net.NetworkMonitorManager: java.lang.String mTag>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, r1, r2);

        return;
    }

    public boolean forceReevaluation(int)
    {
        android.net.NetworkMonitorManager r0;
        int i0;
        long l1;
        android.net.INetworkMonitor $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.net.NetworkMonitorManager;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r1.<android.net.INetworkMonitor: void forceReevaluation(int)>(i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r2 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in forceReevaluation", $r2);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean launchCaptivePortalApp()
    {
        android.net.NetworkMonitorManager r0;
        long l0;
        android.net.INetworkMonitor $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.net.NetworkMonitorManager;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r1.<android.net.INetworkMonitor: void launchCaptivePortalApp()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label3:
        $r2 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in launchCaptivePortalApp", $r3);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean notifyCaptivePortalAppFinished(int)
    {
        android.net.NetworkMonitorManager r0;
        int i0;
        long l1;
        android.net.INetworkMonitor $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.net.NetworkMonitorManager;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r1.<android.net.INetworkMonitor: void notifyCaptivePortalAppFinished(int)>(i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r2 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in notifyCaptivePortalAppFinished", $r2);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean notifyDnsResponse(int)
    {
        android.net.NetworkMonitorManager r0;
        int i0;
        long l1;
        android.net.INetworkMonitor $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.net.NetworkMonitorManager;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r1.<android.net.INetworkMonitor: void notifyDnsResponse(int)>(i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label3:
        $r2 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in notifyDnsResponse", $r3);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean notifyLinkPropertiesChanged(android.net.LinkProperties)
    {
        android.net.NetworkMonitorManager r0;
        long l0;
        android.net.INetworkMonitor $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        android.net.LinkProperties r4;

        r0 := @this: android.net.NetworkMonitorManager;

        r4 := @parameter0: android.net.LinkProperties;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r1.<android.net.INetworkMonitor: void notifyLinkPropertiesChanged(android.net.LinkProperties)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label3:
        $r2 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in notifyLinkPropertiesChanged", $r3);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean notifyNetworkCapabilitiesChanged(android.net.NetworkCapabilities)
    {
        android.net.NetworkMonitorManager r0;
        long l0;
        android.net.INetworkMonitor $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        android.net.NetworkCapabilities r4;

        r0 := @this: android.net.NetworkMonitorManager;

        r4 := @parameter0: android.net.NetworkCapabilities;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r1.<android.net.INetworkMonitor: void notifyNetworkCapabilitiesChanged(android.net.NetworkCapabilities)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r2 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in notifyNetworkCapabilitiesChanged", $r2);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean notifyNetworkConnected(android.net.LinkProperties, android.net.NetworkCapabilities)
    {
        android.net.NetworkMonitorManager r0;
        android.net.NetworkCapabilities r1;
        long l0;
        android.net.INetworkMonitor $r2;
        java.lang.Throwable $r3;
        android.os.RemoteException $r4;
        android.net.LinkProperties r5;

        r0 := @this: android.net.NetworkMonitorManager;

        r5 := @parameter0: android.net.LinkProperties;

        r1 := @parameter1: android.net.NetworkCapabilities;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r2.<android.net.INetworkMonitor: void notifyNetworkConnected(android.net.LinkProperties,android.net.NetworkCapabilities)>(r5, r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r4 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in notifyNetworkConnected", $r4);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean notifyNetworkDisconnected()
    {
        android.net.NetworkMonitorManager r0;
        long l0;
        android.net.INetworkMonitor $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.net.NetworkMonitorManager;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r1.<android.net.INetworkMonitor: void notifyNetworkDisconnected()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        $r2 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in notifyNetworkDisconnected", $r2);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean notifyPrivateDnsChanged(android.net.PrivateDnsConfigParcel)
    {
        android.net.NetworkMonitorManager r0;
        long l0;
        android.net.INetworkMonitor $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        android.net.PrivateDnsConfigParcel r4;

        r0 := @this: android.net.NetworkMonitorManager;

        r4 := @parameter0: android.net.PrivateDnsConfigParcel;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r1.<android.net.INetworkMonitor: void notifyPrivateDnsChanged(android.net.PrivateDnsConfigParcel)>(r4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label3:
        $r2 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in notifyPrivateDnsChanged", $r3);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean setAcceptPartialConnectivity()
    {
        android.net.NetworkMonitorManager r0;
        long l0;
        android.net.INetworkMonitor $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.net.NetworkMonitorManager;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r1.<android.net.INetworkMonitor: void setAcceptPartialConnectivity()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label3:
        $r2 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in setAcceptPartialConnectivity", $r3);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public boolean start()
    {
        android.net.NetworkMonitorManager r0;
        long l0;
        android.net.INetworkMonitor $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.net.NetworkMonitorManager;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<android.net.NetworkMonitorManager: android.net.INetworkMonitor mNetworkMonitor>;

        interfaceinvoke $r1.<android.net.INetworkMonitor: void start()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label3:
        $r2 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        specialinvoke r0.<android.net.NetworkMonitorManager: void log(java.lang.String,java.lang.Throwable)>("Error in start", $r3);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }
}
