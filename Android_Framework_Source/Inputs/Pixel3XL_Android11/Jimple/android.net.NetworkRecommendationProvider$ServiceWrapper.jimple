final class android.net.NetworkRecommendationProvider$ServiceWrapper extends android.net.INetworkRecommendationProvider$Stub
{
    private final android.content.Context mContext;
    private final java.util.concurrent.Executor mExecutor;
    private final android.os.Handler mHandler;
    final android.net.NetworkRecommendationProvider this$0;

    void <init>(android.net.NetworkRecommendationProvider, android.content.Context, java.util.concurrent.Executor)
    {
        android.net.NetworkRecommendationProvider$ServiceWrapper r0;
        android.net.NetworkRecommendationProvider r1;
        android.content.Context r2;
        java.util.concurrent.Executor r3;

        r0 := @this: android.net.NetworkRecommendationProvider$ServiceWrapper;

        r1 := @parameter0: android.net.NetworkRecommendationProvider;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.util.concurrent.Executor;

        r0.<android.net.NetworkRecommendationProvider$ServiceWrapper: android.net.NetworkRecommendationProvider this$0> = r1;

        specialinvoke r0.<android.net.INetworkRecommendationProvider$Stub: void <init>()>();

        r0.<android.net.NetworkRecommendationProvider$ServiceWrapper: android.content.Context mContext> = r2;

        r0.<android.net.NetworkRecommendationProvider$ServiceWrapper: java.util.concurrent.Executor mExecutor> = r3;

        r0.<android.net.NetworkRecommendationProvider$ServiceWrapper: android.os.Handler mHandler> = null;

        return;
    }

    private void enforceCallingPermission()
    {
        android.net.NetworkRecommendationProvider$ServiceWrapper r0;
        android.content.Context r1;

        r0 := @this: android.net.NetworkRecommendationProvider$ServiceWrapper;

        r1 = r0.<android.net.NetworkRecommendationProvider$ServiceWrapper: android.content.Context mContext>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.REQUEST_NETWORK_SCORES", "Permission denied.");

     label1:
        return;
    }

    private void execute(java.lang.Runnable)
    {
        android.net.NetworkRecommendationProvider$ServiceWrapper r0;
        java.lang.Runnable r1;
        java.util.concurrent.Executor r2;
        android.os.Handler $r3;

        r0 := @this: android.net.NetworkRecommendationProvider$ServiceWrapper;

        r1 := @parameter0: java.lang.Runnable;

        r2 = r0.<android.net.NetworkRecommendationProvider$ServiceWrapper: java.util.concurrent.Executor mExecutor>;

        if r2 == null goto label1;

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r1);

        goto label2;

     label1:
        $r3 = r0.<android.net.NetworkRecommendationProvider$ServiceWrapper: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

     label2:
        return;
    }

    public void requestScores(android.net.NetworkKey[]) throws android.os.RemoteException
    {
        android.net.NetworkRecommendationProvider$ServiceWrapper r0;
        android.net.NetworkKey[] r1;
        int $i0;
        android.net.NetworkRecommendationProvider$ServiceWrapper$1 $r2;

        r0 := @this: android.net.NetworkRecommendationProvider$ServiceWrapper;

        r1 := @parameter0: android.net.NetworkKey[];

        specialinvoke r0.<android.net.NetworkRecommendationProvider$ServiceWrapper: void enforceCallingPermission()>();

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label1;

        $r2 = new android.net.NetworkRecommendationProvider$ServiceWrapper$1;

        specialinvoke $r2.<android.net.NetworkRecommendationProvider$ServiceWrapper$1: void <init>(android.net.NetworkRecommendationProvider$ServiceWrapper,android.net.NetworkKey[])>(r0, r1);

        specialinvoke r0.<android.net.NetworkRecommendationProvider$ServiceWrapper: void execute(java.lang.Runnable)>($r2);

     label1:
        return;
    }
}
