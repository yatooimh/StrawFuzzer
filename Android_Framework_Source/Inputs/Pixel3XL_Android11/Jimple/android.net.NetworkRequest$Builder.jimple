public class android.net.NetworkRequest$Builder extends java.lang.Object
{
    private final android.net.NetworkCapabilities mNetworkCapabilities;

    public void <init>()
    {
        android.net.NetworkRequest$Builder r0;
        android.net.NetworkCapabilities $r2;
        int $i0;

        r0 := @this: android.net.NetworkRequest$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.net.NetworkCapabilities;

        specialinvoke $r2.<android.net.NetworkCapabilities: void <init>()>();

        r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities> = $r2;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setSingleUid(int)>($i0);

        return;
    }

    public android.net.NetworkRequest$Builder addCapability(int)
    {
        android.net.NetworkRequest$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkRequest$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(i0);

        return r0;
    }

    public android.net.NetworkRequest$Builder addTransportType(int)
    {
        android.net.NetworkRequest$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkRequest$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addTransportType(int)>(i0);

        return r0;
    }

    public android.net.NetworkRequest$Builder addUnwantedCapability(int)
    {
        android.net.NetworkRequest$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkRequest$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: void addUnwantedCapability(int)>(i0);

        return r0;
    }

    public android.net.NetworkRequest build()
    {
        android.net.NetworkRequest$Builder r0;
        android.net.NetworkCapabilities $r2, $r3;
        android.net.NetworkRequest $r4;
        android.net.NetworkRequest$Type $r5;

        r0 := @this: android.net.NetworkRequest$Builder;

        $r2 = new android.net.NetworkCapabilities;

        $r3 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        specialinvoke $r2.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>($r3);

        virtualinvoke $r2.<android.net.NetworkCapabilities: void maybeMarkCapabilitiesRestricted()>();

        $r4 = new android.net.NetworkRequest;

        $r5 = <android.net.NetworkRequest$Type: android.net.NetworkRequest$Type NONE>;

        specialinvoke $r4.<android.net.NetworkRequest: void <init>(android.net.NetworkCapabilities,int,int,android.net.NetworkRequest$Type)>($r2, -1, 0, $r5);

        return $r4;
    }

    public android.net.NetworkRequest$Builder clearCapabilities()
    {
        android.net.NetworkRequest$Builder r0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkRequest$Builder;

        $r1 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: void clearAll()>();

        return r0;
    }

    public android.net.NetworkRequest$Builder removeCapability(int)
    {
        android.net.NetworkRequest$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkRequest$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities removeCapability(int)>(i0);

        return r0;
    }

    public android.net.NetworkRequest$Builder removeTransportType(int)
    {
        android.net.NetworkRequest$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkRequest$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities removeTransportType(int)>(i0);

        return r0;
    }

    public android.net.NetworkRequest$Builder setCapabilities(android.net.NetworkCapabilities)
    {
        android.net.NetworkRequest$Builder r0;
        android.net.NetworkCapabilities r1, $r2;

        r0 := @this: android.net.NetworkRequest$Builder;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $r2 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r2.<android.net.NetworkCapabilities: void set(android.net.NetworkCapabilities)>(r1);

        return r0;
    }

    public android.net.NetworkRequest$Builder setLinkDownstreamBandwidthKbps(int)
    {
        android.net.NetworkRequest$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkRequest$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setLinkDownstreamBandwidthKbps(int)>(i0);

        return r0;
    }

    public android.net.NetworkRequest$Builder setLinkUpstreamBandwidthKbps(int)
    {
        android.net.NetworkRequest$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkRequest$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setLinkUpstreamBandwidthKbps(int)>(i0);

        return r0;
    }

    public android.net.NetworkRequest$Builder setNetworkSpecifier(android.net.NetworkSpecifier)
    {
        android.net.NetworkRequest$Builder r0;
        android.net.NetworkSpecifier r1;
        android.net.NetworkCapabilities $r2;

        r0 := @this: android.net.NetworkRequest$Builder;

        r1 := @parameter0: android.net.NetworkSpecifier;

        staticinvoke <android.net.MatchAllNetworkSpecifier: void checkNotMatchAllNetworkSpecifier(android.net.NetworkSpecifier)>(r1);

        $r2 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setNetworkSpecifier(android.net.NetworkSpecifier)>(r1);

        return r0;
    }

    public android.net.NetworkRequest$Builder setNetworkSpecifier(java.lang.String)
    {
        android.net.NetworkRequest$Builder r0, $r5, r8;
        int i0;
        android.net.TelephonyNetworkSpecifier$Builder $r1, r7;
        android.net.TelephonyNetworkSpecifier $r2;
        java.lang.Throwable $r3;
        boolean $z0;
        android.net.StringNetworkSpecifier $r4, r10;
        java.lang.String r6;

        r0 := @this: android.net.NetworkRequest$Builder;

        r6 := @parameter0: java.lang.String;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

        r7 = new android.net.TelephonyNetworkSpecifier$Builder;

        specialinvoke r7.<android.net.TelephonyNetworkSpecifier$Builder: void <init>()>();

        $r1 = virtualinvoke r7.<android.net.TelephonyNetworkSpecifier$Builder: android.net.TelephonyNetworkSpecifier$Builder setSubscriptionId(int)>(i0);

        $r2 = virtualinvoke $r1.<android.net.TelephonyNetworkSpecifier$Builder: android.net.TelephonyNetworkSpecifier build()>();

        r8 = virtualinvoke r0.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder setNetworkSpecifier(android.net.NetworkSpecifier)>($r2);

     label2:
        return r8;

     label3:
        $r3 := @caughtexception;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z0 == 0 goto label4;

        r10 = null;

        goto label5;

     label4:
        $r4 = new android.net.StringNetworkSpecifier;

        specialinvoke $r4.<android.net.StringNetworkSpecifier: void <init>(java.lang.String)>(r6);

        r10 = $r4;

     label5:
        $r5 = virtualinvoke r0.<android.net.NetworkRequest$Builder: android.net.NetworkRequest$Builder setNetworkSpecifier(android.net.NetworkSpecifier)>(r10);

        return $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public android.net.NetworkRequest$Builder setSignalStrength(int)
    {
        android.net.NetworkRequest$Builder r0;
        int i0;
        android.net.NetworkCapabilities $r1;

        r0 := @this: android.net.NetworkRequest$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setSignalStrength(int)>(i0);

        return r0;
    }

    public android.net.NetworkRequest$Builder setUids(java.util.Set)
    {
        android.net.NetworkRequest$Builder r0;
        java.util.Set r1;
        android.net.NetworkCapabilities $r2;

        r0 := @this: android.net.NetworkRequest$Builder;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<android.net.NetworkRequest$Builder: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r2.<android.net.NetworkCapabilities: android.net.NetworkCapabilities setUids(java.util.Set)>(r1);

        return r0;
    }
}
