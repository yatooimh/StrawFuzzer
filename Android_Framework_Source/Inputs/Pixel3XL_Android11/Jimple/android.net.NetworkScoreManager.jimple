public class android.net.NetworkScoreManager extends java.lang.Object
{
    public static final java.lang.String ACTION_CHANGE_ACTIVE;
    public static final java.lang.String ACTION_CUSTOM_ENABLE;
    public static final java.lang.String ACTION_RECOMMEND_NETWORKS;
    public static final java.lang.String ACTION_SCORER_CHANGED;
    public static final java.lang.String ACTION_SCORE_NETWORKS;
    public static final java.lang.String EXTRA_NETWORKS_TO_SCORE;
    public static final java.lang.String EXTRA_NEW_SCORER;
    public static final java.lang.String EXTRA_PACKAGE_NAME;
    public static final java.lang.String NETWORK_AVAILABLE_NOTIFICATION_CHANNEL_ID_META_DATA;
    public static final int RECOMMENDATIONS_ENABLED_FORCED_OFF;
    public static final int RECOMMENDATIONS_ENABLED_OFF;
    public static final int RECOMMENDATIONS_ENABLED_ON;
    public static final java.lang.String RECOMMENDATION_SERVICE_LABEL_META_DATA;
    public static final int SCORE_FILTER_CURRENT_NETWORK;
    public static final int SCORE_FILTER_NONE;
    public static final int SCORE_FILTER_SCAN_RESULTS;
    private static final java.lang.String TAG;
    public static final java.lang.String USE_OPEN_WIFI_PACKAGE_META_DATA;
    private final android.content.Context mContext;
    private final android.net.INetworkScoreService mService;

    public void <init>(android.content.Context) throws android.os.ServiceManager$ServiceNotFoundException
    {
        android.net.NetworkScoreManager r0;
        android.content.Context r1;
        android.os.IBinder $r2;
        android.net.INetworkScoreService $r3;

        r0 := @this: android.net.NetworkScoreManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.NetworkScoreManager: android.content.Context mContext> = r1;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("network_score");

        $r3 = staticinvoke <android.net.INetworkScoreService$Stub: android.net.INetworkScoreService asInterface(android.os.IBinder)>($r2);

        r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService> = $r3;

        return;
    }

    public boolean clearScores() throws java.lang.SecurityException
    {
        android.net.NetworkScoreManager r0;
        boolean z0;
        android.net.INetworkScoreService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.net.NetworkScoreManager;

     label1:
        $r2 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        z0 = interfaceinvoke $r2.<android.net.INetworkScoreService: boolean clearScores()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void disableScoring() throws java.lang.SecurityException
    {
        android.net.NetworkScoreManager r0;
        android.net.INetworkScoreService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.net.NetworkScoreManager;

     label1:
        $r2 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        interfaceinvoke $r2.<android.net.INetworkScoreService: void disableScoring()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.net.NetworkScorerAppData getActiveScorer()
    {
        android.net.NetworkScoreManager r0;
        android.net.INetworkScoreService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.net.NetworkScorerAppData r4;

        r0 := @this: android.net.NetworkScoreManager;

     label1:
        $r1 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        r4 = interfaceinvoke $r1.<android.net.INetworkScoreService: android.net.NetworkScorerAppData getActiveScorer()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getActiveScorerPackage()
    {
        android.net.NetworkScoreManager r0;
        android.net.INetworkScoreService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.net.NetworkScoreManager;

     label1:
        $r1 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        r4 = interfaceinvoke $r1.<android.net.INetworkScoreService: java.lang.String getActiveScorerPackage()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAllValidScorers()
    {
        android.net.NetworkScoreManager r0;
        android.net.INetworkScoreService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.util.List r4;

        r0 := @this: android.net.NetworkScoreManager;

     label1:
        $r1 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        r4 = interfaceinvoke $r1.<android.net.INetworkScoreService: java.util.List getAllValidScorers()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isCallerActiveScorer(int)
    {
        android.net.NetworkScoreManager r0;
        int i0;
        boolean z0;
        android.net.INetworkScoreService $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.net.NetworkScoreManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        z0 = interfaceinvoke $r2.<android.net.INetworkScoreService: boolean isCallerActiveScorer(int)>(i0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void registerNetworkScoreCache(int, android.net.INetworkScoreCache)
    {
        android.net.NetworkScoreManager r0;
        int i0;
        android.net.INetworkScoreCache r1;

        r0 := @this: android.net.NetworkScoreManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.INetworkScoreCache;

        virtualinvoke r0.<android.net.NetworkScoreManager: void registerNetworkScoreCache(int,android.net.INetworkScoreCache,int)>(i0, r1, 0);

        return;
    }

    public void registerNetworkScoreCache(int, android.net.INetworkScoreCache, int)
    {
        android.net.NetworkScoreManager r0;
        int i0, i1;
        android.net.INetworkScoreService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.net.INetworkScoreCache r4;

        r0 := @this: android.net.NetworkScoreManager;

        i0 := @parameter0: int;

        r4 := @parameter1: android.net.INetworkScoreCache;

        i1 := @parameter2: int;

     label1:
        $r1 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        interfaceinvoke $r1.<android.net.INetworkScoreService: void registerNetworkScoreCache(int,android.net.INetworkScoreCache,int)>(i0, r4, i1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void registerNetworkScoreCallback(int, int, java.util.concurrent.Executor, android.net.NetworkScoreManager$NetworkScoreCallback) throws java.lang.SecurityException
    {
        android.net.NetworkScoreManager r0;
        int i0, i1;
        java.util.concurrent.Executor r1;
        android.net.NetworkScoreManager$NetworkScoreCallback r2;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r10;
        android.net.NetworkScoreManager$NetworkScoreCallbackProxy $r11;

        r0 := @this: android.net.NetworkScoreManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.concurrent.Executor;

        r2 := @parameter3: android.net.NetworkScoreManager$NetworkScoreCallback;

        if r2 == null goto label1;

        if r1 == null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registerNetworkScoreCallback: callback=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", executor=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("NetworkScoreManager", $r10);

        $r11 = new android.net.NetworkScoreManager$NetworkScoreCallbackProxy;

        specialinvoke $r11.<android.net.NetworkScoreManager$NetworkScoreCallbackProxy: void <init>(android.net.NetworkScoreManager,java.util.concurrent.Executor,android.net.NetworkScoreManager$NetworkScoreCallback)>(r0, r1, r2);

        virtualinvoke r0.<android.net.NetworkScoreManager: void registerNetworkScoreCache(int,android.net.INetworkScoreCache,int)>(i0, $r11, i1);

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback / executor cannot be null");

        throw $r4;
    }

    public boolean requestScores(java.util.Collection) throws java.lang.SecurityException
    {
        android.net.NetworkScoreManager r0;
        java.util.Collection r1;
        android.net.NetworkKey[] $r2, $r4;
        java.lang.Object[] $r3;
        boolean $z0;

        r0 := @this: android.net.NetworkScoreManager;

        r1 := @parameter0: java.util.Collection;

        $r2 = newarray (android.net.NetworkKey)[0];

        $r3 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (android.net.NetworkKey[]) $r3;

        $z0 = virtualinvoke r0.<android.net.NetworkScoreManager: boolean requestScores(android.net.NetworkKey[])>($r4);

        return $z0;
    }

    public boolean requestScores(android.net.NetworkKey[]) throws java.lang.SecurityException
    {
        android.net.NetworkScoreManager r0;
        boolean z0;
        android.net.INetworkScoreService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.net.NetworkKey[] r4;

        r0 := @this: android.net.NetworkScoreManager;

        r4 := @parameter0: android.net.NetworkKey[];

     label1:
        $r1 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        z0 = interfaceinvoke $r1.<android.net.INetworkScoreService: boolean requestScores(android.net.NetworkKey[])>(r4);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setActiveScorer(java.lang.String) throws java.lang.SecurityException
    {
        android.net.NetworkScoreManager r0;
        boolean z0;
        android.net.INetworkScoreService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        java.lang.String r4;

        r0 := @this: android.net.NetworkScoreManager;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        z0 = interfaceinvoke $r1.<android.net.INetworkScoreService: boolean setActiveScorer(java.lang.String)>(r4);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterNetworkScoreCache(int, android.net.INetworkScoreCache)
    {
        android.net.NetworkScoreManager r0;
        int i0;
        android.net.INetworkScoreService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.net.INetworkScoreCache r4;

        r0 := @this: android.net.NetworkScoreManager;

        i0 := @parameter0: int;

        r4 := @parameter1: android.net.INetworkScoreCache;

     label1:
        $r1 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        interfaceinvoke $r1.<android.net.INetworkScoreService: void unregisterNetworkScoreCache(int,android.net.INetworkScoreCache)>(i0, r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean updateScores(android.net.ScoredNetwork[]) throws java.lang.SecurityException
    {
        android.net.NetworkScoreManager r0;
        boolean z0;
        android.net.INetworkScoreService $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.net.ScoredNetwork[] r4;

        r0 := @this: android.net.NetworkScoreManager;

        r4 := @parameter0: android.net.ScoredNetwork[];

     label1:
        $r1 = r0.<android.net.NetworkScoreManager: android.net.INetworkScoreService mService>;

        z0 = interfaceinvoke $r1.<android.net.INetworkScoreService: boolean updateScores(android.net.ScoredNetwork[])>(r4);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.net.NetworkScoreManager: java.lang.String USE_OPEN_WIFI_PACKAGE_META_DATA> = "android.net.wifi.use_open_wifi_package";

        <android.net.NetworkScoreManager: java.lang.String TAG> = "NetworkScoreManager";

        <android.net.NetworkScoreManager: int SCORE_FILTER_SCAN_RESULTS> = 2;

        <android.net.NetworkScoreManager: int SCORE_FILTER_NONE> = 0;

        <android.net.NetworkScoreManager: int SCORE_FILTER_CURRENT_NETWORK> = 1;

        <android.net.NetworkScoreManager: java.lang.String RECOMMENDATION_SERVICE_LABEL_META_DATA> = "android.net.scoring.recommendation_service_label";

        <android.net.NetworkScoreManager: int RECOMMENDATIONS_ENABLED_ON> = 1;

        <android.net.NetworkScoreManager: int RECOMMENDATIONS_ENABLED_OFF> = 0;

        <android.net.NetworkScoreManager: int RECOMMENDATIONS_ENABLED_FORCED_OFF> = -1;

        <android.net.NetworkScoreManager: java.lang.String NETWORK_AVAILABLE_NOTIFICATION_CHANNEL_ID_META_DATA> = "android.net.wifi.notification_channel_id_network_available";

        <android.net.NetworkScoreManager: java.lang.String EXTRA_PACKAGE_NAME> = "packageName";

        <android.net.NetworkScoreManager: java.lang.String EXTRA_NEW_SCORER> = "newScorer";

        <android.net.NetworkScoreManager: java.lang.String EXTRA_NETWORKS_TO_SCORE> = "networksToScore";

        <android.net.NetworkScoreManager: java.lang.String ACTION_SCORE_NETWORKS> = "android.net.scoring.SCORE_NETWORKS";

        <android.net.NetworkScoreManager: java.lang.String ACTION_SCORER_CHANGED> = "android.net.scoring.SCORER_CHANGED";

        <android.net.NetworkScoreManager: java.lang.String ACTION_RECOMMEND_NETWORKS> = "android.net.action.RECOMMEND_NETWORKS";

        <android.net.NetworkScoreManager: java.lang.String ACTION_CUSTOM_ENABLE> = "android.net.scoring.CUSTOM_ENABLE";

        <android.net.NetworkScoreManager: java.lang.String ACTION_CHANGE_ACTIVE> = "android.net.scoring.CHANGE_ACTIVE";

        return;
    }
}
