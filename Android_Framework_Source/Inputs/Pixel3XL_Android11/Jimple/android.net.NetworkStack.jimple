public class android.net.NetworkStack extends java.lang.Object
{
    public static final java.lang.String PERMISSION_MAINLINE_NETWORK_STACK;
    private static volatile android.os.IBinder sMockService;

    private void <init>()
    {
        android.net.NetworkStack r0;

        r0 := @this: android.net.NetworkStack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static transient boolean checkAnyPermissionOf(android.content.Context, java.lang.String[])
    {
        android.content.Context r0;
        java.lang.String[] r1;
        int i0, $i1, i2;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String[];

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $r2 = r1[i2];

        $i1 = virtualinvoke r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>($r2);

        if $i1 != 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static void checkNetworkStackPermission(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String[] $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = newarray (java.lang.String)[0];

        staticinvoke <android.net.NetworkStack: void checkNetworkStackPermissionOr(android.content.Context,java.lang.String[])>(r0, $r1);

        return;
    }

    public static transient void checkNetworkStackPermissionOr(android.content.Context, java.lang.String[])
    {
        android.content.Context r0;
        java.util.ArrayList $r1;
        java.util.List $r2;
        java.lang.String[] $r3, $r5, r6;
        java.lang.Object[] $r4;

        r0 := @parameter0: android.content.Context;

        r6 := @parameter1: java.lang.String[];

        $r1 = new java.util.ArrayList;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r6);

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>("android.permission.NETWORK_STACK");

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>("android.permission.MAINLINE_NETWORK_STACK");

        $r3 = newarray (java.lang.String)[0];

        $r4 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        staticinvoke <android.net.NetworkStack: void enforceAnyPermissionOf(android.content.Context,java.lang.String[])>(r0, $r5);

        return;
    }

    private static transient void enforceAnyPermissionOf(android.content.Context, java.lang.String[])
    {
        java.lang.String[] r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r7;
        java.lang.SecurityException $r6;
        android.content.Context r8;

        r8 := @parameter0: android.content.Context;

        r0 := @parameter1: java.lang.String[];

        $z0 = staticinvoke <android.net.NetworkStack: boolean checkAnyPermissionOf(android.content.Context,java.lang.String[])>(r8, r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requires one of the following permissions: ");

        $r3 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>(", ", r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static android.os.IBinder getService()
    {
        android.os.IBinder r0, $r1;

        r0 = <android.net.NetworkStack: android.os.IBinder sMockService>;

        if r0 == null goto label1;

        return r0;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("network_stack");

        return $r1;
    }

    public static void setServiceForTest(android.os.IBinder)
    {
        android.os.IBinder r0;

        r0 := @parameter0: android.os.IBinder;

        <android.net.NetworkStack: android.os.IBinder sMockService> = r0;

        return;
    }

    public static void <clinit>()
    {
        <android.net.NetworkStack: java.lang.String PERMISSION_MAINLINE_NETWORK_STACK> = "android.permission.MAINLINE_NETWORK_STACK";

        return;
    }
}
