public class android.net.NetworkStatsHistory$DataStreamUtils extends java.lang.Object
{

    public void <init>()
    {
        android.net.NetworkStatsHistory$DataStreamUtils r0;

        r0 := @this: android.net.NetworkStatsHistory$DataStreamUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long[] readFullLongArray(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        long[] r1;
        java.net.ProtocolException $r2;
        int $i0, i2, i3;
        long $l1;

        r0 := @parameter0: java.io.DataInputStream;

        i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        if i2 < 0 goto label3;

        r1 = newarray (long)[i2];

        i3 = 0;

     label1:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label2;

        $l1 = virtualinvoke r0.<java.io.DataInputStream: long readLong()>();

        r1[i3] = $l1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;

     label3:
        $r2 = new java.net.ProtocolException;

        specialinvoke $r2.<java.net.ProtocolException: void <init>(java.lang.String)>("negative array size");

        throw $r2;
    }

    public static long readVarLong(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte b0, $b1;
        java.net.ProtocolException $r1;
        long $l2, $l3, l6;
        short $s4;
        int i5;

        r0 := @parameter0: java.io.DataInputStream;

        i5 = 0;

        l6 = 0L;

     label1:
        if i5 >= 64 goto label3;

        b0 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        $b1 = b0 & 127;

        $l2 = (long) $b1;

        $l3 = $l2 << i5;

        l6 = l6 | $l3;

        $s4 = b0 & 128;

        if $s4 != 0 goto label2;

        return l6;

     label2:
        i5 = i5 + 7;

        goto label1;

     label3:
        $r1 = new java.net.ProtocolException;

        specialinvoke $r1.<java.net.ProtocolException: void <init>(java.lang.String)>("malformed long");

        throw $r1;
    }

    public static long[] readVarLongArray(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        long[] r1;
        java.net.ProtocolException $r2;
        int $i0, i2, i3;
        long $l1;

        r0 := @parameter0: java.io.DataInputStream;

        i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        if i2 != -1 goto label1;

        return null;

     label1:
        if i2 < 0 goto label4;

        r1 = newarray (long)[i2];

        i3 = 0;

     label2:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label3;

        $l1 = staticinvoke <android.net.NetworkStatsHistory$DataStreamUtils: long readVarLong(java.io.DataInputStream)>(r0);

        r1[i3] = $l1;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r1;

     label4:
        $r2 = new java.net.ProtocolException;

        specialinvoke $r2.<java.net.ProtocolException: void <init>(java.lang.String)>("negative array size");

        throw $r2;
    }

    public static void writeVarLong(java.io.DataOutputStream, long) throws java.io.IOException
    {
        java.io.DataOutputStream r0;
        long $l0, l6;
        byte $b1;
        int $i2, $i3, $i4, $i5;

        r0 := @parameter0: java.io.DataOutputStream;

        l6 := @parameter1: long;

     label1:
        $l0 = -128L & l6;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $i5 = (int) l6;

        virtualinvoke r0.<java.io.DataOutputStream: void writeByte(int)>($i5);

        return;

     label2:
        $i2 = (int) l6;

        $i3 = $i2 & 127;

        $i4 = $i3 | 128;

        virtualinvoke r0.<java.io.DataOutputStream: void writeByte(int)>($i4);

        l6 = l6 >>> 7;

        goto label1;
    }

    public static void writeVarLongArray(java.io.DataOutputStream, long[], int) throws java.io.IOException
    {
        java.io.DataOutputStream r0;
        long[] r1;
        int i0, $i1, i3;
        java.lang.IllegalArgumentException $r2;
        long $l2;

        r0 := @parameter0: java.io.DataOutputStream;

        r1 := @parameter1: long[];

        i0 := @parameter2: int;

        if r1 != null goto label1;

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>(-1);

        return;

     label1:
        $i1 = lengthof r1;

        if i0 > $i1 goto label4;

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>(i0);

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $l2 = r1[i3];

        staticinvoke <android.net.NetworkStatsHistory$DataStreamUtils: void writeVarLong(java.io.DataOutputStream,long)>(r0, $l2);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size larger than length");

        throw $r2;
    }
}
