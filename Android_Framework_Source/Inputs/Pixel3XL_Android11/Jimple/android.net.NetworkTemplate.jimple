public class android.net.NetworkTemplate extends java.lang.Object implements android.os.Parcelable
{
    private static final int BACKUP_VERSION;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int MATCH_BLUETOOTH;
    public static final int MATCH_ETHERNET;
    public static final int MATCH_MOBILE;
    public static final int MATCH_MOBILE_WILDCARD;
    public static final int MATCH_PROXY;
    public static final int MATCH_WIFI;
    public static final int MATCH_WIFI_WILDCARD;
    public static final int NETWORK_TYPE_5G_NSA;
    public static final int NETWORK_TYPE_ALL;
    private static final java.lang.String TAG;
    private static boolean sForceAllNetworkTypes;
    private final int mDefaultNetwork;
    private final int mMatchRule;
    private final java.lang.String[] mMatchSubscriberIds;
    private final int mMetered;
    private final java.lang.String mNetworkId;
    private final int mRoaming;
    private final int mSubType;
    private final java.lang.String mSubscriberId;

    static void <clinit>()
    {
        android.net.NetworkTemplate$1 $r0;

        <android.net.NetworkTemplate: java.lang.String TAG> = "NetworkTemplate";

        <android.net.NetworkTemplate: int NETWORK_TYPE_ALL> = -1;

        <android.net.NetworkTemplate: int NETWORK_TYPE_5G_NSA> = -2;

        <android.net.NetworkTemplate: int MATCH_WIFI_WILDCARD> = 7;

        <android.net.NetworkTemplate: int MATCH_WIFI> = 4;

        <android.net.NetworkTemplate: int MATCH_PROXY> = 9;

        <android.net.NetworkTemplate: int MATCH_MOBILE_WILDCARD> = 6;

        <android.net.NetworkTemplate: int MATCH_MOBILE> = 1;

        <android.net.NetworkTemplate: int MATCH_ETHERNET> = 5;

        <android.net.NetworkTemplate: int MATCH_BLUETOOTH> = 8;

        <android.net.NetworkTemplate: int BACKUP_VERSION> = 1;

        <android.net.NetworkTemplate: boolean sForceAllNetworkTypes> = 0;

        $r0 = new android.net.NetworkTemplate$1;

        specialinvoke $r0.<android.net.NetworkTemplate$1: void <init>()>();

        <android.net.NetworkTemplate: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(int, java.lang.String, java.lang.String)
    {
        android.net.NetworkTemplate r0;
        int i0;
        java.lang.String r1, r2;
        java.lang.String[] $r3;

        r0 := @this: android.net.NetworkTemplate;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r1;

        specialinvoke r0.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String[],java.lang.String)>(i0, r1, $r3, r2);

        return;
    }

    public void <init>(int, java.lang.String, java.lang.String[], java.lang.String)
    {
        android.net.NetworkTemplate r0;
        int i0;
        java.lang.String r1, r3;
        java.lang.String[] r2;

        r0 := @this: android.net.NetworkTemplate;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String[],java.lang.String,int,int,int,int)>(i0, r1, r2, r3, -1, -1, -1, -1);

        return;
    }

    public void <init>(int, java.lang.String, java.lang.String[], java.lang.String, int, int, int, int)
    {
        android.net.NetworkTemplate r0;
        int i0, i1, i2, i3, i4;
        java.lang.String[] r1;
        java.lang.String r2, $r7, r8;
        boolean $z0;
        java.lang.StringBuilder $r3;

        r0 := @this: android.net.NetworkTemplate;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String[];

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.NetworkTemplate: int mMatchRule> = i0;

        r0.<android.net.NetworkTemplate: java.lang.String mSubscriberId> = r8;

        r0.<android.net.NetworkTemplate: java.lang.String[] mMatchSubscriberIds> = r1;

        r0.<android.net.NetworkTemplate: java.lang.String mNetworkId> = r2;

        r0.<android.net.NetworkTemplate: int mMetered> = i1;

        r0.<android.net.NetworkTemplate: int mRoaming> = i2;

        r0.<android.net.NetworkTemplate: int mDefaultNetwork> = i3;

        r0.<android.net.NetworkTemplate: int mSubType> = i4;

        $z0 = staticinvoke <android.net.NetworkTemplate: boolean isKnownMatchRule(int)>(i0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown network template rule ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" will not match any identity.");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NetworkTemplate", $r7);

     label1:
        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.net.NetworkTemplate r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r4;
        java.lang.String[] $r3;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.net.NetworkTemplate: int mMatchRule> = $i0;

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.net.NetworkTemplate: java.lang.String mSubscriberId> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        r0.<android.net.NetworkTemplate: java.lang.String[] mMatchSubscriberIds> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.net.NetworkTemplate: java.lang.String mNetworkId> = $r4;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.net.NetworkTemplate: int mMetered> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.net.NetworkTemplate: int mRoaming> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.net.NetworkTemplate: int mDefaultNetwork> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.net.NetworkTemplate: int mSubType> = $i4;

        return;
    }

    void <init>(android.os.Parcel, android.net.NetworkTemplate$1)
    {
        android.net.NetworkTemplate r0;
        android.os.Parcel r1;
        android.net.NetworkTemplate$1 r2;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.net.NetworkTemplate$1;

        specialinvoke r0.<android.net.NetworkTemplate: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public static android.net.NetworkTemplate buildTemplateBluetooth()
    {
        android.net.NetworkTemplate $r0;

        $r0 = new android.net.NetworkTemplate;

        specialinvoke $r0.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>(8, null, null);

        return $r0;
    }

    public static android.net.NetworkTemplate buildTemplateEthernet()
    {
        android.net.NetworkTemplate $r0;

        $r0 = new android.net.NetworkTemplate;

        specialinvoke $r0.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>(5, null, null);

        return $r0;
    }

    public static android.net.NetworkTemplate buildTemplateMobileAll(java.lang.String)
    {
        java.lang.String r0;
        android.net.NetworkTemplate $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.net.NetworkTemplate;

        specialinvoke $r1.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>(1, r0, null);

        return $r1;
    }

    public static android.net.NetworkTemplate buildTemplateMobileWildcard()
    {
        android.net.NetworkTemplate $r0;

        $r0 = new android.net.NetworkTemplate;

        specialinvoke $r0.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>(6, null, null);

        return $r0;
    }

    public static android.net.NetworkTemplate buildTemplateMobileWithRatType(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        boolean $z0;
        android.net.NetworkTemplate $r1, $r3;
        java.lang.String[] $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r3 = new android.net.NetworkTemplate;

        specialinvoke $r3.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String[],java.lang.String,int,int,int,int)>(6, null, null, null, -1, -1, -1, i0);

        return $r3;

     label1:
        $r1 = new android.net.NetworkTemplate;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = r0;

        specialinvoke $r1.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String[],java.lang.String,int,int,int,int)>(1, r0, $r2, null, -1, -1, -1, i0);

        return $r1;
    }

    public static android.net.NetworkTemplate buildTemplateProxy()
    {
        android.net.NetworkTemplate $r0;

        $r0 = new android.net.NetworkTemplate;

        specialinvoke $r0.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>(9, null, null);

        return $r0;
    }

    public static android.net.NetworkTemplate buildTemplateWifi()
    {
        android.net.NetworkTemplate $r0;

        $r0 = staticinvoke <android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifiWildcard()>();

        return $r0;
    }

    public static android.net.NetworkTemplate buildTemplateWifi(java.lang.String)
    {
        java.lang.String r0;
        android.net.NetworkTemplate $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.net.NetworkTemplate;

        specialinvoke $r1.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>(4, null, r0);

        return $r1;
    }

    public static android.net.NetworkTemplate buildTemplateWifiWildcard()
    {
        android.net.NetworkTemplate $r0;

        $r0 = new android.net.NetworkTemplate;

        specialinvoke $r0.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>(7, null, null);

        return $r0;
    }

    public static void forceAllNetworkTypes()
    {
        <android.net.NetworkTemplate: boolean sForceAllNetworkTypes> = 1;

        return;
    }

    public static final int[] getAllCollapsedRatTypes()
    {
        int[] r0, $r4;
        int i0, $i1, $i2, i3;
        java.util.HashSet $r2;
        java.lang.Integer $r3, $r5;

        r0 = staticinvoke <android.telephony.TelephonyManager: int[] getAllNetworkTypes()>();

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i1 = r0[i3];

        $i2 = staticinvoke <android.net.NetworkTemplate: int getCollapsedRatType(int)>($i1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        $r4 = staticinvoke <android.net.NetworkTemplate: int[] toIntArray(java.util.Collection)>($r2);

        return $r4;
    }

    public static int getCollapsedRatType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == -2 goto label6;

        if i0 == 20 goto label5;

        tableswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label4;
            case 8: goto label3;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label4;
            case 12: goto label3;
            case 13: goto label2;
            case 14: goto label3;
            case 15: goto label3;
            case 16: goto label4;
            case 17: goto label3;
            case 18: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 13;

     label3:
        return 3;

     label4:
        return 16;

     label5:
        return 20;

     label6:
        return -2;
    }

    private static java.lang.String getMatchRuleName(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 1 goto label8;

        tableswitch(i0)
        {
            case 4: goto label7;
            case 5: goto label6;
            case 6: goto label5;
            case 7: goto label4;
            case 8: goto label3;
            case 9: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label2:
        return "PROXY";

     label3:
        return "BLUETOOTH";

     label4:
        return "WIFI_WILDCARD";

     label5:
        return "MOBILE_WILDCARD";

     label6:
        return "ETHERNET";

     label7:
        return "WIFI";

     label8:
        return "MOBILE";
    }

    public static android.net.NetworkTemplate getNetworkTemplateFromBackup(java.io.DataInputStream) throws java.io.IOException, android.util.BackupUtils$BadVersionException
    {
        java.lang.String r0, $r6, r9;
        android.util.BackupUtils$BadVersionException $r1, $r5;
        boolean $z0;
        java.lang.StringBuilder $r2;
        android.net.NetworkTemplate $r7;
        java.io.DataInputStream r8;
        int i0, i1;

        r8 := @parameter0: java.io.DataInputStream;

        i0 = virtualinvoke r8.<java.io.DataInputStream: int readInt()>();

        if i0 < 1 goto label2;

        if i0 > 1 goto label2;

        i1 = virtualinvoke r8.<java.io.DataInputStream: int readInt()>();

        r0 = staticinvoke <android.util.BackupUtils: java.lang.String readString(java.io.DataInputStream)>(r8);

        r9 = staticinvoke <android.util.BackupUtils: java.lang.String readString(java.io.DataInputStream)>(r8);

        $z0 = staticinvoke <android.net.NetworkTemplate: boolean isKnownMatchRule(int)>(i1);

        if $z0 == 0 goto label1;

        $r7 = new android.net.NetworkTemplate;

        specialinvoke $r7.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>(i1, r0, r9);

        return $r7;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restored network template contains unknown match rule ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = new android.util.BackupUtils$BadVersionException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.util.BackupUtils$BadVersionException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        $r1 = new android.util.BackupUtils$BadVersionException;

        specialinvoke $r1.<android.util.BackupUtils$BadVersionException: void <init>(java.lang.String)>("Unknown Backup Serialization Version");

        throw $r1;
    }

    private static boolean isKnownMatchRule(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        tableswitch(i0)
        {
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean matchesBluetooth(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int $i0;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        $i0 = r1.<android.net.NetworkIdentity: int mType>;

        if $i0 != 7 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean matchesCollapsedRatType(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        i0 = r0.<android.net.NetworkTemplate: int mSubType>;

        if i0 == -1 goto label2;

        $i1 = staticinvoke <android.net.NetworkTemplate: int getCollapsedRatType(int)>(i0);

        $i2 = r1.<android.net.NetworkIdentity: int mSubType>;

        $i3 = staticinvoke <android.net.NetworkTemplate: int getCollapsedRatType(int)>($i2);

        if $i1 != $i3 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private boolean matchesDefaultNetwork(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int i0, $i1;
        boolean $z1, $z2, z3;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        i0 = r0.<android.net.NetworkTemplate: int mDefaultNetwork>;

        z3 = 1;

        if i0 == -1 goto label3;

        if i0 != 1 goto label1;

        z3 = 1;

        $z2 = r1.<android.net.NetworkIdentity: boolean mDefaultNetwork>;

        if $z2 != 0 goto label3;

     label1:
        $i1 = r0.<android.net.NetworkTemplate: int mDefaultNetwork>;

        if $i1 != 0 goto label2;

        $z1 = r1.<android.net.NetworkIdentity: boolean mDefaultNetwork>;

        if $z1 != 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    private boolean matchesEthernet(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int $i0;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        $i0 = r1.<android.net.NetworkIdentity: int mType>;

        if $i0 != 9 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean matchesMetered(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int i0, $i1;
        boolean $z1, $z2, z3;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        i0 = r0.<android.net.NetworkTemplate: int mMetered>;

        z3 = 1;

        if i0 == -1 goto label3;

        if i0 != 1 goto label1;

        z3 = 1;

        $z2 = r1.<android.net.NetworkIdentity: boolean mMetered>;

        if $z2 != 0 goto label3;

     label1:
        $i1 = r0.<android.net.NetworkTemplate: int mMetered>;

        if $i1 != 0 goto label2;

        $z1 = r1.<android.net.NetworkIdentity: boolean mMetered>;

        if $z1 != 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    private boolean matchesMobile(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.lang.String[] $r2, $r4;
        java.lang.String $r3;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        i0 = r1.<android.net.NetworkIdentity: int mType>;

        z5 = 1;

        if i0 != 6 goto label1;

        return 1;

     label1:
        $z0 = <android.net.NetworkTemplate: boolean sForceAllNetworkTypes>;

        if $z0 != 0 goto label2;

        $i1 = r1.<android.net.NetworkIdentity: int mType>;

        if $i1 != 0 goto label3;

        $z4 = r1.<android.net.NetworkIdentity: boolean mMetered>;

        if $z4 == 0 goto label3;

     label2:
        $r2 = r0.<android.net.NetworkTemplate: java.lang.String[] mMatchSubscriberIds>;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r2);

        if $z1 != 0 goto label3;

        $r4 = r0.<android.net.NetworkTemplate: java.lang.String[] mMatchSubscriberIds>;

        $r3 = r1.<android.net.NetworkIdentity: java.lang.String mSubscriberId>;

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>($r4, $r3);

        if $z2 == 0 goto label3;

        $z3 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesCollapsedRatType(android.net.NetworkIdentity)>(r1);

        if $z3 == 0 goto label3;

        goto label4;

     label3:
        z5 = 0;

     label4:
        return z5;
    }

    private boolean matchesMobileWildcard(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int i0, $i1;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        i0 = r1.<android.net.NetworkIdentity: int mType>;

        z3 = 1;

        if i0 != 6 goto label1;

        return 1;

     label1:
        $z0 = <android.net.NetworkTemplate: boolean sForceAllNetworkTypes>;

        if $z0 != 0 goto label2;

        $i1 = r1.<android.net.NetworkIdentity: int mType>;

        if $i1 != 0 goto label3;

        $z2 = r1.<android.net.NetworkIdentity: boolean mMetered>;

        if $z2 == 0 goto label3;

     label2:
        $z1 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesCollapsedRatType(android.net.NetworkIdentity)>(r1);

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        z3 = 0;

     label4:
        return z3;
    }

    private boolean matchesProxy(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int $i0;
        boolean z0;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        $i0 = r1.<android.net.NetworkIdentity: int mType>;

        if $i0 != 16 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean matchesRoaming(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int i0, $i1;
        boolean $z1, $z2, z3;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        i0 = r0.<android.net.NetworkTemplate: int mRoaming>;

        z3 = 1;

        if i0 == -1 goto label3;

        if i0 != 1 goto label1;

        z3 = 1;

        $z2 = r1.<android.net.NetworkIdentity: boolean mRoaming>;

        if $z2 != 0 goto label3;

     label1:
        $i1 = r0.<android.net.NetworkTemplate: int mRoaming>;

        if $i1 != 0 goto label2;

        $z1 = r1.<android.net.NetworkIdentity: boolean mRoaming>;

        if $z1 != 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    private boolean matchesWifi(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        $i0 = r1.<android.net.NetworkIdentity: int mType>;

        if $i0 == 1 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.net.NetworkTemplate: java.lang.String mNetworkId>;

        $r3 = staticinvoke <android.net.wifi.WifiInfo: java.lang.String sanitizeSsid(java.lang.String)>($r2);

        $r4 = r1.<android.net.NetworkIdentity: java.lang.String mNetworkId>;

        $r5 = staticinvoke <android.net.wifi.WifiInfo: java.lang.String sanitizeSsid(java.lang.String)>($r4);

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r5);

        return $z0;
    }

    private boolean matchesWifiWildcard(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int i0;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        i0 = r1.<android.net.NetworkIdentity: int mType>;

        if i0 == 1 goto label1;

        if i0 == 13 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static android.net.NetworkTemplate normalize(android.net.NetworkTemplate, java.util.List)
    {
        android.net.NetworkTemplate r0, $r4;
        java.lang.String[] r1;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2;
        java.lang.String $r3, $r5, $r6;
        int $i0;
        java.util.List r7;
        java.util.Iterator r8;

        r0 := @parameter0: android.net.NetworkTemplate;

        r7 := @parameter1: java.util.List;

        $z0 = virtualinvoke r0.<android.net.NetworkTemplate: boolean isMatchRuleMobile()>();

        if $z0 != 0 goto label1;

        return r0;

     label1:
        r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r2 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String[]) $r2;

        $r3 = r0.<android.net.NetworkTemplate: java.lang.String mSubscriberId>;

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r1, $r3);

        if $z2 == 0 goto label3;

        $r4 = new android.net.NetworkTemplate;

        $i0 = r0.<android.net.NetworkTemplate: int mMatchRule>;

        $r6 = r1[0];

        $r5 = r0.<android.net.NetworkTemplate: java.lang.String mNetworkId>;

        specialinvoke $r4.<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String[],java.lang.String)>($i0, $r6, r1, $r5);

        return $r4;

     label3:
        goto label2;

     label4:
        return r0;
    }

    public static android.net.NetworkTemplate normalize(android.net.NetworkTemplate, java.lang.String[])
    {
        android.net.NetworkTemplate r0, $r4;
        java.lang.String[] r1;
        java.lang.String[][] $r2;
        java.util.List $r3;

        r0 := @parameter0: android.net.NetworkTemplate;

        r1 := @parameter1: java.lang.String[];

        $r2 = newarray (java.lang.String[])[1];

        $r2[0] = r1;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r4 = staticinvoke <android.net.NetworkTemplate: android.net.NetworkTemplate normalize(android.net.NetworkTemplate,java.util.List)>(r0, $r3);

        return $r4;
    }

    public static void resetForceAllNetworkTypes()
    {
        <android.net.NetworkTemplate: boolean sForceAllNetworkTypes> = 0;

        return;
    }

    private static int[] toIntArray(java.util.Collection)
    {
        int[] r0;
        int $i0, $i1, i2;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.Integer $r2;
        java.util.Collection r3;
        java.util.Iterator r4;

        r3 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r3.<java.util.Collection: int size()>();

        r0 = newarray (int)[$i0];

        i2 = 0;

        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.Integer) $r1;

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        r0[i2] = $i1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    public int describeContents()
    {
        android.net.NetworkTemplate r0;

        r0 := @this: android.net.NetworkTemplate;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.NetworkTemplate r0, r6;
        boolean z0, $z1, $z2, z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r1, $r2, $r3, $r4;
        java.lang.Object r5;

        r0 := @this: android.net.NetworkTemplate;

        r5 := @parameter0: java.lang.Object;

        z0 = r5 instanceof android.net.NetworkTemplate;

        z3 = 0;

        if z0 == 0 goto label2;

        r6 = (android.net.NetworkTemplate) r5;

        $i1 = r0.<android.net.NetworkTemplate: int mMatchRule>;

        $i0 = r6.<android.net.NetworkTemplate: int mMatchRule>;

        if $i1 != $i0 goto label1;

        $r2 = r0.<android.net.NetworkTemplate: java.lang.String mSubscriberId>;

        $r1 = r6.<android.net.NetworkTemplate: java.lang.String mSubscriberId>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z1 == 0 goto label1;

        $r4 = r0.<android.net.NetworkTemplate: java.lang.String mNetworkId>;

        $r3 = r6.<android.net.NetworkTemplate: java.lang.String mNetworkId>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 == 0 goto label1;

        $i3 = r0.<android.net.NetworkTemplate: int mMetered>;

        $i2 = r6.<android.net.NetworkTemplate: int mMetered>;

        if $i3 != $i2 goto label1;

        $i5 = r0.<android.net.NetworkTemplate: int mRoaming>;

        $i4 = r6.<android.net.NetworkTemplate: int mRoaming>;

        if $i5 != $i4 goto label1;

        $i7 = r0.<android.net.NetworkTemplate: int mDefaultNetwork>;

        $i6 = r6.<android.net.NetworkTemplate: int mDefaultNetwork>;

        if $i7 != $i6 goto label1;

        $i9 = r0.<android.net.NetworkTemplate: int mSubType>;

        $i8 = r6.<android.net.NetworkTemplate: int mSubType>;

        if $i9 != $i8 goto label1;

        z3 = 1;

        goto label1;

     label1:
        return z3;

     label2:
        return 0;
    }

    public byte[] getBytesForBackup() throws java.io.IOException
    {
        android.net.NetworkTemplate r0;
        java.io.ByteArrayOutputStream $r3;
        java.io.DataOutputStream $r4;
        int $i0;
        java.lang.String $r5, $r6;
        byte[] $r7;

        r0 := @this: android.net.NetworkTemplate;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = new java.io.DataOutputStream;

        specialinvoke $r4.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r3);

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(1);

        $i0 = r0.<android.net.NetworkTemplate: int mMatchRule>;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $r5 = r0.<android.net.NetworkTemplate: java.lang.String mSubscriberId>;

        staticinvoke <android.util.BackupUtils: void writeString(java.io.DataOutputStream,java.lang.String)>($r4, $r5);

        $r6 = r0.<android.net.NetworkTemplate: java.lang.String mNetworkId>;

        staticinvoke <android.util.BackupUtils: void writeString(java.io.DataOutputStream,java.lang.String)>($r4, $r6);

        $r7 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r7;
    }

    public int getMatchRule()
    {
        android.net.NetworkTemplate r0;
        int $i0;

        r0 := @this: android.net.NetworkTemplate;

        $i0 = r0.<android.net.NetworkTemplate: int mMatchRule>;

        return $i0;
    }

    public java.lang.String getNetworkId()
    {
        android.net.NetworkTemplate r0;
        java.lang.String $r1;

        r0 := @this: android.net.NetworkTemplate;

        $r1 = r0.<android.net.NetworkTemplate: java.lang.String mNetworkId>;

        return $r1;
    }

    public java.lang.String getSubscriberId()
    {
        android.net.NetworkTemplate r0;
        java.lang.String $r1;

        r0 := @this: android.net.NetworkTemplate;

        $r1 = r0.<android.net.NetworkTemplate: java.lang.String mSubscriberId>;

        return $r1;
    }

    public int hashCode()
    {
        android.net.NetworkTemplate r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Integer $r2, $r5, $r6, $r7, $r8;
        java.lang.String $r3, $r4;

        r0 := @this: android.net.NetworkTemplate;

        $r1 = newarray (java.lang.Object)[7];

        $i0 = r0.<android.net.NetworkTemplate: int mMatchRule>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = r0.<android.net.NetworkTemplate: java.lang.String mSubscriberId>;

        $r1[1] = $r3;

        $r4 = r0.<android.net.NetworkTemplate: java.lang.String mNetworkId>;

        $r1[2] = $r4;

        $i1 = r0.<android.net.NetworkTemplate: int mMetered>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[3] = $r5;

        $i2 = r0.<android.net.NetworkTemplate: int mRoaming>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[4] = $r6;

        $i3 = r0.<android.net.NetworkTemplate: int mDefaultNetwork>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[5] = $r7;

        $i4 = r0.<android.net.NetworkTemplate: int mSubType>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[6] = $r8;

        $i5 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i5;
    }

    public boolean isMatchRuleMobile()
    {
        android.net.NetworkTemplate r0;
        int i0;

        r0 := @this: android.net.NetworkTemplate;

        i0 = r0.<android.net.NetworkTemplate: int mMatchRule>;

        if i0 == 1 goto label1;

        if i0 == 6 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isPersistable()
    {
        android.net.NetworkTemplate r0;
        int i0;

        r0 := @this: android.net.NetworkTemplate;

        i0 = r0.<android.net.NetworkTemplate: int mMatchRule>;

        if i0 == 6 goto label1;

        if i0 == 7 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean matches(android.net.NetworkIdentity)
    {
        android.net.NetworkTemplate r0;
        android.net.NetworkIdentity r1;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.net.NetworkIdentity;

        $z0 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesMetered(android.net.NetworkIdentity)>(r1);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $z1 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesRoaming(android.net.NetworkIdentity)>(r1);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        $z2 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesDefaultNetwork(android.net.NetworkIdentity)>(r1);

        if $z2 != 0 goto label03;

        return 0;

     label03:
        i0 = r0.<android.net.NetworkTemplate: int mMatchRule>;

        if i0 == 1 goto label11;

        tableswitch(i0)
        {
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            case 8: goto label06;
            case 9: goto label05;
            default: goto label04;
        };

     label04:
        return 0;

     label05:
        $z4 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesProxy(android.net.NetworkIdentity)>(r1);

        return $z4;

     label06:
        $z5 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesBluetooth(android.net.NetworkIdentity)>(r1);

        return $z5;

     label07:
        $z6 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesWifiWildcard(android.net.NetworkIdentity)>(r1);

        return $z6;

     label08:
        $z7 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesMobileWildcard(android.net.NetworkIdentity)>(r1);

        return $z7;

     label09:
        $z8 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesEthernet(android.net.NetworkIdentity)>(r1);

        return $z8;

     label10:
        $z9 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesWifi(android.net.NetworkIdentity)>(r1);

        return $z9;

     label11:
        $z3 = specialinvoke r0.<android.net.NetworkTemplate: boolean matchesMobile(android.net.NetworkIdentity)>(r1);

        return $z3;
    }

    public boolean matchesSubscriberId(java.lang.String)
    {
        android.net.NetworkTemplate r0;
        java.lang.String r1;
        java.lang.String[] $r2;
        boolean $z0;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.NetworkTemplate: java.lang.String[] mMatchSubscriberIds>;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>($r2, r1);

        return $z0;
    }

    public java.lang.String toString()
    {
        android.net.NetworkTemplate r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r4, $r6, $r8, $r9, $r13, $r16, $r19, $r22, $r27, $r30, $r31;
        java.lang.String[] $r7, $r25, $r26;

        r0 := @this: android.net.NetworkTemplate;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("NetworkTemplate: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("matchRule=");

        $i0 = r0.<android.net.NetworkTemplate: int mMatchRule>;

        $r4 = staticinvoke <android.net.NetworkTemplate: java.lang.String getMatchRuleName(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r0.<android.net.NetworkTemplate: java.lang.String mSubscriberId>;

        if $r6 == null goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", subscriberId=");

        $r30 = r0.<android.net.NetworkTemplate: java.lang.String mSubscriberId>;

        $r31 = staticinvoke <android.net.NetworkIdentity: java.lang.String scrubSubscriberId(java.lang.String)>($r30);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

     label1:
        $r7 = r0.<android.net.NetworkTemplate: java.lang.String[] mMatchSubscriberIds>;

        if $r7 == null goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", matchSubscriberIds=");

        $r25 = r0.<android.net.NetworkTemplate: java.lang.String[] mMatchSubscriberIds>;

        $r26 = staticinvoke <android.net.NetworkIdentity: java.lang.String[] scrubSubscriberId(java.lang.String[])>($r25);

        $r27 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r26);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

     label2:
        $r8 = r0.<android.net.NetworkTemplate: java.lang.String mNetworkId>;

        if $r8 == null goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", networkId=");

        $r22 = r0.<android.net.NetworkTemplate: java.lang.String mNetworkId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label3:
        $i1 = r0.<android.net.NetworkTemplate: int mMetered>;

        if $i1 == -1 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", metered=");

        $i8 = r0.<android.net.NetworkTemplate: int mMetered>;

        $r19 = staticinvoke <android.net.NetworkStats: java.lang.String meteredToString(int)>($i8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label4:
        $i2 = r0.<android.net.NetworkTemplate: int mRoaming>;

        if $i2 == -1 goto label5;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", roaming=");

        $i7 = r0.<android.net.NetworkTemplate: int mRoaming>;

        $r16 = staticinvoke <android.net.NetworkStats: java.lang.String roamingToString(int)>($i7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label5:
        $i3 = r0.<android.net.NetworkTemplate: int mDefaultNetwork>;

        if $i3 == -1 goto label6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultNetwork=");

        $i6 = r0.<android.net.NetworkTemplate: int mDefaultNetwork>;

        $r13 = staticinvoke <android.net.NetworkStats: java.lang.String defaultNetworkToString(int)>($i6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label6:
        $i4 = r0.<android.net.NetworkTemplate: int mSubType>;

        if $i4 == -1 goto label7;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", subType=");

        $i5 = r0.<android.net.NetworkTemplate: int mSubType>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

     label7:
        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.NetworkTemplate r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2, $r4;
        java.lang.String[] $r3;

        r0 := @this: android.net.NetworkTemplate;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.net.NetworkTemplate: int mMatchRule>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<android.net.NetworkTemplate: java.lang.String mSubscriberId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.net.NetworkTemplate: java.lang.String[] mMatchSubscriberIds>;

        virtualinvoke r1.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r3);

        $r4 = r0.<android.net.NetworkTemplate: java.lang.String mNetworkId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $i2 = r0.<android.net.NetworkTemplate: int mMetered>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.net.NetworkTemplate: int mRoaming>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.net.NetworkTemplate: int mDefaultNetwork>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.net.NetworkTemplate: int mSubType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        return;
    }
}
