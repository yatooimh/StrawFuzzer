public class android.net.NetworkWatchlistManager extends java.lang.Object
{
    private static final java.lang.String SHARED_MEMORY_TAG;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final com.android.internal.net.INetworkWatchlistManager mNetworkWatchlistManager;

    public void <init>(android.content.Context)
    {
        android.net.NetworkWatchlistManager r0;
        android.content.Context r1, $r3;
        java.lang.Object $r2;
        android.os.IBinder $r4;
        com.android.internal.net.INetworkWatchlistManager $r5;

        r0 := @this: android.net.NetworkWatchlistManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "missing context");

        $r3 = (android.content.Context) $r2;

        r0.<android.net.NetworkWatchlistManager: android.content.Context mContext> = $r3;

        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("network_watchlist");

        $r5 = staticinvoke <com.android.internal.net.INetworkWatchlistManager$Stub: com.android.internal.net.INetworkWatchlistManager asInterface(android.os.IBinder)>($r4);

        r0.<android.net.NetworkWatchlistManager: com.android.internal.net.INetworkWatchlistManager mNetworkWatchlistManager> = $r5;

        return;
    }

    public void <init>(android.content.Context, com.android.internal.net.INetworkWatchlistManager)
    {
        android.net.NetworkWatchlistManager r0;
        android.content.Context r1;
        com.android.internal.net.INetworkWatchlistManager r2;

        r0 := @this: android.net.NetworkWatchlistManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.net.INetworkWatchlistManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.NetworkWatchlistManager: android.content.Context mContext> = r1;

        r0.<android.net.NetworkWatchlistManager: com.android.internal.net.INetworkWatchlistManager mNetworkWatchlistManager> = r2;

        return;
    }

    public byte[] getWatchlistConfigHash()
    {
        android.net.NetworkWatchlistManager r0;
        com.android.internal.net.INetworkWatchlistManager $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        byte[] r4;

        r0 := @this: android.net.NetworkWatchlistManager;

     label1:
        $r1 = r0.<android.net.NetworkWatchlistManager: com.android.internal.net.INetworkWatchlistManager mNetworkWatchlistManager>;

        r4 = interfaceinvoke $r1.<com.android.internal.net.INetworkWatchlistManager: byte[] getWatchlistConfigHash()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NetworkWatchlistManager", "Unable to get watchlist config hash");

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reloadWatchlist()
    {
        android.net.NetworkWatchlistManager r0;
        com.android.internal.net.INetworkWatchlistManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.net.NetworkWatchlistManager;

     label1:
        $r2 = r0.<android.net.NetworkWatchlistManager: com.android.internal.net.INetworkWatchlistManager mNetworkWatchlistManager>;

        interfaceinvoke $r2.<com.android.internal.net.INetworkWatchlistManager: void reloadWatchlist()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NetworkWatchlistManager", "Unable to reload watchlist");

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reportWatchlistIfNecessary()
    {
        android.net.NetworkWatchlistManager r0;
        com.android.internal.net.INetworkWatchlistManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.net.NetworkWatchlistManager;

     label1:
        $r2 = r0.<android.net.NetworkWatchlistManager: com.android.internal.net.INetworkWatchlistManager mNetworkWatchlistManager>;

        interfaceinvoke $r2.<com.android.internal.net.INetworkWatchlistManager: void reportWatchlistIfNecessary()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NetworkWatchlistManager", "Cannot report records", $r3);

        virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.net.NetworkWatchlistManager: java.lang.String TAG> = "NetworkWatchlistManager";

        <android.net.NetworkWatchlistManager: java.lang.String SHARED_MEMORY_TAG> = "NETWORK_WATCHLIST_SHARED_MEMORY";

        return;
    }
}
