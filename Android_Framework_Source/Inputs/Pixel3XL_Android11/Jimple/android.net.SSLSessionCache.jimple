public final class android.net.SSLSessionCache extends java.lang.Object
{
    private static final java.lang.String TAG;
    final com.android.org.conscrypt.SSLClientSessionCache mSessionCache;

    public void <init>(android.content.Context)
    {
        android.net.SSLSessionCache r0;
        java.io.File r1;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        android.content.Context r8;
        com.android.org.conscrypt.SSLClientSessionCache r9, r10;

        r0 := @this: android.net.SSLSessionCache;

        r8 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r1 = virtualinvoke r8.<android.content.Context: java.io.File getDir(java.lang.String,int)>("sslcache", 0);

        r9 = null;

     label1:
        r10 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache: com.android.org.conscrypt.SSLClientSessionCache usingDirectory(java.io.File)>(r1);

     label2:
        r9 = r10;

        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create SSL session cache in ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SSLSessionCache", $r7, $r3);

     label4:
        r0.<android.net.SSLSessionCache: com.android.org.conscrypt.SSLClientSessionCache mSessionCache> = r9;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        android.net.SSLSessionCache r0;
        java.io.File r1;
        com.android.org.conscrypt.SSLClientSessionCache $r2;

        r0 := @this: android.net.SSLSessionCache;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache: com.android.org.conscrypt.SSLClientSessionCache usingDirectory(java.io.File)>(r1);

        r0.<android.net.SSLSessionCache: com.android.org.conscrypt.SSLClientSessionCache mSessionCache> = $r2;

        return;
    }

    public void <init>(java.lang.Object)
    {
        android.net.SSLSessionCache r0;
        java.lang.Object r1;
        com.android.org.conscrypt.SSLClientSessionCache $r2;

        r0 := @this: android.net.SSLSessionCache;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = (com.android.org.conscrypt.SSLClientSessionCache) r1;

        r0.<android.net.SSLSessionCache: com.android.org.conscrypt.SSLClientSessionCache mSessionCache> = $r2;

        return;
    }

    public static void install(android.net.SSLSessionCache, javax.net.ssl.SSLContext)
    {
        javax.net.ssl.SSLSessionContext r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.net.SSLSessionCache r6;
        javax.net.ssl.SSLContext r7;
        com.android.org.conscrypt.ClientSessionContext r8;
        com.android.org.conscrypt.SSLClientSessionCache r9;

        r6 := @parameter0: android.net.SSLSessionCache;

        r7 := @parameter1: javax.net.ssl.SSLContext;

        r0 = virtualinvoke r7.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getClientSessionContext()>();

        $z0 = r0 instanceof com.android.org.conscrypt.ClientSessionContext;

        if $z0 == 0 goto label3;

        r8 = (com.android.org.conscrypt.ClientSessionContext) r0;

        if r6 != null goto label1;

        r9 = null;

        goto label2;

     label1:
        r9 = r6.<android.net.SSLSessionCache: com.android.org.conscrypt.SSLClientSessionCache mSessionCache>;

     label2:
        virtualinvoke r8.<com.android.org.conscrypt.ClientSessionContext: void setPersistentCache(com.android.org.conscrypt.SSLClientSessionCache)>(r9);

        return;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incompatible SSLContext: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static void <clinit>()
    {
        <android.net.SSLSessionCache: java.lang.String TAG> = "SSLSessionCache";

        return;
    }
}
