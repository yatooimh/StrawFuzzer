public class android.net.SntpClient extends java.lang.Object
{
    private static final boolean DBG;
    private static final int NTP_LEAP_NOSYNC;
    private static final int NTP_MODE_BROADCAST;
    private static final int NTP_MODE_CLIENT;
    private static final int NTP_MODE_SERVER;
    private static final int NTP_PACKET_SIZE;
    private static final int NTP_PORT;
    private static final int NTP_STRATUM_DEATH;
    private static final int NTP_STRATUM_MAX;
    private static final int NTP_VERSION;
    private static final long OFFSET_1900_TO_1970;
    private static final int ORIGINATE_TIME_OFFSET;
    private static final int RECEIVE_TIME_OFFSET;
    private static final int REFERENCE_TIME_OFFSET;
    private static final java.lang.String TAG;
    private static final int TRANSMIT_TIME_OFFSET;
    private long mNtpTime;
    private long mNtpTimeReference;
    private long mRoundTripTime;

    public void <init>()
    {
        android.net.SntpClient r0;

        r0 := @this: android.net.SntpClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void checkValidServerReply(byte, byte, int, long) throws android.net.SntpClient$InvalidServerReplyException
    {
        byte b0, b1, $b4;
        int i2;
        long l3;
        android.net.SntpClient$InvalidServerReplyException $r0, $r4, $r6, $r10;
        java.lang.StringBuilder $r1, $r7;
        java.lang.String $r5, $r11;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        if b0 == 3 goto label5;

        if b1 == 4 goto label2;

        if b1 != 5 goto label1;

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("untrusted mode: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1);

        $r10 = new android.net.SntpClient$InvalidServerReplyException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.net.SntpClient$InvalidServerReplyException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        if i2 == 0 goto label4;

        if i2 > 15 goto label4;

        $b4 = l3 cmp 0L;

        if $b4 == 0 goto label3;

        return;

     label3:
        $r6 = new android.net.SntpClient$InvalidServerReplyException;

        specialinvoke $r6.<android.net.SntpClient$InvalidServerReplyException: void <init>(java.lang.String)>("zero transmitTime");

        throw $r6;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("untrusted stratum: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r4 = new android.net.SntpClient$InvalidServerReplyException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.net.SntpClient$InvalidServerReplyException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label5:
        $r0 = new android.net.SntpClient$InvalidServerReplyException;

        specialinvoke $r0.<android.net.SntpClient$InvalidServerReplyException: void <init>(java.lang.String)>("unsynchronized server");

        throw $r0;
    }

    private long read32(byte[], int)
    {
        android.net.SntpClient r0;
        byte[] r1;
        byte b0, $b21;
        int $i1, $i2, $i3, $i5, $i6, $i7, $i18, $i19, $i20, i22, i23, i24, i25, i26;
        short $s4;
        long $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17;

        r0 := @this: android.net.SntpClient;

        r1 := @parameter0: byte[];

        i22 := @parameter1: int;

        b0 = r1[i22];

        $i1 = i22 + 1;

        i23 = r1[$i1];

        $i2 = i22 + 2;

        i24 = r1[$i2];

        $i3 = i22 + 3;

        i25 = r1[$i3];

        $s4 = b0 & 128;

        if $s4 != 128 goto label1;

        $b21 = b0 & 127;

        i26 = $b21 + 128;

        goto label2;

     label1:
        i26 = b0;

     label2:
        $i5 = i23 & 128;

        if $i5 != 128 goto label3;

        $i20 = i23 & 127;

        i23 = $i20 + 128;

        goto label3;

     label3:
        $i6 = i24 & 128;

        if $i6 != 128 goto label4;

        $i19 = i24 & 127;

        i24 = $i19 + 128;

        goto label4;

     label4:
        $i7 = i25 & 128;

        if $i7 != 128 goto label5;

        $i18 = i25 & 127;

        i25 = $i18 + 128;

        goto label5;

     label5:
        $l8 = (long) i26;

        $l11 = $l8 << 24;

        $l9 = (long) i23;

        $l10 = $l9 << 16;

        $l14 = $l11 + $l10;

        $l12 = (long) i24;

        $l13 = $l12 << 8;

        $l16 = $l14 + $l13;

        $l15 = (long) i25;

        $l17 = $l16 + $l15;

        return $l17;
    }

    private long readTimeStamp(byte[], int)
    {
        android.net.SntpClient r0;
        byte[] r1;
        int i0, $i3;
        long l1, l2, $l5, $l6, $l7, $l8, $l9;
        byte $b4, $b10;

        r0 := @this: android.net.SntpClient;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 = specialinvoke r0.<android.net.SntpClient: long read32(byte[],int)>(r1, i0);

        $i3 = i0 + 4;

        l2 = specialinvoke r0.<android.net.SntpClient: long read32(byte[],int)>(r1, $i3);

        $b4 = l1 cmp 0L;

        if $b4 != 0 goto label1;

        $b10 = l2 cmp 0L;

        if $b10 != 0 goto label1;

        return 0L;

     label1:
        $l5 = l1 - 2208988800L;

        $l8 = $l5 * 1000L;

        $l6 = 1000L * l2;

        $l7 = $l6 / 4294967296L;

        $l9 = $l8 + $l7;

        return $l9;
    }

    private void writeTimeStamp(byte[], int, long)
    {
        android.net.SntpClient r0;
        byte[] r1;
        long l0, l1, $l3, $l7, $l11, $l15, $l19, $l20, $l21, $l22, $l26, $l30, l39, l44;
        byte $b2, $b5, $b6, $b9, $b10, $b13, $b14, $b17, $b18, $b24, $b25, $b28, $b29, $b32, $b33, $b35, $b36;
        int $i4, $i8, $i12, $i16, $i23, $i27, $i31, $i34, $i37, i38, i40, i41, i42, i43, i45, i46, i47;
        double $d0, $d1;

        r0 := @this: android.net.SntpClient;

        r1 := @parameter0: byte[];

        i38 := @parameter1: int;

        l39 := @parameter2: long;

        $b2 = l39 cmp 0L;

        if $b2 != 0 goto label1;

        $i37 = i38 + 8;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>(r1, i38, $i37, 0);

        return;

     label1:
        l0 = l39 / 1000L;

        l1 = l0 + 2208988800L;

        i40 = i38 + 1;

        $l3 = l1 >> 24;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $b6 = (byte) $b5;

        r1[i38] = $b6;

        i41 = i40 + 1;

        $l7 = l1 >> 16;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        $b10 = (byte) $b9;

        r1[i40] = $b10;

        i42 = i41 + 1;

        $l11 = l1 >> 8;

        $i12 = (int) $l11;

        $b13 = (byte) $i12;

        $b14 = (byte) $b13;

        r1[i41] = $b14;

        i43 = i42 + 1;

        $l15 = l1 >> 0;

        $i16 = (int) $l15;

        $b17 = (byte) $i16;

        $b18 = (byte) $b17;

        r1[i42] = $b18;

        $l19 = l0 * 1000L;

        $l20 = l39 - $l19;

        $l21 = 4294967296L * $l20;

        l44 = $l21 / 1000L;

        i45 = i43 + 1;

        $l22 = l44 >> 24;

        $i23 = (int) $l22;

        $b24 = (byte) $i23;

        $b25 = (byte) $b24;

        r1[i43] = $b25;

        i46 = i45 + 1;

        $l26 = l44 >> 16;

        $i27 = (int) $l26;

        $b28 = (byte) $i27;

        $b29 = (byte) $b28;

        r1[i45] = $b29;

        i47 = i46 + 1;

        $l30 = l44 >> 8;

        $i31 = (int) $l30;

        $b32 = (byte) $i31;

        $b33 = (byte) $b32;

        r1[i46] = $b33;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = $d0 * 255.0;

        $i34 = (int) $d1;

        $b35 = (byte) $i34;

        $b36 = (byte) $b35;

        r1[i47] = $b36;

        return;
    }

    public long getNtpTime()
    {
        android.net.SntpClient r0;
        long $l0;

        r0 := @this: android.net.SntpClient;

        $l0 = r0.<android.net.SntpClient: long mNtpTime>;

        return $l0;
    }

    public long getNtpTimeReference()
    {
        android.net.SntpClient r0;
        long $l0;

        r0 := @this: android.net.SntpClient;

        $l0 = r0.<android.net.SntpClient: long mNtpTimeReference>;

        return $l0;
    }

    public long getRoundTripTime()
    {
        android.net.SntpClient r0;
        long $l0;

        r0 := @this: android.net.SntpClient;

        $l0 = r0.<android.net.SntpClient: long mRoundTripTime>;

        return $l0;
    }

    public boolean requestTime(java.lang.String, int)
    {
        android.net.SntpClient r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.net.SntpClient;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SntpClient", "Shame on you for calling the hidden API requestTime()!");

        return 0;
    }

    public boolean requestTime(java.lang.String, int, android.net.Network)
    {
        android.net.SntpClient r0;
        int i0;
        android.net.Network r1, r9;
        boolean $z0;
        java.lang.Exception $r2;
        java.lang.String $r3, $r7, r8;
        java.lang.StringBuilder $r4;
        java.net.InetAddress r10;

        r0 := @this: android.net.SntpClient;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r9 := @parameter2: android.net.Network;

        r1 = virtualinvoke r9.<android.net.Network: android.net.Network getPrivateDnsBypassingCopy()>();

     label1:
        r10 = virtualinvoke r1.<android.net.Network: java.net.InetAddress getByName(java.lang.String)>(r8);

     label2:
        $z0 = virtualinvoke r0.<android.net.SntpClient: boolean requestTime(java.net.InetAddress,int,int,android.net.Network)>(r10, 123, i0, r1);

        return $z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.net.EventLogTags: void writeNtpFailure(java.lang.String,java.lang.String)>(r8, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("request time failed: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SntpClient", $r7);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean requestTime(java.net.InetAddress, int, int, android.net.Network)
    {
        android.net.SntpClient r0;
        int i0, i1, $i7, $i9, i23;
        java.net.DatagramSocket r1, r11, r12;
        long l2, l5, l6, $l10, $l17, $l18, $l19, $l20, $l21, $l22, l24, l25, l26, l28, l29, l30;
        byte b3, b4, $b8, $b11, $b12, $b13, $b14, $b15, b27;
        short $s16;
        java.lang.String $r2, $r3, $r5, $r6, $r7;
        java.lang.Exception $r4;
        java.lang.Throwable $r8;
        java.net.InetAddress r9;
        android.net.Network r10;
        byte[] r13;
        java.net.DatagramPacket r14, r15;
        java.lang.StringBuilder r16, r19;

        r0 := @this: android.net.SntpClient;

        r9 := @parameter0: java.net.InetAddress;

        i23 := @parameter1: int;

        i0 := @parameter2: int;

        r10 := @parameter3: android.net.Network;

        i1 = staticinvoke <android.net.TrafficStats: int getAndSetThreadStatsTag(int)>(-191);

        r11 = null;

        r12 = null;

     label01:
        r1 = new java.net.DatagramSocket;

     label02:
        r11 = null;

        r12 = null;

     label03:
        specialinvoke r1.<java.net.DatagramSocket: void <init>()>();

     label04:
        r11 = r1;

        r12 = r1;

     label05:
        virtualinvoke r10.<android.net.Network: void bindSocket(java.net.DatagramSocket)>(r1);

     label06:
        r11 = r1;

        r12 = r1;

     label07:
        virtualinvoke r1.<java.net.DatagramSocket: void setSoTimeout(int)>(i0);

     label08:
        r11 = r1;

        r12 = r1;

     label09:
        r13 = newarray (byte)[48];

     label10:
        r11 = r1;

        r12 = r1;

     label11:
        r14 = new java.net.DatagramPacket;

     label12:
        r11 = r1;

        r12 = r1;

     label13:
        $i7 = lengthof r13;

        specialinvoke r14.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>(r13, $i7, r9, i23);

     label14:
        $b8 = (byte) 27;

        r13[0] = $b8;

        r11 = r1;

        r12 = r1;

     label15:
        l24 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label16:
        r11 = r1;

        r12 = r1;

     label17:
        l25 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label18:
        r11 = r1;

        r12 = r1;

     label19:
        specialinvoke r0.<android.net.SntpClient: void writeTimeStamp(byte[],int,long)>(r13, 40, l24);

     label20:
        r11 = r1;

        r12 = r1;

     label21:
        virtualinvoke r1.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>(r14);

     label22:
        r11 = r1;

        r12 = r1;

     label23:
        r15 = new java.net.DatagramPacket;

     label24:
        r11 = r1;

        r12 = r1;

     label25:
        $i9 = lengthof r13;

        specialinvoke r15.<java.net.DatagramPacket: void <init>(byte[],int)>(r13, $i9);

     label26:
        r11 = r1;

        r12 = r1;

     label27:
        virtualinvoke r1.<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>(r15);

     label28:
        r11 = r1;

        r12 = r1;

     label29:
        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label30:
        $l10 = l2 - l25;

        l26 = l24 + $l10;

        $b11 = r13[0];

        $b12 = $b11 >> 6;

        $b13 = $b12 & 3;

        b3 = (byte) $b13;

        $b14 = r13[0];

        $b15 = $b14 & 7;

        b4 = (byte) $b15;

        b27 = r13[1];

        r11 = r1;

        r12 = r1;

     label31:
        l28 = specialinvoke r0.<android.net.SntpClient: long readTimeStamp(byte[],int)>(r13, 24);

     label32:
        r11 = r1;

        r12 = r1;

     label33:
        l5 = specialinvoke r0.<android.net.SntpClient: long readTimeStamp(byte[],int)>(r13, 32);

     label34:
        r11 = r1;

        r12 = r1;

     label35:
        l6 = specialinvoke r0.<android.net.SntpClient: long readTimeStamp(byte[],int)>(r13, 40);

     label36:
        r11 = r1;

        r12 = r1;

     label37:
        $s16 = b27 & 255;

        staticinvoke <android.net.SntpClient: void checkValidServerReply(byte,byte,int,long)>(b3, b4, $s16, l6);

     label38:
        $l18 = l2 - l25;

        $l17 = l6 - l5;

        l29 = $l18 - $l17;

        r11 = r1;

        r12 = r1;

     label39:
        $l20 = l5 - l28;

        $l19 = l6 - l26;

        $l21 = $l20 + $l19;

        l30 = $l21 / 2L;

     label40:
        r11 = r1;

        r12 = r1;

     label41:
        $r2 = virtualinvoke r9.<java.net.InetAddress: java.lang.String toString()>();

        staticinvoke <android.net.EventLogTags: void writeNtpSuccess(java.lang.String,long,long)>($r2, l29, l30);

     label42:
        r11 = r1;

        r12 = r1;

     label43:
        r16 = new java.lang.StringBuilder;

     label44:
        r11 = r1;

        r12 = r1;

     label45:
        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

     label46:
        r11 = r1;

        r12 = r1;

     label47:
        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("round trip: ");

     label48:
        r11 = r1;

        r12 = r1;

     label49:
        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l29);

     label50:
        r11 = r1;

        r12 = r1;

     label51:
        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms, clock offset: ");

     label52:
        r11 = r1;

        r12 = r1;

     label53:
        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l30);

     label54:
        r11 = r1;

        r12 = r1;

     label55:
        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

     label56:
        r11 = r1;

        r12 = r1;

     label57:
        $r3 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SntpClient", $r3);

     label58:
        r11 = r1;

        r12 = r1;

     label59:
        $l22 = l26 + l30;

        r0.<android.net.SntpClient: long mNtpTime> = $l22;

     label60:
        r11 = r1;

        r12 = r1;

     label61:
        r0.<android.net.SntpClient: long mNtpTimeReference> = l2;

     label62:
        r11 = r1;

        r12 = r1;

     label63:
        r0.<android.net.SntpClient: long mRoundTripTime> = l29;

     label64:
        virtualinvoke r1.<java.net.DatagramSocket: void close()>();

        staticinvoke <android.net.TrafficStats: void setThreadStatsTag(int)>(i1);

        return 1;

     label65:
        $r8 := @caughtexception;

        goto label80;

     label66:
        $r4 := @caughtexception;

        r11 = r12;

     label67:
        $r5 = virtualinvoke r9.<java.net.InetAddress: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.net.EventLogTags: void writeNtpFailure(java.lang.String,java.lang.String)>($r5, $r6);

     label68:
        r11 = r12;

     label69:
        r19 = new java.lang.StringBuilder;

     label70:
        r11 = r12;

     label71:
        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

     label72:
        r11 = r12;

     label73:
        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("request time failed: ");

     label74:
        r11 = r12;

     label75:
        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

     label76:
        r11 = r12;

     label77:
        $r7 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SntpClient", $r7);

     label78:
        if r12 == null goto label79;

        virtualinvoke r12.<java.net.DatagramSocket: void close()>();

     label79:
        staticinvoke <android.net.TrafficStats: void setThreadStatsTag(int)>(i1);

        return 0;

     label80:
        if r11 == null goto label81;

        virtualinvoke r11.<java.net.DatagramSocket: void close()>();

     label81:
        staticinvoke <android.net.TrafficStats: void setThreadStatsTag(int)>(i1);

        throw $r8;

        catch java.lang.Exception from label01 to label02 with label66;
        catch java.lang.Throwable from label01 to label02 with label65;
        catch java.lang.Exception from label03 to label04 with label66;
        catch java.lang.Throwable from label03 to label04 with label65;
        catch java.lang.Exception from label05 to label06 with label66;
        catch java.lang.Throwable from label05 to label06 with label65;
        catch java.lang.Exception from label07 to label08 with label66;
        catch java.lang.Throwable from label07 to label08 with label65;
        catch java.lang.Exception from label09 to label10 with label66;
        catch java.lang.Throwable from label09 to label10 with label65;
        catch java.lang.Exception from label11 to label12 with label66;
        catch java.lang.Throwable from label11 to label12 with label65;
        catch java.lang.Exception from label13 to label14 with label66;
        catch java.lang.Throwable from label13 to label14 with label65;
        catch java.lang.Exception from label15 to label16 with label66;
        catch java.lang.Throwable from label15 to label16 with label65;
        catch java.lang.Exception from label17 to label18 with label66;
        catch java.lang.Throwable from label17 to label18 with label65;
        catch java.lang.Exception from label19 to label20 with label66;
        catch java.lang.Throwable from label19 to label20 with label65;
        catch java.lang.Exception from label21 to label22 with label66;
        catch java.lang.Throwable from label21 to label22 with label65;
        catch java.lang.Exception from label23 to label24 with label66;
        catch java.lang.Throwable from label23 to label24 with label65;
        catch java.lang.Exception from label25 to label26 with label66;
        catch java.lang.Throwable from label25 to label26 with label65;
        catch java.lang.Exception from label27 to label28 with label66;
        catch java.lang.Throwable from label27 to label28 with label65;
        catch java.lang.Exception from label29 to label30 with label66;
        catch java.lang.Throwable from label29 to label30 with label65;
        catch java.lang.Exception from label31 to label32 with label66;
        catch java.lang.Throwable from label31 to label32 with label65;
        catch java.lang.Exception from label33 to label34 with label66;
        catch java.lang.Throwable from label33 to label34 with label65;
        catch java.lang.Exception from label35 to label36 with label66;
        catch java.lang.Throwable from label35 to label36 with label65;
        catch java.lang.Exception from label37 to label38 with label66;
        catch java.lang.Throwable from label37 to label38 with label65;
        catch java.lang.Exception from label39 to label40 with label66;
        catch java.lang.Throwable from label39 to label40 with label65;
        catch java.lang.Exception from label41 to label42 with label66;
        catch java.lang.Throwable from label41 to label42 with label65;
        catch java.lang.Exception from label43 to label44 with label66;
        catch java.lang.Throwable from label43 to label44 with label65;
        catch java.lang.Exception from label45 to label46 with label66;
        catch java.lang.Throwable from label45 to label46 with label65;
        catch java.lang.Exception from label47 to label48 with label66;
        catch java.lang.Throwable from label47 to label48 with label65;
        catch java.lang.Exception from label49 to label50 with label66;
        catch java.lang.Throwable from label49 to label50 with label65;
        catch java.lang.Exception from label51 to label52 with label66;
        catch java.lang.Throwable from label51 to label52 with label65;
        catch java.lang.Exception from label53 to label54 with label66;
        catch java.lang.Throwable from label53 to label54 with label65;
        catch java.lang.Exception from label55 to label56 with label66;
        catch java.lang.Throwable from label55 to label56 with label65;
        catch java.lang.Exception from label57 to label58 with label66;
        catch java.lang.Throwable from label57 to label58 with label65;
        catch java.lang.Exception from label59 to label60 with label66;
        catch java.lang.Throwable from label59 to label60 with label65;
        catch java.lang.Exception from label61 to label62 with label66;
        catch java.lang.Throwable from label61 to label62 with label65;
        catch java.lang.Exception from label63 to label64 with label66;
        catch java.lang.Throwable from label63 to label64 with label65;
        catch java.lang.Throwable from label67 to label68 with label65;
        catch java.lang.Throwable from label69 to label70 with label65;
        catch java.lang.Throwable from label71 to label72 with label65;
        catch java.lang.Throwable from label73 to label74 with label65;
        catch java.lang.Throwable from label75 to label76 with label65;
        catch java.lang.Throwable from label77 to label78 with label65;
    }

    public static void <clinit>()
    {
        <android.net.SntpClient: int TRANSMIT_TIME_OFFSET> = 40;

        <android.net.SntpClient: java.lang.String TAG> = "SntpClient";

        <android.net.SntpClient: int REFERENCE_TIME_OFFSET> = 16;

        <android.net.SntpClient: int RECEIVE_TIME_OFFSET> = 32;

        <android.net.SntpClient: int ORIGINATE_TIME_OFFSET> = 24;

        <android.net.SntpClient: long OFFSET_1900_TO_1970> = 2208988800L;

        <android.net.SntpClient: int NTP_VERSION> = 3;

        <android.net.SntpClient: int NTP_STRATUM_MAX> = 15;

        <android.net.SntpClient: int NTP_STRATUM_DEATH> = 0;

        <android.net.SntpClient: int NTP_PORT> = 123;

        <android.net.SntpClient: int NTP_PACKET_SIZE> = 48;

        <android.net.SntpClient: int NTP_MODE_SERVER> = 4;

        <android.net.SntpClient: int NTP_MODE_CLIENT> = 3;

        <android.net.SntpClient: int NTP_MODE_BROADCAST> = 5;

        <android.net.SntpClient: int NTP_LEAP_NOSYNC> = 3;

        <android.net.SntpClient: boolean DBG> = 1;

        return;
    }
}
