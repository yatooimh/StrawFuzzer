public abstract class android.net.SocketKeepalive extends java.lang.Object implements java.lang.AutoCloseable
{
    public static final int BINDER_DIED;
    public static final int DATA_RECEIVED;
    public static final int ERROR_HARDWARE_ERROR;
    public static final int ERROR_HARDWARE_UNSUPPORTED;
    public static final int ERROR_INSUFFICIENT_RESOURCES;
    public static final int ERROR_INVALID_INTERVAL;
    public static final int ERROR_INVALID_IP_ADDRESS;
    public static final int ERROR_INVALID_LENGTH;
    public static final int ERROR_INVALID_NETWORK;
    public static final int ERROR_INVALID_PORT;
    public static final int ERROR_INVALID_SOCKET;
    public static final int ERROR_SOCKET_NOT_IDLE;
    public static final int ERROR_UNSUPPORTED;
    public static final int MAX_INTERVAL_SEC;
    public static final int MIN_INTERVAL_SEC;
    public static final int NO_KEEPALIVE;
    public static final int SUCCESS;
    static final java.lang.String TAG;
    final android.net.ISocketKeepaliveCallback mCallback;
    final java.util.concurrent.Executor mExecutor;
    final android.net.Network mNetwork;
    final android.os.ParcelFileDescriptor mPfd;
    final android.net.IConnectivityManager mService;
    java.lang.Integer mSlot;

    void <init>(android.net.IConnectivityManager, android.net.Network, android.os.ParcelFileDescriptor, java.util.concurrent.Executor, android.net.SocketKeepalive$Callback)
    {
        android.net.SocketKeepalive r0;
        android.net.IConnectivityManager r1;
        android.net.Network r2;
        android.os.ParcelFileDescriptor r3;
        java.util.concurrent.Executor r4;
        android.net.SocketKeepalive$Callback r5;
        android.net.SocketKeepalive$1 $r6;

        r0 := @this: android.net.SocketKeepalive;

        r1 := @parameter0: android.net.IConnectivityManager;

        r2 := @parameter1: android.net.Network;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        r4 := @parameter3: java.util.concurrent.Executor;

        r5 := @parameter4: android.net.SocketKeepalive$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.SocketKeepalive: android.net.IConnectivityManager mService> = r1;

        r0.<android.net.SocketKeepalive: android.net.Network mNetwork> = r2;

        r0.<android.net.SocketKeepalive: android.os.ParcelFileDescriptor mPfd> = r3;

        r0.<android.net.SocketKeepalive: java.util.concurrent.Executor mExecutor> = r4;

        $r6 = new android.net.SocketKeepalive$1;

        specialinvoke $r6.<android.net.SocketKeepalive$1: void <init>(android.net.SocketKeepalive,android.net.SocketKeepalive$Callback,java.util.concurrent.Executor)>(r0, r5, r4);

        r0.<android.net.SocketKeepalive: android.net.ISocketKeepaliveCallback mCallback> = $r6;

        return;
    }

    public final void close()
    {
        android.net.SocketKeepalive r0;
        android.os.ParcelFileDescriptor $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.net.SocketKeepalive;

        virtualinvoke r0.<android.net.SocketKeepalive: void stop()>();

     label1:
        $r2 = r0.<android.net.SocketKeepalive: android.os.ParcelFileDescriptor mPfd>;

        virtualinvoke $r2.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final void start(int)
    {
        android.net.SocketKeepalive r0;
        int i0;

        r0 := @this: android.net.SocketKeepalive;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.net.SocketKeepalive: void startImpl(int)>(i0);

        return;
    }

    abstract void startImpl(int);

    public final void stop()
    {
        android.net.SocketKeepalive r0;

        r0 := @this: android.net.SocketKeepalive;

        virtualinvoke r0.<android.net.SocketKeepalive: void stopImpl()>();

        return;
    }

    abstract void stopImpl();

    public static void <clinit>()
    {
        <android.net.SocketKeepalive: java.lang.String TAG> = "SocketKeepalive";

        <android.net.SocketKeepalive: int SUCCESS> = 0;

        <android.net.SocketKeepalive: int NO_KEEPALIVE> = -1;

        <android.net.SocketKeepalive: int MIN_INTERVAL_SEC> = 10;

        <android.net.SocketKeepalive: int MAX_INTERVAL_SEC> = 3600;

        <android.net.SocketKeepalive: int ERROR_UNSUPPORTED> = -30;

        <android.net.SocketKeepalive: int ERROR_SOCKET_NOT_IDLE> = -26;

        <android.net.SocketKeepalive: int ERROR_INVALID_SOCKET> = -25;

        <android.net.SocketKeepalive: int ERROR_INVALID_PORT> = -22;

        <android.net.SocketKeepalive: int ERROR_INVALID_NETWORK> = -20;

        <android.net.SocketKeepalive: int ERROR_INVALID_LENGTH> = -23;

        <android.net.SocketKeepalive: int ERROR_INVALID_IP_ADDRESS> = -21;

        <android.net.SocketKeepalive: int ERROR_INVALID_INTERVAL> = -24;

        <android.net.SocketKeepalive: int ERROR_INSUFFICIENT_RESOURCES> = -32;

        <android.net.SocketKeepalive: int ERROR_HARDWARE_UNSUPPORTED> = -30;

        <android.net.SocketKeepalive: int ERROR_HARDWARE_ERROR> = -31;

        <android.net.SocketKeepalive: int DATA_RECEIVED> = -2;

        <android.net.SocketKeepalive: int BINDER_DIED> = -10;

        return;
    }
}
