public class android.net.TcpKeepalivePacketData extends android.net.KeepalivePacketData implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int IPV4_HEADER_LENGTH;
    private static final int IPV6_HEADER_LENGTH;
    private static final java.lang.String TAG;
    private static final int TCP_HEADER_LENGTH;
    public final int ipTos;
    public final int ipTtl;
    public final int tcpAck;
    public final int tcpSeq;
    public final int tcpWnd;
    public final int tcpWndScale;

    static void <clinit>()
    {
        android.net.TcpKeepalivePacketData$1 $r0;

        <android.net.TcpKeepalivePacketData: int TCP_HEADER_LENGTH> = 20;

        <android.net.TcpKeepalivePacketData: java.lang.String TAG> = "TcpKeepalivePacketData";

        <android.net.TcpKeepalivePacketData: int IPV6_HEADER_LENGTH> = 40;

        <android.net.TcpKeepalivePacketData: int IPV4_HEADER_LENGTH> = 20;

        $r0 = new android.net.TcpKeepalivePacketData$1;

        specialinvoke $r0.<android.net.TcpKeepalivePacketData$1: void <init>()>();

        <android.net.TcpKeepalivePacketData: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.net.TcpKeepalivePacketDataParcelable, byte[]) throws android.net.InvalidPacketException, java.net.UnknownHostException
    {
        android.net.TcpKeepalivePacketData r0;
        android.net.TcpKeepalivePacketDataParcelable r1;
        byte[] r2, $r3, $r5;
        java.net.InetAddress $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.net.TcpKeepalivePacketData;

        r1 := @parameter0: android.net.TcpKeepalivePacketDataParcelable;

        r2 := @parameter1: byte[];

        $r3 = r1.<android.net.TcpKeepalivePacketDataParcelable: byte[] srcAddress>;

        $r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r3);

        $i0 = r1.<android.net.TcpKeepalivePacketDataParcelable: int srcPort>;

        $r5 = r1.<android.net.TcpKeepalivePacketDataParcelable: byte[] dstAddress>;

        $r6 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r5);

        $i1 = r1.<android.net.TcpKeepalivePacketDataParcelable: int dstPort>;

        specialinvoke r0.<android.net.KeepalivePacketData: void <init>(java.net.InetAddress,int,java.net.InetAddress,int,byte[])>($r4, $i0, $r6, $i1, r2);

        $i2 = r1.<android.net.TcpKeepalivePacketDataParcelable: int seq>;

        r0.<android.net.TcpKeepalivePacketData: int tcpSeq> = $i2;

        $i3 = r1.<android.net.TcpKeepalivePacketDataParcelable: int ack>;

        r0.<android.net.TcpKeepalivePacketData: int tcpAck> = $i3;

        $i4 = r1.<android.net.TcpKeepalivePacketDataParcelable: int rcvWnd>;

        r0.<android.net.TcpKeepalivePacketData: int tcpWnd> = $i4;

        $i5 = r1.<android.net.TcpKeepalivePacketDataParcelable: int rcvWndScale>;

        r0.<android.net.TcpKeepalivePacketData: int tcpWndScale> = $i5;

        $i6 = r1.<android.net.TcpKeepalivePacketDataParcelable: int tos>;

        r0.<android.net.TcpKeepalivePacketData: int ipTos> = $i6;

        $i7 = r1.<android.net.TcpKeepalivePacketDataParcelable: int ttl>;

        r0.<android.net.TcpKeepalivePacketData: int ipTtl> = $i7;

        return;
    }

    private void <init>(java.net.InetAddress, int, java.net.InetAddress, int, byte[], int, int, int, int, int, int) throws android.net.InvalidPacketException
    {
        android.net.TcpKeepalivePacketData r0;
        java.net.InetAddress r1, r2;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        byte[] r3;

        r0 := @this: android.net.TcpKeepalivePacketData;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r2 := @parameter2: java.net.InetAddress;

        i1 := @parameter3: int;

        r3 := @parameter4: byte[];

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        i6 := @parameter9: int;

        i7 := @parameter10: int;

        specialinvoke r0.<android.net.KeepalivePacketData: void <init>(java.net.InetAddress,int,java.net.InetAddress,int,byte[])>(r1, i0, r2, i1, r3);

        r0.<android.net.TcpKeepalivePacketData: int tcpSeq> = i2;

        r0.<android.net.TcpKeepalivePacketData: int tcpAck> = i3;

        r0.<android.net.TcpKeepalivePacketData: int tcpWnd> = i4;

        r0.<android.net.TcpKeepalivePacketData: int tcpWndScale> = i5;

        r0.<android.net.TcpKeepalivePacketData: int ipTos> = i6;

        r0.<android.net.TcpKeepalivePacketData: int ipTtl> = i7;

        return;
    }

    static android.net.TcpKeepalivePacketData access$000(android.os.Parcel) throws android.net.InvalidPacketException
    {
        android.os.Parcel r0;
        android.net.TcpKeepalivePacketData $r1;

        r0 := @parameter0: android.os.Parcel;

        $r1 = staticinvoke <android.net.TcpKeepalivePacketData: android.net.TcpKeepalivePacketData readFromParcel(android.os.Parcel)>(r0);

        return $r1;
    }

    private static byte[] buildV4Packet(android.net.TcpKeepalivePacketDataParcelable)
    {
        android.net.TcpKeepalivePacketDataParcelable r0;
        java.nio.ByteBuffer r1;
        int i0, i1, $i2, $i4, $i6, $i8, $i10, $i12, $i13, $i14, $i15, $i16;
        java.nio.ByteOrder $r2;
        byte $b3, $b5, $b7;
        byte[] $r11, $r13, $r25;
        short $s9, $s11, $s17, $s18, $s19;

        r0 := @parameter0: android.net.TcpKeepalivePacketDataParcelable;

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(40);

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(69);

        $i2 = r0.<android.net.TcpKeepalivePacketDataParcelable: int tos>;

        $b3 = (byte) $i2;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b3);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(40);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(16384);

        $i4 = r0.<android.net.TcpKeepalivePacketDataParcelable: int ttl>;

        $b5 = (byte) $i4;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b5);

        $i6 = <android.system.OsConstants: int IPPROTO_TCP>;

        $b7 = (byte) $i6;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b7);

        i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(0);

        $r11 = r0.<android.net.TcpKeepalivePacketDataParcelable: byte[] srcAddress>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r11);

        $r13 = r0.<android.net.TcpKeepalivePacketDataParcelable: byte[] dstAddress>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r13);

        $i8 = r0.<android.net.TcpKeepalivePacketDataParcelable: int srcPort>;

        $s9 = (short) $i8;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s9);

        $i10 = r0.<android.net.TcpKeepalivePacketDataParcelable: int dstPort>;

        $s11 = (short) $i10;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s11);

        $i12 = r0.<android.net.TcpKeepalivePacketDataParcelable: int seq>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i12);

        $i13 = r0.<android.net.TcpKeepalivePacketDataParcelable: int ack>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i13);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(20496);

        $i15 = r0.<android.net.TcpKeepalivePacketDataParcelable: int rcvWnd>;

        $i14 = r0.<android.net.TcpKeepalivePacketDataParcelable: int rcvWndScale>;

        $i16 = $i15 >> $i14;

        $s17 = (short) $i16;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s17);

        i1 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(0);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(0);

        $s18 = staticinvoke <android.net.util.IpUtils: short ipChecksum(java.nio.ByteBuffer,int)>(r1, 0);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(i0, $s18);

        $s19 = staticinvoke <android.net.util.IpUtils: short tcpChecksum(java.nio.ByteBuffer,int,int,int)>(r1, 0, 20, 20);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(i1, $s19);

        $r25 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        return $r25;
    }

    private static android.net.TcpKeepalivePacketData readFromParcel(android.os.Parcel) throws android.net.InvalidPacketException
    {
        android.os.Parcel r0;
        java.net.InetAddress r1, r2;
        java.lang.String $r3, $r4;
        android.net.TcpKeepalivePacketData $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        byte[] $r6;

        r0 := @parameter0: android.os.Parcel;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        r1 = staticinvoke <android.net.InetAddresses: java.net.InetAddress parseNumericAddress(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        r2 = staticinvoke <android.net.InetAddresses: java.net.InetAddress parseNumericAddress(java.lang.String)>($r4);

        $r5 = new android.net.TcpKeepalivePacketData;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r6 = virtualinvoke r0.<android.os.Parcel: byte[] createByteArray()>();

        $i2 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i7 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        specialinvoke $r5.<android.net.TcpKeepalivePacketData: void <init>(java.net.InetAddress,int,java.net.InetAddress,int,byte[],int,int,int,int,int,int)>(r1, $i0, r2, $i1, $r6, $i2, $i3, $i4, $i5, $i6, $i7);

        return $r5;
    }

    public static android.net.TcpKeepalivePacketData tcpKeepalivePacket(android.net.TcpKeepalivePacketDataParcelable) throws android.net.InvalidPacketException
    {
        byte[] $r0, $r1, $r2, $r3, $r5;
        int $i0, $i1;
        android.net.TcpKeepalivePacketData $r4;
        java.lang.Throwable $r6;
        android.net.InvalidPacketException $r7, r9;
        android.net.TcpKeepalivePacketDataParcelable r8;

        r8 := @parameter0: android.net.TcpKeepalivePacketDataParcelable;

     label1:
        $r0 = r8.<android.net.TcpKeepalivePacketDataParcelable: byte[] srcAddress>;

        if $r0 == null goto label2;

        $r1 = r8.<android.net.TcpKeepalivePacketDataParcelable: byte[] dstAddress>;

        if $r1 == null goto label2;

        $r2 = r8.<android.net.TcpKeepalivePacketDataParcelable: byte[] srcAddress>;

        $i0 = lengthof $r2;

        if $i0 != 4 goto label2;

        $r3 = r8.<android.net.TcpKeepalivePacketDataParcelable: byte[] dstAddress>;

        $i1 = lengthof $r3;

        if $i1 != 4 goto label2;

        $r4 = new android.net.TcpKeepalivePacketData;

        $r5 = staticinvoke <android.net.TcpKeepalivePacketData: byte[] buildV4Packet(android.net.TcpKeepalivePacketDataParcelable)>(r8);

        specialinvoke $r4.<android.net.TcpKeepalivePacketData: void <init>(android.net.TcpKeepalivePacketDataParcelable,byte[])>(r8, $r5);

        return $r4;

     label2:
        r9 = new android.net.InvalidPacketException;

        specialinvoke r9.<android.net.InvalidPacketException: void <init>(int)>(-21);

        throw r9;

     label3:
        $r6 := @caughtexception;

        $r7 = new android.net.InvalidPacketException;

        specialinvoke $r7.<android.net.InvalidPacketException: void <init>(int)>(-21);

        throw $r7;

        catch java.net.UnknownHostException from label1 to label2 with label3;
        catch java.net.UnknownHostException from label2 to label3 with label3;
    }

    public int describeContents()
    {
        android.net.TcpKeepalivePacketData r0;

        r0 := @this: android.net.TcpKeepalivePacketData;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.TcpKeepalivePacketData r0, r6;
        boolean z0, $z1, $z2, z3;
        java.net.InetAddress r1, r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.Object r5;

        r0 := @this: android.net.TcpKeepalivePacketData;

        r5 := @parameter0: java.lang.Object;

        z0 = r5 instanceof android.net.TcpKeepalivePacketData;

        z3 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r6 = (android.net.TcpKeepalivePacketData) r5;

        r1 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        r2 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $r3 = virtualinvoke r6.<android.net.TcpKeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        $z1 = virtualinvoke r1.<java.net.InetAddress: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r6.<android.net.TcpKeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $z2 = virtualinvoke r2.<java.net.InetAddress: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label2;

        $i0 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: int getSrcPort()>();

        $i1 = virtualinvoke r6.<android.net.TcpKeepalivePacketData: int getSrcPort()>();

        if $i0 != $i1 goto label2;

        $i2 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: int getDstPort()>();

        $i3 = virtualinvoke r6.<android.net.TcpKeepalivePacketData: int getDstPort()>();

        if $i2 != $i3 goto label2;

        $i5 = r0.<android.net.TcpKeepalivePacketData: int tcpAck>;

        $i4 = r6.<android.net.TcpKeepalivePacketData: int tcpAck>;

        if $i5 != $i4 goto label2;

        $i7 = r0.<android.net.TcpKeepalivePacketData: int tcpSeq>;

        $i6 = r6.<android.net.TcpKeepalivePacketData: int tcpSeq>;

        if $i7 != $i6 goto label2;

        $i9 = r0.<android.net.TcpKeepalivePacketData: int tcpWnd>;

        $i8 = r6.<android.net.TcpKeepalivePacketData: int tcpWnd>;

        if $i9 != $i8 goto label2;

        $i11 = r0.<android.net.TcpKeepalivePacketData: int tcpWndScale>;

        $i10 = r6.<android.net.TcpKeepalivePacketData: int tcpWndScale>;

        if $i11 != $i10 goto label2;

        $i13 = r0.<android.net.TcpKeepalivePacketData: int ipTos>;

        $i12 = r6.<android.net.TcpKeepalivePacketData: int ipTos>;

        if $i13 != $i12 goto label2;

        $i15 = r0.<android.net.TcpKeepalivePacketData: int ipTtl>;

        $i14 = r6.<android.net.TcpKeepalivePacketData: int ipTtl>;

        if $i15 != $i14 goto label2;

        z3 = 1;

        goto label2;

     label2:
        return z3;
    }

    public int hashCode()
    {
        android.net.TcpKeepalivePacketData r0;
        java.lang.Object[] $r1;
        java.net.InetAddress $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Integer $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: android.net.TcpKeepalivePacketData;

        $r1 = newarray (java.lang.Object)[10];

        $r2 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $r1[1] = $r3;

        $i0 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: int getSrcPort()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[2] = $r4;

        $i1 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: int getDstPort()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[3] = $r5;

        $i2 = r0.<android.net.TcpKeepalivePacketData: int tcpAck>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[4] = $r6;

        $i3 = r0.<android.net.TcpKeepalivePacketData: int tcpSeq>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[5] = $r7;

        $i4 = r0.<android.net.TcpKeepalivePacketData: int tcpWnd>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[6] = $r8;

        $i5 = r0.<android.net.TcpKeepalivePacketData: int tcpWndScale>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r1[7] = $r9;

        $i6 = r0.<android.net.TcpKeepalivePacketData: int ipTos>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r1[8] = $r10;

        $i7 = r0.<android.net.TcpKeepalivePacketData: int ipTtl>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r1[9] = $r11;

        $i8 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i8;
    }

    public android.net.TcpKeepalivePacketDataParcelable toStableParcelable()
    {
        android.net.TcpKeepalivePacketData r0;
        java.net.InetAddress r2, r3;
        android.net.TcpKeepalivePacketDataParcelable $r4;
        byte[] $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.net.TcpKeepalivePacketData;

        $r4 = new android.net.TcpKeepalivePacketDataParcelable;

        specialinvoke $r4.<android.net.TcpKeepalivePacketDataParcelable: void <init>()>();

        r2 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        r3 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $r5 = virtualinvoke r2.<java.net.InetAddress: byte[] getAddress()>();

        $r4.<android.net.TcpKeepalivePacketDataParcelable: byte[] srcAddress> = $r5;

        $i0 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: int getSrcPort()>();

        $r4.<android.net.TcpKeepalivePacketDataParcelable: int srcPort> = $i0;

        $r6 = virtualinvoke r3.<java.net.InetAddress: byte[] getAddress()>();

        $r4.<android.net.TcpKeepalivePacketDataParcelable: byte[] dstAddress> = $r6;

        $i1 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: int getDstPort()>();

        $r4.<android.net.TcpKeepalivePacketDataParcelable: int dstPort> = $i1;

        $i2 = r0.<android.net.TcpKeepalivePacketData: int tcpSeq>;

        $r4.<android.net.TcpKeepalivePacketDataParcelable: int seq> = $i2;

        $i3 = r0.<android.net.TcpKeepalivePacketData: int tcpAck>;

        $r4.<android.net.TcpKeepalivePacketDataParcelable: int ack> = $i3;

        $i4 = r0.<android.net.TcpKeepalivePacketData: int tcpWnd>;

        $r4.<android.net.TcpKeepalivePacketDataParcelable: int rcvWnd> = $i4;

        $i5 = r0.<android.net.TcpKeepalivePacketData: int tcpWndScale>;

        $r4.<android.net.TcpKeepalivePacketDataParcelable: int rcvWndScale> = $i5;

        $i6 = r0.<android.net.TcpKeepalivePacketData: int ipTos>;

        $r4.<android.net.TcpKeepalivePacketDataParcelable: int tos> = $i6;

        $i7 = r0.<android.net.TcpKeepalivePacketData: int ipTtl>;

        $r4.<android.net.TcpKeepalivePacketDataParcelable: int ttl> = $i7;

        return $r4;
    }

    public java.lang.String toString()
    {
        android.net.TcpKeepalivePacketData r0;
        java.lang.StringBuilder $r2;
        java.net.InetAddress $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r25;

        r0 := @this: android.net.TcpKeepalivePacketData;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saddr: ");

        $r4 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" daddr: ");

        $r7 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: java.net.InetAddress getDstAddress()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sport: ");

        $i0 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: int getSrcPort()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dport: ");

        $i1 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: int getDstPort()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seq: ");

        $i2 = r0.<android.net.TcpKeepalivePacketData: int tcpSeq>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ack: ");

        $i3 = r0.<android.net.TcpKeepalivePacketData: int tcpAck>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" wnd: ");

        $i4 = r0.<android.net.TcpKeepalivePacketData: int tcpWnd>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" wndScale: ");

        $i5 = r0.<android.net.TcpKeepalivePacketData: int tcpWndScale>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tos: ");

        $i6 = r0.<android.net.TcpKeepalivePacketData: int ipTos>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ttl: ");

        $i7 = r0.<android.net.TcpKeepalivePacketData: int ipTtl>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r25 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.TcpKeepalivePacketData r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.net.InetAddress $r2, $r4;
        java.lang.String $r3, $r5;
        byte[] $r6;

        r0 := @this: android.net.TcpKeepalivePacketData;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: java.net.InetAddress getSrcAddress()>();

        $r3 = virtualinvoke $r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: java.net.InetAddress getDstAddress()>();

        $r5 = virtualinvoke $r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $i1 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: int getSrcPort()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: int getDstPort()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r6 = virtualinvoke r0.<android.net.TcpKeepalivePacketData: byte[] getPacket()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r6);

        $i3 = r0.<android.net.TcpKeepalivePacketData: int tcpSeq>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.net.TcpKeepalivePacketData: int tcpAck>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.net.TcpKeepalivePacketData: int tcpWnd>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<android.net.TcpKeepalivePacketData: int tcpWndScale>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $i7 = r0.<android.net.TcpKeepalivePacketData: int ipTos>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i8 = r0.<android.net.TcpKeepalivePacketData: int ipTtl>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        return;
    }
}
