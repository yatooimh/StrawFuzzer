abstract class android.net.Uri$AbstractPart extends java.lang.Object
{
    static final int REPRESENTATION_DECODED;
    static final int REPRESENTATION_ENCODED;
    volatile java.lang.String decoded;
    volatile java.lang.String encoded;
    private final int mCanonicalRepresentation;

    void <init>(java.lang.String, java.lang.String)
    {
        android.net.Uri$AbstractPart r0;
        java.lang.String r1, r2, $r3, $r4, $r6, $r7;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.net.Uri$AbstractPart;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <android.net.Uri: java.lang.String access$300()>();

        if r1 == $r3 goto label1;

        r0.<android.net.Uri$AbstractPart: int mCanonicalRepresentation> = 1;

        r0.<android.net.Uri$AbstractPart: java.lang.String encoded> = r1;

        $r7 = staticinvoke <android.net.Uri: java.lang.String access$300()>();

        r0.<android.net.Uri$AbstractPart: java.lang.String decoded> = $r7;

        goto label2;

     label1:
        $r4 = staticinvoke <android.net.Uri: java.lang.String access$300()>();

        if r2 == $r4 goto label3;

        r0.<android.net.Uri$AbstractPart: int mCanonicalRepresentation> = 2;

        $r6 = staticinvoke <android.net.Uri: java.lang.String access$300()>();

        r0.<android.net.Uri$AbstractPart: java.lang.String encoded> = $r6;

        r0.<android.net.Uri$AbstractPart: java.lang.String decoded> = r2;

     label2:
        return;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Neither encoded nor decoded");

        throw $r5;
    }

    final java.lang.String getDecoded()
    {
        android.net.Uri$AbstractPart r0;
        java.lang.String $r1, $r2, $r3, r4;
        boolean z0;

        r0 := @this: android.net.Uri$AbstractPart;

        $r1 = r0.<android.net.Uri$AbstractPart: java.lang.String decoded>;

        $r2 = staticinvoke <android.net.Uri: java.lang.String access$300()>();

        if $r1 == $r2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        r4 = r0.<android.net.Uri$AbstractPart: java.lang.String decoded>;

        goto label4;

     label3:
        $r3 = r0.<android.net.Uri$AbstractPart: java.lang.String encoded>;

        r4 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r3);

        r0.<android.net.Uri$AbstractPart: java.lang.String decoded> = r4;

     label4:
        return r4;
    }

    abstract java.lang.String getEncoded();

    final void writeTo(android.os.Parcel)
    {
        android.net.Uri$AbstractPart r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r7;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, $r6, $r12, r14;
        java.lang.AssertionError $r11;
        android.os.Parcel r13;

        r0 := @this: android.net.Uri$AbstractPart;

        r13 := @parameter0: android.os.Parcel;

        i0 = r0.<android.net.Uri$AbstractPart: int mCanonicalRepresentation>;

        if i0 != 1 goto label1;

        r14 = r0.<android.net.Uri$AbstractPart: java.lang.String encoded>;

        goto label2;

     label1:
        if i0 != 2 goto label4;

        r14 = r0.<android.net.Uri$AbstractPart: java.lang.String decoded>;

     label2:
        $r6 = staticinvoke <android.net.Uri: java.lang.String access$300()>();

        if r14 == $r6 goto label3;

        $i3 = r0.<android.net.Uri$AbstractPart: int mCanonicalRepresentation>;

        virtualinvoke r13.<android.os.Parcel: void writeInt(int)>($i3);

        virtualinvoke r13.<android.os.Parcel: void writeString8(java.lang.String)>(r14);

        return;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canonical value not cached (");

        $i2 = r0.<android.net.Uri$AbstractPart: int mCanonicalRepresentation>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = new java.lang.AssertionError;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r11;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown representation: ");

        $i1 = r0.<android.net.Uri$AbstractPart: int mCanonicalRepresentation>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static void <clinit>()
    {
        <android.net.Uri$AbstractPart: int REPRESENTATION_ENCODED> = 1;

        <android.net.Uri$AbstractPart: int REPRESENTATION_DECODED> = 2;

        return;
    }
}
