public final class android.net.UriCodec extends java.lang.Object
{
    private static final char INVALID_INPUT_CHARACTER;

    private void <init>()
    {
        android.net.UriCodec r0;

        r0 := @this: android.net.UriCodec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void appendDecoded(java.lang.StringBuilder, java.lang.String, boolean, java.nio.charset.Charset, boolean)
    {
        java.lang.StringBuilder r0;
        boolean z0, z1;
        java.nio.ByteBuffer r1;
        java.nio.charset.CharsetDecoder $r2, $r4, $r5, r18;
        java.nio.charset.CodingErrorAction $r3, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i8, i13, i16;
        java.lang.IllegalArgumentException $r8, $r14;
        java.net.URISyntaxException $r9;
        java.lang.Throwable $r13;
        java.lang.String r16;
        java.nio.charset.Charset r17;
        char c7, c10, c15;
        byte b14, b17;

        r0 := @parameter0: java.lang.StringBuilder;

        r16 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r17 := @parameter3: java.nio.charset.Charset;

        z1 := @parameter4: boolean;

        $r2 = virtualinvoke r17.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        $r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        $r4 = virtualinvoke $r2.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r3);

        $r5 = virtualinvoke $r4.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder replaceWith(java.lang.String)>("\ufffd");

        $r6 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        r18 = virtualinvoke $r5.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r6);

        $i0 = virtualinvoke r16.<java.lang.String: int length()>();

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        i6 = 0;

     label01:
        $i1 = virtualinvoke r16.<java.lang.String: int length()>();

        if i6 >= $i1 goto label14;

        c7 = virtualinvoke r16.<java.lang.String: char charAt(int)>(i6);

        i8 = i6 + 1;

        if c7 == 37 goto label04;

        if c7 == 43 goto label02;

        staticinvoke <android.net.UriCodec: void flushDecodingByteAccumulator(java.lang.StringBuilder,java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,boolean)>(r0, r18, r1, z1);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

        i6 = i8;

        goto label13;

     label02:
        staticinvoke <android.net.UriCodec: void flushDecodingByteAccumulator(java.lang.StringBuilder,java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,boolean)>(r0, r18, r1, z1);

        c10 = 43;

        if z0 == 0 goto label03;

        c10 = 32;

     label03:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c10);

        i6 = i8;

        goto label13;

     label04:
        i13 = 0;

        b14 = 0;

     label05:
        i6 = i8;

        if i13 >= 2 goto label12;

     label06:
        $i2 = virtualinvoke r16.<java.lang.String: int length()>();

        c15 = staticinvoke <android.net.UriCodec: char getNextCharacter(java.lang.String,int,int,java.lang.String)>(r16, i8, $i2, null);

     label07:
        i8 = i8 + 1;

        i16 = staticinvoke <android.net.UriCodec: int hexCharToValue(char)>(c15);

        if i16 >= 0 goto label09;

        if z1 != 0 goto label08;

        staticinvoke <android.net.UriCodec: void flushDecodingByteAccumulator(java.lang.StringBuilder,java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,boolean)>(r0, r18, r1, z1);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);

        i6 = i8;

        goto label12;

     label08:
        $r8 = new java.lang.IllegalArgumentException;

        $i5 = i8 - 1;

        $r9 = staticinvoke <android.net.UriCodec: java.net.URISyntaxException unexpectedCharacterException(java.lang.String,java.lang.String,char,int)>(r16, null, c15, $i5);

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r9);

        throw $r8;

     label09:
        $i3 = b14 * 16;

        $i4 = $i3 + i16;

        b17 = (byte) $i4;

        i13 = i13 + 1;

        b14 = b17;

        goto label05;

     label10:
        $r13 := @caughtexception;

        if z1 != 0 goto label11;

        staticinvoke <android.net.UriCodec: void flushDecodingByteAccumulator(java.lang.StringBuilder,java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,boolean)>(r0, r18, r1, z1);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);

        return;

     label11:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label12:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(b14);

     label13:
        goto label01;

     label14:
        staticinvoke <android.net.UriCodec: void flushDecodingByteAccumulator(java.lang.StringBuilder,java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,boolean)>(r0, r18, r1, z1);

        return;

        catch java.net.URISyntaxException from label06 to label07 with label10;
    }

    public static java.lang.String decode(java.lang.String, boolean, java.nio.charset.Charset, boolean)
    {
        java.lang.String r0, $r4;
        boolean z0, z1;
        java.nio.charset.Charset r1;
        java.lang.StringBuilder $r3;
        int $i0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.nio.charset.Charset;

        z1 := @parameter3: boolean;

        $r3 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i0);

        staticinvoke <android.net.UriCodec: void appendDecoded(java.lang.StringBuilder,java.lang.String,boolean,java.nio.charset.Charset,boolean)>($r3, r0, z0, r1, z1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static void flushDecodingByteAccumulator(java.lang.StringBuilder, java.nio.charset.CharsetDecoder, java.nio.ByteBuffer, boolean)
    {
        java.nio.ByteBuffer r0;
        boolean z0;
        int $i0, $i1, $i2;
        java.nio.CharBuffer $r2;
        java.lang.Throwable $r6, $r9;
        java.lang.StringBuilder r11;
        java.nio.charset.CharsetDecoder r12;
        java.lang.IllegalArgumentException r15;

        r11 := @parameter0: java.lang.StringBuilder;

        r12 := @parameter1: java.nio.charset.CharsetDecoder;

        r0 := @parameter2: java.nio.ByteBuffer;

        z0 := @parameter3: boolean;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

     label02:
        $r2 = virtualinvoke r12.<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)>(r0);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r2);

     label03:
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        goto label08;

     label04:
        $r6 := @caughtexception;

        goto label10;

     label05:
        $r9 := @caughtexception;

        if z0 != 0 goto label09;

     label06:
        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);

     label07:
        goto label03;

     label08:
        return;

     label09:
        r15 = new java.lang.IllegalArgumentException;

        specialinvoke r15.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r9);

        throw r15;

     label10:
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $i2 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i2);

        throw $r6;

        catch java.nio.charset.CharacterCodingException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
    }

    private static char getNextCharacter(java.lang.String, int, int, java.lang.String) throws java.net.URISyntaxException
    {
        java.lang.String r0, $r9, r10, r11;
        int i0, i1;
        char $c2;
        java.lang.StringBuilder $r1, $r5;
        java.net.URISyntaxException $r8;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r10 := @parameter3: java.lang.String;

        if i0 < i1 goto label3;

        if r10 != null goto label1;

        r11 = "";

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in [");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r11 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end of string");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r8 = new java.net.URISyntaxException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r0, $r9, i0);

        throw $r8;

     label3:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        return $c2;
    }

    private static int hexCharToValue(char)
    {
        char c0;
        int $i1, $i2, $i3, $i4, $i5;

        c0 := @parameter0: char;

        if 48 > c0 goto label1;

        if c0 > 57 goto label1;

        $i5 = c0 - 48;

        return $i5;

     label1:
        if 97 > c0 goto label2;

        if c0 > 102 goto label2;

        $i3 = c0 + 10;

        $i4 = $i3 - 97;

        return $i4;

     label2:
        if 65 > c0 goto label3;

        if c0 > 70 goto label3;

        $i1 = c0 + 10;

        $i2 = $i1 - 65;

        return $i2;

     label3:
        return -1;
    }

    private static java.net.URISyntaxException unexpectedCharacterException(java.lang.String, java.lang.String, char, int)
    {
        java.lang.String r0, $r11, r12, r13;
        char c0;
        int i1;
        java.lang.StringBuilder $r1, $r5;
        java.net.URISyntaxException $r10;

        r0 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        c0 := @parameter2: char;

        i1 := @parameter3: int;

        if r12 != null goto label1;

        r13 = "";

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in [");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r13 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected character");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r10 = new java.net.URISyntaxException;

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r0, $r11, i1);

        return $r10;
    }

    public static void <clinit>()
    {
        <android.net.UriCodec: char INVALID_INPUT_CHARACTER> = 65533;

        return;
    }
}
