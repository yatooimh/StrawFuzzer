public class android.net.VpnManager extends java.lang.Object
{
    public static final int TYPE_VPN_NONE;
    public static final int TYPE_VPN_PLATFORM;
    public static final int TYPE_VPN_SERVICE;
    private final android.content.Context mContext;
    private final android.net.IConnectivityManager mService;

    public void <init>(android.content.Context, android.net.IConnectivityManager)
    {
        android.net.VpnManager r0;
        android.content.Context r1, $r4;
        android.net.IConnectivityManager r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: android.net.VpnManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.IConnectivityManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "missing Context");

        $r4 = (android.content.Context) $r3;

        r0.<android.net.VpnManager: android.content.Context mContext> = $r4;

        $r5 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "missing IConnectivityManager");

        $r6 = (android.net.IConnectivityManager) $r5;

        r0.<android.net.VpnManager: android.net.IConnectivityManager mService> = $r6;

        return;
    }

    private static android.content.Intent getIntentForConfirmation()
    {
        android.content.Intent $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3;
        android.content.ComponentName $r4;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>()>();

        $r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(17039932);

        $r4 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r3);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r4);

        return $r1;
    }

    public void deleteProvisionedVpnProfile()
    {
        android.net.VpnManager r0;
        android.content.Context $r2;
        android.net.IConnectivityManager $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.net.VpnManager;

     label1:
        $r3 = r0.<android.net.VpnManager: android.net.IConnectivityManager mService>;

        $r2 = r0.<android.net.VpnManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r3.<android.net.IConnectivityManager: void deleteVpnProfile(java.lang.String)>($r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.Intent provisionVpnProfile(android.net.PlatformVpnProfile)
    {
        android.net.VpnManager r0;
        boolean z0;
        android.content.Context $r1;
        android.net.IConnectivityManager $r2;
        java.lang.String $r3;
        android.content.Intent $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        java.lang.Throwable $r7;
        java.lang.IllegalArgumentException $r8;
        android.net.PlatformVpnProfile r9;
        com.android.internal.net.VpnProfile r10;

        r0 := @this: android.net.VpnManager;

        r9 := @parameter0: android.net.PlatformVpnProfile;

     label1:
        r10 = virtualinvoke r9.<android.net.PlatformVpnProfile: com.android.internal.net.VpnProfile toVpnProfile()>();

     label2:
        $r2 = r0.<android.net.VpnManager: android.net.IConnectivityManager mService>;

        $r1 = r0.<android.net.VpnManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        z0 = interfaceinvoke $r2.<android.net.IConnectivityManager: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>(r10, $r3);

     label3:
        if z0 == 0 goto label4;

        return null;

     label4:
        $r4 = staticinvoke <android.net.VpnManager: android.content.Intent getIntentForConfirmation()>();

        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to serialize PlatformVpnProfile", $r7);

        throw $r8;

        catch java.security.GeneralSecurityException from label1 to label2 with label6;
        catch java.io.IOException from label1 to label2 with label6;
        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public void startProvisionedVpnProfile()
    {
        android.net.VpnManager r0;
        android.content.Context $r2;
        android.net.IConnectivityManager $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.net.VpnManager;

     label1:
        $r3 = r0.<android.net.VpnManager: android.net.IConnectivityManager mService>;

        $r2 = r0.<android.net.VpnManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r3.<android.net.IConnectivityManager: void startVpnProfile(java.lang.String)>($r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stopProvisionedVpnProfile()
    {
        android.net.VpnManager r0;
        android.content.Context $r2;
        android.net.IConnectivityManager $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: android.net.VpnManager;

     label1:
        $r3 = r0.<android.net.VpnManager: android.net.IConnectivityManager mService>;

        $r2 = r0.<android.net.VpnManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r3.<android.net.IConnectivityManager: void stopVpnProfile(java.lang.String)>($r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.net.VpnManager: int TYPE_VPN_SERVICE> = 1;

        <android.net.VpnManager: int TYPE_VPN_PLATFORM> = 2;

        <android.net.VpnManager: int TYPE_VPN_NONE> = -1;

        return;
    }
}
