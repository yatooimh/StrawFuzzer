public abstract class android.net.dhcp.IDhcpServer$Stub extends android.os.Binder implements android.net.dhcp.IDhcpServer
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getInterfaceHash;
    static final int TRANSACTION_getInterfaceVersion;
    static final int TRANSACTION_start;
    static final int TRANSACTION_startWithCallbacks;
    static final int TRANSACTION_stop;
    static final int TRANSACTION_updateParams;

    static void <clinit>()
    {
        java.lang.String $r0, $r1;

        <android.net.dhcp.IDhcpServer$Stub: int TRANSACTION_updateParams> = 2;

        <android.net.dhcp.IDhcpServer$Stub: int TRANSACTION_stop> = 3;

        <android.net.dhcp.IDhcpServer$Stub: int TRANSACTION_startWithCallbacks> = 4;

        <android.net.dhcp.IDhcpServer$Stub: int TRANSACTION_start> = 1;

        <android.net.dhcp.IDhcpServer$Stub: int TRANSACTION_getInterfaceVersion> = 16777215;

        <android.net.dhcp.IDhcpServer$Stub: int TRANSACTION_getInterfaceHash> = 16777214;

        $r0 = "android$net$dhcp$IDhcpServer";

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        <android.net.dhcp.IDhcpServer$Stub: java.lang.String DESCRIPTOR> = $r1;

        return;
    }

    public void <init>()
    {
        android.net.dhcp.IDhcpServer$Stub r0;
        java.lang.String $r1;

        r0 := @this: android.net.dhcp.IDhcpServer$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        $r1 = <android.net.dhcp.IDhcpServer$Stub: java.lang.String DESCRIPTOR>;

        virtualinvoke r0.<android.net.dhcp.IDhcpServer$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, $r1);

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <android.net.dhcp.IDhcpServer$Stub: java.lang.String DESCRIPTOR>;

        return $r0;
    }

    public static android.net.dhcp.IDhcpServer asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        java.lang.String $r2;
        android.net.dhcp.IDhcpServer$Stub$Proxy $r3;
        boolean $z0;
        android.net.dhcp.IDhcpServer $r4;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = <android.net.dhcp.IDhcpServer$Stub: java.lang.String DESCRIPTOR>;

        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>($r2);

        if r1 == null goto label2;

        $z0 = r1 instanceof android.net.dhcp.IDhcpServer;

        if $z0 == 0 goto label2;

        $r4 = (android.net.dhcp.IDhcpServer) r1;

        return $r4;

     label2:
        $r3 = new android.net.dhcp.IDhcpServer$Stub$Proxy;

        specialinvoke $r3.<android.net.dhcp.IDhcpServer$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r3;
    }

    public static android.net.dhcp.IDhcpServer getDefaultImpl()
    {
        android.net.dhcp.IDhcpServer $r0;

        $r0 = <android.net.dhcp.IDhcpServer$Stub$Proxy: android.net.dhcp.IDhcpServer sDefaultImpl>;

        return $r0;
    }

    public static boolean setDefaultImpl(android.net.dhcp.IDhcpServer)
    {
        android.net.dhcp.IDhcpServer r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.net.dhcp.IDhcpServer;

        $r1 = <android.net.dhcp.IDhcpServer$Stub$Proxy: android.net.dhcp.IDhcpServer sDefaultImpl>;

        if $r1 != null goto label2;

        if r0 == null goto label1;

        <android.net.dhcp.IDhcpServer$Stub$Proxy: android.net.dhcp.IDhcpServer sDefaultImpl> = r0;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.net.dhcp.IDhcpServer$Stub r0;

        r0 := @this: android.net.dhcp.IDhcpServer$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.net.dhcp.IDhcpServer$Stub r0;
        int i0, i1, $i2, $i3;
        android.os.Parcel r1, r16;
        java.lang.String r2, $r15;
        android.os.IBinder $r3, $r5, $r9, $r11, $r13;
        android.net.INetworkStackStatusCallback $r4, $r6, $r10, $r12;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;
        android.net.dhcp.IDhcpEventCallbacks $r14;
        boolean $z0;
        android.net.dhcp.DhcpServingParamsParcel r17;

        r0 := @this: android.net.dhcp.IDhcpServer$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r16 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r2 = <android.net.dhcp.IDhcpServer$Stub: java.lang.String DESCRIPTOR>;

        if i0 == 1 goto label10;

        if i0 == 2 goto label07;

        if i0 == 3 goto label06;

        if i0 == 4 goto label05;

        if i0 == 1598968902 goto label04;

        tableswitch(i0)
        {
            case 16777214: goto label03;
            case 16777215: goto label02;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r16, i1);

        return $z0;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r2);

        virtualinvoke r16.<android.os.Parcel: void writeNoException()>();

        $i3 = virtualinvoke r0.<android.net.dhcp.IDhcpServer$Stub: int getInterfaceVersion()>();

        virtualinvoke r16.<android.os.Parcel: void writeInt(int)>($i3);

        return 1;

     label03:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r2);

        virtualinvoke r16.<android.os.Parcel: void writeNoException()>();

        $r15 = virtualinvoke r0.<android.net.dhcp.IDhcpServer$Stub: java.lang.String getInterfaceHash()>();

        virtualinvoke r16.<android.os.Parcel: void writeString(java.lang.String)>($r15);

        return 1;

     label04:
        virtualinvoke r16.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r2);

        $r11 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r12 = staticinvoke <android.net.INetworkStackStatusCallback$Stub: android.net.INetworkStackStatusCallback asInterface(android.os.IBinder)>($r11);

        $r13 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r14 = staticinvoke <android.net.dhcp.IDhcpEventCallbacks$Stub: android.net.dhcp.IDhcpEventCallbacks asInterface(android.os.IBinder)>($r13);

        virtualinvoke r0.<android.net.dhcp.IDhcpServer$Stub: void startWithCallbacks(android.net.INetworkStackStatusCallback,android.net.dhcp.IDhcpEventCallbacks)>($r12, $r14);

        return 1;

     label06:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r2);

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r10 = staticinvoke <android.net.INetworkStackStatusCallback$Stub: android.net.INetworkStackStatusCallback asInterface(android.os.IBinder)>($r9);

        virtualinvoke r0.<android.net.dhcp.IDhcpServer$Stub: void stop(android.net.INetworkStackStatusCallback)>($r10);

        return 1;

     label07:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r2);

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label08;

        $r7 = <android.net.dhcp.DhcpServingParamsParcel: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r17 = (android.net.dhcp.DhcpServingParamsParcel) $r8;

        goto label09;

     label08:
        r17 = null;

     label09:
        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r6 = staticinvoke <android.net.INetworkStackStatusCallback$Stub: android.net.INetworkStackStatusCallback asInterface(android.os.IBinder)>($r5);

        virtualinvoke r0.<android.net.dhcp.IDhcpServer$Stub: void updateParams(android.net.dhcp.DhcpServingParamsParcel,android.net.INetworkStackStatusCallback)>(r17, $r6);

        return 1;

     label10:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r2);

        $r3 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r4 = staticinvoke <android.net.INetworkStackStatusCallback$Stub: android.net.INetworkStackStatusCallback asInterface(android.os.IBinder)>($r3);

        virtualinvoke r0.<android.net.dhcp.IDhcpServer$Stub: void start(android.net.INetworkStackStatusCallback)>($r4);

        return 1;
    }
}
