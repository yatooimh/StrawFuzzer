abstract class android.net.http.Connection extends java.lang.Object
{
    private static final int DONE;
    private static final int DRAIN;
    private static final java.lang.String HTTP_CONNECTION;
    private static final int MAX_PIPE;
    private static final int MIN_PIPE;
    private static final int READ;
    private static final int RETRY_REQUEST_LIMIT;
    private static final int SEND;
    static final int SOCKET_TIMEOUT;
    private static int STATE_CANCEL_REQUESTED;
    private static int STATE_NORMAL;
    private static final java.lang.String[] states;
    private int mActive;
    private byte[] mBuf;
    private boolean mCanPersist;
    protected android.net.http.SslCertificate mCertificate;
    android.content.Context mContext;
    org.apache.http.HttpHost mHost;
    protected android.net.http.AndroidHttpClientConnection mHttpClientConnection;
    private org.apache.http.protocol.HttpContext mHttpContext;
    android.net.http.RequestFeeder mRequestFeeder;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.net.http.Connection: int SOCKET_TIMEOUT> = 60000;

        <android.net.http.Connection: int SEND> = 0;

        <android.net.http.Connection: int RETRY_REQUEST_LIMIT> = 2;

        <android.net.http.Connection: int READ> = 1;

        <android.net.http.Connection: int MIN_PIPE> = 2;

        <android.net.http.Connection: int MAX_PIPE> = 3;

        <android.net.http.Connection: java.lang.String HTTP_CONNECTION> = "http.connection";

        <android.net.http.Connection: int DRAIN> = 2;

        <android.net.http.Connection: int DONE> = 3;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "SEND";

        $r0[1] = "READ";

        $r0[2] = "DRAIN";

        $r0[3] = "DONE";

        <android.net.http.Connection: java.lang.String[] states> = $r0;

        <android.net.http.Connection: int STATE_NORMAL> = 0;

        <android.net.http.Connection: int STATE_CANCEL_REQUESTED> = 1;

        return;
    }

    protected void <init>(android.content.Context, org.apache.http.HttpHost, android.net.http.RequestFeeder)
    {
        android.net.http.Connection r0;
        android.content.Context r1;
        org.apache.http.HttpHost r2;
        android.net.http.RequestFeeder r3;
        int $i0;
        org.apache.http.protocol.BasicHttpContext $r4;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.apache.http.HttpHost;

        r3 := @parameter2: android.net.http.RequestFeeder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection> = null;

        r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate> = null;

        $i0 = <android.net.http.Connection: int STATE_NORMAL>;

        r0.<android.net.http.Connection: int mActive> = $i0;

        r0.<android.net.http.Connection: android.content.Context mContext> = r1;

        r0.<android.net.http.Connection: org.apache.http.HttpHost mHost> = r2;

        r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder> = r3;

        r0.<android.net.http.Connection: boolean mCanPersist> = 0;

        $r4 = new org.apache.http.protocol.BasicHttpContext;

        specialinvoke $r4.<org.apache.http.protocol.BasicHttpContext: void <init>(org.apache.http.protocol.HttpContext)>(null);

        r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext> = $r4;

        return;
    }

    private boolean clearPipe(java.util.LinkedList)
    {
        android.net.http.Connection r0;
        android.net.http.RequestFeeder r1, $r4, $r6;
        android.net.http.Request r2;
        boolean $z0, $z1, z2, z3;
        org.apache.http.HttpHost $r3;
        java.lang.Object $r5;
        java.lang.Throwable $r7;
        java.util.LinkedList r8;

        r0 := @this: android.net.http.Connection;

        r8 := @parameter0: java.util.LinkedList;

        z2 = 1;

        r1 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r8.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r5 = virtualinvoke r8.<java.util.LinkedList: java.lang.Object removeLast()>();

        r2 = (android.net.http.Request) $r5;

        $r6 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        interfaceinvoke $r6.<android.net.http.RequestFeeder: void requeueRequest(android.net.http.Request)>(r2);

     label2:
        z2 = 0;

        goto label1;

     label3:
        z3 = z2;

        if z2 == 0 goto label5;

     label4:
        $r4 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        $r3 = r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        $z1 = interfaceinvoke $r4.<android.net.http.RequestFeeder: boolean haveRequest(org.apache.http.HttpHost)>($r3);

        z3 = $z1 ^ 1;

     label5:
        exitmonitor r1;

     label6:
        return z3;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    static android.net.http.Connection getConnection(android.content.Context, org.apache.http.HttpHost, org.apache.http.HttpHost, android.net.http.RequestFeeder)
    {
        android.content.Context r0;
        org.apache.http.HttpHost r1, r2;
        android.net.http.RequestFeeder r3;
        java.lang.String $r4;
        boolean $z0;
        android.net.http.HttpsConnection $r5;
        android.net.http.HttpConnection $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.apache.http.HttpHost;

        r2 := @parameter2: org.apache.http.HttpHost;

        r3 := @parameter3: android.net.http.RequestFeeder;

        $r4 = virtualinvoke r1.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z0 == 0 goto label1;

        $r6 = new android.net.http.HttpConnection;

        specialinvoke $r6.<android.net.http.HttpConnection: void <init>(android.content.Context,org.apache.http.HttpHost,android.net.http.RequestFeeder)>(r0, r1, r3);

        return $r6;

     label1:
        $r5 = new android.net.http.HttpsConnection;

        specialinvoke $r5.<android.net.http.HttpsConnection: void <init>(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)>(r0, r1, r2, r3);

        return $r5;
    }

    private static java.lang.String getEventHandlerErrorString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -15: goto label17;
            case -14: goto label16;
            case -13: goto label15;
            case -12: goto label14;
            case -11: goto label13;
            case -10: goto label12;
            case -9: goto label11;
            case -8: goto label10;
            case -7: goto label09;
            case -6: goto label08;
            case -5: goto label07;
            case -4: goto label06;
            case -3: goto label05;
            case -2: goto label04;
            case -1: goto label03;
            case 0: goto label02;
            default: goto label01;
        };

     label01:
        return "UNKNOWN_ERROR";

     label02:
        return "OK";

     label03:
        return "ERROR";

     label04:
        return "ERROR_LOOKUP";

     label05:
        return "ERROR_UNSUPPORTED_AUTH_SCHEME";

     label06:
        return "ERROR_AUTH";

     label07:
        return "ERROR_PROXYAUTH";

     label08:
        return "ERROR_CONNECT";

     label09:
        return "ERROR_IO";

     label10:
        return "ERROR_TIMEOUT";

     label11:
        return "ERROR_REDIRECT_LOOP";

     label12:
        return "ERROR_UNSUPPORTED_SCHEME";

     label13:
        return "ERROR_FAILED_SSL_HANDSHAKE";

     label14:
        return "ERROR_BAD_URL";

     label15:
        return "FILE_ERROR";

     label16:
        return "FILE_NOT_FOUND_ERROR";

     label17:
        return "TOO_MANY_REQUESTS_ERROR";
    }

    private boolean httpFailure(android.net.http.Request, int, java.lang.Exception)
    {
        android.net.http.Connection r0;
        android.net.http.Request r1;
        int i0, i1, $i2;
        java.lang.Throwable r2;
        java.lang.Exception r4;
        boolean z0;
        java.lang.String r5;
        android.net.http.EventHandler $r6;
        org.apache.http.protocol.HttpContext $r7;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: android.net.http.Request;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.Exception;

        z0 = 1;

        $i2 = r1.<android.net.http.Request: int mFailCount>;

        i1 = $i2 + 1;

        r1.<android.net.http.Request: int mFailCount> = i1;

        if i1 < 2 goto label4;

        z0 = 0;

        if i0 >= 0 goto label1;

        r5 = staticinvoke <android.net.http.Connection: java.lang.String getEventHandlerErrorString(int)>(i0);

        goto label3;

     label1:
        r2 = virtualinvoke r4.<java.lang.Exception: java.lang.Throwable getCause()>();

        if r2 == null goto label2;

        r5 = virtualinvoke r2.<java.lang.Throwable: java.lang.String toString()>();

        goto label3;

     label2:
        r5 = virtualinvoke r4.<java.lang.Exception: java.lang.String getMessage()>();

     label3:
        $r6 = r1.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r6.<android.net.http.EventHandler: void error(int,java.lang.String)>(i0, r5);

        virtualinvoke r1.<android.net.http.Request: void complete()>();

     label4:
        virtualinvoke r0.<android.net.http.Connection: void closeConnection()>();

        $r7 = r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        interfaceinvoke $r7.<org.apache.http.protocol.HttpContext: java.lang.Object removeAttribute(java.lang.String)>("http.connection");

        return z0;
    }

    private boolean keepAlive(org.apache.http.HttpEntity, org.apache.http.ProtocolVersion, int, org.apache.http.protocol.HttpContext)
    {
        android.net.http.Connection r0;
        org.apache.http.HttpEntity r1;
        org.apache.http.ProtocolVersion r2;
        int i0;
        java.lang.Object $r3;
        org.apache.http.HttpVersion $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l1;
        byte $b2;
        org.apache.http.protocol.HttpContext r6;
        org.apache.http.HttpConnection r7;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: org.apache.http.HttpEntity;

        r2 := @parameter1: org.apache.http.ProtocolVersion;

        i0 := @parameter2: int;

        r6 := @parameter3: org.apache.http.protocol.HttpContext;

        $r3 = interfaceinvoke r6.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.connection");

        r7 = (org.apache.http.HttpConnection) $r3;

        if r7 == null goto label1;

        $z4 = interfaceinvoke r7.<org.apache.http.HttpConnection: boolean isOpen()>();

        if $z4 != 0 goto label1;

        return 0;

     label1:
        if r1 == null goto label3;

        $l1 = interfaceinvoke r1.<org.apache.http.HttpEntity: long getContentLength()>();

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label3;

        $z2 = interfaceinvoke r1.<org.apache.http.HttpEntity: boolean isChunked()>();

        if $z2 == 0 goto label2;

        $r5 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z3 = virtualinvoke r2.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r5);

        if $z3 == 0 goto label3;

     label2:
        return 0;

     label3:
        if i0 != 1 goto label4;

        return 0;

     label4:
        if i0 != 2 goto label5;

        return 1;

     label5:
        $r4 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z0 = virtualinvoke r2.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r4);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    private boolean openHttpConnection(android.net.http.Request)
    {
        android.net.http.Connection r0;
        android.net.http.Request r1;
        android.net.http.AndroidHttpClientConnection r2, $r3;
        org.apache.http.protocol.HttpContext $r4;
        int $i1, $i2, $i3;
        android.net.http.RequestFeeder $r5;
        java.lang.Throwable $r6, $r7, $r9, $r10, r11;
        android.net.http.SSLConnectionClosedByUserException $r8;
        byte b4;
        boolean z1;
        java.lang.Exception r13;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: android.net.http.Request;

        staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        b4 = 0;

        r11 = null;

        z1 = 0;

     label01:
        r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate> = null;

        r2 = virtualinvoke r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>(r1);

        r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection> = r2;

     label02:
        if r2 == null goto label05;

     label03:
        virtualinvoke r2.<android.net.http.AndroidHttpClientConnection: void setSocketTimeout(int)>(60000);

        $r4 = r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        $r3 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        interfaceinvoke $r4.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", $r3);

     label04:
        goto label12;

     label05:
        r1.<android.net.http.Request: int mFailCount> = 2;

     label06:
        return 0;

     label07:
        $r6 := @caughtexception;

        r11 = $r6;

        b4 = -6;

        goto label12;

     label08:
        $r7 := @caughtexception;

        r11 = $r7;

        r1.<android.net.http.Request: int mFailCount> = 2;

        b4 = -11;

        goto label12;

     label09:
        $r8 := @caughtexception;

        r1.<android.net.http.Request: int mFailCount> = 2;

        return 0;

     label10:
        $r10 := @caughtexception;

        r11 = $r10;

        b4 = -6;

        r1.<android.net.http.Request: int mFailCount> = 2;

        goto label12;

     label11:
        $r9 := @caughtexception;

        r11 = $r9;

        b4 = -2;

     label12:
        if b4 != 0 goto label13;

        return 1;

     label13:
        $i1 = r1.<android.net.http.Request: int mFailCount>;

        if $i1 >= 2 goto label14;

        $r5 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        interfaceinvoke $r5.<android.net.http.RequestFeeder: void requeueRequest(android.net.http.Request)>(r1);

        $i2 = r1.<android.net.http.Request: int mFailCount>;

        $i3 = $i2 + 1;

        r1.<android.net.http.Request: int mFailCount> = $i3;

        goto label15;

     label14:
        r13 = (java.lang.Exception) r11;

        specialinvoke r0.<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>(r1, b4, r13);

     label15:
        if b4 != 0 goto label16;

        z1 = 1;

     label16:
        return z1;

        catch java.net.UnknownHostException from label01 to label02 with label11;
        catch java.lang.IllegalArgumentException from label01 to label02 with label10;
        catch android.net.http.SSLConnectionClosedByUserException from label01 to label02 with label09;
        catch javax.net.ssl.SSLHandshakeException from label01 to label02 with label08;
        catch java.io.IOException from label01 to label02 with label07;
        catch java.net.UnknownHostException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label03 to label04 with label10;
        catch android.net.http.SSLConnectionClosedByUserException from label03 to label04 with label09;
        catch javax.net.ssl.SSLHandshakeException from label03 to label04 with label08;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.net.UnknownHostException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label10;
        catch android.net.http.SSLConnectionClosedByUserException from label05 to label06 with label09;
        catch javax.net.ssl.SSLHandshakeException from label05 to label06 with label08;
        catch java.io.IOException from label05 to label06 with label07;
    }

    void cancel()
    {
        android.net.http.Connection r0;
        int $i0;

        r0 := @this: android.net.http.Connection;

        $i0 = <android.net.http.Connection: int STATE_CANCEL_REQUESTED>;

        r0.<android.net.http.Connection: int mActive> = $i0;

        virtualinvoke r0.<android.net.http.Connection: void closeConnection()>();

        return;
    }

    abstract void closeConnection();

    byte[] getBuf()
    {
        android.net.http.Connection r0;
        byte[] $r1, $r2, $r3;

        r0 := @this: android.net.http.Connection;

        $r1 = r0.<android.net.http.Connection: byte[] mBuf>;

        if $r1 != null goto label1;

        $r3 = newarray (byte)[8192];

        r0.<android.net.http.Connection: byte[] mBuf> = $r3;

     label1:
        $r2 = r0.<android.net.http.Connection: byte[] mBuf>;

        return $r2;
    }

    boolean getCanPersist()
    {
        android.net.http.Connection r0;
        boolean $z0;

        r0 := @this: android.net.http.Connection;

        $z0 = r0.<android.net.http.Connection: boolean mCanPersist>;

        return $z0;
    }

    android.net.http.SslCertificate getCertificate()
    {
        android.net.http.Connection r0;
        android.net.http.SslCertificate $r1;

        r0 := @this: android.net.http.Connection;

        $r1 = r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate>;

        return $r1;
    }

    org.apache.http.HttpHost getHost()
    {
        android.net.http.Connection r0;
        org.apache.http.HttpHost $r1;

        r0 := @this: android.net.http.Connection;

        $r1 = r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        return $r1;
    }

    org.apache.http.protocol.HttpContext getHttpContext()
    {
        android.net.http.Connection r0;
        org.apache.http.protocol.HttpContext $r1;

        r0 := @this: android.net.http.Connection;

        $r1 = r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        return $r1;
    }

    abstract java.lang.String getScheme();

    abstract android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request) throws java.io.IOException;

    void processRequests(android.net.http.Request)
    {
        android.net.http.Connection r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i9, i10, i11, i12, i13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, z11, $z12, $z13;
        android.net.http.SslCertificate $r3;
        android.net.http.EventHandler $r4;
        android.net.http.AndroidHttpClientConnection $r5, $r11, r28;
        org.apache.http.HttpHost $r6, $r8;
        android.net.http.RequestFeeder $r7, $r9;
        java.lang.Object $r10;
        org.apache.http.protocol.HttpContext $r12;
        java.lang.Throwable $r14, $r16, $r18, $r19, $r20, r22, r26, r29;
        org.apache.http.HttpException $r15;
        org.apache.http.ParseException $r17;
        android.net.http.Request r21, r24, r25, r27;
        byte b7;
        java.util.LinkedList r30;
        java.lang.Exception r31, r32;

        r0 := @this: android.net.http.Connection;

        r21 := @parameter0: android.net.http.Request;

        i4 = 0;

        r22 = null;

        r30 = new java.util.LinkedList;

        specialinvoke r30.<java.util.LinkedList: void <init>()>();

        i5 = 2;

        i6 = 3;

        b7 = 0;

     label01:
        if b7 == 3 goto label41;

        $i1 = r0.<android.net.http.Connection: int mActive>;

        $i0 = <android.net.http.Connection: int STATE_CANCEL_REQUESTED>;

        if $i1 != $i0 goto label06;

     label02:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label03:
        goto label05;

     label04:
        $r18 := @caughtexception;

        goto label03;

     label05:
        $i3 = <android.net.http.Connection: int STATE_NORMAL>;

        r0.<android.net.http.Connection: int mActive> = $i3;

     label06:
        if b7 == 0 goto label21;

        if b7 == 1 goto label07;

        if b7 == 2 goto label07;

        i9 = i5;

        i10 = i6;

        r24 = r21;

        goto label40;

     label07:
        $r9 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        $r8 = r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        $z6 = interfaceinvoke $r9.<android.net.http.RequestFeeder: boolean haveRequest(org.apache.http.HttpHost)>($r8);

        z11 = $z6 ^ 1;

        i11 = virtualinvoke r30.<java.util.LinkedList: int size()>();

        if b7 == 2 goto label08;

        if i11 >= i5 goto label08;

        if z11 != 0 goto label08;

        $z10 = r0.<android.net.http.Connection: boolean mCanPersist>;

        if $z10 == 0 goto label08;

        b7 = 0;

        i9 = i5;

        i10 = i6;

        r24 = r21;

        goto label40;

     label08:
        if i11 != 0 goto label11;

        if z11 == 0 goto label09;

        b7 = 3;

        goto label10;

     label09:
        b7 = 0;

     label10:
        i9 = i5;

        i10 = i6;

        r24 = r21;

        goto label40;

     label11:
        $r10 = virtualinvoke r30.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r25 = (android.net.http.Request) $r10;

     label12:
        $r11 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        virtualinvoke r25.<android.net.http.Request: void readResponse(android.net.http.AndroidHttpClientConnection)>($r11);

     label13:
        goto label17;

     label14:
        $r19 := @caughtexception;

        r22 = $r19;

        i12 = -7;

        goto label18;

     label15:
        $r16 := @caughtexception;

        r22 = $r16;

        i4 = -7;

        goto label17;

     label16:
        $r17 := @caughtexception;

        r22 = $r17;

        i4 = -7;

     label17:
        i12 = i4;

     label18:
        r26 = r22;

        if r22 == null goto label20;

        r31 = (java.lang.Exception) r22;

        $z8 = specialinvoke r0.<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>(r25, i12, r31);

        if $z8 == 0 goto label19;

        $z9 = r25.<android.net.http.Request: boolean mCancelled>;

        if $z9 != 0 goto label19;

        virtualinvoke r25.<android.net.http.Request: void reset()>();

        virtualinvoke r30.<java.util.LinkedList: void addFirst(java.lang.Object)>(r25);

     label19:
        r26 = null;

        r0.<android.net.http.Connection: boolean mCanPersist> = 0;

     label20:
        i4 = i12;

        r22 = r26;

        i9 = i5;

        i10 = i6;

        r24 = r21;

        $z12 = r0.<android.net.http.Connection: boolean mCanPersist>;

        if $z12 != 0 goto label40;

        virtualinvoke r0.<android.net.http.Connection: void closeConnection()>();

        $r12 = r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        interfaceinvoke $r12.<org.apache.http.protocol.HttpContext: java.lang.Object removeAttribute(java.lang.String)>("http.connection");

        specialinvoke r0.<android.net.http.Connection: boolean clearPipe(java.util.LinkedList)>(r30);

        i10 = 1;

        i9 = 1;

        b7 = 0;

        i4 = i12;

        r22 = r26;

        r24 = r21;

        goto label40;

     label21:
        $i2 = virtualinvoke r30.<java.util.LinkedList: int size()>();

        if $i2 != i6 goto label22;

        b7 = 1;

        i9 = i5;

        i10 = i6;

        r24 = r21;

        goto label40;

     label22:
        if r21 != null goto label23;

        $r7 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        $r6 = r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        r27 = interfaceinvoke $r7.<android.net.http.RequestFeeder: android.net.http.Request getRequest(org.apache.http.HttpHost)>($r6);

        goto label24;

     label23:
        r27 = r21;

        r21 = null;

     label24:
        if r27 != null goto label25;

        b7 = 2;

        i9 = i5;

        i10 = i6;

        r24 = r21;

        goto label40;

     label25:
        virtualinvoke r27.<android.net.http.Request: void setConnection(android.net.http.Connection)>(r0);

        $z0 = r27.<android.net.http.Request: boolean mCancelled>;

        if $z0 == 0 goto label26;

        virtualinvoke r27.<android.net.http.Request: void complete()>();

        i9 = i5;

        i10 = i6;

        r24 = r21;

        goto label40;

     label26:
        r28 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        if r28 == null goto label27;

        $z5 = virtualinvoke r28.<android.net.http.AndroidHttpClientConnection: boolean isOpen()>();

        if $z5 != 0 goto label28;

     label27:
        $z1 = specialinvoke r0.<android.net.http.Connection: boolean openHttpConnection(android.net.http.Request)>(r27);

        if $z1 != 0 goto label28;

        b7 = 3;

        i9 = i5;

        i10 = i6;

        r24 = r21;

        goto label40;

     label28:
        $r4 = r27.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        $r3 = r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate>;

        interfaceinvoke $r4.<android.net.http.EventHandler: void certificate(android.net.http.SslCertificate)>($r3);

     label29:
        $r5 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        virtualinvoke r27.<android.net.http.Request: void sendRequest(android.net.http.AndroidHttpClientConnection)>($r5);

     label30:
        goto label34;

     label31:
        $r20 := @caughtexception;

        r29 = $r20;

        i13 = -7;

        goto label35;

     label32:
        $r14 := @caughtexception;

        r22 = $r14;

        i4 = -7;

        goto label34;

     label33:
        $r15 := @caughtexception;

        r22 = $r15;

        i4 = -1;

     label34:
        r29 = r22;

        i13 = i4;

     label35:
        if r29 == null goto label39;

        r32 = (java.lang.Exception) r29;

        $z3 = specialinvoke r0.<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>(r27, i13, r32);

        if $z3 == 0 goto label36;

        $z4 = r27.<android.net.http.Request: boolean mCancelled>;

        if $z4 != 0 goto label36;

        virtualinvoke r30.<java.util.LinkedList: void addLast(java.lang.Object)>(r27);

     label36:
        r22 = null;

        $z13 = specialinvoke r0.<android.net.http.Connection: boolean clearPipe(java.util.LinkedList)>(r30);

        if $z13 == 0 goto label37;

        b7 = 3;

        goto label38;

     label37:
        b7 = 0;

     label38:
        i10 = 1;

        i9 = 1;

        i4 = i13;

        r24 = r21;

        goto label40;

     label39:
        virtualinvoke r30.<java.util.LinkedList: void addLast(java.lang.Object)>(r27);

        i4 = i13;

        r22 = r29;

        i9 = i5;

        i10 = i6;

        r24 = r21;

        $z2 = r0.<android.net.http.Connection: boolean mCanPersist>;

        if $z2 != 0 goto label40;

        b7 = 1;

        r24 = r21;

        i10 = i6;

        i9 = i5;

        r22 = r29;

        i4 = i13;

     label40:
        i5 = i9;

        i6 = i10;

        r21 = r24;

        goto label01;

     label41:
        return;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch org.apache.http.ParseException from label12 to label13 with label16;
        catch java.io.IOException from label12 to label13 with label15;
        catch java.lang.IllegalStateException from label12 to label13 with label14;
        catch org.apache.http.HttpException from label29 to label30 with label33;
        catch java.io.IOException from label29 to label30 with label32;
        catch java.lang.IllegalStateException from label29 to label30 with label31;
    }

    void setCanPersist(org.apache.http.HttpEntity, org.apache.http.ProtocolVersion, int)
    {
        android.net.http.Connection r0;
        org.apache.http.HttpEntity r1;
        org.apache.http.ProtocolVersion r2;
        int i0;
        org.apache.http.protocol.HttpContext $r3;
        boolean $z0;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: org.apache.http.HttpEntity;

        r2 := @parameter1: org.apache.http.ProtocolVersion;

        i0 := @parameter2: int;

        $r3 = r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        $z0 = specialinvoke r0.<android.net.http.Connection: boolean keepAlive(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext)>(r1, r2, i0, $r3);

        r0.<android.net.http.Connection: boolean mCanPersist> = $z0;

        return;
    }

    void setCanPersist(boolean)
    {
        android.net.http.Connection r0;
        boolean z0;

        r0 := @this: android.net.http.Connection;

        z0 := @parameter0: boolean;

        r0.<android.net.http.Connection: boolean mCanPersist> = z0;

        return;
    }

    public java.lang.String toString()
    {
        android.net.http.Connection r0;
        org.apache.http.HttpHost $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: android.net.http.Connection;

        entermonitor r0;

     label1:
        $r1 = r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        r3 = virtualinvoke $r1.<org.apache.http.HttpHost: java.lang.String toString()>();

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
