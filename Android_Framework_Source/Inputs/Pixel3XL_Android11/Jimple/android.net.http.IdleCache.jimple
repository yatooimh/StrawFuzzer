class android.net.http.IdleCache extends java.lang.Object
{
    private static final int CHECK_INTERVAL;
    private static final int EMPTY_CHECK_MAX;
    private static final int IDLE_CACHE_MAX;
    private static final int TIMEOUT;
    private int mCached;
    private int mCount;
    private android.net.http.IdleCache$Entry[] mEntries;
    private int mReused;
    private android.net.http.IdleCache$IdleReaper mThread;

    void <init>()
    {
        android.net.http.IdleCache r0;
        android.net.http.IdleCache$Entry[] $r1, $r3;
        android.net.http.IdleCache$Entry $r2;
        int i0;

        r0 := @this: android.net.http.IdleCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (android.net.http.IdleCache$Entry)[8];

        r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries> = $r1;

        r0.<android.net.http.IdleCache: int mCount> = 0;

        r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread> = null;

        r0.<android.net.http.IdleCache: int mCached> = 0;

        r0.<android.net.http.IdleCache: int mReused> = 0;

        i0 = 0;

     label1:
        if i0 >= 8 goto label2;

        $r3 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        $r2 = new android.net.http.IdleCache$Entry;

        specialinvoke $r2.<android.net.http.IdleCache$Entry: void <init>(android.net.http.IdleCache)>(r0);

        $r3[i0] = $r2;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    static int access$100(android.net.http.IdleCache)
    {
        android.net.http.IdleCache r0;
        int $i0;

        r0 := @parameter0: android.net.http.IdleCache;

        $i0 = r0.<android.net.http.IdleCache: int mCount>;

        return $i0;
    }

    static void access$200(android.net.http.IdleCache)
    {
        android.net.http.IdleCache r0;

        r0 := @parameter0: android.net.http.IdleCache;

        specialinvoke r0.<android.net.http.IdleCache: void clearIdle()>();

        return;
    }

    static android.net.http.IdleCache$IdleReaper access$302(android.net.http.IdleCache, android.net.http.IdleCache$IdleReaper)
    {
        android.net.http.IdleCache r0;
        android.net.http.IdleCache$IdleReaper r1;

        r0 := @parameter0: android.net.http.IdleCache;

        r1 := @parameter1: android.net.http.IdleCache$IdleReaper;

        r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread> = r1;

        return r1;
    }

    private void clearIdle()
    {
        android.net.http.IdleCache r0;
        long l0, $l2;
        int $i1, $i4, $i5, i6;
        android.net.http.IdleCache$Entry[] $r1;
        org.apache.http.HttpHost $r2;
        byte $b3;
        android.net.http.Connection $r3;
        java.lang.Throwable $r4;
        android.net.http.IdleCache$Entry r5;

        r0 := @this: android.net.http.IdleCache;

        entermonitor r0;

     label1:
        $i1 = r0.<android.net.http.IdleCache: int mCount>;

        if $i1 <= 0 goto label6;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label2:
        i6 = 0;

     label3:
        if i6 >= 8 goto label6;

     label4:
        $r1 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        r5 = $r1[i6];

        $r2 = r5.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if $r2 == null goto label5;

        $l2 = r5.<android.net.http.IdleCache$Entry: long mTimeout>;

        $b3 = l0 cmp $l2;

        if $b3 <= 0 goto label5;

        r5.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = null;

        $r3 = r5.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection>;

        virtualinvoke $r3.<android.net.http.Connection: void closeConnection()>();

        r5.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = null;

        $i4 = r0.<android.net.http.IdleCache: int mCount>;

        $i5 = $i4 - 1;

        r0.<android.net.http.IdleCache: int mCount> = $i5;

     label5:
        i6 = i6 + 1;

        goto label3;

     label6:
        exitmonitor r0;

        return;

     label7:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    boolean cacheConnection(org.apache.http.HttpHost, android.net.http.Connection)
    {
        android.net.http.IdleCache r0;
        android.net.http.Connection r1;
        long l0, $l2;
        android.net.http.IdleCache$Entry r2;
        int $i1, $i3, $i4, i5;
        android.net.http.IdleCache$Entry[] $r3;
        org.apache.http.HttpHost $r4, r7;
        android.net.http.IdleCache$IdleReaper $r5, r8;
        java.lang.Throwable $r6;
        boolean z1;

        r0 := @this: android.net.http.IdleCache;

        r7 := @parameter0: org.apache.http.HttpHost;

        r1 := @parameter1: android.net.http.Connection;

        entermonitor r0;

        z1 = 0;

     label01:
        $i1 = r0.<android.net.http.IdleCache: int mCount>;

        if $i1 >= 8 goto label09;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label02:
        i5 = 0;

     label03:
        z1 = 0;

        if i5 >= 8 goto label09;

     label04:
        $r3 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        r2 = $r3[i5];

        $r4 = r2.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if $r4 != null goto label08;

        r2.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = r7;

        r2.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = r1;

        $l2 = 6000L + l0;

        r2.<android.net.http.IdleCache$Entry: long mTimeout> = $l2;

        $i3 = r0.<android.net.http.IdleCache: int mCount>;

        $i4 = $i3 + 1;

        r0.<android.net.http.IdleCache: int mCount> = $i4;

     label05:
        z1 = 1;

     label06:
        $r5 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread>;

        if $r5 != null goto label09;

        r8 = new android.net.http.IdleCache$IdleReaper;

        specialinvoke r8.<android.net.http.IdleCache$IdleReaper: void <init>(android.net.http.IdleCache,android.net.http.IdleCache$1)>(r0, null);

        r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread> = r8;

        virtualinvoke r8.<android.net.http.IdleCache$IdleReaper: void start()>();

     label07:
        z1 = 1;

        goto label09;

     label08:
        i5 = i5 + 1;

        goto label03;

     label09:
        exitmonitor r0;

        return z1;

     label10:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    void clear()
    {
        android.net.http.IdleCache r0;
        int $i0, $i1, $i2, i3;
        android.net.http.IdleCache$Entry[] $r1;
        org.apache.http.HttpHost $r2;
        android.net.http.Connection $r3;
        java.lang.Throwable $r4;
        android.net.http.IdleCache$Entry r5;

        r0 := @this: android.net.http.IdleCache;

        entermonitor r0;

        i3 = 0;

     label1:
        $i0 = r0.<android.net.http.IdleCache: int mCount>;

        if $i0 <= 0 goto label5;

     label2:
        if i3 >= 8 goto label5;

     label3:
        $r1 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        r5 = $r1[i3];

        $r2 = r5.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if $r2 == null goto label4;

        r5.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = null;

        $r3 = r5.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection>;

        virtualinvoke $r3.<android.net.http.Connection: void closeConnection()>();

        r5.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = null;

        $i1 = r0.<android.net.http.IdleCache: int mCount>;

        $i2 = $i1 - 1;

        r0.<android.net.http.IdleCache: int mCount> = $i2;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        exitmonitor r0;

        return;

     label6:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    android.net.http.Connection getConnection(org.apache.http.HttpHost)
    {
        android.net.http.IdleCache r0;
        android.net.http.IdleCache$Entry r1;
        int $i0, $i1, $i2, i3;
        android.net.http.IdleCache$Entry[] $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        org.apache.http.HttpHost r4, r6;
        android.net.http.Connection r5;

        r0 := @this: android.net.http.IdleCache;

        r4 := @parameter0: org.apache.http.HttpHost;

        entermonitor r0;

        r5 = null;

     label01:
        $i0 = r0.<android.net.http.IdleCache: int mCount>;

        if $i0 <= 0 goto label09;

     label02:
        i3 = 0;

     label03:
        r5 = null;

        if i3 >= 8 goto label09;

     label04:
        $r2 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        r1 = $r2[i3];

        r6 = r1.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

     label05:
        if r6 == null goto label08;

     label06:
        $z0 = virtualinvoke r6.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label08;

        r5 = r1.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection>;

        r1.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = null;

        r1.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = null;

        $i1 = r0.<android.net.http.IdleCache: int mCount>;

        $i2 = $i1 - 1;

        r0.<android.net.http.IdleCache: int mCount> = $i2;

     label07:
        goto label09;

     label08:
        i3 = i3 + 1;

        goto label03;

     label09:
        exitmonitor r0;

        return r5;

     label10:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public static void <clinit>()
    {
        <android.net.http.IdleCache: int TIMEOUT> = 6000;

        <android.net.http.IdleCache: int IDLE_CACHE_MAX> = 8;

        <android.net.http.IdleCache: int EMPTY_CHECK_MAX> = 5;

        <android.net.http.IdleCache: int CHECK_INTERVAL> = 2000;

        return;
    }
}
