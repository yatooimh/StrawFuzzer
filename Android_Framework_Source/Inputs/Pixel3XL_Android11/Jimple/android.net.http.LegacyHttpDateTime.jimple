final class android.net.http.LegacyHttpDateTime extends java.lang.Object
{
    private static final java.util.regex.Pattern HTTP_DATE_ANSIC_PATTERN;
    private static final java.lang.String HTTP_DATE_ANSIC_REGEXP;
    private static final java.util.regex.Pattern HTTP_DATE_RFC_PATTERN;
    private static final java.lang.String HTTP_DATE_RFC_REGEXP;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        <android.net.http.LegacyHttpDateTime: java.lang.String HTTP_DATE_RFC_REGEXP> = "([0-9]{1,2})[- ]([A-Za-z]{3,9})[- ]([0-9]{2,4})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])";

        <android.net.http.LegacyHttpDateTime: java.lang.String HTTP_DATE_ANSIC_REGEXP> = "[ ]([A-Za-z]{3,9})[ ]+([0-9]{1,2})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])[ ]([0-9]{2,4})";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([0-9]{1,2})[- ]([A-Za-z]{3,9})[- ]([0-9]{2,4})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])");

        <android.net.http.LegacyHttpDateTime: java.util.regex.Pattern HTTP_DATE_RFC_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[ ]([A-Za-z]{3,9})[ ]+([0-9]{1,2})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])[ ]([0-9]{2,4})");

        <android.net.http.LegacyHttpDateTime: java.util.regex.Pattern HTTP_DATE_ANSIC_PATTERN> = $r1;

        return;
    }

    void <init>()
    {
        android.net.http.LegacyHttpDateTime r0;

        r0 := @this: android.net.http.LegacyHttpDateTime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int getDate(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i2, $i4, $i5, $i7, $i8;
        char $c1, $c3, $c6;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 2 goto label1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i4 = $c3 - 48;

        $i5 = $i4 * 10;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i7 = $c6 - 48;

        $i8 = $i5 + $i7;

        return $i8;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i2 = $c1 - 48;

        return $i2;
    }

    private static int getMonth(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i5, $i8;
        char $c1, $c2, $c3, $c4, $c6, $c7;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.String;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3);

        $i5 = $c2 + $c4;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c6);

        $i8 = $i5 + $c7;

        i0 = $i8 - 291;

        if i0 == 9 goto label13;

        if i0 == 10 goto label12;

        if i0 == 22 goto label11;

        if i0 == 26 goto label10;

        if i0 == 29 goto label09;

        if i0 == 32 goto label08;

        if i0 == 40 goto label07;

        if i0 == 42 goto label06;

        if i0 == 48 goto label05;

        tableswitch(i0)
        {
            case 35: goto label04;
            case 36: goto label03;
            case 37: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label02:
        return 8;

     label03:
        return 4;

     label04:
        return 9;

     label05:
        return 10;

     label06:
        return 5;

     label07:
        return 6;

     label08:
        return 3;

     label09:
        return 2;

     label10:
        return 7;

     label11:
        return 0;

     label12:
        return 1;

     label13:
        return 11;
    }

    private static android.net.http.LegacyHttpDateTime$TimeOfDay getTime(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i12, $i13, $i14, $i16, i17, i18, i19, i20, i21, i22, i25;
        char $c1, $c2, $c8, $c11, $c15, c23, c24;
        android.net.http.LegacyHttpDateTime$TimeOfDay $r1;

        r0 := @parameter0: java.lang.String;

        i17 = 0 + 1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        i18 = $c1 - 48;

        i19 = i18;

        i20 = i17;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17);

        if $c2 == 58 goto label1;

        $i14 = i18 * 10;

        $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17);

        $i16 = $c15 - 48;

        i19 = $i14 + $i16;

        i20 = i17 + 1;

     label1:
        i21 = i20 + 1;

        i22 = i21 + 1;

        c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i21);

        c24 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);

        $i3 = i22 + 1;

        i0 = $i3 + 1;

        i25 = i0 + 1;

        $r1 = new android.net.http.LegacyHttpDateTime$TimeOfDay;

        $i4 = c23 - 48;

        $i6 = $i4 * 10;

        $i5 = c24 - 48;

        $i7 = $i6 + $i5;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i9 = $c8 - 48;

        $i10 = $i9 * 10;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i25);

        $i12 = $c11 - 48;

        $i13 = $i10 + $i12;

        specialinvoke $r1.<android.net.http.LegacyHttpDateTime$TimeOfDay: void <init>(int,int,int)>(i19, $i7, $i13);

        return $r1;
    }

    private static int getYear(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i19, $i20, $i22, $i23, $i24, $i26, $i27, $i28, $i30, $i31, $i33, $i34, $i35;
        char $c4, $c7, $c11, $c15, $c18, $c21, $c25, $c29, $c32;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 2 goto label2;

        $c29 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i30 = $c29 - 48;

        $i31 = $i30 * 10;

        $c32 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i33 = $c32 - 48;

        i0 = $i31 + $i33;

        if i0 < 70 goto label1;

        $i35 = i0 + 1900;

        return $i35;

     label1:
        $i34 = i0 + 2000;

        return $i34;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != 3 goto label3;

        $c18 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i19 = $c18 - 48;

        $i20 = $i19 * 100;

        $c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i22 = $c21 - 48;

        $i23 = $i22 * 10;

        $i24 = $i20 + $i23;

        $c25 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i26 = $c25 - 48;

        $i27 = $i24 + $i26;

        $i28 = $i27 + 1900;

        return $i28;

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 != 4 goto label4;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i5 = $c4 - 48;

        $i6 = $i5 * 1000;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i8 = $c7 - 48;

        $i9 = $i8 * 100;

        $i10 = $i6 + $i9;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i12 = $c11 - 48;

        $i13 = $i12 * 10;

        $i14 = $i10 + $i13;

        $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i16 = $c15 - 48;

        $i17 = $i14 + $i16;

        return $i17;

     label4:
        return 1970;
    }

    public static long parse(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.util.regex.Pattern $r0, $r1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, r13;
        java.util.GregorianCalendar $r7;
        java.util.TimeZone $r8;
        int $i0, $i1, $i2, i4, i5, i6;
        long $l3;
        java.util.regex.Matcher r14, r16;
        android.net.http.LegacyHttpDateTime$TimeOfDay r15;

        r13 := @parameter0: java.lang.String;

        $r0 = <android.net.http.LegacyHttpDateTime: java.util.regex.Pattern HTTP_DATE_RFC_PATTERN>;

        r14 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r13);

        $z0 = virtualinvoke r14.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r14.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i4 = staticinvoke <android.net.http.LegacyHttpDateTime: int getDate(java.lang.String)>($r9);

        $r10 = virtualinvoke r14.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        i5 = staticinvoke <android.net.http.LegacyHttpDateTime: int getMonth(java.lang.String)>($r10);

        $r11 = virtualinvoke r14.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        i6 = staticinvoke <android.net.http.LegacyHttpDateTime: int getYear(java.lang.String)>($r11);

        $r12 = virtualinvoke r14.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        r15 = staticinvoke <android.net.http.LegacyHttpDateTime: android.net.http.LegacyHttpDateTime$TimeOfDay getTime(java.lang.String)>($r12);

        goto label2;

     label1:
        $r1 = <android.net.http.LegacyHttpDateTime: java.util.regex.Pattern HTTP_DATE_ANSIC_PATTERN>;

        r16 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r13);

        $z1 = virtualinvoke r16.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label3;

        $r3 = virtualinvoke r16.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i5 = staticinvoke <android.net.http.LegacyHttpDateTime: int getMonth(java.lang.String)>($r3);

        $r4 = virtualinvoke r16.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        i4 = staticinvoke <android.net.http.LegacyHttpDateTime: int getDate(java.lang.String)>($r4);

        $r5 = virtualinvoke r16.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        r15 = staticinvoke <android.net.http.LegacyHttpDateTime: android.net.http.LegacyHttpDateTime$TimeOfDay getTime(java.lang.String)>($r5);

        $r6 = virtualinvoke r16.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        i6 = staticinvoke <android.net.http.LegacyHttpDateTime: int getYear(java.lang.String)>($r6);

     label2:
        $r7 = new java.util.GregorianCalendar;

        $r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        specialinvoke $r7.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r8);

        virtualinvoke $r7.<java.util.GregorianCalendar: void set(int,int)>(1, i6);

        virtualinvoke $r7.<java.util.GregorianCalendar: void set(int,int)>(2, i5);

        virtualinvoke $r7.<java.util.GregorianCalendar: void set(int,int)>(5, i4);

        $i0 = r15.<android.net.http.LegacyHttpDateTime$TimeOfDay: int hour>;

        virtualinvoke $r7.<java.util.GregorianCalendar: void set(int,int)>(11, $i0);

        $i1 = r15.<android.net.http.LegacyHttpDateTime$TimeOfDay: int minute>;

        virtualinvoke $r7.<java.util.GregorianCalendar: void set(int,int)>(12, $i1);

        $i2 = r15.<android.net.http.LegacyHttpDateTime$TimeOfDay: int second>;

        virtualinvoke $r7.<java.util.GregorianCalendar: void set(int,int)>(13, $i2);

        virtualinvoke $r7.<java.util.GregorianCalendar: void set(int,int)>(14, 0);

        $l3 = virtualinvoke $r7.<java.util.GregorianCalendar: long getTimeInMillis()>();

        return $l3;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;
    }
}
