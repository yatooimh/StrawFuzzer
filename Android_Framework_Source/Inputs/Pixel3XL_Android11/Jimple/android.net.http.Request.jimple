class android.net.http.Request extends java.lang.Object
{
    private static final java.lang.String ACCEPT_ENCODING_HEADER;
    private static final java.lang.String CONTENT_LENGTH_HEADER;
    private static final java.lang.String HOST_HEADER;
    private static org.apache.http.protocol.RequestContent requestContentProcessor;
    private int mBodyLength;
    private java.io.InputStream mBodyProvider;
    volatile boolean mCancelled;
    private final java.lang.Object mClientResource;
    private android.net.http.Connection mConnection;
    android.net.http.EventHandler mEventHandler;
    int mFailCount;
    org.apache.http.HttpHost mHost;
    org.apache.http.message.BasicHttpRequest mHttpRequest;
    private boolean mLoadingPaused;
    java.lang.String mPath;
    org.apache.http.HttpHost mProxyHost;
    private int mReceivedBytes;

    static void <clinit>()
    {
        org.apache.http.protocol.RequestContent $r0;

        <android.net.http.Request: java.lang.String HOST_HEADER> = "Host";

        <android.net.http.Request: java.lang.String CONTENT_LENGTH_HEADER> = "content-length";

        <android.net.http.Request: java.lang.String ACCEPT_ENCODING_HEADER> = "Accept-Encoding";

        $r0 = new org.apache.http.protocol.RequestContent;

        specialinvoke $r0.<org.apache.http.protocol.RequestContent: void <init>()>();

        <android.net.http.Request: org.apache.http.protocol.RequestContent requestContentProcessor> = $r0;

        return;
    }

    void <init>(java.lang.String, org.apache.http.HttpHost, org.apache.http.HttpHost, java.lang.String, java.io.InputStream, int, android.net.http.EventHandler, java.util.Map)
    {
        android.net.http.Request r0;
        java.lang.String r1, r4, $r10, $r11, $r13, $r14;
        org.apache.http.HttpHost r2, r3;
        java.io.InputStream r5;
        int i0;
        android.net.http.EventHandler r6;
        java.util.Map r7;
        java.lang.Object $r8;
        org.apache.http.message.BasicHttpEntityEnclosingRequest $r9;
        boolean $z0;
        org.apache.http.message.BasicHttpRequest $r12;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.http.HttpHost;

        r3 := @parameter2: org.apache.http.HttpHost;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.io.InputStream;

        i0 := @parameter5: int;

        r6 := @parameter6: android.net.http.EventHandler;

        r7 := @parameter7: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.http.Request: boolean mCancelled> = 0;

        r0.<android.net.http.Request: int mFailCount> = 0;

        r0.<android.net.http.Request: int mReceivedBytes> = 0;

        $r8 = new java.lang.Object;

        specialinvoke $r8.<java.lang.Object: void <init>()>();

        r0.<android.net.http.Request: java.lang.Object mClientResource> = $r8;

        r0.<android.net.http.Request: boolean mLoadingPaused> = 0;

        r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler> = r6;

        r0.<android.net.http.Request: org.apache.http.HttpHost mHost> = r2;

        r0.<android.net.http.Request: org.apache.http.HttpHost mProxyHost> = r3;

        r0.<android.net.http.Request: java.lang.String mPath> = r4;

        r0.<android.net.http.Request: java.io.InputStream mBodyProvider> = r5;

        r0.<android.net.http.Request: int mBodyLength> = i0;

        if r5 != null goto label1;

        $r11 = "POST";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r12 = new org.apache.http.message.BasicHttpRequest;

        $r13 = virtualinvoke r0.<android.net.http.Request: java.lang.String getUri()>();

        specialinvoke $r12.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>(r1, $r13);

        r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest> = $r12;

        goto label2;

     label1:
        $r9 = new org.apache.http.message.BasicHttpEntityEnclosingRequest;

        $r10 = virtualinvoke r0.<android.net.http.Request: java.lang.String getUri()>();

        specialinvoke $r9.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(java.lang.String,java.lang.String)>(r1, $r10);

        r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest> = $r9;

        if r5 == null goto label2;

        specialinvoke r0.<android.net.http.Request: void setBodyProvider(java.io.InputStream,int)>(r5, i0);

     label2:
        $r14 = virtualinvoke r0.<android.net.http.Request: java.lang.String getHostPort()>();

        virtualinvoke r0.<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>("Host", $r14);

        virtualinvoke r0.<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

        virtualinvoke r0.<android.net.http.Request: void addHeaders(java.util.Map)>(r7);

        return;
    }

    private static boolean canResponseHaveBody(org.apache.http.HttpRequest, int)
    {
        org.apache.http.HttpRequest r0;
        int i0;
        java.lang.String $r1, $r3;
        org.apache.http.RequestLine $r2;
        boolean z1, z2;

        r0 := @parameter0: org.apache.http.HttpRequest;

        i0 := @parameter1: int;

        $r1 = "HEAD";

        $r2 = interfaceinvoke r0.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r3 = interfaceinvoke $r2.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if z1 == 0 goto label1;

        return 0;

     label1:
        z2 = 0;

        if i0 < 200 goto label2;

        z2 = 0;

        if i0 == 204 goto label2;

        z2 = 0;

        if i0 == 304 goto label2;

        z2 = 1;

     label2:
        return z2;
    }

    private void setBodyProvider(java.io.InputStream, int)
    {
        android.net.http.Request r0;
        java.io.InputStream r1;
        int i0;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        org.apache.http.message.BasicHttpRequest $r3;
        org.apache.http.entity.InputStreamEntity $r4;
        long $l1;
        org.apache.http.message.BasicHttpEntityEnclosingRequest $r5;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r1.<java.io.InputStream: boolean markSupported()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.InputStream: void mark(int)>(2147483647);

        $r3 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $r5 = (org.apache.http.message.BasicHttpEntityEnclosingRequest) $r3;

        $r4 = new org.apache.http.entity.InputStreamEntity;

        $l1 = (long) i0;

        specialinvoke $r4.<org.apache.http.entity.InputStreamEntity: void <init>(java.io.InputStream,long)>(r1, $l1);

        virtualinvoke $r5.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)>($r4);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bodyProvider must support mark()");

        throw $r2;
    }

    void addHeader(java.lang.String, java.lang.String)
    {
        android.net.http.Request r0;
        java.lang.NullPointerException $r1;
        java.lang.StringBuilder $r2;
        java.lang.RuntimeException $r6;
        int $i0;
        org.apache.http.message.BasicHttpRequest $r7;
        java.lang.String r8, r9, r11;

        r0 := @this: android.net.http.Request;

        r8 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        if r8 == null goto label2;

        if r9 == null goto label1;

        $i0 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $r7 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        virtualinvoke $r7.<org.apache.http.message.BasicHttpRequest: void addHeader(java.lang.String,java.lang.String)>(r8, r9);

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null or empty value for header \"");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.http.HttpLog: void e(java.lang.String)>(r11);

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(r11);

        throw $r6;

     label2:
        staticinvoke <android.net.http.HttpLog: void e(java.lang.String)>("Null http header name");

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null http header name");

        throw $r1;
    }

    void addHeaders(java.util.Map)
    {
        android.net.http.Request r0;
        java.util.Iterator r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        java.util.Map r8;
        java.util.Map$Entry r9;

        r0 := @this: android.net.http.Request;

        r8 := @parameter0: java.util.Map;

        if r8 != null goto label1;

        return;

     label1:
        $r2 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r3;

        $r4 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r6;

        virtualinvoke r0.<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>($r5, $r7);

        goto label2;

     label3:
        return;
    }

    void cancel()
    {
        android.net.http.Request r0;
        android.net.http.Connection $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.net.http.Request;

        entermonitor r0;

     label1:
        r0.<android.net.http.Request: boolean mLoadingPaused> = 0;

        virtualinvoke r0.<java.lang.Object: void notify()>();

        r0.<android.net.http.Request: boolean mCancelled> = 1;

        $r2 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        if $r2 == null goto label2;

        $r3 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        virtualinvoke $r3.<android.net.http.Connection: void cancel()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void complete()
    {
        android.net.http.Request r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.net.http.Request;

        r1 = r0.<android.net.http.Request: java.lang.Object mClientResource>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.http.Request: java.lang.Object mClientResource>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void error(int, java.lang.String)
    {
        android.net.http.Request r0;
        int i0;
        java.lang.String r1;
        android.net.http.EventHandler $r2;

        r0 := @this: android.net.http.Request;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r2.<android.net.http.EventHandler: void error(int,java.lang.String)>(i0, r1);

        return;
    }

    android.net.http.EventHandler getEventHandler()
    {
        android.net.http.Request r0;
        android.net.http.EventHandler $r1;

        r0 := @this: android.net.http.Request;

        $r1 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        return $r1;
    }

    java.lang.String getHostPort()
    {
        android.net.http.Request r0;
        java.lang.String r1, $r5, $r7;
        int i0;
        org.apache.http.HttpHost $r2, $r3, $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: android.net.http.Request;

        $r2 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        r1 = virtualinvoke $r2.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $r3 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        i0 = virtualinvoke $r3.<org.apache.http.HttpHost: int getPort()>();

        if i0 == 80 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z1 != 0 goto label2;

     label1:
        if i0 == 443 goto label3;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z0 == 0 goto label3;

     label2:
        $r6 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r7 = virtualinvoke $r6.<org.apache.http.HttpHost: java.lang.String toHostString()>();

        return $r7;

     label3:
        $r4 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r5 = virtualinvoke $r4.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        return $r5;
    }

    java.lang.String getUri()
    {
        android.net.http.Request r0;
        org.apache.http.HttpHost $r2, $r4, $r7;
        java.lang.String $r3, $r5, $r8, $r11, $r13, $r15;
        boolean $z0;
        java.lang.StringBuilder $r6;

        r0 := @this: android.net.http.Request;

        $r2 = r0.<android.net.http.Request: org.apache.http.HttpHost mProxyHost>;

        if $r2 == null goto label2;

        $r4 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r5 = virtualinvoke $r4.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r8 = virtualinvoke $r7.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r11 = virtualinvoke r0.<android.net.http.Request: java.lang.String getHostPort()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = r0.<android.net.http.Request: java.lang.String mPath>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label2:
        $r3 = r0.<android.net.http.Request: java.lang.String mPath>;

        return $r3;
    }

    public void handleSslErrorResponse(boolean)
    {
        android.net.http.Request r0;
        boolean z0;
        android.net.http.HttpsConnection r1;
        android.net.http.Connection $r2;

        r0 := @this: android.net.http.Request;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        r1 = (android.net.http.HttpsConnection) $r2;

        if r1 == null goto label1;

        virtualinvoke r1.<android.net.http.HttpsConnection: void restartConnection(boolean)>(z0);

     label1:
        return;
    }

    void readResponse(android.net.http.AndroidHttpClientConnection) throws java.io.IOException, org.apache.http.ParseException
    {
        android.net.http.Request r0;
        org.apache.http.StatusLine r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, i11, i12, i13, i14, i15, i16, $i17;
        boolean z0, z1, z2, $z3, $z4;
        java.io.InputStream r3, r68, r69, r70, r71;
        android.net.http.EventHandler $r5, $r7, $r11, $r14, $r18, $r63;
        java.lang.String $r6, $r9, $r10, $r12, $r25, $r26;
        org.apache.http.message.BasicHttpRequest $r8;
        java.lang.Throwable $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r31, $r32, $r33, r43, r44, r48;
        android.net.http.AndroidHttpClientConnection r34;
        org.apache.http.ProtocolVersion r36, $r62;
        org.apache.http.HttpEntity r37, r51, r54, r56, r58;
        org.apache.http.Header r38;
        java.lang.Object r39, r52, r53, r55, r57, r60;
        byte[] r40, r41, r45, r47;
        android.net.http.Connection $r46, $r61;
        android.net.http.Headers r64;
        java.util.zip.GZIPInputStream r65;
        java.lang.StringBuilder r66;
        java.lang.InterruptedException r67;

        r0 := @this: android.net.http.Request;

        r34 := @parameter0: android.net.http.AndroidHttpClientConnection;

        $z3 = r0.<android.net.http.Request: boolean mCancelled>;

        if $z3 == 0 goto label01;

        return;

     label01:
        virtualinvoke r34.<android.net.http.AndroidHttpClientConnection: void flush()>();

        r64 = new android.net.http.Headers;

        specialinvoke r64.<android.net.http.Headers: void <init>()>();

     label02:
        r2 = virtualinvoke r34.<android.net.http.AndroidHttpClientConnection: org.apache.http.StatusLine parseResponseHeader(android.net.http.Headers)>(r64);

        i0 = interfaceinvoke r2.<org.apache.http.StatusLine: int getStatusCode()>();

        if i0 < 200 goto label76;

        r36 = interfaceinvoke r2.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r5 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        $i3 = virtualinvoke r36.<org.apache.http.ProtocolVersion: int getMajor()>();

        $i4 = virtualinvoke r36.<org.apache.http.ProtocolVersion: int getMinor()>();

        $r6 = interfaceinvoke r2.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        interfaceinvoke $r5.<android.net.http.EventHandler: void status(int,int,int,java.lang.String)>($i3, $i4, i0, $r6);

        $r7 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r7.<android.net.http.EventHandler: void headers(android.net.http.Headers)>(r64);

        $r8 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        z0 = staticinvoke <android.net.http.Request: boolean canResponseHaveBody(org.apache.http.HttpRequest,int)>($r8, i0);

        if z0 == 0 goto label03;

        r37 = virtualinvoke r34.<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers)>(r64);

        goto label04;

     label03:
        r37 = null;

     label04:
        $r9 = "bytes";

        $r10 = virtualinvoke r64.<android.net.http.Headers: java.lang.String getAcceptRanges()>();

        z1 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);

        if r37 == null goto label74;

        r3 = interfaceinvoke r37.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        r38 = interfaceinvoke r37.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        r39 = null;

        r40 = null;

        r41 = null;

        i9 = 0;

        if r38 == null goto label10;

     label05:
        $r12 = interfaceinvoke r38.<org.apache.http.Header: java.lang.String getValue()>();

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("gzip");

        if $z4 == 0 goto label10;

        r65 = new java.util.zip.GZIPInputStream;

        specialinvoke r65.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r3);

     label06:
        r39 = r65;

        goto label11;

     label07:
        $r33 := @caughtexception;

        r43 = $r33;

        r39 = null;

        goto label70;

     label08:
        $r16 := @caughtexception;

        r44 = $r16;

        goto label59;

     label09:
        $r30 := @caughtexception;

        r39 = null;

        r45 = null;

        i9 = 0;

        goto label66;

     label10:
        r39 = r3;

     label11:
        r45 = null;

     label12:
        $r46 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        r47 = virtualinvoke $r46.<android.net.http.Connection: byte[] getBuf()>();

     label13:
        r41 = r47;

        r45 = r47;

     label14:
        $i10 = lengthof r47;

        i1 = $i10 / 2;

     label15:
        i9 = 0;

        i11 = 0;

     label16:
        if i11 == -1 goto label56;

     label17:
        entermonitor r0;

     label18:
        z2 = r0.<android.net.http.Request: boolean mLoadingPaused>;

     label19:
        if z2 == 0 goto label32;

     label20:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label21:
        goto label18;

     label22:
        $r23 := @caughtexception;

        r48 = $r23;

        goto label45;

     label23:
        $r24 := @caughtexception;

     label24:
        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

     label25:
        i12 = i9;

        r51 = r37;

        r52 = r39;

     label26:
        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interrupted exception whilst network thread paused at WebCore\'s request. ");

     label27:
        i12 = i9;

        r51 = r37;

        r52 = r39;

     label28:
        r67 = (java.lang.InterruptedException) $r24;

        $r25 = virtualinvoke r67.<java.lang.InterruptedException: java.lang.String getMessage()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label29:
        i12 = i9;

        r51 = r37;

        r52 = r39;

     label30:
        $r26 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.http.HttpLog: void e(java.lang.String)>($r26);

     label31:
        goto label18;

     label32:
        i12 = i9;

        r51 = r37;

        r52 = r39;

     label33:
        exitmonitor r0;

     label34:
        r53 = r39;

        i13 = i9;

        r54 = r37;

        r55 = r39;

        i14 = i9;

        r56 = r37;

        r57 = r39;

     label35:
        $i5 = lengthof r47;

        $i6 = $i5 - i9;

        r68 = (java.io.InputStream) r39;

        i2 = virtualinvoke r68.<java.io.InputStream: int read(byte[],int,int)>(r47, i9, $i6);

     label36:
        i15 = i9;

        if i2 == -1 goto label39;

        i16 = i9 + i2;

        i15 = i16;

        if z1 == 0 goto label39;

        r53 = r39;

        i13 = i16;

        r54 = r37;

        r55 = r39;

        i14 = i16;

        r56 = r37;

        r57 = r39;

     label37:
        $i7 = r0.<android.net.http.Request: int mReceivedBytes>;

        $i8 = $i7 + i2;

        r0.<android.net.http.Request: int mReceivedBytes> = $i8;

     label38:
        i15 = i16;

     label39:
        if i2 == -1 goto label41;

        if i15 < i1 goto label40;

        goto label41;

     label40:
        i9 = i15;

        i11 = i2;

        goto label16;

     label41:
        r53 = r39;

        i13 = i15;

        r54 = r37;

        r55 = r39;

        i14 = i15;

        r56 = r37;

        r57 = r39;

     label42:
        $r11 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r11.<android.net.http.EventHandler: void data(byte[],int)>(r47, i15);

     label43:
        i9 = 0;

        i11 = i2;

        goto label16;

     label44:
        $r27 := @caughtexception;

        r48 = $r27;

     label45:
        i12 = i9;

        r51 = r37;

        r52 = r39;

     label46:
        exitmonitor r0;

     label47:
        r53 = r39;

        i13 = i9;

        r54 = r37;

        r55 = r39;

        i14 = i9;

        r56 = r37;

        r57 = r39;

     label48:
        throw r48;

     label49:
        $r28 := @caughtexception;

        r43 = $r28;

        r39 = r53;

        goto label70;

     label50:
        $r21 := @caughtexception;

        r44 = $r21;

        i9 = i13;

        r37 = r54;

        r39 = r55;

        r40 = r47;

        goto label59;

     label51:
        $r29 := @caughtexception;

        i9 = i14;

        r37 = r56;

        r39 = r57;

        r45 = r47;

        goto label66;

     label52:
        $r32 := @caughtexception;

        r48 = $r32;

        i9 = i12;

        r37 = r51;

        r39 = r52;

        goto label45;

     label53:
        $r22 := @caughtexception;

        r43 = $r22;

        goto label70;

     label54:
        $r31 := @caughtexception;

        r44 = $r31;

        r40 = r47;

        goto label59;

     label55:
        $r17 := @caughtexception;

        r45 = r47;

        goto label66;

     label56:
        r58 = r37;

        if r39 == null goto label75;

        r69 = (java.io.InputStream) r39;

        virtualinvoke r69.<java.io.InputStream: void close()>();

        r58 = r37;

        goto label75;

     label57:
        $r15 := @caughtexception;

        r43 = $r15;

        goto label70;

     label58:
        $r13 := @caughtexception;

        r40 = r41;

        r44 = $r13;

     label59:
        if i0 == 200 goto label61;

        if i0 != 206 goto label60;

        goto label61;

     label60:
        r58 = r37;

        if r39 == null goto label75;

        goto label73;

     label61:
        if z1 == 0 goto label63;

        if i9 <= 0 goto label63;

        r60 = r39;

     label62:
        $r14 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r14.<android.net.http.EventHandler: void data(byte[],int)>(r40, i9);

     label63:
        r60 = r39;

     label64:
        throw r44;

     label65:
        $r20 := @caughtexception;

        i9 = 0;

     label66:
        if i9 <= 0 goto label72;

        r60 = r39;

     label67:
        $r18 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r18.<android.net.http.EventHandler: void data(byte[],int)>(r45, i9);

     label68:
        goto label72;

     label69:
        $r19 := @caughtexception;

        r43 = $r19;

        r39 = r60;

     label70:
        if r39 == null goto label71;

        r70 = (java.io.InputStream) r39;

        virtualinvoke r70.<java.io.InputStream: void close()>();

     label71:
        throw r43;

     label72:
        r58 = r37;

        if r39 == null goto label75;

     label73:
        r71 = (java.io.InputStream) r39;

        virtualinvoke r71.<java.io.InputStream: void close()>();

        r58 = r37;

        goto label75;

     label74:
        r58 = r37;

     label75:
        $r61 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r62 = interfaceinvoke r2.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $i17 = virtualinvoke r64.<android.net.http.Headers: int getConnectionType()>();

        virtualinvoke $r61.<android.net.http.Connection: void setCanPersist(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int)>(r58, $r62, $i17);

        $r63 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r63.<android.net.http.EventHandler: void endData()>();

        virtualinvoke r0.<android.net.http.Request: void complete()>();

        return;

     label76:
        goto label02;

        catch java.io.EOFException from label05 to label06 with label09;
        catch java.io.IOException from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.io.EOFException from label12 to label13 with label65;
        catch java.io.IOException from label12 to label13 with label58;
        catch java.lang.Throwable from label12 to label13 with label57;
        catch java.io.EOFException from label14 to label15 with label65;
        catch java.io.IOException from label14 to label15 with label58;
        catch java.lang.Throwable from label14 to label15 with label57;
        catch java.io.EOFException from label17 to label18 with label55;
        catch java.io.IOException from label17 to label18 with label54;
        catch java.lang.Throwable from label17 to label18 with label53;
        catch java.lang.Throwable from label18 to label19 with label44;
        catch java.lang.InterruptedException from label20 to label21 with label23;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label24 to label25 with label44;
        catch java.lang.Throwable from label26 to label27 with label52;
        catch java.lang.Throwable from label28 to label29 with label52;
        catch java.lang.Throwable from label30 to label31 with label52;
        catch java.lang.Throwable from label33 to label34 with label52;
        catch java.io.EOFException from label35 to label36 with label51;
        catch java.io.IOException from label35 to label36 with label50;
        catch java.lang.Throwable from label35 to label36 with label49;
        catch java.io.EOFException from label37 to label38 with label51;
        catch java.io.IOException from label37 to label38 with label50;
        catch java.lang.Throwable from label37 to label38 with label49;
        catch java.io.EOFException from label42 to label43 with label51;
        catch java.io.IOException from label42 to label43 with label50;
        catch java.lang.Throwable from label42 to label43 with label49;
        catch java.lang.Throwable from label46 to label47 with label52;
        catch java.io.EOFException from label48 to label49 with label51;
        catch java.io.IOException from label48 to label49 with label50;
        catch java.lang.Throwable from label48 to label49 with label49;
        catch java.lang.Throwable from label62 to label63 with label69;
        catch java.lang.Throwable from label64 to label65 with label69;
        catch java.lang.Throwable from label67 to label68 with label69;
    }

    void reset()
    {
        android.net.http.Request r0;
        org.apache.http.message.BasicHttpRequest r1, $r2;
        java.lang.StringBuilder $r3, $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6, $r11;
        java.io.InputStream $r12, r14;
        java.lang.Throwable $r13;

        r0 := @this: android.net.http.Request;

        $r2 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        virtualinvoke $r2.<org.apache.http.message.BasicHttpRequest: void removeHeaders(java.lang.String)>("content-length");

        r14 = r0.<android.net.http.Request: java.io.InputStream mBodyProvider>;

        if r14 == null goto label5;

     label1:
        virtualinvoke r14.<java.io.InputStream: void reset()>();

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

     label4:
        $r12 = r0.<android.net.http.Request: java.io.InputStream mBodyProvider>;

        $i2 = r0.<android.net.http.Request: int mBodyLength>;

        specialinvoke r0.<android.net.http.Request: void setBodyProvider(java.io.InputStream,int)>($r12, $i2);

     label5:
        $i3 = r0.<android.net.http.Request: int mReceivedBytes>;

        if $i3 <= 0 goto label6;

        r0.<android.net.http.Request: int mFailCount> = 0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** Request.reset() to range:");

        $i0 = r0.<android.net.http.Request: int mReceivedBytes>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.http.HttpLog: void v(java.lang.String)>($r6);

        r1 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bytes=");

        $i1 = r0.<android.net.http.Request: int mReceivedBytes>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.http.message.BasicHttpRequest: void setHeader(java.lang.String,java.lang.String)>("Range", $r11);

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void sendRequest(android.net.http.AndroidHttpClientConnection) throws org.apache.http.HttpException, java.io.IOException
    {
        android.net.http.Request r0;
        android.net.http.AndroidHttpClientConnection r1;
        org.apache.http.message.BasicHttpRequest r2, $r5, $r7;
        boolean $z0, $z1;
        android.net.http.Connection $r3;
        org.apache.http.protocol.RequestContent $r4;
        org.apache.http.protocol.HttpContext $r6;
        org.apache.http.HttpEntityEnclosingRequest $r8;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: android.net.http.AndroidHttpClientConnection;

        $z0 = r0.<android.net.http.Request: boolean mCancelled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = <android.net.http.Request: org.apache.http.protocol.RequestContent requestContentProcessor>;

        $r5 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $r3 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r6 = virtualinvoke $r3.<android.net.http.Connection: org.apache.http.protocol.HttpContext getHttpContext()>();

        virtualinvoke $r4.<org.apache.http.protocol.RequestContent: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>($r5, $r6);

        $r7 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        virtualinvoke r1.<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>($r7);

        r2 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $z1 = r2 instanceof org.apache.http.HttpEntityEnclosingRequest;

        if $z1 == 0 goto label2;

        $r8 = (org.apache.http.HttpEntityEnclosingRequest) r2;

        virtualinvoke r1.<android.net.http.AndroidHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>($r8);

     label2:
        return;
    }

    void setConnection(android.net.http.Connection)
    {
        android.net.http.Request r0;
        android.net.http.Connection r1;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: android.net.http.Connection;

        r0.<android.net.http.Request: android.net.http.Connection mConnection> = r1;

        return;
    }

    void setLoadingPaused(boolean)
    {
        android.net.http.Request r0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: android.net.http.Request;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        r0.<android.net.http.Request: boolean mLoadingPaused> = z0;

     label2:
        if z0 != 0 goto label4;

     label3:
        virtualinvoke r0.<java.lang.Object: void notify()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String toString()
    {
        android.net.http.Request r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.Request;

        $r1 = r0.<android.net.http.Request: java.lang.String mPath>;

        return $r1;
    }

    void waitUntilComplete()
    {
        android.net.http.Request r0;
        java.lang.Object r1, $r2;
        java.lang.Throwable $r3, $r4;

        r0 := @this: android.net.http.Request;

        r1 = r0.<android.net.http.Request: java.lang.Object mClientResource>;

        entermonitor r1;

     label1:
        $r2 = r0.<android.net.http.Request: java.lang.Object mClientResource>;

        virtualinvoke $r2.<java.lang.Object: void wait()>();

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
        catch java.lang.Throwable from label7 to label8 with label3;
    }
}
