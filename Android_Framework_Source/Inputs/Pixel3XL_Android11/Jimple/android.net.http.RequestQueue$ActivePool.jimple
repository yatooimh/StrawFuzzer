class android.net.http.RequestQueue$ActivePool extends java.lang.Object implements android.net.http.RequestQueue$ConnectionManager
{
    private int mConnectionCount;
    android.net.http.IdleCache mIdleCache;
    android.net.http.ConnectionThread[] mThreads;
    private int mTotalConnection;
    private int mTotalRequest;
    final android.net.http.RequestQueue this$0;

    void <init>(android.net.http.RequestQueue, int)
    {
        android.net.http.RequestQueue$ActivePool r0;
        android.net.http.RequestQueue r1;
        android.net.http.IdleCache $r2;
        android.net.http.ConnectionThread[] $r3, $r5;
        int $i0, i1, i2;
        android.net.http.ConnectionThread $r4;
        android.content.Context $r6;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        r1 := @parameter0: android.net.http.RequestQueue;

        i1 := @parameter1: int;

        r0.<android.net.http.RequestQueue$ActivePool: android.net.http.RequestQueue this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.net.http.IdleCache;

        specialinvoke $r2.<android.net.http.IdleCache: void <init>()>();

        r0.<android.net.http.RequestQueue$ActivePool: android.net.http.IdleCache mIdleCache> = $r2;

        r0.<android.net.http.RequestQueue$ActivePool: int mConnectionCount> = i1;

        $r3 = newarray (android.net.http.ConnectionThread)[i1];

        r0.<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread[] mThreads> = $r3;

        i2 = 0;

     label1:
        $i0 = r0.<android.net.http.RequestQueue$ActivePool: int mConnectionCount>;

        if i2 >= $i0 goto label2;

        $r5 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread[] mThreads>;

        $r4 = new android.net.http.ConnectionThread;

        $r6 = staticinvoke <android.net.http.RequestQueue: android.content.Context access$000(android.net.http.RequestQueue)>(r1);

        specialinvoke $r4.<android.net.http.ConnectionThread: void <init>(android.content.Context,int,android.net.http.RequestQueue$ConnectionManager,android.net.http.RequestFeeder)>($r6, i2, r0, r1);

        $r5[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    static int access$408(android.net.http.RequestQueue$ActivePool)
    {
        android.net.http.RequestQueue$ActivePool r0;
        int i0, $i1;

        r0 := @parameter0: android.net.http.RequestQueue$ActivePool;

        i0 = r0.<android.net.http.RequestQueue$ActivePool: int mTotalRequest>;

        $i1 = i0 + 1;

        r0.<android.net.http.RequestQueue$ActivePool: int mTotalRequest> = $i1;

        return i0;
    }

    void disablePersistence()
    {
        android.net.http.RequestQueue$ActivePool r0;
        android.net.http.Connection r1;
        int $i0, i1;
        android.net.http.IdleCache $r2;
        android.net.http.ConnectionThread[] $r3;
        android.net.http.ConnectionThread $r4;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        i1 = 0;

     label1:
        $i0 = r0.<android.net.http.RequestQueue$ActivePool: int mConnectionCount>;

        if i1 >= $i0 goto label3;

        $r3 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread[] mThreads>;

        $r4 = $r3[i1];

        r1 = $r4.<android.net.http.ConnectionThread: android.net.http.Connection mConnection>;

        if r1 == null goto label2;

        virtualinvoke r1.<android.net.http.Connection: void setCanPersist(boolean)>(0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.IdleCache mIdleCache>;

        virtualinvoke $r2.<android.net.http.IdleCache: void clear()>();

        return;
    }

    public android.net.http.Connection getConnection(android.content.Context, org.apache.http.HttpHost)
    {
        android.net.http.RequestQueue$ActivePool r0;
        org.apache.http.HttpHost r1, $r7, r10;
        android.net.http.RequestQueue $r2, $r4, $r6, $r8;
        android.net.http.IdleCache $r3;
        int $i0, $i1;
        android.content.Context $r5, r9;
        android.net.http.Connection r11, r12;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        r9 := @parameter0: android.content.Context;

        r10 := @parameter1: org.apache.http.HttpHost;

        $r2 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.RequestQueue this$0>;

        r1 = staticinvoke <android.net.http.RequestQueue: org.apache.http.HttpHost access$200(android.net.http.RequestQueue,org.apache.http.HttpHost)>($r2, r10);

        $r3 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.IdleCache mIdleCache>;

        r11 = virtualinvoke $r3.<android.net.http.IdleCache: android.net.http.Connection getConnection(org.apache.http.HttpHost)>(r1);

        r12 = r11;

        if r11 != null goto label1;

        $i0 = r0.<android.net.http.RequestQueue$ActivePool: int mTotalConnection>;

        $i1 = $i0 + 1;

        r0.<android.net.http.RequestQueue$ActivePool: int mTotalConnection> = $i1;

        $r4 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.RequestQueue this$0>;

        $r5 = staticinvoke <android.net.http.RequestQueue: android.content.Context access$000(android.net.http.RequestQueue)>($r4);

        $r6 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.RequestQueue this$0>;

        $r7 = staticinvoke <android.net.http.RequestQueue: org.apache.http.HttpHost access$100(android.net.http.RequestQueue)>($r6);

        $r8 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.RequestQueue this$0>;

        r12 = staticinvoke <android.net.http.Connection: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)>($r5, r1, $r7, $r8);

     label1:
        return r12;
    }

    public org.apache.http.HttpHost getProxyHost()
    {
        android.net.http.RequestQueue$ActivePool r0;
        android.net.http.RequestQueue $r1;
        org.apache.http.HttpHost $r2;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        $r1 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.RequestQueue this$0>;

        $r2 = staticinvoke <android.net.http.RequestQueue: org.apache.http.HttpHost access$100(android.net.http.RequestQueue)>($r1);

        return $r2;
    }

    android.net.http.ConnectionThread getThread(org.apache.http.HttpHost)
    {
        android.net.http.RequestQueue$ActivePool r0;
        android.net.http.RequestQueue r1;
        android.net.http.ConnectionThread r2;
        android.net.http.Connection r3;
        android.net.http.ConnectionThread[] $r4, $r5;
        int $i0, i1;
        org.apache.http.HttpHost $r6, r8;
        boolean $z0;
        java.lang.Throwable $r7;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        r8 := @parameter0: org.apache.http.HttpHost;

        r1 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.RequestQueue this$0>;

        entermonitor r1;

        i1 = 0;

     label01:
        $r4 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread[] mThreads>;

        $i0 = lengthof $r4;

        if i1 >= $i0 goto label06;

        $r5 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread[] mThreads>;

        r2 = $r5[i1];

        r3 = r2.<android.net.http.ConnectionThread: android.net.http.Connection mConnection>;

     label02:
        if r3 == null goto label05;

     label03:
        $r6 = r3.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        $z0 = virtualinvoke $r6.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>(r8);

        if $z0 == 0 goto label05;

        exitmonitor r1;

     label04:
        return r2;

     label05:
        i1 = i1 + 1;

        goto label01;

     label06:
        exitmonitor r1;

     label07:
        return null;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void logState()
    {
        android.net.http.RequestQueue$ActivePool r0;
        java.lang.StringBuilder $r3, $r5;
        int $i0, i1;
        java.lang.String $r4, $r10;
        android.net.http.ConnectionThread[] $r6;
        android.net.http.ConnectionThread $r7;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

     label1:
        $i0 = r0.<android.net.http.RequestQueue$ActivePool: int mConnectionCount>;

        if i1 >= $i0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread[] mThreads>;

        $r7 = $r6[i1];

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.http.HttpLog: void v(java.lang.String)>($r4);

        return;
    }

    public boolean recycleConnection(android.net.http.Connection)
    {
        android.net.http.RequestQueue$ActivePool r0;
        android.net.http.Connection r1;
        android.net.http.IdleCache $r2;
        org.apache.http.HttpHost $r3;
        boolean $z0;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        r1 := @parameter0: android.net.http.Connection;

        $r2 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.IdleCache mIdleCache>;

        $r3 = virtualinvoke r1.<android.net.http.Connection: org.apache.http.HttpHost getHost()>();

        $z0 = virtualinvoke $r2.<android.net.http.IdleCache: boolean cacheConnection(org.apache.http.HttpHost,android.net.http.Connection)>($r3, r1);

        return $z0;
    }

    void shutdown()
    {
        android.net.http.RequestQueue$ActivePool r0;
        int $i0, i1;
        android.net.http.ConnectionThread[] $r1;
        android.net.http.ConnectionThread $r2;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        i1 = 0;

     label1:
        $i0 = r0.<android.net.http.RequestQueue$ActivePool: int mConnectionCount>;

        if i1 >= $i0 goto label2;

        $r1 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread[] mThreads>;

        $r2 = $r1[i1];

        virtualinvoke $r2.<android.net.http.ConnectionThread: void requestStop()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void startConnectionThread()
    {
        android.net.http.RequestQueue$ActivePool r0;
        android.net.http.RequestQueue r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        r1 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.RequestQueue this$0>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.RequestQueue this$0>;

        virtualinvoke $r3.<java.lang.Object: void notify()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void startTiming()
    {
        android.net.http.RequestQueue$ActivePool r0;
        android.net.http.ConnectionThread r1;
        int $i0, i1;
        android.net.http.ConnectionThread[] $r2;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        i1 = 0;

     label1:
        $i0 = r0.<android.net.http.RequestQueue$ActivePool: int mConnectionCount>;

        if i1 >= $i0 goto label2;

        $r2 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread[] mThreads>;

        r1 = $r2[i1];

        r1.<android.net.http.ConnectionThread: long mCurrentThreadTime> = -1L;

        r1.<android.net.http.ConnectionThread: long mTotalThreadTime> = 0L;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.net.http.RequestQueue$ActivePool: int mTotalRequest> = 0;

        r0.<android.net.http.RequestQueue$ActivePool: int mTotalConnection> = 0;

        return;
    }

    void startup()
    {
        android.net.http.RequestQueue$ActivePool r0;
        int $i0, i1;
        android.net.http.ConnectionThread[] $r1;
        android.net.http.ConnectionThread $r2;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        i1 = 0;

     label1:
        $i0 = r0.<android.net.http.RequestQueue$ActivePool: int mConnectionCount>;

        if i1 >= $i0 goto label2;

        $r1 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread[] mThreads>;

        $r2 = $r1[i1];

        virtualinvoke $r2.<android.net.http.ConnectionThread: void start()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void stopTiming()
    {
        android.net.http.RequestQueue$ActivePool r0;
        int $i0, $i1, $i2, i9, i10, i11;
        java.lang.StringBuilder $r1;
        java.lang.String $r9;
        android.net.http.ConnectionThread[] $r10;
        long $l4, $l6, $l7, $l8;
        byte $b5;
        android.net.http.ConnectionThread r11;

        r0 := @this: android.net.http.RequestQueue$ActivePool;

        i9 = 0;

        i10 = 0;

     label1:
        $i0 = r0.<android.net.http.RequestQueue$ActivePool: int mConnectionCount>;

        if i10 >= $i0 goto label3;

        $r10 = r0.<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread[] mThreads>;

        r11 = $r10[i10];

        i11 = i9;

        $l4 = r11.<android.net.http.ConnectionThread: long mCurrentThreadTime>;

        $b5 = $l4 cmp -1L;

        if $b5 == 0 goto label2;

        $l7 = (long) i9;

        $l6 = r11.<android.net.http.ConnectionThread: long mTotalThreadTime>;

        $l8 = $l7 + $l6;

        i11 = (int) $l8;

     label2:
        r11.<android.net.http.ConnectionThread: long mCurrentThreadTime> = 0L;

        i10 = i10 + 1;

        i9 = i11;

        goto label1;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Http thread used ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms  for ");

        $i1 = r0.<android.net.http.RequestQueue$ActivePool: int mTotalRequest>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requests and ");

        $i2 = r0.<android.net.http.RequestQueue$ActivePool: int mTotalConnection>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new connections");

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Http", $r9);

        return;
    }
}
