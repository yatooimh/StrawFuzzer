public class android.net.http.X509TrustManagerExtensions extends java.lang.Object
{
    private final java.lang.reflect.Method mCheckServerTrusted;
    private final com.android.org.conscrypt.TrustManagerImpl mDelegate;
    private final java.lang.reflect.Method mIsSameTrustConfiguration;
    private final javax.net.ssl.X509TrustManager mTrustManager;

    public void <init>(javax.net.ssl.X509TrustManager) throws java.lang.IllegalArgumentException
    {
        android.net.http.X509TrustManagerExtensions r0;
        boolean $z0;
        java.lang.Class $r1, $r4;
        java.lang.Class[] $r2, $r5;
        java.lang.reflect.Method $r3, r11;
        com.android.org.conscrypt.TrustManagerImpl $r6;
        java.lang.Throwable $r7, $r9;
        java.lang.IllegalArgumentException $r8;
        javax.net.ssl.X509TrustManager r10;

        r0 := @this: android.net.http.X509TrustManagerExtensions;

        r10 := @parameter0: javax.net.ssl.X509TrustManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = r10 instanceof com.android.org.conscrypt.TrustManagerImpl;

        if $z0 == 0 goto label1;

        $r6 = (com.android.org.conscrypt.TrustManagerImpl) r10;

        r0.<android.net.http.X509TrustManagerExtensions: com.android.org.conscrypt.TrustManagerImpl mDelegate> = $r6;

        r0.<android.net.http.X509TrustManagerExtensions: javax.net.ssl.X509TrustManager mTrustManager> = null;

        r0.<android.net.http.X509TrustManagerExtensions: java.lang.reflect.Method mCheckServerTrusted> = null;

        r0.<android.net.http.X509TrustManagerExtensions: java.lang.reflect.Method mIsSameTrustConfiguration> = null;

        return;

     label1:
        r0.<android.net.http.X509TrustManagerExtensions: com.android.org.conscrypt.TrustManagerImpl mDelegate> = null;

        r0.<android.net.http.X509TrustManagerExtensions: javax.net.ssl.X509TrustManager mTrustManager> = r10;

     label2:
        $r1 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "[Ljava/security/cert/X509Certificate;";

        $r2[1] = class "Ljava/lang/String;";

        $r2[2] = class "Ljava/lang/String;";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("checkServerTrusted", $r2);

        r0.<android.net.http.X509TrustManagerExtensions: java.lang.reflect.Method mCheckServerTrusted> = $r3;

     label3:
        $r4 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = newarray (java.lang.Class)[2];

        $r5[0] = class "Ljava/lang/String;";

        $r5[1] = class "Ljava/lang/String;";

        r11 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isSameTrustConfiguration", $r5);

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        r11 = null;

     label6:
        r0.<android.net.http.X509TrustManagerExtensions: java.lang.reflect.Method mIsSameTrustConfiguration> = r11;

        return;

     label7:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Required method checkServerTrusted(X509Certificate[], String, String, String) missing");

        throw $r8;

        catch java.lang.NoSuchMethodException from label2 to label3 with label7;
        catch java.lang.ReflectiveOperationException from label3 to label4 with label5;
    }

    public java.util.List checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.lang.String) throws java.security.cert.CertificateException
    {
        android.net.http.X509TrustManagerExtensions r0;
        java.lang.String r1, r2;
        com.android.org.conscrypt.TrustManagerImpl r3;
        java.lang.Object[] $r4;
        javax.net.ssl.X509TrustManager $r5;
        java.lang.reflect.Method $r6;
        java.lang.Object $r7;
        java.util.List $r8, r21;
        java.lang.Throwable $r9, $r11, $r12, $r13, $r15, $r17, $r18;
        boolean $z0, $z1;
        java.security.cert.CertificateException $r14, r24, r25;
        java.lang.RuntimeException $r19;
        java.security.cert.X509Certificate[] r20;
        java.lang.reflect.InvocationTargetException r26, r27, r28, r29, r30;

        r0 := @this: android.net.http.X509TrustManagerExtensions;

        r20 := @parameter0: java.security.cert.X509Certificate[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = r0.<android.net.http.X509TrustManagerExtensions: com.android.org.conscrypt.TrustManagerImpl mDelegate>;

        if r3 == null goto label1;

        $r8 = virtualinvoke r3.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>(r20, r1, r2);

        return $r8;

     label1:
        $r6 = r0.<android.net.http.X509TrustManagerExtensions: java.lang.reflect.Method mCheckServerTrusted>;

        $r5 = r0.<android.net.http.X509TrustManagerExtensions: javax.net.ssl.X509TrustManager mTrustManager>;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r20;

        $r4[1] = r1;

        $r4[2] = r2;

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r4);

        r21 = (java.util.List) $r7;

     label2:
        return r21;

     label3:
        $r11 := @caughtexception;

        r26 = (java.lang.reflect.InvocationTargetException) $r11;

        $r12 = virtualinvoke r26.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z0 = $r12 instanceof java.security.cert.CertificateException;

        if $z0 != 0 goto label5;

        r27 = (java.lang.reflect.InvocationTargetException) $r11;

        $r15 = virtualinvoke r27.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z1 = $r15 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label4;

        r28 = (java.lang.reflect.InvocationTargetException) $r11;

        $r18 = virtualinvoke r28.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r19 = (java.lang.RuntimeException) $r18;

        throw $r19;

     label4:
        r24 = new java.security.cert.CertificateException;

        r29 = (java.lang.reflect.InvocationTargetException) $r11;

        $r17 = virtualinvoke r29.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke r24.<java.security.cert.CertificateException: void <init>(java.lang.String,java.lang.Throwable)>("checkServerTrusted failed", $r17);

        throw r24;

     label5:
        r30 = (java.lang.reflect.InvocationTargetException) $r11;

        $r13 = virtualinvoke r30.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r14 = (java.security.cert.CertificateException) $r13;

        throw $r14;

     label6:
        $r9 := @caughtexception;

        r25 = new java.security.cert.CertificateException;

        specialinvoke r25.<java.security.cert.CertificateException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to call checkServerTrusted", $r9);

        throw r25;

        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public boolean isSameTrustConfiguration(java.lang.String, java.lang.String)
    {
        android.net.http.X509TrustManagerExtensions r0;
        java.lang.String r1, r15;
        java.lang.reflect.Method r2;
        boolean z0, $z1;
        java.lang.Object[] $r3;
        javax.net.ssl.X509TrustManager $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        java.lang.Throwable $r7, $r8, $r10, $r11, $r13;
        java.lang.RuntimeException $r12, r18, r19;
        java.lang.reflect.InvocationTargetException r20, r21, r22;

        r0 := @this: android.net.http.X509TrustManagerExtensions;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<android.net.http.X509TrustManagerExtensions: java.lang.reflect.Method mIsSameTrustConfiguration>;

        if r2 != null goto label1;

        return 1;

     label1:
        $r4 = r0.<android.net.http.X509TrustManagerExtensions: javax.net.ssl.X509TrustManager mTrustManager>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r15;

        $r3[1] = r1;

        $r5 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r3);

        $r6 = (java.lang.Boolean) $r5;

        z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return z0;

     label3:
        $r7 := @caughtexception;

        r20 = (java.lang.reflect.InvocationTargetException) $r7;

        $r8 = virtualinvoke r20.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z1 = $r8 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label4;

        r21 = (java.lang.reflect.InvocationTargetException) $r7;

        $r11 = virtualinvoke r21.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r12 = (java.lang.RuntimeException) $r11;

        throw $r12;

     label4:
        r18 = new java.lang.RuntimeException;

        r22 = (java.lang.reflect.InvocationTargetException) $r7;

        $r10 = virtualinvoke r22.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("isSameTrustConfiguration failed", $r10);

        throw r18;

     label5:
        $r13 := @caughtexception;

        r19 = new java.lang.RuntimeException;

        specialinvoke r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to call isSameTrustConfiguration", $r13);

        throw r19;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public boolean isUserAddedCertificate(java.security.cert.X509Certificate)
    {
        android.net.http.X509TrustManagerExtensions r0;
        java.security.cert.X509Certificate r1, $r3;
        android.security.net.config.UserCertificateSource $r2;
        boolean z0;

        r0 := @this: android.net.http.X509TrustManagerExtensions;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = staticinvoke <android.security.net.config.UserCertificateSource: android.security.net.config.UserCertificateSource getInstance()>();

        $r3 = virtualinvoke $r2.<android.security.net.config.UserCertificateSource: java.security.cert.X509Certificate findBySubjectAndPublicKey(java.security.cert.X509Certificate)>(r1);

        if $r3 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
