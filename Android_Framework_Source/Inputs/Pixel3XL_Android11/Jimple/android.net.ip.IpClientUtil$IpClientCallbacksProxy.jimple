class android.net.ip.IpClientUtil$IpClientCallbacksProxy extends android.net.ip.IIpClientCallbacks$Stub
{
    protected final android.net.ip.IpClientCallbacks mCb;

    public void <init>(android.net.ip.IpClientCallbacks)
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        android.net.ip.IpClientCallbacks r1;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        r1 := @parameter0: android.net.ip.IpClientCallbacks;

        specialinvoke r0.<android.net.ip.IIpClientCallbacks$Stub: void <init>()>();

        r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb> = r1;

        return;
    }

    public java.lang.String getInterfaceHash()
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        return "02cd6fd07d5c04eca0c35a350f7b0be576242883";
    }

    public int getInterfaceVersion()
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        return 7;
    }

    public void installPacketFilter(byte[])
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        byte[] r1;
        android.net.ip.IpClientCallbacks $r2;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        r1 := @parameter0: byte[];

        $r2 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r2.<android.net.ip.IpClientCallbacks: void installPacketFilter(byte[])>(r1);

        return;
    }

    public void onIpClientCreated(android.net.ip.IIpClient)
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        android.net.ip.IIpClient r1;
        android.net.ip.IpClientCallbacks $r2;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        r1 := @parameter0: android.net.ip.IIpClient;

        $r2 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r2.<android.net.ip.IpClientCallbacks: void onIpClientCreated(android.net.ip.IIpClient)>(r1);

        return;
    }

    public void onLinkPropertiesChange(android.net.LinkProperties)
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        android.net.LinkProperties r1;
        android.net.ip.IpClientCallbacks $r2;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        r1 := @parameter0: android.net.LinkProperties;

        $r2 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r2.<android.net.ip.IpClientCallbacks: void onLinkPropertiesChange(android.net.LinkProperties)>(r1);

        return;
    }

    public void onNewDhcpResults(android.net.DhcpResultsParcelable)
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        android.net.DhcpResultsParcelable r1;
        android.net.ip.IpClientCallbacks $r2;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        r1 := @parameter0: android.net.DhcpResultsParcelable;

        $r2 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r2.<android.net.ip.IpClientCallbacks: void onNewDhcpResults(android.net.DhcpResultsParcelable)>(r1);

        return;
    }

    public void onPostDhcpAction()
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        android.net.ip.IpClientCallbacks $r1;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        $r1 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r1.<android.net.ip.IpClientCallbacks: void onPostDhcpAction()>();

        return;
    }

    public void onPreDhcpAction()
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        android.net.ip.IpClientCallbacks $r1;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        $r1 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r1.<android.net.ip.IpClientCallbacks: void onPreDhcpAction()>();

        return;
    }

    public void onPreconnectionStart(java.util.List)
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        java.util.List r1;
        android.net.ip.IpClientCallbacks $r2;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r2.<android.net.ip.IpClientCallbacks: void onPreconnectionStart(java.util.List)>(r1);

        return;
    }

    public void onProvisioningFailure(android.net.LinkProperties)
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        android.net.LinkProperties r1;
        android.net.ip.IpClientCallbacks $r2;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        r1 := @parameter0: android.net.LinkProperties;

        $r2 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r2.<android.net.ip.IpClientCallbacks: void onProvisioningFailure(android.net.LinkProperties)>(r1);

        return;
    }

    public void onProvisioningSuccess(android.net.LinkProperties)
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        android.net.LinkProperties r1;
        android.net.ip.IpClientCallbacks $r2;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        r1 := @parameter0: android.net.LinkProperties;

        $r2 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r2.<android.net.ip.IpClientCallbacks: void onProvisioningSuccess(android.net.LinkProperties)>(r1);

        return;
    }

    public void onQuit()
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        android.net.ip.IpClientCallbacks $r1;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        $r1 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r1.<android.net.ip.IpClientCallbacks: void onQuit()>();

        return;
    }

    public void onReachabilityLost(java.lang.String)
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        java.lang.String r1;
        android.net.ip.IpClientCallbacks $r2;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r2.<android.net.ip.IpClientCallbacks: void onReachabilityLost(java.lang.String)>(r1);

        return;
    }

    public void setFallbackMulticastFilter(boolean)
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        boolean z0;
        android.net.ip.IpClientCallbacks $r1;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r1.<android.net.ip.IpClientCallbacks: void setFallbackMulticastFilter(boolean)>(z0);

        return;
    }

    public void setNeighborDiscoveryOffload(boolean)
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        boolean z0;
        android.net.ip.IpClientCallbacks $r1;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r1.<android.net.ip.IpClientCallbacks: void setNeighborDiscoveryOffload(boolean)>(z0);

        return;
    }

    public void startReadPacketFilter()
    {
        android.net.ip.IpClientUtil$IpClientCallbacksProxy r0;
        android.net.ip.IpClientCallbacks $r1;

        r0 := @this: android.net.ip.IpClientUtil$IpClientCallbacksProxy;

        $r1 = r0.<android.net.ip.IpClientUtil$IpClientCallbacksProxy: android.net.ip.IpClientCallbacks mCb>;

        virtualinvoke $r1.<android.net.ip.IpClientCallbacks: void startReadPacketFilter()>();

        return;
    }
}
