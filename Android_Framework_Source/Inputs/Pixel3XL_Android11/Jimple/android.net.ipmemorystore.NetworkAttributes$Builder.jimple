public class android.net.ipmemorystore.NetworkAttributes$Builder extends java.lang.Object
{
    private java.net.Inet4Address mAssignedAddress;
    private java.lang.Long mAssignedAddressExpiry;
    private java.lang.String mCluster;
    private java.util.List mDnsAddresses;
    private java.lang.Integer mMtu;

    public void <init>()
    {
        android.net.ipmemorystore.NetworkAttributes$Builder r0;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(android.net.ipmemorystore.NetworkAttributes)
    {
        android.net.ipmemorystore.NetworkAttributes$Builder r0;
        android.net.ipmemorystore.NetworkAttributes r1;
        java.net.Inet4Address $r2;
        java.lang.Long $r3;
        java.lang.String $r4;
        java.util.ArrayList $r5;
        java.util.List $r6;
        java.lang.Integer $r7;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes$Builder;

        r1 := @parameter0: android.net.ipmemorystore.NetworkAttributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address>;

        r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.net.Inet4Address mAssignedAddress> = $r2;

        $r3 = r1.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry>;

        r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.lang.Long mAssignedAddressExpiry> = $r3;

        $r4 = r1.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster>;

        r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.lang.String mCluster> = $r4;

        $r5 = new java.util.ArrayList;

        $r6 = r1.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.util.List mDnsAddresses> = $r5;

        $r7 = r1.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu>;

        r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.lang.Integer mMtu> = $r7;

        return;
    }

    public android.net.ipmemorystore.NetworkAttributes build()
    {
        android.net.ipmemorystore.NetworkAttributes$Builder r0;
        android.net.ipmemorystore.NetworkAttributes $r1;
        java.lang.Integer $r2;
        java.util.List $r3;
        java.lang.String $r4;
        java.lang.Long $r5;
        java.net.Inet4Address $r6;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes$Builder;

        $r1 = new android.net.ipmemorystore.NetworkAttributes;

        $r6 = r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.net.Inet4Address mAssignedAddress>;

        $r5 = r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.lang.Long mAssignedAddressExpiry>;

        $r4 = r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.lang.String mCluster>;

        $r3 = r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.util.List mDnsAddresses>;

        $r2 = r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.lang.Integer mMtu>;

        specialinvoke $r1.<android.net.ipmemorystore.NetworkAttributes: void <init>(java.net.Inet4Address,java.lang.Long,java.lang.String,java.util.List,java.lang.Integer)>($r6, $r5, $r4, $r3, $r2);

        return $r1;
    }

    public android.net.ipmemorystore.NetworkAttributes$Builder setAssignedV4Address(java.net.Inet4Address)
    {
        android.net.ipmemorystore.NetworkAttributes$Builder r0;
        java.net.Inet4Address r1;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes$Builder;

        r1 := @parameter0: java.net.Inet4Address;

        r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.net.Inet4Address mAssignedAddress> = r1;

        return r0;
    }

    public android.net.ipmemorystore.NetworkAttributes$Builder setAssignedV4AddressExpiry(java.lang.Long)
    {
        android.net.ipmemorystore.NetworkAttributes$Builder r0;
        java.lang.Long r1;
        long $l0;
        byte $b1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes$Builder;

        r1 := @parameter0: java.lang.Long;

        if r1 == null goto label2;

        $l0 = virtualinvoke r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lease expiry can\'t be negative or zero");

        throw $r2;

     label2:
        r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.lang.Long mAssignedAddressExpiry> = r1;

        return r0;
    }

    public android.net.ipmemorystore.NetworkAttributes$Builder setCluster(java.lang.String)
    {
        android.net.ipmemorystore.NetworkAttributes$Builder r0;
        java.lang.String r1;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.lang.String mCluster> = r1;

        return r0;
    }

    public android.net.ipmemorystore.NetworkAttributes$Builder setDnsAddresses(java.util.List)
    {
        android.net.ipmemorystore.NetworkAttributes$Builder r0;
        java.util.List r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        java.net.InetAddress $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes$Builder;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label3;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.net.InetAddress) $r3;

        if $r4 == null goto label2;

        goto label1;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null DNS address");

        throw $r5;

     label3:
        r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.util.List mDnsAddresses> = r1;

        return r0;
    }

    public android.net.ipmemorystore.NetworkAttributes$Builder setMtu(java.lang.Integer)
    {
        android.net.ipmemorystore.NetworkAttributes$Builder r0;
        java.lang.Integer r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes$Builder;

        r1 := @parameter0: java.lang.Integer;

        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i0 < 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MTU can\'t be negative");

        throw $r2;

     label2:
        r0.<android.net.ipmemorystore.NetworkAttributes$Builder: java.lang.Integer mMtu> = r1;

        return r0;
    }
}
