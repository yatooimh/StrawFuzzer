public class android.net.ipmemorystore.NetworkAttributes extends java.lang.Object
{
    private static final boolean DBG;
    private static final float NULL_MATCH_WEIGHT;
    public static final float TOTAL_WEIGHT;
    private static final float TOTAL_WEIGHT_CUTOFF;
    private static final float WEIGHT_ASSIGNEDV4ADDR;
    private static final float WEIGHT_ASSIGNEDV4ADDREXPIRY;
    private static final float WEIGHT_CLUSTER;
    private static final float WEIGHT_DNSADDRESSES;
    private static final float WEIGHT_MTU;
    public final java.net.Inet4Address assignedV4Address;
    public final java.lang.Long assignedV4AddressExpiry;
    public final java.lang.String cluster;
    public final java.util.List dnsAddresses;
    public final java.lang.Integer mtu;

    public void <init>(android.net.ipmemorystore.NetworkAttributesParcelable)
    {
        android.net.ipmemorystore.NetworkAttributes r0;
        java.net.Inet4Address r1;
        java.lang.String r2;
        java.util.List r3;
        byte[] $r4;
        java.net.InetAddress $r5;
        long $l0, $l4;
        byte $b1;
        android.net.ipmemorystore.Blob[] $r6;
        int $i2, $i3;
        android.net.ipmemorystore.NetworkAttributesParcelable r7;
        java.lang.Long r8;
        java.lang.Integer r9;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes;

        r7 := @parameter0: android.net.ipmemorystore.NetworkAttributesParcelable;

        $r4 = r7.<android.net.ipmemorystore.NetworkAttributesParcelable: byte[] assignedV4Address>;

        $r5 = staticinvoke <android.net.ipmemorystore.NetworkAttributes: java.net.InetAddress getByAddressOrNull(byte[])>($r4);

        r1 = (java.net.Inet4Address) $r5;

        $l0 = r7.<android.net.ipmemorystore.NetworkAttributesParcelable: long assignedV4AddressExpiry>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $l4 = r7.<android.net.ipmemorystore.NetworkAttributesParcelable: long assignedV4AddressExpiry>;

        r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        goto label2;

     label1:
        r8 = null;

     label2:
        r2 = r7.<android.net.ipmemorystore.NetworkAttributesParcelable: java.lang.String cluster>;

        $r6 = r7.<android.net.ipmemorystore.NetworkAttributesParcelable: android.net.ipmemorystore.Blob[] dnsAddresses>;

        r3 = staticinvoke <android.net.ipmemorystore.NetworkAttributes: java.util.List blobArrayToInetAddressList(android.net.ipmemorystore.Blob[])>($r6);

        $i2 = r7.<android.net.ipmemorystore.NetworkAttributesParcelable: int mtu>;

        if $i2 < 0 goto label3;

        $i3 = r7.<android.net.ipmemorystore.NetworkAttributesParcelable: int mtu>;

        r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        goto label4;

     label3:
        r9 = null;

     label4:
        specialinvoke r0.<android.net.ipmemorystore.NetworkAttributes: void <init>(java.net.Inet4Address,java.lang.Long,java.lang.String,java.util.List,java.lang.Integer)>(r1, r8, r2, r3, r9);

        return;
    }

    public void <init>(java.net.Inet4Address, java.lang.Long, java.lang.String, java.util.List, java.lang.Integer)
    {
        android.net.ipmemorystore.NetworkAttributes r0;
        java.lang.Long r1;
        java.lang.String r2;
        java.util.List r3, r9;
        java.lang.Integer r4;
        java.util.ArrayList $r5;
        long $l0;
        byte $b1;
        java.lang.IllegalArgumentException $r6, $r7;
        int $i2;
        java.net.Inet4Address r8;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes;

        r8 := @parameter0: java.net.Inet4Address;

        r1 := @parameter1: java.lang.Long;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.lang.Integer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r4 == null goto label2;

        $i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        if $i2 < 0 goto label1;

        goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MTU can\'t be negative");

        throw $r7;

     label2:
        if r1 == null goto label4;

        $l0 = virtualinvoke r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label3;

        goto label4;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lease expiry can\'t be negative or zero");

        throw $r6;

     label4:
        r0.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address> = r8;

        r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry> = r1;

        r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster> = r2;

        if r3 != null goto label5;

        r9 = null;

        goto label6;

     label5:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

        r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

     label6:
        r0.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses> = r9;

        r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu> = r4;

        return;
    }

    private static java.util.List blobArrayToInetAddressList(android.net.ipmemorystore.Blob[])
    {
        android.net.ipmemorystore.Blob[] r0;
        int i0, $i1, i2;
        java.net.InetAddress r2;
        java.util.ArrayList $r3;
        android.net.ipmemorystore.Blob $r4;
        byte[] $r5;

        r0 := @parameter0: android.net.ipmemorystore.Blob[];

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = new java.util.ArrayList;

        $i1 = lengthof r0;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i1);

        i0 = lengthof r0;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r4 = r0[i2];

        $r5 = $r4.<android.net.ipmemorystore.Blob: byte[] data>;

        r2 = staticinvoke <android.net.ipmemorystore.NetworkAttributes: java.net.InetAddress getByAddressOrNull(byte[])>($r5);

        if r2 == null goto label3;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return $r3;
    }

    private static java.net.InetAddress getByAddressOrNull(byte[])
    {
        java.lang.Throwable $r0;
        byte[] r1;
        java.net.InetAddress r2;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        return null;

     label1:
        r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>(r1);

     label2:
        return r2;

     label3:
        $r0 := @caughtexception;

        return null;

        catch java.net.UnknownHostException from label1 to label2 with label3;
    }

    private static android.net.ipmemorystore.Blob[] inetAddressListToBlobArray(java.util.List)
    {
        java.util.List r0;
        java.net.InetAddress r2;
        java.util.ArrayList $r4;
        int $i0, i1;
        android.net.ipmemorystore.Blob[] $r5, $r7;
        java.lang.Object[] $r6;
        java.lang.Object $r8;
        android.net.ipmemorystore.Blob $r9;
        byte[] $r10;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        return null;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label2:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label5;

        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (java.net.InetAddress) $r8;

        if r2 != null goto label3;

        goto label4;

     label3:
        $r9 = new android.net.ipmemorystore.Blob;

        specialinvoke $r9.<android.net.ipmemorystore.Blob: void <init>()>();

        $r10 = virtualinvoke r2.<java.net.InetAddress: byte[] getAddress()>();

        $r9.<android.net.ipmemorystore.Blob: byte[] data> = $r10;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $r5 = newarray (android.net.ipmemorystore.Blob)[0];

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (android.net.ipmemorystore.Blob[]) $r6;

        return $r7;
    }

    private float samenessContribution(float, java.lang.Object, java.lang.Object)
    {
        android.net.ipmemorystore.NetworkAttributes r0;
        float f0, f2, f3;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        f2 = 0.0F;

        if r1 != null goto label2;

        if r2 != null goto label1;

        f2 = 0.25F * f0;

     label1:
        return f2;

     label2:
        f3 = 0.0F;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, r2);

        if $z0 == 0 goto label3;

        f3 = f0;

     label3:
        return f3;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.ipmemorystore.NetworkAttributes r0, r12;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        java.net.Inet4Address $r1, $r2;
        java.lang.Long $r3, $r4;
        java.lang.String $r5, $r6;
        java.util.List $r7, $r8;
        java.lang.Integer $r9, $r10;
        java.lang.Object r11;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes;

        r11 := @parameter0: java.lang.Object;

        z0 = r11 instanceof android.net.ipmemorystore.NetworkAttributes;

        z6 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r12 = (android.net.ipmemorystore.NetworkAttributes) r11;

        $r2 = r0.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address>;

        $r1 = r12.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z1 == 0 goto label2;

        $r4 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry>;

        $r3 = r12.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 == 0 goto label2;

        $r6 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster>;

        $r5 = r12.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z3 == 0 goto label2;

        $r8 = r0.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses>;

        $r7 = r12.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses>;

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z4 == 0 goto label2;

        $r10 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu>;

        $r9 = r12.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu>;

        $z5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z5 == 0 goto label2;

        z6 = 1;

        goto label2;

     label2:
        return z6;
    }

    public float getNetworkGroupSamenessConfidence(android.net.ipmemorystore.NetworkAttributes)
    {
        android.net.ipmemorystore.NetworkAttributes r0, r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        java.net.Inet4Address $r2, $r3;
        java.lang.Long $r4, $r5;
        java.lang.String $r6, $r7;
        java.util.List $r8, $r9;
        java.lang.Integer $r10, $r11;
        byte $b0;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes;

        r1 := @parameter0: android.net.ipmemorystore.NetworkAttributes;

        $r3 = r0.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address>;

        $r2 = r1.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address>;

        $f1 = specialinvoke r0.<android.net.ipmemorystore.NetworkAttributes: float samenessContribution(float,java.lang.Object,java.lang.Object)>(300.0F, $r3, $r2);

        $r5 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry>;

        $r4 = r1.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry>;

        $f2 = specialinvoke r0.<android.net.ipmemorystore.NetworkAttributes: float samenessContribution(float,java.lang.Object,java.lang.Object)>(0.0F, $r5, $r4);

        $f3 = $f1 + $f2;

        $r7 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster>;

        $r6 = r1.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster>;

        $f4 = specialinvoke r0.<android.net.ipmemorystore.NetworkAttributes: float samenessContribution(float,java.lang.Object,java.lang.Object)>(300.0F, $r7, $r6);

        $f5 = $f3 + $f4;

        $r9 = r0.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses>;

        $r8 = r1.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses>;

        $f6 = specialinvoke r0.<android.net.ipmemorystore.NetworkAttributes: float samenessContribution(float,java.lang.Object,java.lang.Object)>(200.0F, $r9, $r8);

        $f7 = $f5 + $f6;

        $r11 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu>;

        $r10 = r1.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu>;

        $f8 = specialinvoke r0.<android.net.ipmemorystore.NetworkAttributes: float samenessContribution(float,java.lang.Object,java.lang.Object)>(50.0F, $r11, $r10);

        f0 = $f7 + $f8;

        $b0 = f0 cmpg 520.0F;

        if $b0 >= 0 goto label1;

        $f13 = f0 / 1040.0F;

        return $f13;

     label1:
        $f9 = f0 - 520.0F;

        $f10 = $f9 / 330.0F;

        $f11 = $f10 / 2.0F;

        $f12 = $f11 + 0.5F;

        return $f12;
    }

    public int hashCode()
    {
        android.net.ipmemorystore.NetworkAttributes r0;
        java.lang.Object[] $r1;
        java.net.Inet4Address $r2;
        java.lang.Long $r3;
        java.lang.String $r4;
        java.util.List $r5;
        java.lang.Integer $r6;
        int $i0;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes;

        $r1 = newarray (java.lang.Object)[5];

        $r2 = r0.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address>;

        $r1[0] = $r2;

        $r3 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry>;

        $r1[1] = $r3;

        $r4 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster>;

        $r1[2] = $r4;

        $r5 = r0.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses>;

        $r1[3] = $r5;

        $r6 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu>;

        $r1[4] = $r6;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    public boolean isEmpty()
    {
        android.net.ipmemorystore.NetworkAttributes r0;
        java.net.Inet4Address $r1;
        java.lang.Long $r2;
        java.lang.String $r3;
        java.util.List $r4;
        java.lang.Integer $r5;
        boolean z0;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes;

        $r1 = r0.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address>;

        if $r1 != null goto label1;

        $r2 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry>;

        if $r2 != null goto label1;

        $r3 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster>;

        if $r3 != null goto label1;

        $r4 = r0.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses>;

        if $r4 != null goto label1;

        $r5 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu>;

        if $r5 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public android.net.ipmemorystore.NetworkAttributesParcelable toParcelable()
    {
        android.net.ipmemorystore.NetworkAttributes r0;
        android.net.ipmemorystore.NetworkAttributesParcelable $r2;
        java.lang.String $r3;
        java.util.List $r4;
        android.net.ipmemorystore.Blob[] $r5;
        java.net.Inet4Address r6;
        byte[] r7;
        java.lang.Long r8;
        long l0;
        java.lang.Integer r9;
        int i1;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes;

        $r2 = new android.net.ipmemorystore.NetworkAttributesParcelable;

        specialinvoke $r2.<android.net.ipmemorystore.NetworkAttributesParcelable: void <init>()>();

        r6 = r0.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address>;

        if r6 != null goto label1;

        r7 = null;

        goto label2;

     label1:
        r7 = virtualinvoke r6.<java.net.Inet4Address: byte[] getAddress()>();

     label2:
        $r2.<android.net.ipmemorystore.NetworkAttributesParcelable: byte[] assignedV4Address> = r7;

        r8 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry>;

        if r8 != null goto label3;

        l0 = 0L;

        goto label4;

     label3:
        l0 = virtualinvoke r8.<java.lang.Long: long longValue()>();

     label4:
        $r2.<android.net.ipmemorystore.NetworkAttributesParcelable: long assignedV4AddressExpiry> = l0;

        $r3 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster>;

        $r2.<android.net.ipmemorystore.NetworkAttributesParcelable: java.lang.String cluster> = $r3;

        $r4 = r0.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses>;

        $r5 = staticinvoke <android.net.ipmemorystore.NetworkAttributes: android.net.ipmemorystore.Blob[] inetAddressListToBlobArray(java.util.List)>($r4);

        $r2.<android.net.ipmemorystore.NetworkAttributesParcelable: android.net.ipmemorystore.Blob[] dnsAddresses> = $r5;

        r9 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu>;

        if r9 != null goto label5;

        i1 = -1;

        goto label6;

     label5:
        i1 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

     label6:
        $r2.<android.net.ipmemorystore.NetworkAttributesParcelable: int mtu> = i1;

        return $r2;
    }

    public java.lang.String toString()
    {
        android.net.ipmemorystore.NetworkAttributes r0;
        java.util.Iterator r2, r39;
        java.util.StringJoiner $r3;
        java.util.ArrayList $r4;
        java.net.Inet4Address $r5, $r35;
        java.lang.Long $r6, $r31;
        java.lang.String $r7, $r10, $r14, $r18, $r25, $r28, $r32, $r36;
        java.util.List $r8, $r21;
        java.lang.Integer $r9, $r17;
        boolean $z5, $z6, $z7;
        java.lang.Object $r13, $r23;
        java.net.InetAddress $r24;

        r0 := @this: android.net.ipmemorystore.NetworkAttributes;

        $r3 = new java.util.StringJoiner;

        specialinvoke $r3.<java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>(" ", "{", "}");

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address>;

        if $r5 == null goto label01;

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("assignedV4Addr :");

        $r35 = r0.<android.net.ipmemorystore.NetworkAttributes: java.net.Inet4Address assignedV4Address>;

        $r36 = virtualinvoke $r35.<java.net.Inet4Address: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r36);

        goto label02;

     label01:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("assignedV4Addr");

     label02:
        $r6 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry>;

        if $r6 == null goto label03;

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("assignedV4AddressExpiry :");

        $r31 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Long assignedV4AddressExpiry>;

        $r32 = virtualinvoke $r31.<java.lang.Long: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r32);

        goto label04;

     label03:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("assignedV4AddressExpiry");

     label04:
        $r7 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster>;

        if $r7 == null goto label05;

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("cluster :");

        $r28 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.String cluster>;

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r28);

        goto label06;

     label05:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("cluster");

     label06:
        $r8 = r0.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses>;

        if $r8 == null goto label09;

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("dnsAddr : [");

        $r21 = r0.<android.net.ipmemorystore.NetworkAttributes: java.util.List dnsAddresses>;

        r2 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z7 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label08;

        $r23 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r24 = (java.net.InetAddress) $r23;

        $r25 = virtualinvoke $r24.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r25);

        goto label07;

     label08:
        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("]");

        goto label10;

     label09:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("dnsAddr");

     label10:
        $r9 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu>;

        if $r9 == null goto label11;

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("mtu :");

        $r17 = r0.<android.net.ipmemorystore.NetworkAttributes: java.lang.Integer mtu>;

        $r18 = virtualinvoke $r17.<java.lang.Integer: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r18);

        goto label12;

     label11:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>("mtu");

     label12:
        $z5 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z5 != 0 goto label15;

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("; Null fields : [");

        r39 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z6 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label14;

        $r13 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (java.lang.String) $r13;

        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>($r14);

        goto label13;

     label14:
        virtualinvoke $r3.<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>("]");

     label15:
        $r10 = virtualinvoke $r3.<java.util.StringJoiner: java.lang.String toString()>();

        return $r10;
    }

    public static void <clinit>()
    {
        <android.net.ipmemorystore.NetworkAttributes: float WEIGHT_MTU> = 50.0F;

        <android.net.ipmemorystore.NetworkAttributes: float WEIGHT_DNSADDRESSES> = 200.0F;

        <android.net.ipmemorystore.NetworkAttributes: float WEIGHT_CLUSTER> = 300.0F;

        <android.net.ipmemorystore.NetworkAttributes: float WEIGHT_ASSIGNEDV4ADDREXPIRY> = 0.0F;

        <android.net.ipmemorystore.NetworkAttributes: float WEIGHT_ASSIGNEDV4ADDR> = 300.0F;

        <android.net.ipmemorystore.NetworkAttributes: float TOTAL_WEIGHT_CUTOFF> = 520.0F;

        <android.net.ipmemorystore.NetworkAttributes: float TOTAL_WEIGHT> = 850.0F;

        <android.net.ipmemorystore.NetworkAttributes: float NULL_MATCH_WEIGHT> = 0.25F;

        <android.net.ipmemorystore.NetworkAttributes: boolean DBG> = 1;

        return;
    }
}
