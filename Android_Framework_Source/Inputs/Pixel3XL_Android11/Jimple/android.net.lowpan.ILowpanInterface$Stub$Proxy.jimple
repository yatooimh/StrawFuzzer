class android.net.lowpan.ILowpanInterface$Stub$Proxy extends java.lang.Object implements android.net.lowpan.ILowpanInterface
{
    public static android.net.lowpan.ILowpanInterface sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addExternalRoute(android.net.IpPrefix, int) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        android.net.IpPrefix r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r7 := @parameter0: android.net.IpPrefix;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.IpPrefix: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void addExternalRoute(android.net.IpPrefix,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addListener(android.net.lowpan.ILowpanInterfaceListener) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        android.net.lowpan.ILowpanInterfaceListener r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r7 := @parameter0: android.net.lowpan.ILowpanInterfaceListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.net.lowpan.ILowpanInterfaceListener: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void addListener(android.net.lowpan.ILowpanInterfaceListener)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void addOnMeshPrefix(android.net.IpPrefix, int) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        android.net.IpPrefix r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r7 := @parameter0: android.net.IpPrefix;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.IpPrefix: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void addOnMeshPrefix(android.net.IpPrefix,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.os.IBinder asBinder()
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        $r1 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void attach(android.net.lowpan.LowpanProvision) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        android.net.lowpan.LowpanProvision r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r7 := @parameter0: android.net.lowpan.LowpanProvision;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.lowpan.LowpanProvision: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void attach(android.net.lowpan.LowpanProvision)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void beginLowPower() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r4 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.lowpan.ILowpanInterface: void beginLowPower()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void closeCommissioningSession() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r4 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.lowpan.ILowpanInterface: void closeCommissioningSession()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void form(android.net.lowpan.LowpanProvision) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        android.net.lowpan.LowpanProvision r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r7 := @parameter0: android.net.lowpan.LowpanProvision;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.lowpan.LowpanProvision: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void form(android.net.lowpan.LowpanProvision)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.lang.String getDriverVersion() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: java.lang.String getDriverVersion()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public byte[] getExtendedAddress() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7, r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: byte[] getExtendedAddress()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: byte[] createByteArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        return "android.net.lowpan.ILowpanInterface";
    }

    public java.lang.String[] getLinkAddresses() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: java.lang.String[] getLinkAddresses()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.IpPrefix[] getLinkNetworks() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.net.lowpan.ILowpanInterface $r6, $r7;
        java.lang.Throwable $r8;
        android.net.IpPrefix[] r9, r10;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.lowpan.ILowpanInterface: android.net.IpPrefix[] getLinkNetworks()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.net.IpPrefix: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.net.IpPrefix[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.lowpan.LowpanCredential getLowpanCredential() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.lowpan.ILowpanInterface $r6, $r7;
        java.lang.Throwable $r8;
        android.net.lowpan.LowpanCredential r9, r10;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.lowpan.ILowpanInterface: android.net.lowpan.LowpanCredential getLowpanCredential()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.net.lowpan.LowpanCredential: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.lowpan.LowpanCredential) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public android.net.lowpan.LowpanIdentity getLowpanIdentity() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.lowpan.ILowpanInterface $r6, $r7;
        java.lang.Throwable $r8;
        android.net.lowpan.LowpanIdentity r9, r10;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.lowpan.ILowpanInterface: android.net.lowpan.LowpanIdentity getLowpanIdentity()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.net.lowpan.LowpanIdentity: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.net.lowpan.LowpanIdentity) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public byte[] getMacAddress() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        byte[] r7, r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: byte[] getMacAddress()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: byte[] createByteArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getName() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: java.lang.String getName()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getNcpVersion() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: java.lang.String getNcpVersion()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getPartitionId() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: java.lang.String getPartitionId()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getRole() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: java.lang.String getRole()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getState() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7, r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: java.lang.String getState()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.lowpan.LowpanChannelInfo[] getSupportedChannels() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.net.lowpan.ILowpanInterface $r6, $r7;
        java.lang.Throwable $r8;
        android.net.lowpan.LowpanChannelInfo[] r9, r10;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.lowpan.ILowpanInterface: android.net.lowpan.LowpanChannelInfo[] getSupportedChannels()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.net.lowpan.LowpanChannelInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.net.lowpan.LowpanChannelInfo[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getSupportedNetworkTypes() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String[] r7, r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: java.lang.String[] getSupportedNetworkTypes()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isCommissioned() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.net.lowpan.ILowpanInterface $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        r6 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.lowpan.ILowpanInterface: boolean isCommissioned()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isConnected() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.net.lowpan.ILowpanInterface $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        r6 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.lowpan.ILowpanInterface: boolean isConnected()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isEnabled() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.net.lowpan.ILowpanInterface $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        r6 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.lowpan.ILowpanInterface: boolean isEnabled()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isUp() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.net.lowpan.ILowpanInterface $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        r6 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.lowpan.ILowpanInterface: boolean isUp()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void join(android.net.lowpan.LowpanProvision) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        android.net.lowpan.LowpanProvision r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r7 := @parameter0: android.net.lowpan.LowpanProvision;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.lowpan.LowpanProvision: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void join(android.net.lowpan.LowpanProvision)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void leave() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r4 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.lowpan.ILowpanInterface: void leave()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onHostWake() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void onHostWake()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void pollForData() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void pollForData()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void removeExternalRoute(android.net.IpPrefix) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r3, $r4;
        java.lang.Throwable $r5;
        android.net.IpPrefix r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r6 := @parameter0: android.net.IpPrefix;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.net.IpPrefix: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.lowpan.ILowpanInterface: void removeExternalRoute(android.net.IpPrefix)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void removeListener(android.net.lowpan.ILowpanInterfaceListener) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r3, $r4;
        java.lang.Throwable $r5;
        android.net.lowpan.ILowpanInterfaceListener r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r6 := @parameter0: android.net.lowpan.ILowpanInterfaceListener;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.net.lowpan.ILowpanInterfaceListener: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.lowpan.ILowpanInterface: void removeListener(android.net.lowpan.ILowpanInterfaceListener)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void removeOnMeshPrefix(android.net.IpPrefix) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r3, $r4;
        java.lang.Throwable $r5;
        android.net.IpPrefix r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r6 := @parameter0: android.net.IpPrefix;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label2:
        if r6 == null goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.net.IpPrefix: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $r2 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.lowpan.ILowpanInterface: void removeOnMeshPrefix(android.net.IpPrefix)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void reset() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r4 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.lowpan.ILowpanInterface: void reset()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void sendToCommissioner(byte[]) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r3, $r4;
        java.lang.Throwable $r5;
        byte[] r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r6 := @parameter0: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r6);

        $r2 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, null, 1);

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.lowpan.ILowpanInterface: void sendToCommissioner(byte[])>(r6);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void setEnabled(boolean) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        android.net.lowpan.ILowpanInterface $r5, $r6;
        java.lang.Throwable $r7;
        byte b0;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label2:
        if z0 == 0 goto label3;

        b0 = 1;

        goto label4;

     label3:
        b0 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.lowpan.ILowpanInterface: void setEnabled(boolean)>(z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void startCommissioningSession(android.net.lowpan.LowpanBeaconInfo) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;
        android.net.lowpan.LowpanBeaconInfo r7;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r7 := @parameter0: android.net.lowpan.LowpanBeaconInfo;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.lowpan.LowpanBeaconInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void startCommissioningSession(android.net.lowpan.LowpanBeaconInfo)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void startEnergyScan(java.util.Map, android.net.lowpan.ILowpanEnergyScanCallback) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.net.lowpan.ILowpanEnergyScanCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r5, $r6;
        java.lang.Throwable $r7;
        java.util.Map r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r8 := @parameter0: java.util.Map;

        r1 := @parameter1: android.net.lowpan.ILowpanEnergyScanCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        virtualinvoke r2.<android.os.Parcel: void writeMap(java.util.Map)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.net.lowpan.ILowpanEnergyScanCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.lowpan.ILowpanInterface: void startEnergyScan(java.util.Map,android.net.lowpan.ILowpanEnergyScanCallback)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void startNetScan(java.util.Map, android.net.lowpan.ILowpanNetScanCallback) throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.net.lowpan.ILowpanNetScanCallback r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r5, $r6;
        java.lang.Throwable $r7;
        java.util.Map r8;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r8 := @parameter0: java.util.Map;

        r1 := @parameter1: android.net.lowpan.ILowpanNetScanCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        virtualinvoke r2.<android.os.Parcel: void writeMap(java.util.Map)>(r8);

     label02:
        if r1 == null goto label05;

     label03:
        r9 = interfaceinvoke r1.<android.net.lowpan.ILowpanNetScanCallback: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r4 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.lowpan.ILowpanInterface: void startNetScan(java.util.Map,android.net.lowpan.ILowpanNetScanCallback)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void stopEnergyScan() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void stopEnergyScan()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void stopNetScan() throws android.os.RemoteException
    {
        android.net.lowpan.ILowpanInterface$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.lowpan.ILowpanInterface $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.net.lowpan.ILowpanInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.lowpan.ILowpanInterface");

        $r3 = r0.<android.net.lowpan.ILowpanInterface$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.lowpan.ILowpanInterface$Stub: android.net.lowpan.ILowpanInterface getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.lowpan.ILowpanInterface: void stopNetScan()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
