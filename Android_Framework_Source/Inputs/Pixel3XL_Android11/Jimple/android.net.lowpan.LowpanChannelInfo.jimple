public class android.net.lowpan.LowpanChannelInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final float UNKNOWN_BANDWIDTH;
    public static final float UNKNOWN_FREQUENCY;
    public static final int UNKNOWN_POWER;
    private int mIndex;
    private boolean mIsMaskedByRegulatoryDomain;
    private int mMaxTransmitPower;
    private java.lang.String mName;
    private float mSpectrumBandwidth;
    private float mSpectrumCenterFrequency;

    static void <clinit>()
    {
        android.net.lowpan.LowpanChannelInfo$1 $r0;

        <android.net.lowpan.LowpanChannelInfo: int UNKNOWN_POWER> = 2147483647;

        <android.net.lowpan.LowpanChannelInfo: float UNKNOWN_FREQUENCY> = 0.0F;

        <android.net.lowpan.LowpanChannelInfo: float UNKNOWN_BANDWIDTH> = 0.0F;

        $r0 = new android.net.lowpan.LowpanChannelInfo$1;

        specialinvoke $r0.<android.net.lowpan.LowpanChannelInfo$1: void <init>()>();

        <android.net.lowpan.LowpanChannelInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>()
    {
        android.net.lowpan.LowpanChannelInfo r0;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.lowpan.LowpanChannelInfo: int mIndex> = 0;

        r0.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName> = null;

        r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency> = 0.0F;

        r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth> = 0.0F;

        r0.<android.net.lowpan.LowpanChannelInfo: int mMaxTransmitPower> = 2147483647;

        r0.<android.net.lowpan.LowpanChannelInfo: boolean mIsMaskedByRegulatoryDomain> = 0;

        return;
    }

    private void <init>(int, java.lang.String, float, float)
    {
        android.net.lowpan.LowpanChannelInfo r0;
        int i0;
        java.lang.String r1;
        float f0, f1;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.lowpan.LowpanChannelInfo: int mIndex> = 0;

        r0.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName> = null;

        r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency> = 0.0F;

        r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth> = 0.0F;

        r0.<android.net.lowpan.LowpanChannelInfo: int mMaxTransmitPower> = 2147483647;

        r0.<android.net.lowpan.LowpanChannelInfo: boolean mIsMaskedByRegulatoryDomain> = 0;

        r0.<android.net.lowpan.LowpanChannelInfo: int mIndex> = i0;

        r0.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName> = r1;

        r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency> = f0;

        r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth> = f1;

        return;
    }

    void <init>(android.net.lowpan.LowpanChannelInfo$1)
    {
        android.net.lowpan.LowpanChannelInfo r0;
        android.net.lowpan.LowpanChannelInfo$1 r1;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        r1 := @parameter0: android.net.lowpan.LowpanChannelInfo$1;

        specialinvoke r0.<android.net.lowpan.LowpanChannelInfo: void <init>()>();

        return;
    }

    static int access$102(android.net.lowpan.LowpanChannelInfo, int)
    {
        android.net.lowpan.LowpanChannelInfo r0;
        int i0;

        r0 := @parameter0: android.net.lowpan.LowpanChannelInfo;

        i0 := @parameter1: int;

        r0.<android.net.lowpan.LowpanChannelInfo: int mIndex> = i0;

        return i0;
    }

    static java.lang.String access$202(android.net.lowpan.LowpanChannelInfo, java.lang.String)
    {
        android.net.lowpan.LowpanChannelInfo r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.lowpan.LowpanChannelInfo;

        r1 := @parameter1: java.lang.String;

        r0.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName> = r1;

        return r1;
    }

    static float access$302(android.net.lowpan.LowpanChannelInfo, float)
    {
        android.net.lowpan.LowpanChannelInfo r0;
        float f0;

        r0 := @parameter0: android.net.lowpan.LowpanChannelInfo;

        f0 := @parameter1: float;

        r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency> = f0;

        return f0;
    }

    static float access$402(android.net.lowpan.LowpanChannelInfo, float)
    {
        android.net.lowpan.LowpanChannelInfo r0;
        float f0;

        r0 := @parameter0: android.net.lowpan.LowpanChannelInfo;

        f0 := @parameter1: float;

        r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth> = f0;

        return f0;
    }

    static int access$502(android.net.lowpan.LowpanChannelInfo, int)
    {
        android.net.lowpan.LowpanChannelInfo r0;
        int i0;

        r0 := @parameter0: android.net.lowpan.LowpanChannelInfo;

        i0 := @parameter1: int;

        r0.<android.net.lowpan.LowpanChannelInfo: int mMaxTransmitPower> = i0;

        return i0;
    }

    static boolean access$602(android.net.lowpan.LowpanChannelInfo, boolean)
    {
        android.net.lowpan.LowpanChannelInfo r0;
        boolean z0;

        r0 := @parameter0: android.net.lowpan.LowpanChannelInfo;

        z0 := @parameter1: boolean;

        r0.<android.net.lowpan.LowpanChannelInfo: boolean mIsMaskedByRegulatoryDomain> = z0;

        return z0;
    }

    public static android.net.lowpan.LowpanChannelInfo getChannelInfoForIeee802154Page0(int)
    {
        int i0;
        android.net.lowpan.LowpanChannelInfo $r0, r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r0 = new android.net.lowpan.LowpanChannelInfo;

        specialinvoke $r0.<android.net.lowpan.LowpanChannelInfo: void <init>()>();

        r1 = $r0;

        if i0 >= 0 goto label1;

        r1 = null;

        goto label5;

     label1:
        if i0 != 0 goto label2;

        $r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency> = 8.6830003E8F;

        $r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth> = 600000.0F;

        goto label5;

     label2:
        if i0 >= 11 goto label3;

        $f3 = (float) i0;

        $f4 = $f3 * 2000000.0F;

        $f5 = $f4 + 9.04E8F;

        $r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency> = $f5;

        $r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth> = 0.0F;

        goto label5;

     label3:
        if i0 >= 26 goto label4;

        $f0 = (float) i0;

        $f1 = $f0 * 5000000.0F;

        $f2 = $f1 + 2.34999987E9F;

        $r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency> = $f2;

        $r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth> = 2000000.0F;

        goto label5;

     label4:
        r1 = null;

     label5:
        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        r1.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName> = $r2;

        return r1;
    }

    public int describeContents()
    {
        android.net.lowpan.LowpanChannelInfo r0;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.lowpan.LowpanChannelInfo r0, r4;
        java.lang.String $r1, $r2;
        boolean $z1, $z2, $z3, z4, z5;
        int $i0, $i1, $i4, $i5;
        float $f0, $f1, $f2, $f3;
        byte $b2, $b3;
        java.lang.Object r3;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        r3 := @parameter0: java.lang.Object;

        z4 = r3 instanceof android.net.lowpan.LowpanChannelInfo;

        if z4 != 0 goto label1;

        return 0;

     label1:
        r4 = (android.net.lowpan.LowpanChannelInfo) r3;

        z5 = 0;

        $r2 = r0.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName>;

        $r1 = r4.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z1 == 0 goto label2;

        z5 = 0;

        $i1 = r0.<android.net.lowpan.LowpanChannelInfo: int mIndex>;

        $i0 = r4.<android.net.lowpan.LowpanChannelInfo: int mIndex>;

        if $i1 != $i0 goto label2;

        z5 = 0;

        $z3 = r0.<android.net.lowpan.LowpanChannelInfo: boolean mIsMaskedByRegulatoryDomain>;

        $z2 = r4.<android.net.lowpan.LowpanChannelInfo: boolean mIsMaskedByRegulatoryDomain>;

        if $z3 != $z2 goto label2;

        z5 = 0;

        $f1 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency>;

        $f0 = r4.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency>;

        $b2 = $f1 cmpl $f0;

        if $b2 != 0 goto label2;

        z5 = 0;

        $f3 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth>;

        $f2 = r4.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth>;

        $b3 = $f3 cmpl $f2;

        if $b3 != 0 goto label2;

        z5 = 0;

        $i5 = r0.<android.net.lowpan.LowpanChannelInfo: int mMaxTransmitPower>;

        $i4 = r4.<android.net.lowpan.LowpanChannelInfo: int mMaxTransmitPower>;

        if $i5 != $i4 goto label2;

        z5 = 1;

     label2:
        return z5;
    }

    public int getIndex()
    {
        android.net.lowpan.LowpanChannelInfo r0;
        int $i0;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        $i0 = r0.<android.net.lowpan.LowpanChannelInfo: int mIndex>;

        return $i0;
    }

    public int getMaxTransmitPower()
    {
        android.net.lowpan.LowpanChannelInfo r0;
        int $i0;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        $i0 = r0.<android.net.lowpan.LowpanChannelInfo: int mMaxTransmitPower>;

        return $i0;
    }

    public java.lang.String getName()
    {
        android.net.lowpan.LowpanChannelInfo r0;
        java.lang.String $r1;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        $r1 = r0.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName>;

        return $r1;
    }

    public float getSpectrumBandwidth()
    {
        android.net.lowpan.LowpanChannelInfo r0;
        float $f0;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        $f0 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth>;

        return $f0;
    }

    public float getSpectrumCenterFrequency()
    {
        android.net.lowpan.LowpanChannelInfo r0;
        float $f0;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        $f0 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency>;

        return $f0;
    }

    public int hashCode()
    {
        android.net.lowpan.LowpanChannelInfo r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3, $r7;
        boolean $z0;
        java.lang.Boolean $r4;
        float $f0, $f1;
        java.lang.Float $r5, $r6;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        $r1 = newarray (java.lang.Object)[6];

        $r2 = r0.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName>;

        $r1[0] = $r2;

        $i0 = r0.<android.net.lowpan.LowpanChannelInfo: int mIndex>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r3;

        $z0 = r0.<android.net.lowpan.LowpanChannelInfo: boolean mIsMaskedByRegulatoryDomain>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[2] = $r4;

        $f0 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency>;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1[3] = $r5;

        $f1 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r1[4] = $r6;

        $i1 = r0.<android.net.lowpan.LowpanChannelInfo: int mMaxTransmitPower>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[5] = $r7;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    public boolean isMaskedByRegulatoryDomain()
    {
        android.net.lowpan.LowpanChannelInfo r0;
        boolean $z0;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        $z0 = r0.<android.net.lowpan.LowpanChannelInfo: boolean mIsMaskedByRegulatoryDomain>;

        return $z0;
    }

    public java.lang.String toString()
    {
        android.net.lowpan.LowpanChannelInfo r0;
        java.lang.String r2, $r6, $r28, $r30;
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i6, $i9;
        byte $b2, $b3, $b4, $b5, $b7, $b8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, f13;
        boolean $z0;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Channel ");

        $i0 = r0.<android.net.lowpan.LowpanChannelInfo: int mIndex>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        r2 = r0.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName>;

        if r2 == null goto label1;

        $i6 = r0.<android.net.lowpan.LowpanChannelInfo: int mIndex>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z0 != 0 goto label1;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r30 = r0.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

     label1:
        f12 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency>;

        $b7 = f12 cmpl 0.0F;

        if $b7 <= 0 goto label4;

        $b4 = f12 cmpl 1.0E9F;

        if $b4 <= 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", SpectrumCenterFrequency: ");

        $f10 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency>;

        $f11 = $f10 / 1.0E9F;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f11);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("GHz");

        goto label4;

     label2:
        $b5 = f12 cmpl 1000000.0F;

        if $b5 <= 0 goto label3;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", SpectrumCenterFrequency: ");

        $f8 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency>;

        $f9 = $f8 / 1000000.0F;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f9);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MHz");

        goto label4;

     label3:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", SpectrumCenterFrequency: ");

        $f6 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency>;

        $f7 = $f6 / 1000.0F;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f7);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("kHz");

     label4:
        f13 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth>;

        $b8 = f13 cmpl 0.0F;

        if $b8 <= 0 goto label7;

        $b2 = f13 cmpl 1.0E9F;

        if $b2 <= 0 goto label5;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", SpectrumBandwidth: ");

        $f4 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth>;

        $f5 = $f4 / 1.0E9F;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("GHz");

        goto label7;

     label5:
        $b3 = f13 cmpl 1000000.0F;

        if $b3 <= 0 goto label6;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", SpectrumBandwidth: ");

        $f2 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth>;

        $f3 = $f2 / 1000000.0F;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f3);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MHz");

        goto label7;

     label6:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", SpectrumBandwidth: ");

        $f0 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth>;

        $f1 = $f0 / 1000.0F;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f1);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("kHz");

     label7:
        $i9 = r0.<android.net.lowpan.LowpanChannelInfo: int mMaxTransmitPower>;

        if $i9 == 2147483647 goto label8;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", MaxTransmitPower: ");

        $i1 = r0.<android.net.lowpan.LowpanChannelInfo: int mMaxTransmitPower>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("dBm");

     label8:
        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.lowpan.LowpanChannelInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        java.lang.String $r2;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: android.net.lowpan.LowpanChannelInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.net.lowpan.LowpanChannelInfo: int mIndex>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<android.net.lowpan.LowpanChannelInfo: java.lang.String mName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $f0 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumCenterFrequency>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.net.lowpan.LowpanChannelInfo: float mSpectrumBandwidth>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $i2 = r0.<android.net.lowpan.LowpanChannelInfo: int mMaxTransmitPower>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $z0 = r0.<android.net.lowpan.LowpanChannelInfo: boolean mIsMaskedByRegulatoryDomain>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        return;
    }
}
