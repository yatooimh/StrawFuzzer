public class android.net.lowpan.LowpanInterface extends java.lang.Object
{
    public static final java.lang.String EMPTY_PARTITION_ID;
    public static final java.lang.String NETWORK_TYPE_THREAD_V1;
    public static final java.lang.String ROLE_COORDINATOR;
    public static final java.lang.String ROLE_DETACHED;
    public static final java.lang.String ROLE_END_DEVICE;
    public static final java.lang.String ROLE_LEADER;
    public static final java.lang.String ROLE_ROUTER;
    public static final java.lang.String ROLE_SLEEPY_END_DEVICE;
    public static final java.lang.String ROLE_SLEEPY_ROUTER;
    public static final java.lang.String STATE_ATTACHED;
    public static final java.lang.String STATE_ATTACHING;
    public static final java.lang.String STATE_COMMISSIONING;
    public static final java.lang.String STATE_FAULT;
    public static final java.lang.String STATE_OFFLINE;
    private static final java.lang.String TAG;
    private final android.net.lowpan.ILowpanInterface mBinder;
    private final java.util.HashMap mListenerMap;
    private final android.os.Looper mLooper;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.net.lowpan.LowpanInterface: java.lang.String STATE_OFFLINE> = "offline";

        <android.net.lowpan.LowpanInterface: java.lang.String STATE_FAULT> = "fault";

        <android.net.lowpan.LowpanInterface: java.lang.String STATE_COMMISSIONING> = "commissioning";

        <android.net.lowpan.LowpanInterface: java.lang.String STATE_ATTACHING> = "attaching";

        <android.net.lowpan.LowpanInterface: java.lang.String STATE_ATTACHED> = "attached";

        <android.net.lowpan.LowpanInterface: java.lang.String ROLE_SLEEPY_ROUTER> = "sleepy-router";

        <android.net.lowpan.LowpanInterface: java.lang.String ROLE_SLEEPY_END_DEVICE> = "sleepy-end-device";

        <android.net.lowpan.LowpanInterface: java.lang.String ROLE_ROUTER> = "router";

        <android.net.lowpan.LowpanInterface: java.lang.String ROLE_LEADER> = "leader";

        <android.net.lowpan.LowpanInterface: java.lang.String ROLE_END_DEVICE> = "end-device";

        <android.net.lowpan.LowpanInterface: java.lang.String ROLE_DETACHED> = "detached";

        <android.net.lowpan.LowpanInterface: java.lang.String ROLE_COORDINATOR> = "coordinator";

        <android.net.lowpan.LowpanInterface: java.lang.String NETWORK_TYPE_THREAD_V1> = "org.threadgroup.thread.v1";

        <android.net.lowpan.LowpanInterface: java.lang.String EMPTY_PARTITION_ID> = "";

        $r0 = class "Landroid/net/lowpan/LowpanInterface;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.net.lowpan.LowpanInterface: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.net.lowpan.ILowpanInterface, android.os.Looper)
    {
        android.net.lowpan.LowpanInterface r0;
        android.content.Context r1;
        android.net.lowpan.ILowpanInterface r2;
        android.os.Looper r3;
        java.util.HashMap $r4;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.lowpan.ILowpanInterface;

        r3 := @parameter2: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<android.net.lowpan.LowpanInterface: java.util.HashMap mListenerMap> = $r4;

        r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder> = r2;

        r0.<android.net.lowpan.LowpanInterface: android.os.Looper mLooper> = r3;

        return;
    }

    static android.os.Looper access$000(android.net.lowpan.LowpanInterface)
    {
        android.net.lowpan.LowpanInterface r0;
        android.os.Looper $r1;

        r0 := @parameter0: android.net.lowpan.LowpanInterface;

        $r1 = r0.<android.net.lowpan.LowpanInterface: android.os.Looper mLooper>;

        return $r1;
    }

    static java.lang.String access$100()
    {
        java.lang.String $r0;

        $r0 = <android.net.lowpan.LowpanInterface: java.lang.String TAG>;

        return $r0;
    }

    public void addExternalRoute(android.net.IpPrefix, int) throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        int i0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.ServiceSpecificException $r4;
        android.net.lowpan.LowpanException $r5;
        android.net.IpPrefix r6;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r6 := @parameter0: android.net.IpPrefix;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void addExternalRoute(android.net.IpPrefix,int)>(r6, i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r4);

        throw $r5;

     label4:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void addOnMeshPrefix(android.net.IpPrefix, int) throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        int i0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.ServiceSpecificException $r2;
        android.net.lowpan.LowpanException $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.net.IpPrefix r6;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r6 := @parameter0: android.net.IpPrefix;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void addOnMeshPrefix(android.net.IpPrefix,int)>(r6, i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r2);

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void attach(android.net.lowpan.LowpanProvision) throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.ServiceSpecificException $r4;
        android.net.lowpan.LowpanException $r5;
        android.net.lowpan.LowpanProvision r6;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r6 := @parameter0: android.net.lowpan.LowpanProvision;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void attach(android.net.lowpan.LowpanProvision)>(r6);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r4);

        throw $r5;

     label4:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public android.net.lowpan.LowpanScanner createScanner()
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.LowpanScanner $r1;
        android.net.lowpan.ILowpanInterface $r2;

        r0 := @this: android.net.lowpan.LowpanInterface;

        $r1 = new android.net.lowpan.LowpanScanner;

        $r2 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        specialinvoke $r1.<android.net.lowpan.LowpanScanner: void <init>(android.net.lowpan.ILowpanInterface)>($r2);

        return $r1;
    }

    public void form(android.net.lowpan.LowpanProvision) throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.ServiceSpecificException $r2;
        android.net.lowpan.LowpanException $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.net.lowpan.LowpanProvision r6;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r6 := @parameter0: android.net.lowpan.LowpanProvision;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void form(android.net.lowpan.LowpanProvision)>(r6);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r2);

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public android.net.LinkAddress[] getLinkAddresses() throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.LinkAddress[] r1;
        int i0, $i1, i2, i3;
        android.net.lowpan.ILowpanInterface $r2;
        android.net.LinkAddress $r3;
        java.lang.String $r4;
        android.os.ServiceSpecificException $r5;
        android.net.lowpan.LowpanException $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        java.lang.String[] r9;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label01:
        $r2 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        r9 = interfaceinvoke $r2.<android.net.lowpan.ILowpanInterface: java.lang.String[] getLinkAddresses()>();

        $i1 = lengthof r9;

        r1 = newarray (android.net.LinkAddress)[$i1];

     label02:
        i2 = 0;

     label03:
        i0 = lengthof r9;

     label04:
        i3 = 0;

     label05:
        if i3 >= i0 goto label08;

     label06:
        $r3 = new android.net.LinkAddress;

        $r4 = r9[i3];

        specialinvoke $r3.<android.net.LinkAddress: void <init>(java.lang.String)>($r4);

        r1[i2] = $r3;

     label07:
        i3 = i3 + 1;

        i2 = i2 + 1;

        goto label05;

     label08:
        return r1;

     label09:
        $r5 := @caughtexception;

        $r6 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r5);

        throw $r6;

     label10:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch android.os.ServiceSpecificException from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch android.os.ServiceSpecificException from label03 to label04 with label09;
        catch android.os.RemoteException from label06 to label07 with label10;
        catch android.os.ServiceSpecificException from label06 to label07 with label09;
    }

    public android.net.IpPrefix[] getLinkNetworks() throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.ServiceSpecificException $r4;
        android.net.lowpan.LowpanException $r5;
        android.net.IpPrefix[] r6;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        r6 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: android.net.IpPrefix[] getLinkNetworks()>();

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r4);

        throw $r5;

     label4:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public android.net.lowpan.LowpanCredential getLowpanCredential()
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.net.lowpan.LowpanCredential r4;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        r4 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: android.net.lowpan.LowpanCredential getLowpanCredential()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.net.lowpan.LowpanIdentity getLowpanIdentity()
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.DeadObjectException $r2;
        android.net.lowpan.LowpanIdentity $r3, r6;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        r6 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: android.net.lowpan.LowpanIdentity getLowpanIdentity()>();

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r5;

     label4:
        $r2 := @caughtexception;

        $r3 = new android.net.lowpan.LowpanIdentity;

        specialinvoke $r3.<android.net.lowpan.LowpanIdentity: void <init>()>();

        return $r3;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.DeadObjectException $r4;
        java.lang.String r5;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        r5 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: java.lang.String getName()>();

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        return "";

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getPartitionId()
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.DeadObjectException $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        r5 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: java.lang.String getPartitionId()>();

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r4;

     label4:
        $r2 := @caughtexception;

        return "";

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getRole()
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.DeadObjectException $r4;
        java.lang.String r5;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        r5 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: java.lang.String getRole()>();

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        return "detached";

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.net.lowpan.ILowpanInterface getService()
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;

        r0 := @this: android.net.lowpan.LowpanInterface;

        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        return $r1;
    }

    public java.lang.String getState()
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.DeadObjectException $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;
        java.lang.String r5;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        r5 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: java.lang.String getState()>();

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r4;

     label4:
        $r2 := @caughtexception;

        return "fault";

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.net.lowpan.LowpanChannelInfo[] getSupportedChannels() throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.ServiceSpecificException $r4;
        android.net.lowpan.LowpanException $r5;
        android.net.lowpan.LowpanChannelInfo[] r6;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        r6 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: android.net.lowpan.LowpanChannelInfo[] getSupportedChannels()>();

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r4);

        throw $r5;

     label4:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public java.lang.String[] getSupportedNetworkTypes() throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.ServiceSpecificException $r2;
        android.net.lowpan.LowpanException $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        java.lang.String[] r6;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        r6 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: java.lang.String[] getSupportedNetworkTypes()>();

     label2:
        return r6;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r2);

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public boolean isCommissioned()
    {
        android.net.lowpan.LowpanInterface r0;
        boolean z0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.DeadObjectException $r4;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        z0 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: boolean isCommissioned()>();

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isConnected()
    {
        android.net.lowpan.LowpanInterface r0;
        boolean z0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.DeadObjectException $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        z0 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: boolean isConnected()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r4;

     label4:
        $r2 := @caughtexception;

        return 0;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isEnabled()
    {
        android.net.lowpan.LowpanInterface r0;
        boolean z0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.DeadObjectException $r4;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        z0 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: boolean isEnabled()>();

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isUp()
    {
        android.net.lowpan.LowpanInterface r0;
        boolean z0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.DeadObjectException $r4;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        z0 = interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: boolean isUp()>();

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void join(android.net.lowpan.LowpanProvision) throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.ServiceSpecificException $r4;
        android.net.lowpan.LowpanException $r5;
        android.net.lowpan.LowpanProvision r6;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r6 := @parameter0: android.net.lowpan.LowpanProvision;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void join(android.net.lowpan.LowpanProvision)>(r6);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r4);

        throw $r5;

     label4:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void leave() throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.ServiceSpecificException $r2;
        android.net.lowpan.LowpanException $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void leave()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r2);

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void registerCallback(android.net.lowpan.LowpanInterface$Callback)
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.LowpanInterface$Callback r1;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r1 := @parameter0: android.net.lowpan.LowpanInterface$Callback;

        virtualinvoke r0.<android.net.lowpan.LowpanInterface: void registerCallback(android.net.lowpan.LowpanInterface$Callback,android.os.Handler)>(r1, null);

        return;
    }

    public void registerCallback(android.net.lowpan.LowpanInterface$Callback, android.os.Handler)
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.LowpanInterface$1 $r2;
        android.net.lowpan.ILowpanInterface $r3;
        java.util.HashMap $r4, r12;
        int $i0;
        java.lang.Integer $r5;
        java.lang.Throwable $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        android.net.lowpan.LowpanInterface$Callback r10;
        android.os.Handler r11;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r10 := @parameter0: android.net.lowpan.LowpanInterface$Callback;

        r11 := @parameter1: android.os.Handler;

        $r2 = new android.net.lowpan.LowpanInterface$1;

        specialinvoke $r2.<android.net.lowpan.LowpanInterface$1: void <init>(android.net.lowpan.LowpanInterface,android.os.Handler,android.net.lowpan.LowpanInterface$Callback)>(r0, r11, r10);

     label1:
        $r3 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r3.<android.net.lowpan.ILowpanInterface: void addListener(android.net.lowpan.ILowpanInterfaceListener)>($r2);

     label2:
        r12 = r0.<android.net.lowpan.LowpanInterface: java.util.HashMap mListenerMap>;

        entermonitor r12;

     label3:
        $r4 = r0.<android.net.lowpan.LowpanInterface: java.util.HashMap mListenerMap>;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r10);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r2);

        exitmonitor r12;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r12;

     label7:
        throw $r7;

     label8:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void removeExternalRoute(android.net.IpPrefix)
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.ServiceSpecificException $r2;
        java.lang.String $r3, $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.net.IpPrefix r7;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r7 := @parameter0: android.net.IpPrefix;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void removeExternalRoute(android.net.IpPrefix)>(r7);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <android.net.lowpan.LowpanInterface: java.lang.String TAG>;

        $r4 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r4);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void removeOnMeshPrefix(android.net.IpPrefix)
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.ServiceSpecificException $r2;
        java.lang.String $r3, $r4;
        android.os.RemoteException $r5;
        java.lang.RuntimeException $r6;
        android.net.IpPrefix r7;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r7 := @parameter0: android.net.IpPrefix;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void removeOnMeshPrefix(android.net.IpPrefix)>(r7);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <android.net.lowpan.LowpanInterface: java.lang.String TAG>;

        $r4 = virtualinvoke $r2.<android.os.ServiceSpecificException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r4);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void reset() throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.ServiceSpecificException $r2;
        android.net.lowpan.LowpanException $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: android.net.lowpan.LowpanInterface;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void reset()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r2);

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void setEnabled(boolean) throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        boolean z0;
        android.net.lowpan.ILowpanInterface $r1;
        android.os.RemoteException $r2;
        java.lang.RuntimeException $r3;
        android.os.ServiceSpecificException $r4;
        android.net.lowpan.LowpanException $r5;

        r0 := @this: android.net.lowpan.LowpanInterface;

        z0 := @parameter0: boolean;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void setEnabled(boolean)>(z0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r4);

        throw $r5;

     label4:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public android.net.lowpan.LowpanCommissioningSession startCommissioningSession(android.net.lowpan.LowpanBeaconInfo) throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanInterface r0;
        android.net.lowpan.ILowpanInterface $r1, $r4;
        android.net.lowpan.LowpanCommissioningSession $r2;
        android.os.Looper $r3;
        android.os.ServiceSpecificException $r5;
        android.net.lowpan.LowpanException $r6;
        android.os.RemoteException $r7;
        java.lang.RuntimeException $r8;
        android.net.lowpan.LowpanBeaconInfo r9;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r9 := @parameter0: android.net.lowpan.LowpanBeaconInfo;

     label1:
        $r1 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r1.<android.net.lowpan.ILowpanInterface: void startCommissioningSession(android.net.lowpan.LowpanBeaconInfo)>(r9);

        $r2 = new android.net.lowpan.LowpanCommissioningSession;

        $r4 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        $r3 = r0.<android.net.lowpan.LowpanInterface: android.os.Looper mLooper>;

        specialinvoke $r2.<android.net.lowpan.LowpanCommissioningSession: void <init>(android.net.lowpan.ILowpanInterface,android.net.lowpan.LowpanBeaconInfo,android.os.Looper)>($r4, r9, $r3);

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        $r6 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r5);

        throw $r6;

     label4:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void unregisterCallback(android.net.lowpan.LowpanInterface$Callback)
    {
        android.net.lowpan.LowpanInterface r0;
        int i0;
        java.util.HashMap $r1, $r4, r13;
        java.lang.Integer $r2, $r5;
        java.lang.Object $r3;
        android.net.lowpan.ILowpanInterface $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        android.os.DeadObjectException $r10;
        java.lang.Throwable $r11;
        android.net.lowpan.LowpanInterface$Callback r12;
        android.net.lowpan.ILowpanInterfaceListener r14;

        r0 := @this: android.net.lowpan.LowpanInterface;

        r12 := @parameter0: android.net.lowpan.LowpanInterface$Callback;

        i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r12);

        r13 = r0.<android.net.lowpan.LowpanInterface: java.util.HashMap mListenerMap>;

        entermonitor r13;

     label01:
        $r1 = r0.<android.net.lowpan.LowpanInterface: java.util.HashMap mListenerMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r14 = (android.net.lowpan.ILowpanInterfaceListener) $r3;

     label02:
        if r14 == null goto label09;

     label03:
        $r4 = r0.<android.net.lowpan.LowpanInterface: java.util.HashMap mListenerMap>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

     label04:
        $r7 = r0.<android.net.lowpan.LowpanInterface: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r7.<android.net.lowpan.ILowpanInterface: void removeListener(android.net.lowpan.ILowpanInterfaceListener)>(r14);

     label05:
        goto label09;

     label06:
        $r8 := @caughtexception;

     label07:
        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r9;

     label08:
        $r10 := @caughtexception;

     label09:
        exitmonitor r13;

     label10:
        return;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r13;

     label13:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch android.os.DeadObjectException from label04 to label05 with label08;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }
}
