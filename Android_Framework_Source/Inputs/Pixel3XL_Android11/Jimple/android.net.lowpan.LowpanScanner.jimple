public class android.net.lowpan.LowpanScanner extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.net.lowpan.ILowpanInterface mBinder;
    private android.net.lowpan.LowpanScanner$Callback mCallback;
    private java.util.ArrayList mChannelMask;
    private android.os.Handler mHandler;
    private int mTxPower;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroid/net/lowpan/LowpanScanner;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.net.lowpan.LowpanScanner: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(android.net.lowpan.ILowpanInterface)
    {
        android.net.lowpan.LowpanScanner r0;
        android.net.lowpan.ILowpanInterface r1;

        r0 := @this: android.net.lowpan.LowpanScanner;

        r1 := @parameter0: android.net.lowpan.ILowpanInterface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.lowpan.LowpanScanner: android.net.lowpan.LowpanScanner$Callback mCallback> = null;

        r0.<android.net.lowpan.LowpanScanner: android.os.Handler mHandler> = null;

        r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask> = null;

        r0.<android.net.lowpan.LowpanScanner: int mTxPower> = 2147483647;

        r0.<android.net.lowpan.LowpanScanner: android.net.lowpan.ILowpanInterface mBinder> = r1;

        return;
    }

    static android.net.lowpan.LowpanScanner$Callback access$000(android.net.lowpan.LowpanScanner)
    {
        android.net.lowpan.LowpanScanner r0;
        android.net.lowpan.LowpanScanner$Callback $r1;

        r0 := @parameter0: android.net.lowpan.LowpanScanner;

        $r1 = r0.<android.net.lowpan.LowpanScanner: android.net.lowpan.LowpanScanner$Callback mCallback>;

        return $r1;
    }

    static android.os.Handler access$100(android.net.lowpan.LowpanScanner)
    {
        android.net.lowpan.LowpanScanner r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.net.lowpan.LowpanScanner;

        $r1 = r0.<android.net.lowpan.LowpanScanner: android.os.Handler mHandler>;

        return $r1;
    }

    private java.util.Map createScanOptionMap()
    {
        android.net.lowpan.LowpanScanner r0;
        java.util.ArrayList $r3, $r6;
        int $i0, $i1;
        android.net.lowpan.LowpanProperty $r4, $r7;
        java.lang.Integer $r5;
        java.util.stream.Stream $r8;
        android.net.lowpan.'-$$Lambda$LowpanScanner$b0nnjTe02JXonssLsm5Kp4EaFqs' $r9;
        java.util.stream.IntStream $r10;
        int[] $r11;
        java.util.HashMap r12;
        java.util.function.ToIntFunction r13;

        r0 := @this: android.net.lowpan.LowpanScanner;

        r12 = new java.util.HashMap;

        specialinvoke r12.<java.util.HashMap: void <init>()>();

        $r3 = r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask>;

        if $r3 == null goto label1;

        $r7 = <android.net.lowpan.LowpanProperties: android.net.lowpan.LowpanProperty KEY_CHANNEL_MASK>;

        $r6 = r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask>;

        $r8 = virtualinvoke $r6.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r9 = <android.net.lowpan._$$Lambda$LowpanScanner$b0nnjTe02JXonssLsm5Kp4EaFqs: android.net.lowpan.'-$$Lambda$LowpanScanner$b0nnjTe02JXonssLsm5Kp4EaFqs' INSTANCE>;

        r13 = (java.util.function.ToIntFunction) $r9;

        $r10 = interfaceinvoke $r8.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r13);

        $r11 = interfaceinvoke $r10.<java.util.stream.IntStream: int[] toArray()>();

        virtualinvoke $r7.<android.net.lowpan.LowpanProperty: void putInMap(java.util.Map,java.lang.Object)>(r12, $r11);

     label1:
        $i0 = r0.<android.net.lowpan.LowpanScanner: int mTxPower>;

        if $i0 == 2147483647 goto label2;

        $r4 = <android.net.lowpan.LowpanProperties: android.net.lowpan.LowpanProperty KEY_MAX_TX_POWER>;

        $i1 = r0.<android.net.lowpan.LowpanScanner: int mTxPower>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r4.<android.net.lowpan.LowpanProperty: void putInMap(java.util.Map,java.lang.Object)>(r12, $r5);

     label2:
        return r12;
    }

    static int lambda$createScanOptionMap$0(java.lang.Integer)
    {
        java.lang.Integer r0;
        int $i0;

        r0 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void addChannel(int)
    {
        android.net.lowpan.LowpanScanner r0;
        int i0;
        java.util.ArrayList $r1, $r2, $r4;
        java.lang.Integer $r3;

        r0 := @this: android.net.lowpan.LowpanScanner;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask> = $r4;

     label1:
        $r2 = r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return;
    }

    public java.util.Collection getChannelMask()
    {
        android.net.lowpan.LowpanScanner r0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        java.util.Collection $r3;

        r0 := @this: android.net.lowpan.LowpanScanner;

        $r1 = r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object clone()>();

        $r3 = (java.util.Collection) $r2;

        return $r3;
    }

    public int getTxPower()
    {
        android.net.lowpan.LowpanScanner r0;
        int $i0;

        r0 := @this: android.net.lowpan.LowpanScanner;

        $i0 = r0.<android.net.lowpan.LowpanScanner: int mTxPower>;

        return $i0;
    }

    public void setCallback(android.net.lowpan.LowpanScanner$Callback)
    {
        android.net.lowpan.LowpanScanner r0;
        android.net.lowpan.LowpanScanner$Callback r1;

        r0 := @this: android.net.lowpan.LowpanScanner;

        r1 := @parameter0: android.net.lowpan.LowpanScanner$Callback;

        virtualinvoke r0.<android.net.lowpan.LowpanScanner: void setCallback(android.net.lowpan.LowpanScanner$Callback,android.os.Handler)>(r1, null);

        return;
    }

    public void setCallback(android.net.lowpan.LowpanScanner$Callback, android.os.Handler)
    {
        android.net.lowpan.LowpanScanner r0;
        android.os.Handler r1;
        java.lang.Throwable $r2;
        android.net.lowpan.LowpanScanner$Callback r3;

        r0 := @this: android.net.lowpan.LowpanScanner;

        r3 := @parameter0: android.net.lowpan.LowpanScanner$Callback;

        r1 := @parameter1: android.os.Handler;

        entermonitor r0;

     label1:
        r0.<android.net.lowpan.LowpanScanner: android.net.lowpan.LowpanScanner$Callback mCallback> = r3;

        r0.<android.net.lowpan.LowpanScanner: android.os.Handler mHandler> = r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setChannelMask(java.util.Collection)
    {
        android.net.lowpan.LowpanScanner r0;
        java.util.Collection r1;
        java.util.ArrayList r2, $r3, $r4;

        r0 := @this: android.net.lowpan.LowpanScanner;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label1;

        r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask> = null;

        goto label4;

     label1:
        r2 = r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask>;

        if r2 != null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask> = $r4;

        goto label3;

     label2:
        virtualinvoke r2.<java.util.ArrayList: void clear()>();

     label3:
        $r3 = r0.<android.net.lowpan.LowpanScanner: java.util.ArrayList mChannelMask>;

        virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r1);

     label4:
        return;
    }

    public void setTxPower(int)
    {
        android.net.lowpan.LowpanScanner r0;
        int i0;

        r0 := @this: android.net.lowpan.LowpanScanner;

        i0 := @parameter0: int;

        r0.<android.net.lowpan.LowpanScanner: int mTxPower> = i0;

        return;
    }

    public void startEnergyScan() throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanScanner r0;
        java.util.Map r1;
        android.net.lowpan.LowpanScanner$2 $r2;
        android.net.lowpan.ILowpanInterface $r3;
        android.os.ServiceSpecificException $r4;
        android.net.lowpan.LowpanException $r5;
        android.os.RemoteException $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: android.net.lowpan.LowpanScanner;

        r1 = specialinvoke r0.<android.net.lowpan.LowpanScanner: java.util.Map createScanOptionMap()>();

        $r2 = new android.net.lowpan.LowpanScanner$2;

        specialinvoke $r2.<android.net.lowpan.LowpanScanner$2: void <init>(android.net.lowpan.LowpanScanner)>(r0);

     label1:
        $r3 = r0.<android.net.lowpan.LowpanScanner: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r3.<android.net.lowpan.ILowpanInterface: void startEnergyScan(java.util.Map,android.net.lowpan.ILowpanEnergyScanCallback)>(r1, $r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r4);

        throw $r5;

     label4:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void startNetScan() throws android.net.lowpan.LowpanException
    {
        android.net.lowpan.LowpanScanner r0;
        java.util.Map r1;
        android.net.lowpan.LowpanScanner$1 $r2;
        android.net.lowpan.ILowpanInterface $r3;
        android.os.RemoteException $r4;
        java.lang.RuntimeException $r5;
        android.os.ServiceSpecificException $r6;
        android.net.lowpan.LowpanException $r7;

        r0 := @this: android.net.lowpan.LowpanScanner;

        r1 = specialinvoke r0.<android.net.lowpan.LowpanScanner: java.util.Map createScanOptionMap()>();

        $r2 = new android.net.lowpan.LowpanScanner$1;

        specialinvoke $r2.<android.net.lowpan.LowpanScanner$1: void <init>(android.net.lowpan.LowpanScanner)>(r0);

     label1:
        $r3 = r0.<android.net.lowpan.LowpanScanner: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r3.<android.net.lowpan.ILowpanInterface: void startNetScan(java.util.Map,android.net.lowpan.ILowpanNetScanCallback)>(r1, $r2);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <android.net.lowpan.LowpanException: android.net.lowpan.LowpanException rethrowFromServiceSpecificException(android.os.ServiceSpecificException)>($r6);

        throw $r7;

     label4:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.ServiceSpecificException from label1 to label2 with label3;
    }

    public void stopEnergyScan()
    {
        android.net.lowpan.LowpanScanner r0;
        android.net.lowpan.ILowpanInterface $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.net.lowpan.LowpanScanner;

     label1:
        $r2 = r0.<android.net.lowpan.LowpanScanner: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r2.<android.net.lowpan.ILowpanInterface: void stopEnergyScan()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stopNetScan()
    {
        android.net.lowpan.LowpanScanner r0;
        android.net.lowpan.ILowpanInterface $r2;
        android.os.RemoteException $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.net.lowpan.LowpanScanner;

     label1:
        $r2 = r0.<android.net.lowpan.LowpanScanner: android.net.lowpan.ILowpanInterface mBinder>;

        interfaceinvoke $r2.<android.net.lowpan.ILowpanInterface: void stopNetScan()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
