class android.net.metrics.INetdEventListener$Stub$Proxy extends java.lang.Object implements android.net.metrics.INetdEventListener
{
    public static android.net.metrics.INetdEventListener sDefaultImpl;
    private java.lang.String mCachedHash;
    private int mCachedVersion;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.metrics.INetdEventListener$Stub$Proxy: int mCachedVersion> = -1;

        r0.<android.net.metrics.INetdEventListener$Stub$Proxy: java.lang.String mCachedHash> = "-1";

        r0.<android.net.metrics.INetdEventListener$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        $r1 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        java.lang.String $r1;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        $r1 = staticinvoke <android.net.metrics.INetdEventListener$Stub: java.lang.String access$000()>();

        return $r1;
    }

    public java.lang.String getInterfaceHash() throws android.os.RemoteException
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        android.os.Parcel r1, r11;
        java.lang.String $r2, $r3, $r4, $r6, r12, r14;
        boolean $z0, $z1;
        android.os.IBinder $r5;
        android.net.metrics.INetdEventListener $r7, $r8;
        java.lang.Throwable $r9, $r10;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        entermonitor r0;

     label01:
        $r3 = "-1";

        $r2 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: java.lang.String mCachedHash>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label10;

        r11 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label02:
        $r4 = staticinvoke <android.net.metrics.INetdEventListener$Stub: java.lang.String access$000()>();

        virtualinvoke r11.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        $r5 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16777214, r11, r1, 0);

        if $z1 != 0 goto label05;

        $r7 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        if $r7 == null goto label05;

        $r8 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        r12 = interfaceinvoke $r8.<android.net.metrics.INetdEventListener: java.lang.String getInterfaceHash()>();

     label03:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

     label04:
        exitmonitor r0;

        return r12;

     label05:
        virtualinvoke r1.<android.os.Parcel: void readException()>();

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.net.metrics.INetdEventListener$Stub$Proxy: java.lang.String mCachedHash> = $r6;

     label06:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

     label09:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

        throw $r9;

     label10:
        r14 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: java.lang.String mCachedHash>;

     label11:
        exitmonitor r0;

        return r14;

     label12:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public int getInterfaceVersion() throws android.os.RemoteException
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0, $i1, $i2, $i3;
        java.lang.String $r4;
        android.os.IBinder $r5;
        boolean $z0;
        android.net.metrics.INetdEventListener $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        $i1 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: int mCachedVersion>;

        if $i1 != -1 goto label6;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r4 = staticinvoke <android.net.metrics.INetdEventListener$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r4);

        $r5 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16777215, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        i0 = interfaceinvoke $r7.<android.net.metrics.INetdEventListener: int getInterfaceVersion()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<android.net.metrics.INetdEventListener$Stub$Proxy: int mCachedVersion> = $i3;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

     label6:
        $i2 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: int mCachedVersion>;

        return $i2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onConnectEvent(int, int, int, java.lang.String, int, int) throws android.os.RemoteException
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        int i0, i1, i2, i3, i4;
        android.os.Parcel r1;
        java.lang.String $r2, r14;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.metrics.INetdEventListener $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, r15;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r14 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r2 = staticinvoke <android.net.metrics.INetdEventListener$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r2);

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r14);

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

     label08:
        $r3 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

        if $z0 != 0 goto label10;

        $r4 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        if $r4 == null goto label10;

        $r5 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.metrics.INetdEventListener: void onConnectEvent(int,int,int,java.lang.String,int,int)>(i0, i1, i2, r14, i3, i4);

     label09:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label11:
        $r10 := @caughtexception;

        r15 = $r10;

        goto label19;

     label12:
        $r12 := @caughtexception;

        r15 = $r12;

        goto label19;

     label13:
        $r9 := @caughtexception;

        r15 = $r9;

        goto label19;

     label14:
        $r6 := @caughtexception;

        r15 = $r6;

        goto label19;

     label15:
        $r11 := @caughtexception;

        r15 = $r11;

        goto label19;

     label16:
        $r13 := @caughtexception;

        r15 = $r13;

        goto label19;

     label17:
        $r7 := @caughtexception;

        r15 = $r7;

        goto label19;

     label18:
        $r8 := @caughtexception;

        r15 = $r8;

     label19:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r15;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label11;
    }

    public void onDnsEvent(int, int, int, int, java.lang.String, java.lang.String[], int, int) throws android.os.RemoteException
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String[] r1;
        android.os.Parcel r2;
        java.lang.String $r3, r13;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.metrics.INetdEventListener $r5, $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, $r12, r14;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r13 := @parameter4: java.lang.String;

        r1 := @parameter5: java.lang.String[];

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        $r3 = staticinvoke <android.net.metrics.INetdEventListener$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r13);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i5);

        $r4 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, null, 1);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.metrics.INetdEventListener: void onDnsEvent(int,int,int,int,java.lang.String,java.lang.String[],int,int)>(i0, i1, i2, i3, r13, r1, i4, i5);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label09:
        $r11 := @caughtexception;

        r14 = $r11;

        goto label15;

     label10:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label15;

     label11:
        $r12 := @caughtexception;

        r14 = $r12;

        goto label15;

     label12:
        $r7 := @caughtexception;

        r14 = $r7;

        goto label15;

     label13:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label15;

     label14:
        $r9 := @caughtexception;

        r14 = $r9;

     label15:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r14;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    public void onNat64PrefixEvent(int, boolean, java.lang.String, int) throws android.os.RemoteException
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        int i0, i1;
        boolean z0, $z1;
        android.os.Parcel r1;
        java.lang.String $r2, r7;
        android.os.IBinder $r3;
        android.net.metrics.INetdEventListener $r4, $r5;
        java.lang.Throwable $r6;
        byte b2;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r7 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r2 = staticinvoke <android.net.metrics.INetdEventListener$Stub: java.lang.String access$000()>();

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        b2 = 1;

        goto label4;

     label3:
        b2 = 0;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z1 != 0 goto label6;

        $r4 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        if $r4 == null goto label6;

        $r5 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.metrics.INetdEventListener: void onNat64PrefixEvent(int,boolean,java.lang.String,int)>(i0, z0, r7, i1);

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void onPrivateDnsValidationEvent(int, java.lang.String, java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        int i0;
        java.lang.String r1, $r3, r8;
        boolean z0, $z1;
        android.os.Parcel r2;
        android.os.IBinder $r4;
        android.net.metrics.INetdEventListener $r5, $r6;
        java.lang.Throwable $r7;
        byte b1;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r3 = staticinvoke <android.net.metrics.INetdEventListener$Stub: java.lang.String access$000()>();

        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r3);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        if z0 == 0 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 0;

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, null, 1);

        if $z1 != 0 goto label6;

        $r5 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        if $r5 == null goto label6;

        $r6 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.metrics.INetdEventListener: void onPrivateDnsValidationEvent(int,java.lang.String,java.lang.String,boolean)>(i0, r8, r1, z0);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label7:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void onTcpSocketStatsEvent(int[], int[], int[], int[], int[]) throws android.os.RemoteException
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        int[] r1, r2, r3, r4, r11;
        android.os.Parcel r5;
        java.lang.String $r6;
        android.os.IBinder $r7;
        boolean $z0;
        android.net.metrics.INetdEventListener $r8, $r9;
        java.lang.Throwable $r10;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        r11 := @parameter0: int[];

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r6 = staticinvoke <android.net.metrics.INetdEventListener$Stub: java.lang.String access$000()>();

        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r6);

        virtualinvoke r5.<android.os.Parcel: void writeIntArray(int[])>(r11);

        virtualinvoke r5.<android.os.Parcel: void writeIntArray(int[])>(r1);

        virtualinvoke r5.<android.os.Parcel: void writeIntArray(int[])>(r2);

        virtualinvoke r5.<android.os.Parcel: void writeIntArray(int[])>(r3);

        virtualinvoke r5.<android.os.Parcel: void writeIntArray(int[])>(r4);

        $r7 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r5, null, 1);

        if $z0 != 0 goto label3;

        $r8 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        if $r8 == null goto label3;

        $r9 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        interfaceinvoke $r9.<android.net.metrics.INetdEventListener: void onTcpSocketStatsEvent(int[],int[],int[],int[],int[])>(r11, r1, r2, r3, r4);

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r10 := @caughtexception;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void onWakeupEvent(java.lang.String, int, int, int, byte[], java.lang.String, java.lang.String, int, int, long) throws android.os.RemoteException
    {
        android.net.metrics.INetdEventListener$Stub$Proxy r0;
        int i0, i1, i2, i3, i4;
        byte[] r1;
        java.lang.String r2, r3, $r5, r12;
        long l5;
        android.os.Parcel r4;
        android.os.IBinder $r6;
        boolean $z0;
        android.net.metrics.INetdEventListener $r7, $r8;
        java.lang.Throwable $r9, $r10, $r11, r13;

        r0 := @this: android.net.metrics.INetdEventListener$Stub$Proxy;

        r12 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: byte[];

        r2 := @parameter5: java.lang.String;

        r3 := @parameter6: java.lang.String;

        i3 := @parameter7: int;

        i4 := @parameter8: int;

        l5 := @parameter9: long;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        $r5 = staticinvoke <android.net.metrics.INetdEventListener$Stub: java.lang.String access$000()>();

        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r5);

     label2:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r12);

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r4.<android.os.Parcel: void writeByteArray(byte[])>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r4.<android.os.Parcel: void writeLong(long)>(l5);

        $r6 = r0.<android.net.metrics.INetdEventListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r4, null, 1);

        if $z0 != 0 goto label5;

        $r7 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        if $r7 == null goto label5;

        $r8 = staticinvoke <android.net.metrics.INetdEventListener$Stub: android.net.metrics.INetdEventListener getDefaultImpl()>();

        interfaceinvoke $r8.<android.net.metrics.INetdEventListener: void onWakeupEvent(java.lang.String,int,int,int,byte[],java.lang.String,java.lang.String,int,int,long)>(r12, i0, i1, i2, r1, r2, r3, i3, i4, l5);

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $r10 := @caughtexception;

        r13 = $r10;

        goto label9;

     label7:
        $r9 := @caughtexception;

        r13 = $r9;

        goto label9;

     label8:
        $r11 := @caughtexception;

        r13 = $r11;

     label9:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r13;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label6;
    }
}
