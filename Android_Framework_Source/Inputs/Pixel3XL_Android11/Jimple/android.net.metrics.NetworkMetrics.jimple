public class android.net.metrics.NetworkMetrics extends java.lang.Object
{
    private static final int CONNECT_LATENCY_MAXIMUM_RECORDS;
    private static final int INITIAL_DNS_BATCH_SIZE;
    public final android.net.metrics.ConnectStats connectMetrics;
    public final android.net.metrics.DnsEvent dnsMetrics;
    public final int netId;
    public android.net.metrics.NetworkMetrics$Summary pendingSummary;
    public final android.net.metrics.NetworkMetrics$Summary summary;
    public final long transports;

    public void <init>(int, long, com.android.internal.util.TokenBucket)
    {
        android.net.metrics.NetworkMetrics r0;
        int i0;
        long l1;
        com.android.internal.util.TokenBucket r1;
        android.net.metrics.ConnectStats $r2;
        android.net.metrics.DnsEvent $r3;
        android.net.metrics.NetworkMetrics$Summary $r4;

        r0 := @this: android.net.metrics.NetworkMetrics;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: com.android.internal.util.TokenBucket;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.metrics.NetworkMetrics: int netId> = i0;

        r0.<android.net.metrics.NetworkMetrics: long transports> = l1;

        $r2 = new android.net.metrics.ConnectStats;

        specialinvoke $r2.<android.net.metrics.ConnectStats: void <init>(int,long,com.android.internal.util.TokenBucket,int)>(i0, l1, r1, 20000);

        r0.<android.net.metrics.NetworkMetrics: android.net.metrics.ConnectStats connectMetrics> = $r2;

        $r3 = new android.net.metrics.DnsEvent;

        specialinvoke $r3.<android.net.metrics.DnsEvent: void <init>(int,long,int)>(i0, l1, 100);

        r0.<android.net.metrics.NetworkMetrics: android.net.metrics.DnsEvent dnsMetrics> = $r3;

        $r4 = new android.net.metrics.NetworkMetrics$Summary;

        specialinvoke $r4.<android.net.metrics.NetworkMetrics$Summary: void <init>(int,long)>(i0, l1);

        r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary summary> = $r4;

        return;
    }

    public void addConnectResult(int, int, java.lang.String)
    {
        android.net.metrics.NetworkMetrics r0;
        int i0, i1, $i3;
        boolean z0, $z1;
        android.net.metrics.NetworkMetrics$Summary $r1, $r3, $r4, $r6;
        android.net.metrics.ConnectStats $r2;
        double $d0, d1;
        android.net.metrics.NetworkMetrics$Metrics $r5, r8;
        long $l2;
        java.lang.String r7;

        r0 := @this: android.net.metrics.NetworkMetrics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        $r1 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        if $r1 != null goto label1;

        $r6 = new android.net.metrics.NetworkMetrics$Summary;

        $i3 = r0.<android.net.metrics.NetworkMetrics: int netId>;

        $l2 = r0.<android.net.metrics.NetworkMetrics: long transports>;

        specialinvoke $r6.<android.net.metrics.NetworkMetrics$Summary: void <init>(int,long)>($i3, $l2);

        r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary> = $r6;

     label1:
        $r2 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.ConnectStats connectMetrics>;

        z0 = virtualinvoke $r2.<android.net.metrics.ConnectStats: boolean addEvent(int,int,java.lang.String)>(i0, i1, r7);

        $r3 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        r8 = $r3.<android.net.metrics.NetworkMetrics$Summary: android.net.metrics.NetworkMetrics$Metrics connectErrorRate>;

        if z0 == 0 goto label2;

        d1 = 0.0;

        goto label3;

     label2:
        d1 = 1.0;

     label3:
        virtualinvoke r8.<android.net.metrics.NetworkMetrics$Metrics: void count(double)>(d1);

        $z1 = staticinvoke <android.net.metrics.ConnectStats: boolean isNonBlocking(int)>(i0);

        if $z1 == 0 goto label4;

        $r4 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        $r5 = $r4.<android.net.metrics.NetworkMetrics$Summary: android.net.metrics.NetworkMetrics$Metrics connectLatencies>;

        $d0 = (double) i1;

        virtualinvoke $r5.<android.net.metrics.NetworkMetrics$Metrics: void count(double)>($d0);

     label4:
        return;
    }

    public void addDnsResult(int, int, int)
    {
        android.net.metrics.NetworkMetrics r0;
        int i0, i1, i2, $i6;
        boolean z0;
        android.net.metrics.NetworkMetrics$Metrics r1, $r5;
        android.net.metrics.NetworkMetrics$Summary $r2, $r4, $r6, $r7;
        byte $b3, $b4;
        android.net.metrics.DnsEvent $r3;
        double $d0, d1;
        long $l5;

        r0 := @this: android.net.metrics.NetworkMetrics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        if $r2 != null goto label1;

        $r7 = new android.net.metrics.NetworkMetrics$Summary;

        $i6 = r0.<android.net.metrics.NetworkMetrics: int netId>;

        $l5 = r0.<android.net.metrics.NetworkMetrics: long transports>;

        specialinvoke $r7.<android.net.metrics.NetworkMetrics$Summary: void <init>(int,long)>($i6, $l5);

        r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary> = $r7;

     label1:
        $r3 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.DnsEvent dnsMetrics>;

        $b4 = (byte) i0;

        $b3 = (byte) i1;

        z0 = virtualinvoke $r3.<android.net.metrics.DnsEvent: boolean addResult(byte,byte,int)>($b4, $b3, i2);

        $r4 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        $r5 = $r4.<android.net.metrics.NetworkMetrics$Summary: android.net.metrics.NetworkMetrics$Metrics dnsLatencies>;

        $d0 = (double) i2;

        virtualinvoke $r5.<android.net.metrics.NetworkMetrics$Metrics: void count(double)>($d0);

        $r6 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        r1 = $r6.<android.net.metrics.NetworkMetrics$Summary: android.net.metrics.NetworkMetrics$Metrics dnsErrorRate>;

        if z0 == 0 goto label2;

        d1 = 0.0;

        goto label3;

     label2:
        d1 = 1.0;

     label3:
        virtualinvoke r1.<android.net.metrics.NetworkMetrics$Metrics: void count(double)>(d1);

        return;
    }

    public void addTcpStatsResult(int, int, int, int)
    {
        android.net.metrics.NetworkMetrics r0;
        int i0, i1, i2, i3, $i5;
        android.net.metrics.NetworkMetrics$Summary $r1, $r2, $r4, $r6, $r8;
        double $d0, $d1, $d2;
        android.net.metrics.NetworkMetrics$Metrics $r3, $r5, $r7;
        long $l4;

        r0 := @this: android.net.metrics.NetworkMetrics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        if $r1 != null goto label1;

        $r8 = new android.net.metrics.NetworkMetrics$Summary;

        $i5 = r0.<android.net.metrics.NetworkMetrics: int netId>;

        $l4 = r0.<android.net.metrics.NetworkMetrics: long transports>;

        specialinvoke $r8.<android.net.metrics.NetworkMetrics$Summary: void <init>(int,long)>($i5, $l4);

        r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary> = $r8;

     label1:
        $r2 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        $r3 = $r2.<android.net.metrics.NetworkMetrics$Summary: android.net.metrics.NetworkMetrics$Metrics tcpLossRate>;

        $d0 = (double) i1;

        virtualinvoke $r3.<android.net.metrics.NetworkMetrics$Metrics: void count(double,int)>($d0, i0);

        $r4 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        $r5 = $r4.<android.net.metrics.NetworkMetrics$Summary: android.net.metrics.NetworkMetrics$Metrics roundTripTimeUs>;

        $d1 = (double) i2;

        virtualinvoke $r5.<android.net.metrics.NetworkMetrics$Metrics: void count(double)>($d1);

        $r6 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        $r7 = $r6.<android.net.metrics.NetworkMetrics$Summary: android.net.metrics.NetworkMetrics$Metrics sentAckTimeDiffenceMs>;

        $d2 = (double) i3;

        virtualinvoke $r7.<android.net.metrics.NetworkMetrics$Metrics: void count(double)>($d2);

        return;
    }

    public android.net.metrics.NetworkMetrics$Summary getPendingStats()
    {
        android.net.metrics.NetworkMetrics r0;
        android.net.metrics.NetworkMetrics$Summary r1, $r2;

        r0 := @this: android.net.metrics.NetworkMetrics;

        r1 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary>;

        r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary pendingSummary> = null;

        if r1 == null goto label1;

        $r2 = r0.<android.net.metrics.NetworkMetrics: android.net.metrics.NetworkMetrics$Summary summary>;

        virtualinvoke $r2.<android.net.metrics.NetworkMetrics$Summary: void merge(android.net.metrics.NetworkMetrics$Summary)>(r1);

     label1:
        return r1;
    }

    public static void <clinit>()
    {
        <android.net.metrics.NetworkMetrics: int INITIAL_DNS_BATCH_SIZE> = 100;

        <android.net.metrics.NetworkMetrics: int CONNECT_LATENCY_MAXIMUM_RECORDS> = 20000;

        return;
    }
}
