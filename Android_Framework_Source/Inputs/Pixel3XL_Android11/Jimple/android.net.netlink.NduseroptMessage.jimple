public class android.net.netlink.NduseroptMessage extends android.net.netlink.NetlinkMessage
{
    static final int NDUSEROPT_SRCADDR;
    public static final int STRUCT_SIZE;
    public final byte family;
    public final byte icmp_code;
    public final byte icmp_type;
    public final int ifindex;
    public final android.net.netlink.NdOption option;
    public final int opts_len;
    public final java.net.InetAddress srcaddr;

    void <init>(android.net.netlink.StructNlMsgHdr, java.nio.ByteBuffer) throws java.net.UnknownHostException
    {
        android.net.netlink.NduseroptMessage r0;
        java.nio.ByteBuffer r1;
        int i0, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i19, i20, i21;
        java.nio.ByteOrder $r2, $r5;
        byte $b1, $b6, $b7, $b18;
        short $s3, $s16;
        android.net.netlink.NdOption $r8;
        java.lang.IllegalArgumentException $r10, $r21;
        byte[] $r12, $r13, $r15;
        java.net.InetAddress $r14;
        java.net.Inet6Address $r16;
        java.lang.Throwable $r17;
        android.net.netlink.StructNlMsgHdr r19;
        android.net.netlink.StructNlAttr r20;

        r0 := @this: android.net.netlink.NduseroptMessage;

        r19 := @parameter0: android.net.netlink.StructNlMsgHdr;

        r1 := @parameter1: java.nio.ByteBuffer;

        specialinvoke r0.<android.net.netlink.NetlinkMessage: void <init>(android.net.netlink.StructNlMsgHdr)>(r19);

        $r2 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        i20 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        $b1 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();

        r0.<android.net.netlink.NduseroptMessage: byte family> = $b1;

        virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();

        $s3 = virtualinvoke r1.<java.nio.ByteBuffer: short getShort()>();

        $i4 = staticinvoke <java.lang.Short: int toUnsignedInt(short)>($s3);

        r0.<android.net.netlink.NduseroptMessage: int opts_len> = $i4;

        $i5 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        r0.<android.net.netlink.NduseroptMessage: int ifindex> = $i5;

        $b6 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();

        r0.<android.net.netlink.NduseroptMessage: byte icmp_type> = $b6;

        $b7 = virtualinvoke r1.<java.nio.ByteBuffer: byte get()>();

        r0.<android.net.netlink.NduseroptMessage: byte icmp_code> = $b7;

        $i8 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        $i9 = $i8 + 6;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i9);

        $r5 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r5);

        i0 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        $i11 = i20 + 16;

        $i10 = r0.<android.net.netlink.NduseroptMessage: int opts_len>;

        $i12 = $i11 + $i10;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i12);

     label1:
        $r8 = staticinvoke <android.net.netlink.NdOption: android.net.netlink.NdOption parse(java.nio.ByteBuffer)>(r1);

        r0.<android.net.netlink.NduseroptMessage: android.net.netlink.NdOption option> = $r8;

     label2:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i0);

        $i14 = i20 + 16;

        $i13 = r0.<android.net.netlink.NduseroptMessage: int opts_len>;

        i21 = $i14 + $i13;

        $i15 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        if i21 >= $i15 goto label6;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i21);

        r20 = staticinvoke <android.net.netlink.StructNlAttr: android.net.netlink.StructNlAttr parse(java.nio.ByteBuffer)>(r1);

        if r20 == null goto label5;

        $s16 = r20.<android.net.netlink.StructNlAttr: short nla_type>;

        if $s16 != 1 goto label5;

        $r12 = r20.<android.net.netlink.StructNlAttr: byte[] nla_value>;

        if $r12 == null goto label5;

        $b18 = r0.<android.net.netlink.NduseroptMessage: byte family>;

        $i17 = <android.system.OsConstants: int AF_INET6>;

        if $b18 != $i17 goto label3;

        $r15 = r20.<android.net.netlink.StructNlAttr: byte[] nla_value>;

        $i19 = r0.<android.net.netlink.NduseroptMessage: int ifindex>;

        $r16 = staticinvoke <java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],int)>(null, $r15, $i19);

        r0.<android.net.netlink.NduseroptMessage: java.net.InetAddress srcaddr> = $r16;

        goto label4;

     label3:
        $r13 = r20.<android.net.netlink.StructNlAttr: byte[] nla_value>;

        $r14 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r13);

        r0.<android.net.netlink.NduseroptMessage: java.net.InetAddress srcaddr> = $r14;

     label4:
        return;

     label5:
        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid source address in ND useropt");

        throw $r21;

     label6:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ND options extend past end of buffer");

        throw $r10;

     label7:
        $r17 := @caughtexception;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i0);

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label7;
    }

    public static android.net.netlink.NduseroptMessage parse(android.net.netlink.StructNlMsgHdr, java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        java.nio.ByteOrder r1;
        int $i0;
        android.net.netlink.NduseroptMessage $r2;
        java.lang.Throwable $r4, $r6;
        android.net.netlink.StructNlMsgHdr r8;

        r8 := @parameter0: android.net.netlink.StructNlMsgHdr;

        r0 := @parameter1: java.nio.ByteBuffer;

        if r0 == null goto label6;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        if $i0 >= 16 goto label1;

        goto label6;

     label1:
        r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();

     label2:
        $r2 = new android.net.netlink.NduseroptMessage;

        specialinvoke $r2.<android.net.netlink.NduseroptMessage: void <init>(android.net.netlink.StructNlMsgHdr,java.nio.ByteBuffer)>(r8, r0);

     label3:
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        return $r2;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        throw $r6;

     label5:
        $r4 := @caughtexception;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        return null;

     label6:
        return null;

        catch java.lang.IllegalArgumentException from label2 to label3 with label5;
        catch java.net.UnknownHostException from label2 to label3 with label5;
        catch java.nio.BufferUnderflowException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public java.lang.String toString()
    {
        android.net.netlink.NduseroptMessage r0;
        java.lang.Object[] $r1;
        byte $b0, $b3, $b5;
        java.lang.Byte $r2;
        int $i1, $i2, $i4, $i6;
        java.lang.Integer $r3, $r4, $r5, $r6;
        java.net.InetAddress $r7;
        java.lang.String $r8, $r9;

        r0 := @this: android.net.netlink.NduseroptMessage;

        $r1 = newarray (java.lang.Object)[6];

        $b0 = r0.<android.net.netlink.NduseroptMessage: byte family>;

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r1[0] = $r2;

        $i1 = r0.<android.net.netlink.NduseroptMessage: int opts_len>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $i2 = r0.<android.net.netlink.NduseroptMessage: int ifindex>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r4;

        $b3 = r0.<android.net.netlink.NduseroptMessage: byte icmp_type>;

        $i4 = staticinvoke <java.lang.Byte: int toUnsignedInt(byte)>($b3);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[3] = $r5;

        $b5 = r0.<android.net.netlink.NduseroptMessage: byte icmp_code>;

        $i6 = staticinvoke <java.lang.Byte: int toUnsignedInt(byte)>($b5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r1[4] = $r6;

        $r7 = r0.<android.net.netlink.NduseroptMessage: java.net.InetAddress srcaddr>;

        $r8 = virtualinvoke $r7.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r1[5] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Nduseroptmsg(%d, %d, %d, %d, %d, %s)", $r1);

        return $r9;
    }

    public static void <clinit>()
    {
        <android.net.netlink.NduseroptMessage: int STRUCT_SIZE> = 16;

        <android.net.netlink.NduseroptMessage: int NDUSEROPT_SRCADDR> = 1;

        return;
    }
}
