public class android.net.netlink.NetlinkConstants extends java.lang.Object
{
    private static final char[] HEX_DIGITS;
    public static final int INET_DIAG_MEMINFO;
    public static final int NLA_ALIGNTO;
    public static final short NLMSG_DONE;
    public static final short NLMSG_ERROR;
    public static final short NLMSG_MAX_RESERVED;
    public static final short NLMSG_NOOP;
    public static final short NLMSG_OVERRUN;
    public static final int RTMGRP_ND_USEROPT;
    public static final short RTM_DELADDR;
    public static final short RTM_DELLINK;
    public static final short RTM_DELNEIGH;
    public static final short RTM_DELROUTE;
    public static final short RTM_DELRULE;
    public static final short RTM_GETADDR;
    public static final short RTM_GETLINK;
    public static final short RTM_GETNEIGH;
    public static final short RTM_GETROUTE;
    public static final short RTM_GETRULE;
    public static final short RTM_NEWADDR;
    public static final short RTM_NEWLINK;
    public static final short RTM_NEWNDUSEROPT;
    public static final short RTM_NEWNEIGH;
    public static final short RTM_NEWROUTE;
    public static final short RTM_NEWRULE;
    public static final short RTM_SETLINK;
    public static final int RTNLGRP_ND_USEROPT;
    public static final int SOCKDIAG_MSG_HEADER_SIZE;
    public static final short SOCK_DIAG_BY_FAMILY;

    static void <clinit>()
    {
        char[] $r0;

        <android.net.netlink.NetlinkConstants: short SOCK_DIAG_BY_FAMILY> = 20;

        <android.net.netlink.NetlinkConstants: int SOCKDIAG_MSG_HEADER_SIZE> = 88;

        <android.net.netlink.NetlinkConstants: int RTNLGRP_ND_USEROPT> = 20;

        <android.net.netlink.NetlinkConstants: short RTM_SETLINK> = 19;

        <android.net.netlink.NetlinkConstants: short RTM_NEWRULE> = 32;

        <android.net.netlink.NetlinkConstants: short RTM_NEWROUTE> = 24;

        <android.net.netlink.NetlinkConstants: short RTM_NEWNEIGH> = 28;

        <android.net.netlink.NetlinkConstants: short RTM_NEWNDUSEROPT> = 68;

        <android.net.netlink.NetlinkConstants: short RTM_NEWLINK> = 16;

        <android.net.netlink.NetlinkConstants: short RTM_NEWADDR> = 20;

        <android.net.netlink.NetlinkConstants: short RTM_GETRULE> = 34;

        <android.net.netlink.NetlinkConstants: short RTM_GETROUTE> = 26;

        <android.net.netlink.NetlinkConstants: short RTM_GETNEIGH> = 30;

        <android.net.netlink.NetlinkConstants: short RTM_GETLINK> = 18;

        <android.net.netlink.NetlinkConstants: short RTM_GETADDR> = 22;

        <android.net.netlink.NetlinkConstants: short RTM_DELRULE> = 33;

        <android.net.netlink.NetlinkConstants: short RTM_DELROUTE> = 25;

        <android.net.netlink.NetlinkConstants: short RTM_DELNEIGH> = 29;

        <android.net.netlink.NetlinkConstants: short RTM_DELLINK> = 17;

        <android.net.netlink.NetlinkConstants: short RTM_DELADDR> = 21;

        <android.net.netlink.NetlinkConstants: int RTMGRP_ND_USEROPT> = 524288;

        <android.net.netlink.NetlinkConstants: short NLMSG_OVERRUN> = 4;

        <android.net.netlink.NetlinkConstants: short NLMSG_NOOP> = 1;

        <android.net.netlink.NetlinkConstants: short NLMSG_MAX_RESERVED> = 15;

        <android.net.netlink.NetlinkConstants: short NLMSG_ERROR> = 2;

        <android.net.netlink.NetlinkConstants: short NLMSG_DONE> = 3;

        <android.net.netlink.NetlinkConstants: int NLA_ALIGNTO> = 4;

        <android.net.netlink.NetlinkConstants: int INET_DIAG_MEMINFO> = 1;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <android.net.netlink.NetlinkConstants: char[] HEX_DIGITS> = $r0;

        return;
    }

    private void <init>()
    {
        android.net.netlink.NetlinkConstants r0;

        r0 := @this: android.net.netlink.NetlinkConstants;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final int alignedLengthOf(int)
    {
        int i0, $i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        return 0;

     label1:
        $i1 = i0 + 4;

        $i2 = $i1 - 1;

        $i3 = $i2 / 4;

        $i4 = $i3 * 4;

        return $i4;
    }

    public static final int alignedLengthOf(short)
    {
        short s0;
        int $i1, $i2;

        s0 := @parameter0: short;

        $i1 = 65535 & s0;

        $i2 = staticinvoke <android.net.netlink.NetlinkConstants: int alignedLengthOf(int)>($i1);

        return $i2;
    }

    public static java.lang.String hexify(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.String $r2;

        r0 := @parameter0: java.nio.ByteBuffer;

        if r0 != null goto label1;

        return "(null)";

     label1:
        $r1 = virtualinvoke r0.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $r2 = staticinvoke <android.net.netlink.NetlinkConstants: java.lang.String toHexString(byte[],int,int)>($r1, $i0, $i1);

        return $r2;
    }

    public static java.lang.String hexify(byte[])
    {
        byte[] r0;
        int $i0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return "(null)";

     label1:
        $i0 = lengthof r0;

        $r1 = staticinvoke <android.net.netlink.NetlinkConstants: java.lang.String toHexString(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static java.lang.String stringForAddressFamily(int)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int AF_INET>;

        if i0 != $i1 goto label1;

        return "AF_INET";

     label1:
        $i2 = <android.system.OsConstants: int AF_INET6>;

        if i0 != $i2 goto label2;

        return "AF_INET6";

     label2:
        $i3 = <android.system.OsConstants: int AF_NETLINK>;

        if i0 != $i3 goto label3;

        return "AF_NETLINK";

     label3:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        return $r0;
    }

    public static java.lang.String stringForNlMsgType(short)
    {
        short s0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r5;

        s0 := @parameter0: short;

        if s0 == 1 goto label25;

        if s0 == 2 goto label24;

        if s0 == 3 goto label23;

        if s0 == 4 goto label22;

        if s0 == 68 goto label21;

        tableswitch(s0)
        {
            case 16: goto label20;
            case 17: goto label19;
            case 18: goto label18;
            case 19: goto label17;
            case 20: goto label16;
            case 21: goto label15;
            case 22: goto label14;
            default: goto label01;
        };

     label01:
        tableswitch(s0)
        {
            case 24: goto label13;
            case 25: goto label12;
            case 26: goto label11;
            default: goto label02;
        };

     label02:
        tableswitch(s0)
        {
            case 28: goto label10;
            case 29: goto label09;
            case 30: goto label08;
            default: goto label03;
        };

     label03:
        tableswitch(s0)
        {
            case 32: goto label07;
            case 33: goto label06;
            case 34: goto label05;
            default: goto label04;
        };

     label04:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown RTM type: ");

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(s0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label05:
        return "RTM_GETRULE";

     label06:
        return "RTM_DELRULE";

     label07:
        return "RTM_NEWRULE";

     label08:
        return "RTM_GETNEIGH";

     label09:
        return "RTM_DELNEIGH";

     label10:
        return "RTM_NEWNEIGH";

     label11:
        return "RTM_GETROUTE";

     label12:
        return "RTM_DELROUTE";

     label13:
        return "RTM_NEWROUTE";

     label14:
        return "RTM_GETADDR";

     label15:
        return "RTM_DELADDR";

     label16:
        return "RTM_NEWADDR";

     label17:
        return "RTM_SETLINK";

     label18:
        return "RTM_GETLINK";

     label19:
        return "RTM_DELLINK";

     label20:
        return "RTM_NEWLINK";

     label21:
        return "RTM_NEWNDUSEROPT";

     label22:
        return "NLMSG_OVERRUN";

     label23:
        return "NLMSG_DONE";

     label24:
        return "NLMSG_ERROR";

     label25:
        return "NLMSG_NOOP";
    }

    public static java.lang.String stringForProtocol(int)
    {
        int i0, $i1, $i2;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int IPPROTO_TCP>;

        if i0 != $i1 goto label1;

        return "IPPROTO_TCP";

     label1:
        $i2 = <android.system.OsConstants: int IPPROTO_UDP>;

        if i0 != $i2 goto label2;

        return "IPPROTO_UDP";

     label2:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        return $r0;
    }

    public static java.lang.String toHexString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i3, $i4, $i5, i13, i14;
        char[] r1, r2;
        byte b2, $b6, $b7, $b10;
        java.lang.String $r3;
        char $c8, $c9, $c11, $c12;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = i1 * 2;

        r1 = newarray (char)[$i4];

        i13 = 0;

        i14 = i0;

     label1:
        $i5 = i0 + i1;

        if i14 >= $i5 goto label2;

        b2 = r0[i14];

        i3 = i13 + 1;

        r2 = <android.net.netlink.NetlinkConstants: char[] HEX_DIGITS>;

        $b6 = b2 >>> 4;

        $b7 = $b6 & 15;

        $c8 = r2[$b7];

        $c9 = (char) $c8;

        r1[i13] = $c9;

        i13 = i3 + 1;

        $b10 = b2 & 15;

        $c11 = r2[$b10];

        $c12 = (char) $c11;

        r1[i3] = $c12;

        i14 = i14 + 1;

        goto label1;

     label2:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>(r1);

        return $r3;
    }
}
