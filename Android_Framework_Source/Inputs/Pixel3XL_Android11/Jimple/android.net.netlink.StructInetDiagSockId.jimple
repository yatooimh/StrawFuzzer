public class android.net.netlink.StructInetDiagSockId extends java.lang.Object
{
    public static final int STRUCT_SIZE;
    private final byte[] INET_DIAG_NOCOOKIE;
    private final byte[] IPV4_PADDING;
    private final java.net.InetSocketAddress mLocSocketAddress;
    private final java.net.InetSocketAddress mRemSocketAddress;

    public void <init>(java.net.InetSocketAddress, java.net.InetSocketAddress)
    {
        android.net.netlink.StructInetDiagSockId r0;
        java.net.InetSocketAddress r1, r2;
        byte[] $r3, $r4;

        r0 := @this: android.net.netlink.StructInetDiagSockId;

        r1 := @parameter0: java.net.InetSocketAddress;

        r2 := @parameter1: java.net.InetSocketAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (byte)[8];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = -1;

        $r3[4] = -1;

        $r3[5] = -1;

        $r3[6] = -1;

        $r3[7] = -1;

        r0.<android.net.netlink.StructInetDiagSockId: byte[] INET_DIAG_NOCOOKIE> = $r3;

        $r4 = newarray (byte)[12];

        $r4[0] = 0;

        $r4[1] = 0;

        $r4[2] = 0;

        $r4[3] = 0;

        $r4[4] = 0;

        $r4[5] = 0;

        $r4[6] = 0;

        $r4[7] = 0;

        $r4[8] = 0;

        $r4[9] = 0;

        $r4[10] = 0;

        $r4[11] = 0;

        r0.<android.net.netlink.StructInetDiagSockId: byte[] IPV4_PADDING> = $r4;

        r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mLocSocketAddress> = r1;

        r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mRemSocketAddress> = r2;

        return;
    }

    public void pack(java.nio.ByteBuffer)
    {
        android.net.netlink.StructInetDiagSockId r0;
        java.nio.ByteBuffer r1;
        java.nio.ByteOrder $r2, $r20;
        java.net.InetSocketAddress $r4, $r6, $r8, $r12, $r14, $r18;
        int $i0, $i2;
        short $s1, $s3;
        java.net.InetAddress $r9, $r13, $r15, $r19;
        byte[] $r10, $r16, $r23, $r25, $r27;
        boolean $z0, $z1;

        r0 := @this: android.net.netlink.StructInetDiagSockId;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        $r4 = r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mLocSocketAddress>;

        $i0 = virtualinvoke $r4.<java.net.InetSocketAddress: int getPort()>();

        $s1 = (short) $i0;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s1);

        $r6 = r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mRemSocketAddress>;

        $i2 = virtualinvoke $r6.<java.net.InetSocketAddress: int getPort()>();

        $s3 = (short) $i2;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s3);

        $r8 = r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mLocSocketAddress>;

        $r9 = virtualinvoke $r8.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r10 = virtualinvoke $r9.<java.net.InetAddress: byte[] getAddress()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r10);

        $r12 = r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mLocSocketAddress>;

        $r13 = virtualinvoke $r12.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $z0 = $r13 instanceof java.net.Inet4Address;

        if $z0 == 0 goto label1;

        $r27 = r0.<android.net.netlink.StructInetDiagSockId: byte[] IPV4_PADDING>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r27);

     label1:
        $r14 = r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mRemSocketAddress>;

        $r15 = virtualinvoke $r14.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r16 = virtualinvoke $r15.<java.net.InetAddress: byte[] getAddress()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r16);

        $r18 = r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mRemSocketAddress>;

        $r19 = virtualinvoke $r18.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $z1 = $r19 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label2;

        $r25 = r0.<android.net.netlink.StructInetDiagSockId: byte[] IPV4_PADDING>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r25);

     label2:
        $r20 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r20);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(0);

        $r23 = r0.<android.net.netlink.StructInetDiagSockId: byte[] INET_DIAG_NOCOOKIE>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r23);

        return;
    }

    public java.lang.String toString()
    {
        android.net.netlink.StructInetDiagSockId r0;
        java.lang.StringBuilder $r2;
        java.net.InetSocketAddress $r4, $r7, $r10, $r15;
        int $i0, $i1;
        java.net.InetAddress $r11, $r16;
        java.lang.String $r12, $r17, $r22;

        r0 := @this: android.net.netlink.StructInetDiagSockId;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StructInetDiagSockId{ idiag_sport{");

        $r4 = r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mLocSocketAddress>;

        $i0 = virtualinvoke $r4.<java.net.InetSocketAddress: int getPort()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, idiag_dport{");

        $r7 = r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mRemSocketAddress>;

        $i1 = virtualinvoke $r7.<java.net.InetSocketAddress: int getPort()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, idiag_src{");

        $r10 = r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mLocSocketAddress>;

        $r11 = virtualinvoke $r10.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r12 = virtualinvoke $r11.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, idiag_dst{");

        $r15 = r0.<android.net.netlink.StructInetDiagSockId: java.net.InetSocketAddress mRemSocketAddress>;

        $r16 = virtualinvoke $r15.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r17 = virtualinvoke $r16.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, idiag_if{");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} idiag_cookie{INET_DIAG_NOCOOKIE}}");

        $r22 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }

    public static void <clinit>()
    {
        <android.net.netlink.StructInetDiagSockId: int STRUCT_SIZE> = 48;

        return;
    }
}
