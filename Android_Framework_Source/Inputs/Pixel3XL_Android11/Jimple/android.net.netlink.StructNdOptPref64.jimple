public class android.net.netlink.StructNdOptPref64 extends android.net.netlink.NdOption
{
    public static final byte LENGTH;
    public static final int STRUCT_SIZE;
    private static final java.lang.String TAG;
    public static final int TYPE;
    public final int lifetime;
    public final android.net.IpPrefix prefix;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.net.netlink.StructNdOptPref64: int TYPE> = 38;

        <android.net.netlink.StructNdOptPref64: int STRUCT_SIZE> = 16;

        <android.net.netlink.StructNdOptPref64: byte LENGTH> = 2;

        $r0 = class "Landroid/net/netlink/StructNdOptPref64;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.net.netlink.StructNdOptPref64: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.net.IpPrefix, int)
    {
        android.net.netlink.StructNdOptPref64 r0;
        int i0, $i1, $i3;
        java.net.InetAddress $r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r9;
        java.lang.IllegalArgumentException $r7, $r12;
        java.lang.String $r8, $r13;
        android.net.IpPrefix r14;

        r0 := @this: android.net.netlink.StructNdOptPref64;

        r14 := @parameter0: android.net.IpPrefix;

        i0 := @parameter1: int;

        specialinvoke r0.<android.net.netlink.NdOption: void <init>(byte,int)>(38, 2);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r14, "prefix must not be null");

        $r3 = virtualinvoke r14.<android.net.IpPrefix: java.net.InetAddress getAddress()>();

        $z0 = $r3 instanceof java.net.Inet6Address;

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r14.<android.net.IpPrefix: int getPrefixLength()>();

        staticinvoke <android.net.netlink.StructNdOptPref64: int prefixLengthToPlc(int)>($i1);

        r0.<android.net.netlink.StructNdOptPref64: android.net.IpPrefix prefix> = r14;

        if i0 < 0 goto label1;

        if i0 > 65528 goto label1;

        $i3 = 65528 & i0;

        r0.<android.net.netlink.StructNdOptPref64: int lifetime> = $i3;

        return;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid lifetime ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must be an IPv6 prefix: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    private void <init>(java.nio.ByteBuffer)
    {
        android.net.netlink.StructNdOptPref64 r0;
        int i0, $i3, $i6, $i7, $i9, $i10, $i11;
        byte[] r1;
        byte $b1, $b2, $b4, $b5;
        java.lang.StringBuilder $r2, $r7;
        java.lang.IllegalArgumentException $r5, $r10;
        java.lang.String $r6, $r11;
        short $s8;
        android.net.IpPrefix $r13;
        java.lang.Throwable $r14;
        java.lang.AssertionError $r15;
        java.nio.ByteBuffer r16;
        java.net.InetAddress r17;

        r0 := @this: android.net.netlink.StructNdOptPref64;

        r16 := @parameter0: java.nio.ByteBuffer;

        $b1 = virtualinvoke r16.<java.nio.ByteBuffer: byte get()>();

        $b2 = virtualinvoke r16.<java.nio.ByteBuffer: byte get()>();

        $i3 = staticinvoke <java.lang.Byte: int toUnsignedInt(byte)>($b2);

        specialinvoke r0.<android.net.netlink.NdOption: void <init>(byte,int)>($b1, $i3);

        $b4 = r0.<android.net.netlink.StructNdOptPref64: byte type>;

        if $b4 != 38 goto label5;

        $i6 = r0.<android.net.netlink.StructNdOptPref64: int length>;

        if $i6 != 2 goto label4;

        $s8 = virtualinvoke r16.<java.nio.ByteBuffer: short getShort()>();

        i0 = staticinvoke <java.lang.Short: int toUnsignedInt(short)>($s8);

        $i9 = 65528 & i0;

        r0.<android.net.netlink.StructNdOptPref64: int lifetime> = $i9;

        r1 = newarray (byte)[16];

        virtualinvoke r16.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r1, 0, 12);

     label1:
        r17 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>(r1);

     label2:
        $r13 = new android.net.IpPrefix;

        $i10 = i0 & 7;

        $i11 = staticinvoke <android.net.netlink.StructNdOptPref64: int plcToPrefixLength(int)>($i10);

        specialinvoke $r13.<android.net.IpPrefix: void <init>(java.net.InetAddress,int)>(r17, $i11);

        r0.<android.net.netlink.StructNdOptPref64: android.net.IpPrefix prefix> = $r13;

        return;

     label3:
        $r14 := @caughtexception;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>("16-byte array not valid InetAddress?");

        throw $r15;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid length ");

        $i7 = r0.<android.net.netlink.StructNdOptPref64: int length>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid type ");

        $b5 = r0.<android.net.netlink.StructNdOptPref64: byte type>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b5);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.net.UnknownHostException from label1 to label2 with label3;
    }

    static short getScaledLifetimePlc(int, int)
    {
        int i0, i1, $i2, $i3, $i4;
        short $s5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = 65528 & i0;

        $i2 = i1 & 7;

        $i4 = $i3 | $i2;

        $s5 = (short) $i4;

        return $s5;
    }

    public static android.net.netlink.StructNdOptPref64 parse(java.nio.ByteBuffer)
    {
        int $i0;
        android.net.netlink.StructNdOptPref64 $r2;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, r10;
        java.nio.ByteBuffer r8;

        r8 := @parameter0: java.nio.ByteBuffer;

        if r8 == null goto label4;

        $i0 = virtualinvoke r8.<java.nio.ByteBuffer: int remaining()>();

        if $i0 >= 16 goto label1;

        goto label4;

     label1:
        $r2 = new android.net.netlink.StructNdOptPref64;

        specialinvoke $r2.<android.net.netlink.StructNdOptPref64: void <init>(java.nio.ByteBuffer)>(r8);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r10 = <android.net.netlink.StructNdOptPref64: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid PREF64 option: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r10, $r7);

        return null;

     label4:
        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    static int plcToPrefixLength(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 0 goto label6;

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        if i0 == 4 goto label2;

        if i0 != 5 goto label1;

        return 32;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid prefix length code ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return 40;

     label3:
        return 48;

     label4:
        return 56;

     label5:
        return 64;

     label6:
        return 96;
    }

    static int prefixLengthToPlc(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 32 goto label6;

        if i0 == 40 goto label5;

        if i0 == 48 goto label4;

        if i0 == 56 goto label3;

        if i0 == 64 goto label2;

        if i0 != 96 goto label1;

        return 0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid prefix length ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 3;

     label5:
        return 4;

     label6:
        return 5;
    }

    public java.nio.ByteBuffer toByteBuffer()
    {
        android.net.netlink.StructNdOptPref64 r0;
        java.nio.ByteBuffer r1;

        r0 := @this: android.net.netlink.StructNdOptPref64;

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(16);

        virtualinvoke r0.<android.net.netlink.StructNdOptPref64: void writeToByteBuffer(java.nio.ByteBuffer)>(r1);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        return r1;
    }

    public java.lang.String toString()
    {
        android.net.netlink.StructNdOptPref64 r0;
        java.lang.Object[] $r1;
        android.net.IpPrefix $r2;
        int $i0;
        java.lang.Integer $r3;
        java.lang.String $r4;

        r0 := @this: android.net.netlink.StructNdOptPref64;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<android.net.netlink.StructNdOptPref64: android.net.IpPrefix prefix>;

        $r1[0] = $r2;

        $i0 = r0.<android.net.netlink.StructNdOptPref64: int lifetime>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("NdOptPref64(%s, %d)", $r1);

        return $r4;
    }

    protected void writeToByteBuffer(java.nio.ByteBuffer)
    {
        android.net.netlink.StructNdOptPref64 r0;
        java.nio.ByteBuffer r1;
        android.net.IpPrefix $r2, $r4;
        int $i0, $i1, $i2;
        short $s3;
        byte[] $r5;

        r0 := @this: android.net.netlink.StructNdOptPref64;

        r1 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<android.net.netlink.NdOption: void writeToByteBuffer(java.nio.ByteBuffer)>(r1);

        $i0 = r0.<android.net.netlink.StructNdOptPref64: int lifetime>;

        $r2 = r0.<android.net.netlink.StructNdOptPref64: android.net.IpPrefix prefix>;

        $i1 = virtualinvoke $r2.<android.net.IpPrefix: int getPrefixLength()>();

        $i2 = staticinvoke <android.net.netlink.StructNdOptPref64: int prefixLengthToPlc(int)>($i1);

        $s3 = staticinvoke <android.net.netlink.StructNdOptPref64: short getScaledLifetimePlc(int,int)>($i0, $i2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s3);

        $r4 = r0.<android.net.netlink.StructNdOptPref64: android.net.IpPrefix prefix>;

        $r5 = virtualinvoke $r4.<android.net.IpPrefix: byte[] getRawAddress()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r5, 0, 12);

        return;
    }
}
