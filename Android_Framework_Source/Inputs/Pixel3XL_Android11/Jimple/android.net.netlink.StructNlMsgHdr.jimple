public class android.net.netlink.StructNlMsgHdr extends java.lang.Object
{
    public static final short NLM_F_ACK;
    public static final short NLM_F_APPEND;
    public static final short NLM_F_CREATE;
    public static final short NLM_F_DUMP;
    public static final short NLM_F_ECHO;
    public static final short NLM_F_EXCL;
    public static final short NLM_F_MATCH;
    public static final short NLM_F_MULTI;
    public static final short NLM_F_REPLACE;
    public static final short NLM_F_REQUEST;
    public static final short NLM_F_ROOT;
    public static final int STRUCT_SIZE;
    public short nlmsg_flags;
    public int nlmsg_len;
    public int nlmsg_pid;
    public int nlmsg_seq;
    public short nlmsg_type;

    public void <init>()
    {
        android.net.netlink.StructNlMsgHdr r0;
        short $s0, $s1;

        r0 := @this: android.net.netlink.StructNlMsgHdr;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.netlink.StructNlMsgHdr: int nlmsg_len> = 0;

        $s0 = (short) 0;

        r0.<android.net.netlink.StructNlMsgHdr: short nlmsg_type> = $s0;

        $s1 = (short) 0;

        r0.<android.net.netlink.StructNlMsgHdr: short nlmsg_flags> = $s1;

        r0.<android.net.netlink.StructNlMsgHdr: int nlmsg_seq> = 0;

        r0.<android.net.netlink.StructNlMsgHdr: int nlmsg_pid> = 0;

        return;
    }

    public static boolean hasAvailableSpace(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: java.nio.ByteBuffer;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        if $i0 < 16 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static android.net.netlink.StructNlMsgHdr parse(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        boolean $z0;
        android.net.netlink.StructNlMsgHdr $r2;
        int $i0, $i3, $i4, $i5;
        short $s1, $s2;

        r0 := @parameter0: java.nio.ByteBuffer;

        $z0 = staticinvoke <android.net.netlink.StructNlMsgHdr: boolean hasAvailableSpace(java.nio.ByteBuffer)>(r0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = new android.net.netlink.StructNlMsgHdr;

        specialinvoke $r2.<android.net.netlink.StructNlMsgHdr: void <init>()>();

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt()>();

        $r2.<android.net.netlink.StructNlMsgHdr: int nlmsg_len> = $i0;

        $s1 = virtualinvoke r0.<java.nio.ByteBuffer: short getShort()>();

        $r2.<android.net.netlink.StructNlMsgHdr: short nlmsg_type> = $s1;

        $s2 = virtualinvoke r0.<java.nio.ByteBuffer: short getShort()>();

        $r2.<android.net.netlink.StructNlMsgHdr: short nlmsg_flags> = $s2;

        $i3 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt()>();

        $r2.<android.net.netlink.StructNlMsgHdr: int nlmsg_seq> = $i3;

        $i4 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt()>();

        $r2.<android.net.netlink.StructNlMsgHdr: int nlmsg_pid> = $i4;

        $i5 = $r2.<android.net.netlink.StructNlMsgHdr: int nlmsg_len>;

        if $i5 >= 16 goto label2;

        return null;

     label2:
        return $r2;
    }

    public static java.lang.String stringForNlMsgFlags(short)
    {
        short s0, $s1, $s2, $s8, $s9, $s10, $s11;
        java.lang.StringBuilder $r1;
        int $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r13;

        s0 := @parameter0: short;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $s1 = s0 & 1;

        if $s1 == 0 goto label01;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NLM_F_REQUEST");

     label01:
        $s2 = s0 & 2;

        if $s2 == 0 goto label03;

        $i7 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i7 <= 0 goto label02;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label02:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NLM_F_MULTI");

     label03:
        $s8 = s0 & 4;

        if $s8 == 0 goto label05;

        $i6 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i6 <= 0 goto label04;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label04:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NLM_F_ACK");

     label05:
        $s9 = s0 & 8;

        if $s9 == 0 goto label07;

        $i5 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i5 <= 0 goto label06;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label06:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NLM_F_ECHO");

     label07:
        $s10 = s0 & 256;

        if $s10 == 0 goto label09;

        $i4 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i4 <= 0 goto label08;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label08:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NLM_F_ROOT");

     label09:
        $s11 = s0 & 512;

        if $s11 == 0 goto label11;

        $i3 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label10;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label10:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NLM_F_MATCH");

     label11:
        $r13 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public void pack(java.nio.ByteBuffer)
    {
        android.net.netlink.StructNlMsgHdr r0;
        java.nio.ByteBuffer r1;
        int $i0, $i3, $i4;
        short $s1, $s2;

        r0 := @this: android.net.netlink.StructNlMsgHdr;

        r1 := @parameter0: java.nio.ByteBuffer;

        $i0 = r0.<android.net.netlink.StructNlMsgHdr: int nlmsg_len>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $s1 = r0.<android.net.netlink.StructNlMsgHdr: short nlmsg_type>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s1);

        $s2 = r0.<android.net.netlink.StructNlMsgHdr: short nlmsg_flags>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s2);

        $i3 = r0.<android.net.netlink.StructNlMsgHdr: int nlmsg_seq>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i3);

        $i4 = r0.<android.net.netlink.StructNlMsgHdr: int nlmsg_pid>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i4);

        return;
    }

    public java.lang.String toString()
    {
        android.net.netlink.StructNlMsgHdr r0;
        java.lang.StringBuilder $r2, $r9, $r16;
        short $s0, $s1, $s2, $s3;
        java.lang.String $r6, $r13, $r28, r30, r32;
        int $i4, $i5, $i6;

        r0 := @this: android.net.netlink.StructNlMsgHdr;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $s0 = r0.<android.net.netlink.StructNlMsgHdr: short nlmsg_type>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $s1 = r0.<android.net.netlink.StructNlMsgHdr: short nlmsg_type>;

        $r6 = staticinvoke <android.net.netlink.NetlinkConstants: java.lang.String stringForNlMsgType(short)>($s1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r30 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $s2 = r0.<android.net.netlink.StructNlMsgHdr: short nlmsg_flags>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $s3 = r0.<android.net.netlink.StructNlMsgHdr: short nlmsg_flags>;

        $r13 = staticinvoke <android.net.netlink.StructNlMsgHdr: java.lang.String stringForNlMsgFlags(short)>($s3);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r32 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StructNlMsgHdr{ nlmsg_len{");

        $i4 = r0.<android.net.netlink.StructNlMsgHdr: int nlmsg_len>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, nlmsg_type{");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, nlmsg_flags{");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")}, nlmsg_seq{");

        $i5 = r0.<android.net.netlink.StructNlMsgHdr: int nlmsg_seq>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, nlmsg_pid{");

        $i6 = r0.<android.net.netlink.StructNlMsgHdr: int nlmsg_pid>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} }");

        $r28 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r28;
    }

    public static void <clinit>()
    {
        <android.net.netlink.StructNlMsgHdr: int STRUCT_SIZE> = 16;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_ROOT> = 256;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_REQUEST> = 1;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_REPLACE> = 256;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_MULTI> = 2;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_MATCH> = 512;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_EXCL> = 512;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_ECHO> = 8;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_DUMP> = 768;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_CREATE> = 1024;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_APPEND> = 2048;

        <android.net.netlink.StructNlMsgHdr: short NLM_F_ACK> = 4;

        return;
    }
}
