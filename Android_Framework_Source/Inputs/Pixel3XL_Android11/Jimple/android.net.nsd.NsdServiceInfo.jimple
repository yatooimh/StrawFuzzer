public final class android.net.nsd.NsdServiceInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    private java.net.InetAddress mHost;
    private int mPort;
    private java.lang.String mServiceName;
    private java.lang.String mServiceType;
    private final android.util.ArrayMap mTxtRecord;

    static void <clinit>()
    {
        android.net.nsd.NsdServiceInfo$1 $r0;

        <android.net.nsd.NsdServiceInfo: java.lang.String TAG> = "NsdServiceInfo";

        $r0 = new android.net.nsd.NsdServiceInfo$1;

        specialinvoke $r0.<android.net.nsd.NsdServiceInfo$1: void <init>()>();

        <android.net.nsd.NsdServiceInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.net.nsd.NsdServiceInfo r0;
        android.util.ArrayMap $r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1, r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord> = $r3;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName> = r1;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType> = r2;

        return;
    }

    static java.lang.String access$002(android.net.nsd.NsdServiceInfo, java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.nsd.NsdServiceInfo;

        r1 := @parameter1: java.lang.String;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName> = r1;

        return r1;
    }

    static java.lang.String access$102(android.net.nsd.NsdServiceInfo, java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.nsd.NsdServiceInfo;

        r1 := @parameter1: java.lang.String;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType> = r1;

        return r1;
    }

    static java.net.InetAddress access$202(android.net.nsd.NsdServiceInfo, java.net.InetAddress)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.net.InetAddress r1;

        r0 := @parameter0: android.net.nsd.NsdServiceInfo;

        r1 := @parameter1: java.net.InetAddress;

        r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost> = r1;

        return r1;
    }

    static int access$302(android.net.nsd.NsdServiceInfo, int)
    {
        android.net.nsd.NsdServiceInfo r0;
        int i0;

        r0 := @parameter0: android.net.nsd.NsdServiceInfo;

        i0 := @parameter1: int;

        r0.<android.net.nsd.NsdServiceInfo: int mPort> = i0;

        return i0;
    }

    static android.util.ArrayMap access$400(android.net.nsd.NsdServiceInfo)
    {
        android.net.nsd.NsdServiceInfo r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: android.net.nsd.NsdServiceInfo;

        $r1 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        return $r1;
    }

    private int getTxtRecordSize()
    {
        android.net.nsd.NsdServiceInfo r0;
        java.util.Iterator r1;
        int i0, $i1, $i2, i3, i4;
        android.util.ArrayMap $r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4, $r5, $r7;
        java.lang.String $r6;
        java.util.Map$Entry r8;
        byte[] r9;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        i3 = 0;

        $r2 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r5;

        i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (byte[]) $r7;

        if r9 != null goto label2;

        i4 = 0;

        goto label3;

     label2:
        i4 = lengthof r9;

     label3:
        $i1 = i3 + 2;

        $i2 = $i1 + i0;

        i3 = $i2 + i4;

        goto label1;

     label4:
        return i3;
    }

    public int describeContents()
    {
        android.net.nsd.NsdServiceInfo r0;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        return 0;
    }

    public java.util.Map getAttributes()
    {
        android.net.nsd.NsdServiceInfo r0;
        android.util.ArrayMap $r1;
        java.util.Map $r2;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $r1 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public java.net.InetAddress getHost()
    {
        android.net.nsd.NsdServiceInfo r0;
        java.net.InetAddress $r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $r1 = r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost>;

        return $r1;
    }

    public int getPort()
    {
        android.net.nsd.NsdServiceInfo r0;
        int $i0;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $i0 = r0.<android.net.nsd.NsdServiceInfo: int mPort>;

        return $i0;
    }

    public java.lang.String getServiceName()
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String $r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $r1 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName>;

        return $r1;
    }

    public java.lang.String getServiceType()
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String $r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $r1 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType>;

        return $r1;
    }

    public byte[] getTxtRecord()
    {
        android.net.nsd.NsdServiceInfo r0;
        byte[] r1, $r10, $r11, r13;
        java.util.Iterator r2;
        java.lang.String r3;
        int i0, i1, $i2, $i3, $i6, $i7, $i9, $i10, i11, i12, i13, i14, i15;
        android.util.ArrayMap $r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6, $r7, $r8;
        byte $b4, $b5, $b8;
        java.nio.charset.Charset $r9;
        java.util.Map$Entry r12;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        i11 = specialinvoke r0.<android.net.nsd.NsdServiceInfo: int getTxtRecordSize()>();

        if i11 != 0 goto label1;

        $r11 = newarray (byte)[0];

        return $r11;

     label1:
        r1 = newarray (byte)[i11];

        i12 = 0;

        $r4 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (java.lang.String) $r7;

        $r8 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        r13 = (byte[]) $r8;

        i0 = i12 + 1;

        i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if r13 != null goto label3;

        i13 = 0;

        goto label4;

     label3:
        i13 = lengthof r13;

     label4:
        $i2 = i1 + i13;

        $i3 = $i2 + 1;

        $b4 = (byte) $i3;

        $b5 = (byte) $b4;

        r1[i12] = $b5;

        $r9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        $r10 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r9);

        $i6 = virtualinvoke r3.<java.lang.String: int length()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r1, i0, $i6);

        $i7 = virtualinvoke r3.<java.lang.String: int length()>();

        i14 = i0 + $i7;

        i15 = i14 + 1;

        $b8 = (byte) 61;

        r1[i14] = $b8;

        i12 = i15;

        if r13 == null goto label5;

        $i9 = lengthof r13;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, 0, r1, i15, $i9);

        $i10 = lengthof r13;

        i12 = i15 + $i10;

     label5:
        goto label2;

     label6:
        return r1;
    }

    public void removeAttribute(java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void setAttribute(java.lang.String, java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.Throwable $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String r3, r4;
        byte[] r5;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        if r4 != null goto label3;

     label1:
        r5 = (byte[]) null;

     label2:
        goto label4;

     label3:
        r5 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label4:
        virtualinvoke r0.<android.net.nsd.NsdServiceInfo: void setAttribute(java.lang.String,byte[])>(r3, r5);

     label5:
        return;

     label6:
        $r1 := @caughtexception;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Value must be UTF-8");

        throw $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label6;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label6;
        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
    }

    public void setAttribute(java.lang.String, byte[])
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1, $r12;
        byte[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i8, i10, i12, i13, i14, i15;
        boolean $z0;
        java.lang.IllegalArgumentException $r4, $r5, $r6, $r13, $r14;
        android.util.ArrayMap $r7;
        java.lang.StringBuilder $r9;
        char c9;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label13;

        i8 = 0;

     label01:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i8 >= $i1 goto label04;

        c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i8);

        if c9 < 32 goto label03;

        if c9 > 126 goto label03;

        if c9 == 61 goto label02;

        i8 = i8 + 1;

        goto label01;

     label02:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key strings must not include \'=\'");

        throw $r14;

     label03:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key strings must be printable US-ASCII");

        throw $r13;

     label04:
        i10 = virtualinvoke r1.<java.lang.String: int length()>();

        if r2 != null goto label05;

        i12 = 0;

        goto label06;

     label05:
        i12 = lengthof r2;

     label06:
        $i2 = i10 + i12;

        if $i2 >= 255 goto label12;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 <= 9 goto label07;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key lengths > 9 are discouraged: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NsdServiceInfo", $r12);

     label07:
        i13 = specialinvoke r0.<android.net.nsd.NsdServiceInfo: int getTxtRecordSize()>();

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if r2 != null goto label08;

        i14 = 0;

        goto label09;

     label08:
        i14 = lengthof r2;

     label09:
        $i4 = i0 + i13;

        $i5 = $i4 + i14;

        i15 = $i5 + 2;

        if i15 > 1300 goto label11;

        if i15 <= 400 goto label10;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NsdServiceInfo", "Total length of all attributes exceeds 400 bytes; truncation may occur");

     label10:
        $r7 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;

     label11:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Total length of attributes must be < 1300 bytes");

        throw $r6;

     label12:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key length + value length must be < 255 bytes");

        throw $r5;

     label13:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key cannot be empty");

        throw $r4;
    }

    public void setHost(java.net.InetAddress)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.net.InetAddress r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.net.InetAddress;

        r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost> = r1;

        return;
    }

    public void setPort(int)
    {
        android.net.nsd.NsdServiceInfo r0;
        int i0;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        i0 := @parameter0: int;

        r0.<android.net.nsd.NsdServiceInfo: int mPort> = i0;

        return;
    }

    public void setServiceName(java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName> = r1;

        return;
    }

    public void setServiceType(java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType> = r1;

        return;
    }

    public void setTxtRecords(java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        byte[] r1, r26, r27;
        int i0, $i1, $i3, $i4, $i7, $i8, $i9, $i11, $i13, i15, i17, i18, i19, i20, $i21, i22;
        byte $b2, $b5, $b6, $b10;
        boolean $z0, $z1;
        java.util.Map $r2;
        java.lang.String $r6, $r14, $r20, $r22, r23, r25, r28, r36, r37;
        java.nio.charset.Charset $r7, $r9;
        java.lang.Throwable $r15;
        short s16;
        java.lang.StringBuilder r35, r38, r42;
        java.lang.IllegalArgumentException r39, r40, r41, r43;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r23 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r23, 0);

        i15 = 0;

     label01:
        $i1 = lengthof r1;

        if i15 >= $i1 goto label69;

        $b2 = r1[i15];

        s16 = $b2 & 255;

        i0 = i15 + 1;

        if s16 == 0 goto label61;

        i17 = s16;

        i18 = s16;

     label02:
        $i4 = i0 + s16;

        $i3 = lengthof r1;

        if $i4 <= $i3 goto label19;

     label03:
        i18 = s16;

     label04:
        r35 = new java.lang.StringBuilder;

     label05:
        i18 = s16;

     label06:
        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

     label07:
        i18 = s16;

     label08:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupt record length (pos = ");

     label09:
        i18 = s16;

     label10:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label11:
        i18 = s16;

     label12:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

     label13:
        i18 = s16;

     label14:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s16);

     label15:
        i18 = s16;

     label16:
        $r14 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NsdServiceInfo", $r14);

     label17:
        i18 = s16;

     label18:
        $i13 = lengthof r1;

        i17 = $i13 - i0;

     label19:
        r25 = null;

        r26 = null;

        i19 = 0;

        i20 = i0;

     label20:
        $i21 = i0 + i17;

        if i20 >= $i21 goto label27;

        if r25 != null goto label23;

        r27 = r26;

        i22 = i19;

        $b10 = r1[i20];

        if $b10 != 61 goto label26;

        i18 = i17;

     label21:
        r36 = new java.lang.String;

        $i11 = i20 - i0;

        $r9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke r36.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, i0, $i11, $r9);

        r25 = r36;

     label22:
        r27 = r26;

        i22 = i19;

        goto label26;

     label23:
        r27 = r26;

        if r26 != null goto label25;

        i18 = i17;

     label24:
        $i7 = virtualinvoke r25.<java.lang.String: int length()>();

        $i8 = i17 - $i7;

        $i9 = $i8 - 1;

        r27 = newarray (byte)[$i9];

     label25:
        $b5 = r1[i20];

        $b6 = (byte) $b5;

        r27[i19] = $b6;

        i22 = i19 + 1;

     label26:
        i20 = i20 + 1;

        r26 = r27;

        i19 = i22;

        goto label20;

     label27:
        r28 = r25;

        if r25 != null goto label31;

        i18 = i17;

     label28:
        r37 = new java.lang.String;

        r28 = r37;

     label29:
        i18 = i17;

     label30:
        $r7 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke r37.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, i0, i17, $r7);

     label31:
        i18 = i17;

     label32:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r28);

        if $z0 != 0 goto label54;

     label33:
        i18 = i17;

     label34:
        $r2 = virtualinvoke r0.<android.net.nsd.NsdServiceInfo: java.util.Map getAttributes()>();

        $z1 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r28);

        if $z1 != 0 goto label38;

     label35:
        i18 = i17;

     label36:
        virtualinvoke r0.<android.net.nsd.NsdServiceInfo: void setAttribute(java.lang.String,byte[])>(r28, r26);

     label37:
        goto label68;

     label38:
        i18 = i17;

     label39:
        r39 = new java.lang.IllegalArgumentException;

     label40:
        i18 = i17;

     label41:
        r38 = new java.lang.StringBuilder;

     label42:
        i18 = i17;

     label43:
        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

     label44:
        i18 = i17;

     label45:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid txt record (duplicate key \"");

     label46:
        i18 = i17;

     label47:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

     label48:
        i18 = i17;

     label49:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")");

     label50:
        i18 = i17;

     label51:
        $r6 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

     label52:
        i18 = i17;

     label53:
        throw r39;

     label54:
        i18 = i17;

     label55:
        r40 = new java.lang.IllegalArgumentException;

     label56:
        i18 = i17;

     label57:
        specialinvoke r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid txt record (key is empty)");

     label58:
        i18 = i17;

     label59:
        throw r40;

     label60:
        $r15 := @caughtexception;

        goto label67;

     label61:
        i18 = s16;

     label62:
        r41 = new java.lang.IllegalArgumentException;

     label63:
        i18 = s16;

     label64:
        specialinvoke r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Zero sized txt record");

     label65:
        i18 = s16;

     label66:
        throw r41;

     label67:
        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("While parsing txt records (pos = ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        r43 = (java.lang.IllegalArgumentException) $r15;

        $r20 = virtualinvoke r43.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NsdServiceInfo", $r22);

        i17 = i18;

     label68:
        i15 = i0 + i17;

        goto label01;

     label69:
        return;

        catch java.lang.IllegalArgumentException from label02 to label03 with label60;
        catch java.lang.IllegalArgumentException from label04 to label05 with label60;
        catch java.lang.IllegalArgumentException from label06 to label07 with label60;
        catch java.lang.IllegalArgumentException from label08 to label09 with label60;
        catch java.lang.IllegalArgumentException from label10 to label11 with label60;
        catch java.lang.IllegalArgumentException from label12 to label13 with label60;
        catch java.lang.IllegalArgumentException from label14 to label15 with label60;
        catch java.lang.IllegalArgumentException from label16 to label17 with label60;
        catch java.lang.IllegalArgumentException from label18 to label19 with label60;
        catch java.lang.IllegalArgumentException from label21 to label22 with label60;
        catch java.lang.IllegalArgumentException from label24 to label25 with label60;
        catch java.lang.IllegalArgumentException from label28 to label29 with label60;
        catch java.lang.IllegalArgumentException from label30 to label31 with label60;
        catch java.lang.IllegalArgumentException from label32 to label33 with label60;
        catch java.lang.IllegalArgumentException from label34 to label35 with label60;
        catch java.lang.IllegalArgumentException from label36 to label37 with label60;
        catch java.lang.IllegalArgumentException from label39 to label40 with label60;
        catch java.lang.IllegalArgumentException from label41 to label42 with label60;
        catch java.lang.IllegalArgumentException from label43 to label44 with label60;
        catch java.lang.IllegalArgumentException from label45 to label46 with label60;
        catch java.lang.IllegalArgumentException from label47 to label48 with label60;
        catch java.lang.IllegalArgumentException from label49 to label50 with label60;
        catch java.lang.IllegalArgumentException from label51 to label52 with label60;
        catch java.lang.IllegalArgumentException from label53 to label54 with label60;
        catch java.lang.IllegalArgumentException from label55 to label56 with label60;
        catch java.lang.IllegalArgumentException from label57 to label58 with label60;
        catch java.lang.IllegalArgumentException from label59 to label60 with label60;
        catch java.lang.IllegalArgumentException from label62 to label63 with label60;
        catch java.lang.IllegalArgumentException from label64 to label65 with label60;
        catch java.lang.IllegalArgumentException from label66 to label67 with label60;
    }

    public java.lang.String toString()
    {
        android.net.nsd.NsdServiceInfo r0;
        byte[] r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r5, $r8, $r15, $r17;
        java.net.InetAddress $r11;
        int $i0;
        java.nio.charset.Charset $r18;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("name: ");

        $r5 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", type: ");

        $r8 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", host: ");

        $r11 = r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", port: ");

        $i0 = r0.<android.net.nsd.NsdServiceInfo: int mPort>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        r2 = virtualinvoke r0.<android.net.nsd.NsdServiceInfo: byte[] getTxtRecord()>();

        if r2 == null goto label1;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", txtRecord: ");

        $r17 = new java.lang.String;

        $r18 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r17.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r2, $r18);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

     label1:
        $r15 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.nsd.NsdServiceInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        java.util.Iterator r2;
        java.lang.String r3, $r5, $r6;
        byte[] r4, $r15;
        java.net.InetAddress $r7, $r14;
        android.util.ArrayMap $r8, $r9, $r12;
        java.util.Set $r10;
        java.lang.Object $r11, $r13;
        boolean $z0;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r5 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r6 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $r7 = r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost>;

        if $r7 == null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r14 = r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost>;

        $r15 = virtualinvoke $r14.<java.net.InetAddress: byte[] getAddress()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r15);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        $i1 = r0.<android.net.nsd.NsdServiceInfo: int mPort>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r8 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $i2 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r9 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r11;

        $r12 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (byte[]) $r13;

        if r4 == null goto label4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $i3 = lengthof r4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r4);

        goto label5;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        goto label3;

     label6:
        return;
    }
}
