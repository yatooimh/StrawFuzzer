public class android.net.rtp.AudioGroup extends java.lang.Object
{
    public static final int MODE_ECHO_SUPPRESSION;
    private static final int MODE_LAST;
    public static final int MODE_MUTED;
    public static final int MODE_NORMAL;
    public static final int MODE_ON_HOLD;
    private android.content.Context mContext;
    private int mMode;
    private long mNative;
    private final java.util.Map mStreams;

    static void <clinit>()
    {
        <android.net.rtp.AudioGroup: int MODE_ON_HOLD> = 0;

        <android.net.rtp.AudioGroup: int MODE_NORMAL> = 2;

        <android.net.rtp.AudioGroup: int MODE_MUTED> = 1;

        <android.net.rtp.AudioGroup: int MODE_LAST> = 3;

        <android.net.rtp.AudioGroup: int MODE_ECHO_SUPPRESSION> = 3;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("rtp_jni");

        return;
    }

    public void <init>()
    {
        android.net.rtp.AudioGroup r0;

        r0 := @this: android.net.rtp.AudioGroup;

        specialinvoke r0.<android.net.rtp.AudioGroup: void <init>(android.content.Context)>(null);

        return;
    }

    public void <init>(android.content.Context)
    {
        android.net.rtp.AudioGroup r0;
        android.content.Context r1;
        java.util.HashMap $r2;

        r0 := @this: android.net.rtp.AudioGroup;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.rtp.AudioGroup: int mMode> = 0;

        r0.<android.net.rtp.AudioGroup: android.content.Context mContext> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.net.rtp.AudioGroup: java.util.Map mStreams> = $r2;

        return;
    }

    private native long nativeAdd(int, int, java.lang.String, int, java.lang.String, int, java.lang.String);

    private native void nativeRemove(long);

    private native void nativeSendDtmf(int);

    private native void nativeSetMode(int);

    void add(android.net.rtp.AudioStream)
    {
        android.net.rtp.AudioGroup r0;
        boolean z0;
        java.lang.String r1, r2, $r7, $r8, r19;
        int i0, i1, i2, i3, $i5;
        long l4;
        java.util.Map $r3, $r11;
        java.lang.Object[] $r4;
        java.util.Locale $r5;
        java.lang.Integer $r6;
        java.net.InetAddress $r9;
        android.content.Context $r10, $r14;
        java.lang.Long $r12;
        java.lang.Throwable $r15;
        java.lang.NullPointerException $r16;
        android.net.rtp.AudioStream r17;
        android.net.rtp.AudioCodec r18;
        java.lang.IllegalStateException r21;

        r0 := @this: android.net.rtp.AudioGroup;

        r17 := @parameter0: android.net.rtp.AudioStream;

        entermonitor r0;

     label01:
        $r3 = r0.<android.net.rtp.AudioGroup: java.util.Map mStreams>;

        z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r17);

     label02:
        if z0 != 0 goto label10;

     label03:
        r18 = virtualinvoke r17.<android.net.rtp.AudioStream: android.net.rtp.AudioCodec getCodec()>();

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r4 = newarray (java.lang.Object)[3];

        $i5 = r18.<android.net.rtp.AudioCodec: int type>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r4[0] = $r6;

        $r7 = r18.<android.net.rtp.AudioCodec: java.lang.String rtpmap>;

        $r4[1] = $r7;

        $r8 = r18.<android.net.rtp.AudioCodec: java.lang.String fmtp>;

        $r4[2] = $r8;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, "%d %s %s", $r4);

        i0 = virtualinvoke r17.<android.net.rtp.AudioStream: int getMode()>();

        i1 = virtualinvoke r17.<android.net.rtp.AudioStream: int getSocket()>();

        $r9 = virtualinvoke r17.<android.net.rtp.AudioStream: java.net.InetAddress getRemoteAddress()>();

        r2 = virtualinvoke $r9.<java.net.InetAddress: java.lang.String getHostAddress()>();

        i2 = virtualinvoke r17.<android.net.rtp.AudioStream: int getRemotePort()>();

        i3 = virtualinvoke r17.<android.net.rtp.AudioStream: int getDtmfType()>();

        $r10 = r0.<android.net.rtp.AudioGroup: android.content.Context mContext>;

        if $r10 == null goto label05;

        $r14 = r0.<android.net.rtp.AudioGroup: android.content.Context mContext>;

        r19 = virtualinvoke $r14.<android.content.Context: java.lang.String getOpPackageName()>();

     label04:
        goto label06;

     label05:
        r19 = staticinvoke <android.app.ActivityThread: java.lang.String currentOpPackageName()>();

     label06:
        l4 = specialinvoke r0.<android.net.rtp.AudioGroup: long nativeAdd(int,int,java.lang.String,int,java.lang.String,int,java.lang.String)>(i0, i1, r2, i2, r1, i3, r19);

        $r11 = r0.<android.net.rtp.AudioGroup: java.util.Map mStreams>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r12);

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

     label09:
        r21 = new java.lang.IllegalStateException;

        specialinvoke r21.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r16);

        throw r21;

     label10:
        exitmonitor r0;

        return;

     label11:
        $r15 := @caughtexception;

        exitmonitor r0;

        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.NullPointerException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.NullPointerException from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.NullPointerException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void clear()
    {
        android.net.rtp.AudioGroup r0;
        android.net.rtp.AudioStream[] r1;
        int i0, i1;
        android.net.rtp.AudioStream $r2;

        r0 := @this: android.net.rtp.AudioGroup;

        r1 = virtualinvoke r0.<android.net.rtp.AudioGroup: android.net.rtp.AudioStream[] getStreams()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        virtualinvoke $r2.<android.net.rtp.AudioStream: void join(android.net.rtp.AudioGroup)>(null);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.net.rtp.AudioGroup r0;

        r0 := @this: android.net.rtp.AudioGroup;

        specialinvoke r0.<android.net.rtp.AudioGroup: void nativeRemove(long)>(0L);

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    public int getMode()
    {
        android.net.rtp.AudioGroup r0;
        int $i0;

        r0 := @this: android.net.rtp.AudioGroup;

        $i0 = r0.<android.net.rtp.AudioGroup: int mMode>;

        return $i0;
    }

    public android.net.rtp.AudioStream[] getStreams()
    {
        android.net.rtp.AudioGroup r0;
        java.util.Map $r1, $r3;
        java.util.Set $r2;
        int $i0;
        android.net.rtp.AudioStream[] $r4, r7;
        java.lang.Object[] $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.net.rtp.AudioGroup;

        entermonitor r0;

     label1:
        $r1 = r0.<android.net.rtp.AudioGroup: java.util.Map mStreams>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = r0.<android.net.rtp.AudioGroup: java.util.Map mStreams>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (android.net.rtp.AudioStream)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r7 = (android.net.rtp.AudioStream[]) $r5;

        exitmonitor r0;

     label2:
        return r7;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void remove(android.net.rtp.AudioStream)
    {
        android.net.rtp.AudioGroup r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        long $l0;
        java.lang.Throwable $r3;
        android.net.rtp.AudioStream r4;
        java.lang.Long r5;

        r0 := @this: android.net.rtp.AudioGroup;

        r4 := @parameter0: android.net.rtp.AudioStream;

        entermonitor r0;

     label1:
        $r1 = r0.<android.net.rtp.AudioGroup: java.util.Map mStreams>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

        r5 = (java.lang.Long) $r2;

     label2:
        if r5 == null goto label4;

     label3:
        $l0 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        specialinvoke r0.<android.net.rtp.AudioGroup: void nativeRemove(long)>($l0);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void sendDtmf(int)
    {
        android.net.rtp.AudioGroup r0;
        int i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.net.rtp.AudioGroup;

        i0 := @parameter0: int;

        if i0 < 0 goto label6;

        if i0 > 15 goto label6;

        entermonitor r0;

     label1:
        specialinvoke r0.<android.net.rtp.AudioGroup: void nativeSendDtmf(int)>(i0);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid event");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setMode(int)
    {
        android.net.rtp.AudioGroup r0;
        int i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.net.rtp.AudioGroup;

        i0 := @parameter0: int;

        if i0 < 0 goto label6;

        if i0 > 3 goto label6;

        entermonitor r0;

     label1:
        specialinvoke r0.<android.net.rtp.AudioGroup: void nativeSetMode(int)>(i0);

        r0.<android.net.rtp.AudioGroup: int mMode> = i0;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid mode");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
