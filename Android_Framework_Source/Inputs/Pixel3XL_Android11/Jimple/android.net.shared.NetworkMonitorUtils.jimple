public class android.net.shared.NetworkMonitorUtils extends java.lang.Object
{
    public static final java.lang.String ACTION_NETWORK_CONDITIONS_MEASURED;
    public static final java.lang.String EXTRA_BSSID;
    public static final java.lang.String EXTRA_CELL_ID;
    public static final java.lang.String EXTRA_CONNECTIVITY_TYPE;
    public static final java.lang.String EXTRA_IS_CAPTIVE_PORTAL;
    public static final java.lang.String EXTRA_NETWORK_TYPE;
    public static final java.lang.String EXTRA_REQUEST_TIMESTAMP_MS;
    public static final java.lang.String EXTRA_RESPONSE_RECEIVED;
    public static final java.lang.String EXTRA_RESPONSE_TIMESTAMP_MS;
    public static final java.lang.String EXTRA_SSID;
    public static final java.lang.String PERMISSION_ACCESS_NETWORK_CONDITIONS;
    private static final int TRANSPORT_TEST;

    public void <init>()
    {
        android.net.shared.NetworkMonitorUtils r0;

        r0 := @this: android.net.shared.NetworkMonitorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isPrivateDnsValidationRequired(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @parameter0: android.net.NetworkCapabilities;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<android.net.NetworkCapabilities: boolean hasCapability(int)>(12);

        if $z0 == 0 goto label2;

        $z6 = virtualinvoke r0.<android.net.NetworkCapabilities: boolean hasCapability(int)>(13);

        if $z6 == 0 goto label2;

        $z7 = virtualinvoke r0.<android.net.NetworkCapabilities: boolean hasCapability(int)>(14);

        if $z7 == 0 goto label2;

        return 1;

     label2:
        $z8 = virtualinvoke r0.<android.net.NetworkCapabilities: boolean hasTransport(int)>(7);

        if $z8 == 0 goto label4;

        $z1 = virtualinvoke r0.<android.net.NetworkCapabilities: boolean hasCapability(int)>(13);

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r0.<android.net.NetworkCapabilities: boolean hasTransport(int)>(1);

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r0.<android.net.NetworkCapabilities: boolean hasTransport(int)>(0);

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r0.<android.net.NetworkCapabilities: boolean hasTransport(int)>(2);

        if $z4 != 0 goto label3;

        $z5 = virtualinvoke r0.<android.net.NetworkCapabilities: boolean hasTransport(int)>(3);

        if $z5 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    public static boolean isValidationRequired(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0;
        boolean $z0, $z1, z2;

        r0 := @parameter0: android.net.NetworkCapabilities;

        $z0 = staticinvoke <android.net.shared.NetworkMonitorUtils: boolean isPrivateDnsValidationRequired(android.net.NetworkCapabilities)>(r0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.net.NetworkCapabilities: boolean hasCapability(int)>(15);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public static void <clinit>()
    {
        <android.net.shared.NetworkMonitorUtils: int TRANSPORT_TEST> = 7;

        <android.net.shared.NetworkMonitorUtils: java.lang.String PERMISSION_ACCESS_NETWORK_CONDITIONS> = "android.permission.ACCESS_NETWORK_CONDITIONS";

        <android.net.shared.NetworkMonitorUtils: java.lang.String EXTRA_SSID> = "extra_ssid";

        <android.net.shared.NetworkMonitorUtils: java.lang.String EXTRA_RESPONSE_TIMESTAMP_MS> = "extra_response_timestamp_ms";

        <android.net.shared.NetworkMonitorUtils: java.lang.String EXTRA_RESPONSE_RECEIVED> = "extra_response_received";

        <android.net.shared.NetworkMonitorUtils: java.lang.String EXTRA_REQUEST_TIMESTAMP_MS> = "extra_request_timestamp_ms";

        <android.net.shared.NetworkMonitorUtils: java.lang.String EXTRA_NETWORK_TYPE> = "extra_network_type";

        <android.net.shared.NetworkMonitorUtils: java.lang.String EXTRA_IS_CAPTIVE_PORTAL> = "extra_is_captive_portal";

        <android.net.shared.NetworkMonitorUtils: java.lang.String EXTRA_CONNECTIVITY_TYPE> = "extra_connectivity_type";

        <android.net.shared.NetworkMonitorUtils: java.lang.String EXTRA_CELL_ID> = "extra_cellid";

        <android.net.shared.NetworkMonitorUtils: java.lang.String EXTRA_BSSID> = "extra_bssid";

        <android.net.shared.NetworkMonitorUtils: java.lang.String ACTION_NETWORK_CONDITIONS_MEASURED> = "android.net.conn.NETWORK_CONDITIONS_MEASURED";

        return;
    }
}
