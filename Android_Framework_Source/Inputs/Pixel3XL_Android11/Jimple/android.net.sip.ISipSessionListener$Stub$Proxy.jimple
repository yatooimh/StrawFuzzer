class android.net.sip.ISipSessionListener$Stub$Proxy extends java.lang.Object implements android.net.sip.ISipSessionListener
{
    public static android.net.sip.ISipSessionListener sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        $r1 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        return "android.net.sip.ISipSessionListener";
    }

    public void onCallBusy(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.net.sip.ISipSessionListener $r4, $r5;
        java.lang.Throwable $r6;
        android.net.sip.ISipSession r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r7 := @parameter0: android.net.sip.ISipSession;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.sip.ISipSessionListener: void onCallBusy(android.net.sip.ISipSession)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onCallChangeFailed(android.net.sip.ISipSession, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        int i0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.net.sip.ISipSessionListener $r5, $r6;
        java.lang.Throwable $r7;
        android.net.sip.ISipSession r8;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r8 := @parameter0: android.net.sip.ISipSession;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.sip.ISipSessionListener: void onCallChangeFailed(android.net.sip.ISipSession,int,java.lang.String)>(r8, i0, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onCallEnded(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.net.sip.ISipSessionListener $r4, $r5;
        java.lang.Throwable $r6;
        android.net.sip.ISipSession r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r7 := @parameter0: android.net.sip.ISipSession;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.sip.ISipSessionListener: void onCallEnded(android.net.sip.ISipSession)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onCallEstablished(android.net.sip.ISipSession, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.net.sip.ISipSessionListener $r5, $r6;
        java.lang.Throwable $r7;
        android.net.sip.ISipSession r8;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r8 := @parameter0: android.net.sip.ISipSession;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.sip.ISipSessionListener: void onCallEstablished(android.net.sip.ISipSession,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onCallTransferring(android.net.sip.ISipSession, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.net.sip.ISipSessionListener $r5, $r6;
        java.lang.Throwable $r7;
        android.net.sip.ISipSession r8;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r8 := @parameter0: android.net.sip.ISipSession;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.sip.ISipSessionListener: void onCallTransferring(android.net.sip.ISipSession,java.lang.String)>(r8, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onCalling(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.net.sip.ISipSessionListener $r4, $r5;
        java.lang.Throwable $r6;
        android.net.sip.ISipSession r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r7 := @parameter0: android.net.sip.ISipSession;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.sip.ISipSessionListener: void onCalling(android.net.sip.ISipSession)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onError(android.net.sip.ISipSession, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        int i0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.net.sip.ISipSessionListener $r5, $r6;
        java.lang.Throwable $r7;
        android.net.sip.ISipSession r8;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r8 := @parameter0: android.net.sip.ISipSession;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.sip.ISipSessionListener: void onError(android.net.sip.ISipSession,int,java.lang.String)>(r8, i0, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onRegistering(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.net.sip.ISipSessionListener $r4, $r5;
        java.lang.Throwable $r6;
        android.net.sip.ISipSession r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r7 := @parameter0: android.net.sip.ISipSession;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.sip.ISipSessionListener: void onRegistering(android.net.sip.ISipSession)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onRegistrationDone(android.net.sip.ISipSession, int) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.net.sip.ISipSessionListener $r4, $r5;
        java.lang.Throwable $r6;
        android.net.sip.ISipSession r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r7 := @parameter0: android.net.sip.ISipSession;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.sip.ISipSessionListener: void onRegistrationDone(android.net.sip.ISipSession,int)>(r7, i0);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onRegistrationFailed(android.net.sip.ISipSession, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        int i0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.os.IBinder $r4, r9;
        boolean $z0;
        android.net.sip.ISipSessionListener $r5, $r6;
        java.lang.Throwable $r7;
        android.net.sip.ISipSession r8;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r8 := @parameter0: android.net.sip.ISipSession;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r8 == null goto label05;

     label03:
        r9 = interfaceinvoke r8.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r9 = null;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r4 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        if $z0 != 0 goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r5 == null goto label08;

        $r6 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.sip.ISipSessionListener: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>(r8, i0, r1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onRegistrationTimeout(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.net.sip.ISipSessionListener $r4, $r5;
        java.lang.Throwable $r6;
        android.net.sip.ISipSession r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r7 := @parameter0: android.net.sip.ISipSession;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.sip.ISipSessionListener: void onRegistrationTimeout(android.net.sip.ISipSession)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void onRinging(android.net.sip.ISipSession, android.net.sip.SipProfile, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.SipProfile r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        android.os.IBinder $r5, r10;
        boolean $z0;
        android.net.sip.ISipSessionListener $r6, $r7;
        java.lang.Throwable $r8;
        android.net.sip.ISipSession r9;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r9 := @parameter0: android.net.sip.ISipSession;

        r1 := @parameter1: android.net.sip.SipProfile;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r9 == null goto label05;

     label03:
        r10 = interfaceinvoke r9.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r10 = null;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r10);

     label07:
        if r1 == null goto label10;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.sip.SipProfile: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label09:
        goto label11;

     label10:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r5 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, r4, 0);

        if $z0 != 0 goto label13;

        $r6 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r6 == null goto label13;

        $r7 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r7.<android.net.sip.ISipSessionListener: void onRinging(android.net.sip.ISipSession,android.net.sip.SipProfile,java.lang.String)>(r9, r1, r2);

     label12:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label13:
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label14:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label15:
        $r8 := @caughtexception;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public void onRingingBack(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, r8;
        boolean $z0;
        android.net.sip.ISipSessionListener $r4, $r5;
        java.lang.Throwable $r6;
        android.net.sip.ISipSession r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r7 := @parameter0: android.net.sip.ISipSession;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

     label02:
        if r7 == null goto label05;

     label03:
        r8 = interfaceinvoke r7.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        $r3 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.sip.ISipSessionListener: void onRingingBack(android.net.sip.ISipSession)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
