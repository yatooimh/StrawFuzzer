public class android.net.util.DnsUtils$Rfc6724Comparator extends java.lang.Object implements java.util.Comparator
{

    public void <init>()
    {
        android.net.util.DnsUtils$Rfc6724Comparator r0;

        r0 := @this: android.net.util.DnsUtils$Rfc6724Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(android.net.util.DnsUtils$SortableAddress, android.net.util.DnsUtils$SortableAddress)
    {
        android.net.util.DnsUtils$Rfc6724Comparator r0;
        android.net.util.DnsUtils$SortableAddress r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;

        r0 := @this: android.net.util.DnsUtils$Rfc6724Comparator;

        r1 := @parameter0: android.net.util.DnsUtils$SortableAddress;

        r2 := @parameter1: android.net.util.DnsUtils$SortableAddress;

        $i1 = r1.<android.net.util.DnsUtils$SortableAddress: int hasSrcAddr>;

        $i0 = r2.<android.net.util.DnsUtils$SortableAddress: int hasSrcAddr>;

        if $i1 == $i0 goto label1;

        $i28 = r2.<android.net.util.DnsUtils$SortableAddress: int hasSrcAddr>;

        $i27 = r1.<android.net.util.DnsUtils$SortableAddress: int hasSrcAddr>;

        $i29 = $i28 - $i27;

        return $i29;

     label1:
        $i3 = r1.<android.net.util.DnsUtils$SortableAddress: int scopeMatch>;

        $i2 = r2.<android.net.util.DnsUtils$SortableAddress: int scopeMatch>;

        if $i3 == $i2 goto label2;

        $i25 = r2.<android.net.util.DnsUtils$SortableAddress: int scopeMatch>;

        $i24 = r1.<android.net.util.DnsUtils$SortableAddress: int scopeMatch>;

        $i26 = $i25 - $i24;

        return $i26;

     label2:
        $i5 = r1.<android.net.util.DnsUtils$SortableAddress: int labelMatch>;

        $i4 = r2.<android.net.util.DnsUtils$SortableAddress: int labelMatch>;

        if $i5 == $i4 goto label3;

        $i22 = r2.<android.net.util.DnsUtils$SortableAddress: int labelMatch>;

        $i21 = r1.<android.net.util.DnsUtils$SortableAddress: int labelMatch>;

        $i23 = $i22 - $i21;

        return $i23;

     label3:
        $i7 = r1.<android.net.util.DnsUtils$SortableAddress: int precedence>;

        $i6 = r2.<android.net.util.DnsUtils$SortableAddress: int precedence>;

        if $i7 == $i6 goto label4;

        $i19 = r2.<android.net.util.DnsUtils$SortableAddress: int precedence>;

        $i18 = r1.<android.net.util.DnsUtils$SortableAddress: int precedence>;

        $i20 = $i19 - $i18;

        return $i20;

     label4:
        $i9 = r1.<android.net.util.DnsUtils$SortableAddress: int scope>;

        $i8 = r2.<android.net.util.DnsUtils$SortableAddress: int scope>;

        if $i9 == $i8 goto label5;

        $i16 = r1.<android.net.util.DnsUtils$SortableAddress: int scope>;

        $i15 = r2.<android.net.util.DnsUtils$SortableAddress: int scope>;

        $i17 = $i16 - $i15;

        return $i17;

     label5:
        $i11 = r1.<android.net.util.DnsUtils$SortableAddress: int prefixMatchLen>;

        $i10 = r2.<android.net.util.DnsUtils$SortableAddress: int prefixMatchLen>;

        if $i11 == $i10 goto label6;

        $i13 = r2.<android.net.util.DnsUtils$SortableAddress: int prefixMatchLen>;

        $i12 = r1.<android.net.util.DnsUtils$SortableAddress: int prefixMatchLen>;

        $i14 = $i13 - $i12;

        return $i14;

     label6:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        android.net.util.DnsUtils$Rfc6724Comparator r0;
        java.lang.Object r1, r2;
        android.net.util.DnsUtils$SortableAddress $r3, $r4;
        int $i0;

        r0 := @this: android.net.util.DnsUtils$Rfc6724Comparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.net.util.DnsUtils$SortableAddress) r1;

        $r3 = (android.net.util.DnsUtils$SortableAddress) r2;

        $i0 = virtualinvoke r0.<android.net.util.DnsUtils$Rfc6724Comparator: int compare(android.net.util.DnsUtils$SortableAddress,android.net.util.DnsUtils$SortableAddress)>($r4, $r3);

        return $i0;
    }
}
