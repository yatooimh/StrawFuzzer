public class android.net.util.DnsUtils$SortableAddress extends java.lang.Object
{
    public final java.net.InetAddress address;
    public final int hasSrcAddr;
    public final int label;
    public final int labelMatch;
    public final int precedence;
    public final int prefixMatchLen;
    public final int scope;
    public final int scopeMatch;

    public void <init>(java.net.InetAddress, java.net.InetAddress)
    {
        android.net.util.DnsUtils$SortableAddress r0;
        java.net.InetAddress r1, r2;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1;
        byte b9, b10, b11;

        r0 := @this: android.net.util.DnsUtils$SortableAddress;

        r1 := @parameter0: java.net.InetAddress;

        r2 := @parameter1: java.net.InetAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.util.DnsUtils$SortableAddress: java.net.InetAddress address> = r1;

        if r2 == null goto label1;

        b9 = 1;

        goto label2;

     label1:
        b9 = 0;

     label2:
        r0.<android.net.util.DnsUtils$SortableAddress: int hasSrcAddr> = b9;

        $i1 = staticinvoke <android.net.util.DnsUtils: int access$000(java.net.InetAddress)>(r1);

        r0.<android.net.util.DnsUtils$SortableAddress: int label> = $i1;

        $i2 = staticinvoke <android.net.util.DnsUtils: int access$100(java.net.InetAddress)>(r1);

        r0.<android.net.util.DnsUtils$SortableAddress: int scope> = $i2;

        $i3 = staticinvoke <android.net.util.DnsUtils: int access$200(java.net.InetAddress)>(r1);

        r0.<android.net.util.DnsUtils$SortableAddress: int precedence> = $i3;

        if r2 == null goto label3;

        $i7 = r0.<android.net.util.DnsUtils$SortableAddress: int label>;

        $i8 = staticinvoke <android.net.util.DnsUtils: int access$000(java.net.InetAddress)>(r2);

        if $i7 != $i8 goto label3;

        b10 = 1;

        goto label4;

     label3:
        b10 = 0;

     label4:
        r0.<android.net.util.DnsUtils$SortableAddress: int labelMatch> = b10;

        if r2 == null goto label5;

        $i5 = r0.<android.net.util.DnsUtils$SortableAddress: int scope>;

        $i6 = staticinvoke <android.net.util.DnsUtils: int access$100(java.net.InetAddress)>(r2);

        if $i5 != $i6 goto label5;

        b11 = 1;

        goto label6;

     label5:
        b11 = 0;

     label6:
        r0.<android.net.util.DnsUtils$SortableAddress: int scopeMatch> = b11;

        $z1 = staticinvoke <android.net.util.DnsUtils: boolean access$300(java.net.InetAddress)>(r1);

        if $z1 == 0 goto label7;

        $z0 = staticinvoke <android.net.util.DnsUtils: boolean access$300(java.net.InetAddress)>(r2);

        if $z0 == 0 goto label7;

        $i4 = staticinvoke <android.net.util.DnsUtils: int access$400(java.net.InetAddress,java.net.InetAddress)>(r2, r1);

        r0.<android.net.util.DnsUtils$SortableAddress: int prefixMatchLen> = $i4;

        goto label8;

     label7:
        r0.<android.net.util.DnsUtils$SortableAddress: int prefixMatchLen> = 0;

     label8:
        return;
    }
}
