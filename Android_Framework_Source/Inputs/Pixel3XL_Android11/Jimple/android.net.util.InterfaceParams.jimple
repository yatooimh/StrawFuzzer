public class android.net.util.InterfaceParams extends java.lang.Object
{
    private static final int ETHER_MTU;
    private static final int IPV6_MIN_MTU;
    public final int defaultMtu;
    public final boolean hasMacAddress;
    public final int index;
    public final android.net.MacAddress macAddr;
    public final java.lang.String name;

    public void <init>(java.lang.String, int, android.net.MacAddress)
    {
        android.net.util.InterfaceParams r0;
        java.lang.String r1;
        int i0;
        android.net.MacAddress r2;

        r0 := @this: android.net.util.InterfaceParams;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.net.MacAddress;

        specialinvoke r0.<android.net.util.InterfaceParams: void <init>(java.lang.String,int,android.net.MacAddress,int)>(r1, i0, r2, 1500);

        return;
    }

    public void <init>(java.lang.String, int, android.net.MacAddress, int)
    {
        android.net.util.InterfaceParams r0;
        java.lang.String r1;
        int i0, i1, i2;
        boolean $z0, z1;
        java.lang.IllegalArgumentException $r2, $r3;
        byte[] $r4;
        android.net.MacAddress r5;

        r0 := @this: android.net.util.InterfaceParams;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r5 := @parameter2: android.net.MacAddress;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label7;

        if i1 <= 0 goto label6;

        r0.<android.net.util.InterfaceParams: java.lang.String name> = r1;

        r0.<android.net.util.InterfaceParams: int index> = i1;

        if r5 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        r0.<android.net.util.InterfaceParams: boolean hasMacAddress> = z1;

        if z1 == 0 goto label3;

        goto label4;

     label3:
        $r4 = newarray (byte)[6];

        $r4[0] = 2;

        $r4[1] = 0;

        $r4[2] = 0;

        $r4[3] = 0;

        $r4[4] = 0;

        $r4[5] = 0;

        r5 = staticinvoke <android.net.MacAddress: android.net.MacAddress fromBytes(byte[])>($r4);

     label4:
        r0.<android.net.util.InterfaceParams: android.net.MacAddress macAddr> = r5;

        i2 = 1280;

        if i0 <= 1280 goto label5;

        i2 = i0;

     label5:
        r0.<android.net.util.InterfaceParams: int defaultMtu> = i2;

        return;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid interface index");

        throw $r3;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("impossible interface name");

        throw $r2;
    }

    public static android.net.util.InterfaceParams getByName(java.lang.String)
    {
        java.net.NetworkInterface r0;
        android.net.MacAddress r1;
        android.net.util.InterfaceParams $r2;
        int $i0, $i1;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r4 := @parameter0: java.lang.String;

        r0 = staticinvoke <android.net.util.InterfaceParams: java.net.NetworkInterface getNetworkInterfaceByName(java.lang.String)>(r4);

        if r0 != null goto label1;

        return null;

     label1:
        r1 = staticinvoke <android.net.util.InterfaceParams: android.net.MacAddress getMacAddress(java.net.NetworkInterface)>(r0);

     label2:
        $r2 = new android.net.util.InterfaceParams;

        $i0 = virtualinvoke r0.<java.net.NetworkInterface: int getIndex()>();

        $i1 = virtualinvoke r0.<java.net.NetworkInterface: int getMTU()>();

        specialinvoke $r2.<android.net.util.InterfaceParams: void <init>(java.lang.String,int,android.net.MacAddress,int)>(r4, $i0, r1, $i1);

     label3:
        return $r2;

     label4:
        $r3 := @caughtexception;

        return null;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
        catch java.net.SocketException from label2 to label3 with label4;
    }

    private static android.net.MacAddress getMacAddress(java.net.NetworkInterface)
    {
        byte[] $r0;
        java.lang.Throwable $r1;
        java.net.NetworkInterface r2;
        android.net.MacAddress r3;

        r2 := @parameter0: java.net.NetworkInterface;

     label1:
        $r0 = virtualinvoke r2.<java.net.NetworkInterface: byte[] getHardwareAddress()>();

        r3 = staticinvoke <android.net.MacAddress: android.net.MacAddress fromBytes(byte[])>($r0);

     label2:
        return r3;

     label3:
        $r1 := @caughtexception;

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.net.SocketException from label1 to label2 with label3;
    }

    private static java.net.NetworkInterface getNetworkInterfaceByName(java.lang.String)
    {
        java.lang.Throwable $r0;
        java.lang.String r1;
        java.net.NetworkInterface r2;

        r1 := @parameter0: java.lang.String;

     label1:
        r2 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)>(r1);

     label2:
        return r2;

     label3:
        $r0 := @caughtexception;

        return null;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.net.SocketException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        android.net.util.InterfaceParams r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r6;
        int $i0, $i1;
        java.lang.Integer $r3, $r5;
        android.net.MacAddress $r4;

        r0 := @this: android.net.util.InterfaceParams;

        $r1 = newarray (java.lang.Object)[4];

        $r2 = r0.<android.net.util.InterfaceParams: java.lang.String name>;

        $r1[0] = $r2;

        $i0 = r0.<android.net.util.InterfaceParams: int index>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r3;

        $r4 = r0.<android.net.util.InterfaceParams: android.net.MacAddress macAddr>;

        $r1[2] = $r4;

        $i1 = r0.<android.net.util.InterfaceParams: int defaultMtu>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[3] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%d/%s/%d", $r1);

        return $r6;
    }

    public static void <clinit>()
    {
        <android.net.util.InterfaceParams: int IPV6_MIN_MTU> = 1280;

        <android.net.util.InterfaceParams: int ETHER_MTU> = 1500;

        return;
    }
}
