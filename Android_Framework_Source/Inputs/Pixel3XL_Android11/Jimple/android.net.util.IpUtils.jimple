public class android.net.util.IpUtils extends java.lang.Object
{

    public void <init>()
    {
        android.net.util.IpUtils r0;

        r0 := @this: android.net.util.IpUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String addressAndPortToString(java.net.InetAddress, int)
    {
        java.net.InetAddress r0;
        int i0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r4, r5;
        java.lang.Integer $r3;

        r0 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        $z0 = r0 instanceof java.net.Inet6Address;

        if $z0 == 0 goto label1;

        r5 = "[%s]:%d";

        goto label2;

     label1:
        r5 = "%s:%d";

     label2:
        $r1 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r0.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r5, $r1);

        return $r4;
    }

    private static int checksum(java.nio.ByteBuffer, int, int, int)
    {
        java.nio.ByteBuffer r0;
        java.nio.ShortBuffer r1;
        int i0, $i1, $i2, $i4, $i5, $i7, i8, i9, i10, i11, i12, i13, i14, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i26;
        byte $b3;
        short $s6, s15, s16, $s25;

        r0 := @parameter0: java.nio.ByteBuffer;

        i8 := @parameter1: int;

        i9 := @parameter2: int;

        i10 := @parameter3: int;

        i11 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i9);

        r1 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ShortBuffer asShortBuffer()>();

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i11);

        $i1 = i10 - i9;

        i0 = $i1 / 2;

        i12 = 0;

     label1:
        if i12 >= i0 goto label2;

        $s6 = virtualinvoke r1.<java.nio.ShortBuffer: short get(int)>(i12);

        $i7 = staticinvoke <android.net.util.IpUtils: int intAbs(short)>($s6);

        i8 = i8 + $i7;

        i12 = i12 + 1;

        goto label1;

     label2:
        $i2 = i0 * 2;

        i13 = i9 + $i2;

        i14 = i8;

        if i10 == i13 goto label4;

        $b3 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i13);

        s15 = (short) $b3;

        s16 = s15;

        if s15 >= 0 goto label3;

        $i5 = s15 + 256;

        s16 = (short) $i5;

     label3:
        $i4 = s16 * 256;

        i14 = i8 + $i4;

     label4:
        $i17 = i14 >> 16;

        $i18 = $i17 & 65535;

        $i19 = i14 & 65535;

        i20 = $i18 + $i19;

        $i21 = i20 >> 16;

        $i22 = $i21 & 65535;

        $i23 = $i22 + i20;

        $i24 = $i23 & 65535;

        $s25 = (short) $i24;

        $i26 = staticinvoke <android.net.util.IpUtils: int intAbs(short)>($s25);

        return $i26;
    }

    private static int intAbs(short)
    {
        short s0;
        int $i1;

        s0 := @parameter0: short;

        $i1 = 65535 & s0;

        return $i1;
    }

    public static short ipChecksum(java.nio.ByteBuffer, int)
    {
        java.nio.ByteBuffer r0;
        int i0, $i4, $i5, $i6;
        byte $b1, $b2, $b3;
        short $s7;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $b1 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i0);

        $b2 = $b1 & 15;

        $b3 = (byte) $b2;

        $i4 = $b3 * 4;

        $i5 = $i4 + i0;

        $i6 = staticinvoke <android.net.util.IpUtils: int checksum(java.nio.ByteBuffer,int,int,int)>(r0, 0, i0, $i5);

        $s7 = (short) $i6;

        return $s7;
    }

    private static byte ipversion(java.nio.ByteBuffer, int)
    {
        java.nio.ByteBuffer r0;
        int i0;
        byte $b1, $b2, $b3, $b4;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $b1 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(i0);

        $b2 = $b1 & -16;

        $b3 = $b2 >> 4;

        $b4 = (byte) $b3;

        return $b4;
    }

    public static boolean isValidUdpOrTcpPort(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        if i0 >= 65536 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private static int pseudoChecksumIPv4(java.nio.ByteBuffer, int, int, int)
    {
        java.nio.ByteBuffer r0;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i19;
        short $s5, $s9, $s13, $s17;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i4 = i1 + i2;

        $i3 = i0 + 12;

        $s5 = virtualinvoke r0.<java.nio.ByteBuffer: short getShort(int)>($i3);

        $i6 = staticinvoke <android.net.util.IpUtils: int intAbs(short)>($s5);

        $i8 = $i4 + $i6;

        $i7 = i0 + 14;

        $s9 = virtualinvoke r0.<java.nio.ByteBuffer: short getShort(int)>($i7);

        $i10 = staticinvoke <android.net.util.IpUtils: int intAbs(short)>($s9);

        $i12 = $i8 + $i10;

        $i11 = i0 + 16;

        $s13 = virtualinvoke r0.<java.nio.ByteBuffer: short getShort(int)>($i11);

        $i14 = staticinvoke <android.net.util.IpUtils: int intAbs(short)>($s13);

        $i16 = $i12 + $i14;

        $i15 = i0 + 18;

        $s17 = virtualinvoke r0.<java.nio.ByteBuffer: short getShort(int)>($i15);

        $i18 = staticinvoke <android.net.util.IpUtils: int intAbs(short)>($s17);

        $i19 = $i16 + $i18;

        return $i19;
    }

    private static int pseudoChecksumIPv6(java.nio.ByteBuffer, int, int, int)
    {
        java.nio.ByteBuffer r0;
        int i0, $i1, $i3, i4, i5, i6, i7;
        short $s2;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        i6 = i4 + i5;

        i7 = 8;

     label1:
        if i7 >= 40 goto label2;

        $i1 = i0 + i7;

        $s2 = virtualinvoke r0.<java.nio.ByteBuffer: short getShort(int)>($i1);

        $i3 = staticinvoke <android.net.util.IpUtils: int intAbs(short)>($s2);

        i6 = i6 + $i3;

        i7 = i7 + 2;

        goto label1;

     label2:
        return i6;
    }

    public static short tcpChecksum(java.nio.ByteBuffer, int, int, int)
    {
        java.nio.ByteBuffer r0;
        int i0, i1, i2, $i3;
        short $s4;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = <android.system.OsConstants: int IPPROTO_TCP>;

        $s4 = staticinvoke <android.net.util.IpUtils: short transportChecksum(java.nio.ByteBuffer,int,int,int,int)>(r0, $i3, i0, i1, i2);

        return $s4;
    }

    private static short transportChecksum(java.nio.ByteBuffer, int, int, int, int)
    {
        int i0, i1, $i3, $i4, i5, i6, i7, i8, i9;
        byte b2;
        java.lang.StringBuilder $r0;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4;
        java.lang.UnsupportedOperationException $r5;
        java.nio.ByteBuffer r6;
        short $s10;

        r6 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i5 := @parameter2: int;

        i6 := @parameter3: int;

        i1 := @parameter4: int;

        if i1 < 0 goto label5;

        b2 = staticinvoke <android.net.util.IpUtils: byte ipversion(java.nio.ByteBuffer,int)>(r6, i5);

        if b2 != 4 goto label1;

        i7 = staticinvoke <android.net.util.IpUtils: int pseudoChecksumIPv4(java.nio.ByteBuffer,int,int,int)>(r6, i5, i0, i1);

        goto label2;

     label1:
        if b2 != 6 goto label4;

        i7 = staticinvoke <android.net.util.IpUtils: int pseudoChecksumIPv6(java.nio.ByteBuffer,int,int,int)>(r6, i5, i0, i1);

     label2:
        $i3 = i6 + i1;

        i8 = staticinvoke <android.net.util.IpUtils: int checksum(java.nio.ByteBuffer,int,int,int)>(r6, i7, i6, $i3);

        i9 = i8;

        $i4 = <android.system.OsConstants: int IPPROTO_UDP>;

        if i0 != $i4 goto label3;

        i9 = i8;

        if i8 != 0 goto label3;

        i9 = -1;

     label3:
        $s10 = (short) i9;

        return $s10;

     label4:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Checksum must be IPv4 or IPv6");

        throw $r5;

     label5:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transport length < 0: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    public static short udpChecksum(java.nio.ByteBuffer, int, int)
    {
        java.nio.ByteBuffer r0;
        int i0, i1, i2, $i3, $i5;
        short $s4, $s6;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = i1 + 4;

        $s4 = virtualinvoke r0.<java.nio.ByteBuffer: short getShort(int)>($i3);

        i2 = staticinvoke <android.net.util.IpUtils: int intAbs(short)>($s4);

        $i5 = <android.system.OsConstants: int IPPROTO_UDP>;

        $s6 = staticinvoke <android.net.util.IpUtils: short transportChecksum(java.nio.ByteBuffer,int,int,int,int)>(r0, $i5, i0, i1, i2);

        return $s6;
    }
}
