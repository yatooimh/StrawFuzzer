public final class android.net.util.MacAddressUtils extends java.lang.Object
{
    private static final java.lang.String DEFAULT_MAC_ADDRESS;
    private static final int ETHER_ADDR_LEN;
    private static final long LOCALLY_ASSIGNED_MASK;
    private static final long MULTICAST_MASK;
    private static final long NIC_MASK;
    private static final long OUI_MASK;
    private static final long VALID_LONG_MASK;

    static void <clinit>()
    {
        android.net.MacAddress $r0, $r2, $r4, $r6;
        byte[] $r1, $r3, $r5, $r7;
        long $l0, $l1, $l2, $l3;

        <android.net.util.MacAddressUtils: long VALID_LONG_MASK> = 281474976710655L;

        <android.net.util.MacAddressUtils: int ETHER_ADDR_LEN> = 6;

        <android.net.util.MacAddressUtils: java.lang.String DEFAULT_MAC_ADDRESS> = "02:00:00:00:00:00";

        $r0 = staticinvoke <android.net.MacAddress: android.net.MacAddress fromString(java.lang.String)>("2:0:0:0:0:0");

        $r1 = virtualinvoke $r0.<android.net.MacAddress: byte[] toByteArray()>();

        $l0 = staticinvoke <android.net.util.MacAddressUtils: long longAddrFromByteAddr(byte[])>($r1);

        <android.net.util.MacAddressUtils: long LOCALLY_ASSIGNED_MASK> = $l0;

        $r2 = staticinvoke <android.net.MacAddress: android.net.MacAddress fromString(java.lang.String)>("1:0:0:0:0:0");

        $r3 = virtualinvoke $r2.<android.net.MacAddress: byte[] toByteArray()>();

        $l1 = staticinvoke <android.net.util.MacAddressUtils: long longAddrFromByteAddr(byte[])>($r3);

        <android.net.util.MacAddressUtils: long MULTICAST_MASK> = $l1;

        $r4 = staticinvoke <android.net.MacAddress: android.net.MacAddress fromString(java.lang.String)>("ff:ff:ff:0:0:0");

        $r5 = virtualinvoke $r4.<android.net.MacAddress: byte[] toByteArray()>();

        $l2 = staticinvoke <android.net.util.MacAddressUtils: long longAddrFromByteAddr(byte[])>($r5);

        <android.net.util.MacAddressUtils: long OUI_MASK> = $l2;

        $r6 = staticinvoke <android.net.MacAddress: android.net.MacAddress fromString(java.lang.String)>("0:0:0:ff:ff:ff");

        $r7 = virtualinvoke $r6.<android.net.MacAddress: byte[] toByteArray()>();

        $l3 = staticinvoke <android.net.util.MacAddressUtils: long longAddrFromByteAddr(byte[])>($r7);

        <android.net.util.MacAddressUtils: long NIC_MASK> = $l3;

        return;
    }

    public void <init>()
    {
        android.net.util.MacAddressUtils r0;

        r0 := @this: android.net.util.MacAddressUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] byteAddrFromLongAddr(long)
    {
        byte[] r0;
        int i0, $i1, i5;
        byte $b2, $b3;
        long l4;

        l4 := @parameter0: long;

        r0 = newarray (byte)[6];

        i5 = 6;

     label1:
        i0 = i5 - 1;

        if i5 <= 0 goto label2;

        $i1 = (int) l4;

        $b2 = (byte) $i1;

        $b3 = (byte) $b2;

        r0[i0] = $b3;

        l4 = l4 >> 8;

        i5 = i0;

        goto label1;

     label2:
        return r0;
    }

    public static android.net.MacAddress createRandomUnicastAddress()
    {
        java.security.SecureRandom $r0;
        android.net.MacAddress $r1;

        $r0 = new java.security.SecureRandom;

        specialinvoke $r0.<java.security.SecureRandom: void <init>()>();

        $r1 = staticinvoke <android.net.util.MacAddressUtils: android.net.MacAddress createRandomUnicastAddress(android.net.MacAddress,java.util.Random)>(null, $r0);

        return $r1;
    }

    public static android.net.MacAddress createRandomUnicastAddress(android.net.MacAddress, java.util.Random)
    {
        android.net.MacAddress r0, r2, $r5;
        java.util.Random r1;
        byte[] $r3, $r4;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, l11;
        boolean $z0;

        r0 := @parameter0: android.net.MacAddress;

        r1 := @parameter1: java.util.Random;

        if r0 != null goto label1;

        $l10 = virtualinvoke r1.<java.util.Random: long nextLong()>();

        l11 = $l10 & 281474976710655L;

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<android.net.MacAddress: byte[] toByteArray()>();

        $l0 = staticinvoke <android.net.util.MacAddressUtils: long longAddrFromByteAddr(byte[])>($r3);

        $l1 = <android.net.util.MacAddressUtils: long OUI_MASK>;

        $l2 = $l0 & $l1;

        $l3 = <android.net.util.MacAddressUtils: long NIC_MASK>;

        $l4 = virtualinvoke r1.<java.util.Random: long nextLong()>();

        $l5 = $l3 & $l4;

        l11 = $l2 | $l5;

     label2:
        $l6 = <android.net.util.MacAddressUtils: long LOCALLY_ASSIGNED_MASK>;

        $l8 = l11 | $l6;

        $l7 = <android.net.util.MacAddressUtils: long MULTICAST_MASK>;

        $l9 = $l8 & $l7;

        $r4 = staticinvoke <android.net.util.MacAddressUtils: byte[] byteAddrFromLongAddr(long)>($l9);

        r2 = staticinvoke <android.net.MacAddress: android.net.MacAddress fromBytes(byte[])>($r4);

        $z0 = virtualinvoke r2.<android.net.MacAddress: boolean equals(java.lang.Object)>("02:00:00:00:00:00");

        if $z0 == 0 goto label3;

        $r5 = staticinvoke <android.net.util.MacAddressUtils: android.net.MacAddress createRandomUnicastAddress(android.net.MacAddress,java.util.Random)>(r0, r1);

        return $r5;

     label3:
        return r2;
    }

    public static boolean isMacAddress(byte[])
    {
        byte[] r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: byte[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 6 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isMulticastAddress(android.net.MacAddress)
    {
        android.net.MacAddress r0;
        byte[] $r1;
        long $l0, $l1, $l2;
        byte $b3;
        boolean z0;

        r0 := @parameter0: android.net.MacAddress;

        $r1 = virtualinvoke r0.<android.net.MacAddress: byte[] toByteArray()>();

        $l0 = staticinvoke <android.net.util.MacAddressUtils: long longAddrFromByteAddr(byte[])>($r1);

        $l1 = <android.net.util.MacAddressUtils: long MULTICAST_MASK>;

        $l2 = $l0 & $l1;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static long longAddrFromByteAddr(byte[])
    {
        byte[] r0;
        int i0, i6;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r8;
        java.lang.IllegalArgumentException $r7;
        byte $b1;
        short $s2;
        long $l3, $l4, l5;

        r0 := @parameter0: byte[];

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $z0 = staticinvoke <android.net.util.MacAddressUtils: boolean isMacAddress(byte[])>(r0);

        if $z0 == 0 goto label3;

        l5 = 0L;

        i0 = lengthof r0;

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        $l4 = l5 << 8;

        $b1 = r0[i6];

        $s2 = $b1 & 255;

        $l3 = (long) $s2;

        l5 = $l4 + $l3;

        i6 = i6 + 1;

        goto label1;

     label2:
        return l5;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was not a valid MAC address");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }
}
