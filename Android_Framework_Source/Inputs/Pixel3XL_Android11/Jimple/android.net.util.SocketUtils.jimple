public final class android.net.util.SocketUtils extends java.lang.Object
{

    private void <init>()
    {
        android.net.util.SocketUtils r0;

        r0 := @this: android.net.util.SocketUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void bindSocketToInterface(java.io.FileDescriptor, java.lang.String) throws android.system.ErrnoException
    {
        java.io.FileDescriptor r0;
        java.lang.String r1;
        int $i0, $i1;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.lang.String;

        $i1 = <android.system.OsConstants: int SOL_SOCKET>;

        $i0 = <android.system.OsConstants: int SO_BINDTODEVICE>;

        staticinvoke <android.system.Os: void setsockoptIfreq(java.io.FileDescriptor,int,int,java.lang.String)>(r0, $i1, $i0, r1);

        staticinvoke <android.net.NetworkUtils: boolean protectFromVpn(java.io.FileDescriptor)>(r0);

        return;
    }

    public static void closeSocket(java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0;

        r0 := @parameter0: java.io.FileDescriptor;

        staticinvoke <libcore.io.IoBridge: void closeAndSignalBlockedThreads(java.io.FileDescriptor)>(r0);

        return;
    }

    public static java.net.SocketAddress makeNetlinkSocketAddress(int, int)
    {
        int i0, i1;
        android.system.NetlinkSocketAddress r1;
        java.net.SocketAddress r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = new android.system.NetlinkSocketAddress;

        specialinvoke r1.<android.system.NetlinkSocketAddress: void <init>(int,int)>(i0, i1);

        r2 = (java.net.SocketAddress) r1;

        return r2;
    }

    public static java.net.SocketAddress makePacketSocketAddress(int, int)
    {
        int i0, i1;
        android.system.PacketSocketAddress r1;
        java.net.SocketAddress r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = new android.system.PacketSocketAddress;

        specialinvoke r1.<android.system.PacketSocketAddress: void <init>(int,int,byte[])>(i0, i1, null);

        r2 = (java.net.SocketAddress) r1;

        return r2;
    }

    public static java.net.SocketAddress makePacketSocketAddress(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        android.system.PacketSocketAddress r2;
        java.net.SocketAddress r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        r2 = new android.system.PacketSocketAddress;

        specialinvoke r2.<android.system.PacketSocketAddress: void <init>(int,int,byte[])>(i0, i1, r0);

        r3 = (java.net.SocketAddress) r2;

        return r3;
    }

    public static java.net.SocketAddress makePacketSocketAddress(int, byte[])
    {
        int i0;
        byte[] r0;
        android.system.PacketSocketAddress r2;
        java.net.SocketAddress r3;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        r2 = new android.system.PacketSocketAddress;

        specialinvoke r2.<android.system.PacketSocketAddress: void <init>(int,int,byte[])>(0, i0, r0);

        r3 = (java.net.SocketAddress) r2;

        return r3;
    }
}
