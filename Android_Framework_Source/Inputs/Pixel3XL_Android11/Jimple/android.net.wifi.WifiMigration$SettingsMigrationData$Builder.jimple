public final class android.net.wifi.WifiMigration$SettingsMigrationData$Builder extends java.lang.Object
{
    private java.lang.String mP2pDeviceName;
    private boolean mP2pFactoryResetPending;
    private boolean mScanAlwaysAvailable;
    private boolean mScanThrottleEnabled;
    private boolean mSoftApTimeoutEnabled;
    private boolean mVerboseLoggingEnabled;
    private boolean mWakeupEnabled;

    public void <init>()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData$Builder r0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.net.wifi.WifiMigration$SettingsMigrationData build()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData$Builder r0;
        android.net.wifi.WifiMigration$SettingsMigrationData $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r2;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData$Builder;

        $r1 = new android.net.wifi.WifiMigration$SettingsMigrationData;

        $z5 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mScanAlwaysAvailable>;

        $z4 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mP2pFactoryResetPending>;

        $r2 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: java.lang.String mP2pDeviceName>;

        $z3 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mSoftApTimeoutEnabled>;

        $z2 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mWakeupEnabled>;

        $z1 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mScanThrottleEnabled>;

        $z0 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mVerboseLoggingEnabled>;

        specialinvoke $r1.<android.net.wifi.WifiMigration$SettingsMigrationData: void <init>(boolean,boolean,java.lang.String,boolean,boolean,boolean,boolean,android.net.wifi.WifiMigration$1)>($z5, $z4, $r2, $z3, $z2, $z1, $z0, null);

        return $r1;
    }

    public android.net.wifi.WifiMigration$SettingsMigrationData$Builder setP2pDeviceName(java.lang.String)
    {
        android.net.wifi.WifiMigration$SettingsMigrationData$Builder r0;
        java.lang.String r1;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: java.lang.String mP2pDeviceName> = r1;

        return r0;
    }

    public android.net.wifi.WifiMigration$SettingsMigrationData$Builder setP2pFactoryResetPending(boolean)
    {
        android.net.wifi.WifiMigration$SettingsMigrationData$Builder r0;
        boolean z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData$Builder;

        z0 := @parameter0: boolean;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mP2pFactoryResetPending> = z0;

        return r0;
    }

    public android.net.wifi.WifiMigration$SettingsMigrationData$Builder setScanAlwaysAvailable(boolean)
    {
        android.net.wifi.WifiMigration$SettingsMigrationData$Builder r0;
        boolean z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData$Builder;

        z0 := @parameter0: boolean;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mScanAlwaysAvailable> = z0;

        return r0;
    }

    public android.net.wifi.WifiMigration$SettingsMigrationData$Builder setScanThrottleEnabled(boolean)
    {
        android.net.wifi.WifiMigration$SettingsMigrationData$Builder r0;
        boolean z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData$Builder;

        z0 := @parameter0: boolean;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mScanThrottleEnabled> = z0;

        return r0;
    }

    public android.net.wifi.WifiMigration$SettingsMigrationData$Builder setSoftApTimeoutEnabled(boolean)
    {
        android.net.wifi.WifiMigration$SettingsMigrationData$Builder r0;
        boolean z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData$Builder;

        z0 := @parameter0: boolean;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mSoftApTimeoutEnabled> = z0;

        return r0;
    }

    public android.net.wifi.WifiMigration$SettingsMigrationData$Builder setVerboseLoggingEnabled(boolean)
    {
        android.net.wifi.WifiMigration$SettingsMigrationData$Builder r0;
        boolean z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData$Builder;

        z0 := @parameter0: boolean;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mVerboseLoggingEnabled> = z0;

        return r0;
    }

    public android.net.wifi.WifiMigration$SettingsMigrationData$Builder setWakeUpEnabled(boolean)
    {
        android.net.wifi.WifiMigration$SettingsMigrationData$Builder r0;
        boolean z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData$Builder;

        z0 := @parameter0: boolean;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData$Builder: boolean mWakeupEnabled> = z0;

        return r0;
    }
}
