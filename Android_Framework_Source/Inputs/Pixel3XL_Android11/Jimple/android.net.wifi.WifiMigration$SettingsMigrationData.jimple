public final class android.net.wifi.WifiMigration$SettingsMigrationData extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private final java.lang.String mP2pDeviceName;
    private final boolean mP2pFactoryResetPending;
    private final boolean mScanAlwaysAvailable;
    private final boolean mScanThrottleEnabled;
    private final boolean mSoftApTimeoutEnabled;
    private final boolean mVerboseLoggingEnabled;
    private final boolean mWakeupEnabled;

    static void <clinit>()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData$1 $r0;

        $r0 = new android.net.wifi.WifiMigration$SettingsMigrationData$1;

        specialinvoke $r0.<android.net.wifi.WifiMigration$SettingsMigrationData$1: void <init>()>();

        <android.net.wifi.WifiMigration$SettingsMigrationData: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(boolean, boolean, java.lang.String, boolean, boolean, boolean, boolean)
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;
        boolean z0, z1, z2, z3, z4, z5;
        java.lang.String r1;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        z4 := @parameter5: boolean;

        z5 := @parameter6: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mScanAlwaysAvailable> = z0;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mP2pFactoryResetPending> = z1;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData: java.lang.String mP2pDeviceName> = r1;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mSoftApTimeoutEnabled> = z2;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mWakeupEnabled> = z3;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mScanThrottleEnabled> = z4;

        r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mVerboseLoggingEnabled> = z5;

        return;
    }

    void <init>(boolean, boolean, java.lang.String, boolean, boolean, boolean, boolean, android.net.wifi.WifiMigration$1)
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;
        boolean z0, z1, z2, z3, z4, z5;
        java.lang.String r1;
        android.net.wifi.WifiMigration$1 r2;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        z4 := @parameter5: boolean;

        z5 := @parameter6: boolean;

        r2 := @parameter7: android.net.wifi.WifiMigration$1;

        specialinvoke r0.<android.net.wifi.WifiMigration$SettingsMigrationData: void <init>(boolean,boolean,java.lang.String,boolean,boolean,boolean,boolean)>(z0, z1, r1, z2, z3, z4, z5);

        return;
    }

    public int describeContents()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        return 0;
    }

    public java.lang.String getP2pDeviceName()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;
        java.lang.String $r1;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        $r1 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: java.lang.String mP2pDeviceName>;

        return $r1;
    }

    public boolean isP2pFactoryResetPending()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        $z0 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mP2pFactoryResetPending>;

        return $z0;
    }

    public boolean isScanAlwaysAvailable()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        $z0 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mScanAlwaysAvailable>;

        return $z0;
    }

    public boolean isScanThrottleEnabled()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        $z0 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mScanThrottleEnabled>;

        return $z0;
    }

    public boolean isSoftApTimeoutEnabled()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        $z0 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mSoftApTimeoutEnabled>;

        return $z0;
    }

    public boolean isVerboseLoggingEnabled()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        $z0 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mVerboseLoggingEnabled>;

        return $z0;
    }

    public boolean isWakeUpEnabled()
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        $z0 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mWakeupEnabled>;

        return $z0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.wifi.WifiMigration$SettingsMigrationData r0;
        android.os.Parcel r1;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r2;

        r0 := @this: android.net.wifi.WifiMigration$SettingsMigrationData;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $z0 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mScanAlwaysAvailable>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z0);

        $z1 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mP2pFactoryResetPending>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z1);

        $r2 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: java.lang.String mP2pDeviceName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $z2 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mSoftApTimeoutEnabled>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z2);

        $z3 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mWakeupEnabled>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z3);

        $z4 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mScanThrottleEnabled>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z4);

        $z5 = r0.<android.net.wifi.WifiMigration$SettingsMigrationData: boolean mVerboseLoggingEnabled>;

        virtualinvoke r1.<android.os.Parcel: void writeBoolean(boolean)>($z5);

        return;
    }
}
