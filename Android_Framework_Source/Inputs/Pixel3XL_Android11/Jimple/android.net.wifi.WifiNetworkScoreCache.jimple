public class android.net.wifi.WifiNetworkScoreCache extends android.net.INetworkScoreCache$Stub
{
    private static final boolean DBG;
    private static final int DEFAULT_MAX_CACHE_SIZE;
    public static final int INVALID_NETWORK_SCORE;
    private static final java.lang.String TAG;
    private final android.util.LruCache mCache;
    private final android.content.Context mContext;
    private android.net.wifi.WifiNetworkScoreCache$CacheListener mListener;
    private final java.lang.Object mLock;

    static void <clinit>()
    {
        boolean $z0;

        <android.net.wifi.WifiNetworkScoreCache: java.lang.String TAG> = "WifiNetworkScoreCache";

        <android.net.wifi.WifiNetworkScoreCache: int INVALID_NETWORK_SCORE> = -128;

        <android.net.wifi.WifiNetworkScoreCache: int DEFAULT_MAX_CACHE_SIZE> = 100;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("WifiNetworkScoreCache", 3);

        <android.net.wifi.WifiNetworkScoreCache: boolean DBG> = $z0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.content.Context r1;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.net.wifi.WifiNetworkScoreCache: void <init>(android.content.Context,android.net.wifi.WifiNetworkScoreCache$CacheListener)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.net.wifi.WifiNetworkScoreCache$CacheListener)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.content.Context r1;
        android.net.wifi.WifiNetworkScoreCache$CacheListener r2;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.wifi.WifiNetworkScoreCache$CacheListener;

        specialinvoke r0.<android.net.wifi.WifiNetworkScoreCache: void <init>(android.content.Context,android.net.wifi.WifiNetworkScoreCache$CacheListener,int)>(r1, r2, 100);

        return;
    }

    public void <init>(android.content.Context, android.net.wifi.WifiNetworkScoreCache$CacheListener, int)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.content.Context r1, $r4;
        android.net.wifi.WifiNetworkScoreCache$CacheListener r2;
        int i0;
        java.lang.Object $r3;
        android.util.LruCache $r5;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.wifi.WifiNetworkScoreCache$CacheListener;

        i0 := @parameter2: int;

        specialinvoke r0.<android.net.INetworkScoreCache$Stub: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.Object mLock> = $r3;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.net.wifi.WifiNetworkScoreCache: android.content.Context mContext> = $r4;

        r0.<android.net.wifi.WifiNetworkScoreCache: android.net.wifi.WifiNetworkScoreCache$CacheListener mListener> = r2;

        $r5 = new android.util.LruCache;

        specialinvoke $r5.<android.util.LruCache: void <init>(int)>(i0);

        r0.<android.net.wifi.WifiNetworkScoreCache: android.util.LruCache mCache> = $r5;

        return;
    }

    private java.lang.String buildNetworkKey(android.net.NetworkKey)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.net.NetworkKey r1;
        java.lang.String r2, $r6, $r10, r12;
        android.net.WifiKey $r3, $r4, $r5, $r9;
        int $i0;
        java.lang.StringBuilder $r7;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 := @parameter0: android.net.NetworkKey;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = r1.<android.net.NetworkKey: android.net.WifiKey wifiKey>;

        if $r3 != null goto label2;

        return null;

     label2:
        $i0 = r1.<android.net.NetworkKey: int type>;

        if $i0 != 1 goto label5;

        $r4 = r1.<android.net.NetworkKey: android.net.WifiKey wifiKey>;

        r2 = $r4.<android.net.WifiKey: java.lang.String ssid>;

        if r2 != null goto label3;

        return null;

     label3:
        r12 = r2;

        $r5 = r1.<android.net.NetworkKey: android.net.WifiKey wifiKey>;

        $r6 = $r5.<android.net.WifiKey: java.lang.String bssid>;

        if $r6 == null goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = r1.<android.net.NetworkKey: android.net.WifiKey wifiKey>;

        $r10 = $r9.<android.net.WifiKey: java.lang.String bssid>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return r12;

     label5:
        return null;
    }

    private java.lang.String buildNetworkKey(android.net.ScoredNetwork)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.net.ScoredNetwork r1;
        android.net.NetworkKey $r2;
        java.lang.String $r3;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 := @parameter0: android.net.ScoredNetwork;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = r1.<android.net.ScoredNetwork: android.net.NetworkKey networkKey>;

        $r3 = specialinvoke r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.String buildNetworkKey(android.net.NetworkKey)>($r2);

        return $r3;
    }

    private java.lang.String buildNetworkKey(android.net.wifi.ScanResult)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.net.wifi.ScanResult r1;
        java.lang.String $r3, $r5, $r8, $r9, $r10;
        java.lang.StringBuilder $r4;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 := @parameter0: android.net.wifi.ScanResult;

        if r1 == null goto label3;

        $r3 = r1.<android.net.wifi.ScanResult: java.lang.String SSID>;

        if $r3 != null goto label1;

        goto label3;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("\"");

        $r5 = r1.<android.net.wifi.ScanResult: java.lang.String SSID>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r8 = r1.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        if $r8 == null goto label2;

        $r10 = r1.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label2:
        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label3:
        return null;
    }

    public final void clearScores()
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        java.lang.Object r1;
        android.util.LruCache $r3;
        java.lang.Throwable $r4;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 = r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.wifi.WifiNetworkScoreCache: android.util.LruCache mCache>;

        virtualinvoke $r3.<android.util.LruCache: void evictAll()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected final void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.content.Context $r1, $r3, $r10;
        java.lang.Object[] $r2;
        java.lang.String $r4, $r6, $r16, $r20, $r24;
        int $i0, $i1;
        java.lang.Integer $r5;
        android.util.LruCache $r7;
        java.util.Map $r8;
        java.util.Collection $r9;
        boolean $z0, $z1;
        java.lang.Object $r11, $r14, $r21, r29;
        android.net.wifi.WifiManager $r12;
        java.util.List $r13;
        java.lang.Throwable $r25;
        java.io.FileDescriptor r26;
        java.io.PrintWriter r27;
        java.lang.String[] r28;
        java.util.Iterator r30, r33;
        android.net.ScoredNetwork r31;
        java.lang.StringBuilder r32, r35;
        android.net.wifi.ScanResult r34;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r26 := @parameter0: java.io.FileDescriptor;

        r27 := @parameter1: java.io.PrintWriter;

        r28 := @parameter2: java.lang.String[];

        $r1 = r0.<android.net.wifi.WifiNetworkScoreCache: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "WifiNetworkScoreCache");

        $r2 = newarray (java.lang.Object)[2];

        $r3 = r0.<android.net.wifi.WifiNetworkScoreCache: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r2[0] = $r4;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("WifiNetworkScoreCache (%s/%d)", $r2);

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>("  All score curves:");

        r29 = r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.Object mLock>;

        entermonitor r29;

     label01:
        $r7 = r0.<android.net.wifi.WifiNetworkScoreCache: android.util.LruCache mCache>;

        $r8 = virtualinvoke $r7.<android.util.LruCache: java.util.Map snapshot()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();

        r30 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r21 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (android.net.ScoredNetwork) $r21;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        $r24 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>($r24);

     label03:
        goto label02;

     label04:
        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>("  Network scores for latest ScanResults:");

        $r10 = r0.<android.net.wifi.WifiNetworkScoreCache: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r12 = (android.net.wifi.WifiManager) $r11;

        $r13 = virtualinvoke $r12.<android.net.wifi.WifiManager: java.util.List getScanResults()>();

        r33 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r14 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r34 = (android.net.wifi.ScanResult) $r14;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r16 = specialinvoke r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.String buildNetworkKey(android.net.wifi.ScanResult)>(r34);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i1 = virtualinvoke r0.<android.net.wifi.WifiNetworkScoreCache: int getNetworkScore(android.net.wifi.ScanResult)>(r34);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r20 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>($r20);

     label06:
        goto label05;

     label07:
        exitmonitor r29;

     label08:
        return;

     label09:
        $r25 := @caughtexception;

     label10:
        exitmonitor r29;

     label11:
        throw $r25;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean getMeteredHint(android.net.wifi.ScanResult)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        boolean $z0, z1;
        android.net.wifi.ScanResult r1;
        android.net.ScoredNetwork r2;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 := @parameter0: android.net.wifi.ScanResult;

        r2 = virtualinvoke r0.<android.net.wifi.WifiNetworkScoreCache: android.net.ScoredNetwork getScoredNetwork(android.net.wifi.ScanResult)>(r1);

        if r2 == null goto label1;

        $z0 = r2.<android.net.ScoredNetwork: boolean meteredHint>;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public int getNetworkScore(android.net.wifi.ScanResult)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.net.wifi.ScanResult r1;
        android.net.ScoredNetwork r2;
        android.net.RssiCurve $r4, $r5;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r6;
        android.net.NetworkKey $r8;
        java.lang.String $r11, $r15;
        byte b4, b5;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 := @parameter0: android.net.wifi.ScanResult;

        r2 = virtualinvoke r0.<android.net.wifi.WifiNetworkScoreCache: android.net.ScoredNetwork getScoredNetwork(android.net.wifi.ScanResult)>(r1);

        b4 = -128;

        if r2 == null goto label1;

        b4 = -128;

        $r4 = r2.<android.net.ScoredNetwork: android.net.RssiCurve rssiCurve>;

        if $r4 == null goto label1;

        $r5 = r2.<android.net.ScoredNetwork: android.net.RssiCurve rssiCurve>;

        $i0 = r1.<android.net.wifi.ScanResult: int level>;

        b5 = virtualinvoke $r5.<android.net.RssiCurve: byte lookupScore(int)>($i0);

        b4 = b5;

        $z0 = <android.net.wifi.WifiNetworkScoreCache: boolean DBG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getNetworkScore found scored network ");

        $r8 = r2.<android.net.ScoredNetwork: android.net.NetworkKey networkKey>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" score ");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(b5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" RSSI ");

        $i1 = r1.<android.net.wifi.ScanResult: int level>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNetworkScoreCache", $r15);

        b4 = b5;

     label1:
        return b4;
    }

    public int getNetworkScore(android.net.wifi.ScanResult, boolean)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.net.wifi.ScanResult r1;
        boolean z0, $z1;
        android.net.ScoredNetwork r2;
        android.net.RssiCurve $r4, $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r6;
        android.net.NetworkKey $r8;
        java.lang.String $r11, $r17;
        byte b4, b5;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 := @parameter0: android.net.wifi.ScanResult;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<android.net.wifi.WifiNetworkScoreCache: android.net.ScoredNetwork getScoredNetwork(android.net.wifi.ScanResult)>(r1);

        b4 = -128;

        if r2 == null goto label1;

        b4 = -128;

        $r4 = r2.<android.net.ScoredNetwork: android.net.RssiCurve rssiCurve>;

        if $r4 == null goto label1;

        $r5 = r2.<android.net.ScoredNetwork: android.net.RssiCurve rssiCurve>;

        $i0 = r1.<android.net.wifi.ScanResult: int level>;

        b5 = virtualinvoke $r5.<android.net.RssiCurve: byte lookupScore(int,boolean)>($i0, z0);

        b4 = b5;

        $z1 = <android.net.wifi.WifiNetworkScoreCache: boolean DBG>;

        if $z1 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getNetworkScore found scored network ");

        $r8 = r2.<android.net.ScoredNetwork: android.net.NetworkKey networkKey>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" score ");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(b5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" RSSI ");

        $i1 = r1.<android.net.wifi.ScanResult: int level>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isActiveNetwork ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r17 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNetworkScoreCache", $r17);

        b4 = b5;

     label1:
        return b4;
    }

    public android.net.ScoredNetwork getScoredNetwork(android.net.NetworkKey)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.util.LruCache $r1;
        java.lang.Object $r2, r11;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r9;
        java.lang.Throwable $r7;
        android.net.NetworkKey r8;
        android.net.ScoredNetwork r12;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r8 := @parameter0: android.net.NetworkKey;

        r9 = specialinvoke r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.String buildNetworkKey(android.net.NetworkKey)>(r8);

        if r9 != null goto label2;

        $z0 = <android.net.wifi.WifiNetworkScoreCache: boolean DBG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not build key string for Network Key: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNetworkScoreCache", $r6);

     label1:
        return null;

     label2:
        r11 = r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.Object mLock>;

        entermonitor r11;

     label3:
        $r1 = r0.<android.net.wifi.WifiNetworkScoreCache: android.util.LruCache mCache>;

        $r2 = virtualinvoke $r1.<android.util.LruCache: java.lang.Object get(java.lang.Object)>(r9);

        r12 = (android.net.ScoredNetwork) $r2;

        exitmonitor r11;

     label4:
        return r12;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r11;

     label7:
        throw $r7;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.net.ScoredNetwork getScoredNetwork(android.net.wifi.ScanResult)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.util.LruCache $r1;
        java.lang.Object $r2, r6;
        java.lang.Throwable $r3;
        android.net.wifi.ScanResult r4;
        java.lang.String r5;
        android.net.ScoredNetwork r7;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r4 := @parameter0: android.net.wifi.ScanResult;

        r5 = specialinvoke r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.String buildNetworkKey(android.net.wifi.ScanResult)>(r4);

        if r5 != null goto label1;

        return null;

     label1:
        r6 = r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.Object mLock>;

        entermonitor r6;

     label2:
        $r1 = r0.<android.net.wifi.WifiNetworkScoreCache: android.util.LruCache mCache>;

        $r2 = virtualinvoke $r1.<android.util.LruCache: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (android.net.ScoredNetwork) $r2;

        exitmonitor r6;

     label3:
        return r7;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r6;

     label6:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean hasScoreCurve(android.net.wifi.ScanResult)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.net.RssiCurve $r1;
        android.net.wifi.ScanResult r2;
        android.net.ScoredNetwork r3;
        boolean z0;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r2 := @parameter0: android.net.wifi.ScanResult;

        r3 = virtualinvoke r0.<android.net.wifi.WifiNetworkScoreCache: android.net.ScoredNetwork getScoredNetwork(android.net.wifi.ScanResult)>(r2);

        if r3 == null goto label1;

        $r1 = r3.<android.net.ScoredNetwork: android.net.RssiCurve rssiCurve>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isScoredNetwork(android.net.wifi.ScanResult)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        android.net.wifi.ScanResult r1;
        android.net.ScoredNetwork $r2;
        boolean z0;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 := @parameter0: android.net.wifi.ScanResult;

        $r2 = virtualinvoke r0.<android.net.wifi.WifiNetworkScoreCache: android.net.ScoredNetwork getScoredNetwork(android.net.wifi.ScanResult)>(r1);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void registerListener(android.net.wifi.WifiNetworkScoreCache$CacheListener)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        android.net.wifi.WifiNetworkScoreCache$CacheListener r3;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r3 := @parameter0: android.net.wifi.WifiNetworkScoreCache$CacheListener;

        r1 = r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.net.wifi.WifiNetworkScoreCache: android.net.wifi.WifiNetworkScoreCache$CacheListener mListener> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterListener()
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r1 = r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<android.net.wifi.WifiNetworkScoreCache: android.net.wifi.WifiNetworkScoreCache$CacheListener mListener> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void updateScores(java.util.List)
    {
        android.net.wifi.WifiNetworkScoreCache r0;
        java.util.Iterator r1;
        android.net.ScoredNetwork r2;
        boolean $z0, $z1, $z2, z3, $z4;
        android.net.wifi.WifiNetworkScoreCache$CacheListener $r3, $r4;
        java.lang.Object $r5, r18;
        android.util.LruCache $r6;
        java.lang.String $r10, $r14, r19;
        java.lang.StringBuilder $r11, r20;
        int $i1;
        java.lang.Throwable $r15;
        java.util.List r16;

        r0 := @this: android.net.wifi.WifiNetworkScoreCache;

        r16 := @parameter0: java.util.List;

        if r16 == null goto label18;

        $z0 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        goto label18;

     label01:
        $z1 = <android.net.wifi.WifiNetworkScoreCache: boolean DBG>;

        if $z1 == 0 goto label02;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateScores list size=");

        $i1 = interfaceinvoke r16.<java.util.List: int size()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNetworkScoreCache", $r14);

     label02:
        z3 = 0;

        r18 = r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.Object mLock>;

        entermonitor r18;

     label03:
        r1 = interfaceinvoke r16.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.ScoredNetwork) $r5;

        r19 = specialinvoke r0.<android.net.wifi.WifiNetworkScoreCache: java.lang.String buildNetworkKey(android.net.ScoredNetwork)>(r2);

     label05:
        if r19 != null goto label08;

     label06:
        $z2 = <android.net.wifi.WifiNetworkScoreCache: boolean DBG>;

        if $z2 == 0 goto label04;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to build network key for ScoredNetwork");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNetworkScoreCache", $r10);

     label07:
        goto label04;

     label08:
        $r6 = r0.<android.net.wifi.WifiNetworkScoreCache: android.util.LruCache mCache>;

        virtualinvoke $r6.<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, r2);

     label09:
        z3 = 1;

        goto label04;

     label10:
        $r3 = r0.<android.net.wifi.WifiNetworkScoreCache: android.net.wifi.WifiNetworkScoreCache$CacheListener mListener>;

        if $r3 == null goto label13;

     label11:
        if z3 == 0 goto label13;

     label12:
        $r4 = r0.<android.net.wifi.WifiNetworkScoreCache: android.net.wifi.WifiNetworkScoreCache$CacheListener mListener>;

        virtualinvoke $r4.<android.net.wifi.WifiNetworkScoreCache$CacheListener: void post(java.util.List)>(r16);

     label13:
        exitmonitor r18;

     label14:
        return;

     label15:
        $r15 := @caughtexception;

     label16:
        exitmonitor r18;

     label17:
        throw $r15;

     label18:
        return;

        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }
}
