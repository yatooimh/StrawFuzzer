class android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy extends java.lang.Object implements android.net.wifi.nl80211.IWifiScannerImpl
{
    public static android.net.wifi.nl80211.IWifiScannerImpl sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void abortScan() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.wifi.nl80211.IWifiScannerImpl $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWifiScannerImpl");

        $r4 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.wifi.nl80211.IWifiScannerImpl: void abortScan()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        $r1 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        return "android.net.wifi.nl80211.IWifiScannerImpl";
    }

    public android.net.wifi.nl80211.NativeScanResult[] getPnoScanResults() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.net.wifi.nl80211.IWifiScannerImpl $r6, $r7;
        java.lang.Throwable $r8;
        android.net.wifi.nl80211.NativeScanResult[] r9, r10;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWifiScannerImpl");

        $r3 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.wifi.nl80211.IWifiScannerImpl: android.net.wifi.nl80211.NativeScanResult[] getPnoScanResults()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.net.wifi.nl80211.NativeScanResult: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.net.wifi.nl80211.NativeScanResult[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.wifi.nl80211.NativeScanResult[] getScanResults() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        android.net.wifi.nl80211.IWifiScannerImpl $r6, $r7;
        java.lang.Throwable $r8;
        android.net.wifi.nl80211.NativeScanResult[] r9, r10;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWifiScannerImpl");

        $r3 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.net.wifi.nl80211.IWifiScannerImpl: android.net.wifi.nl80211.NativeScanResult[] getScanResults()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = <android.net.wifi.nl80211.NativeScanResult: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r10 = (android.net.wifi.nl80211.NativeScanResult[]) $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean scan(android.net.wifi.nl80211.SingleScanSettings) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.net.wifi.nl80211.IWifiScannerImpl $r4, $r5;
        java.lang.Throwable $r6;
        android.net.wifi.nl80211.SingleScanSettings r7;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r7 := @parameter0: android.net.wifi.nl80211.SingleScanSettings;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWifiScannerImpl");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.wifi.nl80211.SingleScanSettings: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.wifi.nl80211.IWifiScannerImpl: boolean scan(android.net.wifi.nl80211.SingleScanSettings)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public boolean startPnoScan(android.net.wifi.nl80211.PnoSettings) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        android.os.IBinder $r3;
        boolean $z0, z1, z2;
        android.net.wifi.nl80211.IWifiScannerImpl $r4, $r5;
        java.lang.Throwable $r6;
        android.net.wifi.nl80211.PnoSettings r7;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r7 := @parameter0: android.net.wifi.nl80211.PnoSettings;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWifiScannerImpl");

     label02:
        z1 = 1;

        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.net.wifi.nl80211.PnoSettings: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.wifi.nl80211.IWifiScannerImpl: boolean startPnoScan(android.net.wifi.nl80211.PnoSettings)>(r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        if i0 == 0 goto label10;

        goto label11;

     label10:
        z1 = 0;

     label11:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label12:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public boolean stopPnoScan() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.net.wifi.nl80211.IWifiScannerImpl $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWifiScannerImpl");

        r6 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.net.wifi.nl80211.IWifiScannerImpl: boolean stopPnoScan()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void subscribePnoScanEvents(android.net.wifi.nl80211.IPnoScanEvent) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.net.wifi.nl80211.IWifiScannerImpl $r3, $r4;
        java.lang.Throwable $r5;
        android.net.wifi.nl80211.IPnoScanEvent r6;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r6 := @parameter0: android.net.wifi.nl80211.IPnoScanEvent;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWifiScannerImpl");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.net.wifi.nl80211.IPnoScanEvent: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.wifi.nl80211.IWifiScannerImpl: void subscribePnoScanEvents(android.net.wifi.nl80211.IPnoScanEvent)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void subscribeScanEvents(android.net.wifi.nl80211.IScanEvent) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.net.wifi.nl80211.IWifiScannerImpl $r3, $r4;
        java.lang.Throwable $r5;
        android.net.wifi.nl80211.IScanEvent r6;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r6 := @parameter0: android.net.wifi.nl80211.IScanEvent;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWifiScannerImpl");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.net.wifi.nl80211.IScanEvent: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.wifi.nl80211.IWifiScannerImpl: void subscribeScanEvents(android.net.wifi.nl80211.IScanEvent)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void unsubscribePnoScanEvents() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.wifi.nl80211.IWifiScannerImpl $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWifiScannerImpl");

        $r3 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.wifi.nl80211.IWifiScannerImpl: void unsubscribePnoScanEvents()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void unsubscribeScanEvents() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.wifi.nl80211.IWifiScannerImpl $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWifiScannerImpl");

        $r3 = r0.<android.net.wifi.nl80211.IWifiScannerImpl$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWifiScannerImpl$Stub: android.net.wifi.nl80211.IWifiScannerImpl getDefaultImpl()>();

        interfaceinvoke $r5.<android.net.wifi.nl80211.IWifiScannerImpl: void unsubscribeScanEvents()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
