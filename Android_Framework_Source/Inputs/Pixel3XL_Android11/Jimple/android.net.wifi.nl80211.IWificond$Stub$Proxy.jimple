class android.net.wifi.nl80211.IWificond$Stub$Proxy extends java.lang.Object implements android.net.wifi.nl80211.IWificond
{
    public static android.net.wifi.nl80211.IWificond sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public java.util.List GetApInterfaces() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;
        java.util.ArrayList r8;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        $r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.wifi.nl80211.IWificond: java.util.List GetApInterfaces()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createBinderArrayList()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List GetClientInterfaces() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r4, $r5;
        java.lang.Throwable $r6;
        java.util.List r7;
        java.util.ArrayList r8;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        $r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.wifi.nl80211.IWificond: java.util.List GetClientInterfaces()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createBinderArrayList()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void RegisterCallback(android.net.wifi.nl80211.IInterfaceEventCallback) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r3, $r4;
        java.lang.Throwable $r5;
        android.net.wifi.nl80211.IInterfaceEventCallback r6;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r6 := @parameter0: android.net.wifi.nl80211.IInterfaceEventCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.net.wifi.nl80211.IInterfaceEventCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.wifi.nl80211.IWificond: void RegisterCallback(android.net.wifi.nl80211.IInterfaceEventCallback)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void UnregisterCallback(android.net.wifi.nl80211.IInterfaceEventCallback) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1;
        android.os.IBinder $r2, r7;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r3, $r4;
        java.lang.Throwable $r5;
        android.net.wifi.nl80211.IInterfaceEventCallback r6;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r6 := @parameter0: android.net.wifi.nl80211.IInterfaceEventCallback;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

     label2:
        if r6 == null goto label5;

     label3:
        r7 = interfaceinvoke r6.<android.net.wifi.nl80211.IInterfaceEventCallback: android.os.IBinder asBinder()>();

     label4:
        goto label6;

     label5:
        r7 = null;

     label6:
        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r2 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r2.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, null, 1);

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r3 == null goto label8;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        interfaceinvoke $r4.<android.net.wifi.nl80211.IWificond: void UnregisterCallback(android.net.wifi.nl80211.IInterfaceEventCallback)>(r6);

     label7:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label9:
        $r5 := @caughtexception;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public android.os.IBinder asBinder()
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        $r1 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.net.wifi.nl80211.IApInterface createApInterface(java.lang.String) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.net.wifi.nl80211.IApInterface r9, r10;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.net.wifi.nl80211.IWificond: android.net.wifi.nl80211.IApInterface createApInterface(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r10 = staticinvoke <android.net.wifi.nl80211.IApInterface$Stub: android.net.wifi.nl80211.IApInterface asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.wifi.nl80211.IClientInterface createClientInterface(java.lang.String) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3, $r4;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.String r8;
        android.net.wifi.nl80211.IClientInterface r9, r10;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r8 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r8);

        $r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        r9 = interfaceinvoke $r6.<android.net.wifi.nl80211.IWificond: android.net.wifi.nl80211.IClientInterface createClientInterface(java.lang.String)>(r8);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r4 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r10 = staticinvoke <android.net.wifi.nl80211.IClientInterface$Stub: android.net.wifi.nl80211.IClientInterface asInterface(android.os.IBinder)>($r4);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int[] getAvailable2gChannels() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        $r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.wifi.nl80211.IWificond: int[] getAvailable2gChannels()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int[] getAvailable5gNonDFSChannels() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        $r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.wifi.nl80211.IWificond: int[] getAvailable5gNonDFSChannels()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int[] getAvailable6gChannels() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        $r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.wifi.nl80211.IWificond: int[] getAvailable6gChannels()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int[] getAvailableDFSChannels() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        $r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.net.wifi.nl80211.IWificond: int[] getAvailableDFSChannels()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.net.wifi.nl80211.DeviceWiphyCapabilities getDeviceWiphyCapabilities(java.lang.String) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.net.wifi.nl80211.IWificond $r6, $r7;
        java.lang.Throwable $r8;
        java.lang.String r9;
        android.net.wifi.nl80211.DeviceWiphyCapabilities r10, r11;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r9 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r9);

        $r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.net.wifi.nl80211.IWificond: android.net.wifi.nl80211.DeviceWiphyCapabilities getDeviceWiphyCapabilities(java.lang.String)>(r9);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label5;

        $r4 = <android.net.wifi.nl80211.DeviceWiphyCapabilities: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.net.wifi.nl80211.DeviceWiphyCapabilities) $r5;

     label4:
        goto label6;

     label5:
        r11 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        return "android.net.wifi.nl80211.IWificond";
    }

    public boolean tearDownApInterface(java.lang.String) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.net.wifi.nl80211.IWificond $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.wifi.nl80211.IWificond: boolean tearDownApInterface(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean tearDownClientInterface(java.lang.String) throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder r3;
        int i0;
        boolean $z0, z1, z2;
        android.net.wifi.nl80211.IWificond $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r7 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        r3 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r4 == null goto label5;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        z2 = interfaceinvoke $r5.<android.net.wifi.nl80211.IWificond: boolean tearDownClientInterface(java.lang.String)>(r7);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public void tearDownInterfaces() throws android.os.RemoteException
    {
        android.net.wifi.nl80211.IWificond$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.net.wifi.nl80211.IWificond $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.net.wifi.nl80211.IWificond$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.wifi.nl80211.IWificond");

        $r4 = r0.<android.net.wifi.nl80211.IWificond$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.net.wifi.nl80211.IWificond$Stub: android.net.wifi.nl80211.IWificond getDefaultImpl()>();

        interfaceinvoke $r6.<android.net.wifi.nl80211.IWificond: void tearDownInterfaces()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
