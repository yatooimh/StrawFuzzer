public final class android.net.wifi.nl80211.NativeScanResult extends java.lang.Object implements android.os.Parcelable
{
    public static final int BSS_CAPABILITY_APSD;
    public static final int BSS_CAPABILITY_CF_POLLABLE;
    public static final int BSS_CAPABILITY_CF_POLL_REQUEST;
    public static final int BSS_CAPABILITY_CHANNEL_AGILITY;
    public static final int BSS_CAPABILITY_DELAYED_BLOCK_ACK;
    public static final int BSS_CAPABILITY_DSSS_OFDM;
    public static final int BSS_CAPABILITY_ESS;
    public static final int BSS_CAPABILITY_IBSS;
    public static final int BSS_CAPABILITY_IMMEDIATE_BLOCK_ACK;
    public static final int BSS_CAPABILITY_PBCC;
    public static final int BSS_CAPABILITY_PRIVACY;
    public static final int BSS_CAPABILITY_QOS;
    public static final int BSS_CAPABILITY_RADIO_MANAGEMENT;
    public static final int BSS_CAPABILITY_SHORT_PREAMBLE;
    public static final int BSS_CAPABILITY_SHORT_SLOT_TIME;
    public static final int BSS_CAPABILITY_SPECTRUM_MANAGEMENT;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String TAG;
    public boolean associated;
    public byte[] bssid;
    public int capability;
    public int frequency;
    public byte[] infoElement;
    public java.util.List radioChainInfos;
    public int signalMbm;
    public byte[] ssid;
    public long tsf;

    static void <clinit>()
    {
        android.net.wifi.nl80211.NativeScanResult$1 $r0;

        <android.net.wifi.nl80211.NativeScanResult: java.lang.String TAG> = "NativeScanResult";

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_SPECTRUM_MANAGEMENT> = 256;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_SHORT_SLOT_TIME> = 1024;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_SHORT_PREAMBLE> = 32;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_RADIO_MANAGEMENT> = 4096;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_QOS> = 512;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_PRIVACY> = 16;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_PBCC> = 64;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_IMMEDIATE_BLOCK_ACK> = 32768;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_IBSS> = 2;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_ESS> = 1;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_DSSS_OFDM> = 8192;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_DELAYED_BLOCK_ACK> = 16384;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_CHANNEL_AGILITY> = 128;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_CF_POLL_REQUEST> = 8;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_CF_POLLABLE> = 4;

        <android.net.wifi.nl80211.NativeScanResult: int BSS_CAPABILITY_APSD> = 2048;

        $r0 = new android.net.wifi.nl80211.NativeScanResult$1;

        specialinvoke $r0.<android.net.wifi.nl80211.NativeScanResult$1: void <init>()>();

        <android.net.wifi.nl80211.NativeScanResult: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.net.wifi.nl80211.NativeScanResult r0;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int describeContents()
    {
        android.net.wifi.nl80211.NativeScanResult r0;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        return 0;
    }

    public android.net.MacAddress getBssid()
    {
        android.net.wifi.nl80211.NativeScanResult r0;
        byte[] $r2, $r6;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, $r9;
        android.net.MacAddress r10;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

     label1:
        $r2 = r0.<android.net.wifi.nl80211.NativeScanResult: byte[] bssid>;

        r10 = staticinvoke <android.net.MacAddress: android.net.MacAddress fromBytes(byte[])>($r2);

     label2:
        return r10;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal argument ");

        $r6 = r0.<android.net.wifi.nl80211.NativeScanResult: byte[] bssid>;

        $r7 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NativeScanResult", $r9, $r3);

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public int getCapabilities()
    {
        android.net.wifi.nl80211.NativeScanResult r0;
        int $i0;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        $i0 = r0.<android.net.wifi.nl80211.NativeScanResult: int capability>;

        return $i0;
    }

    public int getFrequencyMhz()
    {
        android.net.wifi.nl80211.NativeScanResult r0;
        int $i0;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        $i0 = r0.<android.net.wifi.nl80211.NativeScanResult: int frequency>;

        return $i0;
    }

    public byte[] getInformationElements()
    {
        android.net.wifi.nl80211.NativeScanResult r0;
        byte[] $r1;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        $r1 = r0.<android.net.wifi.nl80211.NativeScanResult: byte[] infoElement>;

        return $r1;
    }

    public java.util.List getRadioChainInfos()
    {
        android.net.wifi.nl80211.NativeScanResult r0;
        java.util.List $r1;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        $r1 = r0.<android.net.wifi.nl80211.NativeScanResult: java.util.List radioChainInfos>;

        return $r1;
    }

    public int getSignalMbm()
    {
        android.net.wifi.nl80211.NativeScanResult r0;
        int $i0;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        $i0 = r0.<android.net.wifi.nl80211.NativeScanResult: int signalMbm>;

        return $i0;
    }

    public byte[] getSsid()
    {
        android.net.wifi.nl80211.NativeScanResult r0;
        byte[] $r1;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        $r1 = r0.<android.net.wifi.nl80211.NativeScanResult: byte[] ssid>;

        return $r1;
    }

    public long getTsf()
    {
        android.net.wifi.nl80211.NativeScanResult r0;
        long $l0;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        $l0 = r0.<android.net.wifi.nl80211.NativeScanResult: long tsf>;

        return $l0;
    }

    public boolean isAssociated()
    {
        android.net.wifi.nl80211.NativeScanResult r0;
        boolean $z0;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        $z0 = r0.<android.net.wifi.nl80211.NativeScanResult: boolean associated>;

        return $z0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.wifi.nl80211.NativeScanResult r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i4, i5;
        byte[] $r2, $r3, $r4;
        long $l3;
        boolean $z0;
        java.util.List $r5;

        r0 := @this: android.net.wifi.nl80211.NativeScanResult;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.net.wifi.nl80211.NativeScanResult: byte[] ssid>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r2);

        $r3 = r0.<android.net.wifi.nl80211.NativeScanResult: byte[] bssid>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r3);

        $r4 = r0.<android.net.wifi.nl80211.NativeScanResult: byte[] infoElement>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r4);

        $i1 = r0.<android.net.wifi.nl80211.NativeScanResult: int frequency>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.net.wifi.nl80211.NativeScanResult: int signalMbm>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $l3 = r0.<android.net.wifi.nl80211.NativeScanResult: long tsf>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $i4 = r0.<android.net.wifi.nl80211.NativeScanResult: int capability>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $z0 = r0.<android.net.wifi.nl80211.NativeScanResult: boolean associated>;

        i5 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        $r5 = r0.<android.net.wifi.nl80211.NativeScanResult: java.util.List radioChainInfos>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r5);

        return;
    }
}
