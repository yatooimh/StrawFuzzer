public final class android.net.wifi.nl80211.PnoNetwork extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private int[] mFrequencies;
    private boolean mIsHidden;
    private byte[] mSsid;

    static void <clinit>()
    {
        android.net.wifi.nl80211.PnoNetwork$1 $r0;

        $r0 = new android.net.wifi.nl80211.PnoNetwork$1;

        specialinvoke $r0.<android.net.wifi.nl80211.PnoNetwork$1: void <init>()>();

        <android.net.wifi.nl80211.PnoNetwork: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.net.wifi.nl80211.PnoNetwork r0;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean access$002(android.net.wifi.nl80211.PnoNetwork, boolean)
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        boolean z0;

        r0 := @parameter0: android.net.wifi.nl80211.PnoNetwork;

        z0 := @parameter1: boolean;

        r0.<android.net.wifi.nl80211.PnoNetwork: boolean mIsHidden> = z0;

        return z0;
    }

    static byte[] access$100(android.net.wifi.nl80211.PnoNetwork)
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        byte[] $r1;

        r0 := @parameter0: android.net.wifi.nl80211.PnoNetwork;

        $r1 = r0.<android.net.wifi.nl80211.PnoNetwork: byte[] mSsid>;

        return $r1;
    }

    static byte[] access$102(android.net.wifi.nl80211.PnoNetwork, byte[])
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        byte[] r1;

        r0 := @parameter0: android.net.wifi.nl80211.PnoNetwork;

        r1 := @parameter1: byte[];

        r0.<android.net.wifi.nl80211.PnoNetwork: byte[] mSsid> = r1;

        return r1;
    }

    static int[] access$200(android.net.wifi.nl80211.PnoNetwork)
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        int[] $r1;

        r0 := @parameter0: android.net.wifi.nl80211.PnoNetwork;

        $r1 = r0.<android.net.wifi.nl80211.PnoNetwork: int[] mFrequencies>;

        return $r1;
    }

    static int[] access$202(android.net.wifi.nl80211.PnoNetwork, int[])
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        int[] r1;

        r0 := @parameter0: android.net.wifi.nl80211.PnoNetwork;

        r1 := @parameter1: int[];

        r0.<android.net.wifi.nl80211.PnoNetwork: int[] mFrequencies> = r1;

        return r1;
    }

    public int describeContents()
    {
        android.net.wifi.nl80211.PnoNetwork r0;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.wifi.nl80211.PnoNetwork r0, r6;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        byte[] $r1, $r2;
        int[] $r3, $r4;
        java.lang.Object r5;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        r5 := @parameter0: java.lang.Object;

        z5 = 1;

        if r0 != r5 goto label1;

        return 1;

     label1:
        $z0 = r5 instanceof android.net.wifi.nl80211.PnoNetwork;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r6 = (android.net.wifi.nl80211.PnoNetwork) r5;

        $r2 = r0.<android.net.wifi.nl80211.PnoNetwork: byte[] mSsid>;

        $r1 = r6.<android.net.wifi.nl80211.PnoNetwork: byte[] mSsid>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r2, $r1);

        if $z1 == 0 goto label3;

        $r4 = r0.<android.net.wifi.nl80211.PnoNetwork: int[] mFrequencies>;

        $r3 = r6.<android.net.wifi.nl80211.PnoNetwork: int[] mFrequencies>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r4, $r3);

        if $z2 == 0 goto label3;

        $z4 = r0.<android.net.wifi.nl80211.PnoNetwork: boolean mIsHidden>;

        $z3 = r6.<android.net.wifi.nl80211.PnoNetwork: boolean mIsHidden>;

        if $z4 != $z3 goto label3;

        goto label4;

     label3:
        z5 = 0;

     label4:
        return z5;
    }

    public int[] getFrequenciesMhz()
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        int[] $r1;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        $r1 = r0.<android.net.wifi.nl80211.PnoNetwork: int[] mFrequencies>;

        return $r1;
    }

    public byte[] getSsid()
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        byte[] $r1;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        $r1 = r0.<android.net.wifi.nl80211.PnoNetwork: byte[] mSsid>;

        return $r1;
    }

    public int hashCode()
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        java.lang.Object[] $r1;
        boolean $z0;
        java.lang.Boolean $r2;
        byte[] $r3;
        int $i0, $i1, $i2;
        java.lang.Integer $r4, $r6;
        int[] $r5;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        $r1 = newarray (java.lang.Object)[3];

        $z0 = r0.<android.net.wifi.nl80211.PnoNetwork: boolean mIsHidden>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[0] = $r2;

        $r3 = r0.<android.net.wifi.nl80211.PnoNetwork: byte[] mSsid>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r4;

        $r5 = r0.<android.net.wifi.nl80211.PnoNetwork: int[] mFrequencies>;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[2] = $r6;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    public boolean isHidden()
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        boolean $z0;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        $z0 = r0.<android.net.wifi.nl80211.PnoNetwork: boolean mIsHidden>;

        return $z0;
    }

    public void setFrequenciesMhz(int[])
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        int[] r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        r1 := @parameter0: int[];

        if r1 == null goto label1;

        r0.<android.net.wifi.nl80211.PnoNetwork: int[] mFrequencies> = r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null argument");

        throw $r2;
    }

    public void setHidden(boolean)
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        boolean z0;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        z0 := @parameter0: boolean;

        r0.<android.net.wifi.nl80211.PnoNetwork: boolean mIsHidden> = z0;

        return;
    }

    public void setSsid(byte[])
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        byte[] r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        r1 := @parameter0: byte[];

        if r1 == null goto label1;

        r0.<android.net.wifi.nl80211.PnoNetwork: byte[] mSsid> = r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null argument");

        throw $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.wifi.nl80211.PnoNetwork r0;
        android.os.Parcel r1;
        int i0, i1;
        boolean $z0;
        byte[] $r2;
        int[] $r3;

        r0 := @this: android.net.wifi.nl80211.PnoNetwork;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $z0 = r0.<android.net.wifi.nl80211.PnoNetwork: boolean mIsHidden>;

        i1 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r2 = r0.<android.net.wifi.nl80211.PnoNetwork: byte[] mSsid>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r2);

        $r3 = r0.<android.net.wifi.nl80211.PnoNetwork: int[] mFrequencies>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r3);

        return;
    }
}
