public class android.nfc.INfcAdapter$Default extends java.lang.Object implements android.nfc.INfcAdapter
{

    public void <init>()
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addNfcUnlockHandler(android.nfc.INfcUnlockHandler, int[]) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        android.nfc.INfcUnlockHandler r1;
        int[] r2;

        r0 := @this: android.nfc.INfcAdapter$Default;

        r1 := @parameter0: android.nfc.INfcUnlockHandler;

        r2 := @parameter1: int[];

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return null;
    }

    public boolean deviceSupportsNfcSecure() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return 0;
    }

    public boolean disable(boolean) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        boolean z0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        z0 := @parameter0: boolean;

        return 0;
    }

    public boolean disableNdefPush() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return 0;
    }

    public void dispatch(android.nfc.Tag) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        android.nfc.Tag r1;

        r0 := @this: android.nfc.INfcAdapter$Default;

        r1 := @parameter0: android.nfc.Tag;

        return;
    }

    public boolean enable() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return 0;
    }

    public boolean enableNdefPush() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return 0;
    }

    public android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        java.lang.String r1;

        r0 := @this: android.nfc.INfcAdapter$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public android.nfc.INfcCardEmulation getNfcCardEmulationInterface() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return null;
    }

    public android.nfc.INfcDta getNfcDtaInterface(java.lang.String) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        java.lang.String r1;

        r0 := @this: android.nfc.INfcAdapter$Default;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public android.nfc.INfcFCardEmulation getNfcFCardEmulationInterface() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return null;
    }

    public android.nfc.INfcTag getNfcTagInterface() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return null;
    }

    public int getState() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return 0;
    }

    public boolean ignore(int, int, android.nfc.ITagRemovedCallback) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        int i0, i1;
        android.nfc.ITagRemovedCallback r1;

        r0 := @this: android.nfc.INfcAdapter$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.nfc.ITagRemovedCallback;

        return 0;
    }

    public void invokeBeam() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return;
    }

    public void invokeBeamInternal(android.nfc.BeamShareData) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        android.nfc.BeamShareData r1;

        r0 := @this: android.nfc.INfcAdapter$Default;

        r1 := @parameter0: android.nfc.BeamShareData;

        return;
    }

    public boolean isNdefPushEnabled() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return 0;
    }

    public boolean isNfcSecureEnabled() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return 0;
    }

    public void pausePolling(int) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        int i0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        i0 := @parameter0: int;

        return;
    }

    public void removeNfcUnlockHandler(android.nfc.INfcUnlockHandler) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        android.nfc.INfcUnlockHandler r1;

        r0 := @this: android.nfc.INfcAdapter$Default;

        r1 := @parameter0: android.nfc.INfcUnlockHandler;

        return;
    }

    public void resumePolling() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return;
    }

    public void setAppCallback(android.nfc.IAppCallback) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        android.nfc.IAppCallback r1;

        r0 := @this: android.nfc.INfcAdapter$Default;

        r1 := @parameter0: android.nfc.IAppCallback;

        return;
    }

    public void setForegroundDispatch(android.app.PendingIntent, android.content.IntentFilter[], android.nfc.TechListParcel) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        android.app.PendingIntent r1;
        android.content.IntentFilter[] r2;
        android.nfc.TechListParcel r3;

        r0 := @this: android.nfc.INfcAdapter$Default;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.content.IntentFilter[];

        r3 := @parameter2: android.nfc.TechListParcel;

        return;
    }

    public boolean setNfcSecure(boolean) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        boolean z0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        z0 := @parameter0: boolean;

        return 0;
    }

    public void setP2pModes(int, int) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        int i0, i1;

        r0 := @this: android.nfc.INfcAdapter$Default;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void setReaderMode(android.os.IBinder, android.nfc.IAppCallback, int, android.os.Bundle) throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;
        android.os.IBinder r1;
        android.nfc.IAppCallback r2;
        int i0;
        android.os.Bundle r3;

        r0 := @this: android.nfc.INfcAdapter$Default;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.nfc.IAppCallback;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        return;
    }

    public void verifyNfcPermission() throws android.os.RemoteException
    {
        android.nfc.INfcAdapter$Default r0;

        r0 := @this: android.nfc.INfcAdapter$Default;

        return;
    }
}
