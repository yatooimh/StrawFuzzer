class android.nfc.INfcTag$Stub$Proxy extends java.lang.Object implements android.nfc.INfcTag
{
    public static android.nfc.INfcTag sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        $r1 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public boolean canMakeReadOnly(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.nfc.INfcTag $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.nfc.INfcTag: boolean canMakeReadOnly(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int connect(int, int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.nfc.INfcTag $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<android.nfc.INfcTag: int connect(int,int)>(i1, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int formatNdef(int, byte[]) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.nfc.INfcTag $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        byte[] r7;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: byte[];

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r7);

        $r3 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.nfc.INfcTag: int formatNdef(int,byte[])>(i0, r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean getExtendedLengthApdusSupported() throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean $z0, z1, z2;
        android.nfc.INfcTag $r3, $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        r6 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.nfc.INfcTag: boolean getExtendedLengthApdusSupported()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i0 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.nfc.INfcTag$Stub$Proxy r0;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        return "android.nfc.INfcTag";
    }

    public int getMaxTransceiveLength(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.nfc.INfcTag $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.nfc.INfcTag: int getMaxTransceiveLength(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int[] getTechList(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.nfc.INfcTag $r4, $r5;
        java.lang.Throwable $r6;
        int[] r7, r8;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        r7 = interfaceinvoke $r5.<android.nfc.INfcTag: int[] getTechList(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r8 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r8;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int getTimeout(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.nfc.INfcTag $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.nfc.INfcTag: int getTimeout(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isNdef(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.nfc.INfcTag $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.nfc.INfcTag: boolean isNdef(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean isPresent(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.nfc.INfcTag $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.nfc.INfcTag: boolean isPresent(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public boolean ndefIsWritable(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean $z0, z1, z2;
        android.nfc.INfcTag $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1;
        android.os.IBinder r6;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        r6 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

     label2:
        z1 = 0;

     label3:
        $z0 = interfaceinvoke r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        if $z0 != 0 goto label5;

        $r3 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r3 == null goto label5;

        $r4 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        z2 = interfaceinvoke $r4.<android.nfc.INfcTag: boolean ndefIsWritable(int)>(i0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z2;

     label5:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label6:
        if i1 == 0 goto label7;

        z1 = 1;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return z1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public int ndefMakeReadOnly(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.nfc.INfcTag $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.nfc.INfcTag: int ndefMakeReadOnly(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.nfc.NdefMessage ndefRead(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.nfc.INfcTag $r6, $r7;
        java.lang.Throwable $r8;
        android.nfc.NdefMessage r9, r10;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.nfc.INfcTag: android.nfc.NdefMessage ndefRead(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.nfc.NdefMessage: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.nfc.NdefMessage) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public int ndefWrite(int, android.nfc.NdefMessage) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.nfc.INfcTag $r4, $r5;
        java.lang.Throwable $r6;
        int i0, i1, i2;
        android.nfc.NdefMessage r7;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r7 := @parameter1: android.nfc.NdefMessage;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

     label02:
        if r7 == null goto label05;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r7.<android.nfc.NdefMessage: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label06:
        $r3 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        if $z0 != 0 goto label08;

        $r4 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r4 == null goto label08;

        $r5 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        i1 = interfaceinvoke $r5.<android.nfc.INfcTag: int ndefWrite(int,android.nfc.NdefMessage)>(i0, r7);

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label10:
        $r6 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public int reconnect(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.nfc.INfcTag $r5, $r6;
        java.lang.Throwable $r7;
        int i0, i1, i2;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<android.nfc.INfcTag: int reconnect(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.nfc.Tag rediscover(int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        boolean $z0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.nfc.INfcTag $r6, $r7;
        java.lang.Throwable $r8;
        android.nfc.Tag r9, r10;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r6 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r6 == null goto label3;

        $r7 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        r9 = interfaceinvoke $r7.<android.nfc.INfcTag: android.nfc.Tag rediscover(int)>(i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r9;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = <android.nfc.Tag: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r10 = (android.nfc.Tag) $r5;

     label4:
        goto label6;

     label5:
        r10 = null;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public void resetTimeouts() throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.nfc.INfcTag $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        $r4 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        interfaceinvoke $r6.<android.nfc.INfcTag: void resetTimeouts()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public int setTimeout(int, int) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.os.Parcel r1, r2;
        android.os.IBinder $r4;
        boolean $z0;
        android.nfc.INfcTag $r5, $r6;
        java.lang.Throwable $r7;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        if $z0 != 0 goto label3;

        $r5 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        i2 = interfaceinvoke $r6.<android.nfc.INfcTag: int setTimeout(int,int)>(i1, i0);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i3;

     label5:
        $r7 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.nfc.TransceiveResult transceive(int, byte[], boolean) throws android.os.RemoteException
    {
        android.nfc.INfcTag$Stub$Proxy r0;
        int i0, $i1;
        boolean z0, $z1;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.nfc.INfcTag $r6, $r7;
        java.lang.Throwable $r8;
        byte[] r9;
        byte b2;
        android.nfc.TransceiveResult r10, r11;

        r0 := @this: android.nfc.INfcTag$Stub$Proxy;

        i0 := @parameter0: int;

        r9 := @parameter1: byte[];

        z0 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.nfc.INfcTag");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r9);

     label02:
        if z0 == 0 goto label03;

        b2 = 1;

        goto label04;

     label03:
        b2 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $r3 = r0.<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder mRemote>;

        $z1 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        if $z1 != 0 goto label06;

        $r6 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        if $r6 == null goto label06;

        $r7 = staticinvoke <android.nfc.INfcTag$Stub: android.nfc.INfcTag getDefaultImpl()>();

        r10 = interfaceinvoke $r7.<android.nfc.INfcTag: android.nfc.TransceiveResult transceive(int,byte[],boolean)>(i0, r9, z0);

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r10;

     label06:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label08;

        $r4 = <android.nfc.TransceiveResult: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r11 = (android.nfc.TransceiveResult) $r5;

     label07:
        goto label09;

     label08:
        r11 = null;

     label09:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r11;

     label10:
        $r8 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }
}
