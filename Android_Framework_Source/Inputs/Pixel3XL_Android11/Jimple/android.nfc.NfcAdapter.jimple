public final class android.nfc.NfcAdapter extends java.lang.Object
{
    public static final java.lang.String ACTION_ADAPTER_STATE_CHANGED;
    public static final java.lang.String ACTION_HANDOVER_TRANSFER_DONE;
    public static final java.lang.String ACTION_HANDOVER_TRANSFER_STARTED;
    public static final java.lang.String ACTION_NDEF_DISCOVERED;
    public static final java.lang.String ACTION_PREFERRED_PAYMENT_CHANGED;
    public static final java.lang.String ACTION_TAG_DISCOVERED;
    public static final java.lang.String ACTION_TAG_LEFT_FIELD;
    public static final java.lang.String ACTION_TECH_DISCOVERED;
    public static final java.lang.String ACTION_TRANSACTION_DETECTED;
    public static final java.lang.String EXTRA_ADAPTER_STATE;
    public static final java.lang.String EXTRA_AID;
    public static final java.lang.String EXTRA_DATA;
    public static final java.lang.String EXTRA_HANDOVER_TRANSFER_STATUS;
    public static final java.lang.String EXTRA_HANDOVER_TRANSFER_URI;
    public static final java.lang.String EXTRA_ID;
    public static final java.lang.String EXTRA_NDEF_MESSAGES;
    public static final java.lang.String EXTRA_PREFERRED_PAYMENT_CHANGED_REASON;
    public static final java.lang.String EXTRA_READER_PRESENCE_CHECK_DELAY;
    public static final java.lang.String EXTRA_SECURE_ELEMENT_NAME;
    public static final java.lang.String EXTRA_TAG;
    public static final int FLAG_NDEF_PUSH_NO_CONFIRM;
    public static final int FLAG_READER_NFC_A;
    public static final int FLAG_READER_NFC_B;
    public static final int FLAG_READER_NFC_BARCODE;
    public static final int FLAG_READER_NFC_F;
    public static final int FLAG_READER_NFC_V;
    public static final int FLAG_READER_NO_PLATFORM_SOUNDS;
    public static final int FLAG_READER_SKIP_NDEF_CHECK;
    public static final int HANDOVER_TRANSFER_STATUS_FAILURE;
    public static final int HANDOVER_TRANSFER_STATUS_SUCCESS;
    public static final int PREFERRED_PAYMENT_CHANGED;
    public static final int PREFERRED_PAYMENT_LOADED;
    public static final int PREFERRED_PAYMENT_UPDATED;
    public static final int STATE_OFF;
    public static final int STATE_ON;
    public static final int STATE_TURNING_OFF;
    public static final int STATE_TURNING_ON;
    static final java.lang.String TAG;
    static android.nfc.INfcCardEmulation sCardEmulationService;
    static boolean sHasBeamFeature;
    static boolean sHasNfcFeature;
    static boolean sIsInitialized;
    static java.util.HashMap sNfcAdapters;
    static android.nfc.INfcFCardEmulation sNfcFCardEmulationService;
    static android.nfc.NfcAdapter sNullContextNfcAdapter;
    static android.nfc.INfcAdapter sService;
    static android.nfc.INfcTag sTagService;
    final android.content.Context mContext;
    android.app.OnActivityPausedListener mForegroundDispatchListener;
    final java.lang.Object mLock;
    final android.nfc.NfcActivityManager mNfcActivityManager;
    final java.util.HashMap mNfcUnlockHandlers;
    android.nfc.ITagRemovedCallback mTagRemovedListener;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <android.nfc.NfcAdapter: java.lang.String TAG> = "NFC";

        <android.nfc.NfcAdapter: int STATE_TURNING_ON> = 2;

        <android.nfc.NfcAdapter: int STATE_TURNING_OFF> = 4;

        <android.nfc.NfcAdapter: int STATE_ON> = 3;

        <android.nfc.NfcAdapter: int STATE_OFF> = 1;

        <android.nfc.NfcAdapter: int PREFERRED_PAYMENT_UPDATED> = 3;

        <android.nfc.NfcAdapter: int PREFERRED_PAYMENT_LOADED> = 1;

        <android.nfc.NfcAdapter: int PREFERRED_PAYMENT_CHANGED> = 2;

        <android.nfc.NfcAdapter: int HANDOVER_TRANSFER_STATUS_SUCCESS> = 0;

        <android.nfc.NfcAdapter: int HANDOVER_TRANSFER_STATUS_FAILURE> = 1;

        <android.nfc.NfcAdapter: int FLAG_READER_SKIP_NDEF_CHECK> = 128;

        <android.nfc.NfcAdapter: int FLAG_READER_NO_PLATFORM_SOUNDS> = 256;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_V> = 8;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_F> = 4;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_BARCODE> = 16;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_B> = 2;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_A> = 1;

        <android.nfc.NfcAdapter: int FLAG_NDEF_PUSH_NO_CONFIRM> = 1;

        <android.nfc.NfcAdapter: java.lang.String EXTRA_TAG> = "android.nfc.extra.TAG";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_SECURE_ELEMENT_NAME> = "android.nfc.extra.SECURE_ELEMENT_NAME";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_READER_PRESENCE_CHECK_DELAY> = "presence";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_PREFERRED_PAYMENT_CHANGED_REASON> = "android.nfc.extra.PREFERRED_PAYMENT_CHANGED_REASON";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_NDEF_MESSAGES> = "android.nfc.extra.NDEF_MESSAGES";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_ID> = "android.nfc.extra.ID";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_HANDOVER_TRANSFER_URI> = "android.nfc.extra.HANDOVER_TRANSFER_URI";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_HANDOVER_TRANSFER_STATUS> = "android.nfc.extra.HANDOVER_TRANSFER_STATUS";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_DATA> = "android.nfc.extra.DATA";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_AID> = "android.nfc.extra.AID";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_ADAPTER_STATE> = "android.nfc.extra.ADAPTER_STATE";

        <android.nfc.NfcAdapter: java.lang.String ACTION_TRANSACTION_DETECTED> = "android.nfc.action.TRANSACTION_DETECTED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_TECH_DISCOVERED> = "android.nfc.action.TECH_DISCOVERED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_TAG_LEFT_FIELD> = "android.nfc.action.TAG_LOST";

        <android.nfc.NfcAdapter: java.lang.String ACTION_TAG_DISCOVERED> = "android.nfc.action.TAG_DISCOVERED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_PREFERRED_PAYMENT_CHANGED> = "android.nfc.action.PREFERRED_PAYMENT_CHANGED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_NDEF_DISCOVERED> = "android.nfc.action.NDEF_DISCOVERED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_HANDOVER_TRANSFER_STARTED> = "android.nfc.action.HANDOVER_TRANSFER_STARTED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_HANDOVER_TRANSFER_DONE> = "android.nfc.action.HANDOVER_TRANSFER_DONE";

        <android.nfc.NfcAdapter: java.lang.String ACTION_ADAPTER_STATE_CHANGED> = "android.nfc.action.ADAPTER_STATE_CHANGED";

        <android.nfc.NfcAdapter: boolean sIsInitialized> = 0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.nfc.NfcAdapter: java.util.HashMap sNfcAdapters> = $r0;

        return;
    }

    void <init>(android.content.Context)
    {
        android.nfc.NfcAdapter r0;
        android.content.Context r1;
        android.nfc.NfcAdapter$1 $r2;
        android.nfc.NfcActivityManager $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.nfc.NfcAdapter$1;

        specialinvoke $r2.<android.nfc.NfcAdapter$1: void <init>(android.nfc.NfcAdapter)>(r0);

        r0.<android.nfc.NfcAdapter: android.app.OnActivityPausedListener mForegroundDispatchListener> = $r2;

        r0.<android.nfc.NfcAdapter: android.content.Context mContext> = r1;

        $r3 = new android.nfc.NfcActivityManager;

        specialinvoke $r3.<android.nfc.NfcActivityManager: void <init>(android.nfc.NfcAdapter)>(r0);

        r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers> = $r4;

        r0.<android.nfc.NfcAdapter: android.nfc.ITagRemovedCallback mTagRemovedListener> = null;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.nfc.NfcAdapter: java.lang.Object mLock> = $r5;

        return;
    }

    public static android.nfc.NfcAdapter getDefaultAdapter()
    {
        java.lang.Exception $r0;
        android.nfc.NfcAdapter $r1;

        $r0 = new java.lang.Exception;

        specialinvoke $r0.<java.lang.Exception: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "WARNING: NfcAdapter.getDefaultAdapter() is deprecated, use NfcAdapter.getDefaultAdapter(Context) instead", $r0);

        $r1 = staticinvoke <android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)>(null);

        return $r1;
    }

    public static android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)
    {
        java.lang.IllegalArgumentException $r0, $r1;
        java.lang.Object $r2;
        android.nfc.NfcAdapter $r3;
        android.content.Context r4, r5;
        android.nfc.NfcManager r6;

        r4 := @parameter0: android.content.Context;

        if r4 == null goto label3;

        r5 = virtualinvoke r4.<android.content.Context: android.content.Context getApplicationContext()>();

        if r5 == null goto label2;

        $r2 = virtualinvoke r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("nfc");

        r6 = (android.nfc.NfcManager) $r2;

        if r6 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r6.<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>();

        return $r3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context not associated with any application (using a mock context?)");

        throw $r1;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context cannot be null");

        throw $r0;
    }

    public static android.nfc.NfcAdapter getNfcAdapter(android.content.Context)
    {
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.nfc.NfcAdapter r0, $r5, r25, r26, r27;
        java.util.HashMap $r1, $r3;
        java.lang.Object $r2;
        android.nfc.INfcAdapter $r6, $r8, r17;
        android.nfc.INfcFCardEmulation $r7;
        android.nfc.INfcCardEmulation $r9;
        android.nfc.INfcTag $r10;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12, $r13, $r14;
        android.content.Context r15;
        java.lang.UnsupportedOperationException r16, r19, r21, r23, r24;

        r15 := @parameter0: android.content.Context;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label01:
        $z2 = <android.nfc.NfcAdapter: boolean sIsInitialized>;

        if $z2 != 0 goto label23;

        $z3 = staticinvoke <android.nfc.NfcAdapter: boolean hasNfcFeature()>();

        <android.nfc.NfcAdapter: boolean sHasNfcFeature> = $z3;

        $z4 = staticinvoke <android.nfc.NfcAdapter: boolean hasBeamFeature()>();

        <android.nfc.NfcAdapter: boolean sHasBeamFeature> = $z4;

        z0 = staticinvoke <android.nfc.NfcAdapter: boolean hasNfcHceFeature()>();

        $z5 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z5 != 0 goto label04;

     label02:
        if z0 == 0 goto label03;

        goto label04;

     label03:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("NFC", "this device does not have NFC support");

        r16 = new java.lang.UnsupportedOperationException;

        specialinvoke r16.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r16;

     label04:
        r17 = staticinvoke <android.nfc.NfcAdapter: android.nfc.INfcAdapter getServiceInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService> = r17;

     label05:
        if r17 == null goto label22;

     label06:
        z1 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

     label07:
        if z1 == 0 goto label12;

     label08:
        $r10 = interfaceinvoke r17.<android.nfc.INfcAdapter: android.nfc.INfcTag getNfcTagInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcTag sTagService> = $r10;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC Tag service");

        r19 = new java.lang.UnsupportedOperationException;

        specialinvoke r19.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r19;

     label12:
        if z0 == 0 goto label20;

     label13:
        $r6 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r7 = interfaceinvoke $r6.<android.nfc.INfcAdapter: android.nfc.INfcFCardEmulation getNfcFCardEmulationInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcFCardEmulation sNfcFCardEmulationService> = $r7;

     label14:
        $r8 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r9 = interfaceinvoke $r8.<android.nfc.INfcAdapter: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcCardEmulation sCardEmulationService> = $r9;

     label15:
        goto label20;

     label16:
        $r12 := @caughtexception;

     label17:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve card emulation service");

        r21 = new java.lang.UnsupportedOperationException;

        specialinvoke r21.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r21;

     label18:
        $r13 := @caughtexception;

     label19:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC-F card emulation service");

        r23 = new java.lang.UnsupportedOperationException;

        specialinvoke r23.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r23;

     label20:
        <android.nfc.NfcAdapter: boolean sIsInitialized> = 1;

     label21:
        goto label23;

     label22:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC service");

        r24 = new java.lang.UnsupportedOperationException;

        specialinvoke r24.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r24;

     label23:
        if r15 != null goto label27;

     label24:
        $r5 = <android.nfc.NfcAdapter: android.nfc.NfcAdapter sNullContextNfcAdapter>;

        if $r5 != null goto label25;

        r25 = new android.nfc.NfcAdapter;

        specialinvoke r25.<android.nfc.NfcAdapter: void <init>(android.content.Context)>(null);

        <android.nfc.NfcAdapter: android.nfc.NfcAdapter sNullContextNfcAdapter> = r25;

     label25:
        r26 = <android.nfc.NfcAdapter: android.nfc.NfcAdapter sNullContextNfcAdapter>;

     label26:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

        return r26;

     label27:
        $r1 = <android.nfc.NfcAdapter: java.util.HashMap sNfcAdapters>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r15);

        r0 = (android.nfc.NfcAdapter) $r2;

     label28:
        r27 = r0;

        if r0 != null goto label31;

     label29:
        r27 = new android.nfc.NfcAdapter;

        specialinvoke r27.<android.nfc.NfcAdapter: void <init>(android.content.Context)>(r15);

     label30:
        $r3 = <android.nfc.NfcAdapter: java.util.HashMap sNfcAdapters>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r27);

     label31:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

        return r27;

     label32:
        $r11 := @caughtexception;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.lang.Throwable from label04 to label05 with label32;
        catch java.lang.Throwable from label06 to label07 with label32;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label32;
        catch java.lang.Throwable from label11 to label12 with label32;
        catch android.os.RemoteException from label13 to label14 with label18;
        catch java.lang.Throwable from label13 to label14 with label32;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label32;
        catch java.lang.Throwable from label17 to label18 with label32;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label20 to label21 with label32;
        catch java.lang.Throwable from label22 to label23 with label32;
        catch java.lang.Throwable from label24 to label25 with label32;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label27 to label28 with label32;
        catch java.lang.Throwable from label29 to label30 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
    }

    private static android.nfc.INfcAdapter getServiceInterface()
    {
        android.os.IBinder r0;
        android.nfc.INfcAdapter $r1;

        r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("nfc");

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.nfc.INfcAdapter$Stub: android.nfc.INfcAdapter asInterface(android.os.IBinder)>(r0);

        return $r1;
    }

    private static boolean hasBeamFeature()
    {
        boolean z0;
        android.os.RemoteException $r0;
        android.content.pm.IPackageManager r1;

        r1 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "Cannot get package manager, assuming no Android Beam feature");

        return 0;

     label1:
        z0 = interfaceinvoke r1.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.sofware.nfc.beam", 0);

     label2:
        return z0;

     label3:
        $r0 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Package manager query failed, assuming no Android Beam feature", $r0);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static boolean hasNfcFeature()
    {
        boolean z0;
        android.os.RemoteException $r0;
        android.content.pm.IPackageManager r1;

        r1 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "Cannot get package manager, assuming no NFC feature");

        return 0;

     label1:
        z0 = interfaceinvoke r1.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.nfc", 0);

     label2:
        return z0;

     label3:
        $r0 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Package manager query failed, assuming no NFC feature", $r0);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static boolean hasNfcHceFeature()
    {
        boolean z0, $z1, z2;
        android.os.RemoteException $r0;
        android.content.pm.IPackageManager r1;

        r1 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        z2 = 0;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "Cannot get package manager, assuming no NFC feature");

        return 0;

     label1:
        $z1 = interfaceinvoke r1.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.nfc.hce", 0);

        if $z1 != 0 goto label3;

        z0 = interfaceinvoke r1.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.nfc.hcef", 0);

     label2:
        if z0 == 0 goto label4;

     label3:
        z2 = 1;

     label4:
        return z2;

     label5:
        $r0 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Package manager query failed, assuming no NFC feature", $r0);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label5;
    }

    public boolean addNfcUnlockHandler(android.nfc.NfcAdapter$NfcUnlockHandler, java.lang.String[])
    {
        android.nfc.NfcAdapter r0;
        java.lang.String[] r1;
        java.lang.Object r2, $r11;
        android.nfc.NfcAdapter$3 r3;
        boolean $z0, $z1;
        int $i0;
        java.util.HashMap $r4, $r7, $r9, $r13;
        android.nfc.INfcAdapter $r5, $r10;
        int[] $r6;
        android.nfc.INfcUnlockHandler $r12;
        java.lang.Throwable $r15, $r17, $r18;
        android.os.RemoteException $r16;
        android.nfc.NfcAdapter$NfcUnlockHandler r19;
        java.lang.UnsupportedOperationException r23;

        r0 := @this: android.nfc.NfcAdapter;

        r19 := @parameter0: android.nfc.NfcAdapter$NfcUnlockHandler;

        r1 := @parameter1: java.lang.String[];

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label01:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label13;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label02:
        $i0 = lengthof r1;

        if $i0 != 0 goto label03;

        return 0;

     label03:
        r2 = r0.<android.nfc.NfcAdapter: java.lang.Object mLock>;

        entermonitor r2;

     label04:
        $r4 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r19);

        if $z1 == 0 goto label05;

        $r10 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r9 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        $r11 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r19);

        $r12 = (android.nfc.INfcUnlockHandler) $r11;

        interfaceinvoke $r10.<android.nfc.INfcAdapter: void removeNfcUnlockHandler(android.nfc.INfcUnlockHandler)>($r12);

        $r13 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r19);

     label05:
        r3 = new android.nfc.NfcAdapter$3;

        specialinvoke r3.<android.nfc.NfcAdapter$3: void <init>(android.nfc.NfcAdapter,android.nfc.NfcAdapter$NfcUnlockHandler)>(r0, r19);

        $r5 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r6 = staticinvoke <android.nfc.Tag: int[] getTechCodesFromStrings(java.lang.String[])>(r1);

        interfaceinvoke $r5.<android.nfc.INfcAdapter: void addNfcUnlockHandler(android.nfc.INfcUnlockHandler,int[])>(r3, $r6);

        $r7 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, r3);

     label06:
        exitmonitor r2;

     label07:
        return 1;

     label08:
        $r15 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r15;

     label11:
        $r18 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Unable to register LockscreenDispatch", $r18);

        return 0;

     label12:
        $r16 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r16);

        return 0;

     label13:
        r23 = new java.lang.UnsupportedOperationException;

        specialinvoke r23.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r23;

     label14:
        $r17 := @caughtexception;

     label15:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label16:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch android.os.RemoteException from label03 to label04 with label12;
        catch java.lang.IllegalArgumentException from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.lang.IllegalArgumentException from label10 to label11 with label11;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void attemptDeadServiceRecovery(java.lang.Exception)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcTag $r2;
        android.nfc.INfcCardEmulation $r3;
        android.nfc.INfcFCardEmulation $r4;
        android.os.RemoteException $r5, $r6, $r7;
        java.lang.Exception r8;
        android.nfc.INfcAdapter r9;

        r0 := @this: android.nfc.NfcAdapter;

        r8 := @parameter0: java.lang.Exception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "NFC service dead - attempting to recover", r8);

        r9 = staticinvoke <android.nfc.NfcAdapter: android.nfc.INfcAdapter getServiceInterface()>();

        if r9 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC service during service recovery");

        return;

     label01:
        <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService> = r9;

     label02:
        $r2 = interfaceinvoke r9.<android.nfc.INfcAdapter: android.nfc.INfcTag getNfcTagInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcTag sTagService> = $r2;

     label03:
        $r3 = interfaceinvoke r9.<android.nfc.INfcAdapter: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcCardEmulation sCardEmulationService> = $r3;

     label04:
        goto label06;

     label05:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC card emulation service during service recovery");

     label06:
        $r4 = interfaceinvoke r9.<android.nfc.INfcAdapter: android.nfc.INfcFCardEmulation getNfcFCardEmulationInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcFCardEmulation sNfcFCardEmulationService> = $r4;

     label07:
        goto label09;

     label08:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC-F card emulation service during service recovery");

     label09:
        return;

     label10:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC tag service during service recovery");

        return;

        catch android.os.RemoteException from label02 to label03 with label10;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    public boolean disable()
    {
        android.nfc.NfcAdapter r0;
        boolean z0;
        android.nfc.INfcAdapter $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean disable(boolean)>(1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disable(boolean)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcAdapter $r2;
        android.os.RemoteException $r3;
        boolean z0, z1;

        r0 := @this: android.nfc.NfcAdapter;

        z0 := @parameter0: boolean;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z1 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean disable(boolean)>(z0);

     label2:
        return z1;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void disableForegroundDispatch(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        boolean $z0;
        android.app.ActivityThread $r1;
        android.app.OnActivityPausedListener $r2;
        java.lang.Throwable $r3;
        android.app.Activity r4;
        java.lang.UnsupportedOperationException r5;

        r0 := @this: android.nfc.NfcAdapter;

        r4 := @parameter0: android.app.Activity;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label1:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label3;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label2:
        $r1 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r2 = r0.<android.nfc.NfcAdapter: android.app.OnActivityPausedListener mForegroundDispatchListener>;

        virtualinvoke $r1.<android.app.ActivityThread: void unregisterOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>(r4, $r2);

        virtualinvoke r0.<android.nfc.NfcAdapter: void disableForegroundDispatchInternal(android.app.Activity,boolean)>(r4, 0);

        return;

     label3:
        r5 = new java.lang.UnsupportedOperationException;

        specialinvoke r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r5;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void disableForegroundDispatchInternal(android.app.Activity, boolean)
    {
        android.nfc.NfcAdapter r0;
        boolean z0, $z1;
        android.nfc.INfcAdapter $r1;
        android.os.RemoteException $r2;
        android.app.Activity r3;
        java.lang.IllegalStateException r4;

        r0 := @this: android.nfc.NfcAdapter;

        r3 := @parameter0: android.app.Activity;

        z0 := @parameter1: boolean;

     label1:
        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r1.<android.nfc.INfcAdapter: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>(null, null, null);

     label2:
        if z0 != 0 goto label6;

     label3:
        $z1 = virtualinvoke r3.<android.app.Activity: boolean isResumed()>();

        if $z1 == 0 goto label5;

     label4:
        goto label6;

     label5:
        r4 = new java.lang.IllegalStateException;

        specialinvoke r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You must disable foreground dispatching while your activity is still resumed");

        throw r4;

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r2);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public void disableForegroundNdefPush(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        boolean $z0, $z1;
        android.nfc.NfcActivityManager $r1, $r2, $r3;
        java.lang.Throwable $r4;
        android.app.Activity r5;
        java.lang.UnsupportedOperationException r6;

        r0 := @this: android.nfc.NfcAdapter;

        r5 := @parameter0: android.app.Activity;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label1:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label6;

        $z1 = <android.nfc.NfcAdapter: boolean sHasBeamFeature>;

        if $z1 != 0 goto label3;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label2:
        return;

     label3:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label4:
        if r5 == null goto label5;

        virtualinvoke r0.<android.nfc.NfcAdapter: void enforceResumed(android.app.Activity)>(r5);

        $r1 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r1.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r5, null, 0);

        $r2 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r2.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r5, null, 0);

        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>(r5, null);

        return;

     label5:
        throw null;

     label6:
        r6 = new java.lang.UnsupportedOperationException;

        specialinvoke r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r6;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean disableNdefPush()
    {
        android.nfc.NfcAdapter r0;
        boolean z0, $z1;
        android.nfc.INfcAdapter $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.UnsupportedOperationException r5;

        r0 := @this: android.nfc.NfcAdapter;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label1:
        $z1 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z1 == 0 goto label5;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label2:
        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r1.<android.nfc.INfcAdapter: boolean disableNdefPush()>();

     label3:
        return z0;

     label4:
        $r2 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r2);

        return 0;

     label5:
        r5 = new java.lang.UnsupportedOperationException;

        specialinvoke r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r5;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void disableReaderMode(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        boolean $z0;
        android.nfc.NfcActivityManager $r1;
        java.lang.Throwable $r2;
        android.app.Activity r3;
        java.lang.UnsupportedOperationException r4;

        r0 := @this: android.nfc.NfcAdapter;

        r3 := @parameter0: android.app.Activity;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label1:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label3;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label2:
        $r1 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r1.<android.nfc.NfcActivityManager: void disableReaderMode(android.app.Activity)>(r3);

        return;

     label3:
        r4 = new java.lang.UnsupportedOperationException;

        specialinvoke r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r4;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void dispatch(android.nfc.Tag)
    {
        android.nfc.NfcAdapter r0;
        java.lang.NullPointerException $r1;
        android.nfc.INfcAdapter $r2;
        android.os.RemoteException $r3;
        android.nfc.Tag r4;

        r0 := @this: android.nfc.NfcAdapter;

        r4 := @parameter0: android.nfc.Tag;

        if r4 == null goto label5;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r2.<android.nfc.INfcAdapter: void dispatch(android.nfc.Tag)>(r4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

     label4:
        return;

     label5:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag cannot be null");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean enable()
    {
        android.nfc.NfcAdapter r0;
        boolean z0;
        android.nfc.INfcAdapter $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean enable()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void enableForegroundDispatch(android.app.Activity, android.app.PendingIntent, android.content.IntentFilter[], java.lang.String[][])
    {
        android.nfc.NfcAdapter r0;
        android.app.PendingIntent r1;
        android.content.IntentFilter[] r2;
        java.lang.String[][] r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;
        int $i0;
        android.os.RemoteException $r5;
        java.lang.Throwable $r6;
        android.app.Activity r7;
        android.nfc.TechListParcel r8;
        android.app.ActivityThread $r9;
        android.app.OnActivityPausedListener $r10;
        android.nfc.INfcAdapter $r11;
        java.lang.UnsupportedOperationException r13;

        r0 := @this: android.nfc.NfcAdapter;

        r7 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.app.PendingIntent;

        r2 := @parameter2: android.content.IntentFilter[];

        r3 := @parameter3: java.lang.String[][];

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label01:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label10;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label02:
        if r7 == null goto label09;

        if r1 == null goto label09;

        $z1 = virtualinvoke r7.<android.app.Activity: boolean isResumed()>();

        if $z1 == 0 goto label08;

        r8 = null;

        if r3 == null goto label04;

        r8 = null;

     label03:
        $i0 = lengthof r3;

        if $i0 <= 0 goto label04;

        r8 = new android.nfc.TechListParcel;

        specialinvoke r8.<android.nfc.TechListParcel: void <init>(java.lang.String[][])>(r3);

     label04:
        $r9 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r10 = r0.<android.nfc.NfcAdapter: android.app.OnActivityPausedListener mForegroundDispatchListener>;

        virtualinvoke $r9.<android.app.ActivityThread: void registerOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>(r7, $r10);

        $r11 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r11.<android.nfc.INfcAdapter: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>(r1, r2, r8);

     label05:
        goto label07;

     label06:
        $r5 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r5);

     label07:
        return;

     label08:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Foreground dispatch can only be enabled when your activity is resumed");

        throw $r4;

     label09:
        throw null;

     label10:
        r13 = new java.lang.UnsupportedOperationException;

        specialinvoke r13.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r13;

     label11:
        $r6 := @caughtexception;

     label12:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label13:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void enableForegroundNdefPush(android.app.Activity, android.nfc.NdefMessage)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NdefMessage r1;
        boolean $z0, $z1;
        android.nfc.NfcActivityManager $r2;
        java.lang.Throwable $r3;
        android.app.Activity r4;
        java.lang.UnsupportedOperationException r5;

        r0 := @this: android.nfc.NfcAdapter;

        r4 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.nfc.NdefMessage;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label1:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label6;

        $z1 = <android.nfc.NfcAdapter: boolean sHasBeamFeature>;

        if $z1 != 0 goto label3;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label2:
        return;

     label3:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label4:
        if r4 == null goto label5;

        if r1 == null goto label5;

        virtualinvoke r0.<android.nfc.NfcAdapter: void enforceResumed(android.app.Activity)>(r4);

        $r2 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r2.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r4, r1, 0);

        return;

     label5:
        throw null;

     label6:
        r5 = new java.lang.UnsupportedOperationException;

        specialinvoke r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r5;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean enableNdefPush()
    {
        android.nfc.NfcAdapter r0;
        boolean z0, $z1;
        java.lang.UnsupportedOperationException $r2;
        android.nfc.INfcAdapter $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        $z1 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z1 == 0 goto label4;

     label1:
        $r3 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r3.<android.nfc.INfcAdapter: boolean enableNdefPush()>();

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r4);

        return 0;

     label4:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void enableReaderMode(android.app.Activity, android.nfc.NfcAdapter$ReaderCallback, int, android.os.Bundle)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$ReaderCallback r1;
        int i0;
        android.os.Bundle r2;
        boolean $z0;
        android.nfc.NfcActivityManager $r3;
        java.lang.Throwable $r4;
        android.app.Activity r5;
        java.lang.UnsupportedOperationException r6;

        r0 := @this: android.nfc.NfcAdapter;

        r5 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.nfc.NfcAdapter$ReaderCallback;

        i0 := @parameter2: int;

        r2 := @parameter3: android.os.Bundle;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label1:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label3;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label2:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void enableReaderMode(android.app.Activity,android.nfc.NfcAdapter$ReaderCallback,int,android.os.Bundle)>(r5, r1, i0, r2);

        return;

     label3:
        r6 = new java.lang.UnsupportedOperationException;

        specialinvoke r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r6;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean enableSecureNfc(boolean)
    {
        android.nfc.NfcAdapter r0;
        boolean $z0, z1, z2;
        java.lang.UnsupportedOperationException $r2;
        android.nfc.INfcAdapter $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        z1 := @parameter0: boolean;

        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label4;

     label1:
        $r3 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z2 = interfaceinvoke $r3.<android.nfc.INfcAdapter: boolean setNfcSecure(boolean)>(z1);

     label2:
        return z2;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r4);

        return 0;

     label4:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void enforceResumed(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        $z0 = virtualinvoke r1.<android.app.Activity: boolean isResumed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("API cannot be called while activity is paused");

        throw $r2;
    }

    public int getAdapterState()
    {
        android.nfc.NfcAdapter r0;
        int i0;
        android.nfc.INfcAdapter $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        i0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: int getState()>();

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.nfc.INfcCardEmulation getCardEmulationService()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcCardEmulation $r1;

        r0 := @this: android.nfc.NfcAdapter;

        virtualinvoke r0.<android.nfc.NfcAdapter: boolean isEnabled()>();

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcCardEmulation sCardEmulationService>;

        return $r1;
    }

    public android.content.Context getContext()
    {
        android.nfc.NfcAdapter r0;
        android.content.Context $r1;

        r0 := @this: android.nfc.NfcAdapter;

        $r1 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        return $r1;
    }

    public android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()
    {
        android.nfc.NfcAdapter r0;
        java.lang.UnsupportedOperationException $r1;
        android.nfc.INfcAdapter $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        android.content.Context r5;
        android.nfc.INfcAdapterExtras r6;

        r0 := @this: android.nfc.NfcAdapter;

        r5 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        if r5 == null goto label4;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r3 = virtualinvoke r5.<android.content.Context: java.lang.String getPackageName()>();

        r6 = interfaceinvoke $r2.<android.nfc.INfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>($r3);

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r4);

        return null;

     label4:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("You need a context on NfcAdapter to use the  NFC extras APIs");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.nfc.INfcDta getNfcDtaInterface()
    {
        android.nfc.NfcAdapter r0;
        java.lang.UnsupportedOperationException $r1;
        android.nfc.INfcAdapter $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        android.content.Context r5;
        android.nfc.INfcDta r6;

        r0 := @this: android.nfc.NfcAdapter;

        r5 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        if r5 == null goto label4;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r3 = virtualinvoke r5.<android.content.Context: java.lang.String getPackageName()>();

        r6 = interfaceinvoke $r2.<android.nfc.INfcAdapter: android.nfc.INfcDta getNfcDtaInterface(java.lang.String)>($r3);

     label2:
        return r6;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r4);

        return null;

     label4:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("You need a context on NfcAdapter to use the  NFC extras APIs");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.nfc.INfcFCardEmulation getNfcFCardEmulationService()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcFCardEmulation $r1;

        r0 := @this: android.nfc.NfcAdapter;

        virtualinvoke r0.<android.nfc.NfcAdapter: boolean isEnabled()>();

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcFCardEmulation sNfcFCardEmulationService>;

        return $r1;
    }

    int getSdkVersion()
    {
        android.nfc.NfcAdapter r0;
        android.content.Context r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;

        r0 := @this: android.nfc.NfcAdapter;

        r1 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        if r1 != null goto label1;

        return 9;

     label1:
        $r2 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        return $i0;
    }

    public android.nfc.INfcAdapter getService()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcAdapter $r1;

        r0 := @this: android.nfc.NfcAdapter;

        virtualinvoke r0.<android.nfc.NfcAdapter: boolean isEnabled()>();

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        return $r1;
    }

    public java.util.List getSupportedOffHostSecureElements()
    {
        android.nfc.NfcAdapter r0;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        android.os.RemoteException $r3;
        android.content.pm.IPackageManager r4;

        r0 := @this: android.nfc.NfcAdapter;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r4 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        if r4 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "Cannot get package manager, assuming no off-host CE feature");

        return $r2;

     label1:
        $z0 = interfaceinvoke r4.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.nfc.uicc", 0);

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("SIM");

     label2:
        $z1 = interfaceinvoke r4.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.nfc.ese", 0);

        if $z1 == 0 goto label3;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("eSE");

     label3:
        return $r2;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Package manager query failed, assuming no off-host CE feature", $r3);

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public android.nfc.INfcTag getTagService()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcTag $r1;

        r0 := @this: android.nfc.NfcAdapter;

        virtualinvoke r0.<android.nfc.NfcAdapter: boolean isEnabled()>();

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcTag sTagService>;

        return $r1;
    }

    public boolean ignore(android.nfc.Tag, int, android.nfc.NfcAdapter$OnTagRemovedListener, android.os.Handler)
    {
        android.nfc.NfcAdapter r0;
        int i0, $i1;
        android.os.Handler r1;
        boolean z0;
        android.nfc.INfcAdapter $r2;
        android.nfc.NfcAdapter$2 $r3, r8;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;
        android.nfc.Tag r6;
        android.nfc.NfcAdapter$OnTagRemovedListener r7;
        java.lang.Object r9;

        r0 := @this: android.nfc.NfcAdapter;

        r6 := @parameter0: android.nfc.Tag;

        i0 := @parameter1: int;

        r7 := @parameter2: android.nfc.NfcAdapter$OnTagRemovedListener;

        r1 := @parameter3: android.os.Handler;

        r8 = null;

        if r7 == null goto label1;

        $r3 = new android.nfc.NfcAdapter$2;

        specialinvoke $r3.<android.nfc.NfcAdapter$2: void <init>(android.nfc.NfcAdapter,android.os.Handler,android.nfc.NfcAdapter$OnTagRemovedListener)>(r0, r1, r7);

        r8 = $r3;

     label1:
        r9 = r0.<android.nfc.NfcAdapter: java.lang.Object mLock>;

        entermonitor r9;

     label2:
        r0.<android.nfc.NfcAdapter: android.nfc.ITagRemovedCallback mTagRemovedListener> = r8;

        exitmonitor r9;

     label3:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $i1 = virtualinvoke r6.<android.nfc.Tag: int getServiceHandle()>();

        z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean ignore(int,int,android.nfc.ITagRemovedCallback)>($i1, i0, r8);

     label4:
        return z0;

     label5:
        $r4 := @caughtexception;

        return 0;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r9;

     label8:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean invokeBeam(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        boolean $z0, $z1;
        java.lang.NullPointerException $r1;
        android.nfc.INfcAdapter $r2;
        android.os.RemoteException $r3;
        java.lang.Throwable $r4;
        android.app.Activity r5;
        java.lang.UnsupportedOperationException r7;

        r0 := @this: android.nfc.NfcAdapter;

        r5 := @parameter0: android.app.Activity;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label01:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label09;

        $z1 = <android.nfc.NfcAdapter: boolean sHasBeamFeature>;

        if $z1 != 0 goto label03;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label02:
        return 0;

     label03:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label04:
        if r5 == null goto label08;

        virtualinvoke r0.<android.nfc.NfcAdapter: void enforceResumed(android.app.Activity)>(r5);

     label05:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r2.<android.nfc.INfcAdapter: void invokeBeam()>();

     label06:
        return 1;

     label07:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "invokeBeam: NFC process has died.");

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

        return 0;

     label08:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity may not be null.");

        throw $r1;

     label09:
        r7 = new java.lang.UnsupportedOperationException;

        specialinvoke r7.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r7;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label12:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public boolean invokeBeam(android.nfc.BeamShareData)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcAdapter $r1;
        android.os.RemoteException $r2;
        android.nfc.BeamShareData r3;

        r0 := @this: android.nfc.NfcAdapter;

        r3 := @parameter0: android.nfc.BeamShareData;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "invokeBeamInternal()");

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r1.<android.nfc.INfcAdapter: void invokeBeamInternal(android.nfc.BeamShareData)>(r3);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "invokeBeam: NFC process has died.");

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isEnabled()
    {
        android.nfc.NfcAdapter r0;
        int i0;
        android.nfc.INfcAdapter $r2;
        android.os.RemoteException $r3;
        boolean z0;

        r0 := @this: android.nfc.NfcAdapter;

        z0 = 0;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        i0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: int getState()>();

     label2:
        if i0 != 3 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isNdefPushEnabled()
    {
        android.nfc.NfcAdapter r0;
        boolean z0, $z1, $z2;
        android.nfc.INfcAdapter $r1;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        java.lang.UnsupportedOperationException r5;

        r0 := @this: android.nfc.NfcAdapter;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label01:
        $z1 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z1 == 0 goto label07;

        $z2 = <android.nfc.NfcAdapter: boolean sHasBeamFeature>;

        if $z2 != 0 goto label03;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label02:
        return 0;

     label03:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label04:
        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r1.<android.nfc.INfcAdapter: boolean isNdefPushEnabled()>();

     label05:
        return z0;

     label06:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

        return 0;

     label07:
        r5 = new java.lang.UnsupportedOperationException;

        specialinvoke r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r5;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label10:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isSecureNfcEnabled()
    {
        android.nfc.NfcAdapter r0;
        boolean z0, $z1;
        java.lang.UnsupportedOperationException $r2;
        android.nfc.INfcAdapter $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        $z1 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z1 == 0 goto label4;

     label1:
        $r3 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r3.<android.nfc.INfcAdapter: boolean isNfcSecureEnabled()>();

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r4);

        return 0;

     label4:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSecureNfcSupported()
    {
        android.nfc.NfcAdapter r0;
        boolean z0, $z1;
        java.lang.UnsupportedOperationException $r2;
        android.nfc.INfcAdapter $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        $z1 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z1 == 0 goto label4;

     label1:
        $r3 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r3.<android.nfc.INfcAdapter: boolean deviceSupportsNfcSecure()>();

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r4);

        return 0;

     label4:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void pausePolling(int)
    {
        android.nfc.NfcAdapter r0;
        int i0;
        android.nfc.INfcAdapter $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.nfc.NfcAdapter;

        i0 := @parameter0: int;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r2.<android.nfc.INfcAdapter: void pausePolling(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean removeNfcUnlockHandler(android.nfc.NfcAdapter$NfcUnlockHandler)
    {
        android.nfc.NfcAdapter r0;
        java.lang.Object r1, $r5;
        boolean $z0, $z1;
        java.util.HashMap $r2, $r3;
        android.nfc.INfcAdapter $r4;
        android.nfc.INfcUnlockHandler $r6;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8, $r9;
        android.nfc.NfcAdapter$NfcUnlockHandler r10;
        java.lang.UnsupportedOperationException r13;

        r0 := @this: android.nfc.NfcAdapter;

        r10 := @parameter0: android.nfc.NfcAdapter$NfcUnlockHandler;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label01:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label10;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label02:
        r1 = r0.<android.nfc.NfcAdapter: java.lang.Object mLock>;

        entermonitor r1;

     label03:
        $r2 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        $z1 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r10);

        if $z1 == 0 goto label04;

        $r4 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r3 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r10);

        $r6 = (android.nfc.INfcUnlockHandler) $r5;

        interfaceinvoke $r4.<android.nfc.INfcAdapter: void removeNfcUnlockHandler(android.nfc.INfcUnlockHandler)>($r6);

     label04:
        exitmonitor r1;

     label05:
        return 1;

     label06:
        $r8 := @caughtexception;

     label07:
        exitmonitor r1;

     label08:
        throw $r8;

     label09:
        $r7 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r7);

        return 0;

     label10:
        r13 = new java.lang.UnsupportedOperationException;

        specialinvoke r13.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r13;

     label11:
        $r9 := @caughtexception;

     label12:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label13:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch android.os.RemoteException from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void resumePolling()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcAdapter $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r2.<android.nfc.INfcAdapter: void resumePolling()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setBeamPushUris(android.net.Uri[], android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.NullPointerException $r2, $r4;
        android.nfc.NfcActivityManager $r3;
        java.lang.IllegalArgumentException $r5;
        java.lang.Throwable $r6;
        android.net.Uri[] r7;
        android.net.Uri r8;
        java.lang.String r9;
        java.lang.UnsupportedOperationException r10;

        r0 := @this: android.nfc.NfcAdapter;

        r7 := @parameter0: android.net.Uri[];

        r1 := @parameter1: android.app.Activity;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label01:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label11;

        $z1 = <android.nfc.NfcAdapter: boolean sHasBeamFeature>;

        if $z1 != 0 goto label03;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label02:
        return;

     label03:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label04:
        if r1 == null goto label10;

        if r7 == null goto label09;

        i0 = lengthof r7;

        i1 = 0;

     label05:
        if i1 >= i0 goto label09;

        r8 = r7[i1];

        if r8 == null goto label08;

        r9 = virtualinvoke r8.<android.net.Uri: java.lang.String getScheme()>();

        if r9 == null goto label07;

        $z2 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");

        if $z2 != 0 goto label06;

        $z3 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("content");

        if $z3 == 0 goto label07;

     label06:
        i1 = i1 + 1;

        goto label05;

     label07:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI needs to have either scheme file or scheme content");

        throw $r5;

     label08:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Uri not allowed to be null");

        throw $r4;

     label09:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushContentUri(android.app.Activity,android.net.Uri[])>(r1, r7);

        return;

     label10:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r2;

     label11:
        r10 = new java.lang.UnsupportedOperationException;

        specialinvoke r10.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r10;

     label12:
        $r6 := @caughtexception;

     label13:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label14:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback, android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        boolean $z0, $z1;
        java.lang.NullPointerException $r2;
        android.nfc.NfcActivityManager $r3;
        java.lang.Throwable $r4;
        android.nfc.NfcAdapter$CreateBeamUrisCallback r5;
        java.lang.UnsupportedOperationException r6;

        r0 := @this: android.nfc.NfcAdapter;

        r5 := @parameter0: android.nfc.NfcAdapter$CreateBeamUrisCallback;

        r1 := @parameter1: android.app.Activity;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label1:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label6;

        $z1 = <android.nfc.NfcAdapter: boolean sHasBeamFeature>;

        if $z1 != 0 goto label3;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label2:
        return;

     label3:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label4:
        if r1 == null goto label5;

        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback)>(r1, r5);

        return;

     label5:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r2;

     label6:
        r6 = new java.lang.UnsupportedOperationException;

        specialinvoke r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r6;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void setNdefPushMessage(android.nfc.NdefMessage, android.app.Activity, int)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        int i0;
        boolean $z0;
        java.lang.NullPointerException $r2;
        android.nfc.NfcActivityManager $r3;
        java.lang.Throwable $r4;
        android.nfc.NdefMessage r5;
        java.lang.UnsupportedOperationException r6;

        r0 := @this: android.nfc.NfcAdapter;

        r5 := @parameter0: android.nfc.NdefMessage;

        r1 := @parameter1: android.app.Activity;

        i0 := @parameter2: int;

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label1:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label4;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label2:
        if r1 == null goto label3;

        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r1, r5, i0);

        return;

     label3:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r2;

     label4:
        r6 = new java.lang.UnsupportedOperationException;

        specialinvoke r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r6;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public transient void setNdefPushMessage(android.nfc.NdefMessage, android.app.Activity, android.app.Activity[])
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity[] r1;
        int i0, i1, i3;
        boolean $z0, $z1;
        android.nfc.NfcActivityManager $r2, $r3;
        java.lang.Throwable $r4, $r5;
        android.nfc.NdefMessage r6;
        android.app.Activity r7, r8;
        java.lang.NullPointerException r9, r11;
        java.lang.UnsupportedOperationException r12;

        r0 := @this: android.nfc.NfcAdapter;

        r6 := @parameter0: android.nfc.NdefMessage;

        r7 := @parameter1: android.app.Activity;

        r1 := @parameter2: android.app.Activity[];

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label01:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label17;

        $z1 = <android.nfc.NfcAdapter: boolean sHasBeamFeature>;

        if $z1 != 0 goto label03;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label02:
        return;

     label03:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label04:
        i0 = virtualinvoke r0.<android.nfc.NfcAdapter: int getSdkVersion()>();

        if r7 == null goto label13;

     label05:
        $r2 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r2.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r7, r6, 0);

        i1 = lengthof r1;

     label06:
        i3 = 0;

     label07:
        if i3 >= i1 goto label11;

        r8 = r1[i3];

        if r8 == null goto label10;

     label08:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r8, r6, 0);

     label09:
        i3 = i3 + 1;

        goto label07;

     label10:
        r9 = new java.lang.NullPointerException;

        specialinvoke r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("activities cannot contain null");

        throw r9;

     label11:
        goto label15;

     label12:
        $r4 := @caughtexception;

        goto label14;

     label13:
        r11 = new java.lang.NullPointerException;

        specialinvoke r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw r11;

     label14:
        if i0 >= 16 goto label16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Cannot call API with Activity that has already been destroyed", $r4);

     label15:
        return;

     label16:
        throw $r4;

     label17:
        r12 = new java.lang.UnsupportedOperationException;

        specialinvoke r12.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r12;

     label18:
        $r5 := @caughtexception;

     label19:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label20:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.IllegalStateException from label05 to label06 with label12;
        catch java.lang.IllegalStateException from label08 to label09 with label12;
        catch java.lang.IllegalStateException from label10 to label11 with label12;
        catch java.lang.IllegalStateException from label13 to label14 with label12;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback, android.app.Activity, int)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$CreateNdefMessageCallback r1;
        android.app.Activity r2;
        int i0;
        java.lang.NullPointerException $r3;
        android.nfc.NfcActivityManager $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$CreateNdefMessageCallback;

        r2 := @parameter1: android.app.Activity;

        i0 := @parameter2: int;

        if r2 == null goto label1;

        $r4 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r4.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r2, r1, i0);

        return;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r3;
    }

    public transient void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback, android.app.Activity, android.app.Activity[])
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity[] r1;
        int i0, i1, i3;
        boolean $z0, $z1;
        android.nfc.NfcActivityManager $r2, $r3;
        java.lang.Throwable $r4, $r5;
        android.nfc.NfcAdapter$CreateNdefMessageCallback r6;
        android.app.Activity r7, r8;
        java.lang.NullPointerException r9, r11;
        java.lang.UnsupportedOperationException r12;

        r0 := @this: android.nfc.NfcAdapter;

        r6 := @parameter0: android.nfc.NfcAdapter$CreateNdefMessageCallback;

        r7 := @parameter1: android.app.Activity;

        r1 := @parameter2: android.app.Activity[];

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label01:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label17;

        $z1 = <android.nfc.NfcAdapter: boolean sHasBeamFeature>;

        if $z1 != 0 goto label03;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label02:
        return;

     label03:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label04:
        i0 = virtualinvoke r0.<android.nfc.NfcAdapter: int getSdkVersion()>();

        if r7 == null goto label13;

     label05:
        $r2 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r2.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r7, r6, 0);

        i1 = lengthof r1;

     label06:
        i3 = 0;

     label07:
        if i3 >= i1 goto label11;

        r8 = r1[i3];

        if r8 == null goto label10;

     label08:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r8, r6, 0);

     label09:
        i3 = i3 + 1;

        goto label07;

     label10:
        r9 = new java.lang.NullPointerException;

        specialinvoke r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("activities cannot contain null");

        throw r9;

     label11:
        goto label15;

     label12:
        $r5 := @caughtexception;

        goto label14;

     label13:
        r11 = new java.lang.NullPointerException;

        specialinvoke r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw r11;

     label14:
        if i0 >= 16 goto label16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Cannot call API with Activity that has already been destroyed", $r5);

     label15:
        return;

     label16:
        throw $r5;

     label17:
        r12 = new java.lang.UnsupportedOperationException;

        specialinvoke r12.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r12;

     label18:
        $r4 := @caughtexception;

     label19:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label20:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.IllegalStateException from label05 to label06 with label12;
        catch java.lang.IllegalStateException from label08 to label09 with label12;
        catch java.lang.IllegalStateException from label10 to label11 with label12;
        catch java.lang.IllegalStateException from label13 to label14 with label12;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public transient void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback, android.app.Activity, android.app.Activity[])
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity[] r1;
        int i0, i1, i3;
        boolean $z0, $z1;
        android.nfc.NfcActivityManager $r2, $r3;
        java.lang.Throwable $r4, $r5;
        android.nfc.NfcAdapter$OnNdefPushCompleteCallback r6;
        android.app.Activity r7, r8;
        java.lang.NullPointerException r9, r11;
        java.lang.UnsupportedOperationException r12;

        r0 := @this: android.nfc.NfcAdapter;

        r6 := @parameter0: android.nfc.NfcAdapter$OnNdefPushCompleteCallback;

        r7 := @parameter1: android.app.Activity;

        r1 := @parameter2: android.app.Activity[];

        entermonitor class "Landroid/nfc/NfcAdapter;";

     label01:
        $z0 = <android.nfc.NfcAdapter: boolean sHasNfcFeature>;

        if $z0 == 0 goto label17;

        $z1 = <android.nfc.NfcAdapter: boolean sHasBeamFeature>;

        if $z1 != 0 goto label03;

        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label02:
        return;

     label03:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label04:
        i0 = virtualinvoke r0.<android.nfc.NfcAdapter: int getSdkVersion()>();

        if r7 == null goto label13;

     label05:
        $r2 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r2.<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>(r7, r6);

        i1 = lengthof r1;

     label06:
        i3 = 0;

     label07:
        if i3 >= i1 goto label11;

        r8 = r1[i3];

        if r8 == null goto label10;

     label08:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>(r8, r6);

     label09:
        i3 = i3 + 1;

        goto label07;

     label10:
        r9 = new java.lang.NullPointerException;

        specialinvoke r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("activities cannot contain null");

        throw r9;

     label11:
        goto label15;

     label12:
        $r4 := @caughtexception;

        goto label14;

     label13:
        r11 = new java.lang.NullPointerException;

        specialinvoke r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw r11;

     label14:
        if i0 >= 16 goto label16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Cannot call API with Activity that has already been destroyed", $r4);

     label15:
        return;

     label16:
        throw $r4;

     label17:
        r12 = new java.lang.UnsupportedOperationException;

        specialinvoke r12.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r12;

     label18:
        $r5 := @caughtexception;

     label19:
        exitmonitor class "Landroid/nfc/NfcAdapter;";

     label20:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.IllegalStateException from label05 to label06 with label12;
        catch java.lang.IllegalStateException from label08 to label09 with label12;
        catch java.lang.IllegalStateException from label10 to label11 with label12;
        catch java.lang.IllegalStateException from label13 to label14 with label12;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public void setP2pModes(int, int)
    {
        android.nfc.NfcAdapter r0;
        int i0, i1;
        android.nfc.INfcAdapter $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.nfc.NfcAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r2.<android.nfc.INfcAdapter: void setP2pModes(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>($r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
