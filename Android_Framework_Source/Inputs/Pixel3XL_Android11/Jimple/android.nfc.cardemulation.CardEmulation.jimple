public final class android.nfc.cardemulation.CardEmulation extends java.lang.Object
{
    public static final java.lang.String ACTION_CHANGE_DEFAULT;
    private static final java.util.regex.Pattern AID_PATTERN;
    public static final java.lang.String CATEGORY_OTHER;
    public static final java.lang.String CATEGORY_PAYMENT;
    public static final java.lang.String EXTRA_CATEGORY;
    public static final java.lang.String EXTRA_SERVICE_COMPONENT;
    public static final int SELECTION_MODE_ALWAYS_ASK;
    public static final int SELECTION_MODE_ASK_IF_CONFLICT;
    public static final int SELECTION_MODE_PREFER_DEFAULT;
    static final java.lang.String TAG;
    static java.util.HashMap sCardEmus;
    static boolean sIsInitialized;
    static android.nfc.INfcCardEmulation sService;
    final android.content.Context mContext;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        java.util.HashMap $r1;

        <android.nfc.cardemulation.CardEmulation: java.lang.String TAG> = "CardEmulation";

        <android.nfc.cardemulation.CardEmulation: int SELECTION_MODE_PREFER_DEFAULT> = 0;

        <android.nfc.cardemulation.CardEmulation: int SELECTION_MODE_ASK_IF_CONFLICT> = 2;

        <android.nfc.cardemulation.CardEmulation: int SELECTION_MODE_ALWAYS_ASK> = 1;

        <android.nfc.cardemulation.CardEmulation: java.lang.String EXTRA_SERVICE_COMPONENT> = "component";

        <android.nfc.cardemulation.CardEmulation: java.lang.String EXTRA_CATEGORY> = "category";

        <android.nfc.cardemulation.CardEmulation: java.lang.String CATEGORY_PAYMENT> = "payment";

        <android.nfc.cardemulation.CardEmulation: java.lang.String CATEGORY_OTHER> = "other";

        <android.nfc.cardemulation.CardEmulation: java.lang.String ACTION_CHANGE_DEFAULT> = "android.nfc.cardemulation.action.ACTION_CHANGE_DEFAULT";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[0-9A-Fa-f]{10,32}\\*?\\#?");

        <android.nfc.cardemulation.CardEmulation: java.util.regex.Pattern AID_PATTERN> = $r0;

        <android.nfc.cardemulation.CardEmulation: boolean sIsInitialized> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.nfc.cardemulation.CardEmulation: java.util.HashMap sCardEmus> = $r1;

        return;
    }

    private void <init>(android.content.Context, android.nfc.INfcCardEmulation)
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.content.Context r1, $r3;
        android.nfc.INfcCardEmulation r2;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.nfc.INfcCardEmulation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext> = $r3;

        <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService> = r2;

        return;
    }

    public static android.nfc.cardemulation.CardEmulation getInstance(android.nfc.NfcAdapter)
    {
        android.content.Context r0;
        boolean z0, $z1;
        android.nfc.cardemulation.CardEmulation r1, r14;
        java.util.HashMap $r2, $r4;
        java.lang.Object $r3;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        android.nfc.NfcAdapter r8;
        android.content.pm.IPackageManager r9;
        java.lang.UnsupportedOperationException r10, r12, r13, r16, r17;
        android.nfc.INfcCardEmulation r15;
        java.lang.NullPointerException r19;

        r8 := @parameter0: android.nfc.NfcAdapter;

        entermonitor class "Landroid/nfc/cardemulation/CardEmulation;";

        if r8 == null goto label24;

     label01:
        r0 = virtualinvoke r8.<android.nfc.NfcAdapter: android.content.Context getContext()>();

     label02:
        if r0 == null goto label22;

     label03:
        $z1 = <android.nfc.cardemulation.CardEmulation: boolean sIsInitialized>;

        if $z1 != 0 goto label13;

        r9 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

     label04:
        if r9 == null goto label12;

     label05:
        z0 = interfaceinvoke r9.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String,int)>("android.hardware.nfc.hce", 0);

     label06:
        if z0 == 0 goto label09;

     label07:
        <android.nfc.cardemulation.CardEmulation: boolean sIsInitialized> = 1;

     label08:
        goto label13;

     label09:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "This device does not support card emulation");

        r10 = new java.lang.UnsupportedOperationException;

        specialinvoke r10.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r10;

     label10:
        $r6 := @caughtexception;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "PackageManager query failed.");

        r12 = new java.lang.UnsupportedOperationException;

        specialinvoke r12.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r12;

     label12:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Cannot get PackageManager");

        r13 = new java.lang.UnsupportedOperationException;

        specialinvoke r13.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r13;

     label13:
        $r2 = <android.nfc.cardemulation.CardEmulation: java.util.HashMap sCardEmus>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (android.nfc.cardemulation.CardEmulation) $r3;

     label14:
        r14 = r1;

        if r1 != null goto label21;

     label15:
        r15 = virtualinvoke r8.<android.nfc.NfcAdapter: android.nfc.INfcCardEmulation getCardEmulationService()>();

     label16:
        if r15 == null goto label20;

     label17:
        r14 = new android.nfc.cardemulation.CardEmulation;

        specialinvoke r14.<android.nfc.cardemulation.CardEmulation: void <init>(android.content.Context,android.nfc.INfcCardEmulation)>(r0, r15);

     label18:
        $r4 = <android.nfc.cardemulation.CardEmulation: java.util.HashMap sCardEmus>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r14);

     label19:
        goto label21;

     label20:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "This device does not implement the INfcCardEmulation interface.");

        r16 = new java.lang.UnsupportedOperationException;

        specialinvoke r16.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r16;

     label21:
        exitmonitor class "Landroid/nfc/cardemulation/CardEmulation;";

        return r14;

     label22:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "NfcAdapter context is null.");

        r17 = new java.lang.UnsupportedOperationException;

        specialinvoke r17.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r17;

     label23:
        $r7 := @caughtexception;

        goto label25;

     label24:
        r19 = new java.lang.NullPointerException;

        specialinvoke r19.<java.lang.NullPointerException: void <init>(java.lang.String)>("NfcAdapter is null");

        throw r19;

     label25:
        exitmonitor class "Landroid/nfc/cardemulation/CardEmulation;";

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch android.os.RemoteException from label09 to label10 with label10;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label22 to label23 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public static boolean isValidAid(java.lang.String)
    {
        java.lang.String r0, $r5, $r10, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r1, $r6, $r11;
        java.util.regex.Pattern $r18;
        java.util.regex.Matcher $r19;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("*");

        if $z0 != 0 goto label2;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("#");

        if $z3 == 0 goto label3;

     label2:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 % 2;

        if $i1 != 0 goto label3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AID ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid AID.");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", $r15);

        return 0;

     label3:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("*");

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("#");

        if $z2 != 0 goto label4;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = $i3 % 2;

        if $i4 == 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AID ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid AID.");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", $r10);

        return 0;

     label4:
        $r18 = <android.nfc.cardemulation.CardEmulation: java.util.regex.Pattern AID_PATTERN>;

        $r19 = virtualinvoke $r18.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z4 = virtualinvoke $r19.<java.util.regex.Matcher: boolean matches()>();

        if $z4 != 0 goto label5;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AID ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid AID.");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", $r5);

        return 0;

     label5:
        return 1;
    }

    public boolean categoryAllowsForegroundPreference(java.lang.String)
    {
        android.nfc.cardemulation.CardEmulation r0;
        int i0;
        java.lang.String $r1, r5;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        android.provider.Settings$SettingNotFoundException $r4;
        boolean z0, z1;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r5 := @parameter0: java.lang.String;

        $r1 = "payment";

        z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        z1 = 1;

        if z0 == 0 goto label7;

     label1:
        $r2 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>($r3, "nfc_payment_foreground");

     label2:
        if i0 == 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        z1 = 0;

     label6:
        return z1;

     label7:
        return 1;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label5;
    }

    public java.util.List getAidsForPreferredPaymentService()
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.nfc.cardemulation.ApduServiceInfo r1, r10;
        android.content.Context $r2, $r6;
        android.nfc.INfcCardEmulation $r3, r12;
        int $i0, $i1;
        android.os.RemoteException $r4, $r7;
        java.lang.RuntimeException $r5, $r8;
        java.util.List r9, r13;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r9 = null;

     label01:
        $r3 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r2 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        r10 = interfaceinvoke $r3.<android.nfc.INfcCardEmulation: android.nfc.cardemulation.ApduServiceInfo getPreferredPaymentService(int)>($i0);

     label02:
        if r10 == null goto label04;

     label03:
        r9 = virtualinvoke r10.<android.nfc.cardemulation.ApduServiceInfo: java.util.List getAids()>();

     label04:
        return r9;

     label05:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r12 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r12 == null goto label11;

     label06:
        $r6 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i1 = virtualinvoke $r6.<android.content.Context: int getUserId()>();

        r1 = interfaceinvoke r12.<android.nfc.INfcCardEmulation: android.nfc.cardemulation.ApduServiceInfo getPreferredPaymentService(int)>($i1);

     label07:
        r13 = null;

        if r1 == null goto label09;

     label08:
        r13 = virtualinvoke r1.<android.nfc.cardemulation.ApduServiceInfo: java.util.List getAids()>();

     label09:
        return r13;

     label10:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        $r8 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        $r5 = virtualinvoke $r4.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

        catch android.os.RemoteException from label01 to label02 with label05;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch android.os.RemoteException from label06 to label07 with label10;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    public java.util.List getAidsForService(android.content.ComponentName, java.lang.String)
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.nfc.cardemulation.AidGroup r1, r11;
        android.content.Context $r2, $r6;
        android.nfc.INfcCardEmulation $r3, r10;
        int $i0, $i1;
        android.os.RemoteException $r4, $r5;
        android.content.ComponentName r7;
        java.lang.String r8;
        java.util.List r9, r12;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r7 := @parameter0: android.content.ComponentName;

        r8 := @parameter1: java.lang.String;

        r9 = null;

     label01:
        $r3 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r2 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        r1 = interfaceinvoke $r3.<android.nfc.INfcCardEmulation: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)>($i0, r7, r8);

     label02:
        if r1 == null goto label04;

     label03:
        r9 = virtualinvoke r1.<android.nfc.cardemulation.AidGroup: java.util.List getAids()>();

     label04:
        return r9;

     label05:
        $r5 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r10 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r10 != null goto label06;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return null;

     label06:
        $r6 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i1 = virtualinvoke $r6.<android.content.Context: int getUserId()>();

        r11 = interfaceinvoke r10.<android.nfc.INfcCardEmulation: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)>($i1, r7, r8);

     label07:
        r12 = null;

        if r11 == null goto label09;

     label08:
        r12 = virtualinvoke r11.<android.nfc.cardemulation.AidGroup: java.util.List getAids()>();

     label09:
        return r12;

     label10:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return null;

        catch android.os.RemoteException from label01 to label02 with label05;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch android.os.RemoteException from label06 to label07 with label10;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    public java.lang.CharSequence getDescriptionForPreferredPaymentService()
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.nfc.cardemulation.ApduServiceInfo r1, r10;
        android.content.Context $r2, $r8;
        android.nfc.INfcCardEmulation $r3, r12;
        int $i0, $i1;
        android.os.RemoteException $r4, $r6;
        java.lang.RuntimeException $r5, $r7;
        java.lang.String r9, r13;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r9 = null;

     label01:
        $r3 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r2 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        r10 = interfaceinvoke $r3.<android.nfc.INfcCardEmulation: android.nfc.cardemulation.ApduServiceInfo getPreferredPaymentService(int)>($i0);

     label02:
        if r10 == null goto label04;

     label03:
        r9 = virtualinvoke r10.<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getDescription()>();

     label04:
        return r9;

     label05:
        $r6 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r12 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r12 == null goto label11;

     label06:
        $r8 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i1 = virtualinvoke $r8.<android.content.Context: int getUserId()>();

        r1 = interfaceinvoke r12.<android.nfc.INfcCardEmulation: android.nfc.cardemulation.ApduServiceInfo getPreferredPaymentService(int)>($i1);

     label07:
        r13 = null;

        if r1 == null goto label09;

     label08:
        r13 = virtualinvoke r1.<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getDescription()>();

     label09:
        return r13;

     label10:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        $r5 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r5;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        $r7 = virtualinvoke $r6.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r7;

        catch android.os.RemoteException from label01 to label02 with label05;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch android.os.RemoteException from label06 to label07 with label10;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    public java.lang.String getRouteDestinationForPreferredPaymentService()
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.content.Context $r2, $r9;
        android.nfc.INfcCardEmulation $r3, r13;
        int $i0, $i3;
        boolean $z0, $z1;
        java.lang.String $r4, $r10, r12, r15;
        android.os.RemoteException $r5, $r7;
        java.lang.RuntimeException $r6, $r8;
        android.nfc.cardemulation.ApduServiceInfo r11, r14;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

     label01:
        $r3 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r2 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        r11 = interfaceinvoke $r3.<android.nfc.INfcCardEmulation: android.nfc.cardemulation.ApduServiceInfo getPreferredPaymentService(int)>($i0);

     label02:
        if r11 == null goto label08;

     label03:
        $z0 = virtualinvoke r11.<android.nfc.cardemulation.ApduServiceInfo: boolean isOnHost()>();

        if $z0 != 0 goto label07;

        $r4 = virtualinvoke r11.<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getOffHostSecureElement()>();

        if $r4 != null goto label05;

     label04:
        r12 = "OffHost";

        goto label06;

     label05:
        r12 = virtualinvoke r11.<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getOffHostSecureElement()>();

     label06:
        return r12;

     label07:
        return "Host";

     label08:
        return null;

     label09:
        $r7 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r13 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r13 == null goto label19;

     label10:
        $r9 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i3 = virtualinvoke $r9.<android.content.Context: int getUserId()>();

        r14 = interfaceinvoke r13.<android.nfc.INfcCardEmulation: android.nfc.cardemulation.ApduServiceInfo getPreferredPaymentService(int)>($i3);

     label11:
        if r14 == null goto label17;

     label12:
        $z1 = virtualinvoke r14.<android.nfc.cardemulation.ApduServiceInfo: boolean isOnHost()>();

        if $z1 != 0 goto label16;

        $r10 = virtualinvoke r14.<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getOffHostSecureElement()>();

        if $r10 != null goto label14;

     label13:
        r15 = "Offhost";

        goto label15;

     label14:
        r15 = virtualinvoke r14.<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getOffHostSecureElement()>();

     label15:
        return r15;

     label16:
        return "Host";

     label17:
        return null;

     label18:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        $r6 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r6;

     label19:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        $r8 = virtualinvoke $r7.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r8;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label10 to label11 with label18;
        catch android.os.RemoteException from label12 to label13 with label18;
        catch android.os.RemoteException from label14 to label15 with label18;
    }

    public int getSelectionModeForCategory(java.lang.String)
    {
        android.nfc.cardemulation.CardEmulation r0;
        java.lang.String r1, $r2, $r5;
        boolean $z0;
        android.content.Context $r3;
        android.content.ContentResolver $r4;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r1 := @parameter0: java.lang.String;

        $r2 = "payment";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r3 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "nfc_payment_default_component");

        if $r5 == null goto label1;

        return 0;

     label1:
        return 1;

     label2:
        return 2;
    }

    public java.util.List getServices(java.lang.String)
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.content.Context $r1, $r4;
        android.nfc.INfcCardEmulation $r2, r9;
        int $i0, $i1;
        android.os.RemoteException $r3, $r5;
        java.lang.String r6;
        java.util.List r7, r10;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r6 := @parameter0: java.lang.String;

     label1:
        $r2 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r1 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int getUserId()>();

        r7 = interfaceinvoke $r2.<android.nfc.INfcCardEmulation: java.util.List getServices(int,java.lang.String)>($i0, r6);

     label2:
        return r7;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r9 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r9 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return null;

     label4:
        $r4 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i1 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        r10 = interfaceinvoke r9.<android.nfc.INfcCardEmulation: java.util.List getServices(int,java.lang.String)>($i1, r6);

     label5:
        return r10;

     label6:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean isDefaultServiceForAid(android.content.ComponentName, java.lang.String)
    {
        android.nfc.cardemulation.CardEmulation r0;
        java.lang.String r1;
        android.content.Context $r2, $r5;
        android.nfc.INfcCardEmulation $r3, r9;
        int $i0, $i1;
        android.os.RemoteException $r4, $r6;
        android.content.ComponentName r7;
        boolean z0, z1;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r7 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r2 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        z0 = interfaceinvoke $r3.<android.nfc.INfcCardEmulation: boolean isDefaultServiceForAid(int,android.content.ComponentName,java.lang.String)>($i0, r7, r1);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r9 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r9 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label4:
        $r5 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i1 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

        z1 = interfaceinvoke r9.<android.nfc.INfcCardEmulation: boolean isDefaultServiceForAid(int,android.content.ComponentName,java.lang.String)>($i1, r7, r1);

     label5:
        return z1;

     label6:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean isDefaultServiceForCategory(android.content.ComponentName, java.lang.String)
    {
        android.nfc.cardemulation.CardEmulation r0;
        java.lang.String r1;
        android.content.Context $r2, $r6;
        android.nfc.INfcCardEmulation $r3, r9;
        int $i0, $i2;
        android.os.RemoteException $r4, $r5;
        android.content.ComponentName r7;
        boolean z0, z1;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r7 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r2 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        z0 = interfaceinvoke $r3.<android.nfc.INfcCardEmulation: boolean isDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>($i0, r7, r1);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r9 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r9 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label4:
        $r6 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i2 = virtualinvoke $r6.<android.content.Context: int getUserId()>();

        z1 = interfaceinvoke r9.<android.nfc.INfcCardEmulation: boolean isDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>($i2, r7, r1);

     label5:
        return z1;

     label6:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    void recoverService()
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.content.Context $r1;
        android.nfc.NfcAdapter $r2;
        android.nfc.INfcCardEmulation $r3;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        $r1 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $r2 = staticinvoke <android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>($r1);

        $r3 = virtualinvoke $r2.<android.nfc.NfcAdapter: android.nfc.INfcCardEmulation getCardEmulationService()>();

        <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService> = $r3;

        return;
    }

    public boolean registerAidsForService(android.content.ComponentName, java.lang.String, java.util.List)
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.nfc.cardemulation.AidGroup $r1;
        android.content.Context $r2, $r6;
        android.nfc.INfcCardEmulation $r3, r12;
        int $i0, $i2;
        android.os.RemoteException $r4, $r5;
        android.content.ComponentName r7;
        java.lang.String r8;
        java.util.List r9;
        boolean z0, z1;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r7 := @parameter0: android.content.ComponentName;

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: java.util.List;

        $r1 = new android.nfc.cardemulation.AidGroup;

        specialinvoke $r1.<android.nfc.cardemulation.AidGroup: void <init>(java.util.List,java.lang.String)>(r9, r8);

     label1:
        $r3 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r2 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        z0 = interfaceinvoke $r3.<android.nfc.INfcCardEmulation: boolean registerAidGroupForService(int,android.content.ComponentName,android.nfc.cardemulation.AidGroup)>($i0, r7, $r1);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r12 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r12 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label4:
        $r6 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i2 = virtualinvoke $r6.<android.content.Context: int getUserId()>();

        z1 = interfaceinvoke r12.<android.nfc.INfcCardEmulation: boolean registerAidGroupForService(int,android.content.ComponentName,android.nfc.cardemulation.AidGroup)>($i2, r7, $r1);

     label5:
        return z1;

     label6:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean removeAidsForService(android.content.ComponentName, java.lang.String)
    {
        android.nfc.cardemulation.CardEmulation r0;
        java.lang.String r1;
        android.content.Context $r2, $r6;
        android.nfc.INfcCardEmulation $r3, r9;
        int $i0, $i2;
        android.os.RemoteException $r4, $r5;
        android.content.ComponentName r7;
        boolean z0, z1;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r7 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r2 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        z0 = interfaceinvoke $r3.<android.nfc.INfcCardEmulation: boolean removeAidGroupForService(int,android.content.ComponentName,java.lang.String)>($i0, r7, r1);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r9 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r9 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label4:
        $r6 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i2 = virtualinvoke $r6.<android.content.Context: int getUserId()>();

        z1 = interfaceinvoke r9.<android.nfc.INfcCardEmulation: boolean removeAidGroupForService(int,android.content.ComponentName,java.lang.String)>($i2, r7, r1);

     label5:
        return z1;

     label6:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean setDefaultForNextTap(android.content.ComponentName)
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.content.Context $r1, $r5;
        android.nfc.INfcCardEmulation $r2, r8;
        int $i0, $i2;
        android.os.RemoteException $r3, $r4;
        android.content.ComponentName r6;
        boolean z0, z1;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r6 := @parameter0: android.content.ComponentName;

     label1:
        $r2 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r1 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int getUserId()>();

        z0 = interfaceinvoke $r2.<android.nfc.INfcCardEmulation: boolean setDefaultForNextTap(int,android.content.ComponentName)>($i0, r6);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r8 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r8 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label4:
        $r5 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i2 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

        z1 = interfaceinvoke r8.<android.nfc.INfcCardEmulation: boolean setDefaultForNextTap(int,android.content.ComponentName)>($i2, r6);

     label5:
        return z1;

     label6:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean setDefaultServiceForCategory(android.content.ComponentName, java.lang.String)
    {
        android.nfc.cardemulation.CardEmulation r0;
        java.lang.String r1;
        android.content.Context $r2, $r6;
        android.nfc.INfcCardEmulation $r3, r9;
        int $i0, $i2;
        android.os.RemoteException $r4, $r5;
        android.content.ComponentName r7;
        boolean z0, z1;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r7 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r2 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        z0 = interfaceinvoke $r3.<android.nfc.INfcCardEmulation: boolean setDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>($i0, r7, r1);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r9 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r9 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label4:
        $r6 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i2 = virtualinvoke $r6.<android.content.Context: int getUserId()>();

        z1 = interfaceinvoke r9.<android.nfc.INfcCardEmulation: boolean setDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>($i2, r7, r1);

     label5:
        return z1;

     label6:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean setOffHostForService(android.content.ComponentName, java.lang.String)
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.content.Context $r1, $r4, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9;
        android.os.RemoteException $r2, $r3;
        int $i1, $i3;
        android.content.ComponentName r5;
        java.lang.String r6, r9;
        android.nfc.NfcAdapter r7;
        java.util.List r8;
        android.nfc.INfcCardEmulation $r10, r13;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r5 := @parameter0: android.content.ComponentName;

        r6 := @parameter1: java.lang.String;

        $r1 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        r7 = staticinvoke <android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>($r1);

        if r7 == null goto label13;

        if r6 != null goto label01;

        goto label13;

     label01:
        r8 = virtualinvoke r7.<android.nfc.NfcAdapter: java.util.List getSupportedOffHostSecureElements()>();

        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("eSE");

        if $z0 == 0 goto label02;

        $z7 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>("eSE");

        if $z7 == 0 goto label03;

     label02:
        $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("SIM");

        if $z1 == 0 goto label04;

        $z6 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>("SIM");

        if $z6 != 0 goto label04;

     label03:
        return 0;

     label04:
        $z2 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("eSE");

        if $z2 != 0 goto label05;

        $z5 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("SIM");

        if $z5 != 0 goto label05;

        return 0;

     label05:
        $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("eSE");

        if $z3 == 0 goto label06;

        r9 = "eSE1";

        goto label07;

     label06:
        r9 = r6;

        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("SIM");

        if $z4 == 0 goto label07;

        r9 = "SIM1";

     label07:
        $r10 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r11 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i3 = virtualinvoke $r11.<android.content.Context: int getUserId()>();

        z8 = interfaceinvoke $r10.<android.nfc.INfcCardEmulation: boolean setOffHostForService(int,android.content.ComponentName,java.lang.String)>($i3, r5, r9);

     label08:
        return z8;

     label09:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r13 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r13 != null goto label10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label10:
        $r4 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i1 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        z9 = interfaceinvoke r13.<android.nfc.INfcCardEmulation: boolean setOffHostForService(int,android.content.ComponentName,java.lang.String)>($i1, r5, r9);

     label11:
        return z9;

     label12:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return 0;

     label13:
        return 0;

        catch android.os.RemoteException from label07 to label08 with label09;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    public boolean setPreferredService(android.app.Activity, android.content.ComponentName)
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.content.ComponentName r1;
        java.lang.NullPointerException $r2;
        boolean $z0, z1, z2;
        java.lang.IllegalArgumentException $r3;
        android.nfc.INfcCardEmulation $r4, r9;
        android.os.RemoteException $r5, $r6;
        android.app.Activity r7;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r7 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.content.ComponentName;

        if r7 == null goto label8;

        if r1 == null goto label8;

        $z0 = virtualinvoke r7.<android.app.Activity: boolean isResumed()>();

        if $z0 == 0 goto label7;

     label1:
        $r4 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        z1 = interfaceinvoke $r4.<android.nfc.INfcCardEmulation: boolean setPreferredService(android.content.ComponentName)>(r1);

     label2:
        return z1;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r9 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r9 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label4:
        z2 = interfaceinvoke r9.<android.nfc.INfcCardEmulation: boolean setPreferredService(android.content.ComponentName)>(r1);

     label5:
        return z2;

     label6:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return 0;

     label7:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Activity must be resumed.");

        throw $r3;

     label8:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity or service or category is null");

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean supportsAidPrefixRegistration()
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.nfc.INfcCardEmulation $r1, r5;
        android.os.RemoteException $r2, $r3;
        boolean z0, z1;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

     label1:
        $r1 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        z0 = interfaceinvoke $r1.<android.nfc.INfcCardEmulation: boolean supportsAidPrefixRegistration()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r5 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r5 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label4:
        z1 = interfaceinvoke r5.<android.nfc.INfcCardEmulation: boolean supportsAidPrefixRegistration()>();

     label5:
        return z1;

     label6:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean unsetOffHostForService(android.content.ComponentName)
    {
        android.nfc.cardemulation.CardEmulation r0;
        android.content.Context $r1, $r3, $r7;
        android.nfc.NfcAdapter $r2;
        android.nfc.INfcCardEmulation $r4, r10;
        int $i0, $i2;
        android.os.RemoteException $r5, $r6;
        android.content.ComponentName r8;
        boolean z0, z1;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r8 := @parameter0: android.content.ComponentName;

        $r1 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $r2 = staticinvoke <android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>($r1);

        if $r2 != null goto label1;

        return 0;

     label1:
        $r4 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        $r3 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i0 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        z0 = interfaceinvoke $r4.<android.nfc.INfcCardEmulation: boolean unsetOffHostForService(int,android.content.ComponentName)>($i0, r8);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r10 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r10 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label4:
        $r7 = r0.<android.nfc.cardemulation.CardEmulation: android.content.Context mContext>;

        $i2 = virtualinvoke $r7.<android.content.Context: int getUserId()>();

        z1 = interfaceinvoke r10.<android.nfc.INfcCardEmulation: boolean unsetOffHostForService(int,android.content.ComponentName)>($i2, r8);

     label5:
        return z1;

     label6:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean unsetPreferredService(android.app.Activity)
    {
        android.nfc.cardemulation.CardEmulation r0;
        java.lang.NullPointerException $r1;
        boolean $z0, z1, z2;
        java.lang.IllegalArgumentException $r2;
        android.nfc.INfcCardEmulation $r3, r8;
        android.os.RemoteException $r4, $r5;
        android.app.Activity r6;

        r0 := @this: android.nfc.cardemulation.CardEmulation;

        r6 := @parameter0: android.app.Activity;

        if r6 == null goto label8;

        $z0 = virtualinvoke r6.<android.app.Activity: boolean isResumed()>();

        if $z0 == 0 goto label7;

     label1:
        $r3 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        z1 = interfaceinvoke $r3.<android.nfc.INfcCardEmulation: boolean unsetPreferredService()>();

     label2:
        return z1;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<android.nfc.cardemulation.CardEmulation: void recoverService()>();

        r8 = <android.nfc.cardemulation.CardEmulation: android.nfc.INfcCardEmulation sService>;

        if r8 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to recover CardEmulationService.");

        return 0;

     label4:
        z2 = interfaceinvoke r8.<android.nfc.INfcCardEmulation: boolean unsetPreferredService()>();

     label5:
        return z2;

     label6:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CardEmulation", "Failed to reach CardEmulationService.");

        return 0;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Activity must be resumed.");

        throw $r2;

     label8:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity is null");

        throw $r1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }
}
