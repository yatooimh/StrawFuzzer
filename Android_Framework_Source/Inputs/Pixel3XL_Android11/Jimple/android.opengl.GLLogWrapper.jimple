class android.opengl.GLLogWrapper extends android.opengl.GLWrapperBase
{
    private static final int FORMAT_FIXED;
    private static final int FORMAT_FLOAT;
    private static final int FORMAT_INT;
    private int mArgCount;
    boolean mColorArrayEnabled;
    private android.opengl.GLLogWrapper$PointerInfo mColorPointer;
    private java.io.Writer mLog;
    private boolean mLogArgumentNames;
    boolean mNormalArrayEnabled;
    private android.opengl.GLLogWrapper$PointerInfo mNormalPointer;
    java.lang.StringBuilder mStringBuilder;
    private android.opengl.GLLogWrapper$PointerInfo mTexCoordPointer;
    boolean mTextureCoordArrayEnabled;
    boolean mVertexArrayEnabled;
    private android.opengl.GLLogWrapper$PointerInfo mVertexPointer;

    public void <init>(javax.microedition.khronos.opengles.GL, java.io.Writer, boolean)
    {
        android.opengl.GLLogWrapper r0;
        javax.microedition.khronos.opengles.GL r1;
        java.io.Writer r2;
        boolean z0;
        android.opengl.GLLogWrapper$PointerInfo $r3, $r4, $r5, $r6;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.opengles.GL;

        r2 := @parameter1: java.io.Writer;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.opengl.GLWrapperBase: void <init>(javax.microedition.khronos.opengles.GL)>(r1);

        $r3 = new android.opengl.GLLogWrapper$PointerInfo;

        specialinvoke $r3.<android.opengl.GLLogWrapper$PointerInfo: void <init>(android.opengl.GLLogWrapper)>(r0);

        r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mColorPointer> = $r3;

        $r4 = new android.opengl.GLLogWrapper$PointerInfo;

        specialinvoke $r4.<android.opengl.GLLogWrapper$PointerInfo: void <init>(android.opengl.GLLogWrapper)>(r0);

        r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mNormalPointer> = $r4;

        $r5 = new android.opengl.GLLogWrapper$PointerInfo;

        specialinvoke $r5.<android.opengl.GLLogWrapper$PointerInfo: void <init>(android.opengl.GLLogWrapper)>(r0);

        r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mTexCoordPointer> = $r5;

        $r6 = new android.opengl.GLLogWrapper$PointerInfo;

        specialinvoke $r6.<android.opengl.GLLogWrapper$PointerInfo: void <init>(android.opengl.GLLogWrapper)>(r0);

        r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mVertexPointer> = $r6;

        r0.<android.opengl.GLLogWrapper: java.io.Writer mLog> = r2;

        r0.<android.opengl.GLLogWrapper: boolean mLogArgumentNames> = z0;

        return;
    }

    static java.nio.ByteBuffer access$000(android.opengl.GLLogWrapper, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.Buffer r1;
        java.nio.ByteBuffer $r2;

        r0 := @parameter0: android.opengl.GLLogWrapper;

        i0 := @parameter1: int;

        r1 := @parameter2: java.nio.Buffer;

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer)>(i0, r1);

        return $r2;
    }

    private void arg(java.lang.String, float)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r2;
        float f0;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r2);

        return;
    }

    private void arg(java.lang.String, int)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r2;
        int i0;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r2);

        return;
    }

    private void arg(java.lang.String, int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r3;
        int i0;
        java.nio.FloatBuffer r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.nio.FloatBuffer;

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,java.nio.FloatBuffer)>(i0, r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }

    private void arg(java.lang.String, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r3;
        int i0;
        java.nio.IntBuffer r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.nio.IntBuffer;

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,int,java.nio.IntBuffer)>(i0, 0, r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }

    private void arg(java.lang.String, int, java.nio.ShortBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r3;
        int i0;
        java.nio.ShortBuffer r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.nio.ShortBuffer;

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,java.nio.ShortBuffer)>(i0, r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }

    private void arg(java.lang.String, int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r3;
        int i0, i1;
        float[] r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: float[];

        i1 := @parameter3: int;

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,float[],int)>(i0, r2, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }

    private void arg(java.lang.String, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r3;
        int i0, i1;
        int[] r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        i1 := @parameter3: int;

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,int,int[],int)>(i0, 0, r2, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }

    private void arg(java.lang.String, int, short[], int)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r3;
        int i0, i1;
        short[] r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: short[];

        i1 := @parameter3: int;

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,short[],int)>(i0, r2, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }

    private void arg(java.lang.String, java.lang.String)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, r2, $r7;
        int i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = r0.<android.opengl.GLLogWrapper: int mArgCount>;

        $i1 = i0 + 1;

        r0.<android.opengl.GLLogWrapper: int mArgCount> = $i1;

        if i0 <= 0 goto label1;

        specialinvoke r0.<android.opengl.GLLogWrapper: void log(java.lang.String)>(", ");

     label1:
        $z0 = r0.<android.opengl.GLLogWrapper: boolean mLogArgumentNames>;

        if $z0 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void log(java.lang.String)>($r7);

     label2:
        specialinvoke r0.<android.opengl.GLLogWrapper: void log(java.lang.String)>(r2);

        return;
    }

    private void arg(java.lang.String, boolean)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r2;
        boolean z0;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r2);

        return;
    }

    private void argPointer(int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.nio.Buffer r1;
        java.lang.String $r2, $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("size", i0);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getPointerTypeName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("type", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("stride", i2);

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pointer", $r3);

        return;
    }

    private void begin(java.lang.String)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void log(java.lang.String)>($r6);

        r0.<android.opengl.GLLogWrapper: int mArgCount> = 0;

        return;
    }

    private void bindArrays()
    {
        android.opengl.GLLogWrapper r0;
        boolean $z0, $z1, $z2, $z3;
        android.opengl.GLLogWrapper$PointerInfo $r1, $r2, $r3, $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        $z0 = r0.<android.opengl.GLLogWrapper: boolean mColorArrayEnabled>;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mColorPointer>;

        virtualinvoke $r4.<android.opengl.GLLogWrapper$PointerInfo: void bindByteBuffer()>();

     label1:
        $z1 = r0.<android.opengl.GLLogWrapper: boolean mNormalArrayEnabled>;

        if $z1 == 0 goto label2;

        $r3 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mNormalPointer>;

        virtualinvoke $r3.<android.opengl.GLLogWrapper$PointerInfo: void bindByteBuffer()>();

     label2:
        $z2 = r0.<android.opengl.GLLogWrapper: boolean mTextureCoordArrayEnabled>;

        if $z2 == 0 goto label3;

        $r2 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mTexCoordPointer>;

        virtualinvoke $r2.<android.opengl.GLLogWrapper$PointerInfo: void bindByteBuffer()>();

     label3:
        $z3 = r0.<android.opengl.GLLogWrapper: boolean mVertexArrayEnabled>;

        if $z3 == 0 goto label4;

        $r1 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mVertexPointer>;

        virtualinvoke $r1.<android.opengl.GLLogWrapper$PointerInfo: void bindByteBuffer()>();

     label4:
        return;
    }

    private void checkError()
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;

        r0 := @this: android.opengl.GLLogWrapper;

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        i0 = interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: int glGetError()>();

        if i0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("glError: ");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void logLine(java.lang.String)>($r7);

     label1:
        return;
    }

    private void doArrayElement(java.lang.StringBuilder, boolean, java.lang.String, android.opengl.GLLogWrapper$PointerInfo, int)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.StringBuilder r1, $r5;
        boolean z0;
        android.opengl.GLLogWrapper$PointerInfo r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i12, i13, i14, i15;
        java.lang.String $r8, $r14, $r17, $r20, $r22, $r24, r29;
        java.nio.ByteBuffer $r11, r30;
        java.nio.FloatBuffer $r13;
        float $f0;
        java.nio.IntBuffer $r16;
        java.nio.ShortBuffer $r19;
        short $s8, $s10;
        byte $b9, $b11;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.StringBuilder;

        z0 := @parameter1: boolean;

        r29 := @parameter2: java.lang.String;

        r2 := @parameter3: android.opengl.GLLogWrapper$PointerInfo;

        i12 := @parameter4: int;

        if z0 != 0 goto label01;

        return;

     label01:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":{");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        if r2 == null goto label14;

        $r11 = r2.<android.opengl.GLLogWrapper$PointerInfo: java.nio.ByteBuffer mTempByteBuffer>;

        if $r11 != null goto label02;

        goto label14;

     label02:
        $i3 = r2.<android.opengl.GLLogWrapper$PointerInfo: int mStride>;

        if $i3 >= 0 goto label03;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid stride");

        return;

     label03:
        i13 = virtualinvoke r2.<android.opengl.GLLogWrapper$PointerInfo: int getStride()>();

        r30 = r2.<android.opengl.GLLogWrapper$PointerInfo: java.nio.ByteBuffer mTempByteBuffer>;

        i0 = r2.<android.opengl.GLLogWrapper$PointerInfo: int mSize>;

        i1 = r2.<android.opengl.GLLogWrapper$PointerInfo: int mType>;

        i2 = virtualinvoke r2.<android.opengl.GLLogWrapper$PointerInfo: int sizeof(int)>(i1);

        i14 = i13 * i12;

        i15 = 0;

     label04:
        if i15 >= i0 goto label13;

        if i15 <= 0 goto label05;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label05:
        if i1 == 5126 goto label11;

        if i1 == 5132 goto label10;

        tableswitch(i1)
        {
            case 5120: goto label09;
            case 5121: goto label08;
            case 5122: goto label07;
            default: goto label06;
        };

     label06:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        goto label12;

     label07:
        $r19 = virtualinvoke r30.<java.nio.ByteBuffer: java.nio.ShortBuffer asShortBuffer()>();

        $i7 = i14 / 2;

        $s8 = virtualinvoke $r19.<java.nio.ShortBuffer: short get(int)>($i7);

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($s8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        goto label12;

     label08:
        $b9 = virtualinvoke r30.<java.nio.ByteBuffer: byte get(int)>(i14);

        $s10 = $b9 & 255;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($s10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        goto label12;

     label09:
        $b11 = virtualinvoke r30.<java.nio.ByteBuffer: byte get(int)>(i14);

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($b11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        goto label12;

     label10:
        $r16 = virtualinvoke r30.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        $i5 = i14 / 4;

        $i6 = virtualinvoke $r16.<java.nio.IntBuffer: int get(int)>($i5);

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        goto label12;

     label11:
        $r13 = virtualinvoke r30.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>();

        $i4 = i14 / 4;

        $f0 = virtualinvoke $r13.<java.nio.FloatBuffer: float get(int)>($i4);

        $r14 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label12:
        i14 = i14 + i2;

        i15 = i15 + 1;

        goto label04;

     label13:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        return;

     label14:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("undefined }");

        return;
    }

    private void doElement(java.lang.StringBuilder, int, int)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.StringBuilder r1, $r3;
        int i0, i1;
        java.lang.String $r9;
        android.opengl.GLLogWrapper$PointerInfo $r11, $r12, $r13, $r14;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] =");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $z0 = r0.<android.opengl.GLLogWrapper: boolean mVertexArrayEnabled>;

        $r11 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mVertexPointer>;

        specialinvoke r0.<android.opengl.GLLogWrapper: void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,android.opengl.GLLogWrapper$PointerInfo,int)>(r1, $z0, "v", $r11, i1);

        $z1 = r0.<android.opengl.GLLogWrapper: boolean mNormalArrayEnabled>;

        $r12 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mNormalPointer>;

        specialinvoke r0.<android.opengl.GLLogWrapper: void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,android.opengl.GLLogWrapper$PointerInfo,int)>(r1, $z1, "n", $r12, i1);

        $z2 = r0.<android.opengl.GLLogWrapper: boolean mColorArrayEnabled>;

        $r13 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mColorPointer>;

        specialinvoke r0.<android.opengl.GLLogWrapper: void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,android.opengl.GLLogWrapper$PointerInfo,int)>(r1, $z2, "c", $r13, i1);

        $z3 = r0.<android.opengl.GLLogWrapper: boolean mTextureCoordArrayEnabled>;

        $r14 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mTexCoordPointer>;

        specialinvoke r0.<android.opengl.GLLogWrapper: void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,android.opengl.GLLogWrapper$PointerInfo,int)>(r1, $z3, "t", $r14, i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        return;
    }

    private void end()
    {
        android.opengl.GLLogWrapper r0;

        r0 := @this: android.opengl.GLLogWrapper;

        specialinvoke r0.<android.opengl.GLLogWrapper: void log(java.lang.String)>(");\n");

        specialinvoke r0.<android.opengl.GLLogWrapper: void flush()>();

        return;
    }

    private void endLogIndices()
    {
        android.opengl.GLLogWrapper r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        $r1 = r0.<android.opengl.GLLogWrapper: java.lang.StringBuilder mStringBuilder>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void log(java.lang.String)>($r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void unbindArrays()>();

        return;
    }

    private void flush()
    {
        android.opengl.GLLogWrapper r0;
        java.io.Writer $r2;
        java.lang.Throwable $r3;

        r0 := @this: android.opengl.GLLogWrapper;

     label1:
        $r2 = r0.<android.opengl.GLLogWrapper: java.io.Writer mLog>;

        virtualinvoke $r2.<java.io.Writer: void flush()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0.<android.opengl.GLLogWrapper: java.io.Writer mLog> = null;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void formattedAppend(java.lang.StringBuilder, int, int)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.StringBuilder r1;
        int i0, i1;
        float $f0, $f1, $f2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 == 0 goto label3;

        if i1 == 1 goto label2;

        if i1 == 2 goto label1;

        goto label4;

     label1:
        $f1 = (float) i0;

        $f2 = $f1 / 65536.0F;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        goto label4;

     label2:
        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        goto label4;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label4:
        return;
    }

    private java.lang.String getBeginMode(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label8;
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label2:
        return "GL_TRIANGLE_FAN";

     label3:
        return "GL_TRIANGLE_STRIP";

     label4:
        return "GL_TRIANGLES";

     label5:
        return "GL_LINE_STRIP";

     label6:
        return "GL_LINE_LOOP";

     label7:
        return "GL_LINES";

     label8:
        return "GL_POINTS";
    }

    private java.lang.String getCap(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 2832: goto label36;
            case 2848: goto label35;
            case 2884: goto label34;
            case 2896: goto label33;
            case 2903: goto label32;
            case 2912: goto label31;
            case 2929: goto label30;
            case 2960: goto label29;
            case 2977: goto label28;
            case 3008: goto label27;
            case 3024: goto label26;
            case 3042: goto label25;
            case 3058: goto label24;
            case 3089: goto label23;
            case 3553: goto label22;
            case 32826: goto label21;
            case 32888: goto label20;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case 16384: goto label19;
            case 16385: goto label18;
            case 16386: goto label17;
            case 16387: goto label16;
            case 16388: goto label15;
            case 16389: goto label14;
            case 16390: goto label13;
            case 16391: goto label12;
            default: goto label02;
        };

     label02:
        tableswitch(i0)
        {
            case 32884: goto label11;
            case 32885: goto label10;
            case 32886: goto label09;
            default: goto label03;
        };

     label03:
        tableswitch(i0)
        {
            case 32925: goto label08;
            case 32926: goto label07;
            case 32927: goto label06;
            case 32928: goto label05;
            default: goto label04;
        };

     label04:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label05:
        return "GL_SAMPLE_COVERAGE";

     label06:
        return "GL_SAMPLE_ALPHA_TO_ONE";

     label07:
        return "GL_SAMPLE_ALPHA_TO_COVERAGE";

     label08:
        return "GL_MULTISAMPLE";

     label09:
        return "GL_COLOR_ARRAY";

     label10:
        return "GL_NORMAL_ARRAY";

     label11:
        return "GL_VERTEX_ARRAY";

     label12:
        return "GL_LIGHT7";

     label13:
        return "GL_LIGHT6";

     label14:
        return "GL_LIGHT5";

     label15:
        return "GL_LIGHT4";

     label16:
        return "GL_LIGHT3";

     label17:
        return "GL_LIGHT2";

     label18:
        return "GL_LIGHT1";

     label19:
        return "GL_LIGHT0";

     label20:
        return "GL_TEXTURE_COORD_ARRAY";

     label21:
        return "GL_RESCALE_NORMAL";

     label22:
        return "GL_TEXTURE_2D";

     label23:
        return "GL_SCISSOR_TEST";

     label24:
        return "GL_COLOR_LOGIC_OP";

     label25:
        return "GL_BLEND";

     label26:
        return "GL_DITHER";

     label27:
        return "GL_ALPHA_TEST";

     label28:
        return "GL_NORMALIZE";

     label29:
        return "GL_STENCIL_TEST";

     label30:
        return "GL_DEPTH_TEST";

     label31:
        return "GL_FOG";

     label32:
        return "GL_COLOR_MATERIAL";

     label33:
        return "GL_LIGHTING";

     label34:
        return "GL_CULL_FACE";

     label35:
        return "GL_LINE_SMOOTH";

     label36:
        return "GL_POINT_SMOOTH";
    }

    private java.lang.String getClearBufferMask(int)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, $i9;
        java.lang.String $r3, $r11;

        r0 := @this: android.opengl.GLLogWrapper;

        i5 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i6 = i5;

        $i0 = i5 & 256;

        if $i0 == 0 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GL_DEPTH_BUFFER_BIT");

        i6 = i5 & -257;

     label1:
        i7 = i6;

        $i1 = i6 & 1024;

        if $i1 == 0 goto label3;

        $i4 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i4 <= 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GL_STENCIL_BUFFER_BIT");

        i7 = i6 & -1025;

     label3:
        i8 = i7;

        $i9 = i7 & 16384;

        if $i9 == 0 goto label5;

        $i3 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GL_COLOR_BUFFER_BIT");

        i8 = i7 & -16385;

     label5:
        if i8 == 0 goto label7;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

     label6:
        $r3 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label7:
        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private java.lang.String getClientState(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 32884: goto label5;
            case 32885: goto label4;
            case 32886: goto label3;
            case 32887: goto label1;
            case 32888: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label2:
        return "GL_TEXTURE_COORD_ARRAY";

     label3:
        return "GL_COLOR_ARRAY";

     label4:
        return "GL_NORMAL_ARRAY";

     label5:
        return "GL_VERTEX_ARRAY";
    }

    public static java.lang.String getErrorString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        if i0 == 0 goto label8;

        tableswitch(i0)
        {
            case 1280: goto label7;
            case 1281: goto label6;
            case 1282: goto label5;
            case 1283: goto label4;
            case 1284: goto label3;
            case 1285: goto label2;
            default: goto label1;
        };

     label1:
        $r0 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r0;

     label2:
        return "GL_OUT_OF_MEMORY";

     label3:
        return "GL_STACK_UNDERFLOW";

     label4:
        return "GL_STACK_OVERFLOW";

     label5:
        return "GL_INVALID_OPERATION";

     label6:
        return "GL_INVALID_VALUE";

     label7:
        return "GL_INVALID_ENUM";

     label8:
        return "GL_NO_ERROR";
    }

    private java.lang.String getFaceName(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 1032 goto label1;

        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label1:
        return "GL_FRONT_AND_BACK";
    }

    private java.lang.String getFactor(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 0 goto label12;

        if i0 == 1 goto label11;

        tableswitch(i0)
        {
            case 768: goto label10;
            case 769: goto label09;
            case 770: goto label08;
            case 771: goto label07;
            case 772: goto label06;
            case 773: goto label05;
            case 774: goto label04;
            case 775: goto label03;
            case 776: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label02:
        return "GL_SRC_ALPHA_SATURATE";

     label03:
        return "GL_ONE_MINUS_DST_COLOR";

     label04:
        return "GL_DST_COLOR";

     label05:
        return "GL_ONE_MINUS_DST_ALPHA";

     label06:
        return "GL_DST_ALPHA";

     label07:
        return "GL_ONE_MINUS_SRC_ALPHA";

     label08:
        return "GL_SRC_ALPHA";

     label09:
        return "GL_ONE_MINUS_SRC_COLOR";

     label10:
        return "GL_SRC_COLOR";

     label11:
        return "GL_ONE";

     label12:
        return "GL_ZERO";
    }

    private java.lang.String getFogPName(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 2914: goto label6;
            case 2915: goto label5;
            case 2916: goto label4;
            case 2917: goto label3;
            case 2918: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label2:
        return "GL_FOG_COLOR";

     label3:
        return "GL_FOG_MODE";

     label4:
        return "GL_FOG_END";

     label5:
        return "GL_FOG_START";

     label6:
        return "GL_FOG_DENSITY";
    }

    private int getFogParamCount(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 2914: goto label6;
            case 2915: goto label5;
            case 2916: goto label4;
            case 2917: goto label3;
            case 2918: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 4;

     label3:
        return 1;

     label4:
        return 1;

     label5:
        return 1;

     label6:
        return 1;
    }

    private static java.lang.String getHex(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r5;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private java.lang.String getHintMode(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 4352: goto label4;
            case 4353: goto label3;
            case 4354: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label2:
        return "GL_NICEST";

     label3:
        return "GL_FASTEST";

     label4:
        return "GL_DONT_CARE";
    }

    private java.lang.String getHintTarget(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 33170 goto label7;

        tableswitch(i0)
        {
            case 3152: goto label6;
            case 3153: goto label5;
            case 3154: goto label4;
            case 3155: goto label3;
            case 3156: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label2:
        return "GL_FOG_HINT";

     label3:
        return "GL_POLYGON_SMOOTH_HINT";

     label4:
        return "GL_LINE_SMOOTH_HINT";

     label5:
        return "GL_POINT_SMOOTH_HINT";

     label6:
        return "GL_PERSPECTIVE_CORRECTION_HINT";

     label7:
        return "GL_GENERATE_MIPMAP_HINT";
    }

    private java.lang.String getIndexType(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 5121 goto label2;

        if i0 == 5123 goto label1;

        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label1:
        return "GL_UNSIGNED_SHORT";

     label2:
        return "GL_UNSIGNED_BYTE";
    }

    private int getIntegerStateFormat(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 35213: goto label2;
            case 35214: goto label2;
            case 35215: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private java.lang.String getIntegerStateName(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 2834: goto label26;
            case 2850: goto label25;
            case 3377: goto label24;
            case 3379: goto label23;
            case 3382: goto label22;
            case 3384: goto label21;
            case 3385: goto label20;
            case 3386: goto label19;
            case 3408: goto label18;
            case 3410: goto label17;
            case 3411: goto label16;
            case 3412: goto label15;
            case 3413: goto label14;
            case 3414: goto label13;
            case 3415: goto label12;
            case 33000: goto label11;
            case 33001: goto label10;
            case 33901: goto label09;
            case 33902: goto label08;
            case 34018: goto label07;
            case 34466: goto label06;
            case 34467: goto label05;
            case 35213: goto label04;
            case 35214: goto label03;
            case 35215: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label02:
        return "GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES";

     label03:
        return "GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES";

     label04:
        return "GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES";

     label05:
        return "GL_COMPRESSED_TEXTURE_FORMATS";

     label06:
        return "GL_NUM_COMPRESSED_TEXTURE_FORMATS";

     label07:
        return "GL_MAX_TEXTURE_UNITS";

     label08:
        return "GL_ALIASED_LINE_WIDTH_RANGE";

     label09:
        return "GL_ALIASED_POINT_SIZE_RANGE";

     label10:
        return "GL_MAX_ELEMENTS_INDICES";

     label11:
        return "GL_MAX_ELEMENTS_VERTICES";

     label12:
        return "GL_STENCIL_BITS";

     label13:
        return "GL_DEPTH_BITS";

     label14:
        return "GL_ALPHA_BITS";

     label15:
        return "GL_BLUE_BITS";

     label16:
        return "GL_GREEN_BITS";

     label17:
        return "GL_RED_BITS";

     label18:
        return "GL_SUBPIXEL_BITS";

     label19:
        return "GL_MAX_VIEWPORT_DIMS";

     label20:
        return "GL_MAX_TEXTURE_STACK_DEPTH";

     label21:
        return "GL_MAX_PROJECTION_STACK_DEPTH";

     label22:
        return "GL_MAX_MODELVIEW_STACK_DEPTH";

     label23:
        return "GL_MAX_TEXTURE_SIZE";

     label24:
        return "GL_MAX_LIGHTS";

     label25:
        return "GL_SMOOTH_LINE_WIDTH_RANGE";

     label26:
        return "GL_SMOOTH_POINT_SIZE_RANGE";
    }

    private int getIntegerStateSize(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, $i1;
        int[] r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 2834: goto label24;
            case 2850: goto label23;
            case 3377: goto label22;
            case 3379: goto label21;
            case 3382: goto label20;
            case 3384: goto label19;
            case 3385: goto label18;
            case 3386: goto label17;
            case 3408: goto label16;
            case 3410: goto label15;
            case 3411: goto label14;
            case 3412: goto label13;
            case 3413: goto label12;
            case 3414: goto label11;
            case 3415: goto label10;
            case 33000: goto label09;
            case 33001: goto label08;
            case 33901: goto label07;
            case 33902: goto label06;
            case 34018: goto label05;
            case 34466: goto label04;
            case 34467: goto label03;
            case 35213: goto label02;
            case 35214: goto label02;
            case 35215: goto label02;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        return 16;

     label03:
        r1 = newarray (int)[1];

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,int[],int)>(34466, r1, 0);

        $i1 = r1[0];

        return $i1;

     label04:
        return 1;

     label05:
        return 1;

     label06:
        return 2;

     label07:
        return 2;

     label08:
        return 1;

     label09:
        return 1;

     label10:
        return 1;

     label11:
        return 1;

     label12:
        return 1;

     label13:
        return 1;

     label14:
        return 1;

     label15:
        return 1;

     label16:
        return 1;

     label17:
        return 2;

     label18:
        return 1;

     label19:
        return 1;

     label20:
        return 1;

     label21:
        return 1;

     label22:
        return 1;

     label23:
        return 2;

     label24:
        return 2;
    }

    private java.lang.String getLightModelPName(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 2898 goto label2;

        if i0 == 2899 goto label1;

        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label1:
        return "GL_LIGHT_MODEL_AMBIENT";

     label2:
        return "GL_LIGHT_MODEL_TWO_SIDE";
    }

    private int getLightModelParamCount(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 2898 goto label2;

        if i0 == 2899 goto label1;

        return 0;

     label1:
        return 4;

     label2:
        return 1;
    }

    private java.lang.String getLightName(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r2, $r5, $r7;
        java.lang.StringBuilder $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 < 16384 goto label1;

        if i0 > 16391 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GL_LIGHT");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        $r2 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r2;
    }

    private java.lang.String getLightPName(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 4608: goto label11;
            case 4609: goto label10;
            case 4610: goto label09;
            case 4611: goto label08;
            case 4612: goto label07;
            case 4613: goto label06;
            case 4614: goto label05;
            case 4615: goto label04;
            case 4616: goto label03;
            case 4617: goto label02;
            default: goto label01;
        };

     label01:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label02:
        return "GL_QUADRATIC_ATTENUATION";

     label03:
        return "GL_LINEAR_ATTENUATION";

     label04:
        return "GL_CONSTANT_ATTENUATION";

     label05:
        return "GL_SPOT_CUTOFF";

     label06:
        return "GL_SPOT_EXPONENT";

     label07:
        return "GL_SPOT_DIRECTION";

     label08:
        return "GL_POSITION";

     label09:
        return "GL_SPECULAR";

     label10:
        return "GL_DIFFUSE";

     label11:
        return "GL_AMBIENT";
    }

    private int getLightParamCount(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 4608: goto label11;
            case 4609: goto label10;
            case 4610: goto label09;
            case 4611: goto label08;
            case 4612: goto label07;
            case 4613: goto label06;
            case 4614: goto label05;
            case 4615: goto label04;
            case 4616: goto label03;
            case 4617: goto label02;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        return 1;

     label03:
        return 1;

     label04:
        return 1;

     label05:
        return 1;

     label06:
        return 1;

     label07:
        return 3;

     label08:
        return 4;

     label09:
        return 4;

     label10:
        return 4;

     label11:
        return 4;
    }

    private java.lang.String getMaterialPName(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 4608: goto label8;
            case 4609: goto label7;
            case 4610: goto label6;
            default: goto label1;
        };

     label1:
        tableswitch(i0)
        {
            case 5632: goto label5;
            case 5633: goto label4;
            case 5634: goto label3;
            default: goto label2;
        };

     label2:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label3:
        return "GL_AMBIENT_AND_DIFFUSE";

     label4:
        return "GL_SHININESS";

     label5:
        return "GL_EMISSION";

     label6:
        return "GL_SPECULAR";

     label7:
        return "GL_DIFFUSE";

     label8:
        return "GL_AMBIENT";
    }

    private int getMaterialParamCount(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 4608: goto label8;
            case 4609: goto label7;
            case 4610: goto label6;
            default: goto label1;
        };

     label1:
        tableswitch(i0)
        {
            case 5632: goto label5;
            case 5633: goto label4;
            case 5634: goto label3;
            default: goto label2;
        };

     label2:
        return 0;

     label3:
        return 4;

     label4:
        return 1;

     label5:
        return 4;

     label6:
        return 4;

     label7:
        return 4;

     label8:
        return 4;
    }

    private java.lang.String getMatrixMode(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 5888: goto label4;
            case 5889: goto label3;
            case 5890: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label2:
        return "GL_TEXTURE";

     label3:
        return "GL_PROJECTION";

     label4:
        return "GL_MODELVIEW";
    }

    private java.lang.String getPointerTypeName(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 5126 goto label6;

        if i0 == 5132 goto label5;

        tableswitch(i0)
        {
            case 5120: goto label4;
            case 5121: goto label3;
            case 5122: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label2:
        return "GL_SHORT";

     label3:
        return "GL_UNSIGNED_BYTE";

     label4:
        return "GL_BYTE";

     label5:
        return "GL_FIXED";

     label6:
        return "GL_FLOAT";
    }

    private java.lang.String getShadeModel(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 7424 goto label2;

        if i0 == 7425 goto label1;

        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label1:
        return "GL_SMOOTH";

     label2:
        return "GL_FLAT";
    }

    private java.lang.String getTextureEnvPName(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 8704 goto label2;

        if i0 == 8705 goto label1;

        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label1:
        return "GL_TEXTURE_ENV_COLOR";

     label2:
        return "GL_TEXTURE_ENV_MODE";
    }

    private int getTextureEnvParamCount(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 8704 goto label2;

        if i0 == 8705 goto label1;

        return 0;

     label1:
        return 4;

     label2:
        return 1;
    }

    private java.lang.String getTextureEnvParamName(float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, $f1;
        int i0;
        byte $b1;
        java.lang.String $r1, $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        i0 = (int) f0;

        $f1 = (float) i0;

        $b1 = f0 cmpl $f1;

        if $b1 != 0 goto label7;

        if i0 == 260 goto label6;

        if i0 == 3042 goto label5;

        if i0 == 7681 goto label4;

        if i0 == 34160 goto label3;

        if i0 == 8448 goto label2;

        if i0 == 8449 goto label1;

        $r2 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r2;

     label1:
        return "GL_DECAL";

     label2:
        return "GL_MODULATE";

     label3:
        return "GL_COMBINE";

     label4:
        return "GL_REPLACE";

     label5:
        return "GL_BLEND";

     label6:
        return "GL_ADD";

     label7:
        $r1 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        return $r1;
    }

    private java.lang.String getTextureEnvTarget(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 8960 goto label1;

        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label1:
        return "GL_TEXTURE_ENV";
    }

    private java.lang.String getTexturePName(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 33169 goto label7;

        if i0 == 35741 goto label6;

        tableswitch(i0)
        {
            case 10240: goto label5;
            case 10241: goto label4;
            case 10242: goto label3;
            case 10243: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label2:
        return "GL_TEXTURE_WRAP_T";

     label3:
        return "GL_TEXTURE_WRAP_S";

     label4:
        return "GL_TEXTURE_MIN_FILTER";

     label5:
        return "GL_TEXTURE_MAG_FILTER";

     label6:
        return "GL_TEXTURE_CROP_RECT_OES";

     label7:
        return "GL_GENERATE_MIPMAP";
    }

    private java.lang.String getTextureParamName(float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, $f1;
        int i0;
        byte $b1;
        java.lang.String $r1, $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        i0 = (int) f0;

        $f1 = (float) i0;

        $b1 = f0 cmpl $f1;

        if $b1 != 0 goto label10;

        if i0 == 9728 goto label09;

        if i0 == 9729 goto label08;

        if i0 == 10497 goto label07;

        if i0 == 33071 goto label06;

        tableswitch(i0)
        {
            case 9984: goto label05;
            case 9985: goto label04;
            case 9986: goto label03;
            case 9987: goto label02;
            default: goto label01;
        };

     label01:
        $r2 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r2;

     label02:
        return "GL_LINEAR_MIPMAP_LINEAR";

     label03:
        return "GL_NEAREST_MIPMAP_LINEAR";

     label04:
        return "GL_LINEAR_MIPMAP_NEAREST";

     label05:
        return "GL_NEAREST_MIPMAP_NEAREST";

     label06:
        return "GL_CLAMP_TO_EDGE";

     label07:
        return "GL_REPEAT";

     label08:
        return "GL_LINEAR";

     label09:
        return "GL_NEAREST";

     label10:
        $r1 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        return $r1;
    }

    private java.lang.String getTextureTarget(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        if i0 == 3553 goto label1;

        $r1 = staticinvoke <android.opengl.GLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r1;

     label1:
        return "GL_TEXTURE_2D";
    }

    private void log(java.lang.String)
    {
        android.opengl.GLLogWrapper r0;
        java.io.Writer $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: android.opengl.GLLogWrapper;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<android.opengl.GLLogWrapper: java.io.Writer mLog>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void logLine(java.lang.String)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void log(java.lang.String)>($r6);

        return;
    }

    private void returns(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(java.lang.String)>($r1);

        return;
    }

    private void returns(java.lang.String)
    {
        android.opengl.GLLogWrapper r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") returns ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void log(java.lang.String)>($r7);

        specialinvoke r0.<android.opengl.GLLogWrapper: void flush()>();

        return;
    }

    private void startLogIndices()
    {
        android.opengl.GLLogWrapper r0;
        java.lang.StringBuilder $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r0.<android.opengl.GLLogWrapper: java.lang.StringBuilder mStringBuilder> = $r2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        specialinvoke r0.<android.opengl.GLLogWrapper: void bindArrays()>();

        return;
    }

    private java.nio.ByteBuffer toByteBuffer(int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.lang.RuntimeException $r1;
        java.nio.ByteBuffer $r2, $r8, $r12, $r16, $r20, $r24, $r28, r33, r34;
        java.nio.ByteOrder $r3, $r9, $r13, $r17, $r21, $r25, $r29, $r47;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i14, $i15, $i17, i18, i19, i20, i21, i22, $i23, i24, i25, $i26, i27, i28, $i29, i30, i31, $i32, i33, i34, $i35, i36, i37, $i38;
        double $d0;
        float $f0;
        short $s10;
        char $c13;
        byte $b16;
        java.nio.Buffer r32;
        java.nio.CharBuffer r35, r36;
        java.nio.ShortBuffer r37, r38;
        java.nio.IntBuffer r39, r40;
        java.nio.FloatBuffer r41, r42;
        java.nio.DoubleBuffer r43, r44;
        java.nio.LongBuffer r45, r46;

        r0 := @this: android.opengl.GLLogWrapper;

        i18 := @parameter0: int;

        r32 := @parameter1: java.nio.Buffer;

        if i18 >= 0 goto label01;

        z7 = 1;

        goto label02;

     label01:
        z7 = 0;

     label02:
        $z0 = r32 instanceof java.nio.ByteBuffer;

        if $z0 == 0 goto label06;

        r33 = (java.nio.ByteBuffer) r32;

        i19 = virtualinvoke r33.<java.nio.ByteBuffer: int position()>();

        if z7 == 0 goto label03;

        $i17 = virtualinvoke r33.<java.nio.ByteBuffer: int limit()>();

        i18 = $i17 - i19;

     label03:
        $r28 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i18);

        $r29 = virtualinvoke r33.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();

        r34 = virtualinvoke $r28.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r29);

        i20 = 0;

     label04:
        if i20 >= i18 goto label05;

        $b16 = virtualinvoke r33.<java.nio.ByteBuffer: byte get()>();

        virtualinvoke r34.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b16);

        i20 = i20 + 1;

        goto label04;

     label05:
        virtualinvoke r33.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i19);

        goto label30;

     label06:
        $z1 = r32 instanceof java.nio.CharBuffer;

        if $z1 == 0 goto label10;

        r35 = (java.nio.CharBuffer) r32;

        i21 = virtualinvoke r35.<java.nio.CharBuffer: int position()>();

        if z7 == 0 goto label07;

        $i14 = virtualinvoke r35.<java.nio.CharBuffer: int limit()>();

        $i15 = $i14 - i21;

        i18 = $i15 * 2;

     label07:
        $r24 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i18);

        $r25 = virtualinvoke r35.<java.nio.CharBuffer: java.nio.ByteOrder order()>();

        r34 = virtualinvoke $r24.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r25);

        r36 = virtualinvoke r34.<java.nio.ByteBuffer: java.nio.CharBuffer asCharBuffer()>();

        i22 = 0;

     label08:
        $i23 = i18 / 2;

        if i22 >= $i23 goto label09;

        $c13 = virtualinvoke r35.<java.nio.CharBuffer: char get()>();

        virtualinvoke r36.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c13);

        i22 = i22 + 1;

        goto label08;

     label09:
        virtualinvoke r35.<java.nio.CharBuffer: java.nio.Buffer position(int)>(i21);

        goto label30;

     label10:
        $z2 = r32 instanceof java.nio.ShortBuffer;

        if $z2 == 0 goto label14;

        r37 = (java.nio.ShortBuffer) r32;

        i24 = virtualinvoke r37.<java.nio.ShortBuffer: int position()>();

        if z7 == 0 goto label11;

        $i11 = virtualinvoke r37.<java.nio.ShortBuffer: int limit()>();

        $i12 = $i11 - i24;

        i18 = $i12 * 2;

     label11:
        $r20 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i18);

        $r21 = virtualinvoke r37.<java.nio.ShortBuffer: java.nio.ByteOrder order()>();

        r34 = virtualinvoke $r20.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r21);

        r38 = virtualinvoke r34.<java.nio.ByteBuffer: java.nio.ShortBuffer asShortBuffer()>();

        i25 = 0;

     label12:
        $i26 = i18 / 2;

        if i25 >= $i26 goto label13;

        $s10 = virtualinvoke r37.<java.nio.ShortBuffer: short get()>();

        virtualinvoke r38.<java.nio.ShortBuffer: java.nio.ShortBuffer put(short)>($s10);

        i25 = i25 + 1;

        goto label12;

     label13:
        virtualinvoke r37.<java.nio.ShortBuffer: java.nio.Buffer position(int)>(i24);

        goto label30;

     label14:
        $z3 = r32 instanceof java.nio.IntBuffer;

        if $z3 == 0 goto label18;

        r39 = (java.nio.IntBuffer) r32;

        i27 = virtualinvoke r39.<java.nio.IntBuffer: int position()>();

        if z7 == 0 goto label15;

        $i8 = virtualinvoke r39.<java.nio.IntBuffer: int limit()>();

        $i9 = $i8 - i27;

        i18 = $i9 * 4;

     label15:
        $r16 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i18);

        $r17 = virtualinvoke r39.<java.nio.IntBuffer: java.nio.ByteOrder order()>();

        r34 = virtualinvoke $r16.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r17);

        r40 = virtualinvoke r34.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        i28 = 0;

     label16:
        $i29 = i18 / 4;

        if i28 >= $i29 goto label17;

        $i7 = virtualinvoke r39.<java.nio.IntBuffer: int get()>();

        virtualinvoke r40.<java.nio.IntBuffer: java.nio.IntBuffer put(int)>($i7);

        i28 = i28 + 1;

        goto label16;

     label17:
        virtualinvoke r39.<java.nio.IntBuffer: java.nio.Buffer position(int)>(i27);

        goto label30;

     label18:
        $z4 = r32 instanceof java.nio.FloatBuffer;

        if $z4 == 0 goto label22;

        r41 = (java.nio.FloatBuffer) r32;

        i30 = virtualinvoke r41.<java.nio.FloatBuffer: int position()>();

        if z7 == 0 goto label19;

        $i5 = virtualinvoke r41.<java.nio.FloatBuffer: int limit()>();

        $i6 = $i5 - i30;

        i18 = $i6 * 4;

     label19:
        $r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i18);

        $r13 = virtualinvoke r41.<java.nio.FloatBuffer: java.nio.ByteOrder order()>();

        r34 = virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r13);

        r42 = virtualinvoke r34.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>();

        i31 = 0;

     label20:
        $i32 = i18 / 4;

        if i31 >= $i32 goto label21;

        $f0 = virtualinvoke r41.<java.nio.FloatBuffer: float get()>();

        virtualinvoke r42.<java.nio.FloatBuffer: java.nio.FloatBuffer put(float)>($f0);

        i31 = i31 + 1;

        goto label20;

     label21:
        virtualinvoke r41.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(i30);

        goto label30;

     label22:
        $z5 = r32 instanceof java.nio.DoubleBuffer;

        if $z5 == 0 goto label26;

        r43 = (java.nio.DoubleBuffer) r32;

        i33 = virtualinvoke r43.<java.nio.DoubleBuffer: int position()>();

        if z7 == 0 goto label23;

        $i3 = virtualinvoke r43.<java.nio.DoubleBuffer: int limit()>();

        $i4 = $i3 - i33;

        i18 = $i4 * 8;

     label23:
        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i18);

        $r9 = virtualinvoke r43.<java.nio.DoubleBuffer: java.nio.ByteOrder order()>();

        r34 = virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r9);

        r44 = virtualinvoke r34.<java.nio.ByteBuffer: java.nio.DoubleBuffer asDoubleBuffer()>();

        i34 = 0;

     label24:
        $i35 = i18 / 8;

        if i34 >= $i35 goto label25;

        $d0 = virtualinvoke r43.<java.nio.DoubleBuffer: double get()>();

        virtualinvoke r44.<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double)>($d0);

        i34 = i34 + 1;

        goto label24;

     label25:
        virtualinvoke r43.<java.nio.DoubleBuffer: java.nio.Buffer position(int)>(i33);

        goto label30;

     label26:
        $z6 = r32 instanceof java.nio.LongBuffer;

        if $z6 == 0 goto label31;

        r45 = (java.nio.LongBuffer) r32;

        i36 = virtualinvoke r45.<java.nio.LongBuffer: int position()>();

        if z7 == 0 goto label27;

        $i1 = virtualinvoke r45.<java.nio.LongBuffer: int limit()>();

        $i2 = $i1 - i36;

        i18 = $i2 * 8;

     label27:
        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i18);

        $r3 = virtualinvoke r45.<java.nio.LongBuffer: java.nio.ByteOrder order()>();

        r34 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r3);

        r46 = virtualinvoke r34.<java.nio.ByteBuffer: java.nio.LongBuffer asLongBuffer()>();

        i37 = 0;

     label28:
        $i38 = i18 / 8;

        if i37 >= $i38 goto label29;

        $l0 = virtualinvoke r45.<java.nio.LongBuffer: long get()>();

        virtualinvoke r46.<java.nio.LongBuffer: java.nio.LongBuffer put(long)>($l0);

        i37 = i37 + 1;

        goto label28;

     label29:
        virtualinvoke r45.<java.nio.LongBuffer: java.nio.Buffer position(int)>(i36);

     label30:
        virtualinvoke r34.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r47 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke r34.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r47);

        return r34;

     label31:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unimplemented Buffer subclass.");

        throw $r1;
    }

    private char[] toCharIndices(int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        char[] r1;
        java.nio.ByteBuffer r2, $r3;
        int i0, $i1, $i6, i7, i8, i9, i10;
        byte $b2;
        short $s3;
        char $c4, $c5;
        boolean $z0;
        java.nio.Buffer r7;
        java.nio.CharBuffer r8;
        byte[] r9;

        r0 := @this: android.opengl.GLLogWrapper;

        i7 := @parameter0: int;

        i8 := @parameter1: int;

        r7 := @parameter2: java.nio.Buffer;

        r1 = newarray (char)[i7];

        if i8 == 5121 goto label4;

        if i8 == 5123 goto label1;

        goto label6;

     label1:
        $z0 = r7 instanceof java.nio.CharBuffer;

        if $z0 == 0 goto label2;

        r8 = (java.nio.CharBuffer) r7;

        goto label3;

     label2:
        $i6 = i7 * 2;

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer)>($i6, r7);

        r8 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.CharBuffer asCharBuffer()>();

     label3:
        i9 = virtualinvoke r8.<java.nio.CharBuffer: int position()>();

        virtualinvoke r8.<java.nio.CharBuffer: java.nio.Buffer position(int)>(0);

        virtualinvoke r8.<java.nio.CharBuffer: java.nio.CharBuffer get(char[])>(r1);

        virtualinvoke r8.<java.nio.CharBuffer: java.nio.Buffer position(int)>(i9);

        goto label6;

     label4:
        r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer)>(i7, r7);

        r9 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        i0 = virtualinvoke r2.<java.nio.ByteBuffer: int arrayOffset()>();

        i10 = 0;

     label5:
        if i10 >= i7 goto label6;

        $i1 = i0 + i10;

        $b2 = r9[$i1];

        $s3 = $b2 & 255;

        $c4 = (char) $s3;

        $c5 = (char) $c4;

        r1[i10] = $c5;

        i10 = i10 + 1;

        goto label5;

     label6:
        return r1;
    }

    private java.lang.String toString(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2, i3;
        java.nio.IntBuffer r1;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r12;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\n");

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = ");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $i2 = virtualinvoke r1.<java.nio.IntBuffer: int get(int)>(i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void formattedAppend(java.lang.StringBuilder,int,int)>($r4, $i2, i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.String toString(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4, $i5, i6;
        int[] r1;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r12;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\n");

        i3 = lengthof r1;

        i6 = 0;

     label1:
        if i6 >= i0 goto label5;

        i4 = i2 + i6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = ");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        if i4 < 0 goto label3;

        if i4 < i3 goto label2;

        goto label3;

     label2:
        $i5 = r1[i4];

        specialinvoke r0.<android.opengl.GLLogWrapper: void formattedAppend(java.lang.StringBuilder,int,int)>($r4, $i5, i1);

        goto label4;

     label3:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of bounds");

     label4:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i6 = i6 + 1;

        goto label1;

     label5:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.String toString(int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.FloatBuffer r1;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r14;
        float $f0;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.FloatBuffer;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\n");

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = ");

        $f0 = virtualinvoke r1.<java.nio.FloatBuffer: float get(int)>(i1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.String toString(int, java.nio.ShortBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i2;
        java.nio.ShortBuffer r1;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r14;
        short $s1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.ShortBuffer;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\n");

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = ");

        $s1 = virtualinvoke r1.<java.nio.ShortBuffer: short get(int)>(i2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.String toString(int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4;
        float[] r1;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r12;
        float $f0;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        i1 := @parameter2: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\n");

        i2 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label5;

        i3 = i1 + i4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = ");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        if i3 < 0 goto label3;

        if i3 < i2 goto label2;

        goto label3;

     label2:
        $f0 = r1[i3];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        goto label4;

     label3:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of bounds");

     label4:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i4 = i4 + 1;

        goto label1;

     label5:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.String toString(int, short[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i5;
        short[] r1;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r7, $r12;
        short $s4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: short[];

        i1 := @parameter2: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\n");

        i2 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i0 goto label5;

        i3 = i1 + i5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = ");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        if i3 < 0 goto label3;

        if i3 < i2 goto label2;

        goto label3;

     label2:
        $s4 = r1[i3];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s4);

        goto label4;

     label3:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of bounds");

     label4:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i5 = i5 + 1;

        goto label1;

     label5:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private void unbindArrays()
    {
        android.opengl.GLLogWrapper r0;
        boolean $z0, $z1, $z2, $z3;
        android.opengl.GLLogWrapper$PointerInfo $r1, $r2, $r3, $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        $z0 = r0.<android.opengl.GLLogWrapper: boolean mColorArrayEnabled>;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mColorPointer>;

        virtualinvoke $r4.<android.opengl.GLLogWrapper$PointerInfo: void unbindByteBuffer()>();

     label1:
        $z1 = r0.<android.opengl.GLLogWrapper: boolean mNormalArrayEnabled>;

        if $z1 == 0 goto label2;

        $r3 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mNormalPointer>;

        virtualinvoke $r3.<android.opengl.GLLogWrapper$PointerInfo: void unbindByteBuffer()>();

     label2:
        $z2 = r0.<android.opengl.GLLogWrapper: boolean mTextureCoordArrayEnabled>;

        if $z2 == 0 goto label3;

        $r2 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mTexCoordPointer>;

        virtualinvoke $r2.<android.opengl.GLLogWrapper$PointerInfo: void unbindByteBuffer()>();

     label3:
        $z3 = r0.<android.opengl.GLLogWrapper: boolean mVertexArrayEnabled>;

        if $z3 == 0 goto label4;

        $r1 = r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mVertexPointer>;

        virtualinvoke $r1.<android.opengl.GLLogWrapper$PointerInfo: void unbindByteBuffer()>();

     label4:
        return;
    }

    public void glActiveTexture(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glActiveTexture");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("texture", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glActiveTexture(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glAlphaFunc(int, float)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        float f0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glAlphaFunc");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("func", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("ref", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glAlphaFunc(int,float)>(i0, f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glAlphaFuncx(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glAlphaFuncx");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("func", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("ref", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glAlphaFuncx(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glBindBuffer(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glBindBuffer");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("buffer", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glBindBuffer(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glBindFramebufferOES(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glBindFramebufferOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("framebuffer", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindFramebufferOES(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glBindRenderbufferOES(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glBindRenderbufferOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("renderbuffer", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindRenderbufferOES(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glBindTexture(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glBindTexture");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("texture", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glBindTexture(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glBlendEquation(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glBlendEquation");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("mode", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendEquation(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glBlendEquationSeparate(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glBlendEquationSeparate");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("modeRGB", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("modeAlpha", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendEquationSeparate(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glBlendFunc(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.lang.String $r1, $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glBlendFunc");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFactor(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("sfactor", $r1);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFactor(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("dfactor", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glBlendFunc(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glBlendFuncSeparate(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glBlendFuncSeparate");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("srcRGB", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("dstRGB", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("srcAlpha", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("dstAlpha", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendFuncSeparate(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glBufferData(int, int, java.nio.Buffer, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.nio.Buffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.Buffer;

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glBufferData");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("size", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("data", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("usage", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glBufferData(int,int,java.nio.Buffer,int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glBufferSubData(int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.nio.Buffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glBufferSubData");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("size", i2);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("data", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glBufferSubData(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public int glCheckFramebufferStatusOES(int)
    {
        android.opengl.GLLogWrapper r0;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;
        int i0, i1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glCheckFramebufferStatusOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        i1 = interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: int glCheckFramebufferStatusOES(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return i1;
    }

    public void glClear(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClear");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getClearBufferMask(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("mask", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glClear(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glClearColor(float, float, float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1, f2, f3;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClearColor");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("red", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("green", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("blue", f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("alpha", f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glClearColor(float,float,float,float)>(f0, f1, f2, f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glClearColorx(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClearColor");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("red", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("green", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("blue", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("alpha", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glClearColorx(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glClearDepthf(float)
    {
        android.opengl.GLLogWrapper r0;
        float f0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClearDepthf");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("depth", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glClearDepthf(float)>(f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glClearDepthx(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClearDepthx");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("depth", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glClearDepthx(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glClearStencil(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClearStencil");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("s", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glClearStencil(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glClientActiveTexture(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClientActiveTexture");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("texture", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glClientActiveTexture(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glClipPlanef(int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.FloatBuffer r1;
        javax.microedition.khronos.opengles.GL11 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClipPlanef");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("plane", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>("equation", 4, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11: void glClipPlanef(int,java.nio.FloatBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glClipPlanef(int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        float[] r1;
        javax.microedition.khronos.opengles.GL11 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClipPlanef");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("plane", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>("equation", 4, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11: void glClipPlanef(int,float[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glClipPlanex(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        javax.microedition.khronos.opengles.GL11 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClipPlanef");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("plane", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("equation", 4, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11: void glClipPlanex(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glClipPlanex(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        javax.microedition.khronos.opengles.GL11 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glClipPlanex");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("plane", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("equation", 4, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11: void glClipPlanex(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glColor4f(float, float, float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1, f2, f3;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glColor4f");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("red", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("green", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("blue", f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("alpha", f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glColor4f(float,float,float,float)>(f0, f1, f2, f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glColor4ub(byte, byte, byte, byte)
    {
        android.opengl.GLLogWrapper r0;
        byte b0, b1, b2, b3;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        b2 := @parameter2: byte;

        b3 := @parameter3: byte;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glColor4ub");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("red", b0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("green", b1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("blue", b2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("alpha", b3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glColor4ub(byte,byte,byte,byte)>(b0, b1, b2, b3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glColor4x(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glColor4x");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("red", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("green", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("blue", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("alpha", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glColor4x(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glColorMask(boolean, boolean, boolean, boolean)
    {
        android.opengl.GLLogWrapper r0;
        boolean z0, z1, z2, z3;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glColorMask");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,boolean)>("red", z0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,boolean)>("green", z1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,boolean)>("blue", z2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,boolean)>("alpha", z3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glColorMask(boolean,boolean,boolean,boolean)>(z0, z1, z2, z3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glColorPointer(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glColorPointer");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("size", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("stride", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glColorPointer(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glColorPointer(int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.nio.Buffer r1;
        android.opengl.GLLogWrapper$PointerInfo $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glColorPointer");

        specialinvoke r0.<android.opengl.GLLogWrapper: void argPointer(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = new android.opengl.GLLogWrapper$PointerInfo;

        specialinvoke $r2.<android.opengl.GLLogWrapper$PointerInfo: void <init>(android.opengl.GLLogWrapper,int,int,int,java.nio.Buffer)>(r0, i0, i1, i2, r1);

        r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mColorPointer> = $r2;

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glColorPointer(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glCompressedTexImage2D(int, int, int, int, int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4, i5, i6;
        java.nio.Buffer r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glCompressedTexImage2D");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("level", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("internalformat", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("border", i5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("imageSize", i6);

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("data", $r3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>(i0, i1, i2, i3, i4, i5, i6, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glCompressedTexSubImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.nio.Buffer r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glCompressedTexSubImage2D");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("level", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("xoffset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("yoffset", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("format", i6);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("imageSize", i7);

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("data", $r3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>(i0, i1, i2, i3, i4, i5, i6, i7, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glCopyTexImage2D(int, int, int, int, int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glCopyTexImage2D");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("level", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("internalformat", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i6);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("border", i7);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5, i6, i7);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glCopyTexSubImage2D(int, int, int, int, int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glCopyTexSubImage2D");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("level", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("xoffset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("yoffset", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", i5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i6);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i7);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5, i6, i7);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glCullFace(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glCullFace");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("mode", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glCullFace(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glCurrentPaletteMatrixOES(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL11Ext $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glCurrentPaletteMatrixOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("matrixpaletteindex", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11Ext: void glCurrentPaletteMatrixOES(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDeleteBuffers(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDeleteBuffers");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("buffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glDeleteBuffers(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDeleteBuffers(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDeleteBuffers");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("buffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glDeleteBuffers(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDeleteFramebuffersOES(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDeleteFramebuffersOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("framebuffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDeleteFramebuffersOES(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDeleteFramebuffersOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("framebuffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteFramebuffersOES(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDeleteRenderbuffersOES(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDeleteRenderbuffersOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("renderbuffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDeleteRenderbuffersOES(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDeleteRenderbuffersOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("renderbuffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteRenderbuffersOES(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDeleteTextures(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDeleteTextures");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("textures", i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glDeleteTextures(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDeleteTextures(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDeleteTextures");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("textures", i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glDeleteTextures(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDepthFunc(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDepthFunc");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("func", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glDepthFunc(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDepthMask(boolean)
    {
        android.opengl.GLLogWrapper r0;
        boolean z0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDepthMask");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,boolean)>("flag", z0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glDepthMask(boolean)>(z0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDepthRangef(float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDepthRangef");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("near", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("far", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glDepthRangef(float,float)>(f0, f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDepthRangex(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDepthRangex");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("near", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("far", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glDepthRangex(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDisable(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDisable");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getCap(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("cap", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glDisable(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDisableClientState(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDisableClientState");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getClientState(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("array", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        tableswitch(i0)
        {
            case 32884: goto label5;
            case 32885: goto label4;
            case 32886: goto label3;
            case 32887: goto label1;
            case 32888: goto label2;
            default: goto label1;
        };

     label1:
        goto label6;

     label2:
        r0.<android.opengl.GLLogWrapper: boolean mTextureCoordArrayEnabled> = 0;

        goto label6;

     label3:
        r0.<android.opengl.GLLogWrapper: boolean mColorArrayEnabled> = 0;

        goto label6;

     label4:
        r0.<android.opengl.GLLogWrapper: boolean mNormalArrayEnabled> = 0;

        goto label6;

     label5:
        r0.<android.opengl.GLLogWrapper: boolean mVertexArrayEnabled> = 0;

     label6:
        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glDisableClientState(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawArrays(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, $i3, i4;
        javax.microedition.khronos.opengles.GL10 $r1;
        java.lang.StringBuilder $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawArrays");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("mode", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("first", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("count", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void startLogIndices()>();

        i4 = 0;

     label1:
        if i4 >= i2 goto label2;

        $r2 = r0.<android.opengl.GLLogWrapper: java.lang.StringBuilder mStringBuilder>;

        $i3 = i1 + i4;

        specialinvoke r0.<android.opengl.GLLogWrapper: void doElement(java.lang.StringBuilder,int,int)>($r2, i4, $i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.opengl.GLLogWrapper: void endLogIndices()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glDrawArrays(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawElements(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawElements");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("mode", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("count", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glDrawElements(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawElements(int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i5;
        java.nio.Buffer r1;
        char[] r2;
        java.lang.String $r3, $r4;
        javax.microedition.khronos.opengles.GL10 $r5;
        char $c4;
        java.lang.StringBuilder $r6;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawElements");

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getBeginMode(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("mode", $r3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("count", i1);

        $r4 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getIndexType(int)>(i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("type", $r4);

        r2 = specialinvoke r0.<android.opengl.GLLogWrapper: char[] toCharIndices(int,int,java.nio.Buffer)>(i1, i2, r1);

        i3 = lengthof r2;

        specialinvoke r0.<android.opengl.GLLogWrapper: void startLogIndices()>();

        i5 = 0;

     label1:
        if i5 >= i3 goto label2;

        $r6 = r0.<android.opengl.GLLogWrapper: java.lang.StringBuilder mStringBuilder>;

        $c4 = r2[i5];

        specialinvoke r0.<android.opengl.GLLogWrapper: void doElement(java.lang.StringBuilder,int,int)>($r6, i5, $c4);

        i5 = i5 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.opengl.GLLogWrapper: void endLogIndices()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r5 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r5.<javax.microedition.khronos.opengles.GL10: void glDrawElements(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexfOES(float, float, float, float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1, f2, f3, f4;
        javax.microedition.khronos.opengles.GL11Ext $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexfOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("x", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("y", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("z", f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("width", f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("height", f4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfOES(float,float,float,float,float)>(f0, f1, f2, f3, f4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexfvOES(java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.nio.FloatBuffer r1;
        javax.microedition.khronos.opengles.GL11Ext $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexfvOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>("coords", 5, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexfvOES(float[], int)
    {
        android.opengl.GLLogWrapper r0;
        float[] r1;
        int i0;
        javax.microedition.khronos.opengles.GL11Ext $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexfvOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>("coords", 5, r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfvOES(float[],int)>(r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexiOES(int, int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4;
        javax.microedition.khronos.opengles.GL11Ext $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexiOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("z", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexiOES(int,int,int,int,int)>(i0, i1, i2, i3, i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexivOES(java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.nio.IntBuffer r1;
        javax.microedition.khronos.opengles.GL11Ext $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexivOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("coords", 5, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexivOES(java.nio.IntBuffer)>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexivOES(int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int[] r1;
        int i0;
        javax.microedition.khronos.opengles.GL11Ext $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexivOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("coords", 5, r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexivOES(int[],int)>(r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexsOES(short, short, short, short, short)
    {
        android.opengl.GLLogWrapper r0;
        short s0, s1, s2, s3, s4;
        javax.microedition.khronos.opengles.GL11Ext $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        s2 := @parameter2: short;

        s3 := @parameter3: short;

        s4 := @parameter4: short;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexsOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", s0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", s1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("z", s2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", s3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", s4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsOES(short,short,short,short,short)>(s0, s1, s2, s3, s4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexsvOES(java.nio.ShortBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.nio.ShortBuffer r1;
        javax.microedition.khronos.opengles.GL11Ext $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.nio.ShortBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexsvOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.ShortBuffer)>("coords", 5, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexsvOES(short[], int)
    {
        android.opengl.GLLogWrapper r0;
        short[] r1;
        int i0;
        javax.microedition.khronos.opengles.GL11Ext $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: short[];

        i0 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexsvOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,short[],int)>("coords", 5, r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsvOES(short[],int)>(r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexxOES(int, int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4;
        javax.microedition.khronos.opengles.GL11Ext $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexxOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("z", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxOES(int,int,int,int,int)>(i0, i1, i2, i3, i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexxvOES(java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.nio.IntBuffer r1;
        javax.microedition.khronos.opengles.GL11Ext $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexxvOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("coords", 5, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glDrawTexxvOES(int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int[] r1;
        int i0;
        javax.microedition.khronos.opengles.GL11Ext $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glDrawTexxvOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("coords", 5, r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxvOES(int[],int)>(r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glEnable(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glEnable");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getCap(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("cap", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glEnable(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glEnableClientState(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glEnableClientState");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getClientState(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("array", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        tableswitch(i0)
        {
            case 32884: goto label5;
            case 32885: goto label4;
            case 32886: goto label3;
            case 32887: goto label1;
            case 32888: goto label2;
            default: goto label1;
        };

     label1:
        goto label6;

     label2:
        r0.<android.opengl.GLLogWrapper: boolean mTextureCoordArrayEnabled> = 1;

        goto label6;

     label3:
        r0.<android.opengl.GLLogWrapper: boolean mColorArrayEnabled> = 1;

        goto label6;

     label4:
        r0.<android.opengl.GLLogWrapper: boolean mNormalArrayEnabled> = 1;

        goto label6;

     label5:
        r0.<android.opengl.GLLogWrapper: boolean mVertexArrayEnabled> = 1;

     label6:
        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glEnableClientState(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFinish()
    {
        android.opengl.GLLogWrapper r0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFinish");

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glFinish()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFlush()
    {
        android.opengl.GLLogWrapper r0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFlush");

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glFlush()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFogf(int, float)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        float f0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFogf");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("param", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glFogf(int,float)>(i0, f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFogfv(int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, $i1;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFogfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFogPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $i1 = specialinvoke r0.<android.opengl.GLLogWrapper: int getFogParamCount(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>("params", $i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glFogfv(int,java.nio.FloatBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFogfv(int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFogfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFogPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getFogParamCount(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>("params", $i2, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glFogfv(int,float[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFogx(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFogx");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFogPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glFogx(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFogxv(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, $i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFogxv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFogPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $i1 = specialinvoke r0.<android.opengl.GLLogWrapper: int getFogParamCount(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("params", $i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glFogxv(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFogxv(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFogxv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFogPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getFogParamCount(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("params", $i2, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glFogxv(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFramebufferRenderbufferOES(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFramebufferRenderbufferOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("attachment", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("renderbuffertarget", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("renderbuffer", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glFramebufferRenderbufferOES(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFramebufferTexture2DOES(int, int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFramebufferTexture2DOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("attachment", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("textarget", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("texture", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("level", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glFramebufferTexture2DOES(int,int,int,int,int)>(i0, i1, i2, i3, i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFrontFace(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFrontFace");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("mode", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glFrontFace(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFrustumf(float, float, float, float, float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1, f2, f3, f4, f5;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFrustumf");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("left", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("right", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("bottom", f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("top", f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("near", f4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("far", f5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glFrustumf(float,float,float,float,float,float)>(f0, f1, f2, f3, f4, f5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glFrustumx(int, int, int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4, i5;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glFrustumx");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("left", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("right", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("bottom", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("top", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("near", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("far", i5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glFrustumx(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGenBuffers(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGenBuffers");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("buffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGenBuffers(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGenBuffers(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGenBuffers");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("buffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGenBuffers(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGenFramebuffersOES(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGenFramebuffersOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("framebuffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenFramebuffersOES(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGenFramebuffersOES(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGenFramebuffersOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("framebuffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenFramebuffersOES(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGenRenderbuffersOES(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGenRenderbuffersOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("renderbuffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGenRenderbuffersOES(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGenRenderbuffersOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("renderbuffers", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenRenderbuffersOES(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGenTextures(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2, $r4;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGenTextures");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("textures", $r2);

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glGenTextures(int,java.nio.IntBuffer)>(i0, r1);

        $r4 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,int,java.nio.IntBuffer)>(i0, 0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(java.lang.String)>($r4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGenTextures(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2, $r4;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGenTextures");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("n", i0);

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("textures", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glGenTextures(int,int[],int)>(i0, r1, i1);

        $r4 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,int,int[],int)>(i0, 0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(java.lang.String)>($r4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGenerateMipmapOES(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGenerateMipmapOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenerateMipmapOES(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetBooleanv(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetBooleanv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetBooleanv(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetBooleanv(int, boolean[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        boolean[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: boolean[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetBooleanv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetBooleanv(int,boolean[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetBufferParameteriv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetBufferParameteriv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetBufferParameteriv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetBufferParameteriv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetBufferParameteriv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetClipPlanef(int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetClipPlanef");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.nio.FloatBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("eqn", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetClipPlanef(int,java.nio.FloatBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetClipPlanef(int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetClipPlanef");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("eqn", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetClipPlanef(int,float[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetClipPlanex(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetClipPlanex");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("eqn", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetClipPlanex(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetClipPlanex(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetClipPlanex");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("eqn", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetClipPlanex(int,int[],int)>(i0, r1, i1);

        return;
    }

    public int glGetError()
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetError");

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        i0 = interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: int glGetError()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(int)>(i0);

        return i0;
    }

    public void glGetFixedv(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetFixedv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetFixedv(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetFixedv(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetFixedv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetFixedv(int,int[],int)>(i0, r1, i1);

        return;
    }

    public void glGetFloatv(int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetFloatv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.nio.FloatBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetFloatv(int,java.nio.FloatBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetFloatv(int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetFloatv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetFloatv(int,float[],int)>(i0, r1, i1);

        return;
    }

    public void glGetFramebufferAttachmentParameterivOES(int, int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetFramebufferAttachmentParameterivOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("attachment", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i2);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetFramebufferAttachmentParameterivOES(int, int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: int[];

        i3 := @parameter4: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetFramebufferAttachmentParameterivOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("attachment", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i2);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>(i0, i1, i2, r1, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetIntegerv(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, $i1, $i2;
        java.nio.IntBuffer r1;
        java.lang.String $r2, $r3, $r5;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetIntegerv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getIntegerStateName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $r3 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r3);

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,java.nio.IntBuffer)>(i0, r1);

        $i1 = specialinvoke r0.<android.opengl.GLLogWrapper: int getIntegerStateSize(int)>(i0);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getIntegerStateFormat(int)>(i0);

        $r5 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,int,java.nio.IntBuffer)>($i1, $i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(java.lang.String)>($r5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetIntegerv(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2, $i3;
        int[] r1;
        java.lang.String $r2, $r3, $r5;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetIntegerv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getIntegerStateName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $r3 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,int[],int)>(i0, r1, i1);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getIntegerStateSize(int)>(i0);

        $i3 = specialinvoke r0.<android.opengl.GLLogWrapper: int getIntegerStateFormat(int)>(i0);

        $r5 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,int,int[],int)>($i2, $i3, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(java.lang.String)>($r5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetLightfv(int, int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetLightfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("light", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.FloatBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetLightfv(int,int,java.nio.FloatBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetLightfv(int, int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetLightfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("light", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetLightfv(int,int,float[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetLightxv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetLightxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("light", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetLightxv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetLightxv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetLightxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("light", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetLightxv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetMaterialfv(int, int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetMaterialfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("face", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.FloatBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetMaterialfv(int, int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetMaterialfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("face", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetMaterialfv(int,int,float[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetMaterialxv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetMaterialxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("face", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetMaterialxv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetMaterialxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("face", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetMaterialxv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetPointerv(int, java.nio.Buffer[])
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.Buffer[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.Buffer[];

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetPointerv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetPointerv(int,java.nio.Buffer[])>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetRenderbufferParameterivOES(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetRenderbufferParameterivOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetRenderbufferParameterivOES(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetRenderbufferParameterivOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetRenderbufferParameterivOES(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public java.lang.String glGetString(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetString");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("name", i0);

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        r1 = interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(java.lang.String)>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return r1;
    }

    public void glGetTexEnviv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexEnviv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("env", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexEnviv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexEnviv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("env", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexEnvxv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexEnviv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("env", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexEnvxv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexEnviv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("env", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexGenfv(int, int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexGenfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.FloatBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexGenfv(int, int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexGenfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenfv(int,int,float[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexGeniv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexGeniv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGeniv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexGeniv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexGeniv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGeniv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexGenxv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexGenxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenxv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexGenxv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexGenxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenxv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexParameterfv(int, int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexParameterfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.FloatBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexParameterfv(int, int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexParameterfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetTexParameterfv(int,int,float[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexParameteriv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexParameteriv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexParameteriv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexParameteriv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexParameterxv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexParameterxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glGetTexParameterxv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glGetTexParameterxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glGetTexParameterxv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glHint(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.lang.String $r1, $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glHint");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getHintTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r1);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getHintMode(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("mode", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glHint(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public boolean glIsBuffer(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        boolean z0;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glIsBuffer");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("buffer", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        z0 = interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: boolean glIsBuffer(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean glIsEnabled(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        boolean z0;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glIsEnabled");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("cap", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        z0 = interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: boolean glIsEnabled(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean glIsFramebufferOES(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        boolean z0;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glIsFramebufferOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("framebuffer", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        z0 = interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: boolean glIsFramebufferOES(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean glIsRenderbufferOES(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glIsRenderbufferOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("renderbuffer", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: boolean glIsRenderbufferOES(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return 0;
    }

    public boolean glIsTexture(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        boolean z0;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glIsTexture");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("texture", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        z0 = interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: boolean glIsTexture(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return z0;
    }

    public void glLightModelf(int, float)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        float f0;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightModelf");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightModelPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("param", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glLightModelf(int,float)>(i0, f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightModelfv(int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, $i1;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightModelfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightModelPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $i1 = specialinvoke r0.<android.opengl.GLLogWrapper: int getLightModelParamCount(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>("params", $i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glLightModelfv(int,java.nio.FloatBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightModelfv(int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightModelfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightModelPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getLightModelParamCount(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>("params", $i2, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glLightModelfv(int,float[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightModelx(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightModelx");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightModelPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glLightModelx(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightModelxv(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, $i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightModelfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightModelPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $i1 = specialinvoke r0.<android.opengl.GLLogWrapper: int getLightModelParamCount(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("params", $i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glLightModelxv(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightModelxv(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightModelxv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightModelPName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getLightModelParamCount(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("params", $i2, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glLightModelxv(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightf(int, int, float)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        float f0;
        java.lang.String $r1, $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightf");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("light", $r1);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("param", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glLightf(int,int,float)>(i0, i1, f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightfv(int, int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2;
        java.nio.FloatBuffer r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("light", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getLightParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>("params", $i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glLightfv(int,int,java.nio.FloatBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightfv(int, int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, $i3;
        float[] r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("light", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i3 = specialinvoke r0.<android.opengl.GLLogWrapper: int getLightParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>("params", $i3, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glLightfv(int,int,float[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightx(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.lang.String $r1, $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightx");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("light", $r1);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glLightx(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightxv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2;
        java.nio.IntBuffer r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightxv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("light", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getLightParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("params", $i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glLightxv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLightxv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, $i3;
        int[] r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLightxv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("light", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getLightPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i3 = specialinvoke r0.<android.opengl.GLLogWrapper: int getLightParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("params", $i3, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glLightxv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLineWidth(float)
    {
        android.opengl.GLLogWrapper r0;
        float f0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLineWidth");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("width", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glLineWidth(float)>(f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLineWidthx(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLineWidthx");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glLineWidthx(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLoadIdentity()
    {
        android.opengl.GLLogWrapper r0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLoadIdentity");

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glLoadIdentity()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLoadMatrixf(java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.nio.FloatBuffer r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLoadMatrixf");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>("m", 16, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glLoadMatrixf(java.nio.FloatBuffer)>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLoadMatrixf(float[], int)
    {
        android.opengl.GLLogWrapper r0;
        float[] r1;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLoadMatrixf");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>("m", 16, r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glLoadMatrixf(float[],int)>(r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLoadMatrixx(java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.nio.IntBuffer r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLoadMatrixx");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("m", 16, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glLoadMatrixx(java.nio.IntBuffer)>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLoadMatrixx(int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int[] r1;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLoadMatrixx");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("m", 16, r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glLoadMatrixx(int[],int)>(r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLoadPaletteFromModelViewMatrixOES()
    {
        android.opengl.GLLogWrapper r0;
        javax.microedition.khronos.opengles.GL11Ext $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLoadPaletteFromModelViewMatrixOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11Ext: void glLoadPaletteFromModelViewMatrixOES()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glLogicOp(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glLogicOp");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("opcode", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glLogicOp(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMaterialf(int, int, float)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        float f0;
        java.lang.String $r1, $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMaterialf");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFaceName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("face", $r1);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getMaterialPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("param", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glMaterialf(int,int,float)>(i0, i1, f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMaterialfv(int, int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2;
        java.nio.FloatBuffer r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMaterialfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFaceName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("face", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getMaterialPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getMaterialParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>("params", $i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glMaterialfv(int,int,java.nio.FloatBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMaterialfv(int, int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, $i3;
        float[] r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMaterialfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFaceName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("face", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getMaterialPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i3 = specialinvoke r0.<android.opengl.GLLogWrapper: int getMaterialParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>("params", $i3, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glMaterialfv(int,int,float[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMaterialx(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.lang.String $r1, $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMaterialx");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFaceName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("face", $r1);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getMaterialPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glMaterialx(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMaterialxv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2;
        java.nio.IntBuffer r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMaterialxv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFaceName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("face", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getMaterialPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getMaterialParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("params", $i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glMaterialxv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMaterialxv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, $i3;
        int[] r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMaterialxv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getFaceName(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("face", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getMaterialPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i3 = specialinvoke r0.<android.opengl.GLLogWrapper: int getMaterialParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("params", $i3, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glMaterialxv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMatrixIndexPointerOES(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL11Ext $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMatrixIndexPointerOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("size", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("stride", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11Ext: void glMatrixIndexPointerOES(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMatrixIndexPointerOES(int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.nio.Buffer r1;
        javax.microedition.khronos.opengles.GL11Ext $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMatrixIndexPointerOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void argPointer(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMatrixMode(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMatrixMode");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getMatrixMode(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("mode", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glMatrixMode(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMultMatrixf(java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.nio.FloatBuffer r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMultMatrixf");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>("m", 16, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(java.nio.FloatBuffer)>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMultMatrixf(float[], int)
    {
        android.opengl.GLLogWrapper r0;
        float[] r1;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMultMatrixf");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>("m", 16, r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(float[],int)>(r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMultMatrixx(java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.nio.IntBuffer r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMultMatrixx");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("m", 16, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glMultMatrixx(java.nio.IntBuffer)>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMultMatrixx(int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int[] r1;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMultMatrixx");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("m", 16, r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glMultMatrixx(int[],int)>(r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMultiTexCoord4f(int, float, float, float, float)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        float f0, f1, f2, f3;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMultiTexCoord4f");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("s", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("t", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("r", f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("q", f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glMultiTexCoord4f(int,float,float,float,float)>(i0, f0, f1, f2, f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glMultiTexCoord4x(int, int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glMultiTexCoord4x");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("s", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("t", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("r", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("q", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glMultiTexCoord4x(int,int,int,int,int)>(i0, i1, i2, i3, i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glNormal3f(float, float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1, f2;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glNormal3f");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("nx", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("ny", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("nz", f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glNormal3f(float,float,float)>(f0, f1, f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glNormal3x(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glNormal3x");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("nx", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("ny", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("nz", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glNormal3x(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glNormalPointer(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glNormalPointer");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("stride", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glNormalPointer(int,int,int)>(i0, i1, i2);

        return;
    }

    public void glNormalPointer(int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.Buffer r1;
        java.lang.String $r2;
        android.opengl.GLLogWrapper$PointerInfo $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glNormalPointer");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("stride", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pointer", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = new android.opengl.GLLogWrapper$PointerInfo;

        specialinvoke $r3.<android.opengl.GLLogWrapper$PointerInfo: void <init>(android.opengl.GLLogWrapper,int,int,int,java.nio.Buffer)>(r0, 3, i0, i1, r1);

        r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mNormalPointer> = $r3;

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glNormalPointer(int,int,java.nio.Buffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glOrthof(float, float, float, float, float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1, f2, f3, f4, f5;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glOrthof");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("left", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("right", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("bottom", f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("top", f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("near", f4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("far", f5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glOrthof(float,float,float,float,float,float)>(f0, f1, f2, f3, f4, f5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glOrthox(int, int, int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4, i5;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glOrthox");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("left", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("right", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("bottom", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("top", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("near", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("far", i5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glOrthox(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPixelStorei(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPixelStorei");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glPixelStorei(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPointParameterf(int, float)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        float f0;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPointParameterf");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("param", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glPointParameterf(int,float)>(i0, f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPointParameterfv(int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPointParameterfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.nio.FloatBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glPointParameterfv(int,java.nio.FloatBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPointParameterfv(int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPointParameterfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glPointParameterfv(int,float[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPointParameterx(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPointParameterfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glPointParameterx(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPointParameterxv(int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPointParameterxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glPointParameterxv(int,java.nio.IntBuffer)>(i0, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPointParameterxv(int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPointParameterxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i0);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glPointParameterxv(int,int[],int)>(i0, r1, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPointSize(float)
    {
        android.opengl.GLLogWrapper r0;
        float f0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPointSize");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("size", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glPointSize(float)>(f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPointSizePointerOES(int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.Buffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPointSizePointerOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("stride", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glPointSizePointerOES(int,int,java.nio.Buffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPointSizex(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPointSizex");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("size", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glPointSizex(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPolygonOffset(float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPolygonOffset");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("factor", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("units", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glPolygonOffset(float,float)>(f0, f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPolygonOffsetx(int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPolygonOffsetx");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("factor", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("units", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glPolygonOffsetx(int,int)>(i0, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPopMatrix()
    {
        android.opengl.GLLogWrapper r0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPopMatrix");

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glPopMatrix()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glPushMatrix()
    {
        android.opengl.GLLogWrapper r0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glPushMatrix");

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glPushMatrix()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public int glQueryMatrixxOES(java.nio.IntBuffer, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        java.nio.IntBuffer r1, r2;
        int i0;
        java.lang.String $r3, $r4, $r6, $r7;
        javax.microedition.khronos.opengles.GL10Ext $r5;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: java.nio.IntBuffer;

        r2 := @parameter1: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glQueryMatrixxOES");

        $r3 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("mantissa", $r3);

        $r4 = virtualinvoke r2.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("exponent", $r4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r5 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10Ext mgl10Ext>;

        i0 = interfaceinvoke $r5.<javax.microedition.khronos.opengles.GL10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>(r1, r2);

        $r6 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,int,java.nio.IntBuffer)>(16, 2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(java.lang.String)>($r6);

        $r7 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,int,java.nio.IntBuffer)>(16, 0, r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(java.lang.String)>($r7);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return i0;
    }

    public int glQueryMatrixxOES(int[], int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int[] r1, r2;
        int i0, i1, i2;
        java.lang.String $r3, $r4, $r6, $r7;
        javax.microedition.khronos.opengles.GL10Ext $r5;

        r0 := @this: android.opengl.GLLogWrapper;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        i1 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glQueryMatrixxOES");

        $r3 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("mantissa", $r3);

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("exponent", $r4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r5 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10Ext mgl10Ext>;

        i2 = interfaceinvoke $r5.<javax.microedition.khronos.opengles.GL10Ext: int glQueryMatrixxOES(int[],int,int[],int)>(r1, i0, r2, i1);

        $r6 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,int,int[],int)>(16, 2, r1, i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(java.lang.String)>($r6);

        $r7 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String toString(int,int,int[],int)>(16, 0, r2, i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void returns(java.lang.String)>($r7);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return i2;
    }

    public void glReadPixels(int, int, int, int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4, i5;
        java.nio.Buffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 := @parameter6: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glReadPixels");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("format", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i5);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pixels", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>(i0, i1, i2, i3, i4, i5, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glRenderbufferStorageOES(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glRenderbufferStorageOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("internalformat", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glRenderbufferStorageOES(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glRotatef(float, float, float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1, f2, f3;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glRotatef");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("angle", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("x", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("y", f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("z", f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glRotatef(float,float,float,float)>(f0, f1, f2, f3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glRotatex(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glRotatex");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("angle", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("z", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glRotatex(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glSampleCoverage(float, boolean)
    {
        android.opengl.GLLogWrapper r0;
        float f0;
        boolean z0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glSampleCoveragex");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("value", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,boolean)>("invert", z0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glSampleCoverage(float,boolean)>(f0, z0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glSampleCoveragex(int, boolean)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        boolean z0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glSampleCoveragex");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("value", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,boolean)>("invert", z0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glSampleCoveragex(int,boolean)>(i0, z0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glScalef(float, float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1, f2;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glScalef");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("x", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("y", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("z", f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glScalef(float,float,float)>(f0, f1, f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glScalex(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glScalex");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("z", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glScalex(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glScissor(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glScissor");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glScissor(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glShadeModel(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        java.lang.String $r1;
        javax.microedition.khronos.opengles.GL10 $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glShadeModel");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getShadeModel(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("mode", $r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL10: void glShadeModel(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glStencilFunc(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glStencilFunc");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("func", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("ref", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("mask", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glStencilFunc(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glStencilMask(int)
    {
        android.opengl.GLLogWrapper r0;
        int i0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glStencilMask");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("mask", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glStencilMask(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glStencilOp(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glStencilOp");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("fail", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("zfail", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("zpass", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glStencilOp(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexCoordPointer(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexCoordPointer");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("size", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("stride", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glTexCoordPointer(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void glTexCoordPointer(int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.nio.Buffer r1;
        android.opengl.GLLogWrapper$PointerInfo $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexCoordPointer");

        specialinvoke r0.<android.opengl.GLLogWrapper: void argPointer(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = new android.opengl.GLLogWrapper$PointerInfo;

        specialinvoke $r2.<android.opengl.GLLogWrapper$PointerInfo: void <init>(android.opengl.GLLogWrapper,int,int,int,java.nio.Buffer)>(r0, i0, i1, i2, r1);

        r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mTexCoordPointer> = $r2;

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexEnvf(int, int, float)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        float f0;
        java.lang.String $r1, $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexEnvf");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r1);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvParamName(float)>(f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("param", $r3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glTexEnvf(int,int,float)>(i0, i1, f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexEnvfv(int, int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2;
        java.nio.FloatBuffer r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexEnvfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getTextureEnvParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.FloatBuffer)>("params", $i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexEnvfv(int, int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, $i3;
        float[] r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexEnvfv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i3 = specialinvoke r0.<android.opengl.GLLogWrapper: int getTextureEnvParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,float[],int)>("params", $i3, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glTexEnvfv(int,int,float[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexEnvi(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexEnvi");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glTexEnvi(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexEnviv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexEnviv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glTexEnviv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexEnviv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexEnviv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glTexEnviv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexEnvx(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.lang.String $r1, $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexEnvx");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r1);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glTexEnvx(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexEnvxv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, $i2;
        java.nio.IntBuffer r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexEnvxv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i2 = specialinvoke r0.<android.opengl.GLLogWrapper: int getTextureEnvParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("params", $i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glTexEnvxv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexEnvxv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, $i3;
        int[] r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexEnvxv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureEnvPName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        $i3 = specialinvoke r0.<android.opengl.GLLogWrapper: int getTextureEnvParamCount(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("params", $i3, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glTexEnvxv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexGenf(int, int, float)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        float f0;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexGenf");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("param", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenf(int,int,float)>(i0, i1, f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexGenfv(int, int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexGenfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.FloatBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenfv(int,int,java.nio.FloatBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexGenfv(int, int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexGenfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenfv(int,int,float[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexGeni(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexGeni");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeni(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexGeniv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexGeniv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeniv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexGeniv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexGeniv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeniv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexGenx(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexGenx");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenx(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexGenxv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexGenxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenxv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexGenxv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11ExtensionPack $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexGenxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("coord", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenxv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.nio.Buffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexImage2D");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("level", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("internalformat", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("border", i5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("format", i6);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i7);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pixels", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>(i0, i1, i2, i3, i4, i5, i6, i7, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexParameterf(int, int, float)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        float f0;
        java.lang.String $r1, $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexParameterf");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r1);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTexturePName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureParamName(float)>(f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("param", $r3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glTexParameterf(int,int,float)>(i0, i1, f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexParameterfv(int, int, java.nio.FloatBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.FloatBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.FloatBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexParameterfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.FloatBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexParameterfv(int, int, float[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        float[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexParameterfv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glTexParameterfv(int,int,float[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexParameteri(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexParameterxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glTexParameteri(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexParameteriv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL11 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexParameteriv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTexturePName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,java.nio.IntBuffer)>("params", 4, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL11: void glTexParameteriv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexParameteriv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL11 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexParameteriv");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r2);

        $r3 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTexturePName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int,int[],int)>("params", 4, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL11: void glTexParameteriv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexParameterx(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.lang.String $r1, $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexParameterx");

        $r1 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r1);

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTexturePName(int)>(i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pname", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("param", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glTexParameterx(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexParameterxv(int, int, java.nio.IntBuffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1;
        java.nio.IntBuffer r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.IntBuffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexParameterxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.nio.IntBuffer: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glTexParameterxv(int,int,java.nio.IntBuffer)>(i0, i1, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexParameterxv(int, int, int[], int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        int[] r1;
        java.lang.String $r2;
        javax.microedition.khronos.opengles.GL11 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexParameterxv");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("target", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("pname", i1);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("params", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL11: void glTexParameterxv(int,int,int[],int)>(i0, i1, r1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTexSubImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.nio.Buffer r1;
        java.lang.String $r2, $r3;
        javax.microedition.khronos.opengles.GL10 $r4;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTexSubImage2D");

        $r2 = specialinvoke r0.<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)>(i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("target", $r2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("level", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("xoffset", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("yoffset", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i4);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i5);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("format", i6);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i7);

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,java.lang.String)>("pixels", $r3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r4.<javax.microedition.khronos.opengles.GL10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>(i0, i1, i2, i3, i4, i5, i6, i7, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTranslatef(float, float, float)
    {
        android.opengl.GLLogWrapper r0;
        float f0, f1, f2;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTranslatef");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("x", f0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("y", f1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,float)>("z", f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glTranslatef(float,float,float)>(f0, f1, f2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glTranslatex(int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glTranslatex");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("z", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glTranslatex(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glVertexPointer(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL11 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glVertexPointer");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("size", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("stride", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11 mgl11>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11: void glVertexPointer(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void glVertexPointer(int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.nio.Buffer r1;
        android.opengl.GLLogWrapper$PointerInfo $r2;
        javax.microedition.khronos.opengles.GL10 $r3;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glVertexPointer");

        specialinvoke r0.<android.opengl.GLLogWrapper: void argPointer(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = new android.opengl.GLLogWrapper$PointerInfo;

        specialinvoke $r2.<android.opengl.GLLogWrapper$PointerInfo: void <init>(android.opengl.GLLogWrapper,int,int,int,java.nio.Buffer)>(r0, i0, i1, i2, r1);

        r0.<android.opengl.GLLogWrapper: android.opengl.GLLogWrapper$PointerInfo mVertexPointer> = $r2;

        $r3 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r3.<javax.microedition.khronos.opengles.GL10: void glVertexPointer(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glViewport(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glViewport");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("x", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("y", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("width", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("height", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL10 mgl>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL10: void glViewport(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glWeightPointerOES(int, int, int, int)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2, i3;
        javax.microedition.khronos.opengles.GL11Ext $r1;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glWeightPointerOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("size", i0);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("type", i1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("stride", i2);

        specialinvoke r0.<android.opengl.GLLogWrapper: void arg(java.lang.String,int)>("offset", i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r1.<javax.microedition.khronos.opengles.GL11Ext: void glWeightPointerOES(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public void glWeightPointerOES(int, int, int, java.nio.Buffer)
    {
        android.opengl.GLLogWrapper r0;
        int i0, i1, i2;
        java.nio.Buffer r1;
        javax.microedition.khronos.opengles.GL11Ext $r2;

        r0 := @this: android.opengl.GLLogWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        specialinvoke r0.<android.opengl.GLLogWrapper: void begin(java.lang.String)>("glWeightPointerOES");

        specialinvoke r0.<android.opengl.GLLogWrapper: void argPointer(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.GLLogWrapper: javax.microedition.khronos.opengles.GL11Ext mgl11Ext>;

        interfaceinvoke $r2.<javax.microedition.khronos.opengles.GL11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>(i0, i1, i2, r1);

        specialinvoke r0.<android.opengl.GLLogWrapper: void checkError()>();

        return;
    }

    public static void <clinit>()
    {
        <android.opengl.GLLogWrapper: int FORMAT_INT> = 0;

        <android.opengl.GLLogWrapper: int FORMAT_FLOAT> = 1;

        <android.opengl.GLLogWrapper: int FORMAT_FIXED> = 2;

        return;
    }
}
