class android.os.AsyncTask$2 extends java.lang.Object implements java.util.concurrent.RejectedExecutionHandler
{

    void <init>()
    {
        android.os.AsyncTask$2 r0;

        r0 := @this: android.os.AsyncTask$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void rejectedExecution(java.lang.Runnable, java.util.concurrent.ThreadPoolExecutor)
    {
        android.os.AsyncTask$2 r0;
        java.util.concurrent.ThreadPoolExecutor $r1, $r2, $r8, r11, r13;
        java.util.concurrent.TimeUnit $r4;
        java.util.concurrent.LinkedBlockingQueue $r5, r12;
        java.util.concurrent.ThreadFactory $r6;
        java.lang.Throwable $r9;
        java.lang.Runnable r10;

        r0 := @this: android.os.AsyncTask$2;

        r10 := @parameter0: java.lang.Runnable;

        r11 := @parameter1: java.util.concurrent.ThreadPoolExecutor;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AsyncTask", "Exceeded ThreadPoolExecutor pool size");

        entermonitor r0;

     label1:
        $r1 = staticinvoke <android.os.AsyncTask: java.util.concurrent.ThreadPoolExecutor access$000()>();

        if $r1 != null goto label2;

        r12 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke r12.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        staticinvoke <android.os.AsyncTask: java.util.concurrent.LinkedBlockingQueue access$102(java.util.concurrent.LinkedBlockingQueue)>(r12);

        r13 = new java.util.concurrent.ThreadPoolExecutor;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r5 = staticinvoke <android.os.AsyncTask: java.util.concurrent.LinkedBlockingQueue access$100()>();

        $r6 = staticinvoke <android.os.AsyncTask: java.util.concurrent.ThreadFactory access$200()>();

        specialinvoke r13.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(5, 5, 3L, $r4, $r5, $r6);

        staticinvoke <android.os.AsyncTask: java.util.concurrent.ThreadPoolExecutor access$002(java.util.concurrent.ThreadPoolExecutor)>(r13);

        $r8 = staticinvoke <android.os.AsyncTask: java.util.concurrent.ThreadPoolExecutor access$000()>();

        virtualinvoke $r8.<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(1);

     label2:
        exitmonitor r0;

     label3:
        $r2 = staticinvoke <android.os.AsyncTask: java.util.concurrent.ThreadPoolExecutor access$000()>();

        virtualinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>(r10);

        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
