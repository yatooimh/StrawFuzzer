public class android.os.BaseBundle extends java.lang.Object
{
    private static final int BUNDLE_MAGIC;
    private static final int BUNDLE_MAGIC_NATIVE;
    static final boolean DEBUG;
    static final int FLAG_DEFUSABLE;
    private static final boolean LOG_DEFUSABLE;
    private static final java.lang.String TAG;
    private static volatile boolean sShouldDefuse;
    private java.lang.ClassLoader mClassLoader;
    public int mFlags;
    android.util.ArrayMap mMap;
    private boolean mParcelledByNative;
    android.os.Parcel mParcelledData;

    static void <clinit>()
    {
        <android.os.BaseBundle: java.lang.String TAG> = "Bundle";

        <android.os.BaseBundle: boolean LOG_DEFUSABLE> = 0;

        <android.os.BaseBundle: int FLAG_DEFUSABLE> = 1;

        <android.os.BaseBundle: boolean DEBUG> = 0;

        <android.os.BaseBundle: int BUNDLE_MAGIC_NATIVE> = 1279544900;

        <android.os.BaseBundle: int BUNDLE_MAGIC> = 1279544898;

        <android.os.BaseBundle: boolean sShouldDefuse> = 0;

        return;
    }

    void <init>()
    {
        android.os.BaseBundle r0;
        java.lang.ClassLoader $r1;

        r0 := @this: android.os.BaseBundle;

        $r1 = (java.lang.ClassLoader) null;

        specialinvoke r0.<android.os.BaseBundle: void <init>(java.lang.ClassLoader,int)>($r1, 0);

        return;
    }

    void <init>(int)
    {
        android.os.BaseBundle r0;
        int i0;
        java.lang.ClassLoader $r1;

        r0 := @this: android.os.BaseBundle;

        i0 := @parameter0: int;

        $r1 = (java.lang.ClassLoader) null;

        specialinvoke r0.<android.os.BaseBundle: void <init>(java.lang.ClassLoader,int)>($r1, i0);

        return;
    }

    void <init>(android.os.BaseBundle)
    {
        android.os.BaseBundle r0, r1;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.BaseBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        virtualinvoke r0.<android.os.BaseBundle: void copyInternal(android.os.BaseBundle,boolean)>(r1, 0);

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.os.BaseBundle r0;
        android.os.Parcel r1;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        virtualinvoke r0.<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel)>(r1);

        return;
    }

    void <init>(android.os.Parcel, int)
    {
        android.os.BaseBundle r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        specialinvoke r0.<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel,int)>(r1, i0);

        return;
    }

    void <init>(java.lang.ClassLoader)
    {
        android.os.BaseBundle r0;
        java.lang.ClassLoader r1;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<android.os.BaseBundle: void <init>(java.lang.ClassLoader,int)>(r1, 0);

        return;
    }

    void <init>(java.lang.ClassLoader, int)
    {
        android.os.BaseBundle r0;
        int i0;
        android.util.ArrayMap $r1, $r3, r5;
        java.lang.Class $r2;
        java.lang.ClassLoader r4;

        r0 := @this: android.os.BaseBundle;

        r4 := @parameter0: java.lang.ClassLoader;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        if i0 <= 0 goto label1;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>(int)>(i0);

        r5 = $r3;

        goto label2;

     label1:
        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r5 = $r1;

     label2:
        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = r5;

        if r4 != null goto label3;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label3;

     label3:
        r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader> = r4;

        return;
    }

    void <init>(boolean)
    {
        android.os.BaseBundle r0;
        boolean z0;

        r0 := @this: android.os.BaseBundle;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        return;
    }

    public static void dumpStats(com.android.internal.util.IndentingPrintWriter, android.os.BaseBundle)
    {
        com.android.internal.util.IndentingPrintWriter r0;
        int $i0, i1;
        java.lang.Object $r3, $r5;
        java.lang.String $r4;
        android.os.BaseBundle r6;
        android.util.ArrayMap r7;

        r0 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r6 := @parameter1: android.os.BaseBundle;

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        if r6 != null goto label1;

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("[null]");

        return;

     label1:
        r7 = virtualinvoke r6.<android.os.BaseBundle: android.util.ArrayMap getMap()>();

        i1 = 0;

     label2:
        $i0 = virtualinvoke r7.<android.util.ArrayMap: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        staticinvoke <android.os.BaseBundle: void dumpStats(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Object)>(r0, $r4, $r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    public static void dumpStats(com.android.internal.util.IndentingPrintWriter, android.util.SparseArray)
    {
        com.android.internal.util.IndentingPrintWriter r0;
        android.util.SparseArray r1;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r9;
        java.lang.Object $r10;

        r0 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r1 := @parameter1: android.util.SparseArray;

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        if r1 != null goto label1;

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("[null]");

        return;

     label1:
        i2 = 0;

     label2:
        $i0 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i1 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        staticinvoke <android.os.BaseBundle: void dumpStats(com.android.internal.util.IndentingPrintWriter,java.lang.String,java.lang.Object)>(r0, $r9, $r10);

        i2 = i2 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        return;
    }

    public static void dumpStats(com.android.internal.util.IndentingPrintWriter, java.lang.String, java.lang.Object)
    {
        com.android.internal.util.IndentingPrintWriter r0;
        java.lang.String r1, $r8;
        java.lang.Object r2;
        int i0;
        java.lang.StringBuilder $r3;
        boolean $z0, $z1;
        android.util.SparseArray $r9;
        android.os.BaseBundle $r10;
        android.os.Parcel r11;

        r0 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r11 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r11.<android.os.Parcel: void writeValue(java.lang.Object)>(r2);

        i0 = virtualinvoke r11.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

        if i0 <= 1024 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [size=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r8);

        $z0 = r2 instanceof android.os.BaseBundle;

        if $z0 == 0 goto label1;

        $r10 = (android.os.BaseBundle) r2;

        staticinvoke <android.os.BaseBundle: void dumpStats(com.android.internal.util.IndentingPrintWriter,android.os.BaseBundle)>(r0, $r10);

        goto label2;

     label1:
        $z1 = r2 instanceof android.util.SparseArray;

        if $z1 == 0 goto label2;

        $r9 = (android.util.SparseArray) r2;

        staticinvoke <android.os.BaseBundle: void dumpStats(com.android.internal.util.IndentingPrintWriter,android.util.SparseArray)>(r0, $r9);

     label2:
        return;
    }

    private void initializeFromParcelLocked(android.os.Parcel, boolean, boolean)
    {
        android.os.BaseBundle r0;
        boolean z0, z1, $z2, $z3;
        int i0;
        java.lang.ClassLoader $r1, $r2;
        android.util.ArrayMap $r3, $r4, r8, r9;
        java.lang.Throwable $r5;
        android.os.BadParcelableException $r6;
        android.os.Parcel r7;

        r0 := @this: android.os.BaseBundle;

        r7 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = staticinvoke <android.os.BaseBundle: boolean isEmptyParcel(android.os.Parcel)>(r7);

        if $z2 == 0 goto label03;

        r8 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if r8 != null goto label01;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>(int)>(1);

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = $r4;

        goto label02;

     label01:
        virtualinvoke r8.<android.util.ArrayMap: void erase()>();

     label02:
        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        r0.<android.os.BaseBundle: boolean mParcelledByNative> = 0;

        return;

     label03:
        i0 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label04;

        return;

     label04:
        r9 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if r9 != null goto label05;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>(int)>(i0);

        r9 = $r3;

        goto label06;

     label05:
        virtualinvoke r9.<android.util.ArrayMap: void erase()>();

        virtualinvoke r9.<android.util.ArrayMap: void ensureCapacity(int)>(i0);

     label06:
        if z1 == 0 goto label09;

     label07:
        $r2 = r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader>;

        virtualinvoke r7.<android.os.Parcel: void readArrayMapSafelyInternal(android.util.ArrayMap,int,java.lang.ClassLoader)>(r9, i0, $r2);

     label08:
        goto label10;

     label09:
        $r1 = r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader>;

        virtualinvoke r7.<android.os.Parcel: void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader)>(r9, i0, $r1);

     label10:
        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = r9;

        if z0 == 0 goto label12;

     label11:
        staticinvoke <android.os.BaseBundle: void recycleParcel(android.os.Parcel)>(r7);

     label12:
        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        r0.<android.os.BaseBundle: boolean mParcelledByNative> = 0;

        goto label17;

     label13:
        $r5 := @caughtexception;

        goto label19;

     label14:
        $r6 := @caughtexception;

     label15:
        $z3 = <android.os.BaseBundle: boolean sShouldDefuse>;

        if $z3 == 0 goto label18;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Bundle", "Failed to parse Bundle, but defusing quietly", $r6);

        virtualinvoke r9.<android.util.ArrayMap: void erase()>();

     label16:
        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = r9;

        if z0 == 0 goto label12;

        goto label11;

     label17:
        return;

     label18:
        throw $r6;

     label19:
        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = r9;

        if z0 == 0 goto label20;

        staticinvoke <android.os.BaseBundle: void recycleParcel(android.os.Parcel)>(r7);

     label20:
        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        r0.<android.os.BaseBundle: boolean mParcelledByNative> = 0;

        throw $r5;

        catch android.os.BadParcelableException from label07 to label08 with label14;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch android.os.BadParcelableException from label09 to label10 with label14;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label15 to label16 with label13;
        catch java.lang.Throwable from label18 to label19 with label13;
    }

    private static boolean isEmptyParcel(android.os.Parcel)
    {
        android.os.Parcel r0, $r1;
        boolean z0;

        r0 := @parameter0: android.os.Parcel;

        $r1 = <android.os.BaseBundle$NoImagePreloadHolder: android.os.Parcel EMPTY_PARCEL>;

        if r0 != $r1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean kindofEquals(android.os.BaseBundle, android.os.BaseBundle)
    {
        android.os.BaseBundle r0, r1;
        boolean $z0, z1;

        r0 := @parameter0: android.os.BaseBundle;

        r1 := @parameter1: android.os.BaseBundle;

        if r0 == r1 goto label2;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<android.os.BaseBundle: boolean kindofEquals(android.os.BaseBundle)>(r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    private void readFromParcelInner(android.os.Parcel, int)
    {
        android.os.BaseBundle r0;
        int i0, i1, $i2, $i3, i4;
        android.os.Parcel r1, $r18, r20;
        java.lang.StringBuilder $r2, $r7, $r12;
        java.lang.RuntimeException $r5;
        java.lang.String $r6, $r11, $r14, $r17;
        java.lang.IllegalStateException $r10, $r16;
        boolean $z0, z1, z2;
        java.lang.Throwable $r19;

        r0 := @this: android.os.BaseBundle;

        r20 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        if i0 < 0 goto label15;

        if i0 != 0 goto label01;

        $r18 = <android.os.BaseBundle$NoImagePreloadHolder: android.os.Parcel EMPTY_PARCEL>;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = $r18;

        r0.<android.os.BaseBundle: boolean mParcelledByNative> = 0;

        return;

     label01:
        $i2 = i0 % 4;

        if $i2 != 0 goto label14;

        i1 = virtualinvoke r20.<android.os.Parcel: int readInt()>();

        z1 = 1;

        if i1 != 1279544898 goto label02;

        z2 = 1;

        goto label03;

     label02:
        z2 = 0;

     label03:
        if i1 != 1279544900 goto label04;

        goto label05;

     label04:
        z1 = 0;

     label05:
        if z2 != 0 goto label07;

        if z1 == 0 goto label06;

        goto label07;

     label06:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad magic number for Bundle: 0x");

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = new java.lang.IllegalStateException;

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label07:
        $z0 = virtualinvoke r20.<android.os.Parcel: boolean hasReadWriteHelper()>();

        if $z0 == 0 goto label13;

        entermonitor r0;

     label08:
        specialinvoke r0.<android.os.BaseBundle: void initializeFromParcelLocked(android.os.Parcel,boolean,boolean)>(r20, 0, z1);

        exitmonitor r0;

     label09:
        return;

     label10:
        $r19 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r19;

     label13:
        i4 = virtualinvoke r20.<android.os.Parcel: int dataPosition()>();

        $i3 = staticinvoke <android.util.MathUtils: int addOrThrow(int,int)>(i4, i0);

        virtualinvoke r20.<android.os.Parcel: void setDataPosition(int)>($i3);

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke r1.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>(r20, i4, i0);

        virtualinvoke r1.<android.os.Parcel: void adoptClassCookies(android.os.Parcel)>(r20);

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(0);

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = r1;

        r0.<android.os.BaseBundle: boolean mParcelledByNative> = z1;

        return;

     label14:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bundle length is not aligned by 4: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label15:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad length in parcel: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private static void recycleParcel(android.os.Parcel)
    {
        android.os.Parcel r0;
        boolean $z0;

        r0 := @parameter0: android.os.Parcel;

        if r0 == null goto label1;

        $z0 = staticinvoke <android.os.BaseBundle: boolean isEmptyParcel(android.os.Parcel)>(r0);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.os.Parcel: void recycle()>();

     label1:
        return;
    }

    public static void setShouldDefuse(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <android.os.BaseBundle: boolean sShouldDefuse> = z0;

        return;
    }

    public void clear()
    {
        android.os.BaseBundle r0;
        android.util.ArrayMap $r1;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r1 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r1.<android.util.ArrayMap: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        boolean $z0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $z0 = virtualinvoke $r2.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    void copyInternal(android.os.BaseBundle, boolean)
    {
        android.os.BaseBundle r0, r1;
        boolean z0, $z1, $z2;
        int i0, $i1, i2;
        android.util.ArrayMap r2, $r4, $r9, $r16, r17, r18;
        android.os.Parcel $r3, $r10, $r11, $r12, $r13, r15;
        java.lang.Object $r5, $r7, $r8;
        java.lang.String $r6;
        java.lang.Throwable $r14;
        java.lang.ClassLoader $r19;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.BaseBundle;

        z0 := @parameter1: boolean;

        entermonitor r1;

     label01:
        $r3 = r1.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        if $r3 == null goto label05;

        $z1 = virtualinvoke r1.<android.os.BaseBundle: boolean isEmptyParcel()>();

        if $z1 == 0 goto label03;

        $r13 = <android.os.BaseBundle$NoImagePreloadHolder: android.os.Parcel EMPTY_PARCEL>;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = $r13;

        r0.<android.os.BaseBundle: boolean mParcelledByNative> = 0;

     label02:
        goto label06;

     label03:
        r15 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = r15;

        $r11 = r1.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r10 = r1.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $i1 = virtualinvoke $r10.<android.os.Parcel: int dataSize()>();

        virtualinvoke r15.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r11, 0, $i1);

        $r12 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        virtualinvoke $r12.<android.os.Parcel: void setDataPosition(int)>(0);

        $z2 = r1.<android.os.BaseBundle: boolean mParcelledByNative>;

        r0.<android.os.BaseBundle: boolean mParcelledByNative> = $z2;

     label04:
        goto label06;

     label05:
        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        r0.<android.os.BaseBundle: boolean mParcelledByNative> = 0;

     label06:
        $r16 = r1.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if $r16 == null goto label16;

     label07:
        if z0 != 0 goto label10;

     label08:
        r17 = new android.util.ArrayMap;

        $r9 = r1.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        specialinvoke r17.<android.util.ArrayMap: void <init>(android.util.ArrayMap)>($r9);

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = r17;

     label09:
        goto label17;

     label10:
        r18 = r1.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        i0 = virtualinvoke r18.<android.util.ArrayMap: int size()>();

        r2 = new android.util.ArrayMap;

        specialinvoke r2.<android.util.ArrayMap: void <init>(int)>(i0);

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = r2;

     label11:
        i2 = 0;

     label12:
        if i2 >= i0 goto label15;

     label13:
        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r5 = virtualinvoke r18.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke r18.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r8 = virtualinvoke r0.<android.os.BaseBundle: java.lang.Object deepCopyValue(java.lang.Object)>($r7);

        virtualinvoke $r4.<android.util.ArrayMap: void append(java.lang.Object,java.lang.Object)>($r6, $r8);

     label14:
        i2 = i2 + 1;

        goto label12;

     label15:
        goto label17;

     label16:
        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

     label17:
        $r19 = r1.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader>;

        r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader> = $r19;

        exitmonitor r1;

     label18:
        return;

     label19:
        $r14 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    java.lang.Object deepCopyValue(java.lang.Object)
    {
        android.os.BaseBundle r0;
        java.lang.Object r1, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.Class $r2;
        char[] $r3;
        short[] $r5;
        byte[] $r7;
        java.lang.Object[] $r9;
        double[] $r11;
        float[] $r13;
        long[] $r15;
        int[] $r17;
        java.util.ArrayList $r19, $r20;
        android.os.PersistableBundle $r21, $r22;
        android.os.Bundle $r23, $r24;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        return null;

     label01:
        $z0 = r1 instanceof android.os.Bundle;

        if $z0 == 0 goto label02;

        $r23 = (android.os.Bundle) r1;

        $r24 = virtualinvoke $r23.<android.os.Bundle: android.os.Bundle deepCopy()>();

        return $r24;

     label02:
        $z1 = r1 instanceof android.os.PersistableBundle;

        if $z1 == 0 goto label03;

        $r21 = (android.os.PersistableBundle) r1;

        $r22 = virtualinvoke $r21.<android.os.PersistableBundle: android.os.PersistableBundle deepCopy()>();

        return $r22;

     label03:
        $z2 = r1 instanceof java.util.ArrayList;

        if $z2 == 0 goto label04;

        $r19 = (java.util.ArrayList) r1;

        $r20 = virtualinvoke r0.<android.os.BaseBundle: java.util.ArrayList deepcopyArrayList(java.util.ArrayList)>($r19);

        return $r20;

     label04:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z3 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z3 == 0 goto label12;

        $z4 = r1 instanceof int[];

        if $z4 == 0 goto label05;

        $r17 = (int[]) r1;

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.Object clone()>();

        return $r18;

     label05:
        $z5 = r1 instanceof long[];

        if $z5 == 0 goto label06;

        $r15 = (long[]) r1;

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Object clone()>();

        return $r16;

     label06:
        $z6 = r1 instanceof float[];

        if $z6 == 0 goto label07;

        $r13 = (float[]) r1;

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Object clone()>();

        return $r14;

     label07:
        $z7 = r1 instanceof double[];

        if $z7 == 0 goto label08;

        $r11 = (double[]) r1;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Object clone()>();

        return $r12;

     label08:
        $z8 = r1 instanceof java.lang.Object[];

        if $z8 == 0 goto label09;

        $r9 = (java.lang.Object[]) r1;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Object clone()>();

        return $r10;

     label09:
        $z9 = r1 instanceof byte[];

        if $z9 == 0 goto label10;

        $r7 = (byte[]) r1;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        return $r8;

     label10:
        $z10 = r1 instanceof short[];

        if $z10 == 0 goto label11;

        $r5 = (short[]) r1;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Object clone()>();

        return $r6;

     label11:
        $z11 = r1 instanceof char[];

        if $z11 == 0 goto label12;

        $r3 = (char[]) r1;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        return $r4;

     label12:
        return r1;
    }

    java.util.ArrayList deepcopyArrayList(java.util.ArrayList)
    {
        android.os.BaseBundle r0;
        java.util.ArrayList r1, $r3;
        int i0, i1;
        java.lang.Object $r4, $r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = virtualinvoke r0.<android.os.BaseBundle: java.lang.Object deepCopyValue(java.lang.Object)>($r4);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public java.lang.Object get(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public boolean getBoolean(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $z0 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>(r1, 0);

        return $z0;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        boolean z0, z1;
        java.lang.Object r2;
        android.util.ArrayMap $r4;
        java.lang.Boolean $r5, $r7;
        java.lang.ClassCastException $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return z0;

     label1:
        $r5 = (java.lang.Boolean) r2;

        z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return z1;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Boolean", $r7, $r6);

        return z0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public boolean[] getBooleanArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        boolean[] r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (boolean[]) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "byte[]", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    byte getByte(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Byte $r2;
        byte $b0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = virtualinvoke r0.<android.os.BaseBundle: java.lang.Byte getByte(java.lang.String,byte)>(r1, 0);

        $b0 = virtualinvoke $r2.<java.lang.Byte: byte byteValue()>();

        return $b0;
    }

    java.lang.Byte getByte(java.lang.String, byte)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        byte b0;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.Byte $r4, $r6, $r7, r8;
        java.lang.ClassCastException $r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        return $r4;

     label1:
        r8 = (java.lang.Byte) r2;

     label2:
        return r8;

     label3:
        $r5 := @caughtexception;

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Byte", $r6, $r5);

        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        return $r7;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    byte[] getByteArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        byte[] r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (byte[]) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "byte[]", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    char getChar(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        char $c0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $c0 = virtualinvoke r0.<android.os.BaseBundle: char getChar(java.lang.String,char)>(r1, 0);

        return $c0;
    }

    char getChar(java.lang.String, char)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        char c0, c1;
        java.lang.Object r2;
        android.util.ArrayMap $r4;
        java.lang.Character $r5, $r7;
        java.lang.ClassCastException $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return c0;

     label1:
        $r5 = (java.lang.Character) r2;

        c1 = virtualinvoke $r5.<java.lang.Character: char charValue()>();

     label2:
        return c1;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Character", $r7, $r6);

        return c0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    char[] getCharArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        char[] r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (char[]) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "char[]", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.lang.CharSequence getCharSequence(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        java.lang.CharSequence r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

     label1:
        r5 = (java.lang.CharSequence) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "CharSequence", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.lang.CharSequence getCharSequence(java.lang.String, java.lang.CharSequence)
    {
        android.os.BaseBundle r0;
        java.lang.CharSequence r1, r3;
        java.lang.String r2;

        r0 := @this: android.os.BaseBundle;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.CharSequence;

        r3 = virtualinvoke r0.<android.os.BaseBundle: java.lang.CharSequence getCharSequence(java.lang.String)>(r2);

        if r3 != null goto label1;

        r3 = r1;

        goto label1;

     label1:
        return r3;
    }

    java.lang.CharSequence[] getCharSequenceArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        java.lang.CharSequence[] r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (java.lang.CharSequence[]) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "CharSequence[]", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.util.ArrayList getCharSequenceArrayList(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        java.util.ArrayList r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (java.util.ArrayList) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "ArrayList<CharSequence>", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.lang.ClassLoader getClassLoader()
    {
        android.os.BaseBundle r0;
        java.lang.ClassLoader $r1;

        r0 := @this: android.os.BaseBundle;

        $r1 = r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader>;

        return $r1;
    }

    public double getDouble(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        double $d0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $d0 = virtualinvoke r0.<android.os.BaseBundle: double getDouble(java.lang.String,double)>(r1, 0.0);

        return $d0;
    }

    public double getDouble(java.lang.String, double)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        double d0, d1;
        java.lang.Object r2;
        android.util.ArrayMap $r4;
        java.lang.Double $r5, $r7;
        java.lang.ClassCastException $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return d0;

     label1:
        $r5 = (java.lang.Double) r2;

        d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

     label2:
        return d1;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Double", $r7, $r6);

        return d0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public double[] getDoubleArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        double[] r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (double[]) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "double[]", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    float getFloat(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        float $f0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $f0 = virtualinvoke r0.<android.os.BaseBundle: float getFloat(java.lang.String,float)>(r1, 0.0F);

        return $f0;
    }

    float getFloat(java.lang.String, float)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        float f0, f1;
        java.lang.Object r2;
        android.util.ArrayMap $r4;
        java.lang.Float $r5, $r7;
        java.lang.ClassCastException $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return f0;

     label1:
        $r5 = (java.lang.Float) r2;

        f1 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

     label2:
        return f1;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Float", $r7, $r6);

        return f0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    float[] getFloatArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        float[] r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (float[]) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "float[]", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public int getInt(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $i0 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String,int)>(r1, 0);

        return $i0;
    }

    public int getInt(java.lang.String, int)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.Object r2;
        android.util.ArrayMap $r4;
        java.lang.Integer $r5, $r7;
        java.lang.ClassCastException $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return i0;

     label1:
        $r5 = (java.lang.Integer) r2;

        i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

     label2:
        return i1;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Integer", $r7, $r6);

        return i0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public int[] getIntArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        int[] r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (int[]) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "int[]", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.util.ArrayList getIntegerArrayList(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        java.util.ArrayList r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (java.util.ArrayList) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "ArrayList<Integer>", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public long getLong(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $l0 = virtualinvoke r0.<android.os.BaseBundle: long getLong(java.lang.String,long)>(r1, 0L);

        return $l0;
    }

    public long getLong(java.lang.String, long)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        long l0, l1;
        java.lang.Object r2;
        android.util.ArrayMap $r4;
        java.lang.Long $r5, $r7;
        java.lang.ClassCastException $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return l0;

     label1:
        $r5 = (java.lang.Long) r2;

        l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

     label2:
        return l1;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Long", $r7, $r6);

        return l0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public long[] getLongArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        long[] r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (long[]) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "long[]", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    android.util.ArrayMap getMap()
    {
        android.os.BaseBundle r0;
        android.util.ArrayMap $r1;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r1 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        return $r1;
    }

    public java.lang.String getPairValue()
    {
        android.os.BaseBundle r0;
        int i0;
        java.lang.Object r1;
        android.util.ArrayMap $r2, $r3;
        java.lang.ClassCastException $r4;
        java.lang.String r5;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        if i0 <= 1 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Bundle", "getPairValue() used on Bundle with multiple pairs.");

     label1:
        if i0 != 0 goto label2;

        return null;

     label2:
        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r1 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(0);

     label3:
        r5 = (java.lang.String) r1;

     label4:
        return r5;

     label5:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>("getPairValue()", r1, "String", $r4);

        return null;

        catch java.lang.ClassCastException from label3 to label4 with label5;
    }

    java.io.Serializable getSerializable(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        java.io.Serializable r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (java.io.Serializable) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "Serializable", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    short getShort(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        short $s0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $s0 = virtualinvoke r0.<android.os.BaseBundle: short getShort(java.lang.String,short)>(r1, 0);

        return $s0;
    }

    short getShort(java.lang.String, short)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        short s0, s1;
        java.lang.Object r2;
        android.util.ArrayMap $r4;
        java.lang.Short $r5, $r7;
        java.lang.ClassCastException $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return s0;

     label1:
        $r5 = (java.lang.Short) r2;

        s1 = virtualinvoke $r5.<java.lang.Short: short shortValue()>();

     label2:
        return s1;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Short", $r7, $r6);

        return s0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    short[] getShortArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        short[] r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (short[]) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "short[]", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String getString(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1, r5;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

     label1:
        r5 = (java.lang.String) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "String", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String getString(java.lang.String, java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1, r2, r3;

        r0 := @this: android.os.BaseBundle;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<android.os.BaseBundle: java.lang.String getString(java.lang.String)>(r2);

        if r3 != null goto label1;

        r3 = r1;

        goto label1;

     label1:
        return r3;
    }

    public java.lang.String[] getStringArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        java.lang.String[] r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (java.lang.String[]) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "String[]", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.util.ArrayList getStringArrayList(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        android.util.ArrayMap $r3;
        java.lang.ClassCastException $r4;
        java.util.ArrayList r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        r5 = (java.util.ArrayList) r2;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "ArrayList<String>", $r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public boolean isDefinitelyEmpty()
    {
        android.os.BaseBundle r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.os.BaseBundle;

        $z0 = virtualinvoke r0.<android.os.BaseBundle: boolean isParcelled()>();

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.os.BaseBundle: boolean isEmptyParcel()>();

        return $z2;

     label1:
        $z1 = virtualinvoke r0.<android.os.BaseBundle: boolean isEmpty()>();

        return $z1;
    }

    public boolean isEmpty()
    {
        android.os.BaseBundle r0;
        android.util.ArrayMap $r1;
        boolean $z0;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r1 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $z0 = virtualinvoke $r1.<android.util.ArrayMap: boolean isEmpty()>();

        return $z0;
    }

    public boolean isEmptyParcel()
    {
        android.os.BaseBundle r0;
        android.os.Parcel $r1;
        boolean $z0;

        r0 := @this: android.os.BaseBundle;

        $r1 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $z0 = staticinvoke <android.os.BaseBundle: boolean isEmptyParcel(android.os.Parcel)>($r1);

        return $z0;
    }

    public boolean isParcelled()
    {
        android.os.BaseBundle r0;
        android.os.Parcel $r1;
        boolean z0;

        r0 := @this: android.os.BaseBundle;

        $r1 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.util.Set keySet()
    {
        android.os.BaseBundle r0;
        android.util.ArrayMap $r1;
        java.util.Set $r2;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r1 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.util.Set keySet()>();

        return $r2;
    }

    public boolean kindofEquals(android.os.BaseBundle)
    {
        android.os.BaseBundle r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        android.util.ArrayMap $r2, $r3;
        android.os.Parcel $r4, $r5;
        int $i0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.BaseBundle;

        z6 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<android.os.BaseBundle: boolean isDefinitelyEmpty()>();

        if $z0 == 0 goto label2;

        $z5 = virtualinvoke r1.<android.os.BaseBundle: boolean isDefinitelyEmpty()>();

        if $z5 == 0 goto label2;

        return 1;

     label2:
        $z1 = virtualinvoke r0.<android.os.BaseBundle: boolean isParcelled()>();

        $z2 = virtualinvoke r1.<android.os.BaseBundle: boolean isParcelled()>();

        if $z1 == $z2 goto label3;

        return 0;

     label3:
        $z3 = virtualinvoke r0.<android.os.BaseBundle: boolean isParcelled()>();

        if $z3 == 0 goto label5;

        $r5 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r4 = r1.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r5.<android.os.Parcel: int compareData(android.os.Parcel)>($r4);

        if $i0 != 0 goto label4;

        z6 = 1;

     label4:
        return z6;

     label5:
        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r2 = r1.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $z4 = virtualinvoke $r3.<android.util.ArrayMap: boolean equals(java.lang.Object)>($r2);

        return $z4;
    }

    public void putAll(android.os.PersistableBundle)
    {
        android.os.BaseBundle r0;
        android.os.PersistableBundle r1;
        android.util.ArrayMap $r2, $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.PersistableBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        virtualinvoke r1.<android.os.PersistableBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r2 = r1.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>($r2);

        return;
    }

    void putAll(android.util.ArrayMap)
    {
        android.os.BaseBundle r0;
        android.util.ArrayMap r1, $r2;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.util.ArrayMap;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r2.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>(r1);

        return;
    }

    public void putBoolean(java.lang.String, boolean)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        boolean z0;
        android.util.ArrayMap $r2;
        java.lang.Boolean $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void putBooleanArray(java.lang.String, boolean[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        boolean[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: boolean[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putByte(java.lang.String, byte)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        byte b0;
        android.util.ArrayMap $r2;
        java.lang.Byte $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    void putByteArray(java.lang.String, byte[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        byte[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putChar(java.lang.String, char)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        char c0;
        android.util.ArrayMap $r2;
        java.lang.Character $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    void putCharArray(java.lang.String, char[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        char[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: char[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putCharSequence(java.lang.String, java.lang.CharSequence)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.CharSequence r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putCharSequenceArray(java.lang.String, java.lang.CharSequence[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.CharSequence[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.CharSequence[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putCharSequenceArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putDouble(java.lang.String, double)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        double d0;
        android.util.ArrayMap $r2;
        java.lang.Double $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void putDoubleArray(java.lang.String, double[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        double[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: double[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putFloat(java.lang.String, float)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        float f0;
        android.util.ArrayMap $r2;
        java.lang.Float $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    void putFloatArray(java.lang.String, float[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        float[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putInt(java.lang.String, int)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        int i0;
        android.util.ArrayMap $r2;
        java.lang.Integer $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void putIntArray(java.lang.String, int[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        int[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putIntegerArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putLong(java.lang.String, long)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        long l0;
        android.util.ArrayMap $r2;
        java.lang.Long $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void putLongArray(java.lang.String, long[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        long[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: long[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putObject(java.lang.String, java.lang.Object)
    {
        android.os.BaseBundle r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.StringBuilder $r2;
        java.lang.Class $r4;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r13, r18;
        java.lang.String[] $r8;
        double[] $r9;
        long[] $r10;
        int[] $r11;
        boolean[] $r12;
        java.lang.Double $r14;
        double $d0;
        java.lang.Long $r15;
        long $l0;
        java.lang.Integer $r16;
        int $i1;
        java.lang.Boolean $r17;

        r0 := @this: android.os.BaseBundle;

        r18 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        if r1 != null goto label01;

        virtualinvoke r0.<android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>(r18, null);

        goto label11;

     label01:
        $z0 = r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label02;

        $r17 = (java.lang.Boolean) r1;

        $z10 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>(r18, $z10);

        goto label11;

     label02:
        $z1 = r1 instanceof java.lang.Integer;

        if $z1 == 0 goto label03;

        $r16 = (java.lang.Integer) r1;

        $i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<android.os.BaseBundle: void putInt(java.lang.String,int)>(r18, $i1);

        goto label11;

     label03:
        $z2 = r1 instanceof java.lang.Long;

        if $z2 == 0 goto label04;

        $r15 = (java.lang.Long) r1;

        $l0 = virtualinvoke $r15.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<android.os.BaseBundle: void putLong(java.lang.String,long)>(r18, $l0);

        goto label11;

     label04:
        $z3 = r1 instanceof java.lang.Double;

        if $z3 == 0 goto label05;

        $r14 = (java.lang.Double) r1;

        $d0 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<android.os.BaseBundle: void putDouble(java.lang.String,double)>(r18, $d0);

        goto label11;

     label05:
        $z4 = r1 instanceof java.lang.String;

        if $z4 == 0 goto label06;

        $r13 = (java.lang.String) r1;

        virtualinvoke r0.<android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>(r18, $r13);

        goto label11;

     label06:
        $z5 = r1 instanceof boolean[];

        if $z5 == 0 goto label07;

        $r12 = (boolean[]) r1;

        virtualinvoke r0.<android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>(r18, $r12);

        goto label11;

     label07:
        $z6 = r1 instanceof int[];

        if $z6 == 0 goto label08;

        $r11 = (int[]) r1;

        virtualinvoke r0.<android.os.BaseBundle: void putIntArray(java.lang.String,int[])>(r18, $r11);

        goto label11;

     label08:
        $z7 = r1 instanceof long[];

        if $z7 == 0 goto label09;

        $r10 = (long[]) r1;

        virtualinvoke r0.<android.os.BaseBundle: void putLongArray(java.lang.String,long[])>(r18, $r10);

        goto label11;

     label09:
        $z8 = r1 instanceof double[];

        if $z8 == 0 goto label10;

        $r9 = (double[]) r1;

        virtualinvoke r0.<android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>(r18, $r9);

        goto label11;

     label10:
        $z9 = r1 instanceof java.lang.String[];

        if $z9 == 0 goto label12;

        $r8 = (java.lang.String[]) r1;

        virtualinvoke r0.<android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>(r18, $r8);

     label11:
        return;

     label12:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type ");

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    void putSerializable(java.lang.String, java.io.Serializable)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.io.Serializable r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.Serializable;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putShort(java.lang.String, short)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        short s0;
        android.util.ArrayMap $r2;
        java.lang.Short $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    void putShortArray(java.lang.String, short[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        short[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: short[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putString(java.lang.String, java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1, r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putStringArray(java.lang.String, java.lang.String[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.String[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putStringArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void readFromParcelInner(android.os.Parcel)
    {
        android.os.BaseBundle r0;
        android.os.Parcel r1;
        int $i0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        specialinvoke r0.<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel,int)>(r1, $i0);

        return;
    }

    public void remove(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    void setClassLoader(java.lang.ClassLoader)
    {
        android.os.BaseBundle r0;
        java.lang.ClassLoader r1;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader> = r1;

        return;
    }

    public int size()
    {
        android.os.BaseBundle r0;
        android.util.ArrayMap $r1;
        int $i0;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r1 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $i0 = virtualinvoke $r1.<android.util.ArrayMap: int size()>();

        return $i0;
    }

    void typeWarning(java.lang.String, java.lang.Object, java.lang.String, java.lang.ClassCastException)
    {
        android.os.BaseBundle r0;
        java.lang.String r1, r3;
        java.lang.Object r2;
        java.lang.ClassCastException r4;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.ClassCastException;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, r3, "<null>", r4);

        return;
    }

    void typeWarning(java.lang.String, java.lang.Object, java.lang.String, java.lang.Object, java.lang.ClassCastException)
    {
        android.os.BaseBundle r0;
        java.lang.String r1, r3, $r14, $r19;
        java.lang.Object r2, r4;
        java.lang.ClassCastException r5;
        java.lang.StringBuilder $r7;
        java.lang.Class $r13;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.ClassCastException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but value was a ");

        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  The default value ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was returned.");

        $r19 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Bundle", $r19);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Bundle", "Attempt to cast generated internal exception:", r5);

        return;
    }

    void unparcel()
    {
        android.os.BaseBundle r0;
        boolean $z0;
        java.lang.Throwable $r1;
        android.os.Parcel r2;

        r0 := @this: android.os.BaseBundle;

        entermonitor r0;

     label1:
        r2 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

     label2:
        if r2 == null goto label4;

     label3:
        $z0 = r0.<android.os.BaseBundle: boolean mParcelledByNative>;

        specialinvoke r0.<android.os.BaseBundle: void initializeFromParcelLocked(android.os.Parcel,boolean,boolean)>(r2, 1, $z0);

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r1 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void writeToParcelInner(android.os.Parcel, int)
    {
        android.os.BaseBundle r0;
        int i0, $i1, $i2, i3, i4, i5, i6, i7;
        boolean $z0, $z1;
        android.os.Parcel $r1, $r2, $r3, $r4, r6, r7;
        java.lang.Throwable $r5;
        android.util.ArrayMap r8;

        r0 := @this: android.os.BaseBundle;

        r6 := @parameter0: android.os.Parcel;

        i3 := @parameter1: int;

        $z0 = virtualinvoke r6.<android.os.Parcel: boolean hasReadWriteHelper()>();

        if $z0 == 0 goto label01;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

     label01:
        entermonitor r0;

     label02:
        r7 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

     label03:
        i4 = 1279544898;

        if r7 == null goto label12;

     label04:
        $r2 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r1 = <android.os.BaseBundle$NoImagePreloadHolder: android.os.Parcel EMPTY_PARCEL>;

        if $r2 != $r1 goto label06;

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label05:
        goto label10;

     label06:
        $r3 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        i5 = virtualinvoke $r3.<android.os.Parcel: int dataSize()>();

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(i5);

     label07:
        $z1 = r0.<android.os.BaseBundle: boolean mParcelledByNative>;

        if $z1 == 0 goto label09;

     label08:
        i4 = 1279544900;

     label09:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(i4);

        $r4 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        virtualinvoke r6.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r4, 0, i5);

     label10:
        exitmonitor r0;

     label11:
        return;

     label12:
        r8 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        exitmonitor r0;

     label13:
        if r8 == null goto label15;

        $i1 = virtualinvoke r8.<android.util.ArrayMap: int size()>();

        if $i1 > 0 goto label14;

        goto label15;

     label14:
        i6 = virtualinvoke r6.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(-1);

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1279544898);

        i0 = virtualinvoke r6.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r6.<android.os.Parcel: void writeArrayMapInternal(android.util.ArrayMap)>(r8);

        i7 = virtualinvoke r6.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r6.<android.os.Parcel: void setDataPosition(int)>(i6);

        $i2 = i7 - i0;

        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>($i2);

        virtualinvoke r6.<android.os.Parcel: void setDataPosition(int)>(i7);

        return;

     label15:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label16:
        $r5 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        throw $r5;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }
}
