public abstract class android.os.BasicShellCommandHandler extends java.lang.Object
{
    static final boolean DEBUG;
    static final java.lang.String TAG;
    private int mArgPos;
    private java.lang.String[] mArgs;
    private java.lang.String mCmd;
    private java.lang.String mCurArgData;
    private java.io.FileDescriptor mErr;
    private java.io.PrintWriter mErrPrintWriter;
    private java.io.FileOutputStream mFileErr;
    private java.io.FileInputStream mFileIn;
    private java.io.FileOutputStream mFileOut;
    private java.io.FileDescriptor mIn;
    private java.io.InputStream mInputStream;
    private java.io.FileDescriptor mOut;
    private java.io.PrintWriter mOutPrintWriter;
    private android.os.Binder mTarget;

    public void <init>()
    {
        android.os.BasicShellCommandHandler r0;

        r0 := @this: android.os.BasicShellCommandHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int exec(android.os.Binder, java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[])
    {
        android.os.BasicShellCommandHandler r0;
        java.io.FileDescriptor r1, r11, r12;
        java.lang.String[] r2;
        int $i0, i3, i5;
        java.lang.Throwable $r3, $r9;
        java.lang.String $r5, $r8, r13;
        android.os.Binder r10;
        byte b1;
        java.io.PrintWriter r14, r15, r17, r19, r21, r22;
        java.lang.StringBuilder r18;

        r0 := @this: android.os.BasicShellCommandHandler;

        r10 := @parameter0: android.os.Binder;

        r11 := @parameter1: java.io.FileDescriptor;

        r12 := @parameter2: java.io.FileDescriptor;

        r1 := @parameter3: java.io.FileDescriptor;

        r2 := @parameter4: java.lang.String[];

        if r2 == null goto label01;

        $i0 = lengthof r2;

        if $i0 <= 0 goto label01;

        r13 = r2[0];

        b1 = 1;

        goto label02;

     label01:
        r13 = null;

        b1 = 0;

     label02:
        virtualinvoke r0.<android.os.BasicShellCommandHandler: void init(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],int)>(r10, r11, r12, r1, r2, b1);

        r0.<android.os.BasicShellCommandHandler: java.lang.String mCmd> = r13;

     label03:
        i3 = virtualinvoke r0.<android.os.BasicShellCommandHandler: int onCommand(java.lang.String)>(r13);

     label04:
        r14 = r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mOutPrintWriter>;

        if r14 == null goto label05;

        virtualinvoke r14.<java.io.PrintWriter: void flush()>();

     label05:
        r15 = r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mErrPrintWriter>;

        i5 = i3;

        if r15 == null goto label11;

        i5 = i3;

     label06:
        virtualinvoke r15.<java.io.PrintWriter: void flush()>();

        goto label11;

     label07:
        $r3 := @caughtexception;

     label08:
        r17 = virtualinvoke r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke r17.<java.io.PrintWriter: void println()>();

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception occurred while executing \'");

        $r5 = r0.<android.os.BasicShellCommandHandler: java.lang.String mCmd>;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\':");

        $r8 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r17.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r17);

     label09:
        r19 = r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mOutPrintWriter>;

        if r19 == null goto label10;

        virtualinvoke r19.<java.io.PrintWriter: void flush()>();

     label10:
        r15 = r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mErrPrintWriter>;

        i5 = -1;

        if r15 == null goto label11;

        i5 = -1;

        goto label06;

     label11:
        return i5;

     label12:
        $r9 := @caughtexception;

        r21 = r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mOutPrintWriter>;

        if r21 == null goto label13;

        virtualinvoke r21.<java.io.PrintWriter: void flush()>();

     label13:
        r22 = r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mErrPrintWriter>;

        if r22 == null goto label14;

        virtualinvoke r22.<java.io.PrintWriter: void flush()>();

     label14:
        throw $r9;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public java.lang.String[] getAllArgs()
    {
        android.os.BasicShellCommandHandler r0;
        java.lang.String[] $r1;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.lang.String[] mArgs>;

        return $r1;
    }

    public java.io.InputStream getBufferedInputStream()
    {
        android.os.BasicShellCommandHandler r0;
        java.io.InputStream $r1, $r2, $r4;
        java.io.BufferedInputStream $r3;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.io.InputStream mInputStream>;

        if $r1 != null goto label1;

        $r3 = new java.io.BufferedInputStream;

        $r4 = virtualinvoke r0.<android.os.BasicShellCommandHandler: java.io.InputStream getRawInputStream()>();

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r4);

        r0.<android.os.BasicShellCommandHandler: java.io.InputStream mInputStream> = $r3;

     label1:
        $r2 = r0.<android.os.BasicShellCommandHandler: java.io.InputStream mInputStream>;

        return $r2;
    }

    public java.io.FileDescriptor getErrFileDescriptor()
    {
        android.os.BasicShellCommandHandler r0;
        java.io.FileDescriptor $r1;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.io.FileDescriptor mErr>;

        return $r1;
    }

    public java.io.PrintWriter getErrPrintWriter()
    {
        android.os.BasicShellCommandHandler r0;
        java.io.FileDescriptor $r1;
        java.io.PrintWriter $r2, $r3, $r4, $r6;
        java.io.OutputStream $r5;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.io.FileDescriptor mErr>;

        if $r1 != null goto label1;

        $r6 = virtualinvoke r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter getOutPrintWriter()>();

        return $r6;

     label1:
        $r2 = r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mErrPrintWriter>;

        if $r2 != null goto label2;

        $r4 = new java.io.PrintWriter;

        $r5 = virtualinvoke r0.<android.os.BasicShellCommandHandler: java.io.OutputStream getRawErrorStream()>();

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r5);

        r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mErrPrintWriter> = $r4;

     label2:
        $r3 = r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mErrPrintWriter>;

        return $r3;
    }

    public java.io.FileDescriptor getInFileDescriptor()
    {
        android.os.BasicShellCommandHandler r0;
        java.io.FileDescriptor $r1;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.io.FileDescriptor mIn>;

        return $r1;
    }

    public java.lang.String getNextArg()
    {
        android.os.BasicShellCommandHandler r0;
        int i0, $i1, $i2;
        java.lang.String $r1, $r2, r3;
        java.lang.String[] r4;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.lang.String mCurArgData>;

        if $r1 == null goto label1;

        r3 = r0.<android.os.BasicShellCommandHandler: java.lang.String mCurArgData>;

        r0.<android.os.BasicShellCommandHandler: java.lang.String mCurArgData> = null;

        return r3;

     label1:
        i0 = r0.<android.os.BasicShellCommandHandler: int mArgPos>;

        r4 = r0.<android.os.BasicShellCommandHandler: java.lang.String[] mArgs>;

        $i1 = lengthof r4;

        if i0 >= $i1 goto label2;

        $i2 = i0 + 1;

        r0.<android.os.BasicShellCommandHandler: int mArgPos> = $i2;

        $r2 = r4[i0];

        return $r2;

     label2:
        return null;
    }

    public java.lang.String getNextArgRequired()
    {
        android.os.BasicShellCommandHandler r0;
        int $i0, $i1;
        java.lang.String[] $r2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, r9, r10;

        r0 := @this: android.os.BasicShellCommandHandler;

        r9 = virtualinvoke r0.<android.os.BasicShellCommandHandler: java.lang.String getNextArg()>();

        if r9 == null goto label1;

        return r9;

     label1:
        $r2 = r0.<android.os.BasicShellCommandHandler: java.lang.String[] mArgs>;

        $i0 = r0.<android.os.BasicShellCommandHandler: int mArgPos>;

        $i1 = $i0 - 1;

        r10 = $r2[$i1];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument expected after \"");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public java.lang.String getNextOption()
    {
        android.os.BasicShellCommandHandler r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        java.lang.String r1, $r2, $r9, $r10, $r11, r13;
        java.lang.String[] $r3, r12;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r8;
        boolean $z0, $z1;
        char $c7;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r2 = r0.<android.os.BasicShellCommandHandler: java.lang.String mCurArgData>;

        if $r2 != null goto label6;

        i0 = r0.<android.os.BasicShellCommandHandler: int mArgPos>;

        r12 = r0.<android.os.BasicShellCommandHandler: java.lang.String[] mArgs>;

        $i3 = lengthof r12;

        if i0 < $i3 goto label1;

        return null;

     label1:
        r13 = r12[i0];

        $z0 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 != 0 goto label2;

        return null;

     label2:
        $i4 = r0.<android.os.BasicShellCommandHandler: int mArgPos>;

        $i5 = $i4 + 1;

        r0.<android.os.BasicShellCommandHandler: int mArgPos> = $i5;

        $z1 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("--");

        if $z1 == 0 goto label3;

        return null;

     label3:
        $i6 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i6 <= 1 goto label5;

        $c7 = virtualinvoke r13.<java.lang.String: char charAt(int)>(1);

        if $c7 == 45 goto label5;

        $i8 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i8 <= 2 goto label4;

        $r10 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>(2);

        r0.<android.os.BasicShellCommandHandler: java.lang.String mCurArgData> = $r10;

        $r11 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        return $r11;

     label4:
        r0.<android.os.BasicShellCommandHandler: java.lang.String mCurArgData> = null;

        return r13;

     label5:
        r0.<android.os.BasicShellCommandHandler: java.lang.String mCurArgData> = null;

        return r13;

     label6:
        $r3 = r0.<android.os.BasicShellCommandHandler: java.lang.String[] mArgs>;

        $i1 = r0.<android.os.BasicShellCommandHandler: int mArgPos>;

        $i2 = $i1 - 1;

        r1 = $r3[$i2];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No argument expected after \"");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public java.io.FileDescriptor getOutFileDescriptor()
    {
        android.os.BasicShellCommandHandler r0;
        java.io.FileDescriptor $r1;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.io.FileDescriptor mOut>;

        return $r1;
    }

    public java.io.PrintWriter getOutPrintWriter()
    {
        android.os.BasicShellCommandHandler r0;
        java.io.PrintWriter $r1, $r2, $r3;
        java.io.OutputStream $r4;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mOutPrintWriter>;

        if $r1 != null goto label1;

        $r3 = new java.io.PrintWriter;

        $r4 = virtualinvoke r0.<android.os.BasicShellCommandHandler: java.io.OutputStream getRawOutputStream()>();

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r4);

        r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mOutPrintWriter> = $r3;

     label1:
        $r2 = r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mOutPrintWriter>;

        return $r2;
    }

    public java.io.OutputStream getRawErrorStream()
    {
        android.os.BasicShellCommandHandler r0;
        java.io.FileOutputStream $r1, $r2, $r3;
        java.io.FileDescriptor $r4;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.io.FileOutputStream mFileErr>;

        if $r1 != null goto label1;

        $r3 = new java.io.FileOutputStream;

        $r4 = r0.<android.os.BasicShellCommandHandler: java.io.FileDescriptor mErr>;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r4);

        r0.<android.os.BasicShellCommandHandler: java.io.FileOutputStream mFileErr> = $r3;

     label1:
        $r2 = r0.<android.os.BasicShellCommandHandler: java.io.FileOutputStream mFileErr>;

        return $r2;
    }

    public java.io.InputStream getRawInputStream()
    {
        android.os.BasicShellCommandHandler r0;
        java.io.FileInputStream $r1, $r2, $r3;
        java.io.FileDescriptor $r4;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.io.FileInputStream mFileIn>;

        if $r1 != null goto label1;

        $r3 = new java.io.FileInputStream;

        $r4 = r0.<android.os.BasicShellCommandHandler: java.io.FileDescriptor mIn>;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r4);

        r0.<android.os.BasicShellCommandHandler: java.io.FileInputStream mFileIn> = $r3;

     label1:
        $r2 = r0.<android.os.BasicShellCommandHandler: java.io.FileInputStream mFileIn>;

        return $r2;
    }

    public java.io.OutputStream getRawOutputStream()
    {
        android.os.BasicShellCommandHandler r0;
        java.io.FileOutputStream $r1, $r2, $r3;
        java.io.FileDescriptor $r4;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: java.io.FileOutputStream mFileOut>;

        if $r1 != null goto label1;

        $r3 = new java.io.FileOutputStream;

        $r4 = r0.<android.os.BasicShellCommandHandler: java.io.FileDescriptor mOut>;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r4);

        r0.<android.os.BasicShellCommandHandler: java.io.FileOutputStream mFileOut> = $r3;

     label1:
        $r2 = r0.<android.os.BasicShellCommandHandler: java.io.FileOutputStream mFileOut>;

        return $r2;
    }

    public int getRemainingArgsCount()
    {
        android.os.BasicShellCommandHandler r0;
        int i0, $i1, $i2, $i3;
        java.lang.String[] r1;

        r0 := @this: android.os.BasicShellCommandHandler;

        i0 = r0.<android.os.BasicShellCommandHandler: int mArgPos>;

        r1 = r0.<android.os.BasicShellCommandHandler: java.lang.String[] mArgs>;

        $i1 = lengthof r1;

        if i0 < $i1 goto label1;

        return 0;

     label1:
        $i2 = lengthof r1;

        $i3 = $i2 - i0;

        return $i3;
    }

    public android.os.Binder getTarget()
    {
        android.os.BasicShellCommandHandler r0;
        android.os.Binder $r1;

        r0 := @this: android.os.BasicShellCommandHandler;

        $r1 = r0.<android.os.BasicShellCommandHandler: android.os.Binder mTarget>;

        return $r1;
    }

    public int handleDefaultCommands(java.lang.String)
    {
        android.os.BasicShellCommandHandler r0;
        java.lang.String r1, $r4, $r5, $r9;
        java.io.PrintWriter r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6;

        r0 := @this: android.os.BasicShellCommandHandler;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        $r4 = "help";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r5 = "-h";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        r2 = virtualinvoke r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter getOutPrintWriter()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown command: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        goto label3;

     label2:
        virtualinvoke r0.<android.os.BasicShellCommandHandler: void onHelp()>();

     label3:
        return -1;
    }

    public void init(android.os.Binder, java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], int)
    {
        android.os.BasicShellCommandHandler r0;
        android.os.Binder r1;
        java.io.FileDescriptor r2, r3, r4;
        java.lang.String[] r5;
        int i0;

        r0 := @this: android.os.BasicShellCommandHandler;

        r1 := @parameter0: android.os.Binder;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.io.FileDescriptor;

        r5 := @parameter4: java.lang.String[];

        i0 := @parameter5: int;

        r0.<android.os.BasicShellCommandHandler: android.os.Binder mTarget> = r1;

        r0.<android.os.BasicShellCommandHandler: java.io.FileDescriptor mIn> = r2;

        r0.<android.os.BasicShellCommandHandler: java.io.FileDescriptor mOut> = r3;

        r0.<android.os.BasicShellCommandHandler: java.io.FileDescriptor mErr> = r4;

        r0.<android.os.BasicShellCommandHandler: java.lang.String[] mArgs> = r5;

        r0.<android.os.BasicShellCommandHandler: java.lang.String mCmd> = null;

        r0.<android.os.BasicShellCommandHandler: int mArgPos> = i0;

        r0.<android.os.BasicShellCommandHandler: java.lang.String mCurArgData> = null;

        r0.<android.os.BasicShellCommandHandler: java.io.FileInputStream mFileIn> = null;

        r0.<android.os.BasicShellCommandHandler: java.io.FileOutputStream mFileOut> = null;

        r0.<android.os.BasicShellCommandHandler: java.io.FileOutputStream mFileErr> = null;

        r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mOutPrintWriter> = null;

        r0.<android.os.BasicShellCommandHandler: java.io.PrintWriter mErrPrintWriter> = null;

        r0.<android.os.BasicShellCommandHandler: java.io.InputStream mInputStream> = null;

        return;
    }

    public abstract int onCommand(java.lang.String);

    public abstract void onHelp();

    public java.lang.String peekNextArg()
    {
        android.os.BasicShellCommandHandler r0;
        int i0, $i1;
        java.lang.String $r1, r2;
        java.lang.String[] r3;

        r0 := @this: android.os.BasicShellCommandHandler;

        r2 = r0.<android.os.BasicShellCommandHandler: java.lang.String mCurArgData>;

        if r2 == null goto label1;

        return r2;

     label1:
        i0 = r0.<android.os.BasicShellCommandHandler: int mArgPos>;

        r3 = r0.<android.os.BasicShellCommandHandler: java.lang.String[] mArgs>;

        $i1 = lengthof r3;

        if i0 >= $i1 goto label2;

        $r1 = r3[i0];

        return $r1;

     label2:
        return null;
    }

    public static void <clinit>()
    {
        <android.os.BasicShellCommandHandler: java.lang.String TAG> = "ShellCommand";

        <android.os.BasicShellCommandHandler: boolean DEBUG> = 0;

        return;
    }
}
