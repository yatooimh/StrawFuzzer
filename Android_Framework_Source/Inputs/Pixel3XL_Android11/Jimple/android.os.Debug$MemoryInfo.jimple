public class android.os.Debug$MemoryInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int HEAP_DALVIK;
    public static final int HEAP_NATIVE;
    public static final int HEAP_UNKNOWN;
    public static final int NUM_CATEGORIES;
    public static final int NUM_DVK_STATS;
    public static final int NUM_OTHER_STATS;
    public static final int OFFSET_PRIVATE_CLEAN;
    public static final int OFFSET_PRIVATE_DIRTY;
    public static final int OFFSET_PSS;
    public static final int OFFSET_RSS;
    public static final int OFFSET_SHARED_CLEAN;
    public static final int OFFSET_SHARED_DIRTY;
    public static final int OFFSET_SWAPPABLE_PSS;
    public static final int OFFSET_SWAPPED_OUT;
    public static final int OFFSET_SWAPPED_OUT_PSS;
    public static final int OTHER_APK;
    public static final int OTHER_ART;
    public static final int OTHER_ART_APP;
    public static final int OTHER_ART_BOOT;
    public static final int OTHER_ASHMEM;
    public static final int OTHER_CURSOR;
    public static final int OTHER_DALVIK_LARGE;
    public static final int OTHER_DALVIK_NON_MOVING;
    public static final int OTHER_DALVIK_NORMAL;
    public static final int OTHER_DALVIK_OTHER;
    public static final int OTHER_DALVIK_OTHER_ACCOUNTING;
    public static final int OTHER_DALVIK_OTHER_APP_CODE_CACHE;
    public static final int OTHER_DALVIK_OTHER_COMPILER_METADATA;
    public static final int OTHER_DALVIK_OTHER_INDIRECT_REFERENCE_TABLE;
    public static final int OTHER_DALVIK_OTHER_LINEARALLOC;
    public static final int OTHER_DALVIK_OTHER_ZYGOTE_CODE_CACHE;
    public static final int OTHER_DALVIK_ZYGOTE;
    public static final int OTHER_DEX;
    public static final int OTHER_DEX_APP_DEX;
    public static final int OTHER_DEX_APP_VDEX;
    public static final int OTHER_DEX_BOOT_VDEX;
    public static final int OTHER_DVK_STAT_ART_END;
    public static final int OTHER_DVK_STAT_ART_START;
    public static final int OTHER_DVK_STAT_DALVIK_END;
    public static final int OTHER_DVK_STAT_DALVIK_OTHER_END;
    public static final int OTHER_DVK_STAT_DALVIK_OTHER_START;
    public static final int OTHER_DVK_STAT_DALVIK_START;
    public static final int OTHER_DVK_STAT_DEX_END;
    public static final int OTHER_DVK_STAT_DEX_START;
    public static final int OTHER_GL;
    public static final int OTHER_GL_DEV;
    public static final int OTHER_GRAPHICS;
    public static final int OTHER_JAR;
    public static final int OTHER_OAT;
    public static final int OTHER_OTHER_MEMTRACK;
    public static final int OTHER_SO;
    public static final int OTHER_STACK;
    public static final int OTHER_TTF;
    public static final int OTHER_UNKNOWN_DEV;
    public static final int OTHER_UNKNOWN_MAP;
    public int dalvikPrivateClean;
    public int dalvikPrivateDirty;
    public int dalvikPss;
    public int dalvikRss;
    public int dalvikSharedClean;
    public int dalvikSharedDirty;
    public int dalvikSwappablePss;
    public int dalvikSwappedOut;
    public int dalvikSwappedOutPss;
    public boolean hasSwappedOutPss;
    public int nativePrivateClean;
    public int nativePrivateDirty;
    public int nativePss;
    public int nativeRss;
    public int nativeSharedClean;
    public int nativeSharedDirty;
    public int nativeSwappablePss;
    public int nativeSwappedOut;
    public int nativeSwappedOutPss;
    public int otherPrivateClean;
    public int otherPrivateDirty;
    public int otherPss;
    public int otherRss;
    public int otherSharedClean;
    public int otherSharedDirty;
    private int[] otherStats;
    public int otherSwappablePss;
    public int otherSwappedOut;
    public int otherSwappedOutPss;

    static void <clinit>()
    {
        android.os.Debug$MemoryInfo$1 $r0;

        <android.os.Debug$MemoryInfo: int OTHER_UNKNOWN_MAP> = 13;

        <android.os.Debug$MemoryInfo: int OTHER_UNKNOWN_DEV> = 5;

        <android.os.Debug$MemoryInfo: int OTHER_TTF> = 9;

        <android.os.Debug$MemoryInfo: int OTHER_STACK> = 1;

        <android.os.Debug$MemoryInfo: int OTHER_SO> = 6;

        <android.os.Debug$MemoryInfo: int OTHER_OTHER_MEMTRACK> = 16;

        <android.os.Debug$MemoryInfo: int OTHER_OAT> = 11;

        <android.os.Debug$MemoryInfo: int OTHER_JAR> = 7;

        <android.os.Debug$MemoryInfo: int OTHER_GRAPHICS> = 14;

        <android.os.Debug$MemoryInfo: int OTHER_GL_DEV> = 4;

        <android.os.Debug$MemoryInfo: int OTHER_GL> = 15;

        <android.os.Debug$MemoryInfo: int OTHER_DVK_STAT_DEX_START> = 10;

        <android.os.Debug$MemoryInfo: int OTHER_DVK_STAT_DEX_END> = 12;

        <android.os.Debug$MemoryInfo: int OTHER_DVK_STAT_DALVIK_START> = 0;

        <android.os.Debug$MemoryInfo: int OTHER_DVK_STAT_DALVIK_OTHER_START> = 4;

        <android.os.Debug$MemoryInfo: int OTHER_DVK_STAT_DALVIK_OTHER_END> = 9;

        <android.os.Debug$MemoryInfo: int OTHER_DVK_STAT_DALVIK_END> = 3;

        <android.os.Debug$MemoryInfo: int OTHER_DVK_STAT_ART_START> = 13;

        <android.os.Debug$MemoryInfo: int OTHER_DVK_STAT_ART_END> = 14;

        <android.os.Debug$MemoryInfo: int OTHER_DEX_BOOT_VDEX> = 27;

        <android.os.Debug$MemoryInfo: int OTHER_DEX_APP_VDEX> = 29;

        <android.os.Debug$MemoryInfo: int OTHER_DEX_APP_DEX> = 28;

        <android.os.Debug$MemoryInfo: int OTHER_DEX> = 10;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_ZYGOTE> = 19;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_OTHER_ZYGOTE_CODE_CACHE> = 23;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_OTHER_LINEARALLOC> = 21;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_OTHER_INDIRECT_REFERENCE_TABLE> = 26;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_OTHER_COMPILER_METADATA> = 25;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_OTHER_APP_CODE_CACHE> = 24;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_OTHER_ACCOUNTING> = 22;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_OTHER> = 0;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_NORMAL> = 17;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_NON_MOVING> = 20;

        <android.os.Debug$MemoryInfo: int OTHER_DALVIK_LARGE> = 18;

        <android.os.Debug$MemoryInfo: int OTHER_CURSOR> = 2;

        <android.os.Debug$MemoryInfo: int OTHER_ASHMEM> = 3;

        <android.os.Debug$MemoryInfo: int OTHER_ART_BOOT> = 31;

        <android.os.Debug$MemoryInfo: int OTHER_ART_APP> = 30;

        <android.os.Debug$MemoryInfo: int OTHER_ART> = 12;

        <android.os.Debug$MemoryInfo: int OTHER_APK> = 8;

        <android.os.Debug$MemoryInfo: int OFFSET_SWAPPED_OUT_PSS> = 8;

        <android.os.Debug$MemoryInfo: int OFFSET_SWAPPED_OUT> = 7;

        <android.os.Debug$MemoryInfo: int OFFSET_SWAPPABLE_PSS> = 1;

        <android.os.Debug$MemoryInfo: int OFFSET_SHARED_DIRTY> = 4;

        <android.os.Debug$MemoryInfo: int OFFSET_SHARED_CLEAN> = 6;

        <android.os.Debug$MemoryInfo: int OFFSET_RSS> = 2;

        <android.os.Debug$MemoryInfo: int OFFSET_PSS> = 0;

        <android.os.Debug$MemoryInfo: int OFFSET_PRIVATE_DIRTY> = 3;

        <android.os.Debug$MemoryInfo: int OFFSET_PRIVATE_CLEAN> = 5;

        <android.os.Debug$MemoryInfo: int NUM_OTHER_STATS> = 17;

        <android.os.Debug$MemoryInfo: int NUM_DVK_STATS> = 15;

        <android.os.Debug$MemoryInfo: int NUM_CATEGORIES> = 9;

        <android.os.Debug$MemoryInfo: int HEAP_UNKNOWN> = 0;

        <android.os.Debug$MemoryInfo: int HEAP_NATIVE> = 2;

        <android.os.Debug$MemoryInfo: int HEAP_DALVIK> = 1;

        $r0 = new android.os.Debug$MemoryInfo$1;

        specialinvoke $r0.<android.os.Debug$MemoryInfo$1: void <init>()>();

        <android.os.Debug$MemoryInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.os.Debug$MemoryInfo r0;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[288];

        r0.<android.os.Debug$MemoryInfo: int[] otherStats> = $r1;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.os.Debug$MemoryInfo r0;
        android.os.Parcel r1;
        int[] $r2;

        r0 := @this: android.os.Debug$MemoryInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (int)[288];

        r0.<android.os.Debug$MemoryInfo: int[] otherStats> = $r2;

        virtualinvoke r0.<android.os.Debug$MemoryInfo: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    void <init>(android.os.Parcel, android.os.Debug$1)
    {
        android.os.Debug$MemoryInfo r0;
        android.os.Parcel r1;
        android.os.Debug$1 r2;

        r0 := @this: android.os.Debug$MemoryInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.Debug$1;

        specialinvoke r0.<android.os.Debug$MemoryInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public static java.lang.String getOtherLabel(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label33;
            case 1: goto label32;
            case 2: goto label31;
            case 3: goto label30;
            case 4: goto label29;
            case 5: goto label28;
            case 6: goto label27;
            case 7: goto label26;
            case 8: goto label25;
            case 9: goto label24;
            case 10: goto label23;
            case 11: goto label22;
            case 12: goto label21;
            case 13: goto label20;
            case 14: goto label19;
            case 15: goto label18;
            case 16: goto label17;
            case 17: goto label16;
            case 18: goto label15;
            case 19: goto label14;
            case 20: goto label13;
            case 21: goto label12;
            case 22: goto label11;
            case 23: goto label10;
            case 24: goto label09;
            case 25: goto label08;
            case 26: goto label07;
            case 27: goto label06;
            case 28: goto label05;
            case 29: goto label04;
            case 30: goto label03;
            case 31: goto label02;
            default: goto label01;
        };

     label01:
        return "????";

     label02:
        return ".Boot art";

     label03:
        return ".App art";

     label04:
        return ".App vdex";

     label05:
        return ".App dex";

     label06:
        return ".Boot vdex";

     label07:
        return ".IndirectRef";

     label08:
        return ".CompilerMetadata";

     label09:
        return ".AppJIT";

     label10:
        return ".ZygoteJIT";

     label11:
        return ".GC";

     label12:
        return ".LinearAlloc";

     label13:
        return ".NonMoving";

     label14:
        return ".Zygote";

     label15:
        return ".LOS";

     label16:
        return ".Heap";

     label17:
        return "Other mtrack";

     label18:
        return "GL mtrack";

     label19:
        return "EGL mtrack";

     label20:
        return "Other mmap";

     label21:
        return ".art mmap";

     label22:
        return ".oat mmap";

     label23:
        return ".dex mmap";

     label24:
        return ".ttf mmap";

     label25:
        return ".apk mmap";

     label26:
        return ".jar mmap";

     label27:
        return ".so mmap";

     label28:
        return "Other dev";

     label29:
        return "Gfx dev";

     label30:
        return "Ashmem";

     label31:
        return "Cursor";

     label32:
        return "Stack";

     label33:
        return "Dalvik Other";
    }

    public int describeContents()
    {
        android.os.Debug$MemoryInfo r0;

        r0 := @this: android.os.Debug$MemoryInfo;

        return 0;
    }

    public java.lang.String getMemoryStat(java.lang.String)
    {
        android.os.Debug$MemoryInfo r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        byte b10;

        r0 := @this: android.os.Debug$MemoryInfo;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1629983121: goto label10;
            case -1318722433: goto label09;
            case -1086991874: goto label08;
            case -1040176230: goto label07;
            case -675184064: goto label06;
            case 549300599: goto label05;
            case 1640306485: goto label04;
            case 2016489427: goto label03;
            case 2069370308: goto label02;
            default: goto label01;
        };

     label01:
        goto label11;

     label02:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("summary.total-swap");

        if $z0 == 0 goto label01;

        b10 = 8;

        goto label12;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("summary.graphics");

        if $z1 == 0 goto label01;

        b10 = 4;

        goto label12;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("summary.code");

        if $z2 == 0 goto label01;

        b10 = 2;

        goto label12;

     label05:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("summary.system");

        if $z3 == 0 goto label01;

        b10 = 6;

        goto label12;

     label06:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("summary.stack");

        if $z4 == 0 goto label01;

        b10 = 3;

        goto label12;

     label07:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("summary.native-heap");

        if $z5 == 0 goto label01;

        b10 = 1;

        goto label12;

     label08:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("summary.private-other");

        if $z6 == 0 goto label01;

        b10 = 5;

        goto label12;

     label09:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("summary.total-pss");

        if $z7 == 0 goto label01;

        b10 = 7;

        goto label12;

     label10:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("summary.java-heap");

        if $z8 == 0 goto label01;

        b10 = 0;

        goto label12;

     label11:
        b10 = -1;

     label12:
        tableswitch(b10)
        {
            case 0: goto label22;
            case 1: goto label21;
            case 2: goto label20;
            case 3: goto label19;
            case 4: goto label18;
            case 5: goto label17;
            case 6: goto label16;
            case 7: goto label15;
            case 8: goto label14;
            default: goto label13;
        };

     label13:
        return null;

     label14:
        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryTotalSwap()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        return $r2;

     label15:
        $i2 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryTotalPss()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        return $r3;

     label16:
        $i3 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummarySystem()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        return $r4;

     label17:
        $i4 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryPrivateOther()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        return $r5;

     label18:
        $i5 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryGraphics()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        return $r6;

     label19:
        $i6 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryStack()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        return $r7;

     label20:
        $i7 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryCode()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        return $r8;

     label21:
        $i8 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryNativeHeap()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        return $r9;

     label22:
        $i9 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryJavaHeap()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        return $r10;
    }

    public java.util.Map getMemoryStats()
    {
        android.os.Debug$MemoryInfo r0;
        java.util.HashMap $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;

        r0 := @this: android.os.Debug$MemoryInfo;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryJavaHeap()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("summary.java-heap", $r3);

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryNativeHeap()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("summary.native-heap", $r5);

        $i2 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryCode()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("summary.code", $r7);

        $i3 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryStack()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("summary.stack", $r9);

        $i4 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryGraphics()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("summary.graphics", $r11);

        $i5 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryPrivateOther()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("summary.private-other", $r13);

        $i6 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummarySystem()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("summary.system", $r15);

        $i7 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryTotalPss()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("summary.total-pss", $r17);

        $i8 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryTotalSwap()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("summary.total-swap", $r19);

        return $r2;
    }

    public int getOtherPrivate(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)>(i0);

        $i2 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>(i0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public int getOtherPrivateClean(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 9;

        $i2 = $i1 + 5;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherPrivateDirty(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 9;

        $i2 = $i1 + 3;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherPss(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 9;

        $i2 = $i1 + 0;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherRss(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 9;

        $i2 = $i1 + 2;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherSharedClean(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 9;

        $i2 = $i1 + 6;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherSharedDirty(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 9;

        $i2 = $i1 + 4;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherSwappablePss(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 9;

        $i2 = $i1 + 1;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherSwappedOut(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 9;

        $i2 = $i1 + 7;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherSwappedOutPss(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 9;

        $i2 = $i1 + 8;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getSummaryCode()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(6);

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(7);

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(8);

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(9);

        $i6 = $i4 + $i5;

        $i7 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(10);

        $i8 = $i6 + $i7;

        $i9 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(11);

        $i10 = $i8 + $i9;

        $i11 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(23);

        $i12 = $i10 + $i11;

        $i13 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(24);

        $i14 = $i12 + $i13;

        return $i14;
    }

    public int getSummaryCodeRss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(6);

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(7);

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(8);

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(9);

        $i6 = $i4 + $i5;

        $i7 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(10);

        $i8 = $i6 + $i7;

        $i9 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(11);

        $i10 = $i8 + $i9;

        $i11 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(23);

        $i12 = $i10 + $i11;

        $i13 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(24);

        $i14 = $i12 + $i13;

        return $i14;
    }

    public int getSummaryGraphics()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(4);

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(14);

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(15);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public int getSummaryGraphicsRss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(4);

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(14);

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(15);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public int getSummaryJavaHeap()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivate(int)>(12);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getSummaryJavaHeapRss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = r0.<android.os.Debug$MemoryInfo: int dalvikRss>;

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(12);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getSummaryNativeHeap()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        return $i0;
    }

    public int getSummaryNativeHeapRss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeRss>;

        return $i0;
    }

    public int getSummaryPrivateOther()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getTotalPrivateClean()>();

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryJavaHeap()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryNativeHeap()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryCode()>();

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryStack()>();

        $i10 = $i8 - $i9;

        $i11 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryGraphics()>();

        $i12 = $i10 - $i11;

        return $i12;
    }

    public int getSummaryStack()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>(1);

        return $i0;
    }

    public int getSummaryStackRss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(1);

        return $i0;
    }

    public int getSummarySystem()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getTotalPrivateClean()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    public int getSummaryTotalPss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        return $i0;
    }

    public int getSummaryTotalSwap()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getTotalSwappedOut()>();

        return $i0;
    }

    public int getSummaryTotalSwapPss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>();

        return $i0;
    }

    public int getSummaryUnknownRss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i0 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getTotalRss()>();

        $i1 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryJavaHeapRss()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryNativeHeapRss()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryCodeRss()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryStackRss()>();

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getSummaryGraphicsRss()>();

        $i10 = $i8 - $i9;

        return $i10;
    }

    public int getTotalPrivateClean()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalPrivateDirty()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalPss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativePss>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherPss>;

        $i4 = $i3 + $i2;

        $i5 = virtualinvoke r0.<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>();

        $i6 = $i4 + $i5;

        return $i6;
    }

    public int getTotalRss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikRss>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeRss>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherRss>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalSharedClean()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikSharedClean>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeSharedClean>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherSharedClean>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalSharedDirty()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalSwappablePss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikSwappablePss>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeSwappablePss>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherSwappablePss>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalSwappedOut()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherSwappedOut>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalSwappedOutPss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherSwappedOutPss>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalUss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        $i5 = $i3 + $i2;

        $i4 = r0.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        $i7 = $i5 + $i4;

        $i6 = r0.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        $i9 = $i7 + $i6;

        $i8 = r0.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        $i10 = $i9 + $i8;

        return $i10;
    }

    public boolean hasSwappedOutPss()
    {
        android.os.Debug$MemoryInfo r0;
        boolean $z0;

        r0 := @this: android.os.Debug$MemoryInfo;

        $z0 = r0.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        return $z0;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.os.Debug$MemoryInfo r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        int[] $r2;
        boolean z0;

        r0 := @this: android.os.Debug$MemoryInfo;

        r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikPss> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikSwappablePss> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikRss> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikSharedDirty> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikPrivateClean> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikSharedClean> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOut> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss> = $i8;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativePss> = $i9;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativeSwappablePss> = $i10;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativeRss> = $i11;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativePrivateDirty> = $i12;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativeSharedDirty> = $i13;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativePrivateClean> = $i14;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativeSharedClean> = $i15;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativeSwappedOut> = $i16;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss> = $i17;

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherPss> = $i18;

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherSwappablePss> = $i19;

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherRss> = $i20;

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherPrivateDirty> = $i21;

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherSharedDirty> = $i22;

        $i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherPrivateClean> = $i23;

        $i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherSharedClean> = $i24;

        $i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherSwappedOut> = $i25;

        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i26 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r0.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss> = z0;

        $i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherSwappedOutPss> = $i27;

        $r2 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<android.os.Debug$MemoryInfo: int[] otherStats> = $r2;

        return;
    }

    public void set(android.os.Debug$MemoryInfo)
    {
        android.os.Debug$MemoryInfo r0, r2;
        int[] r1, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        boolean $z0;

        r0 := @this: android.os.Debug$MemoryInfo;

        r2 := @parameter0: android.os.Debug$MemoryInfo;

        $i0 = r2.<android.os.Debug$MemoryInfo: int dalvikPss>;

        r0.<android.os.Debug$MemoryInfo: int dalvikPss> = $i0;

        $i1 = r2.<android.os.Debug$MemoryInfo: int dalvikSwappablePss>;

        r0.<android.os.Debug$MemoryInfo: int dalvikSwappablePss> = $i1;

        $i2 = r2.<android.os.Debug$MemoryInfo: int dalvikRss>;

        r0.<android.os.Debug$MemoryInfo: int dalvikRss> = $i2;

        $i3 = r2.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        r0.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty> = $i3;

        $i4 = r2.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        r0.<android.os.Debug$MemoryInfo: int dalvikSharedDirty> = $i4;

        $i5 = r2.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        r0.<android.os.Debug$MemoryInfo: int dalvikPrivateClean> = $i5;

        $i6 = r2.<android.os.Debug$MemoryInfo: int dalvikSharedClean>;

        r0.<android.os.Debug$MemoryInfo: int dalvikSharedClean> = $i6;

        $i7 = r2.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

        r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOut> = $i7;

        $i8 = r2.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

        r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss> = $i8;

        $i9 = r2.<android.os.Debug$MemoryInfo: int nativePss>;

        r0.<android.os.Debug$MemoryInfo: int nativePss> = $i9;

        $i10 = r2.<android.os.Debug$MemoryInfo: int nativeSwappablePss>;

        r0.<android.os.Debug$MemoryInfo: int nativeSwappablePss> = $i10;

        $i11 = r2.<android.os.Debug$MemoryInfo: int nativeRss>;

        r0.<android.os.Debug$MemoryInfo: int nativeRss> = $i11;

        $i12 = r2.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        r0.<android.os.Debug$MemoryInfo: int nativePrivateDirty> = $i12;

        $i13 = r2.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        r0.<android.os.Debug$MemoryInfo: int nativeSharedDirty> = $i13;

        $i14 = r2.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        r0.<android.os.Debug$MemoryInfo: int nativePrivateClean> = $i14;

        $i15 = r2.<android.os.Debug$MemoryInfo: int nativeSharedClean>;

        r0.<android.os.Debug$MemoryInfo: int nativeSharedClean> = $i15;

        $i16 = r2.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

        r0.<android.os.Debug$MemoryInfo: int nativeSwappedOut> = $i16;

        $i17 = r2.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

        r0.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss> = $i17;

        $i18 = r2.<android.os.Debug$MemoryInfo: int otherPss>;

        r0.<android.os.Debug$MemoryInfo: int otherPss> = $i18;

        $i19 = r2.<android.os.Debug$MemoryInfo: int otherSwappablePss>;

        r0.<android.os.Debug$MemoryInfo: int otherSwappablePss> = $i19;

        $i20 = r2.<android.os.Debug$MemoryInfo: int otherRss>;

        r0.<android.os.Debug$MemoryInfo: int otherRss> = $i20;

        $i21 = r2.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        r0.<android.os.Debug$MemoryInfo: int otherPrivateDirty> = $i21;

        $i22 = r2.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        r0.<android.os.Debug$MemoryInfo: int otherSharedDirty> = $i22;

        $i23 = r2.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        r0.<android.os.Debug$MemoryInfo: int otherPrivateClean> = $i23;

        $i24 = r2.<android.os.Debug$MemoryInfo: int otherSharedClean>;

        r0.<android.os.Debug$MemoryInfo: int otherSharedClean> = $i24;

        $i25 = r2.<android.os.Debug$MemoryInfo: int otherSwappedOut>;

        r0.<android.os.Debug$MemoryInfo: int otherSwappedOut> = $i25;

        $i26 = r2.<android.os.Debug$MemoryInfo: int otherSwappedOutPss>;

        r0.<android.os.Debug$MemoryInfo: int otherSwappedOutPss> = $i26;

        $z0 = r2.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        r0.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss> = $z0;

        r3 = r2.<android.os.Debug$MemoryInfo: int[] otherStats>;

        r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i27 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, 0, $i27);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.Debug$MemoryInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28;
        boolean $z0;
        int[] $r2;

        r0 := @this: android.os.Debug$MemoryInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikPss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.os.Debug$MemoryInfo: int dalvikSwappablePss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.os.Debug$MemoryInfo: int dalvikRss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $i7 = r0.<android.os.Debug$MemoryInfo: int dalvikSharedClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i8 = r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        $i9 = r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        $i10 = r0.<android.os.Debug$MemoryInfo: int nativePss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i10);

        $i11 = r0.<android.os.Debug$MemoryInfo: int nativeSwappablePss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        $i12 = r0.<android.os.Debug$MemoryInfo: int nativeRss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $i13 = r0.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i13);

        $i14 = r0.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $i15 = r0.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $i16 = r0.<android.os.Debug$MemoryInfo: int nativeSharedClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i16);

        $i17 = r0.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i17);

        $i18 = r0.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i18);

        $i19 = r0.<android.os.Debug$MemoryInfo: int otherPss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i19);

        $i20 = r0.<android.os.Debug$MemoryInfo: int otherSwappablePss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i20);

        $i21 = r0.<android.os.Debug$MemoryInfo: int otherRss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        $i22 = r0.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i22);

        $i23 = r0.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i23);

        $i24 = r0.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i24);

        $i25 = r0.<android.os.Debug$MemoryInfo: int otherSharedClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i25);

        $i26 = r0.<android.os.Debug$MemoryInfo: int otherSwappedOut>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i26);

        $z0 = r0.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        i28 = (int) $z0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i28);

        $i27 = r0.<android.os.Debug$MemoryInfo: int otherSwappedOutPss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i27);

        $r2 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r2);

        return;
    }
}
