public class android.os.Environment extends java.lang.Object
{
    private static final long DEFAULT_SCOPED_STORAGE;
    public static java.lang.String DIRECTORY_ALARMS;
    public static final java.lang.String DIRECTORY_ANDROID;
    public static java.lang.String DIRECTORY_AUDIOBOOKS;
    public static java.lang.String DIRECTORY_DCIM;
    public static java.lang.String DIRECTORY_DOCUMENTS;
    public static java.lang.String DIRECTORY_DOWNLOADS;
    public static java.lang.String DIRECTORY_MOVIES;
    public static java.lang.String DIRECTORY_MUSIC;
    public static java.lang.String DIRECTORY_NOTIFICATIONS;
    public static java.lang.String DIRECTORY_PICTURES;
    public static java.lang.String DIRECTORY_PODCASTS;
    public static java.lang.String DIRECTORY_RINGTONES;
    public static java.lang.String DIRECTORY_SCREENSHOTS;
    public static final java.lang.String DIR_ANDROID;
    private static final java.io.File DIR_ANDROID_DATA;
    private static final java.io.File DIR_ANDROID_EXPAND;
    private static final java.io.File DIR_ANDROID_ROOT;
    private static final java.io.File DIR_ANDROID_STORAGE;
    private static final java.io.File DIR_APEX_ROOT;
    private static final java.lang.String DIR_CACHE;
    private static final java.lang.String DIR_DATA;
    private static final java.io.File DIR_DOWNLOAD_CACHE;
    private static final java.lang.String DIR_FILES;
    private static final java.lang.String DIR_MEDIA;
    private static final java.lang.String DIR_OBB;
    private static final java.io.File DIR_ODM_ROOT;
    private static final java.io.File DIR_OEM_ROOT;
    private static final java.io.File DIR_PRODUCT_ROOT;
    private static final java.io.File DIR_SYSTEM_EXT_ROOT;
    private static final java.io.File DIR_VENDOR_ROOT;
    private static final java.lang.String ENV_ANDROID_DATA;
    private static final java.lang.String ENV_ANDROID_EXPAND;
    private static final java.lang.String ENV_ANDROID_ROOT;
    private static final java.lang.String ENV_ANDROID_STORAGE;
    private static final java.lang.String ENV_APEX_ROOT;
    private static final java.lang.String ENV_DOWNLOAD_CACHE;
    private static final java.lang.String ENV_EXTERNAL_STORAGE;
    private static final java.lang.String ENV_ODM_ROOT;
    private static final java.lang.String ENV_OEM_ROOT;
    private static final java.lang.String ENV_PRODUCT_ROOT;
    private static final java.lang.String ENV_SYSTEM_EXT_ROOT;
    private static final java.lang.String ENV_VENDOR_ROOT;
    private static final long FORCE_ENABLE_SCOPED_STORAGE;
    public static final int HAS_ALARMS;
    public static final int HAS_ANDROID;
    public static final int HAS_AUDIOBOOKS;
    public static final int HAS_DCIM;
    public static final int HAS_DOCUMENTS;
    public static final int HAS_DOWNLOADS;
    public static final int HAS_MOVIES;
    public static final int HAS_MUSIC;
    public static final int HAS_NOTIFICATIONS;
    public static final int HAS_OTHER;
    public static final int HAS_PICTURES;
    public static final int HAS_PODCASTS;
    public static final int HAS_RINGTONES;
    public static final java.lang.String MEDIA_BAD_REMOVAL;
    public static final java.lang.String MEDIA_CHECKING;
    public static final java.lang.String MEDIA_EJECTING;
    public static final java.lang.String MEDIA_MOUNTED;
    public static final java.lang.String MEDIA_MOUNTED_READ_ONLY;
    public static final java.lang.String MEDIA_NOFS;
    public static final java.lang.String MEDIA_REMOVED;
    public static final java.lang.String MEDIA_SHARED;
    public static final java.lang.String MEDIA_UNKNOWN;
    public static final java.lang.String MEDIA_UNMOUNTABLE;
    public static final java.lang.String MEDIA_UNMOUNTED;
    public static final java.lang.String[] STANDARD_DIRECTORIES;
    private static final java.lang.String TAG;
    private static android.os.Environment$UserEnvironment sCurrentUser;
    private static boolean sUserRequired;

    static void <clinit>()
    {
        java.io.File $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.String[] $r11;

        <android.os.Environment: java.lang.String TAG> = "Environment";

        <android.os.Environment: java.lang.String MEDIA_UNMOUNTED> = "unmounted";

        <android.os.Environment: java.lang.String MEDIA_UNMOUNTABLE> = "unmountable";

        <android.os.Environment: java.lang.String MEDIA_UNKNOWN> = "unknown";

        <android.os.Environment: java.lang.String MEDIA_SHARED> = "shared";

        <android.os.Environment: java.lang.String MEDIA_REMOVED> = "removed";

        <android.os.Environment: java.lang.String MEDIA_NOFS> = "nofs";

        <android.os.Environment: java.lang.String MEDIA_MOUNTED_READ_ONLY> = "mounted_ro";

        <android.os.Environment: java.lang.String MEDIA_MOUNTED> = "mounted";

        <android.os.Environment: java.lang.String MEDIA_EJECTING> = "ejecting";

        <android.os.Environment: java.lang.String MEDIA_CHECKING> = "checking";

        <android.os.Environment: java.lang.String MEDIA_BAD_REMOVAL> = "bad_removal";

        <android.os.Environment: int HAS_RINGTONES> = 4;

        <android.os.Environment: int HAS_PODCASTS> = 2;

        <android.os.Environment: int HAS_PICTURES> = 32;

        <android.os.Environment: int HAS_OTHER> = 131072;

        <android.os.Environment: int HAS_NOTIFICATIONS> = 16;

        <android.os.Environment: int HAS_MUSIC> = 1;

        <android.os.Environment: int HAS_MOVIES> = 64;

        <android.os.Environment: int HAS_DOWNLOADS> = 128;

        <android.os.Environment: int HAS_DOCUMENTS> = 512;

        <android.os.Environment: int HAS_DCIM> = 256;

        <android.os.Environment: int HAS_AUDIOBOOKS> = 1024;

        <android.os.Environment: int HAS_ANDROID> = 65536;

        <android.os.Environment: int HAS_ALARMS> = 8;

        <android.os.Environment: long FORCE_ENABLE_SCOPED_STORAGE> = 132649864L;

        <android.os.Environment: java.lang.String ENV_VENDOR_ROOT> = "VENDOR_ROOT";

        <android.os.Environment: java.lang.String ENV_SYSTEM_EXT_ROOT> = "SYSTEM_EXT_ROOT";

        <android.os.Environment: java.lang.String ENV_PRODUCT_ROOT> = "PRODUCT_ROOT";

        <android.os.Environment: java.lang.String ENV_OEM_ROOT> = "OEM_ROOT";

        <android.os.Environment: java.lang.String ENV_ODM_ROOT> = "ODM_ROOT";

        <android.os.Environment: java.lang.String ENV_EXTERNAL_STORAGE> = "EXTERNAL_STORAGE";

        <android.os.Environment: java.lang.String ENV_DOWNLOAD_CACHE> = "DOWNLOAD_CACHE";

        <android.os.Environment: java.lang.String ENV_APEX_ROOT> = "APEX_ROOT";

        <android.os.Environment: java.lang.String ENV_ANDROID_STORAGE> = "ANDROID_STORAGE";

        <android.os.Environment: java.lang.String ENV_ANDROID_ROOT> = "ANDROID_ROOT";

        <android.os.Environment: java.lang.String ENV_ANDROID_EXPAND> = "ANDROID_EXPAND";

        <android.os.Environment: java.lang.String ENV_ANDROID_DATA> = "ANDROID_DATA";

        <android.os.Environment: java.lang.String DIR_OBB> = "obb";

        <android.os.Environment: java.lang.String DIR_MEDIA> = "media";

        <android.os.Environment: java.lang.String DIR_FILES> = "files";

        <android.os.Environment: java.lang.String DIR_DATA> = "data";

        <android.os.Environment: java.lang.String DIR_CACHE> = "cache";

        <android.os.Environment: java.lang.String DIR_ANDROID> = "Android";

        <android.os.Environment: java.lang.String DIRECTORY_ANDROID> = "Android";

        <android.os.Environment: long DEFAULT_SCOPED_STORAGE> = 149924527L;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("ANDROID_ROOT", "/system");

        <android.os.Environment: java.io.File DIR_ANDROID_ROOT> = $r0;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("ANDROID_DATA", "/data");

        <android.os.Environment: java.io.File DIR_ANDROID_DATA> = $r1;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("ANDROID_EXPAND", "/mnt/expand");

        <android.os.Environment: java.io.File DIR_ANDROID_EXPAND> = $r2;

        $r3 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("ANDROID_STORAGE", "/storage");

        <android.os.Environment: java.io.File DIR_ANDROID_STORAGE> = $r3;

        $r4 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("DOWNLOAD_CACHE", "/cache");

        <android.os.Environment: java.io.File DIR_DOWNLOAD_CACHE> = $r4;

        $r5 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("OEM_ROOT", "/oem");

        <android.os.Environment: java.io.File DIR_OEM_ROOT> = $r5;

        $r6 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("ODM_ROOT", "/odm");

        <android.os.Environment: java.io.File DIR_ODM_ROOT> = $r6;

        $r7 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("VENDOR_ROOT", "/vendor");

        <android.os.Environment: java.io.File DIR_VENDOR_ROOT> = $r7;

        $r8 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("PRODUCT_ROOT", "/product");

        <android.os.Environment: java.io.File DIR_PRODUCT_ROOT> = $r8;

        $r9 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("SYSTEM_EXT_ROOT", "/system_ext");

        <android.os.Environment: java.io.File DIR_SYSTEM_EXT_ROOT> = $r9;

        $r10 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("APEX_ROOT", "/apex");

        <android.os.Environment: java.io.File DIR_APEX_ROOT> = $r10;

        staticinvoke <android.os.Environment: void initForCurrentUser()>();

        <android.os.Environment: java.lang.String DIRECTORY_MUSIC> = "Music";

        <android.os.Environment: java.lang.String DIRECTORY_PODCASTS> = "Podcasts";

        <android.os.Environment: java.lang.String DIRECTORY_RINGTONES> = "Ringtones";

        <android.os.Environment: java.lang.String DIRECTORY_ALARMS> = "Alarms";

        <android.os.Environment: java.lang.String DIRECTORY_NOTIFICATIONS> = "Notifications";

        <android.os.Environment: java.lang.String DIRECTORY_PICTURES> = "Pictures";

        <android.os.Environment: java.lang.String DIRECTORY_MOVIES> = "Movies";

        <android.os.Environment: java.lang.String DIRECTORY_DOWNLOADS> = "Download";

        <android.os.Environment: java.lang.String DIRECTORY_DCIM> = "DCIM";

        <android.os.Environment: java.lang.String DIRECTORY_DOCUMENTS> = "Documents";

        <android.os.Environment: java.lang.String DIRECTORY_SCREENSHOTS> = "Screenshots";

        <android.os.Environment: java.lang.String DIRECTORY_AUDIOBOOKS> = "Audiobooks";

        $r11 = newarray (java.lang.String)[11];

        $r11[0] = "Music";

        $r11[1] = "Podcasts";

        $r11[2] = "Ringtones";

        $r11[3] = "Alarms";

        $r11[4] = "Notifications";

        $r11[5] = "Pictures";

        $r11[6] = "Movies";

        $r11[7] = "Download";

        $r11[8] = "DCIM";

        $r11[9] = "Documents";

        $r11[10] = "Audiobooks";

        <android.os.Environment: java.lang.String[] STANDARD_DIRECTORIES> = $r11;

        return;
    }

    public void <init>()
    {
        android.os.Environment r0;

        r0 := @this: android.os.Environment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void addCanonicalFile(java.util.List, java.io.File)
    {
        java.util.List r0;
        java.io.File r1, $r4;
        java.lang.Throwable $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r11;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.io.File;

     label1:
        $r4 = virtualinvoke r1.<java.io.File: java.io.File getCanonicalFile()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Environment", $r11);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>(r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.io.File[] buildExternalStorageAndroidDataDirs()
    {
        android.os.Environment$UserEnvironment $r0;
        java.io.File[] $r1;

        staticinvoke <android.os.Environment: void throwIfUserRequired()>();

        $r0 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r1 = virtualinvoke $r0.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAndroidDataDirs()>();

        return $r1;
    }

    public static java.io.File[] buildExternalStorageAndroidObbDirs()
    {
        android.os.Environment$UserEnvironment $r0;
        java.io.File[] $r1;

        staticinvoke <android.os.Environment: void throwIfUserRequired()>();

        $r0 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r1 = virtualinvoke $r0.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAndroidObbDirs()>();

        return $r1;
    }

    public static java.io.File[] buildExternalStorageAppCacheDirs(java.lang.String)
    {
        java.lang.String r0;
        android.os.Environment$UserEnvironment $r1;
        java.io.File[] $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.Environment: void throwIfUserRequired()>();

        $r1 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r2 = virtualinvoke $r1.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppCacheDirs(java.lang.String)>(r0);

        return $r2;
    }

    public static java.io.File[] buildExternalStorageAppDataDirs(java.lang.String)
    {
        java.lang.String r0;
        android.os.Environment$UserEnvironment $r1;
        java.io.File[] $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.Environment: void throwIfUserRequired()>();

        $r1 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r2 = virtualinvoke $r1.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppDataDirs(java.lang.String)>(r0);

        return $r2;
    }

    public static java.io.File[] buildExternalStorageAppFilesDirs(java.lang.String)
    {
        java.lang.String r0;
        android.os.Environment$UserEnvironment $r1;
        java.io.File[] $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.Environment: void throwIfUserRequired()>();

        $r1 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r2 = virtualinvoke $r1.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppFilesDirs(java.lang.String)>(r0);

        return $r2;
    }

    public static java.io.File[] buildExternalStorageAppMediaDirs(java.lang.String)
    {
        java.lang.String r0;
        android.os.Environment$UserEnvironment $r1;
        java.io.File[] $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.Environment: void throwIfUserRequired()>();

        $r1 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r2 = virtualinvoke $r1.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppMediaDirs(java.lang.String)>(r0);

        return $r2;
    }

    public static java.io.File[] buildExternalStorageAppObbDirs(java.lang.String)
    {
        java.lang.String r0;
        android.os.Environment$UserEnvironment $r1;
        java.io.File[] $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.Environment: void throwIfUserRequired()>();

        $r1 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r2 = virtualinvoke $r1.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppObbDirs(java.lang.String)>(r0);

        return $r2;
    }

    public static java.io.File[] buildExternalStoragePublicDirs(java.lang.String)
    {
        java.lang.String r0;
        android.os.Environment$UserEnvironment $r1;
        java.io.File[] $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.Environment: void throwIfUserRequired()>();

        $r1 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r2 = virtualinvoke $r1.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStoragePublicDirs(java.lang.String)>(r0);

        return $r2;
    }

    public static transient java.io.File buildPath(java.io.File, java.lang.String[])
    {
        java.lang.String[] r0;
        int i0, i1;
        java.lang.String r1;
        java.io.File $r2, $r3, r4;

        r4 := @parameter0: java.io.File;

        r0 := @parameter1: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r1 = r0[i1];

        if r4 != null goto label2;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);

        r4 = $r3;

        goto label3;

     label2:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, r1);

        r4 = $r2;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r4;
    }

    public static transient java.io.File[] buildPaths(java.io.File[], java.lang.String[])
    {
        java.io.File[] r0, r2;
        java.lang.String[] r1;
        int $i0, $i1, i2;
        java.io.File $r3, $r4;

        r0 := @parameter0: java.io.File[];

        r1 := @parameter1: java.lang.String[];

        $i0 = lengthof r0;

        r2 = newarray (java.io.File)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r3 = r0[i2];

        $r4 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r3, r1);

        r2[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public static int classifyExternalStorageDirectory(java.io.File)
    {
        int i0, i1, i2, i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, r15;
        java.io.File r12, r14;
        java.io.File[] r13;

        r12 := @parameter0: java.io.File;

        i1 = 0;

        r13 = staticinvoke <android.os.FileUtils: java.io.File[] listFilesOrEmpty(java.io.File)>(r12);

        i0 = lengthof r13;

        i2 = 0;

     label01:
        if i2 >= i0 goto label16;

        r14 = r13[i2];

        $z0 = virtualinvoke r14.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label02;

        $z15 = staticinvoke <android.os.Environment: boolean isInterestingFile(java.io.File)>(r14);

        if $z15 == 0 goto label02;

        i3 = i1 | 131072;

        goto label15;

     label02:
        i3 = i1;

        $z1 = virtualinvoke r14.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label15;

        i3 = i1;

        $z2 = staticinvoke <android.os.Environment: boolean hasInterestingFiles(java.io.File)>(r14);

        if $z2 == 0 goto label15;

        r15 = virtualinvoke r14.<java.io.File: java.lang.String getName()>();

        $r0 = <android.os.Environment: java.lang.String DIRECTORY_MUSIC>;

        $z3 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z3 == 0 goto label03;

        i3 = i1 | 1;

        goto label15;

     label03:
        $r1 = <android.os.Environment: java.lang.String DIRECTORY_PODCASTS>;

        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z4 == 0 goto label04;

        i3 = i1 | 2;

        goto label15;

     label04:
        $r2 = <android.os.Environment: java.lang.String DIRECTORY_RINGTONES>;

        $z5 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z5 == 0 goto label05;

        i3 = i1 | 4;

        goto label15;

     label05:
        $r3 = <android.os.Environment: java.lang.String DIRECTORY_ALARMS>;

        $z6 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z6 == 0 goto label06;

        i3 = i1 | 8;

        goto label15;

     label06:
        $r4 = <android.os.Environment: java.lang.String DIRECTORY_NOTIFICATIONS>;

        $z7 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z7 == 0 goto label07;

        i3 = i1 | 16;

        goto label15;

     label07:
        $r5 = <android.os.Environment: java.lang.String DIRECTORY_PICTURES>;

        $z8 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z8 == 0 goto label08;

        i3 = i1 | 32;

        goto label15;

     label08:
        $r6 = <android.os.Environment: java.lang.String DIRECTORY_MOVIES>;

        $z9 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z9 == 0 goto label09;

        i3 = i1 | 64;

        goto label15;

     label09:
        $r7 = <android.os.Environment: java.lang.String DIRECTORY_DOWNLOADS>;

        $z10 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z10 == 0 goto label10;

        i3 = i1 | 128;

        goto label15;

     label10:
        $r8 = <android.os.Environment: java.lang.String DIRECTORY_DCIM>;

        $z11 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z11 == 0 goto label11;

        i3 = i1 | 256;

        goto label15;

     label11:
        $r9 = <android.os.Environment: java.lang.String DIRECTORY_DOCUMENTS>;

        $z12 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z12 == 0 goto label12;

        i3 = i1 | 512;

        goto label15;

     label12:
        $r10 = <android.os.Environment: java.lang.String DIRECTORY_AUDIOBOOKS>;

        $z13 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z13 == 0 goto label13;

        i3 = i1 | 1024;

        goto label15;

     label13:
        $r11 = "Android";

        $z14 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z14 == 0 goto label14;

        i3 = i1 | 65536;

        goto label15;

     label14:
        i3 = i1 | 131072;

     label15:
        i2 = i2 + 1;

        i1 = i3;

        goto label01;

     label16:
        return i1;
    }

    public static java.io.File getApexDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_APEX_ROOT>;

        return $r0;
    }

    public static java.io.File getDataAppDirectory(java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory(java.lang.String)>(r0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "app");

        return $r1;
    }

    public static java.io.File getDataDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_ANDROID_DATA>;

        return $r0;
    }

    public static java.io.File getDataDirectory(java.lang.String)
    {
        java.lang.String r0, $r6;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.io.File $r5, $r7;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r7 = <android.os.Environment: java.io.File DIR_ANDROID_DATA>;

        return $r7;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/mnt/expand/");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new java.io.File;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);

        return $r5;
    }

    public static java.io.File getDataMiscCeDirectory()
    {
        java.io.File $r0, $r2;
        java.lang.String[] $r1;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "misc_ce";

        $r2 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r2;
    }

    public static java.io.File getDataMiscCeDirectory(int)
    {
        int i0;
        java.io.File $r0, $r3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "misc_ce";

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r1[1] = $r2;

        $r3 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r3;
    }

    public static java.io.File getDataMiscDeDirectory(int)
    {
        int i0;
        java.io.File $r0, $r3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "misc_de";

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r1[1] = $r2;

        $r3 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r3;
    }

    public static java.io.File getDataMiscDirectory()
    {
        java.io.File $r0, $r1;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "misc");

        return $r0;
    }

    public static java.io.File getDataPreloadsAppsDirectory()
    {
        java.io.File $r0, $r1;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataPreloadsDirectory()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "apps");

        return $r0;
    }

    public static java.io.File getDataPreloadsDemoDirectory()
    {
        java.io.File $r0, $r1;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataPreloadsDirectory()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "demo");

        return $r0;
    }

    public static java.io.File getDataPreloadsDirectory()
    {
        java.io.File $r0, $r1;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "preloads");

        return $r0;
    }

    public static java.io.File getDataPreloadsFileCacheDirectory()
    {
        java.io.File $r0, $r1;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataPreloadsDirectory()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "file_cache");

        return $r0;
    }

    public static java.io.File getDataPreloadsFileCacheDirectory(java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataPreloadsFileCacheDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, r0);

        return $r1;
    }

    public static java.io.File getDataPreloadsMediaDirectory()
    {
        java.io.File $r0, $r1;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataPreloadsDirectory()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "media");

        return $r0;
    }

    private static java.io.File getDataProfilesDeDirectory(int)
    {
        int i0;
        java.io.File $r0, $r3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = newarray (java.lang.String)[4];

        $r1[0] = "misc";

        $r1[1] = "profiles";

        $r1[2] = "cur";

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r1[3] = $r2;

        $r3 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r3;
    }

    public static java.io.File getDataProfilesDePackageDirectory(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        java.io.File $r1, $r3;
        java.lang.String[] $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataProfilesDeDirectory(int)>(i0);

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = r0;

        $r3 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r1, $r2);

        return $r3;
    }

    public static java.io.File getDataRefProfilesDePackageDirectory(java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1, $r3;
        java.lang.String[] $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "misc";

        $r2[1] = "profiles";

        $r2[2] = "ref";

        $r2[3] = r0;

        $r3 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r1, $r2);

        return $r3;
    }

    public static java.io.File getDataStagingDirectory(java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory(java.lang.String)>(r0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "app-staging");

        return $r1;
    }

    public static java.io.File getDataSystemCeDirectory()
    {
        java.io.File $r0, $r2;
        java.lang.String[] $r1;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "system_ce";

        $r2 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r2;
    }

    public static java.io.File getDataSystemCeDirectory(int)
    {
        int i0;
        java.io.File $r0, $r3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "system_ce";

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r1[1] = $r2;

        $r3 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r3;
    }

    public static java.io.File getDataSystemDeDirectory()
    {
        java.io.File $r0, $r2;
        java.lang.String[] $r1;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "system_de";

        $r2 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r2;
    }

    public static java.io.File getDataSystemDeDirectory(int)
    {
        int i0;
        java.io.File $r0, $r3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "system_de";

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r1[1] = $r2;

        $r3 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r3;
    }

    public static java.io.File getDataSystemDirectory()
    {
        java.io.File $r0, $r1;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "system");

        return $r0;
    }

    public static java.io.File getDataUserCeDirectory(java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory(java.lang.String)>(r0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "user");

        return $r1;
    }

    public static java.io.File getDataUserCeDirectory(java.lang.String, int)
    {
        java.lang.String r0, $r3;
        int i0;
        java.io.File $r1, $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataUserCeDirectory(java.lang.String)>(r0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3);

        return $r1;
    }

    public static java.io.File getDataUserCePackageDirectory(java.lang.String, int, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0;
        java.io.File $r2, $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getDataUserCeDirectory(java.lang.String,int)>(r0, i0);

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r1);

        return $r2;
    }

    public static java.io.File getDataUserDeDirectory(java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory(java.lang.String)>(r0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "user_de");

        return $r1;
    }

    public static java.io.File getDataUserDeDirectory(java.lang.String, int)
    {
        java.lang.String r0, $r3;
        int i0;
        java.io.File $r1, $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataUserDeDirectory(java.lang.String)>(r0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3);

        return $r1;
    }

    public static java.io.File getDataUserDePackageDirectory(java.lang.String, int, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0;
        java.io.File $r2, $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getDataUserDeDirectory(java.lang.String,int)>(r0, i0);

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r1);

        return $r2;
    }

    public static java.io.File getDataVendorCeDirectory(int)
    {
        int i0;
        java.io.File $r0, $r3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "vendor_ce";

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r1[1] = $r2;

        $r3 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r3;
    }

    public static java.io.File getDataVendorDeDirectory(int)
    {
        int i0;
        java.io.File $r0, $r3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "vendor_de";

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r1[1] = $r2;

        $r3 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r3;
    }

    static java.io.File getDirectory(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r2, r3;
        java.io.File r1;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r2);

        r1 = new java.io.File;

        if r3 != null goto label1;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>(r0);

        goto label2;

     label1:
        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>(r3);

     label2:
        return r1;
    }

    public static java.io.File getDownloadCacheDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_DOWNLOAD_CACHE>;

        return $r0;
    }

    public static java.io.File getExpandDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_ANDROID_EXPAND>;

        return $r0;
    }

    public static java.io.File getExternalStorageDirectory()
    {
        android.os.Environment$UserEnvironment $r0;
        java.io.File[] $r1;
        java.io.File $r2;

        staticinvoke <android.os.Environment: void throwIfUserRequired()>();

        $r0 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r1 = virtualinvoke $r0.<android.os.Environment$UserEnvironment: java.io.File[] getExternalDirs()>();

        $r2 = $r1[0];

        return $r2;
    }

    public static java.io.File getExternalStoragePublicDirectory(java.lang.String)
    {
        java.lang.String r0;
        android.os.Environment$UserEnvironment $r1;
        java.io.File[] $r2;
        java.io.File $r3;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.Environment: void throwIfUserRequired()>();

        $r1 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r2 = virtualinvoke $r1.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStoragePublicDirs(java.lang.String)>(r0);

        $r3 = $r2[0];

        return $r3;
    }

    public static java.lang.String getExternalStorageState()
    {
        android.os.Environment$UserEnvironment $r0;
        java.io.File[] $r1;
        java.io.File $r2;
        java.lang.String $r3;

        $r0 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r1 = virtualinvoke $r0.<android.os.Environment$UserEnvironment: java.io.File[] getExternalDirs()>();

        $r2 = $r1[0];

        $r3 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState(java.io.File)>($r2);

        return $r3;
    }

    public static java.lang.String getExternalStorageState(java.io.File)
    {
        int $i0;
        java.lang.String $r0;
        java.io.File r1;
        android.os.storage.StorageVolume r2;

        r1 := @parameter0: java.io.File;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r2 = staticinvoke <android.os.storage.StorageManager: android.os.storage.StorageVolume getStorageVolume(java.io.File,int)>(r1, $i0);

        if r2 == null goto label1;

        $r0 = virtualinvoke r2.<android.os.storage.StorageVolume: java.lang.String getState()>();

        return $r0;

     label1:
        return "unknown";
    }

    public static java.util.Collection getInternalMediaDirectories()
    {
        java.util.ArrayList $r1;
        java.io.File $r2, $r3, $r4, $r5, $r6, $r7;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "media");

        staticinvoke <android.os.Environment: void addCanonicalFile(java.util.List,java.io.File)>($r1, $r2);

        $r4 = new java.io.File;

        $r5 = staticinvoke <android.os.Environment: java.io.File getOemDirectory()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "media");

        staticinvoke <android.os.Environment: void addCanonicalFile(java.util.List,java.io.File)>($r1, $r4);

        $r6 = new java.io.File;

        $r7 = staticinvoke <android.os.Environment: java.io.File getProductDirectory()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "media");

        staticinvoke <android.os.Environment: void addCanonicalFile(java.util.List,java.io.File)>($r1, $r6);

        return $r1;
    }

    public static java.io.File getLegacyExternalStorageDirectory()
    {
        java.io.File $r0;
        java.lang.String $r1;

        $r0 = new java.io.File;

        $r1 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("EXTERNAL_STORAGE");

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    public static java.io.File getLegacyExternalStorageObbDirectory()
    {
        java.io.File $r0, $r2;
        java.lang.String[] $r1;

        $r0 = staticinvoke <android.os.Environment: java.io.File getLegacyExternalStorageDirectory()>();

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "Android";

        $r1[1] = "obb";

        $r2 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r0, $r1);

        return $r2;
    }

    public static java.io.File getOdmDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_ODM_ROOT>;

        return $r0;
    }

    public static java.io.File getOemDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_OEM_ROOT>;

        return $r0;
    }

    public static java.io.File getPackageCacheDirectory()
    {
        java.io.File $r0, $r1;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataSystemDirectory()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "package_cache");

        return $r0;
    }

    public static java.io.File getProductDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_PRODUCT_ROOT>;

        return $r0;
    }

    public static java.io.File getProductServicesDirectory()
    {
        java.io.File $r0;

        $r0 = staticinvoke <android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>("PRODUCT_SERVICES_ROOT", "/product_services");

        return $r0;
    }

    public static java.io.File getRootDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_ANDROID_ROOT>;

        return $r0;
    }

    public static java.io.File getStorageDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_ANDROID_STORAGE>;

        return $r0;
    }

    public static java.lang.String getStorageState(java.io.File)
    {
        java.io.File r0;
        java.lang.String $r1;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState(java.io.File)>(r0);

        return $r1;
    }

    public static java.io.File getSystemExtDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_SYSTEM_EXT_ROOT>;

        return $r0;
    }

    public static java.io.File getUserConfigDirectory(int)
    {
        int i0;
        java.io.File $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        $r0 = new java.io.File;

        $r1 = new java.io.File;

        $r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "misc");

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "user");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r4);

        return $r0;
    }

    public static java.io.File getUserSystemDirectory(int)
    {
        int i0;
        java.io.File $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        $r0 = new java.io.File;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataSystemDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "users");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r3);

        return $r0;
    }

    public static java.io.File getVendorDirectory()
    {
        java.io.File $r0;

        $r0 = <android.os.Environment: java.io.File DIR_VENDOR_ROOT>;

        return $r0;
    }

    private static boolean hasInterestingFiles(java.io.File)
    {
        boolean z0, $z2, $z3;
        java.io.File[] r1;
        int i0, i1;
        java.util.LinkedList $r2;
        java.lang.Object $r3;
        java.io.File $r4, r5, r6;

        r5 := @parameter0: java.io.File;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r5);

     label1:
        z0 = virtualinvoke $r2.<java.util.LinkedList: boolean isEmpty()>();

        i1 = 0;

        if z0 != 0 goto label5;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pop()>();

        $r4 = (java.io.File) $r3;

        r1 = staticinvoke <android.os.FileUtils: java.io.File[] listFilesOrEmpty(java.io.File)>($r4);

        i0 = lengthof r1;

     label2:
        if i1 >= i0 goto label1;

        r6 = r1[i1];

        $z2 = staticinvoke <android.os.Environment: boolean isInterestingFile(java.io.File)>(r6);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = virtualinvoke r6.<java.io.File: boolean isDirectory()>();

        if $z3 == 0 goto label4;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r6);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        return 0;
    }

    public static void initForCurrentUser()
    {
        android.os.Environment$UserEnvironment $r0;
        int $i0;

        $r0 = new android.os.Environment$UserEnvironment;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        specialinvoke $r0.<android.os.Environment$UserEnvironment: void <init>(int)>($i0);

        <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser> = $r0;

        return;
    }

    public static boolean isExternalStorageEmulated()
    {
        android.os.Environment$UserEnvironment $r0;
        java.io.File[] $r1;
        java.io.File $r2;
        boolean $z0;

        $r0 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r1 = virtualinvoke $r0.<android.os.Environment$UserEnvironment: java.io.File[] getExternalDirs()>();

        $r2 = $r1[0];

        $z0 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated(java.io.File)>($r2);

        return $z0;
    }

    public static boolean isExternalStorageEmulated(java.io.File)
    {
        java.io.File r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        boolean $z0;
        android.os.storage.StorageVolume r6;

        r0 := @parameter0: java.io.File;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r6 = staticinvoke <android.os.storage.StorageManager: android.os.storage.StorageVolume getStorageVolume(java.io.File,int)>(r0, $i0);

        if r6 == null goto label1;

        $z0 = virtualinvoke r6.<android.os.storage.StorageVolume: boolean isEmulated()>();

        return $z0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find storage device at ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static boolean isExternalStorageLegacy()
    {
        android.os.Environment$UserEnvironment $r0;
        java.io.File[] $r1;
        java.io.File $r2;
        boolean $z0;

        $r0 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r1 = virtualinvoke $r0.<android.os.Environment$UserEnvironment: java.io.File[] getExternalDirs()>();

        $r2 = $r1[0];

        $z0 = staticinvoke <android.os.Environment: boolean isExternalStorageLegacy(java.io.File)>($r2);

        return $z0;
    }

    public static boolean isExternalStorageLegacy(java.io.File)
    {
        int i0, $i1;
        boolean z0, $z1, $z2, $z3, z4, z5, z6;
        android.content.pm.ApplicationInfo $r0;
        android.content.pm.PackageManager $r1;
        java.lang.Object $r2;
        android.app.AppOpsManager $r3;
        java.lang.String $r4;
        java.io.File r5;
        android.app.Application r6;

        r5 := @parameter0: java.io.File;

        r6 = staticinvoke <android.app.AppGlobals: android.app.Application getInitialApplication()>();

        $r0 = virtualinvoke r6.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r0.<android.content.pm.ApplicationInfo: int uid>;

        z4 = staticinvoke <android.os.Process: boolean isIsolated(int)>(i0);

        z5 = 0;

        if z4 == 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z1 = virtualinvoke $r1.<android.content.pm.PackageManager: boolean isInstantApp()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        z6 = staticinvoke <android.compat.Compatibility: boolean isChangeEnabled(long)>(149924527L);

        z0 = staticinvoke <android.compat.Compatibility: boolean isChangeEnabled(long)>(132649864L);

        $z2 = staticinvoke <android.os.Environment: boolean isScopedStorageEnforced(boolean,boolean)>(z6, z0);

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $z3 = staticinvoke <android.os.Environment: boolean isScopedStorageDisabled(boolean,boolean)>(z6, z0);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $r2 = virtualinvoke r6.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r3 = (android.app.AppOpsManager) $r2;

        $r4 = virtualinvoke r6.<android.content.Context: java.lang.String getOpPackageName()>();

        $i1 = virtualinvoke $r3.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(87, i0, $r4);

        if $i1 != 0 goto label5;

        z5 = 1;

     label5:
        return z5;
    }

    public static boolean isExternalStorageManager()
    {
        android.os.Environment$UserEnvironment $r0;
        java.io.File[] $r1;
        java.io.File $r2;
        boolean $z0;

        $r0 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r1 = virtualinvoke $r0.<android.os.Environment$UserEnvironment: java.io.File[] getExternalDirs()>();

        $r2 = $r1[0];

        $z0 = staticinvoke <android.os.Environment: boolean isExternalStorageManager(java.io.File)>($r2);

        return $z0;
    }

    public static boolean isExternalStorageManager(java.io.File)
    {
        java.lang.String r0, $r9, r13;
        int i0, i1, $i2, $i3;
        android.content.pm.ApplicationInfo $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.lang.IllegalStateException $r8;
        java.io.File r10;
        android.app.Application r11;
        android.content.Context r12;
        android.app.AppOpsManager r14;
        boolean z0;

        r10 := @parameter0: java.io.File;

        r11 = staticinvoke <android.app.AppGlobals: android.app.Application getInitialApplication()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r11);

        r12 = (android.content.Context) r11;

        r13 = virtualinvoke r12.<android.content.Context: java.lang.String getPackageName()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r13);

        r0 = (java.lang.String) r13;

        $r3 = virtualinvoke r12.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $r4 = virtualinvoke r12.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        r14 = (android.app.AppOpsManager) $r4;

        i1 = virtualinvoke r14.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(92, i0, r0);

        z0 = 1;

        if i1 == 0 goto label5;

        if i1 == 1 goto label4;

        if i1 == 2 goto label4;

        if i1 != 3 goto label3;

        $i2 = staticinvoke <android.os.Process: int myPid()>();

        $i3 = virtualinvoke r12.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.MANAGE_EXTERNAL_STORAGE", $i2, i0);

        if $i3 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown AppOpsManager mode ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label4:
        return 0;

     label5:
        return 1;
    }

    public static boolean isExternalStorageRemovable()
    {
        android.os.Environment$UserEnvironment $r0;
        java.io.File[] $r1;
        java.io.File $r2;
        boolean $z0;

        $r0 = <android.os.Environment: android.os.Environment$UserEnvironment sCurrentUser>;

        $r1 = virtualinvoke $r0.<android.os.Environment$UserEnvironment: java.io.File[] getExternalDirs()>();

        $r2 = $r1[0];

        $z0 = staticinvoke <android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>($r2);

        return $z0;
    }

    public static boolean isExternalStorageRemovable(java.io.File)
    {
        java.io.File r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        boolean $z0;
        android.os.storage.StorageVolume r6;

        r0 := @parameter0: java.io.File;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r6 = staticinvoke <android.os.storage.StorageManager: android.os.storage.StorageVolume getStorageVolume(java.io.File,int)>(r0, $i0);

        if r6 == null goto label1;

        $z0 = virtualinvoke r6.<android.os.storage.StorageVolume: boolean isRemovable()>();

        return $z0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find storage device at ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    private static boolean isInterestingFile(java.io.File)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r0, r2;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label3;

        $r0 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        r2 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".exe");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("autorun.inf");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("launchpad.zip");

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(".nomedia");

        if $z4 == 0 goto label1;

        goto label2;

     label1:
        return 1;

     label2:
        return 0;

     label3:
        return 0;
    }

    private static boolean isScopedStorageDisabled(boolean, boolean)
    {
        boolean z0, z1, z2;

        z1 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        if z1 != 0 goto label1;

        if z0 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private static boolean isScopedStorageEnforced(boolean, boolean)
    {
        boolean z0, z1, z2;

        z1 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        if z1 == 0 goto label1;

        if z0 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public static boolean isStandardDirectory(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.lang.String[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 = <android.os.Environment: java.lang.String[] STANDARD_DIRECTORIES>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static java.io.File maybeTranslateEmulatedPathToInternal(java.io.File)
    {
        java.io.File r0, $r1;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <android.os.storage.StorageManager: java.io.File maybeTranslateEmulatedPathToInternal(java.io.File)>(r0);

        return $r1;
    }

    public static void setUserRequired(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <android.os.Environment: boolean sUserRequired> = z0;

        return;
    }

    private static void throwIfUserRequired()
    {
        boolean $z0;
        java.lang.Throwable $r0;

        $z0 = <android.os.Environment: boolean sUserRequired>;

        if $z0 == 0 goto label1;

        $r0 = new java.lang.Throwable;

        specialinvoke $r0.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("Environment", "Path requests must specify a user by using UserEnvironment", $r0);

     label1:
        return;
    }
}
