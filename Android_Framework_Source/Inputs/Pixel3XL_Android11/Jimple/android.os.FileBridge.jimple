public class android.os.FileBridge extends java.lang.Thread
{
    private static final int CMD_CLOSE;
    private static final int CMD_FSYNC;
    private static final int CMD_WRITE;
    private static final int MSG_LENGTH;
    private static final java.lang.String TAG;
    private final java.io.FileDescriptor mClient;
    private volatile boolean mClosed;
    private final java.io.FileDescriptor mServer;
    private java.io.FileDescriptor mTarget;

    public void <init>()
    {
        android.os.FileBridge r0;
        java.io.FileDescriptor $r2, $r3, $r4, $r5;
        int $i0, $i1;
        java.lang.Throwable $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: android.os.FileBridge;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r2 = new java.io.FileDescriptor;

        specialinvoke $r2.<java.io.FileDescriptor: void <init>()>();

        r0.<android.os.FileBridge: java.io.FileDescriptor mServer> = $r2;

        $r3 = new java.io.FileDescriptor;

        specialinvoke $r3.<java.io.FileDescriptor: void <init>()>();

        r0.<android.os.FileBridge: java.io.FileDescriptor mClient> = $r3;

     label1:
        $i1 = <android.system.OsConstants: int AF_UNIX>;

        $i0 = <android.system.OsConstants: int SOCK_STREAM>;

        $r5 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        $r4 = r0.<android.os.FileBridge: java.io.FileDescriptor mClient>;

        staticinvoke <android.system.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>($i1, $i0, 0, $r5, $r4);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed to create bridge");

        throw $r7;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public void forceClose()
    {
        android.os.FileBridge r0;
        java.io.FileDescriptor $r1, $r2, $r3;

        r0 := @this: android.os.FileBridge;

        $r1 = r0.<android.os.FileBridge: java.io.FileDescriptor mTarget>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r1);

        $r2 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r2);

        $r3 = r0.<android.os.FileBridge: java.io.FileDescriptor mClient>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r3);

        r0.<android.os.FileBridge: boolean mClosed> = 1;

        return;
    }

    public java.io.FileDescriptor getClientSocket()
    {
        android.os.FileBridge r0;
        java.io.FileDescriptor $r1;

        r0 := @this: android.os.FileBridge;

        $r1 = r0.<android.os.FileBridge: java.io.FileDescriptor mClient>;

        return $r1;
    }

    public boolean isClosed()
    {
        android.os.FileBridge r0;
        boolean $z0;

        r0 := @this: android.os.FileBridge;

        $z0 = r0.<android.os.FileBridge: boolean mClosed>;

        return $z0;
    }

    public void run()
    {
        android.os.FileBridge r0;
        int i0, $i1, $i2, $i3, i5, i6;
        java.lang.StringBuilder r1;
        java.io.FileDescriptor $r2, $r4, $r5, $r6, $r7, $r8, $r10, $r15;
        java.nio.ByteOrder $r3, $r9;
        java.lang.String $r14;
        java.lang.Throwable $r16, $r17;
        byte[] r18;
        java.io.IOException r19;

        r0 := @this: android.os.FileBridge;

        r18 = newarray (byte)[8192];

     label01:
        $r2 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        $i1 = staticinvoke <libcore.io.IoBridge: int read(java.io.FileDescriptor,byte[],int,int)>($r2, r18, 0, 8);

        if $i1 != 8 goto label18;

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        i5 = staticinvoke <libcore.io.Memory: int peekInt(byte[],int,java.nio.ByteOrder)>(r18, 0, $r3);

     label02:
        if i5 != 1 goto label11;

     label03:
        $r9 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        i6 = staticinvoke <libcore.io.Memory: int peekInt(byte[],int,java.nio.ByteOrder)>(r18, 4, $r9);

     label04:
        if i6 <= 0 goto label10;

     label05:
        $r10 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        $i2 = lengthof r18;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, i6);

        i0 = staticinvoke <libcore.io.IoBridge: int read(java.io.FileDescriptor,byte[],int,int)>($r10, r18, 0, $i3);

     label06:
        if i0 == -1 goto label09;

     label07:
        $r15 = r0.<android.os.FileBridge: java.io.FileDescriptor mTarget>;

        staticinvoke <libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)>($r15, r18, 0, i0);

     label08:
        i6 = i6 - i0;

        goto label04;

     label09:
        r19 = new java.io.IOException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected EOF; still expected ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw r19;

     label10:
        goto label17;

     label11:
        if i5 != 2 goto label14;

     label12:
        $r7 = r0.<android.os.FileBridge: java.io.FileDescriptor mTarget>;

        staticinvoke <android.system.Os: void fsync(java.io.FileDescriptor)>($r7);

        $r8 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        staticinvoke <libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)>($r8, r18, 0, 8);

     label13:
        goto label17;

     label14:
        if i5 != 3 goto label17;

     label15:
        $r4 = r0.<android.os.FileBridge: java.io.FileDescriptor mTarget>;

        staticinvoke <android.system.Os: void fsync(java.io.FileDescriptor)>($r4);

        $r5 = r0.<android.os.FileBridge: java.io.FileDescriptor mTarget>;

        staticinvoke <android.system.Os: void close(java.io.FileDescriptor)>($r5);

        r0.<android.os.FileBridge: boolean mClosed> = 1;

        $r6 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        staticinvoke <libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)>($r6, r18, 0, 8);

     label16:
        goto label18;

     label17:
        goto label01;

     label18:
        virtualinvoke r0.<android.os.FileBridge: void forceClose()>();

        goto label23;

     label19:
        $r17 := @caughtexception;

        goto label24;

     label20:
        $r16 := @caughtexception;

     label21:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("FileBridge", "Failed during bridge", $r16);

     label22:
        goto label18;

     label23:
        return;

     label24:
        virtualinvoke r0.<android.os.FileBridge: void forceClose()>();

        throw $r17;

        catch android.system.ErrnoException from label01 to label02 with label20;
        catch java.io.IOException from label01 to label02 with label20;
        catch java.lang.Throwable from label01 to label02 with label19;
        catch android.system.ErrnoException from label03 to label04 with label20;
        catch java.io.IOException from label03 to label04 with label20;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch android.system.ErrnoException from label05 to label06 with label20;
        catch java.io.IOException from label05 to label06 with label20;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch android.system.ErrnoException from label07 to label08 with label20;
        catch java.io.IOException from label07 to label08 with label20;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch android.system.ErrnoException from label09 to label10 with label20;
        catch java.io.IOException from label09 to label10 with label20;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch android.system.ErrnoException from label12 to label13 with label20;
        catch java.io.IOException from label12 to label13 with label20;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch android.system.ErrnoException from label15 to label16 with label20;
        catch java.io.IOException from label15 to label16 with label20;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label21 to label22 with label19;
    }

    public void setTargetFile(java.io.FileDescriptor)
    {
        android.os.FileBridge r0;
        java.io.FileDescriptor r1;

        r0 := @this: android.os.FileBridge;

        r1 := @parameter0: java.io.FileDescriptor;

        r0.<android.os.FileBridge: java.io.FileDescriptor mTarget> = r1;

        return;
    }

    public static void <clinit>()
    {
        <android.os.FileBridge: java.lang.String TAG> = "FileBridge";

        <android.os.FileBridge: int MSG_LENGTH> = 8;

        <android.os.FileBridge: int CMD_WRITE> = 1;

        <android.os.FileBridge: int CMD_FSYNC> = 2;

        <android.os.FileBridge: int CMD_CLOSE> = 3;

        return;
    }
}
